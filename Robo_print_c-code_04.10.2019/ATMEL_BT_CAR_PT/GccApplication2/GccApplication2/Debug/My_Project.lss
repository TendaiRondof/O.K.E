
My_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000230  00800100  0000601e  000060b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000601e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000059  00800330  00800330  000062e2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000062e2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00006340  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00006380  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000251e  00000000  00000000  00006460  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008fe  00000000  00000000  0000897e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001a76  00000000  00000000  0000927c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003b8  00000000  00000000  0000acf4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000685  00000000  00000000  0000b0ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007d5  00000000  00000000  0000b731  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  0000bf06  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 88 00 	jmp	0x110	; 0x110 <__ctors_end>
       4:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
       8:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
       c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      10:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      14:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      18:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      1c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      20:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      24:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      28:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      2c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      30:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      34:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      38:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      3c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      40:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      44:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      48:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      4c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      50:	0c 94 a2 01 	jmp	0x344	; 0x344 <__vector_20>
      54:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      58:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      5c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      60:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      64:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      68:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      6c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      70:	0c 94 35 02 	jmp	0x46a	; 0x46a <__vector_28>
      74:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      78:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      7c:	e7 01       	movw	r28, r14
      7e:	10 02       	muls	r17, r16
      80:	10 02       	muls	r17, r16
      82:	10 02       	muls	r17, r16
      84:	10 02       	muls	r17, r16
      86:	10 02       	muls	r17, r16
      88:	10 02       	muls	r17, r16
      8a:	10 02       	muls	r17, r16
      8c:	10 02       	muls	r17, r16
      8e:	10 02       	muls	r17, r16
      90:	10 02       	muls	r17, r16
      92:	10 02       	muls	r17, r16
      94:	10 02       	muls	r17, r16
      96:	10 02       	muls	r17, r16
      98:	10 02       	muls	r17, r16
      9a:	10 02       	muls	r17, r16
      9c:	10 02       	muls	r17, r16
      9e:	10 02       	muls	r17, r16
      a0:	10 02       	muls	r17, r16
      a2:	10 02       	muls	r17, r16
      a4:	10 02       	muls	r17, r16
      a6:	10 02       	muls	r17, r16
      a8:	10 02       	muls	r17, r16
      aa:	10 02       	muls	r17, r16
      ac:	10 02       	muls	r17, r16
      ae:	10 02       	muls	r17, r16
      b0:	10 02       	muls	r17, r16
      b2:	10 02       	muls	r17, r16
      b4:	10 02       	muls	r17, r16
      b6:	10 02       	muls	r17, r16
      b8:	10 02       	muls	r17, r16
      ba:	10 02       	muls	r17, r16
      bc:	10 02       	muls	r17, r16
      be:	10 02       	muls	r17, r16
      c0:	10 02       	muls	r17, r16
      c2:	10 02       	muls	r17, r16
      c4:	10 02       	muls	r17, r16
      c6:	10 02       	muls	r17, r16
      c8:	10 02       	muls	r17, r16
      ca:	10 02       	muls	r17, r16
      cc:	10 02       	muls	r17, r16
      ce:	10 02       	muls	r17, r16
      d0:	10 02       	muls	r17, r16
      d2:	10 02       	muls	r17, r16
      d4:	10 02       	muls	r17, r16
      d6:	10 02       	muls	r17, r16
      d8:	10 02       	muls	r17, r16
      da:	10 02       	muls	r17, r16
      dc:	10 02       	muls	r17, r16
      de:	10 02       	muls	r17, r16
      e0:	10 02       	muls	r17, r16
      e2:	10 02       	muls	r17, r16
      e4:	10 02       	muls	r17, r16
      e6:	10 02       	muls	r17, r16
      e8:	10 02       	muls	r17, r16
      ea:	d4 01       	movw	r26, r8
      ec:	06 02       	muls	r16, r22
      ee:	dc 01       	movw	r26, r24
      f0:	fe 01       	movw	r30, r28
      f2:	fa 01       	movw	r30, r20
      f4:	10 02       	muls	r17, r16
      f6:	f6 01       	movw	r30, r12
      f8:	10 02       	muls	r17, r16
      fa:	10 02       	muls	r17, r16
      fc:	10 02       	muls	r17, r16
      fe:	10 02       	muls	r17, r16
     100:	10 02       	muls	r17, r16
     102:	02 02       	muls	r16, r18
     104:	10 02       	muls	r17, r16
     106:	ed 01       	movw	r28, r26
     108:	10 02       	muls	r17, r16
     10a:	10 02       	muls	r17, r16
     10c:	10 02       	muls	r17, r16
     10e:	e3 01       	movw	r28, r6

00000110 <__ctors_end>:
     110:	11 24       	eor	r1, r1
     112:	1f be       	out	0x3f, r1	; 63
     114:	cf ef       	ldi	r28, 0xFF	; 255
     116:	d0 e1       	ldi	r29, 0x10	; 16
     118:	de bf       	out	0x3e, r29	; 62
     11a:	cd bf       	out	0x3d, r28	; 61

0000011c <__do_copy_data>:
     11c:	13 e0       	ldi	r17, 0x03	; 3
     11e:	a0 e0       	ldi	r26, 0x00	; 0
     120:	b1 e0       	ldi	r27, 0x01	; 1
     122:	ee e1       	ldi	r30, 0x1E	; 30
     124:	f0 e6       	ldi	r31, 0x60	; 96
     126:	02 c0       	rjmp	.+4      	; 0x12c <__do_copy_data+0x10>
     128:	05 90       	lpm	r0, Z+
     12a:	0d 92       	st	X+, r0
     12c:	a0 33       	cpi	r26, 0x30	; 48
     12e:	b1 07       	cpc	r27, r17
     130:	d9 f7       	brne	.-10     	; 0x128 <__do_copy_data+0xc>

00000132 <__do_clear_bss>:
     132:	23 e0       	ldi	r18, 0x03	; 3
     134:	a0 e3       	ldi	r26, 0x30	; 48
     136:	b3 e0       	ldi	r27, 0x03	; 3
     138:	01 c0       	rjmp	.+2      	; 0x13c <.do_clear_bss_start>

0000013a <.do_clear_bss_loop>:
     13a:	1d 92       	st	X+, r1

0000013c <.do_clear_bss_start>:
     13c:	a9 38       	cpi	r26, 0x89	; 137
     13e:	b2 07       	cpc	r27, r18
     140:	e1 f7       	brne	.-8      	; 0x13a <.do_clear_bss_loop>
     142:	0e 94 a8 29 	call	0x5350	; 0x5350 <main>
     146:	0c 94 0d 30 	jmp	0x601a	; 0x601a <_exit>

0000014a <__bad_interrupt>:
     14a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000014e <init_UART0>:
		snprintf(data,50,"G2204 X00 Y%d Z00 F1000\n",amount);
		to_uARM(data);
		break;
		
	}
}
     14e:	cf 93       	push	r28
     150:	df 93       	push	r29
     152:	cd b7       	in	r28, 0x3d	; 61
     154:	de b7       	in	r29, 0x3e	; 62
     156:	84 ec       	ldi	r24, 0xC4	; 196
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	20 e1       	ldi	r18, 0x10	; 16
     15c:	30 e0       	ldi	r19, 0x00	; 0
     15e:	fc 01       	movw	r30, r24
     160:	31 83       	std	Z+1, r19	; 0x01
     162:	20 83       	st	Z, r18
     164:	80 ec       	ldi	r24, 0xC0	; 192
     166:	90 e0       	ldi	r25, 0x00	; 0
     168:	20 ec       	ldi	r18, 0xC0	; 192
     16a:	30 e0       	ldi	r19, 0x00	; 0
     16c:	f9 01       	movw	r30, r18
     16e:	20 81       	ld	r18, Z
     170:	22 60       	ori	r18, 0x02	; 2
     172:	fc 01       	movw	r30, r24
     174:	20 83       	st	Z, r18
     176:	81 ec       	ldi	r24, 0xC1	; 193
     178:	90 e0       	ldi	r25, 0x00	; 0
     17a:	21 ec       	ldi	r18, 0xC1	; 193
     17c:	30 e0       	ldi	r19, 0x00	; 0
     17e:	f9 01       	movw	r30, r18
     180:	20 81       	ld	r18, Z
     182:	28 69       	ori	r18, 0x98	; 152
     184:	fc 01       	movw	r30, r24
     186:	20 83       	st	Z, r18
     188:	00 00       	nop
     18a:	df 91       	pop	r29
     18c:	cf 91       	pop	r28
     18e:	08 95       	ret

00000190 <init_UART1>:
     190:	cf 93       	push	r28
     192:	df 93       	push	r29
     194:	cd b7       	in	r28, 0x3d	; 61
     196:	de b7       	in	r29, 0x3e	; 62
     198:	8c ec       	ldi	r24, 0xCC	; 204
     19a:	90 e0       	ldi	r25, 0x00	; 0
     19c:	20 e1       	ldi	r18, 0x10	; 16
     19e:	30 e0       	ldi	r19, 0x00	; 0
     1a0:	fc 01       	movw	r30, r24
     1a2:	31 83       	std	Z+1, r19	; 0x01
     1a4:	20 83       	st	Z, r18
     1a6:	88 ec       	ldi	r24, 0xC8	; 200
     1a8:	90 e0       	ldi	r25, 0x00	; 0
     1aa:	28 ec       	ldi	r18, 0xC8	; 200
     1ac:	30 e0       	ldi	r19, 0x00	; 0
     1ae:	f9 01       	movw	r30, r18
     1b0:	20 81       	ld	r18, Z
     1b2:	22 60       	ori	r18, 0x02	; 2
     1b4:	fc 01       	movw	r30, r24
     1b6:	20 83       	st	Z, r18
     1b8:	89 ec       	ldi	r24, 0xC9	; 201
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	29 ec       	ldi	r18, 0xC9	; 201
     1be:	30 e0       	ldi	r19, 0x00	; 0
     1c0:	f9 01       	movw	r30, r18
     1c2:	20 81       	ld	r18, Z
     1c4:	28 69       	ori	r18, 0x98	; 152
     1c6:	fc 01       	movw	r30, r24
     1c8:	20 83       	st	Z, r18
     1ca:	00 00       	nop
     1cc:	df 91       	pop	r29
     1ce:	cf 91       	pop	r28
     1d0:	08 95       	ret

000001d2 <set_led_mode>:
     1d2:	cf 93       	push	r28
     1d4:	df 93       	push	r29
     1d6:	1f 92       	push	r1
     1d8:	cd b7       	in	r28, 0x3d	; 61
     1da:	de b7       	in	r29, 0x3e	; 62
     1dc:	89 83       	std	Y+1, r24	; 0x01
     1de:	0e 94 83 02 	call	0x506	; 0x506 <clear_port>
     1e2:	8b e2       	ldi	r24, 0x2B	; 43
     1e4:	90 e0       	ldi	r25, 0x00	; 0
     1e6:	2b e2       	ldi	r18, 0x2B	; 43
     1e8:	30 e0       	ldi	r19, 0x00	; 0
     1ea:	f9 01       	movw	r30, r18
     1ec:	30 81       	ld	r19, Z
     1ee:	29 81       	ldd	r18, Y+1	; 0x01
     1f0:	23 2b       	or	r18, r19
     1f2:	fc 01       	movw	r30, r24
     1f4:	20 83       	st	Z, r18
     1f6:	00 00       	nop
     1f8:	0f 90       	pop	r0
     1fa:	df 91       	pop	r29
     1fc:	cf 91       	pop	r28
     1fe:	08 95       	ret

00000200 <send_Byte_0>:
     200:	cf 93       	push	r28
     202:	df 93       	push	r29
     204:	1f 92       	push	r1
     206:	cd b7       	in	r28, 0x3d	; 61
     208:	de b7       	in	r29, 0x3e	; 62
     20a:	89 83       	std	Y+1, r24	; 0x01
     20c:	00 00       	nop
     20e:	80 ec       	ldi	r24, 0xC0	; 192
     210:	90 e0       	ldi	r25, 0x00	; 0
     212:	fc 01       	movw	r30, r24
     214:	80 81       	ld	r24, Z
     216:	88 2f       	mov	r24, r24
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	80 72       	andi	r24, 0x20	; 32
     21c:	99 27       	eor	r25, r25
     21e:	89 2b       	or	r24, r25
     220:	b1 f3       	breq	.-20     	; 0x20e <send_Byte_0+0xe>
     222:	86 ec       	ldi	r24, 0xC6	; 198
     224:	90 e0       	ldi	r25, 0x00	; 0
     226:	29 81       	ldd	r18, Y+1	; 0x01
     228:	fc 01       	movw	r30, r24
     22a:	20 83       	st	Z, r18
     22c:	00 00       	nop
     22e:	0f 90       	pop	r0
     230:	df 91       	pop	r29
     232:	cf 91       	pop	r28
     234:	08 95       	ret

00000236 <send_Byte_1>:
     236:	cf 93       	push	r28
     238:	df 93       	push	r29
     23a:	1f 92       	push	r1
     23c:	cd b7       	in	r28, 0x3d	; 61
     23e:	de b7       	in	r29, 0x3e	; 62
     240:	89 83       	std	Y+1, r24	; 0x01
     242:	00 00       	nop
     244:	88 ec       	ldi	r24, 0xC8	; 200
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	fc 01       	movw	r30, r24
     24a:	80 81       	ld	r24, Z
     24c:	88 2f       	mov	r24, r24
     24e:	90 e0       	ldi	r25, 0x00	; 0
     250:	80 72       	andi	r24, 0x20	; 32
     252:	99 27       	eor	r25, r25
     254:	89 2b       	or	r24, r25
     256:	b1 f3       	breq	.-20     	; 0x244 <send_Byte_1+0xe>
     258:	8e ec       	ldi	r24, 0xCE	; 206
     25a:	90 e0       	ldi	r25, 0x00	; 0
     25c:	29 81       	ldd	r18, Y+1	; 0x01
     25e:	fc 01       	movw	r30, r24
     260:	20 83       	st	Z, r18
     262:	00 00       	nop
     264:	0f 90       	pop	r0
     266:	df 91       	pop	r29
     268:	cf 91       	pop	r28
     26a:	08 95       	ret

0000026c <to_pc>:
     26c:	cf 93       	push	r28
     26e:	df 93       	push	r29
     270:	00 d0       	rcall	.+0      	; 0x272 <to_pc+0x6>
     272:	cd b7       	in	r28, 0x3d	; 61
     274:	de b7       	in	r29, 0x3e	; 62
     276:	9a 83       	std	Y+2, r25	; 0x02
     278:	89 83       	std	Y+1, r24	; 0x01
     27a:	0b c0       	rjmp	.+22     	; 0x292 <to_pc+0x26>
     27c:	89 81       	ldd	r24, Y+1	; 0x01
     27e:	9a 81       	ldd	r25, Y+2	; 0x02
     280:	fc 01       	movw	r30, r24
     282:	80 81       	ld	r24, Z
     284:	0e 94 00 01 	call	0x200	; 0x200 <send_Byte_0>
     288:	89 81       	ldd	r24, Y+1	; 0x01
     28a:	9a 81       	ldd	r25, Y+2	; 0x02
     28c:	01 96       	adiw	r24, 0x01	; 1
     28e:	9a 83       	std	Y+2, r25	; 0x02
     290:	89 83       	std	Y+1, r24	; 0x01
     292:	89 81       	ldd	r24, Y+1	; 0x01
     294:	9a 81       	ldd	r25, Y+2	; 0x02
     296:	fc 01       	movw	r30, r24
     298:	80 81       	ld	r24, Z
     29a:	88 23       	and	r24, r24
     29c:	79 f7       	brne	.-34     	; 0x27c <to_pc+0x10>
     29e:	10 92 66 03 	sts	0x0366, r1	; 0x800366 <uart_str_complete>
     2a2:	00 00       	nop
     2a4:	0f 90       	pop	r0
     2a6:	0f 90       	pop	r0
     2a8:	df 91       	pop	r29
     2aa:	cf 91       	pop	r28
     2ac:	08 95       	ret

000002ae <to_uARM>:
     2ae:	cf 93       	push	r28
     2b0:	df 93       	push	r29
     2b2:	00 d0       	rcall	.+0      	; 0x2b4 <to_uARM+0x6>
     2b4:	cd b7       	in	r28, 0x3d	; 61
     2b6:	de b7       	in	r29, 0x3e	; 62
     2b8:	9a 83       	std	Y+2, r25	; 0x02
     2ba:	89 83       	std	Y+1, r24	; 0x01
     2bc:	0b c0       	rjmp	.+22     	; 0x2d4 <to_uARM+0x26>
     2be:	89 81       	ldd	r24, Y+1	; 0x01
     2c0:	9a 81       	ldd	r25, Y+2	; 0x02
     2c2:	fc 01       	movw	r30, r24
     2c4:	80 81       	ld	r24, Z
     2c6:	0e 94 1b 01 	call	0x236	; 0x236 <send_Byte_1>
     2ca:	89 81       	ldd	r24, Y+1	; 0x01
     2cc:	9a 81       	ldd	r25, Y+2	; 0x02
     2ce:	01 96       	adiw	r24, 0x01	; 1
     2d0:	9a 83       	std	Y+2, r25	; 0x02
     2d2:	89 83       	std	Y+1, r24	; 0x01
     2d4:	89 81       	ldd	r24, Y+1	; 0x01
     2d6:	9a 81       	ldd	r25, Y+2	; 0x02
     2d8:	fc 01       	movw	r30, r24
     2da:	80 81       	ld	r24, Z
     2dc:	88 23       	and	r24, r24
     2de:	79 f7       	brne	.-34     	; 0x2be <to_uARM+0x10>
     2e0:	10 92 30 03 	sts	0x0330, r1	; 0x800330 <__data_end>
     2e4:	00 00       	nop
     2e6:	0f 90       	pop	r0
     2e8:	0f 90       	pop	r0
     2ea:	df 91       	pop	r29
     2ec:	cf 91       	pop	r28
     2ee:	08 95       	ret

000002f0 <send_to_uArm>:
     2f0:	cf 93       	push	r28
     2f2:	df 93       	push	r29
     2f4:	00 d0       	rcall	.+0      	; 0x2f6 <send_to_uArm+0x6>
     2f6:	cd b7       	in	r28, 0x3d	; 61
     2f8:	de b7       	in	r29, 0x3e	; 62
     2fa:	9a 83       	std	Y+2, r25	; 0x02
     2fc:	89 83       	std	Y+1, r24	; 0x01
     2fe:	89 81       	ldd	r24, Y+1	; 0x01
     300:	9a 81       	ldd	r25, Y+2	; 0x02
     302:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
     306:	81 e0       	ldi	r24, 0x01	; 1
     308:	91 e0       	ldi	r25, 0x01	; 1
     30a:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
     30e:	04 c0       	rjmp	.+8      	; 0x318 <send_to_uArm+0x28>
     310:	81 e0       	ldi	r24, 0x01	; 1
     312:	91 e0       	ldi	r25, 0x01	; 1
     314:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
     318:	80 91 36 03 	lds	r24, 0x0336	; 0x800336 <uart_string1+0x4>
     31c:	81 33       	cpi	r24, 0x31	; 49
     31e:	c1 f3       	breq	.-16     	; 0x310 <send_to_uArm+0x20>
     320:	00 00       	nop
     322:	0f 90       	pop	r0
     324:	0f 90       	pop	r0
     326:	df 91       	pop	r29
     328:	cf 91       	pop	r28
     32a:	08 95       	ret

0000032c <start_nowait>:
     32c:	cf 93       	push	r28
     32e:	df 93       	push	r29
     330:	cd b7       	in	r28, 0x3d	; 61
     332:	de b7       	in	r29, 0x3e	; 62
     334:	88 e0       	ldi	r24, 0x08	; 8
     336:	91 e0       	ldi	r25, 0x01	; 1
     338:	0e 94 78 01 	call	0x2f0	; 0x2f0 <send_to_uArm>
     33c:	00 00       	nop
     33e:	df 91       	pop	r29
     340:	cf 91       	pop	r28
     342:	08 95       	ret

00000344 <__vector_20>:
     344:	1f 92       	push	r1
     346:	0f 92       	push	r0
     348:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     34c:	0f 92       	push	r0
     34e:	11 24       	eor	r1, r1
     350:	2f 93       	push	r18
     352:	3f 93       	push	r19
     354:	4f 93       	push	r20
     356:	5f 93       	push	r21
     358:	6f 93       	push	r22
     35a:	7f 93       	push	r23
     35c:	8f 93       	push	r24
     35e:	9f 93       	push	r25
     360:	af 93       	push	r26
     362:	bf 93       	push	r27
     364:	ef 93       	push	r30
     366:	ff 93       	push	r31
     368:	cf 93       	push	r28
     36a:	df 93       	push	r29
     36c:	1f 92       	push	r1
     36e:	cd b7       	in	r28, 0x3d	; 61
     370:	de b7       	in	r29, 0x3e	; 62
     372:	86 ec       	ldi	r24, 0xC6	; 198
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	fc 01       	movw	r30, r24
     378:	80 81       	ld	r24, Z
     37a:	89 83       	std	Y+1, r24	; 0x01
     37c:	89 81       	ldd	r24, Y+1	; 0x01
     37e:	88 2f       	mov	r24, r24
     380:	90 e0       	ldi	r25, 0x00	; 0
     382:	09 2e       	mov	r0, r25
     384:	00 0c       	add	r0, r0
     386:	aa 0b       	sbc	r26, r26
     388:	bb 0b       	sbc	r27, r27
     38a:	4a e0       	ldi	r20, 0x0A	; 10
     38c:	50 e0       	ldi	r21, 0x00	; 0
     38e:	29 e4       	ldi	r18, 0x49	; 73
     390:	30 e0       	ldi	r19, 0x00	; 0
     392:	84 1b       	sub	r24, r20
     394:	95 0b       	sbc	r25, r21
     396:	28 17       	cp	r18, r24
     398:	39 07       	cpc	r19, r25
     39a:	08 f4       	brcc	.+2      	; 0x39e <__vector_20+0x5a>
     39c:	41 c0       	rjmp	.+130    	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     39e:	82 5c       	subi	r24, 0xC2	; 194
     3a0:	9f 4f       	sbci	r25, 0xFF	; 255
     3a2:	fc 01       	movw	r30, r24
     3a4:	0c 94 fb 2c 	jmp	0x59f6	; 0x59f6 <__tablejump2__>
     3a8:	80 e3       	ldi	r24, 0x30	; 48
     3aa:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <set_led_mode>
     3ae:	8f e1       	ldi	r24, 0x1F	; 31
     3b0:	91 e0       	ldi	r25, 0x01	; 1
     3b2:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
     3b6:	43 c0       	rjmp	.+134    	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     3b8:	80 e1       	ldi	r24, 0x10	; 16
     3ba:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <set_led_mode>
     3be:	81 e0       	ldi	r24, 0x01	; 1
     3c0:	80 93 68 03 	sts	0x0368, r24	; 0x800368 <play_sound>
     3c4:	3c c0       	rjmp	.+120    	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     3c6:	80 e4       	ldi	r24, 0x40	; 64
     3c8:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <set_led_mode>
     3cc:	38 c0       	rjmp	.+112    	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     3ce:	10 92 6c 03 	sts	0x036C, r1	; 0x80036c <data_bytes_recieved>
     3d2:	81 e0       	ldi	r24, 0x01	; 1
     3d4:	80 93 66 03 	sts	0x0366, r24	; 0x800366 <uart_str_complete>
     3d8:	32 c0       	rjmp	.+100    	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     3da:	80 e2       	ldi	r24, 0x20	; 32
     3dc:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <set_led_mode>
     3e0:	0e 94 96 01 	call	0x32c	; 0x32c <start_nowait>
     3e4:	81 e0       	ldi	r24, 0x01	; 1
     3e6:	80 93 67 03 	sts	0x0367, r24	; 0x800367 <routine_done>
     3ea:	29 c0       	rjmp	.+82     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     3ec:	81 e0       	ldi	r24, 0x01	; 1
     3ee:	80 93 69 03 	sts	0x0369, r24	; 0x800369 <good>
     3f2:	25 c0       	rjmp	.+74     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     3f4:	81 e0       	ldi	r24, 0x01	; 1
     3f6:	80 93 65 03 	sts	0x0365, r24	; 0x800365 <false_state>
     3fa:	21 c0       	rjmp	.+66     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     3fc:	81 e0       	ldi	r24, 0x01	; 1
     3fe:	80 93 7a 03 	sts	0x037A, r24	; 0x80037a <pc_ready>
     402:	1d c0       	rjmp	.+58     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     404:	81 e0       	ldi	r24, 0x01	; 1
     406:	80 93 68 03 	sts	0x0368, r24	; 0x800368 <play_sound>
     40a:	19 c0       	rjmp	.+50     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     40c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     410:	88 23       	and	r24, r24
     412:	19 f0       	breq	.+6      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     414:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
     418:	03 c0       	rjmp	.+6      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     41a:	81 e0       	ldi	r24, 0x01	; 1
     41c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     420:	80 91 6c 03 	lds	r24, 0x036C	; 0x80036c <data_bytes_recieved>
     424:	88 2f       	mov	r24, r24
     426:	90 e0       	ldi	r25, 0x00	; 0
     428:	82 59       	subi	r24, 0x92	; 146
     42a:	9c 4f       	sbci	r25, 0xFC	; 252
     42c:	29 81       	ldd	r18, Y+1	; 0x01
     42e:	fc 01       	movw	r30, r24
     430:	20 83       	st	Z, r18
     432:	80 91 6c 03 	lds	r24, 0x036C	; 0x80036c <data_bytes_recieved>
     436:	8f 5f       	subi	r24, 0xFF	; 255
     438:	80 93 6c 03 	sts	0x036C, r24	; 0x80036c <data_bytes_recieved>
     43c:	00 00       	nop
     43e:	00 00       	nop
     440:	0f 90       	pop	r0
     442:	df 91       	pop	r29
     444:	cf 91       	pop	r28
     446:	ff 91       	pop	r31
     448:	ef 91       	pop	r30
     44a:	bf 91       	pop	r27
     44c:	af 91       	pop	r26
     44e:	9f 91       	pop	r25
     450:	8f 91       	pop	r24
     452:	7f 91       	pop	r23
     454:	6f 91       	pop	r22
     456:	5f 91       	pop	r21
     458:	4f 91       	pop	r20
     45a:	3f 91       	pop	r19
     45c:	2f 91       	pop	r18
     45e:	0f 90       	pop	r0
     460:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     464:	0f 90       	pop	r0
     466:	1f 90       	pop	r1
     468:	18 95       	reti

0000046a <__vector_28>:
     46a:	1f 92       	push	r1
     46c:	0f 92       	push	r0
     46e:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     472:	0f 92       	push	r0
     474:	11 24       	eor	r1, r1
     476:	2f 93       	push	r18
     478:	8f 93       	push	r24
     47a:	9f 93       	push	r25
     47c:	ef 93       	push	r30
     47e:	ff 93       	push	r31
     480:	cf 93       	push	r28
     482:	df 93       	push	r29
     484:	1f 92       	push	r1
     486:	cd b7       	in	r28, 0x3d	; 61
     488:	de b7       	in	r29, 0x3e	; 62
     48a:	8e ec       	ldi	r24, 0xCE	; 206
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	fc 01       	movw	r30, r24
     490:	80 81       	ld	r24, Z
     492:	89 83       	std	Y+1, r24	; 0x01
     494:	80 91 30 03 	lds	r24, 0x0330	; 0x800330 <__data_end>
     498:	88 23       	and	r24, r24
     49a:	31 f5       	brne	.+76     	; 0x4e8 <__vector_28+0x7e>
     49c:	89 81       	ldd	r24, Y+1	; 0x01
     49e:	8a 30       	cpi	r24, 0x0A	; 10
     4a0:	b1 f0       	breq	.+44     	; 0x4ce <__vector_28+0x64>
     4a2:	89 81       	ldd	r24, Y+1	; 0x01
     4a4:	8d 30       	cpi	r24, 0x0D	; 13
     4a6:	99 f0       	breq	.+38     	; 0x4ce <__vector_28+0x64>
     4a8:	80 91 31 03 	lds	r24, 0x0331	; 0x800331 <uart_str_count1>
     4ac:	82 33       	cpi	r24, 0x32	; 50
     4ae:	78 f4       	brcc	.+30     	; 0x4ce <__vector_28+0x64>
     4b0:	80 91 31 03 	lds	r24, 0x0331	; 0x800331 <uart_str_count1>
     4b4:	88 2f       	mov	r24, r24
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	8e 5c       	subi	r24, 0xCE	; 206
     4ba:	9c 4f       	sbci	r25, 0xFC	; 252
     4bc:	29 81       	ldd	r18, Y+1	; 0x01
     4be:	fc 01       	movw	r30, r24
     4c0:	20 83       	st	Z, r18
     4c2:	80 91 31 03 	lds	r24, 0x0331	; 0x800331 <uart_str_count1>
     4c6:	8f 5f       	subi	r24, 0xFF	; 255
     4c8:	80 93 31 03 	sts	0x0331, r24	; 0x800331 <uart_str_count1>
     4cc:	0d c0       	rjmp	.+26     	; 0x4e8 <__vector_28+0x7e>
     4ce:	80 91 31 03 	lds	r24, 0x0331	; 0x800331 <uart_str_count1>
     4d2:	88 2f       	mov	r24, r24
     4d4:	90 e0       	ldi	r25, 0x00	; 0
     4d6:	8e 5c       	subi	r24, 0xCE	; 206
     4d8:	9c 4f       	sbci	r25, 0xFC	; 252
     4da:	fc 01       	movw	r30, r24
     4dc:	10 82       	st	Z, r1
     4de:	10 92 31 03 	sts	0x0331, r1	; 0x800331 <uart_str_count1>
     4e2:	81 e0       	ldi	r24, 0x01	; 1
     4e4:	80 93 30 03 	sts	0x0330, r24	; 0x800330 <__data_end>
     4e8:	00 00       	nop
     4ea:	0f 90       	pop	r0
     4ec:	df 91       	pop	r29
     4ee:	cf 91       	pop	r28
     4f0:	ff 91       	pop	r31
     4f2:	ef 91       	pop	r30
     4f4:	9f 91       	pop	r25
     4f6:	8f 91       	pop	r24
     4f8:	2f 91       	pop	r18
     4fa:	0f 90       	pop	r0
     4fc:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     500:	0f 90       	pop	r0
     502:	1f 90       	pop	r1
     504:	18 95       	reti

00000506 <clear_port>:
void clear_port()
{
     506:	cf 93       	push	r28
     508:	df 93       	push	r29
     50a:	cd b7       	in	r28, 0x3d	; 61
     50c:	de b7       	in	r29, 0x3e	; 62
	PORTD&=~0x70;
     50e:	8b e2       	ldi	r24, 0x2B	; 43
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	2b e2       	ldi	r18, 0x2B	; 43
     514:	30 e0       	ldi	r19, 0x00	; 0
     516:	f9 01       	movw	r30, r18
     518:	20 81       	ld	r18, Z
     51a:	2f 78       	andi	r18, 0x8F	; 143
     51c:	fc 01       	movw	r30, r24
     51e:	20 83       	st	Z, r18
}
     520:	00 00       	nop
     522:	df 91       	pop	r29
     524:	cf 91       	pop	r28
     526:	08 95       	ret

00000528 <make_sound>:
void make_sound()
{
     528:	cf 93       	push	r28
     52a:	df 93       	push	r29
     52c:	cd b7       	in	r28, 0x3d	; 61
     52e:	de b7       	in	r29, 0x3e	; 62
     530:	6c 97       	sbiw	r28, 0x1c	; 28
     532:	0f b6       	in	r0, 0x3f	; 63
     534:	f8 94       	cli
     536:	de bf       	out	0x3e, r29	; 62
     538:	0f be       	out	0x3f, r0	; 63
     53a:	cd bf       	out	0x3d, r28	; 61
	if (play_beep)
     53c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     540:	88 23       	and	r24, r24
     542:	09 f4       	brne	.+2      	; 0x546 <make_sound+0x1e>
     544:	f0 c0       	rjmp	.+480    	; 0x726 <make_sound+0x1fe>
	{
		to_uARM("M2210 F500 T200\n");
     546:	81 e8       	ldi	r24, 0x81	; 129
     548:	91 e0       	ldi	r25, 0x01	; 1
     54a:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
     54e:	80 e0       	ldi	r24, 0x00	; 0
     550:	90 e0       	ldi	r25, 0x00	; 0
     552:	a8 e4       	ldi	r26, 0x48	; 72
     554:	b3 e4       	ldi	r27, 0x43	; 67
     556:	89 83       	std	Y+1, r24	; 0x01
     558:	9a 83       	std	Y+2, r25	; 0x02
     55a:	ab 83       	std	Y+3, r26	; 0x03
     55c:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     55e:	20 e0       	ldi	r18, 0x00	; 0
     560:	30 e0       	ldi	r19, 0x00	; 0
     562:	4a e7       	ldi	r20, 0x7A	; 122
     564:	55 e4       	ldi	r21, 0x45	; 69
     566:	69 81       	ldd	r22, Y+1	; 0x01
     568:	7a 81       	ldd	r23, Y+2	; 0x02
     56a:	8b 81       	ldd	r24, Y+3	; 0x03
     56c:	9c 81       	ldd	r25, Y+4	; 0x04
     56e:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
     572:	dc 01       	movw	r26, r24
     574:	cb 01       	movw	r24, r22
     576:	8b 8b       	std	Y+19, r24	; 0x13
     578:	9c 8b       	std	Y+20, r25	; 0x14
     57a:	ad 8b       	std	Y+21, r26	; 0x15
     57c:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     57e:	20 e0       	ldi	r18, 0x00	; 0
     580:	30 e0       	ldi	r19, 0x00	; 0
     582:	40 e8       	ldi	r20, 0x80	; 128
     584:	5f e3       	ldi	r21, 0x3F	; 63
     586:	6b 89       	ldd	r22, Y+19	; 0x13
     588:	7c 89       	ldd	r23, Y+20	; 0x14
     58a:	8d 89       	ldd	r24, Y+21	; 0x15
     58c:	9e 89       	ldd	r25, Y+22	; 0x16
     58e:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
     592:	88 23       	and	r24, r24
     594:	2c f4       	brge	.+10     	; 0x5a0 <make_sound+0x78>
		__ticks = 1;
     596:	81 e0       	ldi	r24, 0x01	; 1
     598:	90 e0       	ldi	r25, 0x00	; 0
     59a:	98 8f       	std	Y+24, r25	; 0x18
     59c:	8f 8b       	std	Y+23, r24	; 0x17
     59e:	3f c0       	rjmp	.+126    	; 0x61e <make_sound+0xf6>
	else if (__tmp > 65535)
     5a0:	20 e0       	ldi	r18, 0x00	; 0
     5a2:	3f ef       	ldi	r19, 0xFF	; 255
     5a4:	4f e7       	ldi	r20, 0x7F	; 127
     5a6:	57 e4       	ldi	r21, 0x47	; 71
     5a8:	6b 89       	ldd	r22, Y+19	; 0x13
     5aa:	7c 89       	ldd	r23, Y+20	; 0x14
     5ac:	8d 89       	ldd	r24, Y+21	; 0x15
     5ae:	9e 89       	ldd	r25, Y+22	; 0x16
     5b0:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
     5b4:	18 16       	cp	r1, r24
     5b6:	4c f5       	brge	.+82     	; 0x60a <make_sound+0xe2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5b8:	20 e0       	ldi	r18, 0x00	; 0
     5ba:	30 e0       	ldi	r19, 0x00	; 0
     5bc:	40 e2       	ldi	r20, 0x20	; 32
     5be:	51 e4       	ldi	r21, 0x41	; 65
     5c0:	69 81       	ldd	r22, Y+1	; 0x01
     5c2:	7a 81       	ldd	r23, Y+2	; 0x02
     5c4:	8b 81       	ldd	r24, Y+3	; 0x03
     5c6:	9c 81       	ldd	r25, Y+4	; 0x04
     5c8:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
     5cc:	dc 01       	movw	r26, r24
     5ce:	cb 01       	movw	r24, r22
     5d0:	bc 01       	movw	r22, r24
     5d2:	cd 01       	movw	r24, r26
     5d4:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
     5d8:	dc 01       	movw	r26, r24
     5da:	cb 01       	movw	r24, r22
     5dc:	98 8f       	std	Y+24, r25	; 0x18
     5de:	8f 8b       	std	Y+23, r24	; 0x17
     5e0:	0f c0       	rjmp	.+30     	; 0x600 <make_sound+0xd8>
     5e2:	80 e9       	ldi	r24, 0x90	; 144
     5e4:	91 e0       	ldi	r25, 0x01	; 1
     5e6:	9a 8f       	std	Y+26, r25	; 0x1a
     5e8:	89 8f       	std	Y+25, r24	; 0x19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     5ea:	89 8d       	ldd	r24, Y+25	; 0x19
     5ec:	9a 8d       	ldd	r25, Y+26	; 0x1a
     5ee:	01 97       	sbiw	r24, 0x01	; 1
     5f0:	f1 f7       	brne	.-4      	; 0x5ee <make_sound+0xc6>
     5f2:	9a 8f       	std	Y+26, r25	; 0x1a
     5f4:	89 8f       	std	Y+25, r24	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     5f6:	8f 89       	ldd	r24, Y+23	; 0x17
     5f8:	98 8d       	ldd	r25, Y+24	; 0x18
     5fa:	01 97       	sbiw	r24, 0x01	; 1
     5fc:	98 8f       	std	Y+24, r25	; 0x18
     5fe:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     600:	8f 89       	ldd	r24, Y+23	; 0x17
     602:	98 8d       	ldd	r25, Y+24	; 0x18
     604:	89 2b       	or	r24, r25
     606:	69 f7       	brne	.-38     	; 0x5e2 <make_sound+0xba>
     608:	14 c0       	rjmp	.+40     	; 0x632 <make_sound+0x10a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     60a:	6b 89       	ldd	r22, Y+19	; 0x13
     60c:	7c 89       	ldd	r23, Y+20	; 0x14
     60e:	8d 89       	ldd	r24, Y+21	; 0x15
     610:	9e 89       	ldd	r25, Y+22	; 0x16
     612:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
     616:	dc 01       	movw	r26, r24
     618:	cb 01       	movw	r24, r22
     61a:	98 8f       	std	Y+24, r25	; 0x18
     61c:	8f 8b       	std	Y+23, r24	; 0x17
     61e:	8f 89       	ldd	r24, Y+23	; 0x17
     620:	98 8d       	ldd	r25, Y+24	; 0x18
     622:	9c 8f       	std	Y+28, r25	; 0x1c
     624:	8b 8f       	std	Y+27, r24	; 0x1b
     626:	8b 8d       	ldd	r24, Y+27	; 0x1b
     628:	9c 8d       	ldd	r25, Y+28	; 0x1c
     62a:	01 97       	sbiw	r24, 0x01	; 1
     62c:	f1 f7       	brne	.-4      	; 0x62a <make_sound+0x102>
     62e:	9c 8f       	std	Y+28, r25	; 0x1c
     630:	8b 8f       	std	Y+27, r24	; 0x1b
		_delay_ms(200);
		to_uARM("M2210 F1000 T500\n");
     632:	82 e9       	ldi	r24, 0x92	; 146
     634:	91 e0       	ldi	r25, 0x01	; 1
     636:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
     63a:	80 e0       	ldi	r24, 0x00	; 0
     63c:	90 e0       	ldi	r25, 0x00	; 0
     63e:	aa ef       	ldi	r26, 0xFA	; 250
     640:	b3 e4       	ldi	r27, 0x43	; 67
     642:	8d 83       	std	Y+5, r24	; 0x05
     644:	9e 83       	std	Y+6, r25	; 0x06
     646:	af 83       	std	Y+7, r26	; 0x07
     648:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     64a:	20 e0       	ldi	r18, 0x00	; 0
     64c:	30 e0       	ldi	r19, 0x00	; 0
     64e:	4a e7       	ldi	r20, 0x7A	; 122
     650:	55 e4       	ldi	r21, 0x45	; 69
     652:	6d 81       	ldd	r22, Y+5	; 0x05
     654:	7e 81       	ldd	r23, Y+6	; 0x06
     656:	8f 81       	ldd	r24, Y+7	; 0x07
     658:	98 85       	ldd	r25, Y+8	; 0x08
     65a:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
     65e:	dc 01       	movw	r26, r24
     660:	cb 01       	movw	r24, r22
     662:	89 87       	std	Y+9, r24	; 0x09
     664:	9a 87       	std	Y+10, r25	; 0x0a
     666:	ab 87       	std	Y+11, r26	; 0x0b
     668:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     66a:	20 e0       	ldi	r18, 0x00	; 0
     66c:	30 e0       	ldi	r19, 0x00	; 0
     66e:	40 e8       	ldi	r20, 0x80	; 128
     670:	5f e3       	ldi	r21, 0x3F	; 63
     672:	69 85       	ldd	r22, Y+9	; 0x09
     674:	7a 85       	ldd	r23, Y+10	; 0x0a
     676:	8b 85       	ldd	r24, Y+11	; 0x0b
     678:	9c 85       	ldd	r25, Y+12	; 0x0c
     67a:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
     67e:	88 23       	and	r24, r24
     680:	2c f4       	brge	.+10     	; 0x68c <make_sound+0x164>
		__ticks = 1;
     682:	81 e0       	ldi	r24, 0x01	; 1
     684:	90 e0       	ldi	r25, 0x00	; 0
     686:	9e 87       	std	Y+14, r25	; 0x0e
     688:	8d 87       	std	Y+13, r24	; 0x0d
     68a:	3f c0       	rjmp	.+126    	; 0x70a <make_sound+0x1e2>
	else if (__tmp > 65535)
     68c:	20 e0       	ldi	r18, 0x00	; 0
     68e:	3f ef       	ldi	r19, 0xFF	; 255
     690:	4f e7       	ldi	r20, 0x7F	; 127
     692:	57 e4       	ldi	r21, 0x47	; 71
     694:	69 85       	ldd	r22, Y+9	; 0x09
     696:	7a 85       	ldd	r23, Y+10	; 0x0a
     698:	8b 85       	ldd	r24, Y+11	; 0x0b
     69a:	9c 85       	ldd	r25, Y+12	; 0x0c
     69c:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
     6a0:	18 16       	cp	r1, r24
     6a2:	4c f5       	brge	.+82     	; 0x6f6 <make_sound+0x1ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     6a4:	20 e0       	ldi	r18, 0x00	; 0
     6a6:	30 e0       	ldi	r19, 0x00	; 0
     6a8:	40 e2       	ldi	r20, 0x20	; 32
     6aa:	51 e4       	ldi	r21, 0x41	; 65
     6ac:	6d 81       	ldd	r22, Y+5	; 0x05
     6ae:	7e 81       	ldd	r23, Y+6	; 0x06
     6b0:	8f 81       	ldd	r24, Y+7	; 0x07
     6b2:	98 85       	ldd	r25, Y+8	; 0x08
     6b4:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
     6b8:	dc 01       	movw	r26, r24
     6ba:	cb 01       	movw	r24, r22
     6bc:	bc 01       	movw	r22, r24
     6be:	cd 01       	movw	r24, r26
     6c0:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
     6c4:	dc 01       	movw	r26, r24
     6c6:	cb 01       	movw	r24, r22
     6c8:	9e 87       	std	Y+14, r25	; 0x0e
     6ca:	8d 87       	std	Y+13, r24	; 0x0d
     6cc:	0f c0       	rjmp	.+30     	; 0x6ec <make_sound+0x1c4>
     6ce:	80 e9       	ldi	r24, 0x90	; 144
     6d0:	91 e0       	ldi	r25, 0x01	; 1
     6d2:	98 8b       	std	Y+16, r25	; 0x10
     6d4:	8f 87       	std	Y+15, r24	; 0x0f
     6d6:	8f 85       	ldd	r24, Y+15	; 0x0f
     6d8:	98 89       	ldd	r25, Y+16	; 0x10
     6da:	01 97       	sbiw	r24, 0x01	; 1
     6dc:	f1 f7       	brne	.-4      	; 0x6da <make_sound+0x1b2>
     6de:	98 8b       	std	Y+16, r25	; 0x10
     6e0:	8f 87       	std	Y+15, r24	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6e2:	8d 85       	ldd	r24, Y+13	; 0x0d
     6e4:	9e 85       	ldd	r25, Y+14	; 0x0e
     6e6:	01 97       	sbiw	r24, 0x01	; 1
     6e8:	9e 87       	std	Y+14, r25	; 0x0e
     6ea:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6ec:	8d 85       	ldd	r24, Y+13	; 0x0d
     6ee:	9e 85       	ldd	r25, Y+14	; 0x0e
     6f0:	89 2b       	or	r24, r25
     6f2:	69 f7       	brne	.-38     	; 0x6ce <make_sound+0x1a6>
     6f4:	14 c0       	rjmp	.+40     	; 0x71e <make_sound+0x1f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     6f6:	69 85       	ldd	r22, Y+9	; 0x09
     6f8:	7a 85       	ldd	r23, Y+10	; 0x0a
     6fa:	8b 85       	ldd	r24, Y+11	; 0x0b
     6fc:	9c 85       	ldd	r25, Y+12	; 0x0c
     6fe:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
     702:	dc 01       	movw	r26, r24
     704:	cb 01       	movw	r24, r22
     706:	9e 87       	std	Y+14, r25	; 0x0e
     708:	8d 87       	std	Y+13, r24	; 0x0d
     70a:	8d 85       	ldd	r24, Y+13	; 0x0d
     70c:	9e 85       	ldd	r25, Y+14	; 0x0e
     70e:	9a 8b       	std	Y+18, r25	; 0x12
     710:	89 8b       	std	Y+17, r24	; 0x11
     712:	89 89       	ldd	r24, Y+17	; 0x11
     714:	9a 89       	ldd	r25, Y+18	; 0x12
     716:	01 97       	sbiw	r24, 0x01	; 1
     718:	f1 f7       	brne	.-4      	; 0x716 <make_sound+0x1ee>
     71a:	9a 8b       	std	Y+18, r25	; 0x12
     71c:	89 8b       	std	Y+17, r24	; 0x11
		_delay_ms(500);
		to_uARM("M2210 F2000 T500\n");
     71e:	84 ea       	ldi	r24, 0xA4	; 164
     720:	91 e0       	ldi	r25, 0x01	; 1
     722:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
	}
}
     726:	00 00       	nop
     728:	6c 96       	adiw	r28, 0x1c	; 28
     72a:	0f b6       	in	r0, 0x3f	; 63
     72c:	f8 94       	cli
     72e:	de bf       	out	0x3e, r29	; 62
     730:	0f be       	out	0x3f, r0	; 63
     732:	cd bf       	out	0x3d, r28	; 61
     734:	df 91       	pop	r29
     736:	cf 91       	pop	r28
     738:	08 95       	ret

0000073a <goto_start>:
void goto_start()
{
     73a:	cf 93       	push	r28
     73c:	df 93       	push	r29
     73e:	cd b7       	in	r28, 0x3d	; 61
     740:	de b7       	in	r29, 0x3e	; 62
	send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
     742:	88 e0       	ldi	r24, 0x08	; 8
     744:	91 e0       	ldi	r25, 0x01	; 1
     746:	0e 94 78 01 	call	0x2f0	; 0x2f0 <send_to_uArm>
	while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     74a:	04 c0       	rjmp	.+8      	; 0x754 <goto_start+0x1a>
	{
		to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
     74c:	81 e0       	ldi	r24, 0x01	; 1
     74e:	91 e0       	ldi	r25, 0x01	; 1
     750:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
	}
}
void goto_start()
{
	send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
	while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     754:	80 91 36 03 	lds	r24, 0x0336	; 0x800336 <uart_string1+0x4>
     758:	81 33       	cpi	r24, 0x31	; 49
     75a:	c1 f3       	breq	.-16     	; 0x74c <goto_start+0x12>
	{
		to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
	}
}
     75c:	00 00       	nop
     75e:	df 91       	pop	r29
     760:	cf 91       	pop	r28
     762:	08 95       	ret

00000764 <beep>:
void beep()
{
     764:	cf 93       	push	r28
     766:	df 93       	push	r29
     768:	cd b7       	in	r28, 0x3d	; 61
     76a:	de b7       	in	r29, 0x3e	; 62
	if (play_beep)
     76c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     770:	88 23       	and	r24, r24
     772:	21 f0       	breq	.+8      	; 0x77c <beep+0x18>
	{
		to_uARM("M2210 F2000 T200\n");
     774:	86 eb       	ldi	r24, 0xB6	; 182
     776:	91 e0       	ldi	r25, 0x01	; 1
     778:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
	}
}
     77c:	00 00       	nop
     77e:	df 91       	pop	r29
     780:	cf 91       	pop	r28
     782:	08 95       	ret

00000784 <read_buttons>:
unsigned char read_buttons ()
{
     784:	cf 93       	push	r28
     786:	df 93       	push	r29
     788:	cd b7       	in	r28, 0x3d	; 61
     78a:	de b7       	in	r29, 0x3e	; 62
	return PINB&0x03;
     78c:	83 e2       	ldi	r24, 0x23	; 35
     78e:	90 e0       	ldi	r25, 0x00	; 0
     790:	fc 01       	movw	r30, r24
     792:	80 81       	ld	r24, Z
     794:	83 70       	andi	r24, 0x03	; 3
}
     796:	df 91       	pop	r29
     798:	cf 91       	pop	r28
     79a:	08 95       	ret

0000079c <buttons>:
void buttons(unsigned char taster)
{
     79c:	cf 93       	push	r28
     79e:	df 93       	push	r29
     7a0:	1f 92       	push	r1
     7a2:	cd b7       	in	r28, 0x3d	; 61
     7a4:	de b7       	in	r29, 0x3e	; 62
     7a6:	89 83       	std	Y+1, r24	; 0x01
	if (taster&0x01)
     7a8:	89 81       	ldd	r24, Y+1	; 0x01
     7aa:	88 2f       	mov	r24, r24
     7ac:	90 e0       	ldi	r25, 0x00	; 0
     7ae:	81 70       	andi	r24, 0x01	; 1
     7b0:	99 27       	eor	r25, r25
     7b2:	89 2b       	or	r24, r25
     7b4:	21 f0       	breq	.+8      	; 0x7be <buttons+0x22>
	{
		goto_start();
     7b6:	0e 94 9d 03 	call	0x73a	; 0x73a <goto_start>
		beep_short();
     7ba:	0e 94 ee 26 	call	0x4ddc	; 0x4ddc <beep_short>
	}
	if (taster&0x02)
     7be:	89 81       	ldd	r24, Y+1	; 0x01
     7c0:	88 2f       	mov	r24, r24
     7c2:	90 e0       	ldi	r25, 0x00	; 0
     7c4:	82 70       	andi	r24, 0x02	; 2
     7c6:	99 27       	eor	r25, r25
     7c8:	89 2b       	or	r24, r25
     7ca:	11 f0       	breq	.+4      	; 0x7d0 <buttons+0x34>
	{
		play_somthin_booy();
     7cc:	0e 94 ed 03 	call	0x7da	; 0x7da <play_somthin_booy>
	}
}
     7d0:	00 00       	nop
     7d2:	0f 90       	pop	r0
     7d4:	df 91       	pop	r29
     7d6:	cf 91       	pop	r28
     7d8:	08 95       	ret

000007da <play_somthin_booy>:
void play_somthin_booy()
{
     7da:	0f 93       	push	r16
     7dc:	1f 93       	push	r17
     7de:	cf 93       	push	r28
     7e0:	df 93       	push	r29
     7e2:	cd b7       	in	r28, 0x3d	; 61
     7e4:	de b7       	in	r29, 0x3e	; 62
     7e6:	c0 53       	subi	r28, 0x30	; 48
     7e8:	d2 40       	sbci	r29, 0x02	; 2
     7ea:	0f b6       	in	r0, 0x3f	; 63
     7ec:	f8 94       	cli
     7ee:	de bf       	out	0x3e, r29	; 62
     7f0:	0f be       	out	0x3f, r0	; 63
     7f2:	cd bf       	out	0x3d, r28	; 61
	to_uARM("M2210 F660 T100\n");
     7f4:	88 ec       	ldi	r24, 0xC8	; 200
     7f6:	91 e0       	ldi	r25, 0x01	; 1
     7f8:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
     7fc:	80 e0       	ldi	r24, 0x00	; 0
     7fe:	90 e0       	ldi	r25, 0x00	; 0
     800:	a6 e1       	ldi	r26, 0x16	; 22
     802:	b3 e4       	ldi	r27, 0x43	; 67
     804:	89 83       	std	Y+1, r24	; 0x01
     806:	9a 83       	std	Y+2, r25	; 0x02
     808:	ab 83       	std	Y+3, r26	; 0x03
     80a:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     80c:	8e 01       	movw	r16, r28
     80e:	09 5d       	subi	r16, 0xD9	; 217
     810:	1d 4f       	sbci	r17, 0xFD	; 253
     812:	20 e0       	ldi	r18, 0x00	; 0
     814:	30 e0       	ldi	r19, 0x00	; 0
     816:	4a e7       	ldi	r20, 0x7A	; 122
     818:	55 e4       	ldi	r21, 0x45	; 69
     81a:	69 81       	ldd	r22, Y+1	; 0x01
     81c:	7a 81       	ldd	r23, Y+2	; 0x02
     81e:	8b 81       	ldd	r24, Y+3	; 0x03
     820:	9c 81       	ldd	r25, Y+4	; 0x04
     822:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
     826:	dc 01       	movw	r26, r24
     828:	cb 01       	movw	r24, r22
     82a:	f8 01       	movw	r30, r16
     82c:	80 83       	st	Z, r24
     82e:	91 83       	std	Z+1, r25	; 0x01
     830:	a2 83       	std	Z+2, r26	; 0x02
     832:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     834:	ce 01       	movw	r24, r28
     836:	89 5d       	subi	r24, 0xD9	; 217
     838:	9d 4f       	sbci	r25, 0xFD	; 253
     83a:	20 e0       	ldi	r18, 0x00	; 0
     83c:	30 e0       	ldi	r19, 0x00	; 0
     83e:	40 e8       	ldi	r20, 0x80	; 128
     840:	5f e3       	ldi	r21, 0x3F	; 63
     842:	fc 01       	movw	r30, r24
     844:	60 81       	ld	r22, Z
     846:	71 81       	ldd	r23, Z+1	; 0x01
     848:	82 81       	ldd	r24, Z+2	; 0x02
     84a:	93 81       	ldd	r25, Z+3	; 0x03
     84c:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
     850:	88 23       	and	r24, r24
     852:	4c f4       	brge	.+18     	; 0x866 <play_somthin_booy+0x8c>
		__ticks = 1;
     854:	ce 01       	movw	r24, r28
     856:	85 5d       	subi	r24, 0xD5	; 213
     858:	9d 4f       	sbci	r25, 0xFD	; 253
     85a:	21 e0       	ldi	r18, 0x01	; 1
     85c:	30 e0       	ldi	r19, 0x00	; 0
     85e:	fc 01       	movw	r30, r24
     860:	31 83       	std	Z+1, r19	; 0x01
     862:	20 83       	st	Z, r18
     864:	69 c0       	rjmp	.+210    	; 0x938 <play_somthin_booy+0x15e>
	else if (__tmp > 65535)
     866:	ce 01       	movw	r24, r28
     868:	89 5d       	subi	r24, 0xD9	; 217
     86a:	9d 4f       	sbci	r25, 0xFD	; 253
     86c:	20 e0       	ldi	r18, 0x00	; 0
     86e:	3f ef       	ldi	r19, 0xFF	; 255
     870:	4f e7       	ldi	r20, 0x7F	; 127
     872:	57 e4       	ldi	r21, 0x47	; 71
     874:	fc 01       	movw	r30, r24
     876:	60 81       	ld	r22, Z
     878:	71 81       	ldd	r23, Z+1	; 0x01
     87a:	82 81       	ldd	r24, Z+2	; 0x02
     87c:	93 81       	ldd	r25, Z+3	; 0x03
     87e:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
     882:	18 16       	cp	r1, r24
     884:	0c f0       	brlt	.+2      	; 0x888 <play_somthin_booy+0xae>
     886:	46 c0       	rjmp	.+140    	; 0x914 <play_somthin_booy+0x13a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     888:	20 e0       	ldi	r18, 0x00	; 0
     88a:	30 e0       	ldi	r19, 0x00	; 0
     88c:	40 e2       	ldi	r20, 0x20	; 32
     88e:	51 e4       	ldi	r21, 0x41	; 65
     890:	69 81       	ldd	r22, Y+1	; 0x01
     892:	7a 81       	ldd	r23, Y+2	; 0x02
     894:	8b 81       	ldd	r24, Y+3	; 0x03
     896:	9c 81       	ldd	r25, Y+4	; 0x04
     898:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
     89c:	dc 01       	movw	r26, r24
     89e:	cb 01       	movw	r24, r22
     8a0:	8e 01       	movw	r16, r28
     8a2:	05 5d       	subi	r16, 0xD5	; 213
     8a4:	1d 4f       	sbci	r17, 0xFD	; 253
     8a6:	bc 01       	movw	r22, r24
     8a8:	cd 01       	movw	r24, r26
     8aa:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
     8ae:	dc 01       	movw	r26, r24
     8b0:	cb 01       	movw	r24, r22
     8b2:	f8 01       	movw	r30, r16
     8b4:	91 83       	std	Z+1, r25	; 0x01
     8b6:	80 83       	st	Z, r24
     8b8:	24 c0       	rjmp	.+72     	; 0x902 <play_somthin_booy+0x128>
     8ba:	ce 01       	movw	r24, r28
     8bc:	83 5d       	subi	r24, 0xD3	; 211
     8be:	9d 4f       	sbci	r25, 0xFD	; 253
     8c0:	20 e9       	ldi	r18, 0x90	; 144
     8c2:	31 e0       	ldi	r19, 0x01	; 1
     8c4:	fc 01       	movw	r30, r24
     8c6:	31 83       	std	Z+1, r19	; 0x01
     8c8:	20 83       	st	Z, r18
     8ca:	ce 01       	movw	r24, r28
     8cc:	83 5d       	subi	r24, 0xD3	; 211
     8ce:	9d 4f       	sbci	r25, 0xFD	; 253
     8d0:	fc 01       	movw	r30, r24
     8d2:	80 81       	ld	r24, Z
     8d4:	91 81       	ldd	r25, Z+1	; 0x01
     8d6:	01 97       	sbiw	r24, 0x01	; 1
     8d8:	f1 f7       	brne	.-4      	; 0x8d6 <play_somthin_booy+0xfc>
     8da:	9e 01       	movw	r18, r28
     8dc:	23 5d       	subi	r18, 0xD3	; 211
     8de:	3d 4f       	sbci	r19, 0xFD	; 253
     8e0:	f9 01       	movw	r30, r18
     8e2:	91 83       	std	Z+1, r25	; 0x01
     8e4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8e6:	ce 01       	movw	r24, r28
     8e8:	85 5d       	subi	r24, 0xD5	; 213
     8ea:	9d 4f       	sbci	r25, 0xFD	; 253
     8ec:	9e 01       	movw	r18, r28
     8ee:	25 5d       	subi	r18, 0xD5	; 213
     8f0:	3d 4f       	sbci	r19, 0xFD	; 253
     8f2:	f9 01       	movw	r30, r18
     8f4:	20 81       	ld	r18, Z
     8f6:	31 81       	ldd	r19, Z+1	; 0x01
     8f8:	21 50       	subi	r18, 0x01	; 1
     8fa:	31 09       	sbc	r19, r1
     8fc:	fc 01       	movw	r30, r24
     8fe:	31 83       	std	Z+1, r19	; 0x01
     900:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     902:	ce 01       	movw	r24, r28
     904:	85 5d       	subi	r24, 0xD5	; 213
     906:	9d 4f       	sbci	r25, 0xFD	; 253
     908:	fc 01       	movw	r30, r24
     90a:	80 81       	ld	r24, Z
     90c:	91 81       	ldd	r25, Z+1	; 0x01
     90e:	89 2b       	or	r24, r25
     910:	a1 f6       	brne	.-88     	; 0x8ba <play_somthin_booy+0xe0>
     912:	2c c0       	rjmp	.+88     	; 0x96c <play_somthin_booy+0x192>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     914:	8e 01       	movw	r16, r28
     916:	05 5d       	subi	r16, 0xD5	; 213
     918:	1d 4f       	sbci	r17, 0xFD	; 253
     91a:	ce 01       	movw	r24, r28
     91c:	89 5d       	subi	r24, 0xD9	; 217
     91e:	9d 4f       	sbci	r25, 0xFD	; 253
     920:	fc 01       	movw	r30, r24
     922:	60 81       	ld	r22, Z
     924:	71 81       	ldd	r23, Z+1	; 0x01
     926:	82 81       	ldd	r24, Z+2	; 0x02
     928:	93 81       	ldd	r25, Z+3	; 0x03
     92a:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
     92e:	dc 01       	movw	r26, r24
     930:	cb 01       	movw	r24, r22
     932:	f8 01       	movw	r30, r16
     934:	91 83       	std	Z+1, r25	; 0x01
     936:	80 83       	st	Z, r24
     938:	ce 01       	movw	r24, r28
     93a:	81 5d       	subi	r24, 0xD1	; 209
     93c:	9d 4f       	sbci	r25, 0xFD	; 253
     93e:	9e 01       	movw	r18, r28
     940:	25 5d       	subi	r18, 0xD5	; 213
     942:	3d 4f       	sbci	r19, 0xFD	; 253
     944:	f9 01       	movw	r30, r18
     946:	20 81       	ld	r18, Z
     948:	31 81       	ldd	r19, Z+1	; 0x01
     94a:	fc 01       	movw	r30, r24
     94c:	31 83       	std	Z+1, r19	; 0x01
     94e:	20 83       	st	Z, r18
     950:	ce 01       	movw	r24, r28
     952:	81 5d       	subi	r24, 0xD1	; 209
     954:	9d 4f       	sbci	r25, 0xFD	; 253
     956:	fc 01       	movw	r30, r24
     958:	80 81       	ld	r24, Z
     95a:	91 81       	ldd	r25, Z+1	; 0x01
     95c:	01 97       	sbiw	r24, 0x01	; 1
     95e:	f1 f7       	brne	.-4      	; 0x95c <play_somthin_booy+0x182>
     960:	9e 01       	movw	r18, r28
     962:	21 5d       	subi	r18, 0xD1	; 209
     964:	3d 4f       	sbci	r19, 0xFD	; 253
     966:	f9 01       	movw	r30, r18
     968:	91 83       	std	Z+1, r25	; 0x01
     96a:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F660 T100\n");
     96c:	88 ec       	ldi	r24, 0xC8	; 200
     96e:	91 e0       	ldi	r25, 0x01	; 1
     970:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
     974:	80 e0       	ldi	r24, 0x00	; 0
     976:	90 e0       	ldi	r25, 0x00	; 0
     978:	a6 e9       	ldi	r26, 0x96	; 150
     97a:	b3 e4       	ldi	r27, 0x43	; 67
     97c:	8d 83       	std	Y+5, r24	; 0x05
     97e:	9e 83       	std	Y+6, r25	; 0x06
     980:	af 83       	std	Y+7, r26	; 0x07
     982:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     984:	8e 01       	movw	r16, r28
     986:	03 5e       	subi	r16, 0xE3	; 227
     988:	1d 4f       	sbci	r17, 0xFD	; 253
     98a:	20 e0       	ldi	r18, 0x00	; 0
     98c:	30 e0       	ldi	r19, 0x00	; 0
     98e:	4a e7       	ldi	r20, 0x7A	; 122
     990:	55 e4       	ldi	r21, 0x45	; 69
     992:	6d 81       	ldd	r22, Y+5	; 0x05
     994:	7e 81       	ldd	r23, Y+6	; 0x06
     996:	8f 81       	ldd	r24, Y+7	; 0x07
     998:	98 85       	ldd	r25, Y+8	; 0x08
     99a:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
     99e:	dc 01       	movw	r26, r24
     9a0:	cb 01       	movw	r24, r22
     9a2:	f8 01       	movw	r30, r16
     9a4:	80 83       	st	Z, r24
     9a6:	91 83       	std	Z+1, r25	; 0x01
     9a8:	a2 83       	std	Z+2, r26	; 0x02
     9aa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     9ac:	ce 01       	movw	r24, r28
     9ae:	83 5e       	subi	r24, 0xE3	; 227
     9b0:	9d 4f       	sbci	r25, 0xFD	; 253
     9b2:	20 e0       	ldi	r18, 0x00	; 0
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	40 e8       	ldi	r20, 0x80	; 128
     9b8:	5f e3       	ldi	r21, 0x3F	; 63
     9ba:	fc 01       	movw	r30, r24
     9bc:	60 81       	ld	r22, Z
     9be:	71 81       	ldd	r23, Z+1	; 0x01
     9c0:	82 81       	ldd	r24, Z+2	; 0x02
     9c2:	93 81       	ldd	r25, Z+3	; 0x03
     9c4:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
     9c8:	88 23       	and	r24, r24
     9ca:	4c f4       	brge	.+18     	; 0x9de <play_somthin_booy+0x204>
		__ticks = 1;
     9cc:	ce 01       	movw	r24, r28
     9ce:	8f 5d       	subi	r24, 0xDF	; 223
     9d0:	9d 4f       	sbci	r25, 0xFD	; 253
     9d2:	21 e0       	ldi	r18, 0x01	; 1
     9d4:	30 e0       	ldi	r19, 0x00	; 0
     9d6:	fc 01       	movw	r30, r24
     9d8:	31 83       	std	Z+1, r19	; 0x01
     9da:	20 83       	st	Z, r18
     9dc:	69 c0       	rjmp	.+210    	; 0xab0 <play_somthin_booy+0x2d6>
	else if (__tmp > 65535)
     9de:	ce 01       	movw	r24, r28
     9e0:	83 5e       	subi	r24, 0xE3	; 227
     9e2:	9d 4f       	sbci	r25, 0xFD	; 253
     9e4:	20 e0       	ldi	r18, 0x00	; 0
     9e6:	3f ef       	ldi	r19, 0xFF	; 255
     9e8:	4f e7       	ldi	r20, 0x7F	; 127
     9ea:	57 e4       	ldi	r21, 0x47	; 71
     9ec:	fc 01       	movw	r30, r24
     9ee:	60 81       	ld	r22, Z
     9f0:	71 81       	ldd	r23, Z+1	; 0x01
     9f2:	82 81       	ldd	r24, Z+2	; 0x02
     9f4:	93 81       	ldd	r25, Z+3	; 0x03
     9f6:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
     9fa:	18 16       	cp	r1, r24
     9fc:	0c f0       	brlt	.+2      	; 0xa00 <play_somthin_booy+0x226>
     9fe:	46 c0       	rjmp	.+140    	; 0xa8c <play_somthin_booy+0x2b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a00:	20 e0       	ldi	r18, 0x00	; 0
     a02:	30 e0       	ldi	r19, 0x00	; 0
     a04:	40 e2       	ldi	r20, 0x20	; 32
     a06:	51 e4       	ldi	r21, 0x41	; 65
     a08:	6d 81       	ldd	r22, Y+5	; 0x05
     a0a:	7e 81       	ldd	r23, Y+6	; 0x06
     a0c:	8f 81       	ldd	r24, Y+7	; 0x07
     a0e:	98 85       	ldd	r25, Y+8	; 0x08
     a10:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
     a14:	dc 01       	movw	r26, r24
     a16:	cb 01       	movw	r24, r22
     a18:	8e 01       	movw	r16, r28
     a1a:	0f 5d       	subi	r16, 0xDF	; 223
     a1c:	1d 4f       	sbci	r17, 0xFD	; 253
     a1e:	bc 01       	movw	r22, r24
     a20:	cd 01       	movw	r24, r26
     a22:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
     a26:	dc 01       	movw	r26, r24
     a28:	cb 01       	movw	r24, r22
     a2a:	f8 01       	movw	r30, r16
     a2c:	91 83       	std	Z+1, r25	; 0x01
     a2e:	80 83       	st	Z, r24
     a30:	24 c0       	rjmp	.+72     	; 0xa7a <play_somthin_booy+0x2a0>
     a32:	ce 01       	movw	r24, r28
     a34:	8d 5d       	subi	r24, 0xDD	; 221
     a36:	9d 4f       	sbci	r25, 0xFD	; 253
     a38:	20 e9       	ldi	r18, 0x90	; 144
     a3a:	31 e0       	ldi	r19, 0x01	; 1
     a3c:	fc 01       	movw	r30, r24
     a3e:	31 83       	std	Z+1, r19	; 0x01
     a40:	20 83       	st	Z, r18
     a42:	ce 01       	movw	r24, r28
     a44:	8d 5d       	subi	r24, 0xDD	; 221
     a46:	9d 4f       	sbci	r25, 0xFD	; 253
     a48:	fc 01       	movw	r30, r24
     a4a:	80 81       	ld	r24, Z
     a4c:	91 81       	ldd	r25, Z+1	; 0x01
     a4e:	01 97       	sbiw	r24, 0x01	; 1
     a50:	f1 f7       	brne	.-4      	; 0xa4e <play_somthin_booy+0x274>
     a52:	9e 01       	movw	r18, r28
     a54:	2d 5d       	subi	r18, 0xDD	; 221
     a56:	3d 4f       	sbci	r19, 0xFD	; 253
     a58:	f9 01       	movw	r30, r18
     a5a:	91 83       	std	Z+1, r25	; 0x01
     a5c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a5e:	ce 01       	movw	r24, r28
     a60:	8f 5d       	subi	r24, 0xDF	; 223
     a62:	9d 4f       	sbci	r25, 0xFD	; 253
     a64:	9e 01       	movw	r18, r28
     a66:	2f 5d       	subi	r18, 0xDF	; 223
     a68:	3d 4f       	sbci	r19, 0xFD	; 253
     a6a:	f9 01       	movw	r30, r18
     a6c:	20 81       	ld	r18, Z
     a6e:	31 81       	ldd	r19, Z+1	; 0x01
     a70:	21 50       	subi	r18, 0x01	; 1
     a72:	31 09       	sbc	r19, r1
     a74:	fc 01       	movw	r30, r24
     a76:	31 83       	std	Z+1, r19	; 0x01
     a78:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a7a:	ce 01       	movw	r24, r28
     a7c:	8f 5d       	subi	r24, 0xDF	; 223
     a7e:	9d 4f       	sbci	r25, 0xFD	; 253
     a80:	fc 01       	movw	r30, r24
     a82:	80 81       	ld	r24, Z
     a84:	91 81       	ldd	r25, Z+1	; 0x01
     a86:	89 2b       	or	r24, r25
     a88:	a1 f6       	brne	.-88     	; 0xa32 <play_somthin_booy+0x258>
     a8a:	2c c0       	rjmp	.+88     	; 0xae4 <play_somthin_booy+0x30a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a8c:	8e 01       	movw	r16, r28
     a8e:	0f 5d       	subi	r16, 0xDF	; 223
     a90:	1d 4f       	sbci	r17, 0xFD	; 253
     a92:	ce 01       	movw	r24, r28
     a94:	83 5e       	subi	r24, 0xE3	; 227
     a96:	9d 4f       	sbci	r25, 0xFD	; 253
     a98:	fc 01       	movw	r30, r24
     a9a:	60 81       	ld	r22, Z
     a9c:	71 81       	ldd	r23, Z+1	; 0x01
     a9e:	82 81       	ldd	r24, Z+2	; 0x02
     aa0:	93 81       	ldd	r25, Z+3	; 0x03
     aa2:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
     aa6:	dc 01       	movw	r26, r24
     aa8:	cb 01       	movw	r24, r22
     aaa:	f8 01       	movw	r30, r16
     aac:	91 83       	std	Z+1, r25	; 0x01
     aae:	80 83       	st	Z, r24
     ab0:	ce 01       	movw	r24, r28
     ab2:	8b 5d       	subi	r24, 0xDB	; 219
     ab4:	9d 4f       	sbci	r25, 0xFD	; 253
     ab6:	9e 01       	movw	r18, r28
     ab8:	2f 5d       	subi	r18, 0xDF	; 223
     aba:	3d 4f       	sbci	r19, 0xFD	; 253
     abc:	f9 01       	movw	r30, r18
     abe:	20 81       	ld	r18, Z
     ac0:	31 81       	ldd	r19, Z+1	; 0x01
     ac2:	fc 01       	movw	r30, r24
     ac4:	31 83       	std	Z+1, r19	; 0x01
     ac6:	20 83       	st	Z, r18
     ac8:	ce 01       	movw	r24, r28
     aca:	8b 5d       	subi	r24, 0xDB	; 219
     acc:	9d 4f       	sbci	r25, 0xFD	; 253
     ace:	fc 01       	movw	r30, r24
     ad0:	80 81       	ld	r24, Z
     ad2:	91 81       	ldd	r25, Z+1	; 0x01
     ad4:	01 97       	sbiw	r24, 0x01	; 1
     ad6:	f1 f7       	brne	.-4      	; 0xad4 <play_somthin_booy+0x2fa>
     ad8:	9e 01       	movw	r18, r28
     ada:	2b 5d       	subi	r18, 0xDB	; 219
     adc:	3d 4f       	sbci	r19, 0xFD	; 253
     ade:	f9 01       	movw	r30, r18
     ae0:	91 83       	std	Z+1, r25	; 0x01
     ae2:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F660 T100\n");
     ae4:	88 ec       	ldi	r24, 0xC8	; 200
     ae6:	91 e0       	ldi	r25, 0x01	; 1
     ae8:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
     aec:	80 e0       	ldi	r24, 0x00	; 0
     aee:	90 e0       	ldi	r25, 0x00	; 0
     af0:	a6 e9       	ldi	r26, 0x96	; 150
     af2:	b3 e4       	ldi	r27, 0x43	; 67
     af4:	89 87       	std	Y+9, r24	; 0x09
     af6:	9a 87       	std	Y+10, r25	; 0x0a
     af8:	ab 87       	std	Y+11, r26	; 0x0b
     afa:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     afc:	8e 01       	movw	r16, r28
     afe:	0d 5e       	subi	r16, 0xED	; 237
     b00:	1d 4f       	sbci	r17, 0xFD	; 253
     b02:	20 e0       	ldi	r18, 0x00	; 0
     b04:	30 e0       	ldi	r19, 0x00	; 0
     b06:	4a e7       	ldi	r20, 0x7A	; 122
     b08:	55 e4       	ldi	r21, 0x45	; 69
     b0a:	69 85       	ldd	r22, Y+9	; 0x09
     b0c:	7a 85       	ldd	r23, Y+10	; 0x0a
     b0e:	8b 85       	ldd	r24, Y+11	; 0x0b
     b10:	9c 85       	ldd	r25, Y+12	; 0x0c
     b12:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
     b16:	dc 01       	movw	r26, r24
     b18:	cb 01       	movw	r24, r22
     b1a:	f8 01       	movw	r30, r16
     b1c:	80 83       	st	Z, r24
     b1e:	91 83       	std	Z+1, r25	; 0x01
     b20:	a2 83       	std	Z+2, r26	; 0x02
     b22:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     b24:	ce 01       	movw	r24, r28
     b26:	8d 5e       	subi	r24, 0xED	; 237
     b28:	9d 4f       	sbci	r25, 0xFD	; 253
     b2a:	20 e0       	ldi	r18, 0x00	; 0
     b2c:	30 e0       	ldi	r19, 0x00	; 0
     b2e:	40 e8       	ldi	r20, 0x80	; 128
     b30:	5f e3       	ldi	r21, 0x3F	; 63
     b32:	fc 01       	movw	r30, r24
     b34:	60 81       	ld	r22, Z
     b36:	71 81       	ldd	r23, Z+1	; 0x01
     b38:	82 81       	ldd	r24, Z+2	; 0x02
     b3a:	93 81       	ldd	r25, Z+3	; 0x03
     b3c:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
     b40:	88 23       	and	r24, r24
     b42:	4c f4       	brge	.+18     	; 0xb56 <play_somthin_booy+0x37c>
		__ticks = 1;
     b44:	ce 01       	movw	r24, r28
     b46:	89 5e       	subi	r24, 0xE9	; 233
     b48:	9d 4f       	sbci	r25, 0xFD	; 253
     b4a:	21 e0       	ldi	r18, 0x01	; 1
     b4c:	30 e0       	ldi	r19, 0x00	; 0
     b4e:	fc 01       	movw	r30, r24
     b50:	31 83       	std	Z+1, r19	; 0x01
     b52:	20 83       	st	Z, r18
     b54:	69 c0       	rjmp	.+210    	; 0xc28 <play_somthin_booy+0x44e>
	else if (__tmp > 65535)
     b56:	ce 01       	movw	r24, r28
     b58:	8d 5e       	subi	r24, 0xED	; 237
     b5a:	9d 4f       	sbci	r25, 0xFD	; 253
     b5c:	20 e0       	ldi	r18, 0x00	; 0
     b5e:	3f ef       	ldi	r19, 0xFF	; 255
     b60:	4f e7       	ldi	r20, 0x7F	; 127
     b62:	57 e4       	ldi	r21, 0x47	; 71
     b64:	fc 01       	movw	r30, r24
     b66:	60 81       	ld	r22, Z
     b68:	71 81       	ldd	r23, Z+1	; 0x01
     b6a:	82 81       	ldd	r24, Z+2	; 0x02
     b6c:	93 81       	ldd	r25, Z+3	; 0x03
     b6e:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
     b72:	18 16       	cp	r1, r24
     b74:	0c f0       	brlt	.+2      	; 0xb78 <play_somthin_booy+0x39e>
     b76:	46 c0       	rjmp	.+140    	; 0xc04 <play_somthin_booy+0x42a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b78:	20 e0       	ldi	r18, 0x00	; 0
     b7a:	30 e0       	ldi	r19, 0x00	; 0
     b7c:	40 e2       	ldi	r20, 0x20	; 32
     b7e:	51 e4       	ldi	r21, 0x41	; 65
     b80:	69 85       	ldd	r22, Y+9	; 0x09
     b82:	7a 85       	ldd	r23, Y+10	; 0x0a
     b84:	8b 85       	ldd	r24, Y+11	; 0x0b
     b86:	9c 85       	ldd	r25, Y+12	; 0x0c
     b88:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
     b8c:	dc 01       	movw	r26, r24
     b8e:	cb 01       	movw	r24, r22
     b90:	8e 01       	movw	r16, r28
     b92:	09 5e       	subi	r16, 0xE9	; 233
     b94:	1d 4f       	sbci	r17, 0xFD	; 253
     b96:	bc 01       	movw	r22, r24
     b98:	cd 01       	movw	r24, r26
     b9a:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
     b9e:	dc 01       	movw	r26, r24
     ba0:	cb 01       	movw	r24, r22
     ba2:	f8 01       	movw	r30, r16
     ba4:	91 83       	std	Z+1, r25	; 0x01
     ba6:	80 83       	st	Z, r24
     ba8:	24 c0       	rjmp	.+72     	; 0xbf2 <play_somthin_booy+0x418>
     baa:	ce 01       	movw	r24, r28
     bac:	87 5e       	subi	r24, 0xE7	; 231
     bae:	9d 4f       	sbci	r25, 0xFD	; 253
     bb0:	20 e9       	ldi	r18, 0x90	; 144
     bb2:	31 e0       	ldi	r19, 0x01	; 1
     bb4:	fc 01       	movw	r30, r24
     bb6:	31 83       	std	Z+1, r19	; 0x01
     bb8:	20 83       	st	Z, r18
     bba:	ce 01       	movw	r24, r28
     bbc:	87 5e       	subi	r24, 0xE7	; 231
     bbe:	9d 4f       	sbci	r25, 0xFD	; 253
     bc0:	fc 01       	movw	r30, r24
     bc2:	80 81       	ld	r24, Z
     bc4:	91 81       	ldd	r25, Z+1	; 0x01
     bc6:	01 97       	sbiw	r24, 0x01	; 1
     bc8:	f1 f7       	brne	.-4      	; 0xbc6 <play_somthin_booy+0x3ec>
     bca:	9e 01       	movw	r18, r28
     bcc:	27 5e       	subi	r18, 0xE7	; 231
     bce:	3d 4f       	sbci	r19, 0xFD	; 253
     bd0:	f9 01       	movw	r30, r18
     bd2:	91 83       	std	Z+1, r25	; 0x01
     bd4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     bd6:	ce 01       	movw	r24, r28
     bd8:	89 5e       	subi	r24, 0xE9	; 233
     bda:	9d 4f       	sbci	r25, 0xFD	; 253
     bdc:	9e 01       	movw	r18, r28
     bde:	29 5e       	subi	r18, 0xE9	; 233
     be0:	3d 4f       	sbci	r19, 0xFD	; 253
     be2:	f9 01       	movw	r30, r18
     be4:	20 81       	ld	r18, Z
     be6:	31 81       	ldd	r19, Z+1	; 0x01
     be8:	21 50       	subi	r18, 0x01	; 1
     bea:	31 09       	sbc	r19, r1
     bec:	fc 01       	movw	r30, r24
     bee:	31 83       	std	Z+1, r19	; 0x01
     bf0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     bf2:	ce 01       	movw	r24, r28
     bf4:	89 5e       	subi	r24, 0xE9	; 233
     bf6:	9d 4f       	sbci	r25, 0xFD	; 253
     bf8:	fc 01       	movw	r30, r24
     bfa:	80 81       	ld	r24, Z
     bfc:	91 81       	ldd	r25, Z+1	; 0x01
     bfe:	89 2b       	or	r24, r25
     c00:	a1 f6       	brne	.-88     	; 0xbaa <play_somthin_booy+0x3d0>
     c02:	2c c0       	rjmp	.+88     	; 0xc5c <play_somthin_booy+0x482>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c04:	8e 01       	movw	r16, r28
     c06:	09 5e       	subi	r16, 0xE9	; 233
     c08:	1d 4f       	sbci	r17, 0xFD	; 253
     c0a:	ce 01       	movw	r24, r28
     c0c:	8d 5e       	subi	r24, 0xED	; 237
     c0e:	9d 4f       	sbci	r25, 0xFD	; 253
     c10:	fc 01       	movw	r30, r24
     c12:	60 81       	ld	r22, Z
     c14:	71 81       	ldd	r23, Z+1	; 0x01
     c16:	82 81       	ldd	r24, Z+2	; 0x02
     c18:	93 81       	ldd	r25, Z+3	; 0x03
     c1a:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
     c1e:	dc 01       	movw	r26, r24
     c20:	cb 01       	movw	r24, r22
     c22:	f8 01       	movw	r30, r16
     c24:	91 83       	std	Z+1, r25	; 0x01
     c26:	80 83       	st	Z, r24
     c28:	ce 01       	movw	r24, r28
     c2a:	85 5e       	subi	r24, 0xE5	; 229
     c2c:	9d 4f       	sbci	r25, 0xFD	; 253
     c2e:	9e 01       	movw	r18, r28
     c30:	29 5e       	subi	r18, 0xE9	; 233
     c32:	3d 4f       	sbci	r19, 0xFD	; 253
     c34:	f9 01       	movw	r30, r18
     c36:	20 81       	ld	r18, Z
     c38:	31 81       	ldd	r19, Z+1	; 0x01
     c3a:	fc 01       	movw	r30, r24
     c3c:	31 83       	std	Z+1, r19	; 0x01
     c3e:	20 83       	st	Z, r18
     c40:	ce 01       	movw	r24, r28
     c42:	85 5e       	subi	r24, 0xE5	; 229
     c44:	9d 4f       	sbci	r25, 0xFD	; 253
     c46:	fc 01       	movw	r30, r24
     c48:	80 81       	ld	r24, Z
     c4a:	91 81       	ldd	r25, Z+1	; 0x01
     c4c:	01 97       	sbiw	r24, 0x01	; 1
     c4e:	f1 f7       	brne	.-4      	; 0xc4c <play_somthin_booy+0x472>
     c50:	9e 01       	movw	r18, r28
     c52:	25 5e       	subi	r18, 0xE5	; 229
     c54:	3d 4f       	sbci	r19, 0xFD	; 253
     c56:	f9 01       	movw	r30, r18
     c58:	91 83       	std	Z+1, r25	; 0x01
     c5a:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F510 T100\n");
     c5c:	89 ed       	ldi	r24, 0xD9	; 217
     c5e:	91 e0       	ldi	r25, 0x01	; 1
     c60:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
     c64:	80 e0       	ldi	r24, 0x00	; 0
     c66:	90 e0       	ldi	r25, 0x00	; 0
     c68:	a8 ec       	ldi	r26, 0xC8	; 200
     c6a:	b2 e4       	ldi	r27, 0x42	; 66
     c6c:	8d 87       	std	Y+13, r24	; 0x0d
     c6e:	9e 87       	std	Y+14, r25	; 0x0e
     c70:	af 87       	std	Y+15, r26	; 0x0f
     c72:	b8 8b       	std	Y+16, r27	; 0x10

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     c74:	8e 01       	movw	r16, r28
     c76:	07 5f       	subi	r16, 0xF7	; 247
     c78:	1d 4f       	sbci	r17, 0xFD	; 253
     c7a:	20 e0       	ldi	r18, 0x00	; 0
     c7c:	30 e0       	ldi	r19, 0x00	; 0
     c7e:	4a e7       	ldi	r20, 0x7A	; 122
     c80:	55 e4       	ldi	r21, 0x45	; 69
     c82:	6d 85       	ldd	r22, Y+13	; 0x0d
     c84:	7e 85       	ldd	r23, Y+14	; 0x0e
     c86:	8f 85       	ldd	r24, Y+15	; 0x0f
     c88:	98 89       	ldd	r25, Y+16	; 0x10
     c8a:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
     c8e:	dc 01       	movw	r26, r24
     c90:	cb 01       	movw	r24, r22
     c92:	f8 01       	movw	r30, r16
     c94:	80 83       	st	Z, r24
     c96:	91 83       	std	Z+1, r25	; 0x01
     c98:	a2 83       	std	Z+2, r26	; 0x02
     c9a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     c9c:	ce 01       	movw	r24, r28
     c9e:	87 5f       	subi	r24, 0xF7	; 247
     ca0:	9d 4f       	sbci	r25, 0xFD	; 253
     ca2:	20 e0       	ldi	r18, 0x00	; 0
     ca4:	30 e0       	ldi	r19, 0x00	; 0
     ca6:	40 e8       	ldi	r20, 0x80	; 128
     ca8:	5f e3       	ldi	r21, 0x3F	; 63
     caa:	fc 01       	movw	r30, r24
     cac:	60 81       	ld	r22, Z
     cae:	71 81       	ldd	r23, Z+1	; 0x01
     cb0:	82 81       	ldd	r24, Z+2	; 0x02
     cb2:	93 81       	ldd	r25, Z+3	; 0x03
     cb4:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
     cb8:	88 23       	and	r24, r24
     cba:	4c f4       	brge	.+18     	; 0xcce <play_somthin_booy+0x4f4>
		__ticks = 1;
     cbc:	ce 01       	movw	r24, r28
     cbe:	83 5f       	subi	r24, 0xF3	; 243
     cc0:	9d 4f       	sbci	r25, 0xFD	; 253
     cc2:	21 e0       	ldi	r18, 0x01	; 1
     cc4:	30 e0       	ldi	r19, 0x00	; 0
     cc6:	fc 01       	movw	r30, r24
     cc8:	31 83       	std	Z+1, r19	; 0x01
     cca:	20 83       	st	Z, r18
     ccc:	69 c0       	rjmp	.+210    	; 0xda0 <play_somthin_booy+0x5c6>
	else if (__tmp > 65535)
     cce:	ce 01       	movw	r24, r28
     cd0:	87 5f       	subi	r24, 0xF7	; 247
     cd2:	9d 4f       	sbci	r25, 0xFD	; 253
     cd4:	20 e0       	ldi	r18, 0x00	; 0
     cd6:	3f ef       	ldi	r19, 0xFF	; 255
     cd8:	4f e7       	ldi	r20, 0x7F	; 127
     cda:	57 e4       	ldi	r21, 0x47	; 71
     cdc:	fc 01       	movw	r30, r24
     cde:	60 81       	ld	r22, Z
     ce0:	71 81       	ldd	r23, Z+1	; 0x01
     ce2:	82 81       	ldd	r24, Z+2	; 0x02
     ce4:	93 81       	ldd	r25, Z+3	; 0x03
     ce6:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
     cea:	18 16       	cp	r1, r24
     cec:	0c f0       	brlt	.+2      	; 0xcf0 <play_somthin_booy+0x516>
     cee:	46 c0       	rjmp	.+140    	; 0xd7c <play_somthin_booy+0x5a2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     cf0:	20 e0       	ldi	r18, 0x00	; 0
     cf2:	30 e0       	ldi	r19, 0x00	; 0
     cf4:	40 e2       	ldi	r20, 0x20	; 32
     cf6:	51 e4       	ldi	r21, 0x41	; 65
     cf8:	6d 85       	ldd	r22, Y+13	; 0x0d
     cfa:	7e 85       	ldd	r23, Y+14	; 0x0e
     cfc:	8f 85       	ldd	r24, Y+15	; 0x0f
     cfe:	98 89       	ldd	r25, Y+16	; 0x10
     d00:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
     d04:	dc 01       	movw	r26, r24
     d06:	cb 01       	movw	r24, r22
     d08:	8e 01       	movw	r16, r28
     d0a:	03 5f       	subi	r16, 0xF3	; 243
     d0c:	1d 4f       	sbci	r17, 0xFD	; 253
     d0e:	bc 01       	movw	r22, r24
     d10:	cd 01       	movw	r24, r26
     d12:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
     d16:	dc 01       	movw	r26, r24
     d18:	cb 01       	movw	r24, r22
     d1a:	f8 01       	movw	r30, r16
     d1c:	91 83       	std	Z+1, r25	; 0x01
     d1e:	80 83       	st	Z, r24
     d20:	24 c0       	rjmp	.+72     	; 0xd6a <play_somthin_booy+0x590>
     d22:	ce 01       	movw	r24, r28
     d24:	81 5f       	subi	r24, 0xF1	; 241
     d26:	9d 4f       	sbci	r25, 0xFD	; 253
     d28:	20 e9       	ldi	r18, 0x90	; 144
     d2a:	31 e0       	ldi	r19, 0x01	; 1
     d2c:	fc 01       	movw	r30, r24
     d2e:	31 83       	std	Z+1, r19	; 0x01
     d30:	20 83       	st	Z, r18
     d32:	ce 01       	movw	r24, r28
     d34:	81 5f       	subi	r24, 0xF1	; 241
     d36:	9d 4f       	sbci	r25, 0xFD	; 253
     d38:	fc 01       	movw	r30, r24
     d3a:	80 81       	ld	r24, Z
     d3c:	91 81       	ldd	r25, Z+1	; 0x01
     d3e:	01 97       	sbiw	r24, 0x01	; 1
     d40:	f1 f7       	brne	.-4      	; 0xd3e <play_somthin_booy+0x564>
     d42:	9e 01       	movw	r18, r28
     d44:	21 5f       	subi	r18, 0xF1	; 241
     d46:	3d 4f       	sbci	r19, 0xFD	; 253
     d48:	f9 01       	movw	r30, r18
     d4a:	91 83       	std	Z+1, r25	; 0x01
     d4c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d4e:	ce 01       	movw	r24, r28
     d50:	83 5f       	subi	r24, 0xF3	; 243
     d52:	9d 4f       	sbci	r25, 0xFD	; 253
     d54:	9e 01       	movw	r18, r28
     d56:	23 5f       	subi	r18, 0xF3	; 243
     d58:	3d 4f       	sbci	r19, 0xFD	; 253
     d5a:	f9 01       	movw	r30, r18
     d5c:	20 81       	ld	r18, Z
     d5e:	31 81       	ldd	r19, Z+1	; 0x01
     d60:	21 50       	subi	r18, 0x01	; 1
     d62:	31 09       	sbc	r19, r1
     d64:	fc 01       	movw	r30, r24
     d66:	31 83       	std	Z+1, r19	; 0x01
     d68:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d6a:	ce 01       	movw	r24, r28
     d6c:	83 5f       	subi	r24, 0xF3	; 243
     d6e:	9d 4f       	sbci	r25, 0xFD	; 253
     d70:	fc 01       	movw	r30, r24
     d72:	80 81       	ld	r24, Z
     d74:	91 81       	ldd	r25, Z+1	; 0x01
     d76:	89 2b       	or	r24, r25
     d78:	a1 f6       	brne	.-88     	; 0xd22 <play_somthin_booy+0x548>
     d7a:	2c c0       	rjmp	.+88     	; 0xdd4 <play_somthin_booy+0x5fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d7c:	8e 01       	movw	r16, r28
     d7e:	03 5f       	subi	r16, 0xF3	; 243
     d80:	1d 4f       	sbci	r17, 0xFD	; 253
     d82:	ce 01       	movw	r24, r28
     d84:	87 5f       	subi	r24, 0xF7	; 247
     d86:	9d 4f       	sbci	r25, 0xFD	; 253
     d88:	fc 01       	movw	r30, r24
     d8a:	60 81       	ld	r22, Z
     d8c:	71 81       	ldd	r23, Z+1	; 0x01
     d8e:	82 81       	ldd	r24, Z+2	; 0x02
     d90:	93 81       	ldd	r25, Z+3	; 0x03
     d92:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
     d96:	dc 01       	movw	r26, r24
     d98:	cb 01       	movw	r24, r22
     d9a:	f8 01       	movw	r30, r16
     d9c:	91 83       	std	Z+1, r25	; 0x01
     d9e:	80 83       	st	Z, r24
     da0:	ce 01       	movw	r24, r28
     da2:	8f 5e       	subi	r24, 0xEF	; 239
     da4:	9d 4f       	sbci	r25, 0xFD	; 253
     da6:	9e 01       	movw	r18, r28
     da8:	23 5f       	subi	r18, 0xF3	; 243
     daa:	3d 4f       	sbci	r19, 0xFD	; 253
     dac:	f9 01       	movw	r30, r18
     dae:	20 81       	ld	r18, Z
     db0:	31 81       	ldd	r19, Z+1	; 0x01
     db2:	fc 01       	movw	r30, r24
     db4:	31 83       	std	Z+1, r19	; 0x01
     db6:	20 83       	st	Z, r18
     db8:	ce 01       	movw	r24, r28
     dba:	8f 5e       	subi	r24, 0xEF	; 239
     dbc:	9d 4f       	sbci	r25, 0xFD	; 253
     dbe:	fc 01       	movw	r30, r24
     dc0:	80 81       	ld	r24, Z
     dc2:	91 81       	ldd	r25, Z+1	; 0x01
     dc4:	01 97       	sbiw	r24, 0x01	; 1
     dc6:	f1 f7       	brne	.-4      	; 0xdc4 <play_somthin_booy+0x5ea>
     dc8:	9e 01       	movw	r18, r28
     dca:	2f 5e       	subi	r18, 0xEF	; 239
     dcc:	3d 4f       	sbci	r19, 0xFD	; 253
     dce:	f9 01       	movw	r30, r18
     dd0:	91 83       	std	Z+1, r25	; 0x01
     dd2:	80 83       	st	Z, r24
	_delay_ms(100);
	to_uARM("M2210 F660 T100\n");
     dd4:	88 ec       	ldi	r24, 0xC8	; 200
     dd6:	91 e0       	ldi	r25, 0x01	; 1
     dd8:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
     ddc:	80 e0       	ldi	r24, 0x00	; 0
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	a6 e9       	ldi	r26, 0x96	; 150
     de2:	b3 e4       	ldi	r27, 0x43	; 67
     de4:	89 8b       	std	Y+17, r24	; 0x11
     de6:	9a 8b       	std	Y+18, r25	; 0x12
     de8:	ab 8b       	std	Y+19, r26	; 0x13
     dea:	bc 8b       	std	Y+20, r27	; 0x14

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     dec:	8e 01       	movw	r16, r28
     dee:	01 50       	subi	r16, 0x01	; 1
     df0:	1e 4f       	sbci	r17, 0xFE	; 254
     df2:	20 e0       	ldi	r18, 0x00	; 0
     df4:	30 e0       	ldi	r19, 0x00	; 0
     df6:	4a e7       	ldi	r20, 0x7A	; 122
     df8:	55 e4       	ldi	r21, 0x45	; 69
     dfa:	69 89       	ldd	r22, Y+17	; 0x11
     dfc:	7a 89       	ldd	r23, Y+18	; 0x12
     dfe:	8b 89       	ldd	r24, Y+19	; 0x13
     e00:	9c 89       	ldd	r25, Y+20	; 0x14
     e02:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
     e06:	dc 01       	movw	r26, r24
     e08:	cb 01       	movw	r24, r22
     e0a:	f8 01       	movw	r30, r16
     e0c:	80 83       	st	Z, r24
     e0e:	91 83       	std	Z+1, r25	; 0x01
     e10:	a2 83       	std	Z+2, r26	; 0x02
     e12:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     e14:	ce 01       	movw	r24, r28
     e16:	81 50       	subi	r24, 0x01	; 1
     e18:	9e 4f       	sbci	r25, 0xFE	; 254
     e1a:	20 e0       	ldi	r18, 0x00	; 0
     e1c:	30 e0       	ldi	r19, 0x00	; 0
     e1e:	40 e8       	ldi	r20, 0x80	; 128
     e20:	5f e3       	ldi	r21, 0x3F	; 63
     e22:	fc 01       	movw	r30, r24
     e24:	60 81       	ld	r22, Z
     e26:	71 81       	ldd	r23, Z+1	; 0x01
     e28:	82 81       	ldd	r24, Z+2	; 0x02
     e2a:	93 81       	ldd	r25, Z+3	; 0x03
     e2c:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
     e30:	88 23       	and	r24, r24
     e32:	4c f4       	brge	.+18     	; 0xe46 <play_somthin_booy+0x66c>
		__ticks = 1;
     e34:	ce 01       	movw	r24, r28
     e36:	8d 5f       	subi	r24, 0xFD	; 253
     e38:	9d 4f       	sbci	r25, 0xFD	; 253
     e3a:	21 e0       	ldi	r18, 0x01	; 1
     e3c:	30 e0       	ldi	r19, 0x00	; 0
     e3e:	fc 01       	movw	r30, r24
     e40:	31 83       	std	Z+1, r19	; 0x01
     e42:	20 83       	st	Z, r18
     e44:	69 c0       	rjmp	.+210    	; 0xf18 <play_somthin_booy+0x73e>
	else if (__tmp > 65535)
     e46:	ce 01       	movw	r24, r28
     e48:	81 50       	subi	r24, 0x01	; 1
     e4a:	9e 4f       	sbci	r25, 0xFE	; 254
     e4c:	20 e0       	ldi	r18, 0x00	; 0
     e4e:	3f ef       	ldi	r19, 0xFF	; 255
     e50:	4f e7       	ldi	r20, 0x7F	; 127
     e52:	57 e4       	ldi	r21, 0x47	; 71
     e54:	fc 01       	movw	r30, r24
     e56:	60 81       	ld	r22, Z
     e58:	71 81       	ldd	r23, Z+1	; 0x01
     e5a:	82 81       	ldd	r24, Z+2	; 0x02
     e5c:	93 81       	ldd	r25, Z+3	; 0x03
     e5e:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
     e62:	18 16       	cp	r1, r24
     e64:	0c f0       	brlt	.+2      	; 0xe68 <play_somthin_booy+0x68e>
     e66:	46 c0       	rjmp	.+140    	; 0xef4 <play_somthin_booy+0x71a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e68:	20 e0       	ldi	r18, 0x00	; 0
     e6a:	30 e0       	ldi	r19, 0x00	; 0
     e6c:	40 e2       	ldi	r20, 0x20	; 32
     e6e:	51 e4       	ldi	r21, 0x41	; 65
     e70:	69 89       	ldd	r22, Y+17	; 0x11
     e72:	7a 89       	ldd	r23, Y+18	; 0x12
     e74:	8b 89       	ldd	r24, Y+19	; 0x13
     e76:	9c 89       	ldd	r25, Y+20	; 0x14
     e78:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
     e7c:	dc 01       	movw	r26, r24
     e7e:	cb 01       	movw	r24, r22
     e80:	8e 01       	movw	r16, r28
     e82:	0d 5f       	subi	r16, 0xFD	; 253
     e84:	1d 4f       	sbci	r17, 0xFD	; 253
     e86:	bc 01       	movw	r22, r24
     e88:	cd 01       	movw	r24, r26
     e8a:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
     e8e:	dc 01       	movw	r26, r24
     e90:	cb 01       	movw	r24, r22
     e92:	f8 01       	movw	r30, r16
     e94:	91 83       	std	Z+1, r25	; 0x01
     e96:	80 83       	st	Z, r24
     e98:	24 c0       	rjmp	.+72     	; 0xee2 <play_somthin_booy+0x708>
     e9a:	ce 01       	movw	r24, r28
     e9c:	8b 5f       	subi	r24, 0xFB	; 251
     e9e:	9d 4f       	sbci	r25, 0xFD	; 253
     ea0:	20 e9       	ldi	r18, 0x90	; 144
     ea2:	31 e0       	ldi	r19, 0x01	; 1
     ea4:	fc 01       	movw	r30, r24
     ea6:	31 83       	std	Z+1, r19	; 0x01
     ea8:	20 83       	st	Z, r18
     eaa:	ce 01       	movw	r24, r28
     eac:	8b 5f       	subi	r24, 0xFB	; 251
     eae:	9d 4f       	sbci	r25, 0xFD	; 253
     eb0:	fc 01       	movw	r30, r24
     eb2:	80 81       	ld	r24, Z
     eb4:	91 81       	ldd	r25, Z+1	; 0x01
     eb6:	01 97       	sbiw	r24, 0x01	; 1
     eb8:	f1 f7       	brne	.-4      	; 0xeb6 <play_somthin_booy+0x6dc>
     eba:	9e 01       	movw	r18, r28
     ebc:	2b 5f       	subi	r18, 0xFB	; 251
     ebe:	3d 4f       	sbci	r19, 0xFD	; 253
     ec0:	f9 01       	movw	r30, r18
     ec2:	91 83       	std	Z+1, r25	; 0x01
     ec4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ec6:	ce 01       	movw	r24, r28
     ec8:	8d 5f       	subi	r24, 0xFD	; 253
     eca:	9d 4f       	sbci	r25, 0xFD	; 253
     ecc:	9e 01       	movw	r18, r28
     ece:	2d 5f       	subi	r18, 0xFD	; 253
     ed0:	3d 4f       	sbci	r19, 0xFD	; 253
     ed2:	f9 01       	movw	r30, r18
     ed4:	20 81       	ld	r18, Z
     ed6:	31 81       	ldd	r19, Z+1	; 0x01
     ed8:	21 50       	subi	r18, 0x01	; 1
     eda:	31 09       	sbc	r19, r1
     edc:	fc 01       	movw	r30, r24
     ede:	31 83       	std	Z+1, r19	; 0x01
     ee0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ee2:	ce 01       	movw	r24, r28
     ee4:	8d 5f       	subi	r24, 0xFD	; 253
     ee6:	9d 4f       	sbci	r25, 0xFD	; 253
     ee8:	fc 01       	movw	r30, r24
     eea:	80 81       	ld	r24, Z
     eec:	91 81       	ldd	r25, Z+1	; 0x01
     eee:	89 2b       	or	r24, r25
     ef0:	a1 f6       	brne	.-88     	; 0xe9a <play_somthin_booy+0x6c0>
     ef2:	2c c0       	rjmp	.+88     	; 0xf4c <play_somthin_booy+0x772>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ef4:	8e 01       	movw	r16, r28
     ef6:	0d 5f       	subi	r16, 0xFD	; 253
     ef8:	1d 4f       	sbci	r17, 0xFD	; 253
     efa:	ce 01       	movw	r24, r28
     efc:	81 50       	subi	r24, 0x01	; 1
     efe:	9e 4f       	sbci	r25, 0xFE	; 254
     f00:	fc 01       	movw	r30, r24
     f02:	60 81       	ld	r22, Z
     f04:	71 81       	ldd	r23, Z+1	; 0x01
     f06:	82 81       	ldd	r24, Z+2	; 0x02
     f08:	93 81       	ldd	r25, Z+3	; 0x03
     f0a:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
     f0e:	dc 01       	movw	r26, r24
     f10:	cb 01       	movw	r24, r22
     f12:	f8 01       	movw	r30, r16
     f14:	91 83       	std	Z+1, r25	; 0x01
     f16:	80 83       	st	Z, r24
     f18:	ce 01       	movw	r24, r28
     f1a:	89 5f       	subi	r24, 0xF9	; 249
     f1c:	9d 4f       	sbci	r25, 0xFD	; 253
     f1e:	9e 01       	movw	r18, r28
     f20:	2d 5f       	subi	r18, 0xFD	; 253
     f22:	3d 4f       	sbci	r19, 0xFD	; 253
     f24:	f9 01       	movw	r30, r18
     f26:	20 81       	ld	r18, Z
     f28:	31 81       	ldd	r19, Z+1	; 0x01
     f2a:	fc 01       	movw	r30, r24
     f2c:	31 83       	std	Z+1, r19	; 0x01
     f2e:	20 83       	st	Z, r18
     f30:	ce 01       	movw	r24, r28
     f32:	89 5f       	subi	r24, 0xF9	; 249
     f34:	9d 4f       	sbci	r25, 0xFD	; 253
     f36:	fc 01       	movw	r30, r24
     f38:	80 81       	ld	r24, Z
     f3a:	91 81       	ldd	r25, Z+1	; 0x01
     f3c:	01 97       	sbiw	r24, 0x01	; 1
     f3e:	f1 f7       	brne	.-4      	; 0xf3c <play_somthin_booy+0x762>
     f40:	9e 01       	movw	r18, r28
     f42:	29 5f       	subi	r18, 0xF9	; 249
     f44:	3d 4f       	sbci	r19, 0xFD	; 253
     f46:	f9 01       	movw	r30, r18
     f48:	91 83       	std	Z+1, r25	; 0x01
     f4a:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F770 T100\n");
     f4c:	8a ee       	ldi	r24, 0xEA	; 234
     f4e:	91 e0       	ldi	r25, 0x01	; 1
     f50:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
     f54:	80 e0       	ldi	r24, 0x00	; 0
     f56:	90 e8       	ldi	r25, 0x80	; 128
     f58:	a9 e0       	ldi	r26, 0x09	; 9
     f5a:	b4 e4       	ldi	r27, 0x44	; 68
     f5c:	8d 8b       	std	Y+21, r24	; 0x15
     f5e:	9e 8b       	std	Y+22, r25	; 0x16
     f60:	af 8b       	std	Y+23, r26	; 0x17
     f62:	b8 8f       	std	Y+24, r27	; 0x18

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     f64:	8e 01       	movw	r16, r28
     f66:	0b 50       	subi	r16, 0x0B	; 11
     f68:	1e 4f       	sbci	r17, 0xFE	; 254
     f6a:	20 e0       	ldi	r18, 0x00	; 0
     f6c:	30 e0       	ldi	r19, 0x00	; 0
     f6e:	4a e7       	ldi	r20, 0x7A	; 122
     f70:	55 e4       	ldi	r21, 0x45	; 69
     f72:	6d 89       	ldd	r22, Y+21	; 0x15
     f74:	7e 89       	ldd	r23, Y+22	; 0x16
     f76:	8f 89       	ldd	r24, Y+23	; 0x17
     f78:	98 8d       	ldd	r25, Y+24	; 0x18
     f7a:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
     f7e:	dc 01       	movw	r26, r24
     f80:	cb 01       	movw	r24, r22
     f82:	f8 01       	movw	r30, r16
     f84:	80 83       	st	Z, r24
     f86:	91 83       	std	Z+1, r25	; 0x01
     f88:	a2 83       	std	Z+2, r26	; 0x02
     f8a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     f8c:	ce 01       	movw	r24, r28
     f8e:	8b 50       	subi	r24, 0x0B	; 11
     f90:	9e 4f       	sbci	r25, 0xFE	; 254
     f92:	20 e0       	ldi	r18, 0x00	; 0
     f94:	30 e0       	ldi	r19, 0x00	; 0
     f96:	40 e8       	ldi	r20, 0x80	; 128
     f98:	5f e3       	ldi	r21, 0x3F	; 63
     f9a:	fc 01       	movw	r30, r24
     f9c:	60 81       	ld	r22, Z
     f9e:	71 81       	ldd	r23, Z+1	; 0x01
     fa0:	82 81       	ldd	r24, Z+2	; 0x02
     fa2:	93 81       	ldd	r25, Z+3	; 0x03
     fa4:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
     fa8:	88 23       	and	r24, r24
     faa:	4c f4       	brge	.+18     	; 0xfbe <play_somthin_booy+0x7e4>
		__ticks = 1;
     fac:	ce 01       	movw	r24, r28
     fae:	87 50       	subi	r24, 0x07	; 7
     fb0:	9e 4f       	sbci	r25, 0xFE	; 254
     fb2:	21 e0       	ldi	r18, 0x01	; 1
     fb4:	30 e0       	ldi	r19, 0x00	; 0
     fb6:	fc 01       	movw	r30, r24
     fb8:	31 83       	std	Z+1, r19	; 0x01
     fba:	20 83       	st	Z, r18
     fbc:	69 c0       	rjmp	.+210    	; 0x1090 <play_somthin_booy+0x8b6>
	else if (__tmp > 65535)
     fbe:	ce 01       	movw	r24, r28
     fc0:	8b 50       	subi	r24, 0x0B	; 11
     fc2:	9e 4f       	sbci	r25, 0xFE	; 254
     fc4:	20 e0       	ldi	r18, 0x00	; 0
     fc6:	3f ef       	ldi	r19, 0xFF	; 255
     fc8:	4f e7       	ldi	r20, 0x7F	; 127
     fca:	57 e4       	ldi	r21, 0x47	; 71
     fcc:	fc 01       	movw	r30, r24
     fce:	60 81       	ld	r22, Z
     fd0:	71 81       	ldd	r23, Z+1	; 0x01
     fd2:	82 81       	ldd	r24, Z+2	; 0x02
     fd4:	93 81       	ldd	r25, Z+3	; 0x03
     fd6:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
     fda:	18 16       	cp	r1, r24
     fdc:	0c f0       	brlt	.+2      	; 0xfe0 <play_somthin_booy+0x806>
     fde:	46 c0       	rjmp	.+140    	; 0x106c <play_somthin_booy+0x892>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     fe0:	20 e0       	ldi	r18, 0x00	; 0
     fe2:	30 e0       	ldi	r19, 0x00	; 0
     fe4:	40 e2       	ldi	r20, 0x20	; 32
     fe6:	51 e4       	ldi	r21, 0x41	; 65
     fe8:	6d 89       	ldd	r22, Y+21	; 0x15
     fea:	7e 89       	ldd	r23, Y+22	; 0x16
     fec:	8f 89       	ldd	r24, Y+23	; 0x17
     fee:	98 8d       	ldd	r25, Y+24	; 0x18
     ff0:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
     ff4:	dc 01       	movw	r26, r24
     ff6:	cb 01       	movw	r24, r22
     ff8:	8e 01       	movw	r16, r28
     ffa:	07 50       	subi	r16, 0x07	; 7
     ffc:	1e 4f       	sbci	r17, 0xFE	; 254
     ffe:	bc 01       	movw	r22, r24
    1000:	cd 01       	movw	r24, r26
    1002:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    1006:	dc 01       	movw	r26, r24
    1008:	cb 01       	movw	r24, r22
    100a:	f8 01       	movw	r30, r16
    100c:	91 83       	std	Z+1, r25	; 0x01
    100e:	80 83       	st	Z, r24
    1010:	24 c0       	rjmp	.+72     	; 0x105a <play_somthin_booy+0x880>
    1012:	ce 01       	movw	r24, r28
    1014:	85 50       	subi	r24, 0x05	; 5
    1016:	9e 4f       	sbci	r25, 0xFE	; 254
    1018:	20 e9       	ldi	r18, 0x90	; 144
    101a:	31 e0       	ldi	r19, 0x01	; 1
    101c:	fc 01       	movw	r30, r24
    101e:	31 83       	std	Z+1, r19	; 0x01
    1020:	20 83       	st	Z, r18
    1022:	ce 01       	movw	r24, r28
    1024:	85 50       	subi	r24, 0x05	; 5
    1026:	9e 4f       	sbci	r25, 0xFE	; 254
    1028:	fc 01       	movw	r30, r24
    102a:	80 81       	ld	r24, Z
    102c:	91 81       	ldd	r25, Z+1	; 0x01
    102e:	01 97       	sbiw	r24, 0x01	; 1
    1030:	f1 f7       	brne	.-4      	; 0x102e <play_somthin_booy+0x854>
    1032:	9e 01       	movw	r18, r28
    1034:	25 50       	subi	r18, 0x05	; 5
    1036:	3e 4f       	sbci	r19, 0xFE	; 254
    1038:	f9 01       	movw	r30, r18
    103a:	91 83       	std	Z+1, r25	; 0x01
    103c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    103e:	ce 01       	movw	r24, r28
    1040:	87 50       	subi	r24, 0x07	; 7
    1042:	9e 4f       	sbci	r25, 0xFE	; 254
    1044:	9e 01       	movw	r18, r28
    1046:	27 50       	subi	r18, 0x07	; 7
    1048:	3e 4f       	sbci	r19, 0xFE	; 254
    104a:	f9 01       	movw	r30, r18
    104c:	20 81       	ld	r18, Z
    104e:	31 81       	ldd	r19, Z+1	; 0x01
    1050:	21 50       	subi	r18, 0x01	; 1
    1052:	31 09       	sbc	r19, r1
    1054:	fc 01       	movw	r30, r24
    1056:	31 83       	std	Z+1, r19	; 0x01
    1058:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    105a:	ce 01       	movw	r24, r28
    105c:	87 50       	subi	r24, 0x07	; 7
    105e:	9e 4f       	sbci	r25, 0xFE	; 254
    1060:	fc 01       	movw	r30, r24
    1062:	80 81       	ld	r24, Z
    1064:	91 81       	ldd	r25, Z+1	; 0x01
    1066:	89 2b       	or	r24, r25
    1068:	a1 f6       	brne	.-88     	; 0x1012 <play_somthin_booy+0x838>
    106a:	2c c0       	rjmp	.+88     	; 0x10c4 <play_somthin_booy+0x8ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    106c:	8e 01       	movw	r16, r28
    106e:	07 50       	subi	r16, 0x07	; 7
    1070:	1e 4f       	sbci	r17, 0xFE	; 254
    1072:	ce 01       	movw	r24, r28
    1074:	8b 50       	subi	r24, 0x0B	; 11
    1076:	9e 4f       	sbci	r25, 0xFE	; 254
    1078:	fc 01       	movw	r30, r24
    107a:	60 81       	ld	r22, Z
    107c:	71 81       	ldd	r23, Z+1	; 0x01
    107e:	82 81       	ldd	r24, Z+2	; 0x02
    1080:	93 81       	ldd	r25, Z+3	; 0x03
    1082:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    1086:	dc 01       	movw	r26, r24
    1088:	cb 01       	movw	r24, r22
    108a:	f8 01       	movw	r30, r16
    108c:	91 83       	std	Z+1, r25	; 0x01
    108e:	80 83       	st	Z, r24
    1090:	ce 01       	movw	r24, r28
    1092:	83 50       	subi	r24, 0x03	; 3
    1094:	9e 4f       	sbci	r25, 0xFE	; 254
    1096:	9e 01       	movw	r18, r28
    1098:	27 50       	subi	r18, 0x07	; 7
    109a:	3e 4f       	sbci	r19, 0xFE	; 254
    109c:	f9 01       	movw	r30, r18
    109e:	20 81       	ld	r18, Z
    10a0:	31 81       	ldd	r19, Z+1	; 0x01
    10a2:	fc 01       	movw	r30, r24
    10a4:	31 83       	std	Z+1, r19	; 0x01
    10a6:	20 83       	st	Z, r18
    10a8:	ce 01       	movw	r24, r28
    10aa:	83 50       	subi	r24, 0x03	; 3
    10ac:	9e 4f       	sbci	r25, 0xFE	; 254
    10ae:	fc 01       	movw	r30, r24
    10b0:	80 81       	ld	r24, Z
    10b2:	91 81       	ldd	r25, Z+1	; 0x01
    10b4:	01 97       	sbiw	r24, 0x01	; 1
    10b6:	f1 f7       	brne	.-4      	; 0x10b4 <play_somthin_booy+0x8da>
    10b8:	9e 01       	movw	r18, r28
    10ba:	23 50       	subi	r18, 0x03	; 3
    10bc:	3e 4f       	sbci	r19, 0xFE	; 254
    10be:	f9 01       	movw	r30, r18
    10c0:	91 83       	std	Z+1, r25	; 0x01
    10c2:	80 83       	st	Z, r24
	_delay_ms(550);
	to_uARM("M2210 F380 T100\n");
    10c4:	8b ef       	ldi	r24, 0xFB	; 251
    10c6:	91 e0       	ldi	r25, 0x01	; 1
    10c8:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    10cc:	80 e0       	ldi	r24, 0x00	; 0
    10ce:	90 ec       	ldi	r25, 0xC0	; 192
    10d0:	af e0       	ldi	r26, 0x0F	; 15
    10d2:	b4 e4       	ldi	r27, 0x44	; 68
    10d4:	89 8f       	std	Y+25, r24	; 0x19
    10d6:	9a 8f       	std	Y+26, r25	; 0x1a
    10d8:	ab 8f       	std	Y+27, r26	; 0x1b
    10da:	bc 8f       	std	Y+28, r27	; 0x1c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    10dc:	8e 01       	movw	r16, r28
    10de:	05 51       	subi	r16, 0x15	; 21
    10e0:	1e 4f       	sbci	r17, 0xFE	; 254
    10e2:	20 e0       	ldi	r18, 0x00	; 0
    10e4:	30 e0       	ldi	r19, 0x00	; 0
    10e6:	4a e7       	ldi	r20, 0x7A	; 122
    10e8:	55 e4       	ldi	r21, 0x45	; 69
    10ea:	69 8d       	ldd	r22, Y+25	; 0x19
    10ec:	7a 8d       	ldd	r23, Y+26	; 0x1a
    10ee:	8b 8d       	ldd	r24, Y+27	; 0x1b
    10f0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    10f2:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    10f6:	dc 01       	movw	r26, r24
    10f8:	cb 01       	movw	r24, r22
    10fa:	f8 01       	movw	r30, r16
    10fc:	80 83       	st	Z, r24
    10fe:	91 83       	std	Z+1, r25	; 0x01
    1100:	a2 83       	std	Z+2, r26	; 0x02
    1102:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1104:	ce 01       	movw	r24, r28
    1106:	85 51       	subi	r24, 0x15	; 21
    1108:	9e 4f       	sbci	r25, 0xFE	; 254
    110a:	20 e0       	ldi	r18, 0x00	; 0
    110c:	30 e0       	ldi	r19, 0x00	; 0
    110e:	40 e8       	ldi	r20, 0x80	; 128
    1110:	5f e3       	ldi	r21, 0x3F	; 63
    1112:	fc 01       	movw	r30, r24
    1114:	60 81       	ld	r22, Z
    1116:	71 81       	ldd	r23, Z+1	; 0x01
    1118:	82 81       	ldd	r24, Z+2	; 0x02
    111a:	93 81       	ldd	r25, Z+3	; 0x03
    111c:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    1120:	88 23       	and	r24, r24
    1122:	4c f4       	brge	.+18     	; 0x1136 <__stack+0x37>
		__ticks = 1;
    1124:	ce 01       	movw	r24, r28
    1126:	81 51       	subi	r24, 0x11	; 17
    1128:	9e 4f       	sbci	r25, 0xFE	; 254
    112a:	21 e0       	ldi	r18, 0x01	; 1
    112c:	30 e0       	ldi	r19, 0x00	; 0
    112e:	fc 01       	movw	r30, r24
    1130:	31 83       	std	Z+1, r19	; 0x01
    1132:	20 83       	st	Z, r18
    1134:	69 c0       	rjmp	.+210    	; 0x1208 <__stack+0x109>
	else if (__tmp > 65535)
    1136:	ce 01       	movw	r24, r28
    1138:	85 51       	subi	r24, 0x15	; 21
    113a:	9e 4f       	sbci	r25, 0xFE	; 254
    113c:	20 e0       	ldi	r18, 0x00	; 0
    113e:	3f ef       	ldi	r19, 0xFF	; 255
    1140:	4f e7       	ldi	r20, 0x7F	; 127
    1142:	57 e4       	ldi	r21, 0x47	; 71
    1144:	fc 01       	movw	r30, r24
    1146:	60 81       	ld	r22, Z
    1148:	71 81       	ldd	r23, Z+1	; 0x01
    114a:	82 81       	ldd	r24, Z+2	; 0x02
    114c:	93 81       	ldd	r25, Z+3	; 0x03
    114e:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    1152:	18 16       	cp	r1, r24
    1154:	0c f0       	brlt	.+2      	; 0x1158 <__stack+0x59>
    1156:	46 c0       	rjmp	.+140    	; 0x11e4 <__stack+0xe5>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1158:	20 e0       	ldi	r18, 0x00	; 0
    115a:	30 e0       	ldi	r19, 0x00	; 0
    115c:	40 e2       	ldi	r20, 0x20	; 32
    115e:	51 e4       	ldi	r21, 0x41	; 65
    1160:	69 8d       	ldd	r22, Y+25	; 0x19
    1162:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1164:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1166:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1168:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    116c:	dc 01       	movw	r26, r24
    116e:	cb 01       	movw	r24, r22
    1170:	8e 01       	movw	r16, r28
    1172:	01 51       	subi	r16, 0x11	; 17
    1174:	1e 4f       	sbci	r17, 0xFE	; 254
    1176:	bc 01       	movw	r22, r24
    1178:	cd 01       	movw	r24, r26
    117a:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    117e:	dc 01       	movw	r26, r24
    1180:	cb 01       	movw	r24, r22
    1182:	f8 01       	movw	r30, r16
    1184:	91 83       	std	Z+1, r25	; 0x01
    1186:	80 83       	st	Z, r24
    1188:	24 c0       	rjmp	.+72     	; 0x11d2 <__stack+0xd3>
    118a:	ce 01       	movw	r24, r28
    118c:	8f 50       	subi	r24, 0x0F	; 15
    118e:	9e 4f       	sbci	r25, 0xFE	; 254
    1190:	20 e9       	ldi	r18, 0x90	; 144
    1192:	31 e0       	ldi	r19, 0x01	; 1
    1194:	fc 01       	movw	r30, r24
    1196:	31 83       	std	Z+1, r19	; 0x01
    1198:	20 83       	st	Z, r18
    119a:	ce 01       	movw	r24, r28
    119c:	8f 50       	subi	r24, 0x0F	; 15
    119e:	9e 4f       	sbci	r25, 0xFE	; 254
    11a0:	fc 01       	movw	r30, r24
    11a2:	80 81       	ld	r24, Z
    11a4:	91 81       	ldd	r25, Z+1	; 0x01
    11a6:	01 97       	sbiw	r24, 0x01	; 1
    11a8:	f1 f7       	brne	.-4      	; 0x11a6 <__stack+0xa7>
    11aa:	9e 01       	movw	r18, r28
    11ac:	2f 50       	subi	r18, 0x0F	; 15
    11ae:	3e 4f       	sbci	r19, 0xFE	; 254
    11b0:	f9 01       	movw	r30, r18
    11b2:	91 83       	std	Z+1, r25	; 0x01
    11b4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11b6:	ce 01       	movw	r24, r28
    11b8:	81 51       	subi	r24, 0x11	; 17
    11ba:	9e 4f       	sbci	r25, 0xFE	; 254
    11bc:	9e 01       	movw	r18, r28
    11be:	21 51       	subi	r18, 0x11	; 17
    11c0:	3e 4f       	sbci	r19, 0xFE	; 254
    11c2:	f9 01       	movw	r30, r18
    11c4:	20 81       	ld	r18, Z
    11c6:	31 81       	ldd	r19, Z+1	; 0x01
    11c8:	21 50       	subi	r18, 0x01	; 1
    11ca:	31 09       	sbc	r19, r1
    11cc:	fc 01       	movw	r30, r24
    11ce:	31 83       	std	Z+1, r19	; 0x01
    11d0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11d2:	ce 01       	movw	r24, r28
    11d4:	81 51       	subi	r24, 0x11	; 17
    11d6:	9e 4f       	sbci	r25, 0xFE	; 254
    11d8:	fc 01       	movw	r30, r24
    11da:	80 81       	ld	r24, Z
    11dc:	91 81       	ldd	r25, Z+1	; 0x01
    11de:	89 2b       	or	r24, r25
    11e0:	a1 f6       	brne	.-88     	; 0x118a <__stack+0x8b>
    11e2:	2c c0       	rjmp	.+88     	; 0x123c <__stack+0x13d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11e4:	8e 01       	movw	r16, r28
    11e6:	01 51       	subi	r16, 0x11	; 17
    11e8:	1e 4f       	sbci	r17, 0xFE	; 254
    11ea:	ce 01       	movw	r24, r28
    11ec:	85 51       	subi	r24, 0x15	; 21
    11ee:	9e 4f       	sbci	r25, 0xFE	; 254
    11f0:	fc 01       	movw	r30, r24
    11f2:	60 81       	ld	r22, Z
    11f4:	71 81       	ldd	r23, Z+1	; 0x01
    11f6:	82 81       	ldd	r24, Z+2	; 0x02
    11f8:	93 81       	ldd	r25, Z+3	; 0x03
    11fa:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    11fe:	dc 01       	movw	r26, r24
    1200:	cb 01       	movw	r24, r22
    1202:	f8 01       	movw	r30, r16
    1204:	91 83       	std	Z+1, r25	; 0x01
    1206:	80 83       	st	Z, r24
    1208:	ce 01       	movw	r24, r28
    120a:	8d 50       	subi	r24, 0x0D	; 13
    120c:	9e 4f       	sbci	r25, 0xFE	; 254
    120e:	9e 01       	movw	r18, r28
    1210:	21 51       	subi	r18, 0x11	; 17
    1212:	3e 4f       	sbci	r19, 0xFE	; 254
    1214:	f9 01       	movw	r30, r18
    1216:	20 81       	ld	r18, Z
    1218:	31 81       	ldd	r19, Z+1	; 0x01
    121a:	fc 01       	movw	r30, r24
    121c:	31 83       	std	Z+1, r19	; 0x01
    121e:	20 83       	st	Z, r18
    1220:	ce 01       	movw	r24, r28
    1222:	8d 50       	subi	r24, 0x0D	; 13
    1224:	9e 4f       	sbci	r25, 0xFE	; 254
    1226:	fc 01       	movw	r30, r24
    1228:	80 81       	ld	r24, Z
    122a:	91 81       	ldd	r25, Z+1	; 0x01
    122c:	01 97       	sbiw	r24, 0x01	; 1
    122e:	f1 f7       	brne	.-4      	; 0x122c <__stack+0x12d>
    1230:	9e 01       	movw	r18, r28
    1232:	2d 50       	subi	r18, 0x0D	; 13
    1234:	3e 4f       	sbci	r19, 0xFE	; 254
    1236:	f9 01       	movw	r30, r18
    1238:	91 83       	std	Z+1, r25	; 0x01
    123a:	80 83       	st	Z, r24
	_delay_ms(575);
	
	to_uARM("M2210 F510 T100\n");
    123c:	89 ed       	ldi	r24, 0xD9	; 217
    123e:	91 e0       	ldi	r25, 0x01	; 1
    1240:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    1244:	80 e0       	ldi	r24, 0x00	; 0
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	a1 ee       	ldi	r26, 0xE1	; 225
    124a:	b3 e4       	ldi	r27, 0x43	; 67
    124c:	8d 8f       	std	Y+29, r24	; 0x1d
    124e:	9e 8f       	std	Y+30, r25	; 0x1e
    1250:	af 8f       	std	Y+31, r26	; 0x1f
    1252:	b8 a3       	std	Y+32, r27	; 0x20

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1254:	8e 01       	movw	r16, r28
    1256:	0f 51       	subi	r16, 0x1F	; 31
    1258:	1e 4f       	sbci	r17, 0xFE	; 254
    125a:	20 e0       	ldi	r18, 0x00	; 0
    125c:	30 e0       	ldi	r19, 0x00	; 0
    125e:	4a e7       	ldi	r20, 0x7A	; 122
    1260:	55 e4       	ldi	r21, 0x45	; 69
    1262:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1264:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1266:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1268:	98 a1       	ldd	r25, Y+32	; 0x20
    126a:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    126e:	dc 01       	movw	r26, r24
    1270:	cb 01       	movw	r24, r22
    1272:	f8 01       	movw	r30, r16
    1274:	80 83       	st	Z, r24
    1276:	91 83       	std	Z+1, r25	; 0x01
    1278:	a2 83       	std	Z+2, r26	; 0x02
    127a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    127c:	ce 01       	movw	r24, r28
    127e:	8f 51       	subi	r24, 0x1F	; 31
    1280:	9e 4f       	sbci	r25, 0xFE	; 254
    1282:	20 e0       	ldi	r18, 0x00	; 0
    1284:	30 e0       	ldi	r19, 0x00	; 0
    1286:	40 e8       	ldi	r20, 0x80	; 128
    1288:	5f e3       	ldi	r21, 0x3F	; 63
    128a:	fc 01       	movw	r30, r24
    128c:	60 81       	ld	r22, Z
    128e:	71 81       	ldd	r23, Z+1	; 0x01
    1290:	82 81       	ldd	r24, Z+2	; 0x02
    1292:	93 81       	ldd	r25, Z+3	; 0x03
    1294:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    1298:	88 23       	and	r24, r24
    129a:	4c f4       	brge	.+18     	; 0x12ae <__stack+0x1af>
		__ticks = 1;
    129c:	ce 01       	movw	r24, r28
    129e:	8b 51       	subi	r24, 0x1B	; 27
    12a0:	9e 4f       	sbci	r25, 0xFE	; 254
    12a2:	21 e0       	ldi	r18, 0x01	; 1
    12a4:	30 e0       	ldi	r19, 0x00	; 0
    12a6:	fc 01       	movw	r30, r24
    12a8:	31 83       	std	Z+1, r19	; 0x01
    12aa:	20 83       	st	Z, r18
    12ac:	69 c0       	rjmp	.+210    	; 0x1380 <__stack+0x281>
	else if (__tmp > 65535)
    12ae:	ce 01       	movw	r24, r28
    12b0:	8f 51       	subi	r24, 0x1F	; 31
    12b2:	9e 4f       	sbci	r25, 0xFE	; 254
    12b4:	20 e0       	ldi	r18, 0x00	; 0
    12b6:	3f ef       	ldi	r19, 0xFF	; 255
    12b8:	4f e7       	ldi	r20, 0x7F	; 127
    12ba:	57 e4       	ldi	r21, 0x47	; 71
    12bc:	fc 01       	movw	r30, r24
    12be:	60 81       	ld	r22, Z
    12c0:	71 81       	ldd	r23, Z+1	; 0x01
    12c2:	82 81       	ldd	r24, Z+2	; 0x02
    12c4:	93 81       	ldd	r25, Z+3	; 0x03
    12c6:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    12ca:	18 16       	cp	r1, r24
    12cc:	0c f0       	brlt	.+2      	; 0x12d0 <__stack+0x1d1>
    12ce:	46 c0       	rjmp	.+140    	; 0x135c <__stack+0x25d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12d0:	20 e0       	ldi	r18, 0x00	; 0
    12d2:	30 e0       	ldi	r19, 0x00	; 0
    12d4:	40 e2       	ldi	r20, 0x20	; 32
    12d6:	51 e4       	ldi	r21, 0x41	; 65
    12d8:	6d 8d       	ldd	r22, Y+29	; 0x1d
    12da:	7e 8d       	ldd	r23, Y+30	; 0x1e
    12dc:	8f 8d       	ldd	r24, Y+31	; 0x1f
    12de:	98 a1       	ldd	r25, Y+32	; 0x20
    12e0:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    12e4:	dc 01       	movw	r26, r24
    12e6:	cb 01       	movw	r24, r22
    12e8:	8e 01       	movw	r16, r28
    12ea:	0b 51       	subi	r16, 0x1B	; 27
    12ec:	1e 4f       	sbci	r17, 0xFE	; 254
    12ee:	bc 01       	movw	r22, r24
    12f0:	cd 01       	movw	r24, r26
    12f2:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    12f6:	dc 01       	movw	r26, r24
    12f8:	cb 01       	movw	r24, r22
    12fa:	f8 01       	movw	r30, r16
    12fc:	91 83       	std	Z+1, r25	; 0x01
    12fe:	80 83       	st	Z, r24
    1300:	24 c0       	rjmp	.+72     	; 0x134a <__stack+0x24b>
    1302:	ce 01       	movw	r24, r28
    1304:	89 51       	subi	r24, 0x19	; 25
    1306:	9e 4f       	sbci	r25, 0xFE	; 254
    1308:	20 e9       	ldi	r18, 0x90	; 144
    130a:	31 e0       	ldi	r19, 0x01	; 1
    130c:	fc 01       	movw	r30, r24
    130e:	31 83       	std	Z+1, r19	; 0x01
    1310:	20 83       	st	Z, r18
    1312:	ce 01       	movw	r24, r28
    1314:	89 51       	subi	r24, 0x19	; 25
    1316:	9e 4f       	sbci	r25, 0xFE	; 254
    1318:	fc 01       	movw	r30, r24
    131a:	80 81       	ld	r24, Z
    131c:	91 81       	ldd	r25, Z+1	; 0x01
    131e:	01 97       	sbiw	r24, 0x01	; 1
    1320:	f1 f7       	brne	.-4      	; 0x131e <__stack+0x21f>
    1322:	9e 01       	movw	r18, r28
    1324:	29 51       	subi	r18, 0x19	; 25
    1326:	3e 4f       	sbci	r19, 0xFE	; 254
    1328:	f9 01       	movw	r30, r18
    132a:	91 83       	std	Z+1, r25	; 0x01
    132c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    132e:	ce 01       	movw	r24, r28
    1330:	8b 51       	subi	r24, 0x1B	; 27
    1332:	9e 4f       	sbci	r25, 0xFE	; 254
    1334:	9e 01       	movw	r18, r28
    1336:	2b 51       	subi	r18, 0x1B	; 27
    1338:	3e 4f       	sbci	r19, 0xFE	; 254
    133a:	f9 01       	movw	r30, r18
    133c:	20 81       	ld	r18, Z
    133e:	31 81       	ldd	r19, Z+1	; 0x01
    1340:	21 50       	subi	r18, 0x01	; 1
    1342:	31 09       	sbc	r19, r1
    1344:	fc 01       	movw	r30, r24
    1346:	31 83       	std	Z+1, r19	; 0x01
    1348:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    134a:	ce 01       	movw	r24, r28
    134c:	8b 51       	subi	r24, 0x1B	; 27
    134e:	9e 4f       	sbci	r25, 0xFE	; 254
    1350:	fc 01       	movw	r30, r24
    1352:	80 81       	ld	r24, Z
    1354:	91 81       	ldd	r25, Z+1	; 0x01
    1356:	89 2b       	or	r24, r25
    1358:	a1 f6       	brne	.-88     	; 0x1302 <__stack+0x203>
    135a:	2c c0       	rjmp	.+88     	; 0x13b4 <__stack+0x2b5>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    135c:	8e 01       	movw	r16, r28
    135e:	0b 51       	subi	r16, 0x1B	; 27
    1360:	1e 4f       	sbci	r17, 0xFE	; 254
    1362:	ce 01       	movw	r24, r28
    1364:	8f 51       	subi	r24, 0x1F	; 31
    1366:	9e 4f       	sbci	r25, 0xFE	; 254
    1368:	fc 01       	movw	r30, r24
    136a:	60 81       	ld	r22, Z
    136c:	71 81       	ldd	r23, Z+1	; 0x01
    136e:	82 81       	ldd	r24, Z+2	; 0x02
    1370:	93 81       	ldd	r25, Z+3	; 0x03
    1372:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    1376:	dc 01       	movw	r26, r24
    1378:	cb 01       	movw	r24, r22
    137a:	f8 01       	movw	r30, r16
    137c:	91 83       	std	Z+1, r25	; 0x01
    137e:	80 83       	st	Z, r24
    1380:	ce 01       	movw	r24, r28
    1382:	87 51       	subi	r24, 0x17	; 23
    1384:	9e 4f       	sbci	r25, 0xFE	; 254
    1386:	9e 01       	movw	r18, r28
    1388:	2b 51       	subi	r18, 0x1B	; 27
    138a:	3e 4f       	sbci	r19, 0xFE	; 254
    138c:	f9 01       	movw	r30, r18
    138e:	20 81       	ld	r18, Z
    1390:	31 81       	ldd	r19, Z+1	; 0x01
    1392:	fc 01       	movw	r30, r24
    1394:	31 83       	std	Z+1, r19	; 0x01
    1396:	20 83       	st	Z, r18
    1398:	ce 01       	movw	r24, r28
    139a:	87 51       	subi	r24, 0x17	; 23
    139c:	9e 4f       	sbci	r25, 0xFE	; 254
    139e:	fc 01       	movw	r30, r24
    13a0:	80 81       	ld	r24, Z
    13a2:	91 81       	ldd	r25, Z+1	; 0x01
    13a4:	01 97       	sbiw	r24, 0x01	; 1
    13a6:	f1 f7       	brne	.-4      	; 0x13a4 <__stack+0x2a5>
    13a8:	9e 01       	movw	r18, r28
    13aa:	27 51       	subi	r18, 0x17	; 23
    13ac:	3e 4f       	sbci	r19, 0xFE	; 254
    13ae:	f9 01       	movw	r30, r18
    13b0:	91 83       	std	Z+1, r25	; 0x01
    13b2:	80 83       	st	Z, r24
	_delay_ms(450);
	to_uARM("M2210 F380 T100\n");
    13b4:	8b ef       	ldi	r24, 0xFB	; 251
    13b6:	91 e0       	ldi	r25, 0x01	; 1
    13b8:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    13bc:	80 e0       	ldi	r24, 0x00	; 0
    13be:	90 e0       	ldi	r25, 0x00	; 0
    13c0:	a8 ec       	ldi	r26, 0xC8	; 200
    13c2:	b3 e4       	ldi	r27, 0x43	; 67
    13c4:	89 a3       	std	Y+33, r24	; 0x21
    13c6:	9a a3       	std	Y+34, r25	; 0x22
    13c8:	ab a3       	std	Y+35, r26	; 0x23
    13ca:	bc a3       	std	Y+36, r27	; 0x24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    13cc:	8e 01       	movw	r16, r28
    13ce:	09 52       	subi	r16, 0x29	; 41
    13d0:	1e 4f       	sbci	r17, 0xFE	; 254
    13d2:	20 e0       	ldi	r18, 0x00	; 0
    13d4:	30 e0       	ldi	r19, 0x00	; 0
    13d6:	4a e7       	ldi	r20, 0x7A	; 122
    13d8:	55 e4       	ldi	r21, 0x45	; 69
    13da:	69 a1       	ldd	r22, Y+33	; 0x21
    13dc:	7a a1       	ldd	r23, Y+34	; 0x22
    13de:	8b a1       	ldd	r24, Y+35	; 0x23
    13e0:	9c a1       	ldd	r25, Y+36	; 0x24
    13e2:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    13e6:	dc 01       	movw	r26, r24
    13e8:	cb 01       	movw	r24, r22
    13ea:	f8 01       	movw	r30, r16
    13ec:	80 83       	st	Z, r24
    13ee:	91 83       	std	Z+1, r25	; 0x01
    13f0:	a2 83       	std	Z+2, r26	; 0x02
    13f2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    13f4:	ce 01       	movw	r24, r28
    13f6:	89 52       	subi	r24, 0x29	; 41
    13f8:	9e 4f       	sbci	r25, 0xFE	; 254
    13fa:	20 e0       	ldi	r18, 0x00	; 0
    13fc:	30 e0       	ldi	r19, 0x00	; 0
    13fe:	40 e8       	ldi	r20, 0x80	; 128
    1400:	5f e3       	ldi	r21, 0x3F	; 63
    1402:	fc 01       	movw	r30, r24
    1404:	60 81       	ld	r22, Z
    1406:	71 81       	ldd	r23, Z+1	; 0x01
    1408:	82 81       	ldd	r24, Z+2	; 0x02
    140a:	93 81       	ldd	r25, Z+3	; 0x03
    140c:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    1410:	88 23       	and	r24, r24
    1412:	4c f4       	brge	.+18     	; 0x1426 <__stack+0x327>
		__ticks = 1;
    1414:	ce 01       	movw	r24, r28
    1416:	85 52       	subi	r24, 0x25	; 37
    1418:	9e 4f       	sbci	r25, 0xFE	; 254
    141a:	21 e0       	ldi	r18, 0x01	; 1
    141c:	30 e0       	ldi	r19, 0x00	; 0
    141e:	fc 01       	movw	r30, r24
    1420:	31 83       	std	Z+1, r19	; 0x01
    1422:	20 83       	st	Z, r18
    1424:	69 c0       	rjmp	.+210    	; 0x14f8 <__stack+0x3f9>
	else if (__tmp > 65535)
    1426:	ce 01       	movw	r24, r28
    1428:	89 52       	subi	r24, 0x29	; 41
    142a:	9e 4f       	sbci	r25, 0xFE	; 254
    142c:	20 e0       	ldi	r18, 0x00	; 0
    142e:	3f ef       	ldi	r19, 0xFF	; 255
    1430:	4f e7       	ldi	r20, 0x7F	; 127
    1432:	57 e4       	ldi	r21, 0x47	; 71
    1434:	fc 01       	movw	r30, r24
    1436:	60 81       	ld	r22, Z
    1438:	71 81       	ldd	r23, Z+1	; 0x01
    143a:	82 81       	ldd	r24, Z+2	; 0x02
    143c:	93 81       	ldd	r25, Z+3	; 0x03
    143e:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    1442:	18 16       	cp	r1, r24
    1444:	0c f0       	brlt	.+2      	; 0x1448 <__stack+0x349>
    1446:	46 c0       	rjmp	.+140    	; 0x14d4 <__stack+0x3d5>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1448:	20 e0       	ldi	r18, 0x00	; 0
    144a:	30 e0       	ldi	r19, 0x00	; 0
    144c:	40 e2       	ldi	r20, 0x20	; 32
    144e:	51 e4       	ldi	r21, 0x41	; 65
    1450:	69 a1       	ldd	r22, Y+33	; 0x21
    1452:	7a a1       	ldd	r23, Y+34	; 0x22
    1454:	8b a1       	ldd	r24, Y+35	; 0x23
    1456:	9c a1       	ldd	r25, Y+36	; 0x24
    1458:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    145c:	dc 01       	movw	r26, r24
    145e:	cb 01       	movw	r24, r22
    1460:	8e 01       	movw	r16, r28
    1462:	05 52       	subi	r16, 0x25	; 37
    1464:	1e 4f       	sbci	r17, 0xFE	; 254
    1466:	bc 01       	movw	r22, r24
    1468:	cd 01       	movw	r24, r26
    146a:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    146e:	dc 01       	movw	r26, r24
    1470:	cb 01       	movw	r24, r22
    1472:	f8 01       	movw	r30, r16
    1474:	91 83       	std	Z+1, r25	; 0x01
    1476:	80 83       	st	Z, r24
    1478:	24 c0       	rjmp	.+72     	; 0x14c2 <__stack+0x3c3>
    147a:	ce 01       	movw	r24, r28
    147c:	83 52       	subi	r24, 0x23	; 35
    147e:	9e 4f       	sbci	r25, 0xFE	; 254
    1480:	20 e9       	ldi	r18, 0x90	; 144
    1482:	31 e0       	ldi	r19, 0x01	; 1
    1484:	fc 01       	movw	r30, r24
    1486:	31 83       	std	Z+1, r19	; 0x01
    1488:	20 83       	st	Z, r18
    148a:	ce 01       	movw	r24, r28
    148c:	83 52       	subi	r24, 0x23	; 35
    148e:	9e 4f       	sbci	r25, 0xFE	; 254
    1490:	fc 01       	movw	r30, r24
    1492:	80 81       	ld	r24, Z
    1494:	91 81       	ldd	r25, Z+1	; 0x01
    1496:	01 97       	sbiw	r24, 0x01	; 1
    1498:	f1 f7       	brne	.-4      	; 0x1496 <__stack+0x397>
    149a:	9e 01       	movw	r18, r28
    149c:	23 52       	subi	r18, 0x23	; 35
    149e:	3e 4f       	sbci	r19, 0xFE	; 254
    14a0:	f9 01       	movw	r30, r18
    14a2:	91 83       	std	Z+1, r25	; 0x01
    14a4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14a6:	ce 01       	movw	r24, r28
    14a8:	85 52       	subi	r24, 0x25	; 37
    14aa:	9e 4f       	sbci	r25, 0xFE	; 254
    14ac:	9e 01       	movw	r18, r28
    14ae:	25 52       	subi	r18, 0x25	; 37
    14b0:	3e 4f       	sbci	r19, 0xFE	; 254
    14b2:	f9 01       	movw	r30, r18
    14b4:	20 81       	ld	r18, Z
    14b6:	31 81       	ldd	r19, Z+1	; 0x01
    14b8:	21 50       	subi	r18, 0x01	; 1
    14ba:	31 09       	sbc	r19, r1
    14bc:	fc 01       	movw	r30, r24
    14be:	31 83       	std	Z+1, r19	; 0x01
    14c0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14c2:	ce 01       	movw	r24, r28
    14c4:	85 52       	subi	r24, 0x25	; 37
    14c6:	9e 4f       	sbci	r25, 0xFE	; 254
    14c8:	fc 01       	movw	r30, r24
    14ca:	80 81       	ld	r24, Z
    14cc:	91 81       	ldd	r25, Z+1	; 0x01
    14ce:	89 2b       	or	r24, r25
    14d0:	a1 f6       	brne	.-88     	; 0x147a <__stack+0x37b>
    14d2:	2c c0       	rjmp	.+88     	; 0x152c <__stack+0x42d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14d4:	8e 01       	movw	r16, r28
    14d6:	05 52       	subi	r16, 0x25	; 37
    14d8:	1e 4f       	sbci	r17, 0xFE	; 254
    14da:	ce 01       	movw	r24, r28
    14dc:	89 52       	subi	r24, 0x29	; 41
    14de:	9e 4f       	sbci	r25, 0xFE	; 254
    14e0:	fc 01       	movw	r30, r24
    14e2:	60 81       	ld	r22, Z
    14e4:	71 81       	ldd	r23, Z+1	; 0x01
    14e6:	82 81       	ldd	r24, Z+2	; 0x02
    14e8:	93 81       	ldd	r25, Z+3	; 0x03
    14ea:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    14ee:	dc 01       	movw	r26, r24
    14f0:	cb 01       	movw	r24, r22
    14f2:	f8 01       	movw	r30, r16
    14f4:	91 83       	std	Z+1, r25	; 0x01
    14f6:	80 83       	st	Z, r24
    14f8:	ce 01       	movw	r24, r28
    14fa:	81 52       	subi	r24, 0x21	; 33
    14fc:	9e 4f       	sbci	r25, 0xFE	; 254
    14fe:	9e 01       	movw	r18, r28
    1500:	25 52       	subi	r18, 0x25	; 37
    1502:	3e 4f       	sbci	r19, 0xFE	; 254
    1504:	f9 01       	movw	r30, r18
    1506:	20 81       	ld	r18, Z
    1508:	31 81       	ldd	r19, Z+1	; 0x01
    150a:	fc 01       	movw	r30, r24
    150c:	31 83       	std	Z+1, r19	; 0x01
    150e:	20 83       	st	Z, r18
    1510:	ce 01       	movw	r24, r28
    1512:	81 52       	subi	r24, 0x21	; 33
    1514:	9e 4f       	sbci	r25, 0xFE	; 254
    1516:	fc 01       	movw	r30, r24
    1518:	80 81       	ld	r24, Z
    151a:	91 81       	ldd	r25, Z+1	; 0x01
    151c:	01 97       	sbiw	r24, 0x01	; 1
    151e:	f1 f7       	brne	.-4      	; 0x151c <__stack+0x41d>
    1520:	9e 01       	movw	r18, r28
    1522:	21 52       	subi	r18, 0x21	; 33
    1524:	3e 4f       	sbci	r19, 0xFE	; 254
    1526:	f9 01       	movw	r30, r18
    1528:	91 83       	std	Z+1, r25	; 0x01
    152a:	80 83       	st	Z, r24
	_delay_ms(400);
	to_uARM("M2210 F320 T100\n");
    152c:	8c e0       	ldi	r24, 0x0C	; 12
    152e:	92 e0       	ldi	r25, 0x02	; 2
    1530:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    1534:	80 e0       	ldi	r24, 0x00	; 0
    1536:	90 e0       	ldi	r25, 0x00	; 0
    1538:	aa ef       	ldi	r26, 0xFA	; 250
    153a:	b3 e4       	ldi	r27, 0x43	; 67
    153c:	8d a3       	std	Y+37, r24	; 0x25
    153e:	9e a3       	std	Y+38, r25	; 0x26
    1540:	af a3       	std	Y+39, r26	; 0x27
    1542:	b8 a7       	std	Y+40, r27	; 0x28

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1544:	8e 01       	movw	r16, r28
    1546:	03 53       	subi	r16, 0x33	; 51
    1548:	1e 4f       	sbci	r17, 0xFE	; 254
    154a:	20 e0       	ldi	r18, 0x00	; 0
    154c:	30 e0       	ldi	r19, 0x00	; 0
    154e:	4a e7       	ldi	r20, 0x7A	; 122
    1550:	55 e4       	ldi	r21, 0x45	; 69
    1552:	6d a1       	ldd	r22, Y+37	; 0x25
    1554:	7e a1       	ldd	r23, Y+38	; 0x26
    1556:	8f a1       	ldd	r24, Y+39	; 0x27
    1558:	98 a5       	ldd	r25, Y+40	; 0x28
    155a:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    155e:	dc 01       	movw	r26, r24
    1560:	cb 01       	movw	r24, r22
    1562:	f8 01       	movw	r30, r16
    1564:	80 83       	st	Z, r24
    1566:	91 83       	std	Z+1, r25	; 0x01
    1568:	a2 83       	std	Z+2, r26	; 0x02
    156a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    156c:	ce 01       	movw	r24, r28
    156e:	83 53       	subi	r24, 0x33	; 51
    1570:	9e 4f       	sbci	r25, 0xFE	; 254
    1572:	20 e0       	ldi	r18, 0x00	; 0
    1574:	30 e0       	ldi	r19, 0x00	; 0
    1576:	40 e8       	ldi	r20, 0x80	; 128
    1578:	5f e3       	ldi	r21, 0x3F	; 63
    157a:	fc 01       	movw	r30, r24
    157c:	60 81       	ld	r22, Z
    157e:	71 81       	ldd	r23, Z+1	; 0x01
    1580:	82 81       	ldd	r24, Z+2	; 0x02
    1582:	93 81       	ldd	r25, Z+3	; 0x03
    1584:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    1588:	88 23       	and	r24, r24
    158a:	4c f4       	brge	.+18     	; 0x159e <__stack+0x49f>
		__ticks = 1;
    158c:	ce 01       	movw	r24, r28
    158e:	8f 52       	subi	r24, 0x2F	; 47
    1590:	9e 4f       	sbci	r25, 0xFE	; 254
    1592:	21 e0       	ldi	r18, 0x01	; 1
    1594:	30 e0       	ldi	r19, 0x00	; 0
    1596:	fc 01       	movw	r30, r24
    1598:	31 83       	std	Z+1, r19	; 0x01
    159a:	20 83       	st	Z, r18
    159c:	69 c0       	rjmp	.+210    	; 0x1670 <__stack+0x571>
	else if (__tmp > 65535)
    159e:	ce 01       	movw	r24, r28
    15a0:	83 53       	subi	r24, 0x33	; 51
    15a2:	9e 4f       	sbci	r25, 0xFE	; 254
    15a4:	20 e0       	ldi	r18, 0x00	; 0
    15a6:	3f ef       	ldi	r19, 0xFF	; 255
    15a8:	4f e7       	ldi	r20, 0x7F	; 127
    15aa:	57 e4       	ldi	r21, 0x47	; 71
    15ac:	fc 01       	movw	r30, r24
    15ae:	60 81       	ld	r22, Z
    15b0:	71 81       	ldd	r23, Z+1	; 0x01
    15b2:	82 81       	ldd	r24, Z+2	; 0x02
    15b4:	93 81       	ldd	r25, Z+3	; 0x03
    15b6:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    15ba:	18 16       	cp	r1, r24
    15bc:	0c f0       	brlt	.+2      	; 0x15c0 <__stack+0x4c1>
    15be:	46 c0       	rjmp	.+140    	; 0x164c <__stack+0x54d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15c0:	20 e0       	ldi	r18, 0x00	; 0
    15c2:	30 e0       	ldi	r19, 0x00	; 0
    15c4:	40 e2       	ldi	r20, 0x20	; 32
    15c6:	51 e4       	ldi	r21, 0x41	; 65
    15c8:	6d a1       	ldd	r22, Y+37	; 0x25
    15ca:	7e a1       	ldd	r23, Y+38	; 0x26
    15cc:	8f a1       	ldd	r24, Y+39	; 0x27
    15ce:	98 a5       	ldd	r25, Y+40	; 0x28
    15d0:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    15d4:	dc 01       	movw	r26, r24
    15d6:	cb 01       	movw	r24, r22
    15d8:	8e 01       	movw	r16, r28
    15da:	0f 52       	subi	r16, 0x2F	; 47
    15dc:	1e 4f       	sbci	r17, 0xFE	; 254
    15de:	bc 01       	movw	r22, r24
    15e0:	cd 01       	movw	r24, r26
    15e2:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    15e6:	dc 01       	movw	r26, r24
    15e8:	cb 01       	movw	r24, r22
    15ea:	f8 01       	movw	r30, r16
    15ec:	91 83       	std	Z+1, r25	; 0x01
    15ee:	80 83       	st	Z, r24
    15f0:	24 c0       	rjmp	.+72     	; 0x163a <__stack+0x53b>
    15f2:	ce 01       	movw	r24, r28
    15f4:	8d 52       	subi	r24, 0x2D	; 45
    15f6:	9e 4f       	sbci	r25, 0xFE	; 254
    15f8:	20 e9       	ldi	r18, 0x90	; 144
    15fa:	31 e0       	ldi	r19, 0x01	; 1
    15fc:	fc 01       	movw	r30, r24
    15fe:	31 83       	std	Z+1, r19	; 0x01
    1600:	20 83       	st	Z, r18
    1602:	ce 01       	movw	r24, r28
    1604:	8d 52       	subi	r24, 0x2D	; 45
    1606:	9e 4f       	sbci	r25, 0xFE	; 254
    1608:	fc 01       	movw	r30, r24
    160a:	80 81       	ld	r24, Z
    160c:	91 81       	ldd	r25, Z+1	; 0x01
    160e:	01 97       	sbiw	r24, 0x01	; 1
    1610:	f1 f7       	brne	.-4      	; 0x160e <__stack+0x50f>
    1612:	9e 01       	movw	r18, r28
    1614:	2d 52       	subi	r18, 0x2D	; 45
    1616:	3e 4f       	sbci	r19, 0xFE	; 254
    1618:	f9 01       	movw	r30, r18
    161a:	91 83       	std	Z+1, r25	; 0x01
    161c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    161e:	ce 01       	movw	r24, r28
    1620:	8f 52       	subi	r24, 0x2F	; 47
    1622:	9e 4f       	sbci	r25, 0xFE	; 254
    1624:	9e 01       	movw	r18, r28
    1626:	2f 52       	subi	r18, 0x2F	; 47
    1628:	3e 4f       	sbci	r19, 0xFE	; 254
    162a:	f9 01       	movw	r30, r18
    162c:	20 81       	ld	r18, Z
    162e:	31 81       	ldd	r19, Z+1	; 0x01
    1630:	21 50       	subi	r18, 0x01	; 1
    1632:	31 09       	sbc	r19, r1
    1634:	fc 01       	movw	r30, r24
    1636:	31 83       	std	Z+1, r19	; 0x01
    1638:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    163a:	ce 01       	movw	r24, r28
    163c:	8f 52       	subi	r24, 0x2F	; 47
    163e:	9e 4f       	sbci	r25, 0xFE	; 254
    1640:	fc 01       	movw	r30, r24
    1642:	80 81       	ld	r24, Z
    1644:	91 81       	ldd	r25, Z+1	; 0x01
    1646:	89 2b       	or	r24, r25
    1648:	a1 f6       	brne	.-88     	; 0x15f2 <__stack+0x4f3>
    164a:	2c c0       	rjmp	.+88     	; 0x16a4 <__stack+0x5a5>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    164c:	8e 01       	movw	r16, r28
    164e:	0f 52       	subi	r16, 0x2F	; 47
    1650:	1e 4f       	sbci	r17, 0xFE	; 254
    1652:	ce 01       	movw	r24, r28
    1654:	83 53       	subi	r24, 0x33	; 51
    1656:	9e 4f       	sbci	r25, 0xFE	; 254
    1658:	fc 01       	movw	r30, r24
    165a:	60 81       	ld	r22, Z
    165c:	71 81       	ldd	r23, Z+1	; 0x01
    165e:	82 81       	ldd	r24, Z+2	; 0x02
    1660:	93 81       	ldd	r25, Z+3	; 0x03
    1662:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    1666:	dc 01       	movw	r26, r24
    1668:	cb 01       	movw	r24, r22
    166a:	f8 01       	movw	r30, r16
    166c:	91 83       	std	Z+1, r25	; 0x01
    166e:	80 83       	st	Z, r24
    1670:	ce 01       	movw	r24, r28
    1672:	8b 52       	subi	r24, 0x2B	; 43
    1674:	9e 4f       	sbci	r25, 0xFE	; 254
    1676:	9e 01       	movw	r18, r28
    1678:	2f 52       	subi	r18, 0x2F	; 47
    167a:	3e 4f       	sbci	r19, 0xFE	; 254
    167c:	f9 01       	movw	r30, r18
    167e:	20 81       	ld	r18, Z
    1680:	31 81       	ldd	r19, Z+1	; 0x01
    1682:	fc 01       	movw	r30, r24
    1684:	31 83       	std	Z+1, r19	; 0x01
    1686:	20 83       	st	Z, r18
    1688:	ce 01       	movw	r24, r28
    168a:	8b 52       	subi	r24, 0x2B	; 43
    168c:	9e 4f       	sbci	r25, 0xFE	; 254
    168e:	fc 01       	movw	r30, r24
    1690:	80 81       	ld	r24, Z
    1692:	91 81       	ldd	r25, Z+1	; 0x01
    1694:	01 97       	sbiw	r24, 0x01	; 1
    1696:	f1 f7       	brne	.-4      	; 0x1694 <__stack+0x595>
    1698:	9e 01       	movw	r18, r28
    169a:	2b 52       	subi	r18, 0x2B	; 43
    169c:	3e 4f       	sbci	r19, 0xFE	; 254
    169e:	f9 01       	movw	r30, r18
    16a0:	91 83       	std	Z+1, r25	; 0x01
    16a2:	80 83       	st	Z, r24
	_delay_ms(500);
	to_uARM("M2210 F440 T100\n");
    16a4:	8d e1       	ldi	r24, 0x1D	; 29
    16a6:	92 e0       	ldi	r25, 0x02	; 2
    16a8:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    16ac:	80 e0       	ldi	r24, 0x00	; 0
    16ae:	90 e0       	ldi	r25, 0x00	; 0
    16b0:	a6 e9       	ldi	r26, 0x96	; 150
    16b2:	b3 e4       	ldi	r27, 0x43	; 67
    16b4:	89 a7       	std	Y+41, r24	; 0x29
    16b6:	9a a7       	std	Y+42, r25	; 0x2a
    16b8:	ab a7       	std	Y+43, r26	; 0x2b
    16ba:	bc a7       	std	Y+44, r27	; 0x2c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    16bc:	8e 01       	movw	r16, r28
    16be:	0d 53       	subi	r16, 0x3D	; 61
    16c0:	1e 4f       	sbci	r17, 0xFE	; 254
    16c2:	20 e0       	ldi	r18, 0x00	; 0
    16c4:	30 e0       	ldi	r19, 0x00	; 0
    16c6:	4a e7       	ldi	r20, 0x7A	; 122
    16c8:	55 e4       	ldi	r21, 0x45	; 69
    16ca:	69 a5       	ldd	r22, Y+41	; 0x29
    16cc:	7a a5       	ldd	r23, Y+42	; 0x2a
    16ce:	8b a5       	ldd	r24, Y+43	; 0x2b
    16d0:	9c a5       	ldd	r25, Y+44	; 0x2c
    16d2:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    16d6:	dc 01       	movw	r26, r24
    16d8:	cb 01       	movw	r24, r22
    16da:	f8 01       	movw	r30, r16
    16dc:	80 83       	st	Z, r24
    16de:	91 83       	std	Z+1, r25	; 0x01
    16e0:	a2 83       	std	Z+2, r26	; 0x02
    16e2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    16e4:	ce 01       	movw	r24, r28
    16e6:	8d 53       	subi	r24, 0x3D	; 61
    16e8:	9e 4f       	sbci	r25, 0xFE	; 254
    16ea:	20 e0       	ldi	r18, 0x00	; 0
    16ec:	30 e0       	ldi	r19, 0x00	; 0
    16ee:	40 e8       	ldi	r20, 0x80	; 128
    16f0:	5f e3       	ldi	r21, 0x3F	; 63
    16f2:	fc 01       	movw	r30, r24
    16f4:	60 81       	ld	r22, Z
    16f6:	71 81       	ldd	r23, Z+1	; 0x01
    16f8:	82 81       	ldd	r24, Z+2	; 0x02
    16fa:	93 81       	ldd	r25, Z+3	; 0x03
    16fc:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    1700:	88 23       	and	r24, r24
    1702:	4c f4       	brge	.+18     	; 0x1716 <__stack+0x617>
		__ticks = 1;
    1704:	ce 01       	movw	r24, r28
    1706:	89 53       	subi	r24, 0x39	; 57
    1708:	9e 4f       	sbci	r25, 0xFE	; 254
    170a:	21 e0       	ldi	r18, 0x01	; 1
    170c:	30 e0       	ldi	r19, 0x00	; 0
    170e:	fc 01       	movw	r30, r24
    1710:	31 83       	std	Z+1, r19	; 0x01
    1712:	20 83       	st	Z, r18
    1714:	69 c0       	rjmp	.+210    	; 0x17e8 <__stack+0x6e9>
	else if (__tmp > 65535)
    1716:	ce 01       	movw	r24, r28
    1718:	8d 53       	subi	r24, 0x3D	; 61
    171a:	9e 4f       	sbci	r25, 0xFE	; 254
    171c:	20 e0       	ldi	r18, 0x00	; 0
    171e:	3f ef       	ldi	r19, 0xFF	; 255
    1720:	4f e7       	ldi	r20, 0x7F	; 127
    1722:	57 e4       	ldi	r21, 0x47	; 71
    1724:	fc 01       	movw	r30, r24
    1726:	60 81       	ld	r22, Z
    1728:	71 81       	ldd	r23, Z+1	; 0x01
    172a:	82 81       	ldd	r24, Z+2	; 0x02
    172c:	93 81       	ldd	r25, Z+3	; 0x03
    172e:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    1732:	18 16       	cp	r1, r24
    1734:	0c f0       	brlt	.+2      	; 0x1738 <__stack+0x639>
    1736:	46 c0       	rjmp	.+140    	; 0x17c4 <__stack+0x6c5>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1738:	20 e0       	ldi	r18, 0x00	; 0
    173a:	30 e0       	ldi	r19, 0x00	; 0
    173c:	40 e2       	ldi	r20, 0x20	; 32
    173e:	51 e4       	ldi	r21, 0x41	; 65
    1740:	69 a5       	ldd	r22, Y+41	; 0x29
    1742:	7a a5       	ldd	r23, Y+42	; 0x2a
    1744:	8b a5       	ldd	r24, Y+43	; 0x2b
    1746:	9c a5       	ldd	r25, Y+44	; 0x2c
    1748:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    174c:	dc 01       	movw	r26, r24
    174e:	cb 01       	movw	r24, r22
    1750:	8e 01       	movw	r16, r28
    1752:	09 53       	subi	r16, 0x39	; 57
    1754:	1e 4f       	sbci	r17, 0xFE	; 254
    1756:	bc 01       	movw	r22, r24
    1758:	cd 01       	movw	r24, r26
    175a:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    175e:	dc 01       	movw	r26, r24
    1760:	cb 01       	movw	r24, r22
    1762:	f8 01       	movw	r30, r16
    1764:	91 83       	std	Z+1, r25	; 0x01
    1766:	80 83       	st	Z, r24
    1768:	24 c0       	rjmp	.+72     	; 0x17b2 <__stack+0x6b3>
    176a:	ce 01       	movw	r24, r28
    176c:	87 53       	subi	r24, 0x37	; 55
    176e:	9e 4f       	sbci	r25, 0xFE	; 254
    1770:	20 e9       	ldi	r18, 0x90	; 144
    1772:	31 e0       	ldi	r19, 0x01	; 1
    1774:	fc 01       	movw	r30, r24
    1776:	31 83       	std	Z+1, r19	; 0x01
    1778:	20 83       	st	Z, r18
    177a:	ce 01       	movw	r24, r28
    177c:	87 53       	subi	r24, 0x37	; 55
    177e:	9e 4f       	sbci	r25, 0xFE	; 254
    1780:	fc 01       	movw	r30, r24
    1782:	80 81       	ld	r24, Z
    1784:	91 81       	ldd	r25, Z+1	; 0x01
    1786:	01 97       	sbiw	r24, 0x01	; 1
    1788:	f1 f7       	brne	.-4      	; 0x1786 <__stack+0x687>
    178a:	9e 01       	movw	r18, r28
    178c:	27 53       	subi	r18, 0x37	; 55
    178e:	3e 4f       	sbci	r19, 0xFE	; 254
    1790:	f9 01       	movw	r30, r18
    1792:	91 83       	std	Z+1, r25	; 0x01
    1794:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1796:	ce 01       	movw	r24, r28
    1798:	89 53       	subi	r24, 0x39	; 57
    179a:	9e 4f       	sbci	r25, 0xFE	; 254
    179c:	9e 01       	movw	r18, r28
    179e:	29 53       	subi	r18, 0x39	; 57
    17a0:	3e 4f       	sbci	r19, 0xFE	; 254
    17a2:	f9 01       	movw	r30, r18
    17a4:	20 81       	ld	r18, Z
    17a6:	31 81       	ldd	r19, Z+1	; 0x01
    17a8:	21 50       	subi	r18, 0x01	; 1
    17aa:	31 09       	sbc	r19, r1
    17ac:	fc 01       	movw	r30, r24
    17ae:	31 83       	std	Z+1, r19	; 0x01
    17b0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17b2:	ce 01       	movw	r24, r28
    17b4:	89 53       	subi	r24, 0x39	; 57
    17b6:	9e 4f       	sbci	r25, 0xFE	; 254
    17b8:	fc 01       	movw	r30, r24
    17ba:	80 81       	ld	r24, Z
    17bc:	91 81       	ldd	r25, Z+1	; 0x01
    17be:	89 2b       	or	r24, r25
    17c0:	a1 f6       	brne	.-88     	; 0x176a <__stack+0x66b>
    17c2:	2c c0       	rjmp	.+88     	; 0x181c <__stack+0x71d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17c4:	8e 01       	movw	r16, r28
    17c6:	09 53       	subi	r16, 0x39	; 57
    17c8:	1e 4f       	sbci	r17, 0xFE	; 254
    17ca:	ce 01       	movw	r24, r28
    17cc:	8d 53       	subi	r24, 0x3D	; 61
    17ce:	9e 4f       	sbci	r25, 0xFE	; 254
    17d0:	fc 01       	movw	r30, r24
    17d2:	60 81       	ld	r22, Z
    17d4:	71 81       	ldd	r23, Z+1	; 0x01
    17d6:	82 81       	ldd	r24, Z+2	; 0x02
    17d8:	93 81       	ldd	r25, Z+3	; 0x03
    17da:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    17de:	dc 01       	movw	r26, r24
    17e0:	cb 01       	movw	r24, r22
    17e2:	f8 01       	movw	r30, r16
    17e4:	91 83       	std	Z+1, r25	; 0x01
    17e6:	80 83       	st	Z, r24
    17e8:	ce 01       	movw	r24, r28
    17ea:	85 53       	subi	r24, 0x35	; 53
    17ec:	9e 4f       	sbci	r25, 0xFE	; 254
    17ee:	9e 01       	movw	r18, r28
    17f0:	29 53       	subi	r18, 0x39	; 57
    17f2:	3e 4f       	sbci	r19, 0xFE	; 254
    17f4:	f9 01       	movw	r30, r18
    17f6:	20 81       	ld	r18, Z
    17f8:	31 81       	ldd	r19, Z+1	; 0x01
    17fa:	fc 01       	movw	r30, r24
    17fc:	31 83       	std	Z+1, r19	; 0x01
    17fe:	20 83       	st	Z, r18
    1800:	ce 01       	movw	r24, r28
    1802:	85 53       	subi	r24, 0x35	; 53
    1804:	9e 4f       	sbci	r25, 0xFE	; 254
    1806:	fc 01       	movw	r30, r24
    1808:	80 81       	ld	r24, Z
    180a:	91 81       	ldd	r25, Z+1	; 0x01
    180c:	01 97       	sbiw	r24, 0x01	; 1
    180e:	f1 f7       	brne	.-4      	; 0x180c <__stack+0x70d>
    1810:	9e 01       	movw	r18, r28
    1812:	25 53       	subi	r18, 0x35	; 53
    1814:	3e 4f       	sbci	r19, 0xFE	; 254
    1816:	f9 01       	movw	r30, r18
    1818:	91 83       	std	Z+1, r25	; 0x01
    181a:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F480 T80\n");
    181c:	8e e2       	ldi	r24, 0x2E	; 46
    181e:	92 e0       	ldi	r25, 0x02	; 2
    1820:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    1824:	80 e0       	ldi	r24, 0x00	; 0
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	a5 ea       	ldi	r26, 0xA5	; 165
    182a:	b3 e4       	ldi	r27, 0x43	; 67
    182c:	8d a7       	std	Y+45, r24	; 0x2d
    182e:	9e a7       	std	Y+46, r25	; 0x2e
    1830:	af a7       	std	Y+47, r26	; 0x2f
    1832:	b8 ab       	std	Y+48, r27	; 0x30

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1834:	8e 01       	movw	r16, r28
    1836:	07 54       	subi	r16, 0x47	; 71
    1838:	1e 4f       	sbci	r17, 0xFE	; 254
    183a:	20 e0       	ldi	r18, 0x00	; 0
    183c:	30 e0       	ldi	r19, 0x00	; 0
    183e:	4a e7       	ldi	r20, 0x7A	; 122
    1840:	55 e4       	ldi	r21, 0x45	; 69
    1842:	6d a5       	ldd	r22, Y+45	; 0x2d
    1844:	7e a5       	ldd	r23, Y+46	; 0x2e
    1846:	8f a5       	ldd	r24, Y+47	; 0x2f
    1848:	98 a9       	ldd	r25, Y+48	; 0x30
    184a:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    184e:	dc 01       	movw	r26, r24
    1850:	cb 01       	movw	r24, r22
    1852:	f8 01       	movw	r30, r16
    1854:	80 83       	st	Z, r24
    1856:	91 83       	std	Z+1, r25	; 0x01
    1858:	a2 83       	std	Z+2, r26	; 0x02
    185a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    185c:	ce 01       	movw	r24, r28
    185e:	87 54       	subi	r24, 0x47	; 71
    1860:	9e 4f       	sbci	r25, 0xFE	; 254
    1862:	20 e0       	ldi	r18, 0x00	; 0
    1864:	30 e0       	ldi	r19, 0x00	; 0
    1866:	40 e8       	ldi	r20, 0x80	; 128
    1868:	5f e3       	ldi	r21, 0x3F	; 63
    186a:	fc 01       	movw	r30, r24
    186c:	60 81       	ld	r22, Z
    186e:	71 81       	ldd	r23, Z+1	; 0x01
    1870:	82 81       	ldd	r24, Z+2	; 0x02
    1872:	93 81       	ldd	r25, Z+3	; 0x03
    1874:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    1878:	88 23       	and	r24, r24
    187a:	4c f4       	brge	.+18     	; 0x188e <__stack+0x78f>
		__ticks = 1;
    187c:	ce 01       	movw	r24, r28
    187e:	83 54       	subi	r24, 0x43	; 67
    1880:	9e 4f       	sbci	r25, 0xFE	; 254
    1882:	21 e0       	ldi	r18, 0x01	; 1
    1884:	30 e0       	ldi	r19, 0x00	; 0
    1886:	fc 01       	movw	r30, r24
    1888:	31 83       	std	Z+1, r19	; 0x01
    188a:	20 83       	st	Z, r18
    188c:	69 c0       	rjmp	.+210    	; 0x1960 <__stack+0x861>
	else if (__tmp > 65535)
    188e:	ce 01       	movw	r24, r28
    1890:	87 54       	subi	r24, 0x47	; 71
    1892:	9e 4f       	sbci	r25, 0xFE	; 254
    1894:	20 e0       	ldi	r18, 0x00	; 0
    1896:	3f ef       	ldi	r19, 0xFF	; 255
    1898:	4f e7       	ldi	r20, 0x7F	; 127
    189a:	57 e4       	ldi	r21, 0x47	; 71
    189c:	fc 01       	movw	r30, r24
    189e:	60 81       	ld	r22, Z
    18a0:	71 81       	ldd	r23, Z+1	; 0x01
    18a2:	82 81       	ldd	r24, Z+2	; 0x02
    18a4:	93 81       	ldd	r25, Z+3	; 0x03
    18a6:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    18aa:	18 16       	cp	r1, r24
    18ac:	0c f0       	brlt	.+2      	; 0x18b0 <__stack+0x7b1>
    18ae:	46 c0       	rjmp	.+140    	; 0x193c <__stack+0x83d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18b0:	20 e0       	ldi	r18, 0x00	; 0
    18b2:	30 e0       	ldi	r19, 0x00	; 0
    18b4:	40 e2       	ldi	r20, 0x20	; 32
    18b6:	51 e4       	ldi	r21, 0x41	; 65
    18b8:	6d a5       	ldd	r22, Y+45	; 0x2d
    18ba:	7e a5       	ldd	r23, Y+46	; 0x2e
    18bc:	8f a5       	ldd	r24, Y+47	; 0x2f
    18be:	98 a9       	ldd	r25, Y+48	; 0x30
    18c0:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    18c4:	dc 01       	movw	r26, r24
    18c6:	cb 01       	movw	r24, r22
    18c8:	8e 01       	movw	r16, r28
    18ca:	03 54       	subi	r16, 0x43	; 67
    18cc:	1e 4f       	sbci	r17, 0xFE	; 254
    18ce:	bc 01       	movw	r22, r24
    18d0:	cd 01       	movw	r24, r26
    18d2:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    18d6:	dc 01       	movw	r26, r24
    18d8:	cb 01       	movw	r24, r22
    18da:	f8 01       	movw	r30, r16
    18dc:	91 83       	std	Z+1, r25	; 0x01
    18de:	80 83       	st	Z, r24
    18e0:	24 c0       	rjmp	.+72     	; 0x192a <__stack+0x82b>
    18e2:	ce 01       	movw	r24, r28
    18e4:	81 54       	subi	r24, 0x41	; 65
    18e6:	9e 4f       	sbci	r25, 0xFE	; 254
    18e8:	20 e9       	ldi	r18, 0x90	; 144
    18ea:	31 e0       	ldi	r19, 0x01	; 1
    18ec:	fc 01       	movw	r30, r24
    18ee:	31 83       	std	Z+1, r19	; 0x01
    18f0:	20 83       	st	Z, r18
    18f2:	ce 01       	movw	r24, r28
    18f4:	81 54       	subi	r24, 0x41	; 65
    18f6:	9e 4f       	sbci	r25, 0xFE	; 254
    18f8:	fc 01       	movw	r30, r24
    18fa:	80 81       	ld	r24, Z
    18fc:	91 81       	ldd	r25, Z+1	; 0x01
    18fe:	01 97       	sbiw	r24, 0x01	; 1
    1900:	f1 f7       	brne	.-4      	; 0x18fe <__stack+0x7ff>
    1902:	9e 01       	movw	r18, r28
    1904:	21 54       	subi	r18, 0x41	; 65
    1906:	3e 4f       	sbci	r19, 0xFE	; 254
    1908:	f9 01       	movw	r30, r18
    190a:	91 83       	std	Z+1, r25	; 0x01
    190c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    190e:	ce 01       	movw	r24, r28
    1910:	83 54       	subi	r24, 0x43	; 67
    1912:	9e 4f       	sbci	r25, 0xFE	; 254
    1914:	9e 01       	movw	r18, r28
    1916:	23 54       	subi	r18, 0x43	; 67
    1918:	3e 4f       	sbci	r19, 0xFE	; 254
    191a:	f9 01       	movw	r30, r18
    191c:	20 81       	ld	r18, Z
    191e:	31 81       	ldd	r19, Z+1	; 0x01
    1920:	21 50       	subi	r18, 0x01	; 1
    1922:	31 09       	sbc	r19, r1
    1924:	fc 01       	movw	r30, r24
    1926:	31 83       	std	Z+1, r19	; 0x01
    1928:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    192a:	ce 01       	movw	r24, r28
    192c:	83 54       	subi	r24, 0x43	; 67
    192e:	9e 4f       	sbci	r25, 0xFE	; 254
    1930:	fc 01       	movw	r30, r24
    1932:	80 81       	ld	r24, Z
    1934:	91 81       	ldd	r25, Z+1	; 0x01
    1936:	89 2b       	or	r24, r25
    1938:	a1 f6       	brne	.-88     	; 0x18e2 <__stack+0x7e3>
    193a:	2c c0       	rjmp	.+88     	; 0x1994 <__stack+0x895>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    193c:	8e 01       	movw	r16, r28
    193e:	03 54       	subi	r16, 0x43	; 67
    1940:	1e 4f       	sbci	r17, 0xFE	; 254
    1942:	ce 01       	movw	r24, r28
    1944:	87 54       	subi	r24, 0x47	; 71
    1946:	9e 4f       	sbci	r25, 0xFE	; 254
    1948:	fc 01       	movw	r30, r24
    194a:	60 81       	ld	r22, Z
    194c:	71 81       	ldd	r23, Z+1	; 0x01
    194e:	82 81       	ldd	r24, Z+2	; 0x02
    1950:	93 81       	ldd	r25, Z+3	; 0x03
    1952:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    1956:	dc 01       	movw	r26, r24
    1958:	cb 01       	movw	r24, r22
    195a:	f8 01       	movw	r30, r16
    195c:	91 83       	std	Z+1, r25	; 0x01
    195e:	80 83       	st	Z, r24
    1960:	ce 01       	movw	r24, r28
    1962:	8f 53       	subi	r24, 0x3F	; 63
    1964:	9e 4f       	sbci	r25, 0xFE	; 254
    1966:	9e 01       	movw	r18, r28
    1968:	23 54       	subi	r18, 0x43	; 67
    196a:	3e 4f       	sbci	r19, 0xFE	; 254
    196c:	f9 01       	movw	r30, r18
    196e:	20 81       	ld	r18, Z
    1970:	31 81       	ldd	r19, Z+1	; 0x01
    1972:	fc 01       	movw	r30, r24
    1974:	31 83       	std	Z+1, r19	; 0x01
    1976:	20 83       	st	Z, r18
    1978:	ce 01       	movw	r24, r28
    197a:	8f 53       	subi	r24, 0x3F	; 63
    197c:	9e 4f       	sbci	r25, 0xFE	; 254
    197e:	fc 01       	movw	r30, r24
    1980:	80 81       	ld	r24, Z
    1982:	91 81       	ldd	r25, Z+1	; 0x01
    1984:	01 97       	sbiw	r24, 0x01	; 1
    1986:	f1 f7       	brne	.-4      	; 0x1984 <__stack+0x885>
    1988:	9e 01       	movw	r18, r28
    198a:	2f 53       	subi	r18, 0x3F	; 63
    198c:	3e 4f       	sbci	r19, 0xFE	; 254
    198e:	f9 01       	movw	r30, r18
    1990:	91 83       	std	Z+1, r25	; 0x01
    1992:	80 83       	st	Z, r24
	_delay_ms(330);
	to_uARM("M2210 F450 T100\n");
    1994:	8e e3       	ldi	r24, 0x3E	; 62
    1996:	92 e0       	ldi	r25, 0x02	; 2
    1998:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    199c:	80 e0       	ldi	r24, 0x00	; 0
    199e:	90 e0       	ldi	r25, 0x00	; 0
    19a0:	a6 e1       	ldi	r26, 0x16	; 22
    19a2:	b3 e4       	ldi	r27, 0x43	; 67
    19a4:	89 ab       	std	Y+49, r24	; 0x31
    19a6:	9a ab       	std	Y+50, r25	; 0x32
    19a8:	ab ab       	std	Y+51, r26	; 0x33
    19aa:	bc ab       	std	Y+52, r27	; 0x34

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    19ac:	8e 01       	movw	r16, r28
    19ae:	01 55       	subi	r16, 0x51	; 81
    19b0:	1e 4f       	sbci	r17, 0xFE	; 254
    19b2:	20 e0       	ldi	r18, 0x00	; 0
    19b4:	30 e0       	ldi	r19, 0x00	; 0
    19b6:	4a e7       	ldi	r20, 0x7A	; 122
    19b8:	55 e4       	ldi	r21, 0x45	; 69
    19ba:	69 a9       	ldd	r22, Y+49	; 0x31
    19bc:	7a a9       	ldd	r23, Y+50	; 0x32
    19be:	8b a9       	ldd	r24, Y+51	; 0x33
    19c0:	9c a9       	ldd	r25, Y+52	; 0x34
    19c2:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    19c6:	dc 01       	movw	r26, r24
    19c8:	cb 01       	movw	r24, r22
    19ca:	f8 01       	movw	r30, r16
    19cc:	80 83       	st	Z, r24
    19ce:	91 83       	std	Z+1, r25	; 0x01
    19d0:	a2 83       	std	Z+2, r26	; 0x02
    19d2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    19d4:	ce 01       	movw	r24, r28
    19d6:	81 55       	subi	r24, 0x51	; 81
    19d8:	9e 4f       	sbci	r25, 0xFE	; 254
    19da:	20 e0       	ldi	r18, 0x00	; 0
    19dc:	30 e0       	ldi	r19, 0x00	; 0
    19de:	40 e8       	ldi	r20, 0x80	; 128
    19e0:	5f e3       	ldi	r21, 0x3F	; 63
    19e2:	fc 01       	movw	r30, r24
    19e4:	60 81       	ld	r22, Z
    19e6:	71 81       	ldd	r23, Z+1	; 0x01
    19e8:	82 81       	ldd	r24, Z+2	; 0x02
    19ea:	93 81       	ldd	r25, Z+3	; 0x03
    19ec:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    19f0:	88 23       	and	r24, r24
    19f2:	4c f4       	brge	.+18     	; 0x1a06 <__stack+0x907>
		__ticks = 1;
    19f4:	ce 01       	movw	r24, r28
    19f6:	8d 54       	subi	r24, 0x4D	; 77
    19f8:	9e 4f       	sbci	r25, 0xFE	; 254
    19fa:	21 e0       	ldi	r18, 0x01	; 1
    19fc:	30 e0       	ldi	r19, 0x00	; 0
    19fe:	fc 01       	movw	r30, r24
    1a00:	31 83       	std	Z+1, r19	; 0x01
    1a02:	20 83       	st	Z, r18
    1a04:	69 c0       	rjmp	.+210    	; 0x1ad8 <__stack+0x9d9>
	else if (__tmp > 65535)
    1a06:	ce 01       	movw	r24, r28
    1a08:	81 55       	subi	r24, 0x51	; 81
    1a0a:	9e 4f       	sbci	r25, 0xFE	; 254
    1a0c:	20 e0       	ldi	r18, 0x00	; 0
    1a0e:	3f ef       	ldi	r19, 0xFF	; 255
    1a10:	4f e7       	ldi	r20, 0x7F	; 127
    1a12:	57 e4       	ldi	r21, 0x47	; 71
    1a14:	fc 01       	movw	r30, r24
    1a16:	60 81       	ld	r22, Z
    1a18:	71 81       	ldd	r23, Z+1	; 0x01
    1a1a:	82 81       	ldd	r24, Z+2	; 0x02
    1a1c:	93 81       	ldd	r25, Z+3	; 0x03
    1a1e:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    1a22:	18 16       	cp	r1, r24
    1a24:	0c f0       	brlt	.+2      	; 0x1a28 <__stack+0x929>
    1a26:	46 c0       	rjmp	.+140    	; 0x1ab4 <__stack+0x9b5>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a28:	20 e0       	ldi	r18, 0x00	; 0
    1a2a:	30 e0       	ldi	r19, 0x00	; 0
    1a2c:	40 e2       	ldi	r20, 0x20	; 32
    1a2e:	51 e4       	ldi	r21, 0x41	; 65
    1a30:	69 a9       	ldd	r22, Y+49	; 0x31
    1a32:	7a a9       	ldd	r23, Y+50	; 0x32
    1a34:	8b a9       	ldd	r24, Y+51	; 0x33
    1a36:	9c a9       	ldd	r25, Y+52	; 0x34
    1a38:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    1a3c:	dc 01       	movw	r26, r24
    1a3e:	cb 01       	movw	r24, r22
    1a40:	8e 01       	movw	r16, r28
    1a42:	0d 54       	subi	r16, 0x4D	; 77
    1a44:	1e 4f       	sbci	r17, 0xFE	; 254
    1a46:	bc 01       	movw	r22, r24
    1a48:	cd 01       	movw	r24, r26
    1a4a:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    1a4e:	dc 01       	movw	r26, r24
    1a50:	cb 01       	movw	r24, r22
    1a52:	f8 01       	movw	r30, r16
    1a54:	91 83       	std	Z+1, r25	; 0x01
    1a56:	80 83       	st	Z, r24
    1a58:	24 c0       	rjmp	.+72     	; 0x1aa2 <__stack+0x9a3>
    1a5a:	ce 01       	movw	r24, r28
    1a5c:	8b 54       	subi	r24, 0x4B	; 75
    1a5e:	9e 4f       	sbci	r25, 0xFE	; 254
    1a60:	20 e9       	ldi	r18, 0x90	; 144
    1a62:	31 e0       	ldi	r19, 0x01	; 1
    1a64:	fc 01       	movw	r30, r24
    1a66:	31 83       	std	Z+1, r19	; 0x01
    1a68:	20 83       	st	Z, r18
    1a6a:	ce 01       	movw	r24, r28
    1a6c:	8b 54       	subi	r24, 0x4B	; 75
    1a6e:	9e 4f       	sbci	r25, 0xFE	; 254
    1a70:	fc 01       	movw	r30, r24
    1a72:	80 81       	ld	r24, Z
    1a74:	91 81       	ldd	r25, Z+1	; 0x01
    1a76:	01 97       	sbiw	r24, 0x01	; 1
    1a78:	f1 f7       	brne	.-4      	; 0x1a76 <__stack+0x977>
    1a7a:	9e 01       	movw	r18, r28
    1a7c:	2b 54       	subi	r18, 0x4B	; 75
    1a7e:	3e 4f       	sbci	r19, 0xFE	; 254
    1a80:	f9 01       	movw	r30, r18
    1a82:	91 83       	std	Z+1, r25	; 0x01
    1a84:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a86:	ce 01       	movw	r24, r28
    1a88:	8d 54       	subi	r24, 0x4D	; 77
    1a8a:	9e 4f       	sbci	r25, 0xFE	; 254
    1a8c:	9e 01       	movw	r18, r28
    1a8e:	2d 54       	subi	r18, 0x4D	; 77
    1a90:	3e 4f       	sbci	r19, 0xFE	; 254
    1a92:	f9 01       	movw	r30, r18
    1a94:	20 81       	ld	r18, Z
    1a96:	31 81       	ldd	r19, Z+1	; 0x01
    1a98:	21 50       	subi	r18, 0x01	; 1
    1a9a:	31 09       	sbc	r19, r1
    1a9c:	fc 01       	movw	r30, r24
    1a9e:	31 83       	std	Z+1, r19	; 0x01
    1aa0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1aa2:	ce 01       	movw	r24, r28
    1aa4:	8d 54       	subi	r24, 0x4D	; 77
    1aa6:	9e 4f       	sbci	r25, 0xFE	; 254
    1aa8:	fc 01       	movw	r30, r24
    1aaa:	80 81       	ld	r24, Z
    1aac:	91 81       	ldd	r25, Z+1	; 0x01
    1aae:	89 2b       	or	r24, r25
    1ab0:	a1 f6       	brne	.-88     	; 0x1a5a <__stack+0x95b>
    1ab2:	2c c0       	rjmp	.+88     	; 0x1b0c <__stack+0xa0d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ab4:	8e 01       	movw	r16, r28
    1ab6:	0d 54       	subi	r16, 0x4D	; 77
    1ab8:	1e 4f       	sbci	r17, 0xFE	; 254
    1aba:	ce 01       	movw	r24, r28
    1abc:	81 55       	subi	r24, 0x51	; 81
    1abe:	9e 4f       	sbci	r25, 0xFE	; 254
    1ac0:	fc 01       	movw	r30, r24
    1ac2:	60 81       	ld	r22, Z
    1ac4:	71 81       	ldd	r23, Z+1	; 0x01
    1ac6:	82 81       	ldd	r24, Z+2	; 0x02
    1ac8:	93 81       	ldd	r25, Z+3	; 0x03
    1aca:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    1ace:	dc 01       	movw	r26, r24
    1ad0:	cb 01       	movw	r24, r22
    1ad2:	f8 01       	movw	r30, r16
    1ad4:	91 83       	std	Z+1, r25	; 0x01
    1ad6:	80 83       	st	Z, r24
    1ad8:	ce 01       	movw	r24, r28
    1ada:	89 54       	subi	r24, 0x49	; 73
    1adc:	9e 4f       	sbci	r25, 0xFE	; 254
    1ade:	9e 01       	movw	r18, r28
    1ae0:	2d 54       	subi	r18, 0x4D	; 77
    1ae2:	3e 4f       	sbci	r19, 0xFE	; 254
    1ae4:	f9 01       	movw	r30, r18
    1ae6:	20 81       	ld	r18, Z
    1ae8:	31 81       	ldd	r19, Z+1	; 0x01
    1aea:	fc 01       	movw	r30, r24
    1aec:	31 83       	std	Z+1, r19	; 0x01
    1aee:	20 83       	st	Z, r18
    1af0:	ce 01       	movw	r24, r28
    1af2:	89 54       	subi	r24, 0x49	; 73
    1af4:	9e 4f       	sbci	r25, 0xFE	; 254
    1af6:	fc 01       	movw	r30, r24
    1af8:	80 81       	ld	r24, Z
    1afa:	91 81       	ldd	r25, Z+1	; 0x01
    1afc:	01 97       	sbiw	r24, 0x01	; 1
    1afe:	f1 f7       	brne	.-4      	; 0x1afc <__stack+0x9fd>
    1b00:	9e 01       	movw	r18, r28
    1b02:	29 54       	subi	r18, 0x49	; 73
    1b04:	3e 4f       	sbci	r19, 0xFE	; 254
    1b06:	f9 01       	movw	r30, r18
    1b08:	91 83       	std	Z+1, r25	; 0x01
    1b0a:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F430 T100\n");
    1b0c:	8f e4       	ldi	r24, 0x4F	; 79
    1b0e:	92 e0       	ldi	r25, 0x02	; 2
    1b10:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    1b14:	80 e0       	ldi	r24, 0x00	; 0
    1b16:	90 e0       	ldi	r25, 0x00	; 0
    1b18:	a6 e9       	ldi	r26, 0x96	; 150
    1b1a:	b3 e4       	ldi	r27, 0x43	; 67
    1b1c:	8d ab       	std	Y+53, r24	; 0x35
    1b1e:	9e ab       	std	Y+54, r25	; 0x36
    1b20:	af ab       	std	Y+55, r26	; 0x37
    1b22:	b8 af       	std	Y+56, r27	; 0x38

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1b24:	8e 01       	movw	r16, r28
    1b26:	0b 55       	subi	r16, 0x5B	; 91
    1b28:	1e 4f       	sbci	r17, 0xFE	; 254
    1b2a:	20 e0       	ldi	r18, 0x00	; 0
    1b2c:	30 e0       	ldi	r19, 0x00	; 0
    1b2e:	4a e7       	ldi	r20, 0x7A	; 122
    1b30:	55 e4       	ldi	r21, 0x45	; 69
    1b32:	6d a9       	ldd	r22, Y+53	; 0x35
    1b34:	7e a9       	ldd	r23, Y+54	; 0x36
    1b36:	8f a9       	ldd	r24, Y+55	; 0x37
    1b38:	98 ad       	ldd	r25, Y+56	; 0x38
    1b3a:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    1b3e:	dc 01       	movw	r26, r24
    1b40:	cb 01       	movw	r24, r22
    1b42:	f8 01       	movw	r30, r16
    1b44:	80 83       	st	Z, r24
    1b46:	91 83       	std	Z+1, r25	; 0x01
    1b48:	a2 83       	std	Z+2, r26	; 0x02
    1b4a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b4c:	ce 01       	movw	r24, r28
    1b4e:	8b 55       	subi	r24, 0x5B	; 91
    1b50:	9e 4f       	sbci	r25, 0xFE	; 254
    1b52:	20 e0       	ldi	r18, 0x00	; 0
    1b54:	30 e0       	ldi	r19, 0x00	; 0
    1b56:	40 e8       	ldi	r20, 0x80	; 128
    1b58:	5f e3       	ldi	r21, 0x3F	; 63
    1b5a:	fc 01       	movw	r30, r24
    1b5c:	60 81       	ld	r22, Z
    1b5e:	71 81       	ldd	r23, Z+1	; 0x01
    1b60:	82 81       	ldd	r24, Z+2	; 0x02
    1b62:	93 81       	ldd	r25, Z+3	; 0x03
    1b64:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    1b68:	88 23       	and	r24, r24
    1b6a:	4c f4       	brge	.+18     	; 0x1b7e <__stack+0xa7f>
		__ticks = 1;
    1b6c:	ce 01       	movw	r24, r28
    1b6e:	87 55       	subi	r24, 0x57	; 87
    1b70:	9e 4f       	sbci	r25, 0xFE	; 254
    1b72:	21 e0       	ldi	r18, 0x01	; 1
    1b74:	30 e0       	ldi	r19, 0x00	; 0
    1b76:	fc 01       	movw	r30, r24
    1b78:	31 83       	std	Z+1, r19	; 0x01
    1b7a:	20 83       	st	Z, r18
    1b7c:	69 c0       	rjmp	.+210    	; 0x1c50 <__stack+0xb51>
	else if (__tmp > 65535)
    1b7e:	ce 01       	movw	r24, r28
    1b80:	8b 55       	subi	r24, 0x5B	; 91
    1b82:	9e 4f       	sbci	r25, 0xFE	; 254
    1b84:	20 e0       	ldi	r18, 0x00	; 0
    1b86:	3f ef       	ldi	r19, 0xFF	; 255
    1b88:	4f e7       	ldi	r20, 0x7F	; 127
    1b8a:	57 e4       	ldi	r21, 0x47	; 71
    1b8c:	fc 01       	movw	r30, r24
    1b8e:	60 81       	ld	r22, Z
    1b90:	71 81       	ldd	r23, Z+1	; 0x01
    1b92:	82 81       	ldd	r24, Z+2	; 0x02
    1b94:	93 81       	ldd	r25, Z+3	; 0x03
    1b96:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    1b9a:	18 16       	cp	r1, r24
    1b9c:	0c f0       	brlt	.+2      	; 0x1ba0 <__stack+0xaa1>
    1b9e:	46 c0       	rjmp	.+140    	; 0x1c2c <__stack+0xb2d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ba0:	20 e0       	ldi	r18, 0x00	; 0
    1ba2:	30 e0       	ldi	r19, 0x00	; 0
    1ba4:	40 e2       	ldi	r20, 0x20	; 32
    1ba6:	51 e4       	ldi	r21, 0x41	; 65
    1ba8:	6d a9       	ldd	r22, Y+53	; 0x35
    1baa:	7e a9       	ldd	r23, Y+54	; 0x36
    1bac:	8f a9       	ldd	r24, Y+55	; 0x37
    1bae:	98 ad       	ldd	r25, Y+56	; 0x38
    1bb0:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    1bb4:	dc 01       	movw	r26, r24
    1bb6:	cb 01       	movw	r24, r22
    1bb8:	8e 01       	movw	r16, r28
    1bba:	07 55       	subi	r16, 0x57	; 87
    1bbc:	1e 4f       	sbci	r17, 0xFE	; 254
    1bbe:	bc 01       	movw	r22, r24
    1bc0:	cd 01       	movw	r24, r26
    1bc2:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    1bc6:	dc 01       	movw	r26, r24
    1bc8:	cb 01       	movw	r24, r22
    1bca:	f8 01       	movw	r30, r16
    1bcc:	91 83       	std	Z+1, r25	; 0x01
    1bce:	80 83       	st	Z, r24
    1bd0:	24 c0       	rjmp	.+72     	; 0x1c1a <__stack+0xb1b>
    1bd2:	ce 01       	movw	r24, r28
    1bd4:	85 55       	subi	r24, 0x55	; 85
    1bd6:	9e 4f       	sbci	r25, 0xFE	; 254
    1bd8:	20 e9       	ldi	r18, 0x90	; 144
    1bda:	31 e0       	ldi	r19, 0x01	; 1
    1bdc:	fc 01       	movw	r30, r24
    1bde:	31 83       	std	Z+1, r19	; 0x01
    1be0:	20 83       	st	Z, r18
    1be2:	ce 01       	movw	r24, r28
    1be4:	85 55       	subi	r24, 0x55	; 85
    1be6:	9e 4f       	sbci	r25, 0xFE	; 254
    1be8:	fc 01       	movw	r30, r24
    1bea:	80 81       	ld	r24, Z
    1bec:	91 81       	ldd	r25, Z+1	; 0x01
    1bee:	01 97       	sbiw	r24, 0x01	; 1
    1bf0:	f1 f7       	brne	.-4      	; 0x1bee <__stack+0xaef>
    1bf2:	9e 01       	movw	r18, r28
    1bf4:	25 55       	subi	r18, 0x55	; 85
    1bf6:	3e 4f       	sbci	r19, 0xFE	; 254
    1bf8:	f9 01       	movw	r30, r18
    1bfa:	91 83       	std	Z+1, r25	; 0x01
    1bfc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bfe:	ce 01       	movw	r24, r28
    1c00:	87 55       	subi	r24, 0x57	; 87
    1c02:	9e 4f       	sbci	r25, 0xFE	; 254
    1c04:	9e 01       	movw	r18, r28
    1c06:	27 55       	subi	r18, 0x57	; 87
    1c08:	3e 4f       	sbci	r19, 0xFE	; 254
    1c0a:	f9 01       	movw	r30, r18
    1c0c:	20 81       	ld	r18, Z
    1c0e:	31 81       	ldd	r19, Z+1	; 0x01
    1c10:	21 50       	subi	r18, 0x01	; 1
    1c12:	31 09       	sbc	r19, r1
    1c14:	fc 01       	movw	r30, r24
    1c16:	31 83       	std	Z+1, r19	; 0x01
    1c18:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c1a:	ce 01       	movw	r24, r28
    1c1c:	87 55       	subi	r24, 0x57	; 87
    1c1e:	9e 4f       	sbci	r25, 0xFE	; 254
    1c20:	fc 01       	movw	r30, r24
    1c22:	80 81       	ld	r24, Z
    1c24:	91 81       	ldd	r25, Z+1	; 0x01
    1c26:	89 2b       	or	r24, r25
    1c28:	a1 f6       	brne	.-88     	; 0x1bd2 <__stack+0xad3>
    1c2a:	2c c0       	rjmp	.+88     	; 0x1c84 <__stack+0xb85>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c2c:	8e 01       	movw	r16, r28
    1c2e:	07 55       	subi	r16, 0x57	; 87
    1c30:	1e 4f       	sbci	r17, 0xFE	; 254
    1c32:	ce 01       	movw	r24, r28
    1c34:	8b 55       	subi	r24, 0x5B	; 91
    1c36:	9e 4f       	sbci	r25, 0xFE	; 254
    1c38:	fc 01       	movw	r30, r24
    1c3a:	60 81       	ld	r22, Z
    1c3c:	71 81       	ldd	r23, Z+1	; 0x01
    1c3e:	82 81       	ldd	r24, Z+2	; 0x02
    1c40:	93 81       	ldd	r25, Z+3	; 0x03
    1c42:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    1c46:	dc 01       	movw	r26, r24
    1c48:	cb 01       	movw	r24, r22
    1c4a:	f8 01       	movw	r30, r16
    1c4c:	91 83       	std	Z+1, r25	; 0x01
    1c4e:	80 83       	st	Z, r24
    1c50:	ce 01       	movw	r24, r28
    1c52:	83 55       	subi	r24, 0x53	; 83
    1c54:	9e 4f       	sbci	r25, 0xFE	; 254
    1c56:	9e 01       	movw	r18, r28
    1c58:	27 55       	subi	r18, 0x57	; 87
    1c5a:	3e 4f       	sbci	r19, 0xFE	; 254
    1c5c:	f9 01       	movw	r30, r18
    1c5e:	20 81       	ld	r18, Z
    1c60:	31 81       	ldd	r19, Z+1	; 0x01
    1c62:	fc 01       	movw	r30, r24
    1c64:	31 83       	std	Z+1, r19	; 0x01
    1c66:	20 83       	st	Z, r18
    1c68:	ce 01       	movw	r24, r28
    1c6a:	83 55       	subi	r24, 0x53	; 83
    1c6c:	9e 4f       	sbci	r25, 0xFE	; 254
    1c6e:	fc 01       	movw	r30, r24
    1c70:	80 81       	ld	r24, Z
    1c72:	91 81       	ldd	r25, Z+1	; 0x01
    1c74:	01 97       	sbiw	r24, 0x01	; 1
    1c76:	f1 f7       	brne	.-4      	; 0x1c74 <__stack+0xb75>
    1c78:	9e 01       	movw	r18, r28
    1c7a:	23 55       	subi	r18, 0x53	; 83
    1c7c:	3e 4f       	sbci	r19, 0xFE	; 254
    1c7e:	f9 01       	movw	r30, r18
    1c80:	91 83       	std	Z+1, r25	; 0x01
    1c82:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F380 T100\n");
    1c84:	8b ef       	ldi	r24, 0xFB	; 251
    1c86:	91 e0       	ldi	r25, 0x01	; 1
    1c88:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    1c8c:	80 e0       	ldi	r24, 0x00	; 0
    1c8e:	90 e0       	ldi	r25, 0x00	; 0
    1c90:	a8 e4       	ldi	r26, 0x48	; 72
    1c92:	b3 e4       	ldi	r27, 0x43	; 67
    1c94:	89 af       	std	Y+57, r24	; 0x39
    1c96:	9a af       	std	Y+58, r25	; 0x3a
    1c98:	ab af       	std	Y+59, r26	; 0x3b
    1c9a:	bc af       	std	Y+60, r27	; 0x3c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1c9c:	8e 01       	movw	r16, r28
    1c9e:	05 56       	subi	r16, 0x65	; 101
    1ca0:	1e 4f       	sbci	r17, 0xFE	; 254
    1ca2:	20 e0       	ldi	r18, 0x00	; 0
    1ca4:	30 e0       	ldi	r19, 0x00	; 0
    1ca6:	4a e7       	ldi	r20, 0x7A	; 122
    1ca8:	55 e4       	ldi	r21, 0x45	; 69
    1caa:	69 ad       	ldd	r22, Y+57	; 0x39
    1cac:	7a ad       	ldd	r23, Y+58	; 0x3a
    1cae:	8b ad       	ldd	r24, Y+59	; 0x3b
    1cb0:	9c ad       	ldd	r25, Y+60	; 0x3c
    1cb2:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    1cb6:	dc 01       	movw	r26, r24
    1cb8:	cb 01       	movw	r24, r22
    1cba:	f8 01       	movw	r30, r16
    1cbc:	80 83       	st	Z, r24
    1cbe:	91 83       	std	Z+1, r25	; 0x01
    1cc0:	a2 83       	std	Z+2, r26	; 0x02
    1cc2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1cc4:	ce 01       	movw	r24, r28
    1cc6:	85 56       	subi	r24, 0x65	; 101
    1cc8:	9e 4f       	sbci	r25, 0xFE	; 254
    1cca:	20 e0       	ldi	r18, 0x00	; 0
    1ccc:	30 e0       	ldi	r19, 0x00	; 0
    1cce:	40 e8       	ldi	r20, 0x80	; 128
    1cd0:	5f e3       	ldi	r21, 0x3F	; 63
    1cd2:	fc 01       	movw	r30, r24
    1cd4:	60 81       	ld	r22, Z
    1cd6:	71 81       	ldd	r23, Z+1	; 0x01
    1cd8:	82 81       	ldd	r24, Z+2	; 0x02
    1cda:	93 81       	ldd	r25, Z+3	; 0x03
    1cdc:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    1ce0:	88 23       	and	r24, r24
    1ce2:	4c f4       	brge	.+18     	; 0x1cf6 <__stack+0xbf7>
		__ticks = 1;
    1ce4:	ce 01       	movw	r24, r28
    1ce6:	81 56       	subi	r24, 0x61	; 97
    1ce8:	9e 4f       	sbci	r25, 0xFE	; 254
    1cea:	21 e0       	ldi	r18, 0x01	; 1
    1cec:	30 e0       	ldi	r19, 0x00	; 0
    1cee:	fc 01       	movw	r30, r24
    1cf0:	31 83       	std	Z+1, r19	; 0x01
    1cf2:	20 83       	st	Z, r18
    1cf4:	69 c0       	rjmp	.+210    	; 0x1dc8 <__stack+0xcc9>
	else if (__tmp > 65535)
    1cf6:	ce 01       	movw	r24, r28
    1cf8:	85 56       	subi	r24, 0x65	; 101
    1cfa:	9e 4f       	sbci	r25, 0xFE	; 254
    1cfc:	20 e0       	ldi	r18, 0x00	; 0
    1cfe:	3f ef       	ldi	r19, 0xFF	; 255
    1d00:	4f e7       	ldi	r20, 0x7F	; 127
    1d02:	57 e4       	ldi	r21, 0x47	; 71
    1d04:	fc 01       	movw	r30, r24
    1d06:	60 81       	ld	r22, Z
    1d08:	71 81       	ldd	r23, Z+1	; 0x01
    1d0a:	82 81       	ldd	r24, Z+2	; 0x02
    1d0c:	93 81       	ldd	r25, Z+3	; 0x03
    1d0e:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    1d12:	18 16       	cp	r1, r24
    1d14:	0c f0       	brlt	.+2      	; 0x1d18 <__stack+0xc19>
    1d16:	46 c0       	rjmp	.+140    	; 0x1da4 <__stack+0xca5>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d18:	20 e0       	ldi	r18, 0x00	; 0
    1d1a:	30 e0       	ldi	r19, 0x00	; 0
    1d1c:	40 e2       	ldi	r20, 0x20	; 32
    1d1e:	51 e4       	ldi	r21, 0x41	; 65
    1d20:	69 ad       	ldd	r22, Y+57	; 0x39
    1d22:	7a ad       	ldd	r23, Y+58	; 0x3a
    1d24:	8b ad       	ldd	r24, Y+59	; 0x3b
    1d26:	9c ad       	ldd	r25, Y+60	; 0x3c
    1d28:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    1d2c:	dc 01       	movw	r26, r24
    1d2e:	cb 01       	movw	r24, r22
    1d30:	8e 01       	movw	r16, r28
    1d32:	01 56       	subi	r16, 0x61	; 97
    1d34:	1e 4f       	sbci	r17, 0xFE	; 254
    1d36:	bc 01       	movw	r22, r24
    1d38:	cd 01       	movw	r24, r26
    1d3a:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    1d3e:	dc 01       	movw	r26, r24
    1d40:	cb 01       	movw	r24, r22
    1d42:	f8 01       	movw	r30, r16
    1d44:	91 83       	std	Z+1, r25	; 0x01
    1d46:	80 83       	st	Z, r24
    1d48:	24 c0       	rjmp	.+72     	; 0x1d92 <__stack+0xc93>
    1d4a:	ce 01       	movw	r24, r28
    1d4c:	8f 55       	subi	r24, 0x5F	; 95
    1d4e:	9e 4f       	sbci	r25, 0xFE	; 254
    1d50:	20 e9       	ldi	r18, 0x90	; 144
    1d52:	31 e0       	ldi	r19, 0x01	; 1
    1d54:	fc 01       	movw	r30, r24
    1d56:	31 83       	std	Z+1, r19	; 0x01
    1d58:	20 83       	st	Z, r18
    1d5a:	ce 01       	movw	r24, r28
    1d5c:	8f 55       	subi	r24, 0x5F	; 95
    1d5e:	9e 4f       	sbci	r25, 0xFE	; 254
    1d60:	fc 01       	movw	r30, r24
    1d62:	80 81       	ld	r24, Z
    1d64:	91 81       	ldd	r25, Z+1	; 0x01
    1d66:	01 97       	sbiw	r24, 0x01	; 1
    1d68:	f1 f7       	brne	.-4      	; 0x1d66 <__stack+0xc67>
    1d6a:	9e 01       	movw	r18, r28
    1d6c:	2f 55       	subi	r18, 0x5F	; 95
    1d6e:	3e 4f       	sbci	r19, 0xFE	; 254
    1d70:	f9 01       	movw	r30, r18
    1d72:	91 83       	std	Z+1, r25	; 0x01
    1d74:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d76:	ce 01       	movw	r24, r28
    1d78:	81 56       	subi	r24, 0x61	; 97
    1d7a:	9e 4f       	sbci	r25, 0xFE	; 254
    1d7c:	9e 01       	movw	r18, r28
    1d7e:	21 56       	subi	r18, 0x61	; 97
    1d80:	3e 4f       	sbci	r19, 0xFE	; 254
    1d82:	f9 01       	movw	r30, r18
    1d84:	20 81       	ld	r18, Z
    1d86:	31 81       	ldd	r19, Z+1	; 0x01
    1d88:	21 50       	subi	r18, 0x01	; 1
    1d8a:	31 09       	sbc	r19, r1
    1d8c:	fc 01       	movw	r30, r24
    1d8e:	31 83       	std	Z+1, r19	; 0x01
    1d90:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d92:	ce 01       	movw	r24, r28
    1d94:	81 56       	subi	r24, 0x61	; 97
    1d96:	9e 4f       	sbci	r25, 0xFE	; 254
    1d98:	fc 01       	movw	r30, r24
    1d9a:	80 81       	ld	r24, Z
    1d9c:	91 81       	ldd	r25, Z+1	; 0x01
    1d9e:	89 2b       	or	r24, r25
    1da0:	a1 f6       	brne	.-88     	; 0x1d4a <__stack+0xc4b>
    1da2:	2c c0       	rjmp	.+88     	; 0x1dfc <__stack+0xcfd>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1da4:	8e 01       	movw	r16, r28
    1da6:	01 56       	subi	r16, 0x61	; 97
    1da8:	1e 4f       	sbci	r17, 0xFE	; 254
    1daa:	ce 01       	movw	r24, r28
    1dac:	85 56       	subi	r24, 0x65	; 101
    1dae:	9e 4f       	sbci	r25, 0xFE	; 254
    1db0:	fc 01       	movw	r30, r24
    1db2:	60 81       	ld	r22, Z
    1db4:	71 81       	ldd	r23, Z+1	; 0x01
    1db6:	82 81       	ldd	r24, Z+2	; 0x02
    1db8:	93 81       	ldd	r25, Z+3	; 0x03
    1dba:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    1dbe:	dc 01       	movw	r26, r24
    1dc0:	cb 01       	movw	r24, r22
    1dc2:	f8 01       	movw	r30, r16
    1dc4:	91 83       	std	Z+1, r25	; 0x01
    1dc6:	80 83       	st	Z, r24
    1dc8:	ce 01       	movw	r24, r28
    1dca:	8d 55       	subi	r24, 0x5D	; 93
    1dcc:	9e 4f       	sbci	r25, 0xFE	; 254
    1dce:	9e 01       	movw	r18, r28
    1dd0:	21 56       	subi	r18, 0x61	; 97
    1dd2:	3e 4f       	sbci	r19, 0xFE	; 254
    1dd4:	f9 01       	movw	r30, r18
    1dd6:	20 81       	ld	r18, Z
    1dd8:	31 81       	ldd	r19, Z+1	; 0x01
    1dda:	fc 01       	movw	r30, r24
    1ddc:	31 83       	std	Z+1, r19	; 0x01
    1dde:	20 83       	st	Z, r18
    1de0:	ce 01       	movw	r24, r28
    1de2:	8d 55       	subi	r24, 0x5D	; 93
    1de4:	9e 4f       	sbci	r25, 0xFE	; 254
    1de6:	fc 01       	movw	r30, r24
    1de8:	80 81       	ld	r24, Z
    1dea:	91 81       	ldd	r25, Z+1	; 0x01
    1dec:	01 97       	sbiw	r24, 0x01	; 1
    1dee:	f1 f7       	brne	.-4      	; 0x1dec <__stack+0xced>
    1df0:	9e 01       	movw	r18, r28
    1df2:	2d 55       	subi	r18, 0x5D	; 93
    1df4:	3e 4f       	sbci	r19, 0xFE	; 254
    1df6:	f9 01       	movw	r30, r18
    1df8:	91 83       	std	Z+1, r25	; 0x01
    1dfa:	80 83       	st	Z, r24
	_delay_ms(200);
	to_uARM("M2210 F660 T80\n");
    1dfc:	80 e6       	ldi	r24, 0x60	; 96
    1dfe:	92 e0       	ldi	r25, 0x02	; 2
    1e00:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    1e04:	80 e0       	ldi	r24, 0x00	; 0
    1e06:	90 e0       	ldi	r25, 0x00	; 0
    1e08:	a8 e4       	ldi	r26, 0x48	; 72
    1e0a:	b3 e4       	ldi	r27, 0x43	; 67
    1e0c:	9e 01       	movw	r18, r28
    1e0e:	23 5c       	subi	r18, 0xC3	; 195
    1e10:	3f 4f       	sbci	r19, 0xFF	; 255
    1e12:	f9 01       	movw	r30, r18
    1e14:	80 83       	st	Z, r24
    1e16:	91 83       	std	Z+1, r25	; 0x01
    1e18:	a2 83       	std	Z+2, r26	; 0x02
    1e1a:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1e1c:	8e 01       	movw	r16, r28
    1e1e:	0f 56       	subi	r16, 0x6F	; 111
    1e20:	1e 4f       	sbci	r17, 0xFE	; 254
    1e22:	20 e0       	ldi	r18, 0x00	; 0
    1e24:	30 e0       	ldi	r19, 0x00	; 0
    1e26:	4a e7       	ldi	r20, 0x7A	; 122
    1e28:	55 e4       	ldi	r21, 0x45	; 69
    1e2a:	ce 01       	movw	r24, r28
    1e2c:	cd 96       	adiw	r24, 0x3d	; 61
    1e2e:	fc 01       	movw	r30, r24
    1e30:	60 81       	ld	r22, Z
    1e32:	71 81       	ldd	r23, Z+1	; 0x01
    1e34:	82 81       	ldd	r24, Z+2	; 0x02
    1e36:	93 81       	ldd	r25, Z+3	; 0x03
    1e38:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    1e3c:	dc 01       	movw	r26, r24
    1e3e:	cb 01       	movw	r24, r22
    1e40:	f8 01       	movw	r30, r16
    1e42:	80 83       	st	Z, r24
    1e44:	91 83       	std	Z+1, r25	; 0x01
    1e46:	a2 83       	std	Z+2, r26	; 0x02
    1e48:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e4a:	ce 01       	movw	r24, r28
    1e4c:	8f 56       	subi	r24, 0x6F	; 111
    1e4e:	9e 4f       	sbci	r25, 0xFE	; 254
    1e50:	20 e0       	ldi	r18, 0x00	; 0
    1e52:	30 e0       	ldi	r19, 0x00	; 0
    1e54:	40 e8       	ldi	r20, 0x80	; 128
    1e56:	5f e3       	ldi	r21, 0x3F	; 63
    1e58:	fc 01       	movw	r30, r24
    1e5a:	60 81       	ld	r22, Z
    1e5c:	71 81       	ldd	r23, Z+1	; 0x01
    1e5e:	82 81       	ldd	r24, Z+2	; 0x02
    1e60:	93 81       	ldd	r25, Z+3	; 0x03
    1e62:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    1e66:	88 23       	and	r24, r24
    1e68:	4c f4       	brge	.+18     	; 0x1e7c <__stack+0xd7d>
		__ticks = 1;
    1e6a:	ce 01       	movw	r24, r28
    1e6c:	8b 56       	subi	r24, 0x6B	; 107
    1e6e:	9e 4f       	sbci	r25, 0xFE	; 254
    1e70:	21 e0       	ldi	r18, 0x01	; 1
    1e72:	30 e0       	ldi	r19, 0x00	; 0
    1e74:	fc 01       	movw	r30, r24
    1e76:	31 83       	std	Z+1, r19	; 0x01
    1e78:	20 83       	st	Z, r18
    1e7a:	6c c0       	rjmp	.+216    	; 0x1f54 <__stack+0xe55>
	else if (__tmp > 65535)
    1e7c:	ce 01       	movw	r24, r28
    1e7e:	8f 56       	subi	r24, 0x6F	; 111
    1e80:	9e 4f       	sbci	r25, 0xFE	; 254
    1e82:	20 e0       	ldi	r18, 0x00	; 0
    1e84:	3f ef       	ldi	r19, 0xFF	; 255
    1e86:	4f e7       	ldi	r20, 0x7F	; 127
    1e88:	57 e4       	ldi	r21, 0x47	; 71
    1e8a:	fc 01       	movw	r30, r24
    1e8c:	60 81       	ld	r22, Z
    1e8e:	71 81       	ldd	r23, Z+1	; 0x01
    1e90:	82 81       	ldd	r24, Z+2	; 0x02
    1e92:	93 81       	ldd	r25, Z+3	; 0x03
    1e94:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    1e98:	18 16       	cp	r1, r24
    1e9a:	0c f0       	brlt	.+2      	; 0x1e9e <__stack+0xd9f>
    1e9c:	49 c0       	rjmp	.+146    	; 0x1f30 <__stack+0xe31>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e9e:	20 e0       	ldi	r18, 0x00	; 0
    1ea0:	30 e0       	ldi	r19, 0x00	; 0
    1ea2:	40 e2       	ldi	r20, 0x20	; 32
    1ea4:	51 e4       	ldi	r21, 0x41	; 65
    1ea6:	ce 01       	movw	r24, r28
    1ea8:	cd 96       	adiw	r24, 0x3d	; 61
    1eaa:	fc 01       	movw	r30, r24
    1eac:	60 81       	ld	r22, Z
    1eae:	71 81       	ldd	r23, Z+1	; 0x01
    1eb0:	82 81       	ldd	r24, Z+2	; 0x02
    1eb2:	93 81       	ldd	r25, Z+3	; 0x03
    1eb4:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    1eb8:	dc 01       	movw	r26, r24
    1eba:	cb 01       	movw	r24, r22
    1ebc:	8e 01       	movw	r16, r28
    1ebe:	0b 56       	subi	r16, 0x6B	; 107
    1ec0:	1e 4f       	sbci	r17, 0xFE	; 254
    1ec2:	bc 01       	movw	r22, r24
    1ec4:	cd 01       	movw	r24, r26
    1ec6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    1eca:	dc 01       	movw	r26, r24
    1ecc:	cb 01       	movw	r24, r22
    1ece:	f8 01       	movw	r30, r16
    1ed0:	91 83       	std	Z+1, r25	; 0x01
    1ed2:	80 83       	st	Z, r24
    1ed4:	24 c0       	rjmp	.+72     	; 0x1f1e <__stack+0xe1f>
    1ed6:	ce 01       	movw	r24, r28
    1ed8:	89 56       	subi	r24, 0x69	; 105
    1eda:	9e 4f       	sbci	r25, 0xFE	; 254
    1edc:	20 e9       	ldi	r18, 0x90	; 144
    1ede:	31 e0       	ldi	r19, 0x01	; 1
    1ee0:	fc 01       	movw	r30, r24
    1ee2:	31 83       	std	Z+1, r19	; 0x01
    1ee4:	20 83       	st	Z, r18
    1ee6:	ce 01       	movw	r24, r28
    1ee8:	89 56       	subi	r24, 0x69	; 105
    1eea:	9e 4f       	sbci	r25, 0xFE	; 254
    1eec:	fc 01       	movw	r30, r24
    1eee:	80 81       	ld	r24, Z
    1ef0:	91 81       	ldd	r25, Z+1	; 0x01
    1ef2:	01 97       	sbiw	r24, 0x01	; 1
    1ef4:	f1 f7       	brne	.-4      	; 0x1ef2 <__stack+0xdf3>
    1ef6:	9e 01       	movw	r18, r28
    1ef8:	29 56       	subi	r18, 0x69	; 105
    1efa:	3e 4f       	sbci	r19, 0xFE	; 254
    1efc:	f9 01       	movw	r30, r18
    1efe:	91 83       	std	Z+1, r25	; 0x01
    1f00:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f02:	ce 01       	movw	r24, r28
    1f04:	8b 56       	subi	r24, 0x6B	; 107
    1f06:	9e 4f       	sbci	r25, 0xFE	; 254
    1f08:	9e 01       	movw	r18, r28
    1f0a:	2b 56       	subi	r18, 0x6B	; 107
    1f0c:	3e 4f       	sbci	r19, 0xFE	; 254
    1f0e:	f9 01       	movw	r30, r18
    1f10:	20 81       	ld	r18, Z
    1f12:	31 81       	ldd	r19, Z+1	; 0x01
    1f14:	21 50       	subi	r18, 0x01	; 1
    1f16:	31 09       	sbc	r19, r1
    1f18:	fc 01       	movw	r30, r24
    1f1a:	31 83       	std	Z+1, r19	; 0x01
    1f1c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f1e:	ce 01       	movw	r24, r28
    1f20:	8b 56       	subi	r24, 0x6B	; 107
    1f22:	9e 4f       	sbci	r25, 0xFE	; 254
    1f24:	fc 01       	movw	r30, r24
    1f26:	80 81       	ld	r24, Z
    1f28:	91 81       	ldd	r25, Z+1	; 0x01
    1f2a:	89 2b       	or	r24, r25
    1f2c:	a1 f6       	brne	.-88     	; 0x1ed6 <__stack+0xdd7>
    1f2e:	2c c0       	rjmp	.+88     	; 0x1f88 <__stack+0xe89>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f30:	8e 01       	movw	r16, r28
    1f32:	0b 56       	subi	r16, 0x6B	; 107
    1f34:	1e 4f       	sbci	r17, 0xFE	; 254
    1f36:	ce 01       	movw	r24, r28
    1f38:	8f 56       	subi	r24, 0x6F	; 111
    1f3a:	9e 4f       	sbci	r25, 0xFE	; 254
    1f3c:	fc 01       	movw	r30, r24
    1f3e:	60 81       	ld	r22, Z
    1f40:	71 81       	ldd	r23, Z+1	; 0x01
    1f42:	82 81       	ldd	r24, Z+2	; 0x02
    1f44:	93 81       	ldd	r25, Z+3	; 0x03
    1f46:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    1f4a:	dc 01       	movw	r26, r24
    1f4c:	cb 01       	movw	r24, r22
    1f4e:	f8 01       	movw	r30, r16
    1f50:	91 83       	std	Z+1, r25	; 0x01
    1f52:	80 83       	st	Z, r24
    1f54:	ce 01       	movw	r24, r28
    1f56:	87 56       	subi	r24, 0x67	; 103
    1f58:	9e 4f       	sbci	r25, 0xFE	; 254
    1f5a:	9e 01       	movw	r18, r28
    1f5c:	2b 56       	subi	r18, 0x6B	; 107
    1f5e:	3e 4f       	sbci	r19, 0xFE	; 254
    1f60:	f9 01       	movw	r30, r18
    1f62:	20 81       	ld	r18, Z
    1f64:	31 81       	ldd	r19, Z+1	; 0x01
    1f66:	fc 01       	movw	r30, r24
    1f68:	31 83       	std	Z+1, r19	; 0x01
    1f6a:	20 83       	st	Z, r18
    1f6c:	ce 01       	movw	r24, r28
    1f6e:	87 56       	subi	r24, 0x67	; 103
    1f70:	9e 4f       	sbci	r25, 0xFE	; 254
    1f72:	fc 01       	movw	r30, r24
    1f74:	80 81       	ld	r24, Z
    1f76:	91 81       	ldd	r25, Z+1	; 0x01
    1f78:	01 97       	sbiw	r24, 0x01	; 1
    1f7a:	f1 f7       	brne	.-4      	; 0x1f78 <__stack+0xe79>
    1f7c:	9e 01       	movw	r18, r28
    1f7e:	27 56       	subi	r18, 0x67	; 103
    1f80:	3e 4f       	sbci	r19, 0xFE	; 254
    1f82:	f9 01       	movw	r30, r18
    1f84:	91 83       	std	Z+1, r25	; 0x01
    1f86:	80 83       	st	Z, r24
	_delay_ms(200);
	to_uARM("M2210 F760 T50\n");
    1f88:	80 e7       	ldi	r24, 0x70	; 112
    1f8a:	92 e0       	ldi	r25, 0x02	; 2
    1f8c:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    1f90:	9e 01       	movw	r18, r28
    1f92:	2f 5b       	subi	r18, 0xBF	; 191
    1f94:	3f 4f       	sbci	r19, 0xFF	; 255
    1f96:	80 e0       	ldi	r24, 0x00	; 0
    1f98:	90 e0       	ldi	r25, 0x00	; 0
    1f9a:	a6 e1       	ldi	r26, 0x16	; 22
    1f9c:	b3 e4       	ldi	r27, 0x43	; 67
    1f9e:	f9 01       	movw	r30, r18
    1fa0:	80 83       	st	Z, r24
    1fa2:	91 83       	std	Z+1, r25	; 0x01
    1fa4:	a2 83       	std	Z+2, r26	; 0x02
    1fa6:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1fa8:	8e 01       	movw	r16, r28
    1faa:	09 57       	subi	r16, 0x79	; 121
    1fac:	1e 4f       	sbci	r17, 0xFE	; 254
    1fae:	ce 01       	movw	r24, r28
    1fb0:	8f 5b       	subi	r24, 0xBF	; 191
    1fb2:	9f 4f       	sbci	r25, 0xFF	; 255
    1fb4:	20 e0       	ldi	r18, 0x00	; 0
    1fb6:	30 e0       	ldi	r19, 0x00	; 0
    1fb8:	4a e7       	ldi	r20, 0x7A	; 122
    1fba:	55 e4       	ldi	r21, 0x45	; 69
    1fbc:	fc 01       	movw	r30, r24
    1fbe:	60 81       	ld	r22, Z
    1fc0:	71 81       	ldd	r23, Z+1	; 0x01
    1fc2:	82 81       	ldd	r24, Z+2	; 0x02
    1fc4:	93 81       	ldd	r25, Z+3	; 0x03
    1fc6:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    1fca:	dc 01       	movw	r26, r24
    1fcc:	cb 01       	movw	r24, r22
    1fce:	f8 01       	movw	r30, r16
    1fd0:	80 83       	st	Z, r24
    1fd2:	91 83       	std	Z+1, r25	; 0x01
    1fd4:	a2 83       	std	Z+2, r26	; 0x02
    1fd6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1fd8:	ce 01       	movw	r24, r28
    1fda:	89 57       	subi	r24, 0x79	; 121
    1fdc:	9e 4f       	sbci	r25, 0xFE	; 254
    1fde:	20 e0       	ldi	r18, 0x00	; 0
    1fe0:	30 e0       	ldi	r19, 0x00	; 0
    1fe2:	40 e8       	ldi	r20, 0x80	; 128
    1fe4:	5f e3       	ldi	r21, 0x3F	; 63
    1fe6:	fc 01       	movw	r30, r24
    1fe8:	60 81       	ld	r22, Z
    1fea:	71 81       	ldd	r23, Z+1	; 0x01
    1fec:	82 81       	ldd	r24, Z+2	; 0x02
    1fee:	93 81       	ldd	r25, Z+3	; 0x03
    1ff0:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    1ff4:	88 23       	and	r24, r24
    1ff6:	4c f4       	brge	.+18     	; 0x200a <__stack+0xf0b>
		__ticks = 1;
    1ff8:	ce 01       	movw	r24, r28
    1ffa:	85 57       	subi	r24, 0x75	; 117
    1ffc:	9e 4f       	sbci	r25, 0xFE	; 254
    1ffe:	21 e0       	ldi	r18, 0x01	; 1
    2000:	30 e0       	ldi	r19, 0x00	; 0
    2002:	fc 01       	movw	r30, r24
    2004:	31 83       	std	Z+1, r19	; 0x01
    2006:	20 83       	st	Z, r18
    2008:	6d c0       	rjmp	.+218    	; 0x20e4 <__stack+0xfe5>
	else if (__tmp > 65535)
    200a:	ce 01       	movw	r24, r28
    200c:	89 57       	subi	r24, 0x79	; 121
    200e:	9e 4f       	sbci	r25, 0xFE	; 254
    2010:	20 e0       	ldi	r18, 0x00	; 0
    2012:	3f ef       	ldi	r19, 0xFF	; 255
    2014:	4f e7       	ldi	r20, 0x7F	; 127
    2016:	57 e4       	ldi	r21, 0x47	; 71
    2018:	fc 01       	movw	r30, r24
    201a:	60 81       	ld	r22, Z
    201c:	71 81       	ldd	r23, Z+1	; 0x01
    201e:	82 81       	ldd	r24, Z+2	; 0x02
    2020:	93 81       	ldd	r25, Z+3	; 0x03
    2022:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    2026:	18 16       	cp	r1, r24
    2028:	0c f0       	brlt	.+2      	; 0x202c <__stack+0xf2d>
    202a:	4a c0       	rjmp	.+148    	; 0x20c0 <__stack+0xfc1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    202c:	ce 01       	movw	r24, r28
    202e:	8f 5b       	subi	r24, 0xBF	; 191
    2030:	9f 4f       	sbci	r25, 0xFF	; 255
    2032:	20 e0       	ldi	r18, 0x00	; 0
    2034:	30 e0       	ldi	r19, 0x00	; 0
    2036:	40 e2       	ldi	r20, 0x20	; 32
    2038:	51 e4       	ldi	r21, 0x41	; 65
    203a:	fc 01       	movw	r30, r24
    203c:	60 81       	ld	r22, Z
    203e:	71 81       	ldd	r23, Z+1	; 0x01
    2040:	82 81       	ldd	r24, Z+2	; 0x02
    2042:	93 81       	ldd	r25, Z+3	; 0x03
    2044:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    2048:	dc 01       	movw	r26, r24
    204a:	cb 01       	movw	r24, r22
    204c:	8e 01       	movw	r16, r28
    204e:	05 57       	subi	r16, 0x75	; 117
    2050:	1e 4f       	sbci	r17, 0xFE	; 254
    2052:	bc 01       	movw	r22, r24
    2054:	cd 01       	movw	r24, r26
    2056:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    205a:	dc 01       	movw	r26, r24
    205c:	cb 01       	movw	r24, r22
    205e:	f8 01       	movw	r30, r16
    2060:	91 83       	std	Z+1, r25	; 0x01
    2062:	80 83       	st	Z, r24
    2064:	24 c0       	rjmp	.+72     	; 0x20ae <__stack+0xfaf>
    2066:	ce 01       	movw	r24, r28
    2068:	83 57       	subi	r24, 0x73	; 115
    206a:	9e 4f       	sbci	r25, 0xFE	; 254
    206c:	20 e9       	ldi	r18, 0x90	; 144
    206e:	31 e0       	ldi	r19, 0x01	; 1
    2070:	fc 01       	movw	r30, r24
    2072:	31 83       	std	Z+1, r19	; 0x01
    2074:	20 83       	st	Z, r18
    2076:	ce 01       	movw	r24, r28
    2078:	83 57       	subi	r24, 0x73	; 115
    207a:	9e 4f       	sbci	r25, 0xFE	; 254
    207c:	fc 01       	movw	r30, r24
    207e:	80 81       	ld	r24, Z
    2080:	91 81       	ldd	r25, Z+1	; 0x01
    2082:	01 97       	sbiw	r24, 0x01	; 1
    2084:	f1 f7       	brne	.-4      	; 0x2082 <__stack+0xf83>
    2086:	9e 01       	movw	r18, r28
    2088:	23 57       	subi	r18, 0x73	; 115
    208a:	3e 4f       	sbci	r19, 0xFE	; 254
    208c:	f9 01       	movw	r30, r18
    208e:	91 83       	std	Z+1, r25	; 0x01
    2090:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2092:	ce 01       	movw	r24, r28
    2094:	85 57       	subi	r24, 0x75	; 117
    2096:	9e 4f       	sbci	r25, 0xFE	; 254
    2098:	9e 01       	movw	r18, r28
    209a:	25 57       	subi	r18, 0x75	; 117
    209c:	3e 4f       	sbci	r19, 0xFE	; 254
    209e:	f9 01       	movw	r30, r18
    20a0:	20 81       	ld	r18, Z
    20a2:	31 81       	ldd	r19, Z+1	; 0x01
    20a4:	21 50       	subi	r18, 0x01	; 1
    20a6:	31 09       	sbc	r19, r1
    20a8:	fc 01       	movw	r30, r24
    20aa:	31 83       	std	Z+1, r19	; 0x01
    20ac:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20ae:	ce 01       	movw	r24, r28
    20b0:	85 57       	subi	r24, 0x75	; 117
    20b2:	9e 4f       	sbci	r25, 0xFE	; 254
    20b4:	fc 01       	movw	r30, r24
    20b6:	80 81       	ld	r24, Z
    20b8:	91 81       	ldd	r25, Z+1	; 0x01
    20ba:	89 2b       	or	r24, r25
    20bc:	a1 f6       	brne	.-88     	; 0x2066 <__stack+0xf67>
    20be:	2c c0       	rjmp	.+88     	; 0x2118 <__stack+0x1019>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20c0:	8e 01       	movw	r16, r28
    20c2:	05 57       	subi	r16, 0x75	; 117
    20c4:	1e 4f       	sbci	r17, 0xFE	; 254
    20c6:	ce 01       	movw	r24, r28
    20c8:	89 57       	subi	r24, 0x79	; 121
    20ca:	9e 4f       	sbci	r25, 0xFE	; 254
    20cc:	fc 01       	movw	r30, r24
    20ce:	60 81       	ld	r22, Z
    20d0:	71 81       	ldd	r23, Z+1	; 0x01
    20d2:	82 81       	ldd	r24, Z+2	; 0x02
    20d4:	93 81       	ldd	r25, Z+3	; 0x03
    20d6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    20da:	dc 01       	movw	r26, r24
    20dc:	cb 01       	movw	r24, r22
    20de:	f8 01       	movw	r30, r16
    20e0:	91 83       	std	Z+1, r25	; 0x01
    20e2:	80 83       	st	Z, r24
    20e4:	ce 01       	movw	r24, r28
    20e6:	81 57       	subi	r24, 0x71	; 113
    20e8:	9e 4f       	sbci	r25, 0xFE	; 254
    20ea:	9e 01       	movw	r18, r28
    20ec:	25 57       	subi	r18, 0x75	; 117
    20ee:	3e 4f       	sbci	r19, 0xFE	; 254
    20f0:	f9 01       	movw	r30, r18
    20f2:	20 81       	ld	r18, Z
    20f4:	31 81       	ldd	r19, Z+1	; 0x01
    20f6:	fc 01       	movw	r30, r24
    20f8:	31 83       	std	Z+1, r19	; 0x01
    20fa:	20 83       	st	Z, r18
    20fc:	ce 01       	movw	r24, r28
    20fe:	81 57       	subi	r24, 0x71	; 113
    2100:	9e 4f       	sbci	r25, 0xFE	; 254
    2102:	fc 01       	movw	r30, r24
    2104:	80 81       	ld	r24, Z
    2106:	91 81       	ldd	r25, Z+1	; 0x01
    2108:	01 97       	sbiw	r24, 0x01	; 1
    210a:	f1 f7       	brne	.-4      	; 0x2108 <__stack+0x1009>
    210c:	9e 01       	movw	r18, r28
    210e:	21 57       	subi	r18, 0x71	; 113
    2110:	3e 4f       	sbci	r19, 0xFE	; 254
    2112:	f9 01       	movw	r30, r18
    2114:	91 83       	std	Z+1, r25	; 0x01
    2116:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F860 T100\n");
    2118:	80 e8       	ldi	r24, 0x80	; 128
    211a:	92 e0       	ldi	r25, 0x02	; 2
    211c:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    2120:	9e 01       	movw	r18, r28
    2122:	2b 5b       	subi	r18, 0xBB	; 187
    2124:	3f 4f       	sbci	r19, 0xFF	; 255
    2126:	80 e0       	ldi	r24, 0x00	; 0
    2128:	90 e0       	ldi	r25, 0x00	; 0
    212a:	a6 e9       	ldi	r26, 0x96	; 150
    212c:	b3 e4       	ldi	r27, 0x43	; 67
    212e:	f9 01       	movw	r30, r18
    2130:	80 83       	st	Z, r24
    2132:	91 83       	std	Z+1, r25	; 0x01
    2134:	a2 83       	std	Z+2, r26	; 0x02
    2136:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2138:	8e 01       	movw	r16, r28
    213a:	03 58       	subi	r16, 0x83	; 131
    213c:	1e 4f       	sbci	r17, 0xFE	; 254
    213e:	ce 01       	movw	r24, r28
    2140:	8b 5b       	subi	r24, 0xBB	; 187
    2142:	9f 4f       	sbci	r25, 0xFF	; 255
    2144:	20 e0       	ldi	r18, 0x00	; 0
    2146:	30 e0       	ldi	r19, 0x00	; 0
    2148:	4a e7       	ldi	r20, 0x7A	; 122
    214a:	55 e4       	ldi	r21, 0x45	; 69
    214c:	fc 01       	movw	r30, r24
    214e:	60 81       	ld	r22, Z
    2150:	71 81       	ldd	r23, Z+1	; 0x01
    2152:	82 81       	ldd	r24, Z+2	; 0x02
    2154:	93 81       	ldd	r25, Z+3	; 0x03
    2156:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    215a:	dc 01       	movw	r26, r24
    215c:	cb 01       	movw	r24, r22
    215e:	f8 01       	movw	r30, r16
    2160:	80 83       	st	Z, r24
    2162:	91 83       	std	Z+1, r25	; 0x01
    2164:	a2 83       	std	Z+2, r26	; 0x02
    2166:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2168:	ce 01       	movw	r24, r28
    216a:	83 58       	subi	r24, 0x83	; 131
    216c:	9e 4f       	sbci	r25, 0xFE	; 254
    216e:	20 e0       	ldi	r18, 0x00	; 0
    2170:	30 e0       	ldi	r19, 0x00	; 0
    2172:	40 e8       	ldi	r20, 0x80	; 128
    2174:	5f e3       	ldi	r21, 0x3F	; 63
    2176:	fc 01       	movw	r30, r24
    2178:	60 81       	ld	r22, Z
    217a:	71 81       	ldd	r23, Z+1	; 0x01
    217c:	82 81       	ldd	r24, Z+2	; 0x02
    217e:	93 81       	ldd	r25, Z+3	; 0x03
    2180:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    2184:	88 23       	and	r24, r24
    2186:	4c f4       	brge	.+18     	; 0x219a <__stack+0x109b>
		__ticks = 1;
    2188:	ce 01       	movw	r24, r28
    218a:	8f 57       	subi	r24, 0x7F	; 127
    218c:	9e 4f       	sbci	r25, 0xFE	; 254
    218e:	21 e0       	ldi	r18, 0x01	; 1
    2190:	30 e0       	ldi	r19, 0x00	; 0
    2192:	fc 01       	movw	r30, r24
    2194:	31 83       	std	Z+1, r19	; 0x01
    2196:	20 83       	st	Z, r18
    2198:	6d c0       	rjmp	.+218    	; 0x2274 <__stack+0x1175>
	else if (__tmp > 65535)
    219a:	ce 01       	movw	r24, r28
    219c:	83 58       	subi	r24, 0x83	; 131
    219e:	9e 4f       	sbci	r25, 0xFE	; 254
    21a0:	20 e0       	ldi	r18, 0x00	; 0
    21a2:	3f ef       	ldi	r19, 0xFF	; 255
    21a4:	4f e7       	ldi	r20, 0x7F	; 127
    21a6:	57 e4       	ldi	r21, 0x47	; 71
    21a8:	fc 01       	movw	r30, r24
    21aa:	60 81       	ld	r22, Z
    21ac:	71 81       	ldd	r23, Z+1	; 0x01
    21ae:	82 81       	ldd	r24, Z+2	; 0x02
    21b0:	93 81       	ldd	r25, Z+3	; 0x03
    21b2:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    21b6:	18 16       	cp	r1, r24
    21b8:	0c f0       	brlt	.+2      	; 0x21bc <__stack+0x10bd>
    21ba:	4a c0       	rjmp	.+148    	; 0x2250 <__stack+0x1151>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21bc:	ce 01       	movw	r24, r28
    21be:	8b 5b       	subi	r24, 0xBB	; 187
    21c0:	9f 4f       	sbci	r25, 0xFF	; 255
    21c2:	20 e0       	ldi	r18, 0x00	; 0
    21c4:	30 e0       	ldi	r19, 0x00	; 0
    21c6:	40 e2       	ldi	r20, 0x20	; 32
    21c8:	51 e4       	ldi	r21, 0x41	; 65
    21ca:	fc 01       	movw	r30, r24
    21cc:	60 81       	ld	r22, Z
    21ce:	71 81       	ldd	r23, Z+1	; 0x01
    21d0:	82 81       	ldd	r24, Z+2	; 0x02
    21d2:	93 81       	ldd	r25, Z+3	; 0x03
    21d4:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    21d8:	dc 01       	movw	r26, r24
    21da:	cb 01       	movw	r24, r22
    21dc:	8e 01       	movw	r16, r28
    21de:	0f 57       	subi	r16, 0x7F	; 127
    21e0:	1e 4f       	sbci	r17, 0xFE	; 254
    21e2:	bc 01       	movw	r22, r24
    21e4:	cd 01       	movw	r24, r26
    21e6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    21ea:	dc 01       	movw	r26, r24
    21ec:	cb 01       	movw	r24, r22
    21ee:	f8 01       	movw	r30, r16
    21f0:	91 83       	std	Z+1, r25	; 0x01
    21f2:	80 83       	st	Z, r24
    21f4:	24 c0       	rjmp	.+72     	; 0x223e <__stack+0x113f>
    21f6:	ce 01       	movw	r24, r28
    21f8:	8d 57       	subi	r24, 0x7D	; 125
    21fa:	9e 4f       	sbci	r25, 0xFE	; 254
    21fc:	20 e9       	ldi	r18, 0x90	; 144
    21fe:	31 e0       	ldi	r19, 0x01	; 1
    2200:	fc 01       	movw	r30, r24
    2202:	31 83       	std	Z+1, r19	; 0x01
    2204:	20 83       	st	Z, r18
    2206:	ce 01       	movw	r24, r28
    2208:	8d 57       	subi	r24, 0x7D	; 125
    220a:	9e 4f       	sbci	r25, 0xFE	; 254
    220c:	fc 01       	movw	r30, r24
    220e:	80 81       	ld	r24, Z
    2210:	91 81       	ldd	r25, Z+1	; 0x01
    2212:	01 97       	sbiw	r24, 0x01	; 1
    2214:	f1 f7       	brne	.-4      	; 0x2212 <__stack+0x1113>
    2216:	9e 01       	movw	r18, r28
    2218:	2d 57       	subi	r18, 0x7D	; 125
    221a:	3e 4f       	sbci	r19, 0xFE	; 254
    221c:	f9 01       	movw	r30, r18
    221e:	91 83       	std	Z+1, r25	; 0x01
    2220:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2222:	ce 01       	movw	r24, r28
    2224:	8f 57       	subi	r24, 0x7F	; 127
    2226:	9e 4f       	sbci	r25, 0xFE	; 254
    2228:	9e 01       	movw	r18, r28
    222a:	2f 57       	subi	r18, 0x7F	; 127
    222c:	3e 4f       	sbci	r19, 0xFE	; 254
    222e:	f9 01       	movw	r30, r18
    2230:	20 81       	ld	r18, Z
    2232:	31 81       	ldd	r19, Z+1	; 0x01
    2234:	21 50       	subi	r18, 0x01	; 1
    2236:	31 09       	sbc	r19, r1
    2238:	fc 01       	movw	r30, r24
    223a:	31 83       	std	Z+1, r19	; 0x01
    223c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    223e:	ce 01       	movw	r24, r28
    2240:	8f 57       	subi	r24, 0x7F	; 127
    2242:	9e 4f       	sbci	r25, 0xFE	; 254
    2244:	fc 01       	movw	r30, r24
    2246:	80 81       	ld	r24, Z
    2248:	91 81       	ldd	r25, Z+1	; 0x01
    224a:	89 2b       	or	r24, r25
    224c:	a1 f6       	brne	.-88     	; 0x21f6 <__stack+0x10f7>
    224e:	2c c0       	rjmp	.+88     	; 0x22a8 <__stack+0x11a9>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2250:	8e 01       	movw	r16, r28
    2252:	0f 57       	subi	r16, 0x7F	; 127
    2254:	1e 4f       	sbci	r17, 0xFE	; 254
    2256:	ce 01       	movw	r24, r28
    2258:	83 58       	subi	r24, 0x83	; 131
    225a:	9e 4f       	sbci	r25, 0xFE	; 254
    225c:	fc 01       	movw	r30, r24
    225e:	60 81       	ld	r22, Z
    2260:	71 81       	ldd	r23, Z+1	; 0x01
    2262:	82 81       	ldd	r24, Z+2	; 0x02
    2264:	93 81       	ldd	r25, Z+3	; 0x03
    2266:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    226a:	dc 01       	movw	r26, r24
    226c:	cb 01       	movw	r24, r22
    226e:	f8 01       	movw	r30, r16
    2270:	91 83       	std	Z+1, r25	; 0x01
    2272:	80 83       	st	Z, r24
    2274:	ce 01       	movw	r24, r28
    2276:	8b 57       	subi	r24, 0x7B	; 123
    2278:	9e 4f       	sbci	r25, 0xFE	; 254
    227a:	9e 01       	movw	r18, r28
    227c:	2f 57       	subi	r18, 0x7F	; 127
    227e:	3e 4f       	sbci	r19, 0xFE	; 254
    2280:	f9 01       	movw	r30, r18
    2282:	20 81       	ld	r18, Z
    2284:	31 81       	ldd	r19, Z+1	; 0x01
    2286:	fc 01       	movw	r30, r24
    2288:	31 83       	std	Z+1, r19	; 0x01
    228a:	20 83       	st	Z, r18
    228c:	ce 01       	movw	r24, r28
    228e:	8b 57       	subi	r24, 0x7B	; 123
    2290:	9e 4f       	sbci	r25, 0xFE	; 254
    2292:	fc 01       	movw	r30, r24
    2294:	80 81       	ld	r24, Z
    2296:	91 81       	ldd	r25, Z+1	; 0x01
    2298:	01 97       	sbiw	r24, 0x01	; 1
    229a:	f1 f7       	brne	.-4      	; 0x2298 <__stack+0x1199>
    229c:	9e 01       	movw	r18, r28
    229e:	2b 57       	subi	r18, 0x7B	; 123
    22a0:	3e 4f       	sbci	r19, 0xFE	; 254
    22a2:	f9 01       	movw	r30, r18
    22a4:	91 83       	std	Z+1, r25	; 0x01
    22a6:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 700 T80\n");
    22a8:	81 e9       	ldi	r24, 0x91	; 145
    22aa:	92 e0       	ldi	r25, 0x02	; 2
    22ac:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    22b0:	9e 01       	movw	r18, r28
    22b2:	27 5b       	subi	r18, 0xB7	; 183
    22b4:	3f 4f       	sbci	r19, 0xFF	; 255
    22b6:	80 e0       	ldi	r24, 0x00	; 0
    22b8:	90 e0       	ldi	r25, 0x00	; 0
    22ba:	a6 e1       	ldi	r26, 0x16	; 22
    22bc:	b3 e4       	ldi	r27, 0x43	; 67
    22be:	f9 01       	movw	r30, r18
    22c0:	80 83       	st	Z, r24
    22c2:	91 83       	std	Z+1, r25	; 0x01
    22c4:	a2 83       	std	Z+2, r26	; 0x02
    22c6:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    22c8:	8e 01       	movw	r16, r28
    22ca:	0d 58       	subi	r16, 0x8D	; 141
    22cc:	1e 4f       	sbci	r17, 0xFE	; 254
    22ce:	ce 01       	movw	r24, r28
    22d0:	87 5b       	subi	r24, 0xB7	; 183
    22d2:	9f 4f       	sbci	r25, 0xFF	; 255
    22d4:	20 e0       	ldi	r18, 0x00	; 0
    22d6:	30 e0       	ldi	r19, 0x00	; 0
    22d8:	4a e7       	ldi	r20, 0x7A	; 122
    22da:	55 e4       	ldi	r21, 0x45	; 69
    22dc:	fc 01       	movw	r30, r24
    22de:	60 81       	ld	r22, Z
    22e0:	71 81       	ldd	r23, Z+1	; 0x01
    22e2:	82 81       	ldd	r24, Z+2	; 0x02
    22e4:	93 81       	ldd	r25, Z+3	; 0x03
    22e6:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    22ea:	dc 01       	movw	r26, r24
    22ec:	cb 01       	movw	r24, r22
    22ee:	f8 01       	movw	r30, r16
    22f0:	80 83       	st	Z, r24
    22f2:	91 83       	std	Z+1, r25	; 0x01
    22f4:	a2 83       	std	Z+2, r26	; 0x02
    22f6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    22f8:	ce 01       	movw	r24, r28
    22fa:	8d 58       	subi	r24, 0x8D	; 141
    22fc:	9e 4f       	sbci	r25, 0xFE	; 254
    22fe:	20 e0       	ldi	r18, 0x00	; 0
    2300:	30 e0       	ldi	r19, 0x00	; 0
    2302:	40 e8       	ldi	r20, 0x80	; 128
    2304:	5f e3       	ldi	r21, 0x3F	; 63
    2306:	fc 01       	movw	r30, r24
    2308:	60 81       	ld	r22, Z
    230a:	71 81       	ldd	r23, Z+1	; 0x01
    230c:	82 81       	ldd	r24, Z+2	; 0x02
    230e:	93 81       	ldd	r25, Z+3	; 0x03
    2310:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    2314:	88 23       	and	r24, r24
    2316:	4c f4       	brge	.+18     	; 0x232a <__stack+0x122b>
		__ticks = 1;
    2318:	ce 01       	movw	r24, r28
    231a:	89 58       	subi	r24, 0x89	; 137
    231c:	9e 4f       	sbci	r25, 0xFE	; 254
    231e:	21 e0       	ldi	r18, 0x01	; 1
    2320:	30 e0       	ldi	r19, 0x00	; 0
    2322:	fc 01       	movw	r30, r24
    2324:	31 83       	std	Z+1, r19	; 0x01
    2326:	20 83       	st	Z, r18
    2328:	6d c0       	rjmp	.+218    	; 0x2404 <__stack+0x1305>
	else if (__tmp > 65535)
    232a:	ce 01       	movw	r24, r28
    232c:	8d 58       	subi	r24, 0x8D	; 141
    232e:	9e 4f       	sbci	r25, 0xFE	; 254
    2330:	20 e0       	ldi	r18, 0x00	; 0
    2332:	3f ef       	ldi	r19, 0xFF	; 255
    2334:	4f e7       	ldi	r20, 0x7F	; 127
    2336:	57 e4       	ldi	r21, 0x47	; 71
    2338:	fc 01       	movw	r30, r24
    233a:	60 81       	ld	r22, Z
    233c:	71 81       	ldd	r23, Z+1	; 0x01
    233e:	82 81       	ldd	r24, Z+2	; 0x02
    2340:	93 81       	ldd	r25, Z+3	; 0x03
    2342:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    2346:	18 16       	cp	r1, r24
    2348:	0c f0       	brlt	.+2      	; 0x234c <__stack+0x124d>
    234a:	4a c0       	rjmp	.+148    	; 0x23e0 <__stack+0x12e1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    234c:	ce 01       	movw	r24, r28
    234e:	87 5b       	subi	r24, 0xB7	; 183
    2350:	9f 4f       	sbci	r25, 0xFF	; 255
    2352:	20 e0       	ldi	r18, 0x00	; 0
    2354:	30 e0       	ldi	r19, 0x00	; 0
    2356:	40 e2       	ldi	r20, 0x20	; 32
    2358:	51 e4       	ldi	r21, 0x41	; 65
    235a:	fc 01       	movw	r30, r24
    235c:	60 81       	ld	r22, Z
    235e:	71 81       	ldd	r23, Z+1	; 0x01
    2360:	82 81       	ldd	r24, Z+2	; 0x02
    2362:	93 81       	ldd	r25, Z+3	; 0x03
    2364:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    2368:	dc 01       	movw	r26, r24
    236a:	cb 01       	movw	r24, r22
    236c:	8e 01       	movw	r16, r28
    236e:	09 58       	subi	r16, 0x89	; 137
    2370:	1e 4f       	sbci	r17, 0xFE	; 254
    2372:	bc 01       	movw	r22, r24
    2374:	cd 01       	movw	r24, r26
    2376:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    237a:	dc 01       	movw	r26, r24
    237c:	cb 01       	movw	r24, r22
    237e:	f8 01       	movw	r30, r16
    2380:	91 83       	std	Z+1, r25	; 0x01
    2382:	80 83       	st	Z, r24
    2384:	24 c0       	rjmp	.+72     	; 0x23ce <__stack+0x12cf>
    2386:	ce 01       	movw	r24, r28
    2388:	87 58       	subi	r24, 0x87	; 135
    238a:	9e 4f       	sbci	r25, 0xFE	; 254
    238c:	20 e9       	ldi	r18, 0x90	; 144
    238e:	31 e0       	ldi	r19, 0x01	; 1
    2390:	fc 01       	movw	r30, r24
    2392:	31 83       	std	Z+1, r19	; 0x01
    2394:	20 83       	st	Z, r18
    2396:	ce 01       	movw	r24, r28
    2398:	87 58       	subi	r24, 0x87	; 135
    239a:	9e 4f       	sbci	r25, 0xFE	; 254
    239c:	fc 01       	movw	r30, r24
    239e:	80 81       	ld	r24, Z
    23a0:	91 81       	ldd	r25, Z+1	; 0x01
    23a2:	01 97       	sbiw	r24, 0x01	; 1
    23a4:	f1 f7       	brne	.-4      	; 0x23a2 <__stack+0x12a3>
    23a6:	9e 01       	movw	r18, r28
    23a8:	27 58       	subi	r18, 0x87	; 135
    23aa:	3e 4f       	sbci	r19, 0xFE	; 254
    23ac:	f9 01       	movw	r30, r18
    23ae:	91 83       	std	Z+1, r25	; 0x01
    23b0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23b2:	ce 01       	movw	r24, r28
    23b4:	89 58       	subi	r24, 0x89	; 137
    23b6:	9e 4f       	sbci	r25, 0xFE	; 254
    23b8:	9e 01       	movw	r18, r28
    23ba:	29 58       	subi	r18, 0x89	; 137
    23bc:	3e 4f       	sbci	r19, 0xFE	; 254
    23be:	f9 01       	movw	r30, r18
    23c0:	20 81       	ld	r18, Z
    23c2:	31 81       	ldd	r19, Z+1	; 0x01
    23c4:	21 50       	subi	r18, 0x01	; 1
    23c6:	31 09       	sbc	r19, r1
    23c8:	fc 01       	movw	r30, r24
    23ca:	31 83       	std	Z+1, r19	; 0x01
    23cc:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23ce:	ce 01       	movw	r24, r28
    23d0:	89 58       	subi	r24, 0x89	; 137
    23d2:	9e 4f       	sbci	r25, 0xFE	; 254
    23d4:	fc 01       	movw	r30, r24
    23d6:	80 81       	ld	r24, Z
    23d8:	91 81       	ldd	r25, Z+1	; 0x01
    23da:	89 2b       	or	r24, r25
    23dc:	a1 f6       	brne	.-88     	; 0x2386 <__stack+0x1287>
    23de:	2c c0       	rjmp	.+88     	; 0x2438 <__stack+0x1339>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23e0:	8e 01       	movw	r16, r28
    23e2:	09 58       	subi	r16, 0x89	; 137
    23e4:	1e 4f       	sbci	r17, 0xFE	; 254
    23e6:	ce 01       	movw	r24, r28
    23e8:	8d 58       	subi	r24, 0x8D	; 141
    23ea:	9e 4f       	sbci	r25, 0xFE	; 254
    23ec:	fc 01       	movw	r30, r24
    23ee:	60 81       	ld	r22, Z
    23f0:	71 81       	ldd	r23, Z+1	; 0x01
    23f2:	82 81       	ldd	r24, Z+2	; 0x02
    23f4:	93 81       	ldd	r25, Z+3	; 0x03
    23f6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    23fa:	dc 01       	movw	r26, r24
    23fc:	cb 01       	movw	r24, r22
    23fe:	f8 01       	movw	r30, r16
    2400:	91 83       	std	Z+1, r25	; 0x01
    2402:	80 83       	st	Z, r24
    2404:	ce 01       	movw	r24, r28
    2406:	85 58       	subi	r24, 0x85	; 133
    2408:	9e 4f       	sbci	r25, 0xFE	; 254
    240a:	9e 01       	movw	r18, r28
    240c:	29 58       	subi	r18, 0x89	; 137
    240e:	3e 4f       	sbci	r19, 0xFE	; 254
    2410:	f9 01       	movw	r30, r18
    2412:	20 81       	ld	r18, Z
    2414:	31 81       	ldd	r19, Z+1	; 0x01
    2416:	fc 01       	movw	r30, r24
    2418:	31 83       	std	Z+1, r19	; 0x01
    241a:	20 83       	st	Z, r18
    241c:	ce 01       	movw	r24, r28
    241e:	85 58       	subi	r24, 0x85	; 133
    2420:	9e 4f       	sbci	r25, 0xFE	; 254
    2422:	fc 01       	movw	r30, r24
    2424:	80 81       	ld	r24, Z
    2426:	91 81       	ldd	r25, Z+1	; 0x01
    2428:	01 97       	sbiw	r24, 0x01	; 1
    242a:	f1 f7       	brne	.-4      	; 0x2428 <__stack+0x1329>
    242c:	9e 01       	movw	r18, r28
    242e:	25 58       	subi	r18, 0x85	; 133
    2430:	3e 4f       	sbci	r19, 0xFE	; 254
    2432:	f9 01       	movw	r30, r18
    2434:	91 83       	std	Z+1, r25	; 0x01
    2436:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F760 T50\n");
    2438:	80 e7       	ldi	r24, 0x70	; 112
    243a:	92 e0       	ldi	r25, 0x02	; 2
    243c:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    2440:	9e 01       	movw	r18, r28
    2442:	23 5b       	subi	r18, 0xB3	; 179
    2444:	3f 4f       	sbci	r19, 0xFF	; 255
    2446:	80 e0       	ldi	r24, 0x00	; 0
    2448:	90 e0       	ldi	r25, 0x00	; 0
    244a:	af ea       	ldi	r26, 0xAF	; 175
    244c:	b3 e4       	ldi	r27, 0x43	; 67
    244e:	f9 01       	movw	r30, r18
    2450:	80 83       	st	Z, r24
    2452:	91 83       	std	Z+1, r25	; 0x01
    2454:	a2 83       	std	Z+2, r26	; 0x02
    2456:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2458:	8e 01       	movw	r16, r28
    245a:	07 59       	subi	r16, 0x97	; 151
    245c:	1e 4f       	sbci	r17, 0xFE	; 254
    245e:	ce 01       	movw	r24, r28
    2460:	83 5b       	subi	r24, 0xB3	; 179
    2462:	9f 4f       	sbci	r25, 0xFF	; 255
    2464:	20 e0       	ldi	r18, 0x00	; 0
    2466:	30 e0       	ldi	r19, 0x00	; 0
    2468:	4a e7       	ldi	r20, 0x7A	; 122
    246a:	55 e4       	ldi	r21, 0x45	; 69
    246c:	fc 01       	movw	r30, r24
    246e:	60 81       	ld	r22, Z
    2470:	71 81       	ldd	r23, Z+1	; 0x01
    2472:	82 81       	ldd	r24, Z+2	; 0x02
    2474:	93 81       	ldd	r25, Z+3	; 0x03
    2476:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    247a:	dc 01       	movw	r26, r24
    247c:	cb 01       	movw	r24, r22
    247e:	f8 01       	movw	r30, r16
    2480:	80 83       	st	Z, r24
    2482:	91 83       	std	Z+1, r25	; 0x01
    2484:	a2 83       	std	Z+2, r26	; 0x02
    2486:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2488:	ce 01       	movw	r24, r28
    248a:	87 59       	subi	r24, 0x97	; 151
    248c:	9e 4f       	sbci	r25, 0xFE	; 254
    248e:	20 e0       	ldi	r18, 0x00	; 0
    2490:	30 e0       	ldi	r19, 0x00	; 0
    2492:	40 e8       	ldi	r20, 0x80	; 128
    2494:	5f e3       	ldi	r21, 0x3F	; 63
    2496:	fc 01       	movw	r30, r24
    2498:	60 81       	ld	r22, Z
    249a:	71 81       	ldd	r23, Z+1	; 0x01
    249c:	82 81       	ldd	r24, Z+2	; 0x02
    249e:	93 81       	ldd	r25, Z+3	; 0x03
    24a0:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    24a4:	88 23       	and	r24, r24
    24a6:	4c f4       	brge	.+18     	; 0x24ba <__stack+0x13bb>
		__ticks = 1;
    24a8:	ce 01       	movw	r24, r28
    24aa:	83 59       	subi	r24, 0x93	; 147
    24ac:	9e 4f       	sbci	r25, 0xFE	; 254
    24ae:	21 e0       	ldi	r18, 0x01	; 1
    24b0:	30 e0       	ldi	r19, 0x00	; 0
    24b2:	fc 01       	movw	r30, r24
    24b4:	31 83       	std	Z+1, r19	; 0x01
    24b6:	20 83       	st	Z, r18
    24b8:	6d c0       	rjmp	.+218    	; 0x2594 <__stack+0x1495>
	else if (__tmp > 65535)
    24ba:	ce 01       	movw	r24, r28
    24bc:	87 59       	subi	r24, 0x97	; 151
    24be:	9e 4f       	sbci	r25, 0xFE	; 254
    24c0:	20 e0       	ldi	r18, 0x00	; 0
    24c2:	3f ef       	ldi	r19, 0xFF	; 255
    24c4:	4f e7       	ldi	r20, 0x7F	; 127
    24c6:	57 e4       	ldi	r21, 0x47	; 71
    24c8:	fc 01       	movw	r30, r24
    24ca:	60 81       	ld	r22, Z
    24cc:	71 81       	ldd	r23, Z+1	; 0x01
    24ce:	82 81       	ldd	r24, Z+2	; 0x02
    24d0:	93 81       	ldd	r25, Z+3	; 0x03
    24d2:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    24d6:	18 16       	cp	r1, r24
    24d8:	0c f0       	brlt	.+2      	; 0x24dc <__stack+0x13dd>
    24da:	4a c0       	rjmp	.+148    	; 0x2570 <__stack+0x1471>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24dc:	ce 01       	movw	r24, r28
    24de:	83 5b       	subi	r24, 0xB3	; 179
    24e0:	9f 4f       	sbci	r25, 0xFF	; 255
    24e2:	20 e0       	ldi	r18, 0x00	; 0
    24e4:	30 e0       	ldi	r19, 0x00	; 0
    24e6:	40 e2       	ldi	r20, 0x20	; 32
    24e8:	51 e4       	ldi	r21, 0x41	; 65
    24ea:	fc 01       	movw	r30, r24
    24ec:	60 81       	ld	r22, Z
    24ee:	71 81       	ldd	r23, Z+1	; 0x01
    24f0:	82 81       	ldd	r24, Z+2	; 0x02
    24f2:	93 81       	ldd	r25, Z+3	; 0x03
    24f4:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    24f8:	dc 01       	movw	r26, r24
    24fa:	cb 01       	movw	r24, r22
    24fc:	8e 01       	movw	r16, r28
    24fe:	03 59       	subi	r16, 0x93	; 147
    2500:	1e 4f       	sbci	r17, 0xFE	; 254
    2502:	bc 01       	movw	r22, r24
    2504:	cd 01       	movw	r24, r26
    2506:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    250a:	dc 01       	movw	r26, r24
    250c:	cb 01       	movw	r24, r22
    250e:	f8 01       	movw	r30, r16
    2510:	91 83       	std	Z+1, r25	; 0x01
    2512:	80 83       	st	Z, r24
    2514:	24 c0       	rjmp	.+72     	; 0x255e <__stack+0x145f>
    2516:	ce 01       	movw	r24, r28
    2518:	81 59       	subi	r24, 0x91	; 145
    251a:	9e 4f       	sbci	r25, 0xFE	; 254
    251c:	20 e9       	ldi	r18, 0x90	; 144
    251e:	31 e0       	ldi	r19, 0x01	; 1
    2520:	fc 01       	movw	r30, r24
    2522:	31 83       	std	Z+1, r19	; 0x01
    2524:	20 83       	st	Z, r18
    2526:	ce 01       	movw	r24, r28
    2528:	81 59       	subi	r24, 0x91	; 145
    252a:	9e 4f       	sbci	r25, 0xFE	; 254
    252c:	fc 01       	movw	r30, r24
    252e:	80 81       	ld	r24, Z
    2530:	91 81       	ldd	r25, Z+1	; 0x01
    2532:	01 97       	sbiw	r24, 0x01	; 1
    2534:	f1 f7       	brne	.-4      	; 0x2532 <__stack+0x1433>
    2536:	9e 01       	movw	r18, r28
    2538:	21 59       	subi	r18, 0x91	; 145
    253a:	3e 4f       	sbci	r19, 0xFE	; 254
    253c:	f9 01       	movw	r30, r18
    253e:	91 83       	std	Z+1, r25	; 0x01
    2540:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2542:	ce 01       	movw	r24, r28
    2544:	83 59       	subi	r24, 0x93	; 147
    2546:	9e 4f       	sbci	r25, 0xFE	; 254
    2548:	9e 01       	movw	r18, r28
    254a:	23 59       	subi	r18, 0x93	; 147
    254c:	3e 4f       	sbci	r19, 0xFE	; 254
    254e:	f9 01       	movw	r30, r18
    2550:	20 81       	ld	r18, Z
    2552:	31 81       	ldd	r19, Z+1	; 0x01
    2554:	21 50       	subi	r18, 0x01	; 1
    2556:	31 09       	sbc	r19, r1
    2558:	fc 01       	movw	r30, r24
    255a:	31 83       	std	Z+1, r19	; 0x01
    255c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    255e:	ce 01       	movw	r24, r28
    2560:	83 59       	subi	r24, 0x93	; 147
    2562:	9e 4f       	sbci	r25, 0xFE	; 254
    2564:	fc 01       	movw	r30, r24
    2566:	80 81       	ld	r24, Z
    2568:	91 81       	ldd	r25, Z+1	; 0x01
    256a:	89 2b       	or	r24, r25
    256c:	a1 f6       	brne	.-88     	; 0x2516 <__stack+0x1417>
    256e:	2c c0       	rjmp	.+88     	; 0x25c8 <__stack+0x14c9>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2570:	8e 01       	movw	r16, r28
    2572:	03 59       	subi	r16, 0x93	; 147
    2574:	1e 4f       	sbci	r17, 0xFE	; 254
    2576:	ce 01       	movw	r24, r28
    2578:	87 59       	subi	r24, 0x97	; 151
    257a:	9e 4f       	sbci	r25, 0xFE	; 254
    257c:	fc 01       	movw	r30, r24
    257e:	60 81       	ld	r22, Z
    2580:	71 81       	ldd	r23, Z+1	; 0x01
    2582:	82 81       	ldd	r24, Z+2	; 0x02
    2584:	93 81       	ldd	r25, Z+3	; 0x03
    2586:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    258a:	dc 01       	movw	r26, r24
    258c:	cb 01       	movw	r24, r22
    258e:	f8 01       	movw	r30, r16
    2590:	91 83       	std	Z+1, r25	; 0x01
    2592:	80 83       	st	Z, r24
    2594:	ce 01       	movw	r24, r28
    2596:	8f 58       	subi	r24, 0x8F	; 143
    2598:	9e 4f       	sbci	r25, 0xFE	; 254
    259a:	9e 01       	movw	r18, r28
    259c:	23 59       	subi	r18, 0x93	; 147
    259e:	3e 4f       	sbci	r19, 0xFE	; 254
    25a0:	f9 01       	movw	r30, r18
    25a2:	20 81       	ld	r18, Z
    25a4:	31 81       	ldd	r19, Z+1	; 0x01
    25a6:	fc 01       	movw	r30, r24
    25a8:	31 83       	std	Z+1, r19	; 0x01
    25aa:	20 83       	st	Z, r18
    25ac:	ce 01       	movw	r24, r28
    25ae:	8f 58       	subi	r24, 0x8F	; 143
    25b0:	9e 4f       	sbci	r25, 0xFE	; 254
    25b2:	fc 01       	movw	r30, r24
    25b4:	80 81       	ld	r24, Z
    25b6:	91 81       	ldd	r25, Z+1	; 0x01
    25b8:	01 97       	sbiw	r24, 0x01	; 1
    25ba:	f1 f7       	brne	.-4      	; 0x25b8 <__stack+0x14b9>
    25bc:	9e 01       	movw	r18, r28
    25be:	2f 58       	subi	r18, 0x8F	; 143
    25c0:	3e 4f       	sbci	r19, 0xFE	; 254
    25c2:	f9 01       	movw	r30, r18
    25c4:	91 83       	std	Z+1, r25	; 0x01
    25c6:	80 83       	st	Z, r24
	_delay_ms(350);
	to_uARM("M2210 F660 T80\n");
    25c8:	80 e6       	ldi	r24, 0x60	; 96
    25ca:	92 e0       	ldi	r25, 0x02	; 2
    25cc:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    25d0:	9e 01       	movw	r18, r28
    25d2:	2f 5a       	subi	r18, 0xAF	; 175
    25d4:	3f 4f       	sbci	r19, 0xFF	; 255
    25d6:	80 e0       	ldi	r24, 0x00	; 0
    25d8:	90 e0       	ldi	r25, 0x00	; 0
    25da:	a6 e9       	ldi	r26, 0x96	; 150
    25dc:	b3 e4       	ldi	r27, 0x43	; 67
    25de:	f9 01       	movw	r30, r18
    25e0:	80 83       	st	Z, r24
    25e2:	91 83       	std	Z+1, r25	; 0x01
    25e4:	a2 83       	std	Z+2, r26	; 0x02
    25e6:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    25e8:	8e 01       	movw	r16, r28
    25ea:	01 5a       	subi	r16, 0xA1	; 161
    25ec:	1e 4f       	sbci	r17, 0xFE	; 254
    25ee:	ce 01       	movw	r24, r28
    25f0:	8f 5a       	subi	r24, 0xAF	; 175
    25f2:	9f 4f       	sbci	r25, 0xFF	; 255
    25f4:	20 e0       	ldi	r18, 0x00	; 0
    25f6:	30 e0       	ldi	r19, 0x00	; 0
    25f8:	4a e7       	ldi	r20, 0x7A	; 122
    25fa:	55 e4       	ldi	r21, 0x45	; 69
    25fc:	fc 01       	movw	r30, r24
    25fe:	60 81       	ld	r22, Z
    2600:	71 81       	ldd	r23, Z+1	; 0x01
    2602:	82 81       	ldd	r24, Z+2	; 0x02
    2604:	93 81       	ldd	r25, Z+3	; 0x03
    2606:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    260a:	dc 01       	movw	r26, r24
    260c:	cb 01       	movw	r24, r22
    260e:	f8 01       	movw	r30, r16
    2610:	80 83       	st	Z, r24
    2612:	91 83       	std	Z+1, r25	; 0x01
    2614:	a2 83       	std	Z+2, r26	; 0x02
    2616:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2618:	ce 01       	movw	r24, r28
    261a:	81 5a       	subi	r24, 0xA1	; 161
    261c:	9e 4f       	sbci	r25, 0xFE	; 254
    261e:	20 e0       	ldi	r18, 0x00	; 0
    2620:	30 e0       	ldi	r19, 0x00	; 0
    2622:	40 e8       	ldi	r20, 0x80	; 128
    2624:	5f e3       	ldi	r21, 0x3F	; 63
    2626:	fc 01       	movw	r30, r24
    2628:	60 81       	ld	r22, Z
    262a:	71 81       	ldd	r23, Z+1	; 0x01
    262c:	82 81       	ldd	r24, Z+2	; 0x02
    262e:	93 81       	ldd	r25, Z+3	; 0x03
    2630:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    2634:	88 23       	and	r24, r24
    2636:	4c f4       	brge	.+18     	; 0x264a <__stack+0x154b>
		__ticks = 1;
    2638:	ce 01       	movw	r24, r28
    263a:	8d 59       	subi	r24, 0x9D	; 157
    263c:	9e 4f       	sbci	r25, 0xFE	; 254
    263e:	21 e0       	ldi	r18, 0x01	; 1
    2640:	30 e0       	ldi	r19, 0x00	; 0
    2642:	fc 01       	movw	r30, r24
    2644:	31 83       	std	Z+1, r19	; 0x01
    2646:	20 83       	st	Z, r18
    2648:	6d c0       	rjmp	.+218    	; 0x2724 <__stack+0x1625>
	else if (__tmp > 65535)
    264a:	ce 01       	movw	r24, r28
    264c:	81 5a       	subi	r24, 0xA1	; 161
    264e:	9e 4f       	sbci	r25, 0xFE	; 254
    2650:	20 e0       	ldi	r18, 0x00	; 0
    2652:	3f ef       	ldi	r19, 0xFF	; 255
    2654:	4f e7       	ldi	r20, 0x7F	; 127
    2656:	57 e4       	ldi	r21, 0x47	; 71
    2658:	fc 01       	movw	r30, r24
    265a:	60 81       	ld	r22, Z
    265c:	71 81       	ldd	r23, Z+1	; 0x01
    265e:	82 81       	ldd	r24, Z+2	; 0x02
    2660:	93 81       	ldd	r25, Z+3	; 0x03
    2662:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    2666:	18 16       	cp	r1, r24
    2668:	0c f0       	brlt	.+2      	; 0x266c <__stack+0x156d>
    266a:	4a c0       	rjmp	.+148    	; 0x2700 <__stack+0x1601>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    266c:	ce 01       	movw	r24, r28
    266e:	8f 5a       	subi	r24, 0xAF	; 175
    2670:	9f 4f       	sbci	r25, 0xFF	; 255
    2672:	20 e0       	ldi	r18, 0x00	; 0
    2674:	30 e0       	ldi	r19, 0x00	; 0
    2676:	40 e2       	ldi	r20, 0x20	; 32
    2678:	51 e4       	ldi	r21, 0x41	; 65
    267a:	fc 01       	movw	r30, r24
    267c:	60 81       	ld	r22, Z
    267e:	71 81       	ldd	r23, Z+1	; 0x01
    2680:	82 81       	ldd	r24, Z+2	; 0x02
    2682:	93 81       	ldd	r25, Z+3	; 0x03
    2684:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    2688:	dc 01       	movw	r26, r24
    268a:	cb 01       	movw	r24, r22
    268c:	8e 01       	movw	r16, r28
    268e:	0d 59       	subi	r16, 0x9D	; 157
    2690:	1e 4f       	sbci	r17, 0xFE	; 254
    2692:	bc 01       	movw	r22, r24
    2694:	cd 01       	movw	r24, r26
    2696:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    269a:	dc 01       	movw	r26, r24
    269c:	cb 01       	movw	r24, r22
    269e:	f8 01       	movw	r30, r16
    26a0:	91 83       	std	Z+1, r25	; 0x01
    26a2:	80 83       	st	Z, r24
    26a4:	24 c0       	rjmp	.+72     	; 0x26ee <__stack+0x15ef>
    26a6:	ce 01       	movw	r24, r28
    26a8:	8b 59       	subi	r24, 0x9B	; 155
    26aa:	9e 4f       	sbci	r25, 0xFE	; 254
    26ac:	20 e9       	ldi	r18, 0x90	; 144
    26ae:	31 e0       	ldi	r19, 0x01	; 1
    26b0:	fc 01       	movw	r30, r24
    26b2:	31 83       	std	Z+1, r19	; 0x01
    26b4:	20 83       	st	Z, r18
    26b6:	ce 01       	movw	r24, r28
    26b8:	8b 59       	subi	r24, 0x9B	; 155
    26ba:	9e 4f       	sbci	r25, 0xFE	; 254
    26bc:	fc 01       	movw	r30, r24
    26be:	80 81       	ld	r24, Z
    26c0:	91 81       	ldd	r25, Z+1	; 0x01
    26c2:	01 97       	sbiw	r24, 0x01	; 1
    26c4:	f1 f7       	brne	.-4      	; 0x26c2 <__stack+0x15c3>
    26c6:	9e 01       	movw	r18, r28
    26c8:	2b 59       	subi	r18, 0x9B	; 155
    26ca:	3e 4f       	sbci	r19, 0xFE	; 254
    26cc:	f9 01       	movw	r30, r18
    26ce:	91 83       	std	Z+1, r25	; 0x01
    26d0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26d2:	ce 01       	movw	r24, r28
    26d4:	8d 59       	subi	r24, 0x9D	; 157
    26d6:	9e 4f       	sbci	r25, 0xFE	; 254
    26d8:	9e 01       	movw	r18, r28
    26da:	2d 59       	subi	r18, 0x9D	; 157
    26dc:	3e 4f       	sbci	r19, 0xFE	; 254
    26de:	f9 01       	movw	r30, r18
    26e0:	20 81       	ld	r18, Z
    26e2:	31 81       	ldd	r19, Z+1	; 0x01
    26e4:	21 50       	subi	r18, 0x01	; 1
    26e6:	31 09       	sbc	r19, r1
    26e8:	fc 01       	movw	r30, r24
    26ea:	31 83       	std	Z+1, r19	; 0x01
    26ec:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26ee:	ce 01       	movw	r24, r28
    26f0:	8d 59       	subi	r24, 0x9D	; 157
    26f2:	9e 4f       	sbci	r25, 0xFE	; 254
    26f4:	fc 01       	movw	r30, r24
    26f6:	80 81       	ld	r24, Z
    26f8:	91 81       	ldd	r25, Z+1	; 0x01
    26fa:	89 2b       	or	r24, r25
    26fc:	a1 f6       	brne	.-88     	; 0x26a6 <__stack+0x15a7>
    26fe:	2c c0       	rjmp	.+88     	; 0x2758 <__stack+0x1659>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2700:	8e 01       	movw	r16, r28
    2702:	0d 59       	subi	r16, 0x9D	; 157
    2704:	1e 4f       	sbci	r17, 0xFE	; 254
    2706:	ce 01       	movw	r24, r28
    2708:	81 5a       	subi	r24, 0xA1	; 161
    270a:	9e 4f       	sbci	r25, 0xFE	; 254
    270c:	fc 01       	movw	r30, r24
    270e:	60 81       	ld	r22, Z
    2710:	71 81       	ldd	r23, Z+1	; 0x01
    2712:	82 81       	ldd	r24, Z+2	; 0x02
    2714:	93 81       	ldd	r25, Z+3	; 0x03
    2716:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    271a:	dc 01       	movw	r26, r24
    271c:	cb 01       	movw	r24, r22
    271e:	f8 01       	movw	r30, r16
    2720:	91 83       	std	Z+1, r25	; 0x01
    2722:	80 83       	st	Z, r24
    2724:	ce 01       	movw	r24, r28
    2726:	89 59       	subi	r24, 0x99	; 153
    2728:	9e 4f       	sbci	r25, 0xFE	; 254
    272a:	9e 01       	movw	r18, r28
    272c:	2d 59       	subi	r18, 0x9D	; 157
    272e:	3e 4f       	sbci	r19, 0xFE	; 254
    2730:	f9 01       	movw	r30, r18
    2732:	20 81       	ld	r18, Z
    2734:	31 81       	ldd	r19, Z+1	; 0x01
    2736:	fc 01       	movw	r30, r24
    2738:	31 83       	std	Z+1, r19	; 0x01
    273a:	20 83       	st	Z, r18
    273c:	ce 01       	movw	r24, r28
    273e:	89 59       	subi	r24, 0x99	; 153
    2740:	9e 4f       	sbci	r25, 0xFE	; 254
    2742:	fc 01       	movw	r30, r24
    2744:	80 81       	ld	r24, Z
    2746:	91 81       	ldd	r25, Z+1	; 0x01
    2748:	01 97       	sbiw	r24, 0x01	; 1
    274a:	f1 f7       	brne	.-4      	; 0x2748 <__stack+0x1649>
    274c:	9e 01       	movw	r18, r28
    274e:	29 59       	subi	r18, 0x99	; 153
    2750:	3e 4f       	sbci	r19, 0xFE	; 254
    2752:	f9 01       	movw	r30, r18
    2754:	91 83       	std	Z+1, r25	; 0x01
    2756:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F520 T80\n");
    2758:	80 ea       	ldi	r24, 0xA0	; 160
    275a:	92 e0       	ldi	r25, 0x02	; 2
    275c:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    2760:	9e 01       	movw	r18, r28
    2762:	2b 5a       	subi	r18, 0xAB	; 171
    2764:	3f 4f       	sbci	r19, 0xFF	; 255
    2766:	80 e0       	ldi	r24, 0x00	; 0
    2768:	90 e0       	ldi	r25, 0x00	; 0
    276a:	a6 e1       	ldi	r26, 0x16	; 22
    276c:	b3 e4       	ldi	r27, 0x43	; 67
    276e:	f9 01       	movw	r30, r18
    2770:	80 83       	st	Z, r24
    2772:	91 83       	std	Z+1, r25	; 0x01
    2774:	a2 83       	std	Z+2, r26	; 0x02
    2776:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2778:	8e 01       	movw	r16, r28
    277a:	0b 5a       	subi	r16, 0xAB	; 171
    277c:	1e 4f       	sbci	r17, 0xFE	; 254
    277e:	ce 01       	movw	r24, r28
    2780:	8b 5a       	subi	r24, 0xAB	; 171
    2782:	9f 4f       	sbci	r25, 0xFF	; 255
    2784:	20 e0       	ldi	r18, 0x00	; 0
    2786:	30 e0       	ldi	r19, 0x00	; 0
    2788:	4a e7       	ldi	r20, 0x7A	; 122
    278a:	55 e4       	ldi	r21, 0x45	; 69
    278c:	fc 01       	movw	r30, r24
    278e:	60 81       	ld	r22, Z
    2790:	71 81       	ldd	r23, Z+1	; 0x01
    2792:	82 81       	ldd	r24, Z+2	; 0x02
    2794:	93 81       	ldd	r25, Z+3	; 0x03
    2796:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    279a:	dc 01       	movw	r26, r24
    279c:	cb 01       	movw	r24, r22
    279e:	f8 01       	movw	r30, r16
    27a0:	80 83       	st	Z, r24
    27a2:	91 83       	std	Z+1, r25	; 0x01
    27a4:	a2 83       	std	Z+2, r26	; 0x02
    27a6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    27a8:	ce 01       	movw	r24, r28
    27aa:	8b 5a       	subi	r24, 0xAB	; 171
    27ac:	9e 4f       	sbci	r25, 0xFE	; 254
    27ae:	20 e0       	ldi	r18, 0x00	; 0
    27b0:	30 e0       	ldi	r19, 0x00	; 0
    27b2:	40 e8       	ldi	r20, 0x80	; 128
    27b4:	5f e3       	ldi	r21, 0x3F	; 63
    27b6:	fc 01       	movw	r30, r24
    27b8:	60 81       	ld	r22, Z
    27ba:	71 81       	ldd	r23, Z+1	; 0x01
    27bc:	82 81       	ldd	r24, Z+2	; 0x02
    27be:	93 81       	ldd	r25, Z+3	; 0x03
    27c0:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    27c4:	88 23       	and	r24, r24
    27c6:	4c f4       	brge	.+18     	; 0x27da <__stack+0x16db>
		__ticks = 1;
    27c8:	ce 01       	movw	r24, r28
    27ca:	87 5a       	subi	r24, 0xA7	; 167
    27cc:	9e 4f       	sbci	r25, 0xFE	; 254
    27ce:	21 e0       	ldi	r18, 0x01	; 1
    27d0:	30 e0       	ldi	r19, 0x00	; 0
    27d2:	fc 01       	movw	r30, r24
    27d4:	31 83       	std	Z+1, r19	; 0x01
    27d6:	20 83       	st	Z, r18
    27d8:	6d c0       	rjmp	.+218    	; 0x28b4 <__stack+0x17b5>
	else if (__tmp > 65535)
    27da:	ce 01       	movw	r24, r28
    27dc:	8b 5a       	subi	r24, 0xAB	; 171
    27de:	9e 4f       	sbci	r25, 0xFE	; 254
    27e0:	20 e0       	ldi	r18, 0x00	; 0
    27e2:	3f ef       	ldi	r19, 0xFF	; 255
    27e4:	4f e7       	ldi	r20, 0x7F	; 127
    27e6:	57 e4       	ldi	r21, 0x47	; 71
    27e8:	fc 01       	movw	r30, r24
    27ea:	60 81       	ld	r22, Z
    27ec:	71 81       	ldd	r23, Z+1	; 0x01
    27ee:	82 81       	ldd	r24, Z+2	; 0x02
    27f0:	93 81       	ldd	r25, Z+3	; 0x03
    27f2:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    27f6:	18 16       	cp	r1, r24
    27f8:	0c f0       	brlt	.+2      	; 0x27fc <__stack+0x16fd>
    27fa:	4a c0       	rjmp	.+148    	; 0x2890 <__stack+0x1791>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27fc:	ce 01       	movw	r24, r28
    27fe:	8b 5a       	subi	r24, 0xAB	; 171
    2800:	9f 4f       	sbci	r25, 0xFF	; 255
    2802:	20 e0       	ldi	r18, 0x00	; 0
    2804:	30 e0       	ldi	r19, 0x00	; 0
    2806:	40 e2       	ldi	r20, 0x20	; 32
    2808:	51 e4       	ldi	r21, 0x41	; 65
    280a:	fc 01       	movw	r30, r24
    280c:	60 81       	ld	r22, Z
    280e:	71 81       	ldd	r23, Z+1	; 0x01
    2810:	82 81       	ldd	r24, Z+2	; 0x02
    2812:	93 81       	ldd	r25, Z+3	; 0x03
    2814:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    2818:	dc 01       	movw	r26, r24
    281a:	cb 01       	movw	r24, r22
    281c:	8e 01       	movw	r16, r28
    281e:	07 5a       	subi	r16, 0xA7	; 167
    2820:	1e 4f       	sbci	r17, 0xFE	; 254
    2822:	bc 01       	movw	r22, r24
    2824:	cd 01       	movw	r24, r26
    2826:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    282a:	dc 01       	movw	r26, r24
    282c:	cb 01       	movw	r24, r22
    282e:	f8 01       	movw	r30, r16
    2830:	91 83       	std	Z+1, r25	; 0x01
    2832:	80 83       	st	Z, r24
    2834:	24 c0       	rjmp	.+72     	; 0x287e <__stack+0x177f>
    2836:	ce 01       	movw	r24, r28
    2838:	85 5a       	subi	r24, 0xA5	; 165
    283a:	9e 4f       	sbci	r25, 0xFE	; 254
    283c:	20 e9       	ldi	r18, 0x90	; 144
    283e:	31 e0       	ldi	r19, 0x01	; 1
    2840:	fc 01       	movw	r30, r24
    2842:	31 83       	std	Z+1, r19	; 0x01
    2844:	20 83       	st	Z, r18
    2846:	ce 01       	movw	r24, r28
    2848:	85 5a       	subi	r24, 0xA5	; 165
    284a:	9e 4f       	sbci	r25, 0xFE	; 254
    284c:	fc 01       	movw	r30, r24
    284e:	80 81       	ld	r24, Z
    2850:	91 81       	ldd	r25, Z+1	; 0x01
    2852:	01 97       	sbiw	r24, 0x01	; 1
    2854:	f1 f7       	brne	.-4      	; 0x2852 <__stack+0x1753>
    2856:	9e 01       	movw	r18, r28
    2858:	25 5a       	subi	r18, 0xA5	; 165
    285a:	3e 4f       	sbci	r19, 0xFE	; 254
    285c:	f9 01       	movw	r30, r18
    285e:	91 83       	std	Z+1, r25	; 0x01
    2860:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2862:	ce 01       	movw	r24, r28
    2864:	87 5a       	subi	r24, 0xA7	; 167
    2866:	9e 4f       	sbci	r25, 0xFE	; 254
    2868:	9e 01       	movw	r18, r28
    286a:	27 5a       	subi	r18, 0xA7	; 167
    286c:	3e 4f       	sbci	r19, 0xFE	; 254
    286e:	f9 01       	movw	r30, r18
    2870:	20 81       	ld	r18, Z
    2872:	31 81       	ldd	r19, Z+1	; 0x01
    2874:	21 50       	subi	r18, 0x01	; 1
    2876:	31 09       	sbc	r19, r1
    2878:	fc 01       	movw	r30, r24
    287a:	31 83       	std	Z+1, r19	; 0x01
    287c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    287e:	ce 01       	movw	r24, r28
    2880:	87 5a       	subi	r24, 0xA7	; 167
    2882:	9e 4f       	sbci	r25, 0xFE	; 254
    2884:	fc 01       	movw	r30, r24
    2886:	80 81       	ld	r24, Z
    2888:	91 81       	ldd	r25, Z+1	; 0x01
    288a:	89 2b       	or	r24, r25
    288c:	a1 f6       	brne	.-88     	; 0x2836 <__stack+0x1737>
    288e:	2c c0       	rjmp	.+88     	; 0x28e8 <__stack+0x17e9>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2890:	8e 01       	movw	r16, r28
    2892:	07 5a       	subi	r16, 0xA7	; 167
    2894:	1e 4f       	sbci	r17, 0xFE	; 254
    2896:	ce 01       	movw	r24, r28
    2898:	8b 5a       	subi	r24, 0xAB	; 171
    289a:	9e 4f       	sbci	r25, 0xFE	; 254
    289c:	fc 01       	movw	r30, r24
    289e:	60 81       	ld	r22, Z
    28a0:	71 81       	ldd	r23, Z+1	; 0x01
    28a2:	82 81       	ldd	r24, Z+2	; 0x02
    28a4:	93 81       	ldd	r25, Z+3	; 0x03
    28a6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    28aa:	dc 01       	movw	r26, r24
    28ac:	cb 01       	movw	r24, r22
    28ae:	f8 01       	movw	r30, r16
    28b0:	91 83       	std	Z+1, r25	; 0x01
    28b2:	80 83       	st	Z, r24
    28b4:	ce 01       	movw	r24, r28
    28b6:	83 5a       	subi	r24, 0xA3	; 163
    28b8:	9e 4f       	sbci	r25, 0xFE	; 254
    28ba:	9e 01       	movw	r18, r28
    28bc:	27 5a       	subi	r18, 0xA7	; 167
    28be:	3e 4f       	sbci	r19, 0xFE	; 254
    28c0:	f9 01       	movw	r30, r18
    28c2:	20 81       	ld	r18, Z
    28c4:	31 81       	ldd	r19, Z+1	; 0x01
    28c6:	fc 01       	movw	r30, r24
    28c8:	31 83       	std	Z+1, r19	; 0x01
    28ca:	20 83       	st	Z, r18
    28cc:	ce 01       	movw	r24, r28
    28ce:	83 5a       	subi	r24, 0xA3	; 163
    28d0:	9e 4f       	sbci	r25, 0xFE	; 254
    28d2:	fc 01       	movw	r30, r24
    28d4:	80 81       	ld	r24, Z
    28d6:	91 81       	ldd	r25, Z+1	; 0x01
    28d8:	01 97       	sbiw	r24, 0x01	; 1
    28da:	f1 f7       	brne	.-4      	; 0x28d8 <__stack+0x17d9>
    28dc:	9e 01       	movw	r18, r28
    28de:	23 5a       	subi	r18, 0xA3	; 163
    28e0:	3e 4f       	sbci	r19, 0xFE	; 254
    28e2:	f9 01       	movw	r30, r18
    28e4:	91 83       	std	Z+1, r25	; 0x01
    28e6:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F580 T80\n");
    28e8:	80 eb       	ldi	r24, 0xB0	; 176
    28ea:	92 e0       	ldi	r25, 0x02	; 2
    28ec:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    28f0:	9e 01       	movw	r18, r28
    28f2:	27 5a       	subi	r18, 0xA7	; 167
    28f4:	3f 4f       	sbci	r19, 0xFF	; 255
    28f6:	80 e0       	ldi	r24, 0x00	; 0
    28f8:	90 e0       	ldi	r25, 0x00	; 0
    28fa:	a6 e1       	ldi	r26, 0x16	; 22
    28fc:	b3 e4       	ldi	r27, 0x43	; 67
    28fe:	f9 01       	movw	r30, r18
    2900:	80 83       	st	Z, r24
    2902:	91 83       	std	Z+1, r25	; 0x01
    2904:	a2 83       	std	Z+2, r26	; 0x02
    2906:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2908:	8e 01       	movw	r16, r28
    290a:	05 5b       	subi	r16, 0xB5	; 181
    290c:	1e 4f       	sbci	r17, 0xFE	; 254
    290e:	ce 01       	movw	r24, r28
    2910:	87 5a       	subi	r24, 0xA7	; 167
    2912:	9f 4f       	sbci	r25, 0xFF	; 255
    2914:	20 e0       	ldi	r18, 0x00	; 0
    2916:	30 e0       	ldi	r19, 0x00	; 0
    2918:	4a e7       	ldi	r20, 0x7A	; 122
    291a:	55 e4       	ldi	r21, 0x45	; 69
    291c:	fc 01       	movw	r30, r24
    291e:	60 81       	ld	r22, Z
    2920:	71 81       	ldd	r23, Z+1	; 0x01
    2922:	82 81       	ldd	r24, Z+2	; 0x02
    2924:	93 81       	ldd	r25, Z+3	; 0x03
    2926:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    292a:	dc 01       	movw	r26, r24
    292c:	cb 01       	movw	r24, r22
    292e:	f8 01       	movw	r30, r16
    2930:	80 83       	st	Z, r24
    2932:	91 83       	std	Z+1, r25	; 0x01
    2934:	a2 83       	std	Z+2, r26	; 0x02
    2936:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2938:	ce 01       	movw	r24, r28
    293a:	85 5b       	subi	r24, 0xB5	; 181
    293c:	9e 4f       	sbci	r25, 0xFE	; 254
    293e:	20 e0       	ldi	r18, 0x00	; 0
    2940:	30 e0       	ldi	r19, 0x00	; 0
    2942:	40 e8       	ldi	r20, 0x80	; 128
    2944:	5f e3       	ldi	r21, 0x3F	; 63
    2946:	fc 01       	movw	r30, r24
    2948:	60 81       	ld	r22, Z
    294a:	71 81       	ldd	r23, Z+1	; 0x01
    294c:	82 81       	ldd	r24, Z+2	; 0x02
    294e:	93 81       	ldd	r25, Z+3	; 0x03
    2950:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    2954:	88 23       	and	r24, r24
    2956:	4c f4       	brge	.+18     	; 0x296a <__stack+0x186b>
		__ticks = 1;
    2958:	ce 01       	movw	r24, r28
    295a:	81 5b       	subi	r24, 0xB1	; 177
    295c:	9e 4f       	sbci	r25, 0xFE	; 254
    295e:	21 e0       	ldi	r18, 0x01	; 1
    2960:	30 e0       	ldi	r19, 0x00	; 0
    2962:	fc 01       	movw	r30, r24
    2964:	31 83       	std	Z+1, r19	; 0x01
    2966:	20 83       	st	Z, r18
    2968:	6d c0       	rjmp	.+218    	; 0x2a44 <__stack+0x1945>
	else if (__tmp > 65535)
    296a:	ce 01       	movw	r24, r28
    296c:	85 5b       	subi	r24, 0xB5	; 181
    296e:	9e 4f       	sbci	r25, 0xFE	; 254
    2970:	20 e0       	ldi	r18, 0x00	; 0
    2972:	3f ef       	ldi	r19, 0xFF	; 255
    2974:	4f e7       	ldi	r20, 0x7F	; 127
    2976:	57 e4       	ldi	r21, 0x47	; 71
    2978:	fc 01       	movw	r30, r24
    297a:	60 81       	ld	r22, Z
    297c:	71 81       	ldd	r23, Z+1	; 0x01
    297e:	82 81       	ldd	r24, Z+2	; 0x02
    2980:	93 81       	ldd	r25, Z+3	; 0x03
    2982:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    2986:	18 16       	cp	r1, r24
    2988:	0c f0       	brlt	.+2      	; 0x298c <__stack+0x188d>
    298a:	4a c0       	rjmp	.+148    	; 0x2a20 <__stack+0x1921>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    298c:	ce 01       	movw	r24, r28
    298e:	87 5a       	subi	r24, 0xA7	; 167
    2990:	9f 4f       	sbci	r25, 0xFF	; 255
    2992:	20 e0       	ldi	r18, 0x00	; 0
    2994:	30 e0       	ldi	r19, 0x00	; 0
    2996:	40 e2       	ldi	r20, 0x20	; 32
    2998:	51 e4       	ldi	r21, 0x41	; 65
    299a:	fc 01       	movw	r30, r24
    299c:	60 81       	ld	r22, Z
    299e:	71 81       	ldd	r23, Z+1	; 0x01
    29a0:	82 81       	ldd	r24, Z+2	; 0x02
    29a2:	93 81       	ldd	r25, Z+3	; 0x03
    29a4:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    29a8:	dc 01       	movw	r26, r24
    29aa:	cb 01       	movw	r24, r22
    29ac:	8e 01       	movw	r16, r28
    29ae:	01 5b       	subi	r16, 0xB1	; 177
    29b0:	1e 4f       	sbci	r17, 0xFE	; 254
    29b2:	bc 01       	movw	r22, r24
    29b4:	cd 01       	movw	r24, r26
    29b6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    29ba:	dc 01       	movw	r26, r24
    29bc:	cb 01       	movw	r24, r22
    29be:	f8 01       	movw	r30, r16
    29c0:	91 83       	std	Z+1, r25	; 0x01
    29c2:	80 83       	st	Z, r24
    29c4:	24 c0       	rjmp	.+72     	; 0x2a0e <__stack+0x190f>
    29c6:	ce 01       	movw	r24, r28
    29c8:	8f 5a       	subi	r24, 0xAF	; 175
    29ca:	9e 4f       	sbci	r25, 0xFE	; 254
    29cc:	20 e9       	ldi	r18, 0x90	; 144
    29ce:	31 e0       	ldi	r19, 0x01	; 1
    29d0:	fc 01       	movw	r30, r24
    29d2:	31 83       	std	Z+1, r19	; 0x01
    29d4:	20 83       	st	Z, r18
    29d6:	ce 01       	movw	r24, r28
    29d8:	8f 5a       	subi	r24, 0xAF	; 175
    29da:	9e 4f       	sbci	r25, 0xFE	; 254
    29dc:	fc 01       	movw	r30, r24
    29de:	80 81       	ld	r24, Z
    29e0:	91 81       	ldd	r25, Z+1	; 0x01
    29e2:	01 97       	sbiw	r24, 0x01	; 1
    29e4:	f1 f7       	brne	.-4      	; 0x29e2 <__stack+0x18e3>
    29e6:	9e 01       	movw	r18, r28
    29e8:	2f 5a       	subi	r18, 0xAF	; 175
    29ea:	3e 4f       	sbci	r19, 0xFE	; 254
    29ec:	f9 01       	movw	r30, r18
    29ee:	91 83       	std	Z+1, r25	; 0x01
    29f0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29f2:	ce 01       	movw	r24, r28
    29f4:	81 5b       	subi	r24, 0xB1	; 177
    29f6:	9e 4f       	sbci	r25, 0xFE	; 254
    29f8:	9e 01       	movw	r18, r28
    29fa:	21 5b       	subi	r18, 0xB1	; 177
    29fc:	3e 4f       	sbci	r19, 0xFE	; 254
    29fe:	f9 01       	movw	r30, r18
    2a00:	20 81       	ld	r18, Z
    2a02:	31 81       	ldd	r19, Z+1	; 0x01
    2a04:	21 50       	subi	r18, 0x01	; 1
    2a06:	31 09       	sbc	r19, r1
    2a08:	fc 01       	movw	r30, r24
    2a0a:	31 83       	std	Z+1, r19	; 0x01
    2a0c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a0e:	ce 01       	movw	r24, r28
    2a10:	81 5b       	subi	r24, 0xB1	; 177
    2a12:	9e 4f       	sbci	r25, 0xFE	; 254
    2a14:	fc 01       	movw	r30, r24
    2a16:	80 81       	ld	r24, Z
    2a18:	91 81       	ldd	r25, Z+1	; 0x01
    2a1a:	89 2b       	or	r24, r25
    2a1c:	a1 f6       	brne	.-88     	; 0x29c6 <__stack+0x18c7>
    2a1e:	2c c0       	rjmp	.+88     	; 0x2a78 <__stack+0x1979>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a20:	8e 01       	movw	r16, r28
    2a22:	01 5b       	subi	r16, 0xB1	; 177
    2a24:	1e 4f       	sbci	r17, 0xFE	; 254
    2a26:	ce 01       	movw	r24, r28
    2a28:	85 5b       	subi	r24, 0xB5	; 181
    2a2a:	9e 4f       	sbci	r25, 0xFE	; 254
    2a2c:	fc 01       	movw	r30, r24
    2a2e:	60 81       	ld	r22, Z
    2a30:	71 81       	ldd	r23, Z+1	; 0x01
    2a32:	82 81       	ldd	r24, Z+2	; 0x02
    2a34:	93 81       	ldd	r25, Z+3	; 0x03
    2a36:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    2a3a:	dc 01       	movw	r26, r24
    2a3c:	cb 01       	movw	r24, r22
    2a3e:	f8 01       	movw	r30, r16
    2a40:	91 83       	std	Z+1, r25	; 0x01
    2a42:	80 83       	st	Z, r24
    2a44:	ce 01       	movw	r24, r28
    2a46:	8d 5a       	subi	r24, 0xAD	; 173
    2a48:	9e 4f       	sbci	r25, 0xFE	; 254
    2a4a:	9e 01       	movw	r18, r28
    2a4c:	21 5b       	subi	r18, 0xB1	; 177
    2a4e:	3e 4f       	sbci	r19, 0xFE	; 254
    2a50:	f9 01       	movw	r30, r18
    2a52:	20 81       	ld	r18, Z
    2a54:	31 81       	ldd	r19, Z+1	; 0x01
    2a56:	fc 01       	movw	r30, r24
    2a58:	31 83       	std	Z+1, r19	; 0x01
    2a5a:	20 83       	st	Z, r18
    2a5c:	ce 01       	movw	r24, r28
    2a5e:	8d 5a       	subi	r24, 0xAD	; 173
    2a60:	9e 4f       	sbci	r25, 0xFE	; 254
    2a62:	fc 01       	movw	r30, r24
    2a64:	80 81       	ld	r24, Z
    2a66:	91 81       	ldd	r25, Z+1	; 0x01
    2a68:	01 97       	sbiw	r24, 0x01	; 1
    2a6a:	f1 f7       	brne	.-4      	; 0x2a68 <__stack+0x1969>
    2a6c:	9e 01       	movw	r18, r28
    2a6e:	2d 5a       	subi	r18, 0xAD	; 173
    2a70:	3e 4f       	sbci	r19, 0xFE	; 254
    2a72:	f9 01       	movw	r30, r18
    2a74:	91 83       	std	Z+1, r25	; 0x01
    2a76:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F480 T80\n");
    2a78:	8e e2       	ldi	r24, 0x2E	; 46
    2a7a:	92 e0       	ldi	r25, 0x02	; 2
    2a7c:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    2a80:	9e 01       	movw	r18, r28
    2a82:	23 5a       	subi	r18, 0xA3	; 163
    2a84:	3f 4f       	sbci	r19, 0xFF	; 255
    2a86:	80 e0       	ldi	r24, 0x00	; 0
    2a88:	90 e0       	ldi	r25, 0x00	; 0
    2a8a:	aa ef       	ldi	r26, 0xFA	; 250
    2a8c:	b3 e4       	ldi	r27, 0x43	; 67
    2a8e:	f9 01       	movw	r30, r18
    2a90:	80 83       	st	Z, r24
    2a92:	91 83       	std	Z+1, r25	; 0x01
    2a94:	a2 83       	std	Z+2, r26	; 0x02
    2a96:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2a98:	8e 01       	movw	r16, r28
    2a9a:	0f 5b       	subi	r16, 0xBF	; 191
    2a9c:	1e 4f       	sbci	r17, 0xFE	; 254
    2a9e:	ce 01       	movw	r24, r28
    2aa0:	83 5a       	subi	r24, 0xA3	; 163
    2aa2:	9f 4f       	sbci	r25, 0xFF	; 255
    2aa4:	20 e0       	ldi	r18, 0x00	; 0
    2aa6:	30 e0       	ldi	r19, 0x00	; 0
    2aa8:	4a e7       	ldi	r20, 0x7A	; 122
    2aaa:	55 e4       	ldi	r21, 0x45	; 69
    2aac:	fc 01       	movw	r30, r24
    2aae:	60 81       	ld	r22, Z
    2ab0:	71 81       	ldd	r23, Z+1	; 0x01
    2ab2:	82 81       	ldd	r24, Z+2	; 0x02
    2ab4:	93 81       	ldd	r25, Z+3	; 0x03
    2ab6:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    2aba:	dc 01       	movw	r26, r24
    2abc:	cb 01       	movw	r24, r22
    2abe:	f8 01       	movw	r30, r16
    2ac0:	80 83       	st	Z, r24
    2ac2:	91 83       	std	Z+1, r25	; 0x01
    2ac4:	a2 83       	std	Z+2, r26	; 0x02
    2ac6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2ac8:	ce 01       	movw	r24, r28
    2aca:	8f 5b       	subi	r24, 0xBF	; 191
    2acc:	9e 4f       	sbci	r25, 0xFE	; 254
    2ace:	20 e0       	ldi	r18, 0x00	; 0
    2ad0:	30 e0       	ldi	r19, 0x00	; 0
    2ad2:	40 e8       	ldi	r20, 0x80	; 128
    2ad4:	5f e3       	ldi	r21, 0x3F	; 63
    2ad6:	fc 01       	movw	r30, r24
    2ad8:	60 81       	ld	r22, Z
    2ada:	71 81       	ldd	r23, Z+1	; 0x01
    2adc:	82 81       	ldd	r24, Z+2	; 0x02
    2ade:	93 81       	ldd	r25, Z+3	; 0x03
    2ae0:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    2ae4:	88 23       	and	r24, r24
    2ae6:	4c f4       	brge	.+18     	; 0x2afa <__stack+0x19fb>
		__ticks = 1;
    2ae8:	ce 01       	movw	r24, r28
    2aea:	8b 5b       	subi	r24, 0xBB	; 187
    2aec:	9e 4f       	sbci	r25, 0xFE	; 254
    2aee:	21 e0       	ldi	r18, 0x01	; 1
    2af0:	30 e0       	ldi	r19, 0x00	; 0
    2af2:	fc 01       	movw	r30, r24
    2af4:	31 83       	std	Z+1, r19	; 0x01
    2af6:	20 83       	st	Z, r18
    2af8:	6d c0       	rjmp	.+218    	; 0x2bd4 <__stack+0x1ad5>
	else if (__tmp > 65535)
    2afa:	ce 01       	movw	r24, r28
    2afc:	8f 5b       	subi	r24, 0xBF	; 191
    2afe:	9e 4f       	sbci	r25, 0xFE	; 254
    2b00:	20 e0       	ldi	r18, 0x00	; 0
    2b02:	3f ef       	ldi	r19, 0xFF	; 255
    2b04:	4f e7       	ldi	r20, 0x7F	; 127
    2b06:	57 e4       	ldi	r21, 0x47	; 71
    2b08:	fc 01       	movw	r30, r24
    2b0a:	60 81       	ld	r22, Z
    2b0c:	71 81       	ldd	r23, Z+1	; 0x01
    2b0e:	82 81       	ldd	r24, Z+2	; 0x02
    2b10:	93 81       	ldd	r25, Z+3	; 0x03
    2b12:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    2b16:	18 16       	cp	r1, r24
    2b18:	0c f0       	brlt	.+2      	; 0x2b1c <__stack+0x1a1d>
    2b1a:	4a c0       	rjmp	.+148    	; 0x2bb0 <__stack+0x1ab1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b1c:	ce 01       	movw	r24, r28
    2b1e:	83 5a       	subi	r24, 0xA3	; 163
    2b20:	9f 4f       	sbci	r25, 0xFF	; 255
    2b22:	20 e0       	ldi	r18, 0x00	; 0
    2b24:	30 e0       	ldi	r19, 0x00	; 0
    2b26:	40 e2       	ldi	r20, 0x20	; 32
    2b28:	51 e4       	ldi	r21, 0x41	; 65
    2b2a:	fc 01       	movw	r30, r24
    2b2c:	60 81       	ld	r22, Z
    2b2e:	71 81       	ldd	r23, Z+1	; 0x01
    2b30:	82 81       	ldd	r24, Z+2	; 0x02
    2b32:	93 81       	ldd	r25, Z+3	; 0x03
    2b34:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    2b38:	dc 01       	movw	r26, r24
    2b3a:	cb 01       	movw	r24, r22
    2b3c:	8e 01       	movw	r16, r28
    2b3e:	0b 5b       	subi	r16, 0xBB	; 187
    2b40:	1e 4f       	sbci	r17, 0xFE	; 254
    2b42:	bc 01       	movw	r22, r24
    2b44:	cd 01       	movw	r24, r26
    2b46:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    2b4a:	dc 01       	movw	r26, r24
    2b4c:	cb 01       	movw	r24, r22
    2b4e:	f8 01       	movw	r30, r16
    2b50:	91 83       	std	Z+1, r25	; 0x01
    2b52:	80 83       	st	Z, r24
    2b54:	24 c0       	rjmp	.+72     	; 0x2b9e <__stack+0x1a9f>
    2b56:	ce 01       	movw	r24, r28
    2b58:	89 5b       	subi	r24, 0xB9	; 185
    2b5a:	9e 4f       	sbci	r25, 0xFE	; 254
    2b5c:	20 e9       	ldi	r18, 0x90	; 144
    2b5e:	31 e0       	ldi	r19, 0x01	; 1
    2b60:	fc 01       	movw	r30, r24
    2b62:	31 83       	std	Z+1, r19	; 0x01
    2b64:	20 83       	st	Z, r18
    2b66:	ce 01       	movw	r24, r28
    2b68:	89 5b       	subi	r24, 0xB9	; 185
    2b6a:	9e 4f       	sbci	r25, 0xFE	; 254
    2b6c:	fc 01       	movw	r30, r24
    2b6e:	80 81       	ld	r24, Z
    2b70:	91 81       	ldd	r25, Z+1	; 0x01
    2b72:	01 97       	sbiw	r24, 0x01	; 1
    2b74:	f1 f7       	brne	.-4      	; 0x2b72 <__stack+0x1a73>
    2b76:	9e 01       	movw	r18, r28
    2b78:	29 5b       	subi	r18, 0xB9	; 185
    2b7a:	3e 4f       	sbci	r19, 0xFE	; 254
    2b7c:	f9 01       	movw	r30, r18
    2b7e:	91 83       	std	Z+1, r25	; 0x01
    2b80:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b82:	ce 01       	movw	r24, r28
    2b84:	8b 5b       	subi	r24, 0xBB	; 187
    2b86:	9e 4f       	sbci	r25, 0xFE	; 254
    2b88:	9e 01       	movw	r18, r28
    2b8a:	2b 5b       	subi	r18, 0xBB	; 187
    2b8c:	3e 4f       	sbci	r19, 0xFE	; 254
    2b8e:	f9 01       	movw	r30, r18
    2b90:	20 81       	ld	r18, Z
    2b92:	31 81       	ldd	r19, Z+1	; 0x01
    2b94:	21 50       	subi	r18, 0x01	; 1
    2b96:	31 09       	sbc	r19, r1
    2b98:	fc 01       	movw	r30, r24
    2b9a:	31 83       	std	Z+1, r19	; 0x01
    2b9c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b9e:	ce 01       	movw	r24, r28
    2ba0:	8b 5b       	subi	r24, 0xBB	; 187
    2ba2:	9e 4f       	sbci	r25, 0xFE	; 254
    2ba4:	fc 01       	movw	r30, r24
    2ba6:	80 81       	ld	r24, Z
    2ba8:	91 81       	ldd	r25, Z+1	; 0x01
    2baa:	89 2b       	or	r24, r25
    2bac:	a1 f6       	brne	.-88     	; 0x2b56 <__stack+0x1a57>
    2bae:	2c c0       	rjmp	.+88     	; 0x2c08 <__stack+0x1b09>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bb0:	8e 01       	movw	r16, r28
    2bb2:	0b 5b       	subi	r16, 0xBB	; 187
    2bb4:	1e 4f       	sbci	r17, 0xFE	; 254
    2bb6:	ce 01       	movw	r24, r28
    2bb8:	8f 5b       	subi	r24, 0xBF	; 191
    2bba:	9e 4f       	sbci	r25, 0xFE	; 254
    2bbc:	fc 01       	movw	r30, r24
    2bbe:	60 81       	ld	r22, Z
    2bc0:	71 81       	ldd	r23, Z+1	; 0x01
    2bc2:	82 81       	ldd	r24, Z+2	; 0x02
    2bc4:	93 81       	ldd	r25, Z+3	; 0x03
    2bc6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    2bca:	dc 01       	movw	r26, r24
    2bcc:	cb 01       	movw	r24, r22
    2bce:	f8 01       	movw	r30, r16
    2bd0:	91 83       	std	Z+1, r25	; 0x01
    2bd2:	80 83       	st	Z, r24
    2bd4:	ce 01       	movw	r24, r28
    2bd6:	87 5b       	subi	r24, 0xB7	; 183
    2bd8:	9e 4f       	sbci	r25, 0xFE	; 254
    2bda:	9e 01       	movw	r18, r28
    2bdc:	2b 5b       	subi	r18, 0xBB	; 187
    2bde:	3e 4f       	sbci	r19, 0xFE	; 254
    2be0:	f9 01       	movw	r30, r18
    2be2:	20 81       	ld	r18, Z
    2be4:	31 81       	ldd	r19, Z+1	; 0x01
    2be6:	fc 01       	movw	r30, r24
    2be8:	31 83       	std	Z+1, r19	; 0x01
    2bea:	20 83       	st	Z, r18
    2bec:	ce 01       	movw	r24, r28
    2bee:	87 5b       	subi	r24, 0xB7	; 183
    2bf0:	9e 4f       	sbci	r25, 0xFE	; 254
    2bf2:	fc 01       	movw	r30, r24
    2bf4:	80 81       	ld	r24, Z
    2bf6:	91 81       	ldd	r25, Z+1	; 0x01
    2bf8:	01 97       	sbiw	r24, 0x01	; 1
    2bfa:	f1 f7       	brne	.-4      	; 0x2bf8 <__stack+0x1af9>
    2bfc:	9e 01       	movw	r18, r28
    2bfe:	27 5b       	subi	r18, 0xB7	; 183
    2c00:	3e 4f       	sbci	r19, 0xFE	; 254
    2c02:	f9 01       	movw	r30, r18
    2c04:	91 83       	std	Z+1, r25	; 0x01
    2c06:	80 83       	st	Z, r24
	_delay_ms(500);
		
	to_uARM("M2210 F510 T100\n");
    2c08:	89 ed       	ldi	r24, 0xD9	; 217
    2c0a:	91 e0       	ldi	r25, 0x01	; 1
    2c0c:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    2c10:	9e 01       	movw	r18, r28
    2c12:	2f 59       	subi	r18, 0x9F	; 159
    2c14:	3f 4f       	sbci	r19, 0xFF	; 255
    2c16:	80 e0       	ldi	r24, 0x00	; 0
    2c18:	90 e0       	ldi	r25, 0x00	; 0
    2c1a:	a1 ee       	ldi	r26, 0xE1	; 225
    2c1c:	b3 e4       	ldi	r27, 0x43	; 67
    2c1e:	f9 01       	movw	r30, r18
    2c20:	80 83       	st	Z, r24
    2c22:	91 83       	std	Z+1, r25	; 0x01
    2c24:	a2 83       	std	Z+2, r26	; 0x02
    2c26:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2c28:	8e 01       	movw	r16, r28
    2c2a:	09 5c       	subi	r16, 0xC9	; 201
    2c2c:	1e 4f       	sbci	r17, 0xFE	; 254
    2c2e:	ce 01       	movw	r24, r28
    2c30:	8f 59       	subi	r24, 0x9F	; 159
    2c32:	9f 4f       	sbci	r25, 0xFF	; 255
    2c34:	20 e0       	ldi	r18, 0x00	; 0
    2c36:	30 e0       	ldi	r19, 0x00	; 0
    2c38:	4a e7       	ldi	r20, 0x7A	; 122
    2c3a:	55 e4       	ldi	r21, 0x45	; 69
    2c3c:	fc 01       	movw	r30, r24
    2c3e:	60 81       	ld	r22, Z
    2c40:	71 81       	ldd	r23, Z+1	; 0x01
    2c42:	82 81       	ldd	r24, Z+2	; 0x02
    2c44:	93 81       	ldd	r25, Z+3	; 0x03
    2c46:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    2c4a:	dc 01       	movw	r26, r24
    2c4c:	cb 01       	movw	r24, r22
    2c4e:	f8 01       	movw	r30, r16
    2c50:	80 83       	st	Z, r24
    2c52:	91 83       	std	Z+1, r25	; 0x01
    2c54:	a2 83       	std	Z+2, r26	; 0x02
    2c56:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2c58:	ce 01       	movw	r24, r28
    2c5a:	89 5c       	subi	r24, 0xC9	; 201
    2c5c:	9e 4f       	sbci	r25, 0xFE	; 254
    2c5e:	20 e0       	ldi	r18, 0x00	; 0
    2c60:	30 e0       	ldi	r19, 0x00	; 0
    2c62:	40 e8       	ldi	r20, 0x80	; 128
    2c64:	5f e3       	ldi	r21, 0x3F	; 63
    2c66:	fc 01       	movw	r30, r24
    2c68:	60 81       	ld	r22, Z
    2c6a:	71 81       	ldd	r23, Z+1	; 0x01
    2c6c:	82 81       	ldd	r24, Z+2	; 0x02
    2c6e:	93 81       	ldd	r25, Z+3	; 0x03
    2c70:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    2c74:	88 23       	and	r24, r24
    2c76:	4c f4       	brge	.+18     	; 0x2c8a <__stack+0x1b8b>
		__ticks = 1;
    2c78:	ce 01       	movw	r24, r28
    2c7a:	85 5c       	subi	r24, 0xC5	; 197
    2c7c:	9e 4f       	sbci	r25, 0xFE	; 254
    2c7e:	21 e0       	ldi	r18, 0x01	; 1
    2c80:	30 e0       	ldi	r19, 0x00	; 0
    2c82:	fc 01       	movw	r30, r24
    2c84:	31 83       	std	Z+1, r19	; 0x01
    2c86:	20 83       	st	Z, r18
    2c88:	6d c0       	rjmp	.+218    	; 0x2d64 <__stack+0x1c65>
	else if (__tmp > 65535)
    2c8a:	ce 01       	movw	r24, r28
    2c8c:	89 5c       	subi	r24, 0xC9	; 201
    2c8e:	9e 4f       	sbci	r25, 0xFE	; 254
    2c90:	20 e0       	ldi	r18, 0x00	; 0
    2c92:	3f ef       	ldi	r19, 0xFF	; 255
    2c94:	4f e7       	ldi	r20, 0x7F	; 127
    2c96:	57 e4       	ldi	r21, 0x47	; 71
    2c98:	fc 01       	movw	r30, r24
    2c9a:	60 81       	ld	r22, Z
    2c9c:	71 81       	ldd	r23, Z+1	; 0x01
    2c9e:	82 81       	ldd	r24, Z+2	; 0x02
    2ca0:	93 81       	ldd	r25, Z+3	; 0x03
    2ca2:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    2ca6:	18 16       	cp	r1, r24
    2ca8:	0c f0       	brlt	.+2      	; 0x2cac <__stack+0x1bad>
    2caa:	4a c0       	rjmp	.+148    	; 0x2d40 <__stack+0x1c41>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2cac:	ce 01       	movw	r24, r28
    2cae:	8f 59       	subi	r24, 0x9F	; 159
    2cb0:	9f 4f       	sbci	r25, 0xFF	; 255
    2cb2:	20 e0       	ldi	r18, 0x00	; 0
    2cb4:	30 e0       	ldi	r19, 0x00	; 0
    2cb6:	40 e2       	ldi	r20, 0x20	; 32
    2cb8:	51 e4       	ldi	r21, 0x41	; 65
    2cba:	fc 01       	movw	r30, r24
    2cbc:	60 81       	ld	r22, Z
    2cbe:	71 81       	ldd	r23, Z+1	; 0x01
    2cc0:	82 81       	ldd	r24, Z+2	; 0x02
    2cc2:	93 81       	ldd	r25, Z+3	; 0x03
    2cc4:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    2cc8:	dc 01       	movw	r26, r24
    2cca:	cb 01       	movw	r24, r22
    2ccc:	8e 01       	movw	r16, r28
    2cce:	05 5c       	subi	r16, 0xC5	; 197
    2cd0:	1e 4f       	sbci	r17, 0xFE	; 254
    2cd2:	bc 01       	movw	r22, r24
    2cd4:	cd 01       	movw	r24, r26
    2cd6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    2cda:	dc 01       	movw	r26, r24
    2cdc:	cb 01       	movw	r24, r22
    2cde:	f8 01       	movw	r30, r16
    2ce0:	91 83       	std	Z+1, r25	; 0x01
    2ce2:	80 83       	st	Z, r24
    2ce4:	24 c0       	rjmp	.+72     	; 0x2d2e <__stack+0x1c2f>
    2ce6:	ce 01       	movw	r24, r28
    2ce8:	83 5c       	subi	r24, 0xC3	; 195
    2cea:	9e 4f       	sbci	r25, 0xFE	; 254
    2cec:	20 e9       	ldi	r18, 0x90	; 144
    2cee:	31 e0       	ldi	r19, 0x01	; 1
    2cf0:	fc 01       	movw	r30, r24
    2cf2:	31 83       	std	Z+1, r19	; 0x01
    2cf4:	20 83       	st	Z, r18
    2cf6:	ce 01       	movw	r24, r28
    2cf8:	83 5c       	subi	r24, 0xC3	; 195
    2cfa:	9e 4f       	sbci	r25, 0xFE	; 254
    2cfc:	fc 01       	movw	r30, r24
    2cfe:	80 81       	ld	r24, Z
    2d00:	91 81       	ldd	r25, Z+1	; 0x01
    2d02:	01 97       	sbiw	r24, 0x01	; 1
    2d04:	f1 f7       	brne	.-4      	; 0x2d02 <__stack+0x1c03>
    2d06:	9e 01       	movw	r18, r28
    2d08:	23 5c       	subi	r18, 0xC3	; 195
    2d0a:	3e 4f       	sbci	r19, 0xFE	; 254
    2d0c:	f9 01       	movw	r30, r18
    2d0e:	91 83       	std	Z+1, r25	; 0x01
    2d10:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d12:	ce 01       	movw	r24, r28
    2d14:	85 5c       	subi	r24, 0xC5	; 197
    2d16:	9e 4f       	sbci	r25, 0xFE	; 254
    2d18:	9e 01       	movw	r18, r28
    2d1a:	25 5c       	subi	r18, 0xC5	; 197
    2d1c:	3e 4f       	sbci	r19, 0xFE	; 254
    2d1e:	f9 01       	movw	r30, r18
    2d20:	20 81       	ld	r18, Z
    2d22:	31 81       	ldd	r19, Z+1	; 0x01
    2d24:	21 50       	subi	r18, 0x01	; 1
    2d26:	31 09       	sbc	r19, r1
    2d28:	fc 01       	movw	r30, r24
    2d2a:	31 83       	std	Z+1, r19	; 0x01
    2d2c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d2e:	ce 01       	movw	r24, r28
    2d30:	85 5c       	subi	r24, 0xC5	; 197
    2d32:	9e 4f       	sbci	r25, 0xFE	; 254
    2d34:	fc 01       	movw	r30, r24
    2d36:	80 81       	ld	r24, Z
    2d38:	91 81       	ldd	r25, Z+1	; 0x01
    2d3a:	89 2b       	or	r24, r25
    2d3c:	a1 f6       	brne	.-88     	; 0x2ce6 <__stack+0x1be7>
    2d3e:	2c c0       	rjmp	.+88     	; 0x2d98 <__stack+0x1c99>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d40:	8e 01       	movw	r16, r28
    2d42:	05 5c       	subi	r16, 0xC5	; 197
    2d44:	1e 4f       	sbci	r17, 0xFE	; 254
    2d46:	ce 01       	movw	r24, r28
    2d48:	89 5c       	subi	r24, 0xC9	; 201
    2d4a:	9e 4f       	sbci	r25, 0xFE	; 254
    2d4c:	fc 01       	movw	r30, r24
    2d4e:	60 81       	ld	r22, Z
    2d50:	71 81       	ldd	r23, Z+1	; 0x01
    2d52:	82 81       	ldd	r24, Z+2	; 0x02
    2d54:	93 81       	ldd	r25, Z+3	; 0x03
    2d56:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    2d5a:	dc 01       	movw	r26, r24
    2d5c:	cb 01       	movw	r24, r22
    2d5e:	f8 01       	movw	r30, r16
    2d60:	91 83       	std	Z+1, r25	; 0x01
    2d62:	80 83       	st	Z, r24
    2d64:	ce 01       	movw	r24, r28
    2d66:	81 5c       	subi	r24, 0xC1	; 193
    2d68:	9e 4f       	sbci	r25, 0xFE	; 254
    2d6a:	9e 01       	movw	r18, r28
    2d6c:	25 5c       	subi	r18, 0xC5	; 197
    2d6e:	3e 4f       	sbci	r19, 0xFE	; 254
    2d70:	f9 01       	movw	r30, r18
    2d72:	20 81       	ld	r18, Z
    2d74:	31 81       	ldd	r19, Z+1	; 0x01
    2d76:	fc 01       	movw	r30, r24
    2d78:	31 83       	std	Z+1, r19	; 0x01
    2d7a:	20 83       	st	Z, r18
    2d7c:	ce 01       	movw	r24, r28
    2d7e:	81 5c       	subi	r24, 0xC1	; 193
    2d80:	9e 4f       	sbci	r25, 0xFE	; 254
    2d82:	fc 01       	movw	r30, r24
    2d84:	80 81       	ld	r24, Z
    2d86:	91 81       	ldd	r25, Z+1	; 0x01
    2d88:	01 97       	sbiw	r24, 0x01	; 1
    2d8a:	f1 f7       	brne	.-4      	; 0x2d88 <__stack+0x1c89>
    2d8c:	9e 01       	movw	r18, r28
    2d8e:	21 5c       	subi	r18, 0xC1	; 193
    2d90:	3e 4f       	sbci	r19, 0xFE	; 254
    2d92:	f9 01       	movw	r30, r18
    2d94:	91 83       	std	Z+1, r25	; 0x01
    2d96:	80 83       	st	Z, r24
	_delay_ms(450);
	to_uARM("M2210 F380 T100\n");
    2d98:	8b ef       	ldi	r24, 0xFB	; 251
    2d9a:	91 e0       	ldi	r25, 0x01	; 1
    2d9c:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    2da0:	9e 01       	movw	r18, r28
    2da2:	2b 59       	subi	r18, 0x9B	; 155
    2da4:	3f 4f       	sbci	r19, 0xFF	; 255
    2da6:	80 e0       	ldi	r24, 0x00	; 0
    2da8:	90 e0       	ldi	r25, 0x00	; 0
    2daa:	a8 ec       	ldi	r26, 0xC8	; 200
    2dac:	b3 e4       	ldi	r27, 0x43	; 67
    2dae:	f9 01       	movw	r30, r18
    2db0:	80 83       	st	Z, r24
    2db2:	91 83       	std	Z+1, r25	; 0x01
    2db4:	a2 83       	std	Z+2, r26	; 0x02
    2db6:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2db8:	8e 01       	movw	r16, r28
    2dba:	03 5d       	subi	r16, 0xD3	; 211
    2dbc:	1e 4f       	sbci	r17, 0xFE	; 254
    2dbe:	ce 01       	movw	r24, r28
    2dc0:	8b 59       	subi	r24, 0x9B	; 155
    2dc2:	9f 4f       	sbci	r25, 0xFF	; 255
    2dc4:	20 e0       	ldi	r18, 0x00	; 0
    2dc6:	30 e0       	ldi	r19, 0x00	; 0
    2dc8:	4a e7       	ldi	r20, 0x7A	; 122
    2dca:	55 e4       	ldi	r21, 0x45	; 69
    2dcc:	fc 01       	movw	r30, r24
    2dce:	60 81       	ld	r22, Z
    2dd0:	71 81       	ldd	r23, Z+1	; 0x01
    2dd2:	82 81       	ldd	r24, Z+2	; 0x02
    2dd4:	93 81       	ldd	r25, Z+3	; 0x03
    2dd6:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    2dda:	dc 01       	movw	r26, r24
    2ddc:	cb 01       	movw	r24, r22
    2dde:	f8 01       	movw	r30, r16
    2de0:	80 83       	st	Z, r24
    2de2:	91 83       	std	Z+1, r25	; 0x01
    2de4:	a2 83       	std	Z+2, r26	; 0x02
    2de6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2de8:	ce 01       	movw	r24, r28
    2dea:	83 5d       	subi	r24, 0xD3	; 211
    2dec:	9e 4f       	sbci	r25, 0xFE	; 254
    2dee:	20 e0       	ldi	r18, 0x00	; 0
    2df0:	30 e0       	ldi	r19, 0x00	; 0
    2df2:	40 e8       	ldi	r20, 0x80	; 128
    2df4:	5f e3       	ldi	r21, 0x3F	; 63
    2df6:	fc 01       	movw	r30, r24
    2df8:	60 81       	ld	r22, Z
    2dfa:	71 81       	ldd	r23, Z+1	; 0x01
    2dfc:	82 81       	ldd	r24, Z+2	; 0x02
    2dfe:	93 81       	ldd	r25, Z+3	; 0x03
    2e00:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    2e04:	88 23       	and	r24, r24
    2e06:	4c f4       	brge	.+18     	; 0x2e1a <__stack+0x1d1b>
		__ticks = 1;
    2e08:	ce 01       	movw	r24, r28
    2e0a:	8f 5c       	subi	r24, 0xCF	; 207
    2e0c:	9e 4f       	sbci	r25, 0xFE	; 254
    2e0e:	21 e0       	ldi	r18, 0x01	; 1
    2e10:	30 e0       	ldi	r19, 0x00	; 0
    2e12:	fc 01       	movw	r30, r24
    2e14:	31 83       	std	Z+1, r19	; 0x01
    2e16:	20 83       	st	Z, r18
    2e18:	6d c0       	rjmp	.+218    	; 0x2ef4 <__stack+0x1df5>
	else if (__tmp > 65535)
    2e1a:	ce 01       	movw	r24, r28
    2e1c:	83 5d       	subi	r24, 0xD3	; 211
    2e1e:	9e 4f       	sbci	r25, 0xFE	; 254
    2e20:	20 e0       	ldi	r18, 0x00	; 0
    2e22:	3f ef       	ldi	r19, 0xFF	; 255
    2e24:	4f e7       	ldi	r20, 0x7F	; 127
    2e26:	57 e4       	ldi	r21, 0x47	; 71
    2e28:	fc 01       	movw	r30, r24
    2e2a:	60 81       	ld	r22, Z
    2e2c:	71 81       	ldd	r23, Z+1	; 0x01
    2e2e:	82 81       	ldd	r24, Z+2	; 0x02
    2e30:	93 81       	ldd	r25, Z+3	; 0x03
    2e32:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    2e36:	18 16       	cp	r1, r24
    2e38:	0c f0       	brlt	.+2      	; 0x2e3c <__stack+0x1d3d>
    2e3a:	4a c0       	rjmp	.+148    	; 0x2ed0 <__stack+0x1dd1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e3c:	ce 01       	movw	r24, r28
    2e3e:	8b 59       	subi	r24, 0x9B	; 155
    2e40:	9f 4f       	sbci	r25, 0xFF	; 255
    2e42:	20 e0       	ldi	r18, 0x00	; 0
    2e44:	30 e0       	ldi	r19, 0x00	; 0
    2e46:	40 e2       	ldi	r20, 0x20	; 32
    2e48:	51 e4       	ldi	r21, 0x41	; 65
    2e4a:	fc 01       	movw	r30, r24
    2e4c:	60 81       	ld	r22, Z
    2e4e:	71 81       	ldd	r23, Z+1	; 0x01
    2e50:	82 81       	ldd	r24, Z+2	; 0x02
    2e52:	93 81       	ldd	r25, Z+3	; 0x03
    2e54:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    2e58:	dc 01       	movw	r26, r24
    2e5a:	cb 01       	movw	r24, r22
    2e5c:	8e 01       	movw	r16, r28
    2e5e:	0f 5c       	subi	r16, 0xCF	; 207
    2e60:	1e 4f       	sbci	r17, 0xFE	; 254
    2e62:	bc 01       	movw	r22, r24
    2e64:	cd 01       	movw	r24, r26
    2e66:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    2e6a:	dc 01       	movw	r26, r24
    2e6c:	cb 01       	movw	r24, r22
    2e6e:	f8 01       	movw	r30, r16
    2e70:	91 83       	std	Z+1, r25	; 0x01
    2e72:	80 83       	st	Z, r24
    2e74:	24 c0       	rjmp	.+72     	; 0x2ebe <__stack+0x1dbf>
    2e76:	ce 01       	movw	r24, r28
    2e78:	8d 5c       	subi	r24, 0xCD	; 205
    2e7a:	9e 4f       	sbci	r25, 0xFE	; 254
    2e7c:	20 e9       	ldi	r18, 0x90	; 144
    2e7e:	31 e0       	ldi	r19, 0x01	; 1
    2e80:	fc 01       	movw	r30, r24
    2e82:	31 83       	std	Z+1, r19	; 0x01
    2e84:	20 83       	st	Z, r18
    2e86:	ce 01       	movw	r24, r28
    2e88:	8d 5c       	subi	r24, 0xCD	; 205
    2e8a:	9e 4f       	sbci	r25, 0xFE	; 254
    2e8c:	fc 01       	movw	r30, r24
    2e8e:	80 81       	ld	r24, Z
    2e90:	91 81       	ldd	r25, Z+1	; 0x01
    2e92:	01 97       	sbiw	r24, 0x01	; 1
    2e94:	f1 f7       	brne	.-4      	; 0x2e92 <__stack+0x1d93>
    2e96:	9e 01       	movw	r18, r28
    2e98:	2d 5c       	subi	r18, 0xCD	; 205
    2e9a:	3e 4f       	sbci	r19, 0xFE	; 254
    2e9c:	f9 01       	movw	r30, r18
    2e9e:	91 83       	std	Z+1, r25	; 0x01
    2ea0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ea2:	ce 01       	movw	r24, r28
    2ea4:	8f 5c       	subi	r24, 0xCF	; 207
    2ea6:	9e 4f       	sbci	r25, 0xFE	; 254
    2ea8:	9e 01       	movw	r18, r28
    2eaa:	2f 5c       	subi	r18, 0xCF	; 207
    2eac:	3e 4f       	sbci	r19, 0xFE	; 254
    2eae:	f9 01       	movw	r30, r18
    2eb0:	20 81       	ld	r18, Z
    2eb2:	31 81       	ldd	r19, Z+1	; 0x01
    2eb4:	21 50       	subi	r18, 0x01	; 1
    2eb6:	31 09       	sbc	r19, r1
    2eb8:	fc 01       	movw	r30, r24
    2eba:	31 83       	std	Z+1, r19	; 0x01
    2ebc:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ebe:	ce 01       	movw	r24, r28
    2ec0:	8f 5c       	subi	r24, 0xCF	; 207
    2ec2:	9e 4f       	sbci	r25, 0xFE	; 254
    2ec4:	fc 01       	movw	r30, r24
    2ec6:	80 81       	ld	r24, Z
    2ec8:	91 81       	ldd	r25, Z+1	; 0x01
    2eca:	89 2b       	or	r24, r25
    2ecc:	a1 f6       	brne	.-88     	; 0x2e76 <__stack+0x1d77>
    2ece:	2c c0       	rjmp	.+88     	; 0x2f28 <__stack+0x1e29>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ed0:	8e 01       	movw	r16, r28
    2ed2:	0f 5c       	subi	r16, 0xCF	; 207
    2ed4:	1e 4f       	sbci	r17, 0xFE	; 254
    2ed6:	ce 01       	movw	r24, r28
    2ed8:	83 5d       	subi	r24, 0xD3	; 211
    2eda:	9e 4f       	sbci	r25, 0xFE	; 254
    2edc:	fc 01       	movw	r30, r24
    2ede:	60 81       	ld	r22, Z
    2ee0:	71 81       	ldd	r23, Z+1	; 0x01
    2ee2:	82 81       	ldd	r24, Z+2	; 0x02
    2ee4:	93 81       	ldd	r25, Z+3	; 0x03
    2ee6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    2eea:	dc 01       	movw	r26, r24
    2eec:	cb 01       	movw	r24, r22
    2eee:	f8 01       	movw	r30, r16
    2ef0:	91 83       	std	Z+1, r25	; 0x01
    2ef2:	80 83       	st	Z, r24
    2ef4:	ce 01       	movw	r24, r28
    2ef6:	8b 5c       	subi	r24, 0xCB	; 203
    2ef8:	9e 4f       	sbci	r25, 0xFE	; 254
    2efa:	9e 01       	movw	r18, r28
    2efc:	2f 5c       	subi	r18, 0xCF	; 207
    2efe:	3e 4f       	sbci	r19, 0xFE	; 254
    2f00:	f9 01       	movw	r30, r18
    2f02:	20 81       	ld	r18, Z
    2f04:	31 81       	ldd	r19, Z+1	; 0x01
    2f06:	fc 01       	movw	r30, r24
    2f08:	31 83       	std	Z+1, r19	; 0x01
    2f0a:	20 83       	st	Z, r18
    2f0c:	ce 01       	movw	r24, r28
    2f0e:	8b 5c       	subi	r24, 0xCB	; 203
    2f10:	9e 4f       	sbci	r25, 0xFE	; 254
    2f12:	fc 01       	movw	r30, r24
    2f14:	80 81       	ld	r24, Z
    2f16:	91 81       	ldd	r25, Z+1	; 0x01
    2f18:	01 97       	sbiw	r24, 0x01	; 1
    2f1a:	f1 f7       	brne	.-4      	; 0x2f18 <__stack+0x1e19>
    2f1c:	9e 01       	movw	r18, r28
    2f1e:	2b 5c       	subi	r18, 0xCB	; 203
    2f20:	3e 4f       	sbci	r19, 0xFE	; 254
    2f22:	f9 01       	movw	r30, r18
    2f24:	91 83       	std	Z+1, r25	; 0x01
    2f26:	80 83       	st	Z, r24
	_delay_ms(400);
	to_uARM("M2210 F320 T100\n");
    2f28:	8c e0       	ldi	r24, 0x0C	; 12
    2f2a:	92 e0       	ldi	r25, 0x02	; 2
    2f2c:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    2f30:	9e 01       	movw	r18, r28
    2f32:	27 59       	subi	r18, 0x97	; 151
    2f34:	3f 4f       	sbci	r19, 0xFF	; 255
    2f36:	80 e0       	ldi	r24, 0x00	; 0
    2f38:	90 e0       	ldi	r25, 0x00	; 0
    2f3a:	aa ef       	ldi	r26, 0xFA	; 250
    2f3c:	b3 e4       	ldi	r27, 0x43	; 67
    2f3e:	f9 01       	movw	r30, r18
    2f40:	80 83       	st	Z, r24
    2f42:	91 83       	std	Z+1, r25	; 0x01
    2f44:	a2 83       	std	Z+2, r26	; 0x02
    2f46:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2f48:	8e 01       	movw	r16, r28
    2f4a:	0d 5d       	subi	r16, 0xDD	; 221
    2f4c:	1e 4f       	sbci	r17, 0xFE	; 254
    2f4e:	ce 01       	movw	r24, r28
    2f50:	87 59       	subi	r24, 0x97	; 151
    2f52:	9f 4f       	sbci	r25, 0xFF	; 255
    2f54:	20 e0       	ldi	r18, 0x00	; 0
    2f56:	30 e0       	ldi	r19, 0x00	; 0
    2f58:	4a e7       	ldi	r20, 0x7A	; 122
    2f5a:	55 e4       	ldi	r21, 0x45	; 69
    2f5c:	fc 01       	movw	r30, r24
    2f5e:	60 81       	ld	r22, Z
    2f60:	71 81       	ldd	r23, Z+1	; 0x01
    2f62:	82 81       	ldd	r24, Z+2	; 0x02
    2f64:	93 81       	ldd	r25, Z+3	; 0x03
    2f66:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    2f6a:	dc 01       	movw	r26, r24
    2f6c:	cb 01       	movw	r24, r22
    2f6e:	f8 01       	movw	r30, r16
    2f70:	80 83       	st	Z, r24
    2f72:	91 83       	std	Z+1, r25	; 0x01
    2f74:	a2 83       	std	Z+2, r26	; 0x02
    2f76:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2f78:	ce 01       	movw	r24, r28
    2f7a:	8d 5d       	subi	r24, 0xDD	; 221
    2f7c:	9e 4f       	sbci	r25, 0xFE	; 254
    2f7e:	20 e0       	ldi	r18, 0x00	; 0
    2f80:	30 e0       	ldi	r19, 0x00	; 0
    2f82:	40 e8       	ldi	r20, 0x80	; 128
    2f84:	5f e3       	ldi	r21, 0x3F	; 63
    2f86:	fc 01       	movw	r30, r24
    2f88:	60 81       	ld	r22, Z
    2f8a:	71 81       	ldd	r23, Z+1	; 0x01
    2f8c:	82 81       	ldd	r24, Z+2	; 0x02
    2f8e:	93 81       	ldd	r25, Z+3	; 0x03
    2f90:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    2f94:	88 23       	and	r24, r24
    2f96:	4c f4       	brge	.+18     	; 0x2faa <__stack+0x1eab>
		__ticks = 1;
    2f98:	ce 01       	movw	r24, r28
    2f9a:	89 5d       	subi	r24, 0xD9	; 217
    2f9c:	9e 4f       	sbci	r25, 0xFE	; 254
    2f9e:	21 e0       	ldi	r18, 0x01	; 1
    2fa0:	30 e0       	ldi	r19, 0x00	; 0
    2fa2:	fc 01       	movw	r30, r24
    2fa4:	31 83       	std	Z+1, r19	; 0x01
    2fa6:	20 83       	st	Z, r18
    2fa8:	6d c0       	rjmp	.+218    	; 0x3084 <__stack+0x1f85>
	else if (__tmp > 65535)
    2faa:	ce 01       	movw	r24, r28
    2fac:	8d 5d       	subi	r24, 0xDD	; 221
    2fae:	9e 4f       	sbci	r25, 0xFE	; 254
    2fb0:	20 e0       	ldi	r18, 0x00	; 0
    2fb2:	3f ef       	ldi	r19, 0xFF	; 255
    2fb4:	4f e7       	ldi	r20, 0x7F	; 127
    2fb6:	57 e4       	ldi	r21, 0x47	; 71
    2fb8:	fc 01       	movw	r30, r24
    2fba:	60 81       	ld	r22, Z
    2fbc:	71 81       	ldd	r23, Z+1	; 0x01
    2fbe:	82 81       	ldd	r24, Z+2	; 0x02
    2fc0:	93 81       	ldd	r25, Z+3	; 0x03
    2fc2:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    2fc6:	18 16       	cp	r1, r24
    2fc8:	0c f0       	brlt	.+2      	; 0x2fcc <__stack+0x1ecd>
    2fca:	4a c0       	rjmp	.+148    	; 0x3060 <__stack+0x1f61>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2fcc:	ce 01       	movw	r24, r28
    2fce:	87 59       	subi	r24, 0x97	; 151
    2fd0:	9f 4f       	sbci	r25, 0xFF	; 255
    2fd2:	20 e0       	ldi	r18, 0x00	; 0
    2fd4:	30 e0       	ldi	r19, 0x00	; 0
    2fd6:	40 e2       	ldi	r20, 0x20	; 32
    2fd8:	51 e4       	ldi	r21, 0x41	; 65
    2fda:	fc 01       	movw	r30, r24
    2fdc:	60 81       	ld	r22, Z
    2fde:	71 81       	ldd	r23, Z+1	; 0x01
    2fe0:	82 81       	ldd	r24, Z+2	; 0x02
    2fe2:	93 81       	ldd	r25, Z+3	; 0x03
    2fe4:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    2fe8:	dc 01       	movw	r26, r24
    2fea:	cb 01       	movw	r24, r22
    2fec:	8e 01       	movw	r16, r28
    2fee:	09 5d       	subi	r16, 0xD9	; 217
    2ff0:	1e 4f       	sbci	r17, 0xFE	; 254
    2ff2:	bc 01       	movw	r22, r24
    2ff4:	cd 01       	movw	r24, r26
    2ff6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    2ffa:	dc 01       	movw	r26, r24
    2ffc:	cb 01       	movw	r24, r22
    2ffe:	f8 01       	movw	r30, r16
    3000:	91 83       	std	Z+1, r25	; 0x01
    3002:	80 83       	st	Z, r24
    3004:	24 c0       	rjmp	.+72     	; 0x304e <__stack+0x1f4f>
    3006:	ce 01       	movw	r24, r28
    3008:	87 5d       	subi	r24, 0xD7	; 215
    300a:	9e 4f       	sbci	r25, 0xFE	; 254
    300c:	20 e9       	ldi	r18, 0x90	; 144
    300e:	31 e0       	ldi	r19, 0x01	; 1
    3010:	fc 01       	movw	r30, r24
    3012:	31 83       	std	Z+1, r19	; 0x01
    3014:	20 83       	st	Z, r18
    3016:	ce 01       	movw	r24, r28
    3018:	87 5d       	subi	r24, 0xD7	; 215
    301a:	9e 4f       	sbci	r25, 0xFE	; 254
    301c:	fc 01       	movw	r30, r24
    301e:	80 81       	ld	r24, Z
    3020:	91 81       	ldd	r25, Z+1	; 0x01
    3022:	01 97       	sbiw	r24, 0x01	; 1
    3024:	f1 f7       	brne	.-4      	; 0x3022 <__stack+0x1f23>
    3026:	9e 01       	movw	r18, r28
    3028:	27 5d       	subi	r18, 0xD7	; 215
    302a:	3e 4f       	sbci	r19, 0xFE	; 254
    302c:	f9 01       	movw	r30, r18
    302e:	91 83       	std	Z+1, r25	; 0x01
    3030:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3032:	ce 01       	movw	r24, r28
    3034:	89 5d       	subi	r24, 0xD9	; 217
    3036:	9e 4f       	sbci	r25, 0xFE	; 254
    3038:	9e 01       	movw	r18, r28
    303a:	29 5d       	subi	r18, 0xD9	; 217
    303c:	3e 4f       	sbci	r19, 0xFE	; 254
    303e:	f9 01       	movw	r30, r18
    3040:	20 81       	ld	r18, Z
    3042:	31 81       	ldd	r19, Z+1	; 0x01
    3044:	21 50       	subi	r18, 0x01	; 1
    3046:	31 09       	sbc	r19, r1
    3048:	fc 01       	movw	r30, r24
    304a:	31 83       	std	Z+1, r19	; 0x01
    304c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    304e:	ce 01       	movw	r24, r28
    3050:	89 5d       	subi	r24, 0xD9	; 217
    3052:	9e 4f       	sbci	r25, 0xFE	; 254
    3054:	fc 01       	movw	r30, r24
    3056:	80 81       	ld	r24, Z
    3058:	91 81       	ldd	r25, Z+1	; 0x01
    305a:	89 2b       	or	r24, r25
    305c:	a1 f6       	brne	.-88     	; 0x3006 <__stack+0x1f07>
    305e:	2c c0       	rjmp	.+88     	; 0x30b8 <__stack+0x1fb9>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3060:	8e 01       	movw	r16, r28
    3062:	09 5d       	subi	r16, 0xD9	; 217
    3064:	1e 4f       	sbci	r17, 0xFE	; 254
    3066:	ce 01       	movw	r24, r28
    3068:	8d 5d       	subi	r24, 0xDD	; 221
    306a:	9e 4f       	sbci	r25, 0xFE	; 254
    306c:	fc 01       	movw	r30, r24
    306e:	60 81       	ld	r22, Z
    3070:	71 81       	ldd	r23, Z+1	; 0x01
    3072:	82 81       	ldd	r24, Z+2	; 0x02
    3074:	93 81       	ldd	r25, Z+3	; 0x03
    3076:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    307a:	dc 01       	movw	r26, r24
    307c:	cb 01       	movw	r24, r22
    307e:	f8 01       	movw	r30, r16
    3080:	91 83       	std	Z+1, r25	; 0x01
    3082:	80 83       	st	Z, r24
    3084:	ce 01       	movw	r24, r28
    3086:	85 5d       	subi	r24, 0xD5	; 213
    3088:	9e 4f       	sbci	r25, 0xFE	; 254
    308a:	9e 01       	movw	r18, r28
    308c:	29 5d       	subi	r18, 0xD9	; 217
    308e:	3e 4f       	sbci	r19, 0xFE	; 254
    3090:	f9 01       	movw	r30, r18
    3092:	20 81       	ld	r18, Z
    3094:	31 81       	ldd	r19, Z+1	; 0x01
    3096:	fc 01       	movw	r30, r24
    3098:	31 83       	std	Z+1, r19	; 0x01
    309a:	20 83       	st	Z, r18
    309c:	ce 01       	movw	r24, r28
    309e:	85 5d       	subi	r24, 0xD5	; 213
    30a0:	9e 4f       	sbci	r25, 0xFE	; 254
    30a2:	fc 01       	movw	r30, r24
    30a4:	80 81       	ld	r24, Z
    30a6:	91 81       	ldd	r25, Z+1	; 0x01
    30a8:	01 97       	sbiw	r24, 0x01	; 1
    30aa:	f1 f7       	brne	.-4      	; 0x30a8 <__stack+0x1fa9>
    30ac:	9e 01       	movw	r18, r28
    30ae:	25 5d       	subi	r18, 0xD5	; 213
    30b0:	3e 4f       	sbci	r19, 0xFE	; 254
    30b2:	f9 01       	movw	r30, r18
    30b4:	91 83       	std	Z+1, r25	; 0x01
    30b6:	80 83       	st	Z, r24
	_delay_ms(500);
	to_uARM("M2210 F440 T100\n");
    30b8:	8d e1       	ldi	r24, 0x1D	; 29
    30ba:	92 e0       	ldi	r25, 0x02	; 2
    30bc:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    30c0:	9e 01       	movw	r18, r28
    30c2:	23 59       	subi	r18, 0x93	; 147
    30c4:	3f 4f       	sbci	r19, 0xFF	; 255
    30c6:	80 e0       	ldi	r24, 0x00	; 0
    30c8:	90 e0       	ldi	r25, 0x00	; 0
    30ca:	a6 e9       	ldi	r26, 0x96	; 150
    30cc:	b3 e4       	ldi	r27, 0x43	; 67
    30ce:	f9 01       	movw	r30, r18
    30d0:	80 83       	st	Z, r24
    30d2:	91 83       	std	Z+1, r25	; 0x01
    30d4:	a2 83       	std	Z+2, r26	; 0x02
    30d6:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    30d8:	8e 01       	movw	r16, r28
    30da:	07 5e       	subi	r16, 0xE7	; 231
    30dc:	1e 4f       	sbci	r17, 0xFE	; 254
    30de:	ce 01       	movw	r24, r28
    30e0:	83 59       	subi	r24, 0x93	; 147
    30e2:	9f 4f       	sbci	r25, 0xFF	; 255
    30e4:	20 e0       	ldi	r18, 0x00	; 0
    30e6:	30 e0       	ldi	r19, 0x00	; 0
    30e8:	4a e7       	ldi	r20, 0x7A	; 122
    30ea:	55 e4       	ldi	r21, 0x45	; 69
    30ec:	fc 01       	movw	r30, r24
    30ee:	60 81       	ld	r22, Z
    30f0:	71 81       	ldd	r23, Z+1	; 0x01
    30f2:	82 81       	ldd	r24, Z+2	; 0x02
    30f4:	93 81       	ldd	r25, Z+3	; 0x03
    30f6:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    30fa:	dc 01       	movw	r26, r24
    30fc:	cb 01       	movw	r24, r22
    30fe:	f8 01       	movw	r30, r16
    3100:	80 83       	st	Z, r24
    3102:	91 83       	std	Z+1, r25	; 0x01
    3104:	a2 83       	std	Z+2, r26	; 0x02
    3106:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3108:	ce 01       	movw	r24, r28
    310a:	87 5e       	subi	r24, 0xE7	; 231
    310c:	9e 4f       	sbci	r25, 0xFE	; 254
    310e:	20 e0       	ldi	r18, 0x00	; 0
    3110:	30 e0       	ldi	r19, 0x00	; 0
    3112:	40 e8       	ldi	r20, 0x80	; 128
    3114:	5f e3       	ldi	r21, 0x3F	; 63
    3116:	fc 01       	movw	r30, r24
    3118:	60 81       	ld	r22, Z
    311a:	71 81       	ldd	r23, Z+1	; 0x01
    311c:	82 81       	ldd	r24, Z+2	; 0x02
    311e:	93 81       	ldd	r25, Z+3	; 0x03
    3120:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    3124:	88 23       	and	r24, r24
    3126:	4c f4       	brge	.+18     	; 0x313a <__stack+0x203b>
		__ticks = 1;
    3128:	ce 01       	movw	r24, r28
    312a:	83 5e       	subi	r24, 0xE3	; 227
    312c:	9e 4f       	sbci	r25, 0xFE	; 254
    312e:	21 e0       	ldi	r18, 0x01	; 1
    3130:	30 e0       	ldi	r19, 0x00	; 0
    3132:	fc 01       	movw	r30, r24
    3134:	31 83       	std	Z+1, r19	; 0x01
    3136:	20 83       	st	Z, r18
    3138:	6d c0       	rjmp	.+218    	; 0x3214 <__stack+0x2115>
	else if (__tmp > 65535)
    313a:	ce 01       	movw	r24, r28
    313c:	87 5e       	subi	r24, 0xE7	; 231
    313e:	9e 4f       	sbci	r25, 0xFE	; 254
    3140:	20 e0       	ldi	r18, 0x00	; 0
    3142:	3f ef       	ldi	r19, 0xFF	; 255
    3144:	4f e7       	ldi	r20, 0x7F	; 127
    3146:	57 e4       	ldi	r21, 0x47	; 71
    3148:	fc 01       	movw	r30, r24
    314a:	60 81       	ld	r22, Z
    314c:	71 81       	ldd	r23, Z+1	; 0x01
    314e:	82 81       	ldd	r24, Z+2	; 0x02
    3150:	93 81       	ldd	r25, Z+3	; 0x03
    3152:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    3156:	18 16       	cp	r1, r24
    3158:	0c f0       	brlt	.+2      	; 0x315c <__stack+0x205d>
    315a:	4a c0       	rjmp	.+148    	; 0x31f0 <__stack+0x20f1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    315c:	ce 01       	movw	r24, r28
    315e:	83 59       	subi	r24, 0x93	; 147
    3160:	9f 4f       	sbci	r25, 0xFF	; 255
    3162:	20 e0       	ldi	r18, 0x00	; 0
    3164:	30 e0       	ldi	r19, 0x00	; 0
    3166:	40 e2       	ldi	r20, 0x20	; 32
    3168:	51 e4       	ldi	r21, 0x41	; 65
    316a:	fc 01       	movw	r30, r24
    316c:	60 81       	ld	r22, Z
    316e:	71 81       	ldd	r23, Z+1	; 0x01
    3170:	82 81       	ldd	r24, Z+2	; 0x02
    3172:	93 81       	ldd	r25, Z+3	; 0x03
    3174:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    3178:	dc 01       	movw	r26, r24
    317a:	cb 01       	movw	r24, r22
    317c:	8e 01       	movw	r16, r28
    317e:	03 5e       	subi	r16, 0xE3	; 227
    3180:	1e 4f       	sbci	r17, 0xFE	; 254
    3182:	bc 01       	movw	r22, r24
    3184:	cd 01       	movw	r24, r26
    3186:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    318a:	dc 01       	movw	r26, r24
    318c:	cb 01       	movw	r24, r22
    318e:	f8 01       	movw	r30, r16
    3190:	91 83       	std	Z+1, r25	; 0x01
    3192:	80 83       	st	Z, r24
    3194:	24 c0       	rjmp	.+72     	; 0x31de <__stack+0x20df>
    3196:	ce 01       	movw	r24, r28
    3198:	81 5e       	subi	r24, 0xE1	; 225
    319a:	9e 4f       	sbci	r25, 0xFE	; 254
    319c:	20 e9       	ldi	r18, 0x90	; 144
    319e:	31 e0       	ldi	r19, 0x01	; 1
    31a0:	fc 01       	movw	r30, r24
    31a2:	31 83       	std	Z+1, r19	; 0x01
    31a4:	20 83       	st	Z, r18
    31a6:	ce 01       	movw	r24, r28
    31a8:	81 5e       	subi	r24, 0xE1	; 225
    31aa:	9e 4f       	sbci	r25, 0xFE	; 254
    31ac:	fc 01       	movw	r30, r24
    31ae:	80 81       	ld	r24, Z
    31b0:	91 81       	ldd	r25, Z+1	; 0x01
    31b2:	01 97       	sbiw	r24, 0x01	; 1
    31b4:	f1 f7       	brne	.-4      	; 0x31b2 <__stack+0x20b3>
    31b6:	9e 01       	movw	r18, r28
    31b8:	21 5e       	subi	r18, 0xE1	; 225
    31ba:	3e 4f       	sbci	r19, 0xFE	; 254
    31bc:	f9 01       	movw	r30, r18
    31be:	91 83       	std	Z+1, r25	; 0x01
    31c0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31c2:	ce 01       	movw	r24, r28
    31c4:	83 5e       	subi	r24, 0xE3	; 227
    31c6:	9e 4f       	sbci	r25, 0xFE	; 254
    31c8:	9e 01       	movw	r18, r28
    31ca:	23 5e       	subi	r18, 0xE3	; 227
    31cc:	3e 4f       	sbci	r19, 0xFE	; 254
    31ce:	f9 01       	movw	r30, r18
    31d0:	20 81       	ld	r18, Z
    31d2:	31 81       	ldd	r19, Z+1	; 0x01
    31d4:	21 50       	subi	r18, 0x01	; 1
    31d6:	31 09       	sbc	r19, r1
    31d8:	fc 01       	movw	r30, r24
    31da:	31 83       	std	Z+1, r19	; 0x01
    31dc:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31de:	ce 01       	movw	r24, r28
    31e0:	83 5e       	subi	r24, 0xE3	; 227
    31e2:	9e 4f       	sbci	r25, 0xFE	; 254
    31e4:	fc 01       	movw	r30, r24
    31e6:	80 81       	ld	r24, Z
    31e8:	91 81       	ldd	r25, Z+1	; 0x01
    31ea:	89 2b       	or	r24, r25
    31ec:	a1 f6       	brne	.-88     	; 0x3196 <__stack+0x2097>
    31ee:	2c c0       	rjmp	.+88     	; 0x3248 <__stack+0x2149>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    31f0:	8e 01       	movw	r16, r28
    31f2:	03 5e       	subi	r16, 0xE3	; 227
    31f4:	1e 4f       	sbci	r17, 0xFE	; 254
    31f6:	ce 01       	movw	r24, r28
    31f8:	87 5e       	subi	r24, 0xE7	; 231
    31fa:	9e 4f       	sbci	r25, 0xFE	; 254
    31fc:	fc 01       	movw	r30, r24
    31fe:	60 81       	ld	r22, Z
    3200:	71 81       	ldd	r23, Z+1	; 0x01
    3202:	82 81       	ldd	r24, Z+2	; 0x02
    3204:	93 81       	ldd	r25, Z+3	; 0x03
    3206:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    320a:	dc 01       	movw	r26, r24
    320c:	cb 01       	movw	r24, r22
    320e:	f8 01       	movw	r30, r16
    3210:	91 83       	std	Z+1, r25	; 0x01
    3212:	80 83       	st	Z, r24
    3214:	ce 01       	movw	r24, r28
    3216:	8f 5d       	subi	r24, 0xDF	; 223
    3218:	9e 4f       	sbci	r25, 0xFE	; 254
    321a:	9e 01       	movw	r18, r28
    321c:	23 5e       	subi	r18, 0xE3	; 227
    321e:	3e 4f       	sbci	r19, 0xFE	; 254
    3220:	f9 01       	movw	r30, r18
    3222:	20 81       	ld	r18, Z
    3224:	31 81       	ldd	r19, Z+1	; 0x01
    3226:	fc 01       	movw	r30, r24
    3228:	31 83       	std	Z+1, r19	; 0x01
    322a:	20 83       	st	Z, r18
    322c:	ce 01       	movw	r24, r28
    322e:	8f 5d       	subi	r24, 0xDF	; 223
    3230:	9e 4f       	sbci	r25, 0xFE	; 254
    3232:	fc 01       	movw	r30, r24
    3234:	80 81       	ld	r24, Z
    3236:	91 81       	ldd	r25, Z+1	; 0x01
    3238:	01 97       	sbiw	r24, 0x01	; 1
    323a:	f1 f7       	brne	.-4      	; 0x3238 <__stack+0x2139>
    323c:	9e 01       	movw	r18, r28
    323e:	2f 5d       	subi	r18, 0xDF	; 223
    3240:	3e 4f       	sbci	r19, 0xFE	; 254
    3242:	f9 01       	movw	r30, r18
    3244:	91 83       	std	Z+1, r25	; 0x01
    3246:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F480 T80\n");
    3248:	8e e2       	ldi	r24, 0x2E	; 46
    324a:	92 e0       	ldi	r25, 0x02	; 2
    324c:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    3250:	9e 01       	movw	r18, r28
    3252:	2f 58       	subi	r18, 0x8F	; 143
    3254:	3f 4f       	sbci	r19, 0xFF	; 255
    3256:	80 e0       	ldi	r24, 0x00	; 0
    3258:	90 e0       	ldi	r25, 0x00	; 0
    325a:	a5 ea       	ldi	r26, 0xA5	; 165
    325c:	b3 e4       	ldi	r27, 0x43	; 67
    325e:	f9 01       	movw	r30, r18
    3260:	80 83       	st	Z, r24
    3262:	91 83       	std	Z+1, r25	; 0x01
    3264:	a2 83       	std	Z+2, r26	; 0x02
    3266:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3268:	8e 01       	movw	r16, r28
    326a:	01 5f       	subi	r16, 0xF1	; 241
    326c:	1e 4f       	sbci	r17, 0xFE	; 254
    326e:	ce 01       	movw	r24, r28
    3270:	8f 58       	subi	r24, 0x8F	; 143
    3272:	9f 4f       	sbci	r25, 0xFF	; 255
    3274:	20 e0       	ldi	r18, 0x00	; 0
    3276:	30 e0       	ldi	r19, 0x00	; 0
    3278:	4a e7       	ldi	r20, 0x7A	; 122
    327a:	55 e4       	ldi	r21, 0x45	; 69
    327c:	fc 01       	movw	r30, r24
    327e:	60 81       	ld	r22, Z
    3280:	71 81       	ldd	r23, Z+1	; 0x01
    3282:	82 81       	ldd	r24, Z+2	; 0x02
    3284:	93 81       	ldd	r25, Z+3	; 0x03
    3286:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    328a:	dc 01       	movw	r26, r24
    328c:	cb 01       	movw	r24, r22
    328e:	f8 01       	movw	r30, r16
    3290:	80 83       	st	Z, r24
    3292:	91 83       	std	Z+1, r25	; 0x01
    3294:	a2 83       	std	Z+2, r26	; 0x02
    3296:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3298:	ce 01       	movw	r24, r28
    329a:	81 5f       	subi	r24, 0xF1	; 241
    329c:	9e 4f       	sbci	r25, 0xFE	; 254
    329e:	20 e0       	ldi	r18, 0x00	; 0
    32a0:	30 e0       	ldi	r19, 0x00	; 0
    32a2:	40 e8       	ldi	r20, 0x80	; 128
    32a4:	5f e3       	ldi	r21, 0x3F	; 63
    32a6:	fc 01       	movw	r30, r24
    32a8:	60 81       	ld	r22, Z
    32aa:	71 81       	ldd	r23, Z+1	; 0x01
    32ac:	82 81       	ldd	r24, Z+2	; 0x02
    32ae:	93 81       	ldd	r25, Z+3	; 0x03
    32b0:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    32b4:	88 23       	and	r24, r24
    32b6:	4c f4       	brge	.+18     	; 0x32ca <__stack+0x21cb>
		__ticks = 1;
    32b8:	ce 01       	movw	r24, r28
    32ba:	8d 5e       	subi	r24, 0xED	; 237
    32bc:	9e 4f       	sbci	r25, 0xFE	; 254
    32be:	21 e0       	ldi	r18, 0x01	; 1
    32c0:	30 e0       	ldi	r19, 0x00	; 0
    32c2:	fc 01       	movw	r30, r24
    32c4:	31 83       	std	Z+1, r19	; 0x01
    32c6:	20 83       	st	Z, r18
    32c8:	6d c0       	rjmp	.+218    	; 0x33a4 <__stack+0x22a5>
	else if (__tmp > 65535)
    32ca:	ce 01       	movw	r24, r28
    32cc:	81 5f       	subi	r24, 0xF1	; 241
    32ce:	9e 4f       	sbci	r25, 0xFE	; 254
    32d0:	20 e0       	ldi	r18, 0x00	; 0
    32d2:	3f ef       	ldi	r19, 0xFF	; 255
    32d4:	4f e7       	ldi	r20, 0x7F	; 127
    32d6:	57 e4       	ldi	r21, 0x47	; 71
    32d8:	fc 01       	movw	r30, r24
    32da:	60 81       	ld	r22, Z
    32dc:	71 81       	ldd	r23, Z+1	; 0x01
    32de:	82 81       	ldd	r24, Z+2	; 0x02
    32e0:	93 81       	ldd	r25, Z+3	; 0x03
    32e2:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    32e6:	18 16       	cp	r1, r24
    32e8:	0c f0       	brlt	.+2      	; 0x32ec <__stack+0x21ed>
    32ea:	4a c0       	rjmp	.+148    	; 0x3380 <__stack+0x2281>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32ec:	ce 01       	movw	r24, r28
    32ee:	8f 58       	subi	r24, 0x8F	; 143
    32f0:	9f 4f       	sbci	r25, 0xFF	; 255
    32f2:	20 e0       	ldi	r18, 0x00	; 0
    32f4:	30 e0       	ldi	r19, 0x00	; 0
    32f6:	40 e2       	ldi	r20, 0x20	; 32
    32f8:	51 e4       	ldi	r21, 0x41	; 65
    32fa:	fc 01       	movw	r30, r24
    32fc:	60 81       	ld	r22, Z
    32fe:	71 81       	ldd	r23, Z+1	; 0x01
    3300:	82 81       	ldd	r24, Z+2	; 0x02
    3302:	93 81       	ldd	r25, Z+3	; 0x03
    3304:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    3308:	dc 01       	movw	r26, r24
    330a:	cb 01       	movw	r24, r22
    330c:	8e 01       	movw	r16, r28
    330e:	0d 5e       	subi	r16, 0xED	; 237
    3310:	1e 4f       	sbci	r17, 0xFE	; 254
    3312:	bc 01       	movw	r22, r24
    3314:	cd 01       	movw	r24, r26
    3316:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    331a:	dc 01       	movw	r26, r24
    331c:	cb 01       	movw	r24, r22
    331e:	f8 01       	movw	r30, r16
    3320:	91 83       	std	Z+1, r25	; 0x01
    3322:	80 83       	st	Z, r24
    3324:	24 c0       	rjmp	.+72     	; 0x336e <__stack+0x226f>
    3326:	ce 01       	movw	r24, r28
    3328:	8b 5e       	subi	r24, 0xEB	; 235
    332a:	9e 4f       	sbci	r25, 0xFE	; 254
    332c:	20 e9       	ldi	r18, 0x90	; 144
    332e:	31 e0       	ldi	r19, 0x01	; 1
    3330:	fc 01       	movw	r30, r24
    3332:	31 83       	std	Z+1, r19	; 0x01
    3334:	20 83       	st	Z, r18
    3336:	ce 01       	movw	r24, r28
    3338:	8b 5e       	subi	r24, 0xEB	; 235
    333a:	9e 4f       	sbci	r25, 0xFE	; 254
    333c:	fc 01       	movw	r30, r24
    333e:	80 81       	ld	r24, Z
    3340:	91 81       	ldd	r25, Z+1	; 0x01
    3342:	01 97       	sbiw	r24, 0x01	; 1
    3344:	f1 f7       	brne	.-4      	; 0x3342 <__stack+0x2243>
    3346:	9e 01       	movw	r18, r28
    3348:	2b 5e       	subi	r18, 0xEB	; 235
    334a:	3e 4f       	sbci	r19, 0xFE	; 254
    334c:	f9 01       	movw	r30, r18
    334e:	91 83       	std	Z+1, r25	; 0x01
    3350:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3352:	ce 01       	movw	r24, r28
    3354:	8d 5e       	subi	r24, 0xED	; 237
    3356:	9e 4f       	sbci	r25, 0xFE	; 254
    3358:	9e 01       	movw	r18, r28
    335a:	2d 5e       	subi	r18, 0xED	; 237
    335c:	3e 4f       	sbci	r19, 0xFE	; 254
    335e:	f9 01       	movw	r30, r18
    3360:	20 81       	ld	r18, Z
    3362:	31 81       	ldd	r19, Z+1	; 0x01
    3364:	21 50       	subi	r18, 0x01	; 1
    3366:	31 09       	sbc	r19, r1
    3368:	fc 01       	movw	r30, r24
    336a:	31 83       	std	Z+1, r19	; 0x01
    336c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    336e:	ce 01       	movw	r24, r28
    3370:	8d 5e       	subi	r24, 0xED	; 237
    3372:	9e 4f       	sbci	r25, 0xFE	; 254
    3374:	fc 01       	movw	r30, r24
    3376:	80 81       	ld	r24, Z
    3378:	91 81       	ldd	r25, Z+1	; 0x01
    337a:	89 2b       	or	r24, r25
    337c:	a1 f6       	brne	.-88     	; 0x3326 <__stack+0x2227>
    337e:	2c c0       	rjmp	.+88     	; 0x33d8 <__stack+0x22d9>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3380:	8e 01       	movw	r16, r28
    3382:	0d 5e       	subi	r16, 0xED	; 237
    3384:	1e 4f       	sbci	r17, 0xFE	; 254
    3386:	ce 01       	movw	r24, r28
    3388:	81 5f       	subi	r24, 0xF1	; 241
    338a:	9e 4f       	sbci	r25, 0xFE	; 254
    338c:	fc 01       	movw	r30, r24
    338e:	60 81       	ld	r22, Z
    3390:	71 81       	ldd	r23, Z+1	; 0x01
    3392:	82 81       	ldd	r24, Z+2	; 0x02
    3394:	93 81       	ldd	r25, Z+3	; 0x03
    3396:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    339a:	dc 01       	movw	r26, r24
    339c:	cb 01       	movw	r24, r22
    339e:	f8 01       	movw	r30, r16
    33a0:	91 83       	std	Z+1, r25	; 0x01
    33a2:	80 83       	st	Z, r24
    33a4:	ce 01       	movw	r24, r28
    33a6:	89 5e       	subi	r24, 0xE9	; 233
    33a8:	9e 4f       	sbci	r25, 0xFE	; 254
    33aa:	9e 01       	movw	r18, r28
    33ac:	2d 5e       	subi	r18, 0xED	; 237
    33ae:	3e 4f       	sbci	r19, 0xFE	; 254
    33b0:	f9 01       	movw	r30, r18
    33b2:	20 81       	ld	r18, Z
    33b4:	31 81       	ldd	r19, Z+1	; 0x01
    33b6:	fc 01       	movw	r30, r24
    33b8:	31 83       	std	Z+1, r19	; 0x01
    33ba:	20 83       	st	Z, r18
    33bc:	ce 01       	movw	r24, r28
    33be:	89 5e       	subi	r24, 0xE9	; 233
    33c0:	9e 4f       	sbci	r25, 0xFE	; 254
    33c2:	fc 01       	movw	r30, r24
    33c4:	80 81       	ld	r24, Z
    33c6:	91 81       	ldd	r25, Z+1	; 0x01
    33c8:	01 97       	sbiw	r24, 0x01	; 1
    33ca:	f1 f7       	brne	.-4      	; 0x33c8 <__stack+0x22c9>
    33cc:	9e 01       	movw	r18, r28
    33ce:	29 5e       	subi	r18, 0xE9	; 233
    33d0:	3e 4f       	sbci	r19, 0xFE	; 254
    33d2:	f9 01       	movw	r30, r18
    33d4:	91 83       	std	Z+1, r25	; 0x01
    33d6:	80 83       	st	Z, r24
	_delay_ms(330);
	to_uARM("M2210 F450 T100\n");
    33d8:	8e e3       	ldi	r24, 0x3E	; 62
    33da:	92 e0       	ldi	r25, 0x02	; 2
    33dc:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    33e0:	9e 01       	movw	r18, r28
    33e2:	2b 58       	subi	r18, 0x8B	; 139
    33e4:	3f 4f       	sbci	r19, 0xFF	; 255
    33e6:	80 e0       	ldi	r24, 0x00	; 0
    33e8:	90 e0       	ldi	r25, 0x00	; 0
    33ea:	a6 e1       	ldi	r26, 0x16	; 22
    33ec:	b3 e4       	ldi	r27, 0x43	; 67
    33ee:	f9 01       	movw	r30, r18
    33f0:	80 83       	st	Z, r24
    33f2:	91 83       	std	Z+1, r25	; 0x01
    33f4:	a2 83       	std	Z+2, r26	; 0x02
    33f6:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    33f8:	8e 01       	movw	r16, r28
    33fa:	0b 5f       	subi	r16, 0xFB	; 251
    33fc:	1e 4f       	sbci	r17, 0xFE	; 254
    33fe:	ce 01       	movw	r24, r28
    3400:	8b 58       	subi	r24, 0x8B	; 139
    3402:	9f 4f       	sbci	r25, 0xFF	; 255
    3404:	20 e0       	ldi	r18, 0x00	; 0
    3406:	30 e0       	ldi	r19, 0x00	; 0
    3408:	4a e7       	ldi	r20, 0x7A	; 122
    340a:	55 e4       	ldi	r21, 0x45	; 69
    340c:	fc 01       	movw	r30, r24
    340e:	60 81       	ld	r22, Z
    3410:	71 81       	ldd	r23, Z+1	; 0x01
    3412:	82 81       	ldd	r24, Z+2	; 0x02
    3414:	93 81       	ldd	r25, Z+3	; 0x03
    3416:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    341a:	dc 01       	movw	r26, r24
    341c:	cb 01       	movw	r24, r22
    341e:	f8 01       	movw	r30, r16
    3420:	80 83       	st	Z, r24
    3422:	91 83       	std	Z+1, r25	; 0x01
    3424:	a2 83       	std	Z+2, r26	; 0x02
    3426:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3428:	ce 01       	movw	r24, r28
    342a:	8b 5f       	subi	r24, 0xFB	; 251
    342c:	9e 4f       	sbci	r25, 0xFE	; 254
    342e:	20 e0       	ldi	r18, 0x00	; 0
    3430:	30 e0       	ldi	r19, 0x00	; 0
    3432:	40 e8       	ldi	r20, 0x80	; 128
    3434:	5f e3       	ldi	r21, 0x3F	; 63
    3436:	fc 01       	movw	r30, r24
    3438:	60 81       	ld	r22, Z
    343a:	71 81       	ldd	r23, Z+1	; 0x01
    343c:	82 81       	ldd	r24, Z+2	; 0x02
    343e:	93 81       	ldd	r25, Z+3	; 0x03
    3440:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    3444:	88 23       	and	r24, r24
    3446:	4c f4       	brge	.+18     	; 0x345a <__stack+0x235b>
		__ticks = 1;
    3448:	ce 01       	movw	r24, r28
    344a:	87 5f       	subi	r24, 0xF7	; 247
    344c:	9e 4f       	sbci	r25, 0xFE	; 254
    344e:	21 e0       	ldi	r18, 0x01	; 1
    3450:	30 e0       	ldi	r19, 0x00	; 0
    3452:	fc 01       	movw	r30, r24
    3454:	31 83       	std	Z+1, r19	; 0x01
    3456:	20 83       	st	Z, r18
    3458:	6d c0       	rjmp	.+218    	; 0x3534 <__stack+0x2435>
	else if (__tmp > 65535)
    345a:	ce 01       	movw	r24, r28
    345c:	8b 5f       	subi	r24, 0xFB	; 251
    345e:	9e 4f       	sbci	r25, 0xFE	; 254
    3460:	20 e0       	ldi	r18, 0x00	; 0
    3462:	3f ef       	ldi	r19, 0xFF	; 255
    3464:	4f e7       	ldi	r20, 0x7F	; 127
    3466:	57 e4       	ldi	r21, 0x47	; 71
    3468:	fc 01       	movw	r30, r24
    346a:	60 81       	ld	r22, Z
    346c:	71 81       	ldd	r23, Z+1	; 0x01
    346e:	82 81       	ldd	r24, Z+2	; 0x02
    3470:	93 81       	ldd	r25, Z+3	; 0x03
    3472:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    3476:	18 16       	cp	r1, r24
    3478:	0c f0       	brlt	.+2      	; 0x347c <__stack+0x237d>
    347a:	4a c0       	rjmp	.+148    	; 0x3510 <__stack+0x2411>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    347c:	ce 01       	movw	r24, r28
    347e:	8b 58       	subi	r24, 0x8B	; 139
    3480:	9f 4f       	sbci	r25, 0xFF	; 255
    3482:	20 e0       	ldi	r18, 0x00	; 0
    3484:	30 e0       	ldi	r19, 0x00	; 0
    3486:	40 e2       	ldi	r20, 0x20	; 32
    3488:	51 e4       	ldi	r21, 0x41	; 65
    348a:	fc 01       	movw	r30, r24
    348c:	60 81       	ld	r22, Z
    348e:	71 81       	ldd	r23, Z+1	; 0x01
    3490:	82 81       	ldd	r24, Z+2	; 0x02
    3492:	93 81       	ldd	r25, Z+3	; 0x03
    3494:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    3498:	dc 01       	movw	r26, r24
    349a:	cb 01       	movw	r24, r22
    349c:	8e 01       	movw	r16, r28
    349e:	07 5f       	subi	r16, 0xF7	; 247
    34a0:	1e 4f       	sbci	r17, 0xFE	; 254
    34a2:	bc 01       	movw	r22, r24
    34a4:	cd 01       	movw	r24, r26
    34a6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    34aa:	dc 01       	movw	r26, r24
    34ac:	cb 01       	movw	r24, r22
    34ae:	f8 01       	movw	r30, r16
    34b0:	91 83       	std	Z+1, r25	; 0x01
    34b2:	80 83       	st	Z, r24
    34b4:	24 c0       	rjmp	.+72     	; 0x34fe <__stack+0x23ff>
    34b6:	ce 01       	movw	r24, r28
    34b8:	85 5f       	subi	r24, 0xF5	; 245
    34ba:	9e 4f       	sbci	r25, 0xFE	; 254
    34bc:	20 e9       	ldi	r18, 0x90	; 144
    34be:	31 e0       	ldi	r19, 0x01	; 1
    34c0:	fc 01       	movw	r30, r24
    34c2:	31 83       	std	Z+1, r19	; 0x01
    34c4:	20 83       	st	Z, r18
    34c6:	ce 01       	movw	r24, r28
    34c8:	85 5f       	subi	r24, 0xF5	; 245
    34ca:	9e 4f       	sbci	r25, 0xFE	; 254
    34cc:	fc 01       	movw	r30, r24
    34ce:	80 81       	ld	r24, Z
    34d0:	91 81       	ldd	r25, Z+1	; 0x01
    34d2:	01 97       	sbiw	r24, 0x01	; 1
    34d4:	f1 f7       	brne	.-4      	; 0x34d2 <__stack+0x23d3>
    34d6:	9e 01       	movw	r18, r28
    34d8:	25 5f       	subi	r18, 0xF5	; 245
    34da:	3e 4f       	sbci	r19, 0xFE	; 254
    34dc:	f9 01       	movw	r30, r18
    34de:	91 83       	std	Z+1, r25	; 0x01
    34e0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34e2:	ce 01       	movw	r24, r28
    34e4:	87 5f       	subi	r24, 0xF7	; 247
    34e6:	9e 4f       	sbci	r25, 0xFE	; 254
    34e8:	9e 01       	movw	r18, r28
    34ea:	27 5f       	subi	r18, 0xF7	; 247
    34ec:	3e 4f       	sbci	r19, 0xFE	; 254
    34ee:	f9 01       	movw	r30, r18
    34f0:	20 81       	ld	r18, Z
    34f2:	31 81       	ldd	r19, Z+1	; 0x01
    34f4:	21 50       	subi	r18, 0x01	; 1
    34f6:	31 09       	sbc	r19, r1
    34f8:	fc 01       	movw	r30, r24
    34fa:	31 83       	std	Z+1, r19	; 0x01
    34fc:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34fe:	ce 01       	movw	r24, r28
    3500:	87 5f       	subi	r24, 0xF7	; 247
    3502:	9e 4f       	sbci	r25, 0xFE	; 254
    3504:	fc 01       	movw	r30, r24
    3506:	80 81       	ld	r24, Z
    3508:	91 81       	ldd	r25, Z+1	; 0x01
    350a:	89 2b       	or	r24, r25
    350c:	a1 f6       	brne	.-88     	; 0x34b6 <__stack+0x23b7>
    350e:	2c c0       	rjmp	.+88     	; 0x3568 <__stack+0x2469>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3510:	8e 01       	movw	r16, r28
    3512:	07 5f       	subi	r16, 0xF7	; 247
    3514:	1e 4f       	sbci	r17, 0xFE	; 254
    3516:	ce 01       	movw	r24, r28
    3518:	8b 5f       	subi	r24, 0xFB	; 251
    351a:	9e 4f       	sbci	r25, 0xFE	; 254
    351c:	fc 01       	movw	r30, r24
    351e:	60 81       	ld	r22, Z
    3520:	71 81       	ldd	r23, Z+1	; 0x01
    3522:	82 81       	ldd	r24, Z+2	; 0x02
    3524:	93 81       	ldd	r25, Z+3	; 0x03
    3526:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    352a:	dc 01       	movw	r26, r24
    352c:	cb 01       	movw	r24, r22
    352e:	f8 01       	movw	r30, r16
    3530:	91 83       	std	Z+1, r25	; 0x01
    3532:	80 83       	st	Z, r24
    3534:	ce 01       	movw	r24, r28
    3536:	83 5f       	subi	r24, 0xF3	; 243
    3538:	9e 4f       	sbci	r25, 0xFE	; 254
    353a:	9e 01       	movw	r18, r28
    353c:	27 5f       	subi	r18, 0xF7	; 247
    353e:	3e 4f       	sbci	r19, 0xFE	; 254
    3540:	f9 01       	movw	r30, r18
    3542:	20 81       	ld	r18, Z
    3544:	31 81       	ldd	r19, Z+1	; 0x01
    3546:	fc 01       	movw	r30, r24
    3548:	31 83       	std	Z+1, r19	; 0x01
    354a:	20 83       	st	Z, r18
    354c:	ce 01       	movw	r24, r28
    354e:	83 5f       	subi	r24, 0xF3	; 243
    3550:	9e 4f       	sbci	r25, 0xFE	; 254
    3552:	fc 01       	movw	r30, r24
    3554:	80 81       	ld	r24, Z
    3556:	91 81       	ldd	r25, Z+1	; 0x01
    3558:	01 97       	sbiw	r24, 0x01	; 1
    355a:	f1 f7       	brne	.-4      	; 0x3558 <__stack+0x2459>
    355c:	9e 01       	movw	r18, r28
    355e:	23 5f       	subi	r18, 0xF3	; 243
    3560:	3e 4f       	sbci	r19, 0xFE	; 254
    3562:	f9 01       	movw	r30, r18
    3564:	91 83       	std	Z+1, r25	; 0x01
    3566:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F430 T100\n");
    3568:	8f e4       	ldi	r24, 0x4F	; 79
    356a:	92 e0       	ldi	r25, 0x02	; 2
    356c:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    3570:	9e 01       	movw	r18, r28
    3572:	27 58       	subi	r18, 0x87	; 135
    3574:	3f 4f       	sbci	r19, 0xFF	; 255
    3576:	80 e0       	ldi	r24, 0x00	; 0
    3578:	90 e0       	ldi	r25, 0x00	; 0
    357a:	a6 e9       	ldi	r26, 0x96	; 150
    357c:	b3 e4       	ldi	r27, 0x43	; 67
    357e:	f9 01       	movw	r30, r18
    3580:	80 83       	st	Z, r24
    3582:	91 83       	std	Z+1, r25	; 0x01
    3584:	a2 83       	std	Z+2, r26	; 0x02
    3586:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3588:	8e 01       	movw	r16, r28
    358a:	05 50       	subi	r16, 0x05	; 5
    358c:	1f 4f       	sbci	r17, 0xFF	; 255
    358e:	ce 01       	movw	r24, r28
    3590:	87 58       	subi	r24, 0x87	; 135
    3592:	9f 4f       	sbci	r25, 0xFF	; 255
    3594:	20 e0       	ldi	r18, 0x00	; 0
    3596:	30 e0       	ldi	r19, 0x00	; 0
    3598:	4a e7       	ldi	r20, 0x7A	; 122
    359a:	55 e4       	ldi	r21, 0x45	; 69
    359c:	fc 01       	movw	r30, r24
    359e:	60 81       	ld	r22, Z
    35a0:	71 81       	ldd	r23, Z+1	; 0x01
    35a2:	82 81       	ldd	r24, Z+2	; 0x02
    35a4:	93 81       	ldd	r25, Z+3	; 0x03
    35a6:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    35aa:	dc 01       	movw	r26, r24
    35ac:	cb 01       	movw	r24, r22
    35ae:	f8 01       	movw	r30, r16
    35b0:	80 83       	st	Z, r24
    35b2:	91 83       	std	Z+1, r25	; 0x01
    35b4:	a2 83       	std	Z+2, r26	; 0x02
    35b6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    35b8:	ce 01       	movw	r24, r28
    35ba:	85 50       	subi	r24, 0x05	; 5
    35bc:	9f 4f       	sbci	r25, 0xFF	; 255
    35be:	20 e0       	ldi	r18, 0x00	; 0
    35c0:	30 e0       	ldi	r19, 0x00	; 0
    35c2:	40 e8       	ldi	r20, 0x80	; 128
    35c4:	5f e3       	ldi	r21, 0x3F	; 63
    35c6:	fc 01       	movw	r30, r24
    35c8:	60 81       	ld	r22, Z
    35ca:	71 81       	ldd	r23, Z+1	; 0x01
    35cc:	82 81       	ldd	r24, Z+2	; 0x02
    35ce:	93 81       	ldd	r25, Z+3	; 0x03
    35d0:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    35d4:	88 23       	and	r24, r24
    35d6:	4c f4       	brge	.+18     	; 0x35ea <__stack+0x24eb>
		__ticks = 1;
    35d8:	ce 01       	movw	r24, r28
    35da:	81 50       	subi	r24, 0x01	; 1
    35dc:	9f 4f       	sbci	r25, 0xFF	; 255
    35de:	21 e0       	ldi	r18, 0x01	; 1
    35e0:	30 e0       	ldi	r19, 0x00	; 0
    35e2:	fc 01       	movw	r30, r24
    35e4:	31 83       	std	Z+1, r19	; 0x01
    35e6:	20 83       	st	Z, r18
    35e8:	6d c0       	rjmp	.+218    	; 0x36c4 <__stack+0x25c5>
	else if (__tmp > 65535)
    35ea:	ce 01       	movw	r24, r28
    35ec:	85 50       	subi	r24, 0x05	; 5
    35ee:	9f 4f       	sbci	r25, 0xFF	; 255
    35f0:	20 e0       	ldi	r18, 0x00	; 0
    35f2:	3f ef       	ldi	r19, 0xFF	; 255
    35f4:	4f e7       	ldi	r20, 0x7F	; 127
    35f6:	57 e4       	ldi	r21, 0x47	; 71
    35f8:	fc 01       	movw	r30, r24
    35fa:	60 81       	ld	r22, Z
    35fc:	71 81       	ldd	r23, Z+1	; 0x01
    35fe:	82 81       	ldd	r24, Z+2	; 0x02
    3600:	93 81       	ldd	r25, Z+3	; 0x03
    3602:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    3606:	18 16       	cp	r1, r24
    3608:	0c f0       	brlt	.+2      	; 0x360c <__stack+0x250d>
    360a:	4a c0       	rjmp	.+148    	; 0x36a0 <__stack+0x25a1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    360c:	ce 01       	movw	r24, r28
    360e:	87 58       	subi	r24, 0x87	; 135
    3610:	9f 4f       	sbci	r25, 0xFF	; 255
    3612:	20 e0       	ldi	r18, 0x00	; 0
    3614:	30 e0       	ldi	r19, 0x00	; 0
    3616:	40 e2       	ldi	r20, 0x20	; 32
    3618:	51 e4       	ldi	r21, 0x41	; 65
    361a:	fc 01       	movw	r30, r24
    361c:	60 81       	ld	r22, Z
    361e:	71 81       	ldd	r23, Z+1	; 0x01
    3620:	82 81       	ldd	r24, Z+2	; 0x02
    3622:	93 81       	ldd	r25, Z+3	; 0x03
    3624:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    3628:	dc 01       	movw	r26, r24
    362a:	cb 01       	movw	r24, r22
    362c:	8e 01       	movw	r16, r28
    362e:	01 50       	subi	r16, 0x01	; 1
    3630:	1f 4f       	sbci	r17, 0xFF	; 255
    3632:	bc 01       	movw	r22, r24
    3634:	cd 01       	movw	r24, r26
    3636:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    363a:	dc 01       	movw	r26, r24
    363c:	cb 01       	movw	r24, r22
    363e:	f8 01       	movw	r30, r16
    3640:	91 83       	std	Z+1, r25	; 0x01
    3642:	80 83       	st	Z, r24
    3644:	24 c0       	rjmp	.+72     	; 0x368e <__stack+0x258f>
    3646:	ce 01       	movw	r24, r28
    3648:	8f 5f       	subi	r24, 0xFF	; 255
    364a:	9e 4f       	sbci	r25, 0xFE	; 254
    364c:	20 e9       	ldi	r18, 0x90	; 144
    364e:	31 e0       	ldi	r19, 0x01	; 1
    3650:	fc 01       	movw	r30, r24
    3652:	31 83       	std	Z+1, r19	; 0x01
    3654:	20 83       	st	Z, r18
    3656:	ce 01       	movw	r24, r28
    3658:	8f 5f       	subi	r24, 0xFF	; 255
    365a:	9e 4f       	sbci	r25, 0xFE	; 254
    365c:	fc 01       	movw	r30, r24
    365e:	80 81       	ld	r24, Z
    3660:	91 81       	ldd	r25, Z+1	; 0x01
    3662:	01 97       	sbiw	r24, 0x01	; 1
    3664:	f1 f7       	brne	.-4      	; 0x3662 <__stack+0x2563>
    3666:	9e 01       	movw	r18, r28
    3668:	2f 5f       	subi	r18, 0xFF	; 255
    366a:	3e 4f       	sbci	r19, 0xFE	; 254
    366c:	f9 01       	movw	r30, r18
    366e:	91 83       	std	Z+1, r25	; 0x01
    3670:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3672:	ce 01       	movw	r24, r28
    3674:	81 50       	subi	r24, 0x01	; 1
    3676:	9f 4f       	sbci	r25, 0xFF	; 255
    3678:	9e 01       	movw	r18, r28
    367a:	21 50       	subi	r18, 0x01	; 1
    367c:	3f 4f       	sbci	r19, 0xFF	; 255
    367e:	f9 01       	movw	r30, r18
    3680:	20 81       	ld	r18, Z
    3682:	31 81       	ldd	r19, Z+1	; 0x01
    3684:	21 50       	subi	r18, 0x01	; 1
    3686:	31 09       	sbc	r19, r1
    3688:	fc 01       	movw	r30, r24
    368a:	31 83       	std	Z+1, r19	; 0x01
    368c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    368e:	ce 01       	movw	r24, r28
    3690:	81 50       	subi	r24, 0x01	; 1
    3692:	9f 4f       	sbci	r25, 0xFF	; 255
    3694:	fc 01       	movw	r30, r24
    3696:	80 81       	ld	r24, Z
    3698:	91 81       	ldd	r25, Z+1	; 0x01
    369a:	89 2b       	or	r24, r25
    369c:	a1 f6       	brne	.-88     	; 0x3646 <__stack+0x2547>
    369e:	2c c0       	rjmp	.+88     	; 0x36f8 <__stack+0x25f9>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    36a0:	8e 01       	movw	r16, r28
    36a2:	01 50       	subi	r16, 0x01	; 1
    36a4:	1f 4f       	sbci	r17, 0xFF	; 255
    36a6:	ce 01       	movw	r24, r28
    36a8:	85 50       	subi	r24, 0x05	; 5
    36aa:	9f 4f       	sbci	r25, 0xFF	; 255
    36ac:	fc 01       	movw	r30, r24
    36ae:	60 81       	ld	r22, Z
    36b0:	71 81       	ldd	r23, Z+1	; 0x01
    36b2:	82 81       	ldd	r24, Z+2	; 0x02
    36b4:	93 81       	ldd	r25, Z+3	; 0x03
    36b6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    36ba:	dc 01       	movw	r26, r24
    36bc:	cb 01       	movw	r24, r22
    36be:	f8 01       	movw	r30, r16
    36c0:	91 83       	std	Z+1, r25	; 0x01
    36c2:	80 83       	st	Z, r24
    36c4:	ce 01       	movw	r24, r28
    36c6:	8d 5f       	subi	r24, 0xFD	; 253
    36c8:	9e 4f       	sbci	r25, 0xFE	; 254
    36ca:	9e 01       	movw	r18, r28
    36cc:	21 50       	subi	r18, 0x01	; 1
    36ce:	3f 4f       	sbci	r19, 0xFF	; 255
    36d0:	f9 01       	movw	r30, r18
    36d2:	20 81       	ld	r18, Z
    36d4:	31 81       	ldd	r19, Z+1	; 0x01
    36d6:	fc 01       	movw	r30, r24
    36d8:	31 83       	std	Z+1, r19	; 0x01
    36da:	20 83       	st	Z, r18
    36dc:	ce 01       	movw	r24, r28
    36de:	8d 5f       	subi	r24, 0xFD	; 253
    36e0:	9e 4f       	sbci	r25, 0xFE	; 254
    36e2:	fc 01       	movw	r30, r24
    36e4:	80 81       	ld	r24, Z
    36e6:	91 81       	ldd	r25, Z+1	; 0x01
    36e8:	01 97       	sbiw	r24, 0x01	; 1
    36ea:	f1 f7       	brne	.-4      	; 0x36e8 <__stack+0x25e9>
    36ec:	9e 01       	movw	r18, r28
    36ee:	2d 5f       	subi	r18, 0xFD	; 253
    36f0:	3e 4f       	sbci	r19, 0xFE	; 254
    36f2:	f9 01       	movw	r30, r18
    36f4:	91 83       	std	Z+1, r25	; 0x01
    36f6:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F380 T100\n");
    36f8:	8b ef       	ldi	r24, 0xFB	; 251
    36fa:	91 e0       	ldi	r25, 0x01	; 1
    36fc:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    3700:	9e 01       	movw	r18, r28
    3702:	23 58       	subi	r18, 0x83	; 131
    3704:	3f 4f       	sbci	r19, 0xFF	; 255
    3706:	80 e0       	ldi	r24, 0x00	; 0
    3708:	90 e0       	ldi	r25, 0x00	; 0
    370a:	a8 e4       	ldi	r26, 0x48	; 72
    370c:	b3 e4       	ldi	r27, 0x43	; 67
    370e:	f9 01       	movw	r30, r18
    3710:	80 83       	st	Z, r24
    3712:	91 83       	std	Z+1, r25	; 0x01
    3714:	a2 83       	std	Z+2, r26	; 0x02
    3716:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3718:	8e 01       	movw	r16, r28
    371a:	0f 50       	subi	r16, 0x0F	; 15
    371c:	1f 4f       	sbci	r17, 0xFF	; 255
    371e:	ce 01       	movw	r24, r28
    3720:	83 58       	subi	r24, 0x83	; 131
    3722:	9f 4f       	sbci	r25, 0xFF	; 255
    3724:	20 e0       	ldi	r18, 0x00	; 0
    3726:	30 e0       	ldi	r19, 0x00	; 0
    3728:	4a e7       	ldi	r20, 0x7A	; 122
    372a:	55 e4       	ldi	r21, 0x45	; 69
    372c:	fc 01       	movw	r30, r24
    372e:	60 81       	ld	r22, Z
    3730:	71 81       	ldd	r23, Z+1	; 0x01
    3732:	82 81       	ldd	r24, Z+2	; 0x02
    3734:	93 81       	ldd	r25, Z+3	; 0x03
    3736:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    373a:	dc 01       	movw	r26, r24
    373c:	cb 01       	movw	r24, r22
    373e:	f8 01       	movw	r30, r16
    3740:	80 83       	st	Z, r24
    3742:	91 83       	std	Z+1, r25	; 0x01
    3744:	a2 83       	std	Z+2, r26	; 0x02
    3746:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3748:	ce 01       	movw	r24, r28
    374a:	8f 50       	subi	r24, 0x0F	; 15
    374c:	9f 4f       	sbci	r25, 0xFF	; 255
    374e:	20 e0       	ldi	r18, 0x00	; 0
    3750:	30 e0       	ldi	r19, 0x00	; 0
    3752:	40 e8       	ldi	r20, 0x80	; 128
    3754:	5f e3       	ldi	r21, 0x3F	; 63
    3756:	fc 01       	movw	r30, r24
    3758:	60 81       	ld	r22, Z
    375a:	71 81       	ldd	r23, Z+1	; 0x01
    375c:	82 81       	ldd	r24, Z+2	; 0x02
    375e:	93 81       	ldd	r25, Z+3	; 0x03
    3760:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    3764:	88 23       	and	r24, r24
    3766:	4c f4       	brge	.+18     	; 0x377a <__stack+0x267b>
		__ticks = 1;
    3768:	ce 01       	movw	r24, r28
    376a:	8b 50       	subi	r24, 0x0B	; 11
    376c:	9f 4f       	sbci	r25, 0xFF	; 255
    376e:	21 e0       	ldi	r18, 0x01	; 1
    3770:	30 e0       	ldi	r19, 0x00	; 0
    3772:	fc 01       	movw	r30, r24
    3774:	31 83       	std	Z+1, r19	; 0x01
    3776:	20 83       	st	Z, r18
    3778:	6d c0       	rjmp	.+218    	; 0x3854 <__stack+0x2755>
	else if (__tmp > 65535)
    377a:	ce 01       	movw	r24, r28
    377c:	8f 50       	subi	r24, 0x0F	; 15
    377e:	9f 4f       	sbci	r25, 0xFF	; 255
    3780:	20 e0       	ldi	r18, 0x00	; 0
    3782:	3f ef       	ldi	r19, 0xFF	; 255
    3784:	4f e7       	ldi	r20, 0x7F	; 127
    3786:	57 e4       	ldi	r21, 0x47	; 71
    3788:	fc 01       	movw	r30, r24
    378a:	60 81       	ld	r22, Z
    378c:	71 81       	ldd	r23, Z+1	; 0x01
    378e:	82 81       	ldd	r24, Z+2	; 0x02
    3790:	93 81       	ldd	r25, Z+3	; 0x03
    3792:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    3796:	18 16       	cp	r1, r24
    3798:	0c f0       	brlt	.+2      	; 0x379c <__stack+0x269d>
    379a:	4a c0       	rjmp	.+148    	; 0x3830 <__stack+0x2731>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    379c:	ce 01       	movw	r24, r28
    379e:	83 58       	subi	r24, 0x83	; 131
    37a0:	9f 4f       	sbci	r25, 0xFF	; 255
    37a2:	20 e0       	ldi	r18, 0x00	; 0
    37a4:	30 e0       	ldi	r19, 0x00	; 0
    37a6:	40 e2       	ldi	r20, 0x20	; 32
    37a8:	51 e4       	ldi	r21, 0x41	; 65
    37aa:	fc 01       	movw	r30, r24
    37ac:	60 81       	ld	r22, Z
    37ae:	71 81       	ldd	r23, Z+1	; 0x01
    37b0:	82 81       	ldd	r24, Z+2	; 0x02
    37b2:	93 81       	ldd	r25, Z+3	; 0x03
    37b4:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    37b8:	dc 01       	movw	r26, r24
    37ba:	cb 01       	movw	r24, r22
    37bc:	8e 01       	movw	r16, r28
    37be:	0b 50       	subi	r16, 0x0B	; 11
    37c0:	1f 4f       	sbci	r17, 0xFF	; 255
    37c2:	bc 01       	movw	r22, r24
    37c4:	cd 01       	movw	r24, r26
    37c6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    37ca:	dc 01       	movw	r26, r24
    37cc:	cb 01       	movw	r24, r22
    37ce:	f8 01       	movw	r30, r16
    37d0:	91 83       	std	Z+1, r25	; 0x01
    37d2:	80 83       	st	Z, r24
    37d4:	24 c0       	rjmp	.+72     	; 0x381e <__stack+0x271f>
    37d6:	ce 01       	movw	r24, r28
    37d8:	89 50       	subi	r24, 0x09	; 9
    37da:	9f 4f       	sbci	r25, 0xFF	; 255
    37dc:	20 e9       	ldi	r18, 0x90	; 144
    37de:	31 e0       	ldi	r19, 0x01	; 1
    37e0:	fc 01       	movw	r30, r24
    37e2:	31 83       	std	Z+1, r19	; 0x01
    37e4:	20 83       	st	Z, r18
    37e6:	ce 01       	movw	r24, r28
    37e8:	89 50       	subi	r24, 0x09	; 9
    37ea:	9f 4f       	sbci	r25, 0xFF	; 255
    37ec:	fc 01       	movw	r30, r24
    37ee:	80 81       	ld	r24, Z
    37f0:	91 81       	ldd	r25, Z+1	; 0x01
    37f2:	01 97       	sbiw	r24, 0x01	; 1
    37f4:	f1 f7       	brne	.-4      	; 0x37f2 <__stack+0x26f3>
    37f6:	9e 01       	movw	r18, r28
    37f8:	29 50       	subi	r18, 0x09	; 9
    37fa:	3f 4f       	sbci	r19, 0xFF	; 255
    37fc:	f9 01       	movw	r30, r18
    37fe:	91 83       	std	Z+1, r25	; 0x01
    3800:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3802:	ce 01       	movw	r24, r28
    3804:	8b 50       	subi	r24, 0x0B	; 11
    3806:	9f 4f       	sbci	r25, 0xFF	; 255
    3808:	9e 01       	movw	r18, r28
    380a:	2b 50       	subi	r18, 0x0B	; 11
    380c:	3f 4f       	sbci	r19, 0xFF	; 255
    380e:	f9 01       	movw	r30, r18
    3810:	20 81       	ld	r18, Z
    3812:	31 81       	ldd	r19, Z+1	; 0x01
    3814:	21 50       	subi	r18, 0x01	; 1
    3816:	31 09       	sbc	r19, r1
    3818:	fc 01       	movw	r30, r24
    381a:	31 83       	std	Z+1, r19	; 0x01
    381c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    381e:	ce 01       	movw	r24, r28
    3820:	8b 50       	subi	r24, 0x0B	; 11
    3822:	9f 4f       	sbci	r25, 0xFF	; 255
    3824:	fc 01       	movw	r30, r24
    3826:	80 81       	ld	r24, Z
    3828:	91 81       	ldd	r25, Z+1	; 0x01
    382a:	89 2b       	or	r24, r25
    382c:	a1 f6       	brne	.-88     	; 0x37d6 <__stack+0x26d7>
    382e:	2c c0       	rjmp	.+88     	; 0x3888 <__stack+0x2789>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3830:	8e 01       	movw	r16, r28
    3832:	0b 50       	subi	r16, 0x0B	; 11
    3834:	1f 4f       	sbci	r17, 0xFF	; 255
    3836:	ce 01       	movw	r24, r28
    3838:	8f 50       	subi	r24, 0x0F	; 15
    383a:	9f 4f       	sbci	r25, 0xFF	; 255
    383c:	fc 01       	movw	r30, r24
    383e:	60 81       	ld	r22, Z
    3840:	71 81       	ldd	r23, Z+1	; 0x01
    3842:	82 81       	ldd	r24, Z+2	; 0x02
    3844:	93 81       	ldd	r25, Z+3	; 0x03
    3846:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    384a:	dc 01       	movw	r26, r24
    384c:	cb 01       	movw	r24, r22
    384e:	f8 01       	movw	r30, r16
    3850:	91 83       	std	Z+1, r25	; 0x01
    3852:	80 83       	st	Z, r24
    3854:	ce 01       	movw	r24, r28
    3856:	87 50       	subi	r24, 0x07	; 7
    3858:	9f 4f       	sbci	r25, 0xFF	; 255
    385a:	9e 01       	movw	r18, r28
    385c:	2b 50       	subi	r18, 0x0B	; 11
    385e:	3f 4f       	sbci	r19, 0xFF	; 255
    3860:	f9 01       	movw	r30, r18
    3862:	20 81       	ld	r18, Z
    3864:	31 81       	ldd	r19, Z+1	; 0x01
    3866:	fc 01       	movw	r30, r24
    3868:	31 83       	std	Z+1, r19	; 0x01
    386a:	20 83       	st	Z, r18
    386c:	ce 01       	movw	r24, r28
    386e:	87 50       	subi	r24, 0x07	; 7
    3870:	9f 4f       	sbci	r25, 0xFF	; 255
    3872:	fc 01       	movw	r30, r24
    3874:	80 81       	ld	r24, Z
    3876:	91 81       	ldd	r25, Z+1	; 0x01
    3878:	01 97       	sbiw	r24, 0x01	; 1
    387a:	f1 f7       	brne	.-4      	; 0x3878 <__stack+0x2779>
    387c:	9e 01       	movw	r18, r28
    387e:	27 50       	subi	r18, 0x07	; 7
    3880:	3f 4f       	sbci	r19, 0xFF	; 255
    3882:	f9 01       	movw	r30, r18
    3884:	91 83       	std	Z+1, r25	; 0x01
    3886:	80 83       	st	Z, r24
	_delay_ms(200);
	to_uARM("M2210 F660 T80\n");
    3888:	80 e6       	ldi	r24, 0x60	; 96
    388a:	92 e0       	ldi	r25, 0x02	; 2
    388c:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    3890:	9e 01       	movw	r18, r28
    3892:	2f 57       	subi	r18, 0x7F	; 127
    3894:	3f 4f       	sbci	r19, 0xFF	; 255
    3896:	80 e0       	ldi	r24, 0x00	; 0
    3898:	90 e0       	ldi	r25, 0x00	; 0
    389a:	a8 e4       	ldi	r26, 0x48	; 72
    389c:	b3 e4       	ldi	r27, 0x43	; 67
    389e:	f9 01       	movw	r30, r18
    38a0:	80 83       	st	Z, r24
    38a2:	91 83       	std	Z+1, r25	; 0x01
    38a4:	a2 83       	std	Z+2, r26	; 0x02
    38a6:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    38a8:	8e 01       	movw	r16, r28
    38aa:	09 51       	subi	r16, 0x19	; 25
    38ac:	1f 4f       	sbci	r17, 0xFF	; 255
    38ae:	ce 01       	movw	r24, r28
    38b0:	8f 57       	subi	r24, 0x7F	; 127
    38b2:	9f 4f       	sbci	r25, 0xFF	; 255
    38b4:	20 e0       	ldi	r18, 0x00	; 0
    38b6:	30 e0       	ldi	r19, 0x00	; 0
    38b8:	4a e7       	ldi	r20, 0x7A	; 122
    38ba:	55 e4       	ldi	r21, 0x45	; 69
    38bc:	fc 01       	movw	r30, r24
    38be:	60 81       	ld	r22, Z
    38c0:	71 81       	ldd	r23, Z+1	; 0x01
    38c2:	82 81       	ldd	r24, Z+2	; 0x02
    38c4:	93 81       	ldd	r25, Z+3	; 0x03
    38c6:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    38ca:	dc 01       	movw	r26, r24
    38cc:	cb 01       	movw	r24, r22
    38ce:	f8 01       	movw	r30, r16
    38d0:	80 83       	st	Z, r24
    38d2:	91 83       	std	Z+1, r25	; 0x01
    38d4:	a2 83       	std	Z+2, r26	; 0x02
    38d6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    38d8:	ce 01       	movw	r24, r28
    38da:	89 51       	subi	r24, 0x19	; 25
    38dc:	9f 4f       	sbci	r25, 0xFF	; 255
    38de:	20 e0       	ldi	r18, 0x00	; 0
    38e0:	30 e0       	ldi	r19, 0x00	; 0
    38e2:	40 e8       	ldi	r20, 0x80	; 128
    38e4:	5f e3       	ldi	r21, 0x3F	; 63
    38e6:	fc 01       	movw	r30, r24
    38e8:	60 81       	ld	r22, Z
    38ea:	71 81       	ldd	r23, Z+1	; 0x01
    38ec:	82 81       	ldd	r24, Z+2	; 0x02
    38ee:	93 81       	ldd	r25, Z+3	; 0x03
    38f0:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    38f4:	88 23       	and	r24, r24
    38f6:	4c f4       	brge	.+18     	; 0x390a <__stack+0x280b>
		__ticks = 1;
    38f8:	ce 01       	movw	r24, r28
    38fa:	85 51       	subi	r24, 0x15	; 21
    38fc:	9f 4f       	sbci	r25, 0xFF	; 255
    38fe:	21 e0       	ldi	r18, 0x01	; 1
    3900:	30 e0       	ldi	r19, 0x00	; 0
    3902:	fc 01       	movw	r30, r24
    3904:	31 83       	std	Z+1, r19	; 0x01
    3906:	20 83       	st	Z, r18
    3908:	6d c0       	rjmp	.+218    	; 0x39e4 <__stack+0x28e5>
	else if (__tmp > 65535)
    390a:	ce 01       	movw	r24, r28
    390c:	89 51       	subi	r24, 0x19	; 25
    390e:	9f 4f       	sbci	r25, 0xFF	; 255
    3910:	20 e0       	ldi	r18, 0x00	; 0
    3912:	3f ef       	ldi	r19, 0xFF	; 255
    3914:	4f e7       	ldi	r20, 0x7F	; 127
    3916:	57 e4       	ldi	r21, 0x47	; 71
    3918:	fc 01       	movw	r30, r24
    391a:	60 81       	ld	r22, Z
    391c:	71 81       	ldd	r23, Z+1	; 0x01
    391e:	82 81       	ldd	r24, Z+2	; 0x02
    3920:	93 81       	ldd	r25, Z+3	; 0x03
    3922:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    3926:	18 16       	cp	r1, r24
    3928:	0c f0       	brlt	.+2      	; 0x392c <__stack+0x282d>
    392a:	4a c0       	rjmp	.+148    	; 0x39c0 <__stack+0x28c1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    392c:	ce 01       	movw	r24, r28
    392e:	8f 57       	subi	r24, 0x7F	; 127
    3930:	9f 4f       	sbci	r25, 0xFF	; 255
    3932:	20 e0       	ldi	r18, 0x00	; 0
    3934:	30 e0       	ldi	r19, 0x00	; 0
    3936:	40 e2       	ldi	r20, 0x20	; 32
    3938:	51 e4       	ldi	r21, 0x41	; 65
    393a:	fc 01       	movw	r30, r24
    393c:	60 81       	ld	r22, Z
    393e:	71 81       	ldd	r23, Z+1	; 0x01
    3940:	82 81       	ldd	r24, Z+2	; 0x02
    3942:	93 81       	ldd	r25, Z+3	; 0x03
    3944:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    3948:	dc 01       	movw	r26, r24
    394a:	cb 01       	movw	r24, r22
    394c:	8e 01       	movw	r16, r28
    394e:	05 51       	subi	r16, 0x15	; 21
    3950:	1f 4f       	sbci	r17, 0xFF	; 255
    3952:	bc 01       	movw	r22, r24
    3954:	cd 01       	movw	r24, r26
    3956:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    395a:	dc 01       	movw	r26, r24
    395c:	cb 01       	movw	r24, r22
    395e:	f8 01       	movw	r30, r16
    3960:	91 83       	std	Z+1, r25	; 0x01
    3962:	80 83       	st	Z, r24
    3964:	24 c0       	rjmp	.+72     	; 0x39ae <__stack+0x28af>
    3966:	ce 01       	movw	r24, r28
    3968:	83 51       	subi	r24, 0x13	; 19
    396a:	9f 4f       	sbci	r25, 0xFF	; 255
    396c:	20 e9       	ldi	r18, 0x90	; 144
    396e:	31 e0       	ldi	r19, 0x01	; 1
    3970:	fc 01       	movw	r30, r24
    3972:	31 83       	std	Z+1, r19	; 0x01
    3974:	20 83       	st	Z, r18
    3976:	ce 01       	movw	r24, r28
    3978:	83 51       	subi	r24, 0x13	; 19
    397a:	9f 4f       	sbci	r25, 0xFF	; 255
    397c:	fc 01       	movw	r30, r24
    397e:	80 81       	ld	r24, Z
    3980:	91 81       	ldd	r25, Z+1	; 0x01
    3982:	01 97       	sbiw	r24, 0x01	; 1
    3984:	f1 f7       	brne	.-4      	; 0x3982 <__stack+0x2883>
    3986:	9e 01       	movw	r18, r28
    3988:	23 51       	subi	r18, 0x13	; 19
    398a:	3f 4f       	sbci	r19, 0xFF	; 255
    398c:	f9 01       	movw	r30, r18
    398e:	91 83       	std	Z+1, r25	; 0x01
    3990:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3992:	ce 01       	movw	r24, r28
    3994:	85 51       	subi	r24, 0x15	; 21
    3996:	9f 4f       	sbci	r25, 0xFF	; 255
    3998:	9e 01       	movw	r18, r28
    399a:	25 51       	subi	r18, 0x15	; 21
    399c:	3f 4f       	sbci	r19, 0xFF	; 255
    399e:	f9 01       	movw	r30, r18
    39a0:	20 81       	ld	r18, Z
    39a2:	31 81       	ldd	r19, Z+1	; 0x01
    39a4:	21 50       	subi	r18, 0x01	; 1
    39a6:	31 09       	sbc	r19, r1
    39a8:	fc 01       	movw	r30, r24
    39aa:	31 83       	std	Z+1, r19	; 0x01
    39ac:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39ae:	ce 01       	movw	r24, r28
    39b0:	85 51       	subi	r24, 0x15	; 21
    39b2:	9f 4f       	sbci	r25, 0xFF	; 255
    39b4:	fc 01       	movw	r30, r24
    39b6:	80 81       	ld	r24, Z
    39b8:	91 81       	ldd	r25, Z+1	; 0x01
    39ba:	89 2b       	or	r24, r25
    39bc:	a1 f6       	brne	.-88     	; 0x3966 <__stack+0x2867>
    39be:	2c c0       	rjmp	.+88     	; 0x3a18 <__stack+0x2919>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39c0:	8e 01       	movw	r16, r28
    39c2:	05 51       	subi	r16, 0x15	; 21
    39c4:	1f 4f       	sbci	r17, 0xFF	; 255
    39c6:	ce 01       	movw	r24, r28
    39c8:	89 51       	subi	r24, 0x19	; 25
    39ca:	9f 4f       	sbci	r25, 0xFF	; 255
    39cc:	fc 01       	movw	r30, r24
    39ce:	60 81       	ld	r22, Z
    39d0:	71 81       	ldd	r23, Z+1	; 0x01
    39d2:	82 81       	ldd	r24, Z+2	; 0x02
    39d4:	93 81       	ldd	r25, Z+3	; 0x03
    39d6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    39da:	dc 01       	movw	r26, r24
    39dc:	cb 01       	movw	r24, r22
    39de:	f8 01       	movw	r30, r16
    39e0:	91 83       	std	Z+1, r25	; 0x01
    39e2:	80 83       	st	Z, r24
    39e4:	ce 01       	movw	r24, r28
    39e6:	81 51       	subi	r24, 0x11	; 17
    39e8:	9f 4f       	sbci	r25, 0xFF	; 255
    39ea:	9e 01       	movw	r18, r28
    39ec:	25 51       	subi	r18, 0x15	; 21
    39ee:	3f 4f       	sbci	r19, 0xFF	; 255
    39f0:	f9 01       	movw	r30, r18
    39f2:	20 81       	ld	r18, Z
    39f4:	31 81       	ldd	r19, Z+1	; 0x01
    39f6:	fc 01       	movw	r30, r24
    39f8:	31 83       	std	Z+1, r19	; 0x01
    39fa:	20 83       	st	Z, r18
    39fc:	ce 01       	movw	r24, r28
    39fe:	81 51       	subi	r24, 0x11	; 17
    3a00:	9f 4f       	sbci	r25, 0xFF	; 255
    3a02:	fc 01       	movw	r30, r24
    3a04:	80 81       	ld	r24, Z
    3a06:	91 81       	ldd	r25, Z+1	; 0x01
    3a08:	01 97       	sbiw	r24, 0x01	; 1
    3a0a:	f1 f7       	brne	.-4      	; 0x3a08 <__stack+0x2909>
    3a0c:	9e 01       	movw	r18, r28
    3a0e:	21 51       	subi	r18, 0x11	; 17
    3a10:	3f 4f       	sbci	r19, 0xFF	; 255
    3a12:	f9 01       	movw	r30, r18
    3a14:	91 83       	std	Z+1, r25	; 0x01
    3a16:	80 83       	st	Z, r24
	_delay_ms(200);
	to_uARM("M2210 F760 T50\n");
    3a18:	80 e7       	ldi	r24, 0x70	; 112
    3a1a:	92 e0       	ldi	r25, 0x02	; 2
    3a1c:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    3a20:	9e 01       	movw	r18, r28
    3a22:	2b 57       	subi	r18, 0x7B	; 123
    3a24:	3f 4f       	sbci	r19, 0xFF	; 255
    3a26:	80 e0       	ldi	r24, 0x00	; 0
    3a28:	90 e0       	ldi	r25, 0x00	; 0
    3a2a:	a6 e1       	ldi	r26, 0x16	; 22
    3a2c:	b3 e4       	ldi	r27, 0x43	; 67
    3a2e:	f9 01       	movw	r30, r18
    3a30:	80 83       	st	Z, r24
    3a32:	91 83       	std	Z+1, r25	; 0x01
    3a34:	a2 83       	std	Z+2, r26	; 0x02
    3a36:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3a38:	8e 01       	movw	r16, r28
    3a3a:	03 52       	subi	r16, 0x23	; 35
    3a3c:	1f 4f       	sbci	r17, 0xFF	; 255
    3a3e:	ce 01       	movw	r24, r28
    3a40:	8b 57       	subi	r24, 0x7B	; 123
    3a42:	9f 4f       	sbci	r25, 0xFF	; 255
    3a44:	20 e0       	ldi	r18, 0x00	; 0
    3a46:	30 e0       	ldi	r19, 0x00	; 0
    3a48:	4a e7       	ldi	r20, 0x7A	; 122
    3a4a:	55 e4       	ldi	r21, 0x45	; 69
    3a4c:	fc 01       	movw	r30, r24
    3a4e:	60 81       	ld	r22, Z
    3a50:	71 81       	ldd	r23, Z+1	; 0x01
    3a52:	82 81       	ldd	r24, Z+2	; 0x02
    3a54:	93 81       	ldd	r25, Z+3	; 0x03
    3a56:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    3a5a:	dc 01       	movw	r26, r24
    3a5c:	cb 01       	movw	r24, r22
    3a5e:	f8 01       	movw	r30, r16
    3a60:	80 83       	st	Z, r24
    3a62:	91 83       	std	Z+1, r25	; 0x01
    3a64:	a2 83       	std	Z+2, r26	; 0x02
    3a66:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3a68:	ce 01       	movw	r24, r28
    3a6a:	83 52       	subi	r24, 0x23	; 35
    3a6c:	9f 4f       	sbci	r25, 0xFF	; 255
    3a6e:	20 e0       	ldi	r18, 0x00	; 0
    3a70:	30 e0       	ldi	r19, 0x00	; 0
    3a72:	40 e8       	ldi	r20, 0x80	; 128
    3a74:	5f e3       	ldi	r21, 0x3F	; 63
    3a76:	fc 01       	movw	r30, r24
    3a78:	60 81       	ld	r22, Z
    3a7a:	71 81       	ldd	r23, Z+1	; 0x01
    3a7c:	82 81       	ldd	r24, Z+2	; 0x02
    3a7e:	93 81       	ldd	r25, Z+3	; 0x03
    3a80:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    3a84:	88 23       	and	r24, r24
    3a86:	4c f4       	brge	.+18     	; 0x3a9a <__stack+0x299b>
		__ticks = 1;
    3a88:	ce 01       	movw	r24, r28
    3a8a:	8f 51       	subi	r24, 0x1F	; 31
    3a8c:	9f 4f       	sbci	r25, 0xFF	; 255
    3a8e:	21 e0       	ldi	r18, 0x01	; 1
    3a90:	30 e0       	ldi	r19, 0x00	; 0
    3a92:	fc 01       	movw	r30, r24
    3a94:	31 83       	std	Z+1, r19	; 0x01
    3a96:	20 83       	st	Z, r18
    3a98:	6d c0       	rjmp	.+218    	; 0x3b74 <__stack+0x2a75>
	else if (__tmp > 65535)
    3a9a:	ce 01       	movw	r24, r28
    3a9c:	83 52       	subi	r24, 0x23	; 35
    3a9e:	9f 4f       	sbci	r25, 0xFF	; 255
    3aa0:	20 e0       	ldi	r18, 0x00	; 0
    3aa2:	3f ef       	ldi	r19, 0xFF	; 255
    3aa4:	4f e7       	ldi	r20, 0x7F	; 127
    3aa6:	57 e4       	ldi	r21, 0x47	; 71
    3aa8:	fc 01       	movw	r30, r24
    3aaa:	60 81       	ld	r22, Z
    3aac:	71 81       	ldd	r23, Z+1	; 0x01
    3aae:	82 81       	ldd	r24, Z+2	; 0x02
    3ab0:	93 81       	ldd	r25, Z+3	; 0x03
    3ab2:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    3ab6:	18 16       	cp	r1, r24
    3ab8:	0c f0       	brlt	.+2      	; 0x3abc <__stack+0x29bd>
    3aba:	4a c0       	rjmp	.+148    	; 0x3b50 <__stack+0x2a51>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3abc:	ce 01       	movw	r24, r28
    3abe:	8b 57       	subi	r24, 0x7B	; 123
    3ac0:	9f 4f       	sbci	r25, 0xFF	; 255
    3ac2:	20 e0       	ldi	r18, 0x00	; 0
    3ac4:	30 e0       	ldi	r19, 0x00	; 0
    3ac6:	40 e2       	ldi	r20, 0x20	; 32
    3ac8:	51 e4       	ldi	r21, 0x41	; 65
    3aca:	fc 01       	movw	r30, r24
    3acc:	60 81       	ld	r22, Z
    3ace:	71 81       	ldd	r23, Z+1	; 0x01
    3ad0:	82 81       	ldd	r24, Z+2	; 0x02
    3ad2:	93 81       	ldd	r25, Z+3	; 0x03
    3ad4:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    3ad8:	dc 01       	movw	r26, r24
    3ada:	cb 01       	movw	r24, r22
    3adc:	8e 01       	movw	r16, r28
    3ade:	0f 51       	subi	r16, 0x1F	; 31
    3ae0:	1f 4f       	sbci	r17, 0xFF	; 255
    3ae2:	bc 01       	movw	r22, r24
    3ae4:	cd 01       	movw	r24, r26
    3ae6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    3aea:	dc 01       	movw	r26, r24
    3aec:	cb 01       	movw	r24, r22
    3aee:	f8 01       	movw	r30, r16
    3af0:	91 83       	std	Z+1, r25	; 0x01
    3af2:	80 83       	st	Z, r24
    3af4:	24 c0       	rjmp	.+72     	; 0x3b3e <__stack+0x2a3f>
    3af6:	ce 01       	movw	r24, r28
    3af8:	8d 51       	subi	r24, 0x1D	; 29
    3afa:	9f 4f       	sbci	r25, 0xFF	; 255
    3afc:	20 e9       	ldi	r18, 0x90	; 144
    3afe:	31 e0       	ldi	r19, 0x01	; 1
    3b00:	fc 01       	movw	r30, r24
    3b02:	31 83       	std	Z+1, r19	; 0x01
    3b04:	20 83       	st	Z, r18
    3b06:	ce 01       	movw	r24, r28
    3b08:	8d 51       	subi	r24, 0x1D	; 29
    3b0a:	9f 4f       	sbci	r25, 0xFF	; 255
    3b0c:	fc 01       	movw	r30, r24
    3b0e:	80 81       	ld	r24, Z
    3b10:	91 81       	ldd	r25, Z+1	; 0x01
    3b12:	01 97       	sbiw	r24, 0x01	; 1
    3b14:	f1 f7       	brne	.-4      	; 0x3b12 <__stack+0x2a13>
    3b16:	9e 01       	movw	r18, r28
    3b18:	2d 51       	subi	r18, 0x1D	; 29
    3b1a:	3f 4f       	sbci	r19, 0xFF	; 255
    3b1c:	f9 01       	movw	r30, r18
    3b1e:	91 83       	std	Z+1, r25	; 0x01
    3b20:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b22:	ce 01       	movw	r24, r28
    3b24:	8f 51       	subi	r24, 0x1F	; 31
    3b26:	9f 4f       	sbci	r25, 0xFF	; 255
    3b28:	9e 01       	movw	r18, r28
    3b2a:	2f 51       	subi	r18, 0x1F	; 31
    3b2c:	3f 4f       	sbci	r19, 0xFF	; 255
    3b2e:	f9 01       	movw	r30, r18
    3b30:	20 81       	ld	r18, Z
    3b32:	31 81       	ldd	r19, Z+1	; 0x01
    3b34:	21 50       	subi	r18, 0x01	; 1
    3b36:	31 09       	sbc	r19, r1
    3b38:	fc 01       	movw	r30, r24
    3b3a:	31 83       	std	Z+1, r19	; 0x01
    3b3c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b3e:	ce 01       	movw	r24, r28
    3b40:	8f 51       	subi	r24, 0x1F	; 31
    3b42:	9f 4f       	sbci	r25, 0xFF	; 255
    3b44:	fc 01       	movw	r30, r24
    3b46:	80 81       	ld	r24, Z
    3b48:	91 81       	ldd	r25, Z+1	; 0x01
    3b4a:	89 2b       	or	r24, r25
    3b4c:	a1 f6       	brne	.-88     	; 0x3af6 <__stack+0x29f7>
    3b4e:	2c c0       	rjmp	.+88     	; 0x3ba8 <__stack+0x2aa9>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b50:	8e 01       	movw	r16, r28
    3b52:	0f 51       	subi	r16, 0x1F	; 31
    3b54:	1f 4f       	sbci	r17, 0xFF	; 255
    3b56:	ce 01       	movw	r24, r28
    3b58:	83 52       	subi	r24, 0x23	; 35
    3b5a:	9f 4f       	sbci	r25, 0xFF	; 255
    3b5c:	fc 01       	movw	r30, r24
    3b5e:	60 81       	ld	r22, Z
    3b60:	71 81       	ldd	r23, Z+1	; 0x01
    3b62:	82 81       	ldd	r24, Z+2	; 0x02
    3b64:	93 81       	ldd	r25, Z+3	; 0x03
    3b66:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    3b6a:	dc 01       	movw	r26, r24
    3b6c:	cb 01       	movw	r24, r22
    3b6e:	f8 01       	movw	r30, r16
    3b70:	91 83       	std	Z+1, r25	; 0x01
    3b72:	80 83       	st	Z, r24
    3b74:	ce 01       	movw	r24, r28
    3b76:	8b 51       	subi	r24, 0x1B	; 27
    3b78:	9f 4f       	sbci	r25, 0xFF	; 255
    3b7a:	9e 01       	movw	r18, r28
    3b7c:	2f 51       	subi	r18, 0x1F	; 31
    3b7e:	3f 4f       	sbci	r19, 0xFF	; 255
    3b80:	f9 01       	movw	r30, r18
    3b82:	20 81       	ld	r18, Z
    3b84:	31 81       	ldd	r19, Z+1	; 0x01
    3b86:	fc 01       	movw	r30, r24
    3b88:	31 83       	std	Z+1, r19	; 0x01
    3b8a:	20 83       	st	Z, r18
    3b8c:	ce 01       	movw	r24, r28
    3b8e:	8b 51       	subi	r24, 0x1B	; 27
    3b90:	9f 4f       	sbci	r25, 0xFF	; 255
    3b92:	fc 01       	movw	r30, r24
    3b94:	80 81       	ld	r24, Z
    3b96:	91 81       	ldd	r25, Z+1	; 0x01
    3b98:	01 97       	sbiw	r24, 0x01	; 1
    3b9a:	f1 f7       	brne	.-4      	; 0x3b98 <__stack+0x2a99>
    3b9c:	9e 01       	movw	r18, r28
    3b9e:	2b 51       	subi	r18, 0x1B	; 27
    3ba0:	3f 4f       	sbci	r19, 0xFF	; 255
    3ba2:	f9 01       	movw	r30, r18
    3ba4:	91 83       	std	Z+1, r25	; 0x01
    3ba6:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F860 T100\n");
    3ba8:	80 e8       	ldi	r24, 0x80	; 128
    3baa:	92 e0       	ldi	r25, 0x02	; 2
    3bac:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    3bb0:	9e 01       	movw	r18, r28
    3bb2:	27 57       	subi	r18, 0x77	; 119
    3bb4:	3f 4f       	sbci	r19, 0xFF	; 255
    3bb6:	80 e0       	ldi	r24, 0x00	; 0
    3bb8:	90 e0       	ldi	r25, 0x00	; 0
    3bba:	a6 e9       	ldi	r26, 0x96	; 150
    3bbc:	b3 e4       	ldi	r27, 0x43	; 67
    3bbe:	f9 01       	movw	r30, r18
    3bc0:	80 83       	st	Z, r24
    3bc2:	91 83       	std	Z+1, r25	; 0x01
    3bc4:	a2 83       	std	Z+2, r26	; 0x02
    3bc6:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3bc8:	8e 01       	movw	r16, r28
    3bca:	0d 52       	subi	r16, 0x2D	; 45
    3bcc:	1f 4f       	sbci	r17, 0xFF	; 255
    3bce:	ce 01       	movw	r24, r28
    3bd0:	87 57       	subi	r24, 0x77	; 119
    3bd2:	9f 4f       	sbci	r25, 0xFF	; 255
    3bd4:	20 e0       	ldi	r18, 0x00	; 0
    3bd6:	30 e0       	ldi	r19, 0x00	; 0
    3bd8:	4a e7       	ldi	r20, 0x7A	; 122
    3bda:	55 e4       	ldi	r21, 0x45	; 69
    3bdc:	fc 01       	movw	r30, r24
    3bde:	60 81       	ld	r22, Z
    3be0:	71 81       	ldd	r23, Z+1	; 0x01
    3be2:	82 81       	ldd	r24, Z+2	; 0x02
    3be4:	93 81       	ldd	r25, Z+3	; 0x03
    3be6:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    3bea:	dc 01       	movw	r26, r24
    3bec:	cb 01       	movw	r24, r22
    3bee:	f8 01       	movw	r30, r16
    3bf0:	80 83       	st	Z, r24
    3bf2:	91 83       	std	Z+1, r25	; 0x01
    3bf4:	a2 83       	std	Z+2, r26	; 0x02
    3bf6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3bf8:	ce 01       	movw	r24, r28
    3bfa:	8d 52       	subi	r24, 0x2D	; 45
    3bfc:	9f 4f       	sbci	r25, 0xFF	; 255
    3bfe:	20 e0       	ldi	r18, 0x00	; 0
    3c00:	30 e0       	ldi	r19, 0x00	; 0
    3c02:	40 e8       	ldi	r20, 0x80	; 128
    3c04:	5f e3       	ldi	r21, 0x3F	; 63
    3c06:	fc 01       	movw	r30, r24
    3c08:	60 81       	ld	r22, Z
    3c0a:	71 81       	ldd	r23, Z+1	; 0x01
    3c0c:	82 81       	ldd	r24, Z+2	; 0x02
    3c0e:	93 81       	ldd	r25, Z+3	; 0x03
    3c10:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    3c14:	88 23       	and	r24, r24
    3c16:	4c f4       	brge	.+18     	; 0x3c2a <__stack+0x2b2b>
		__ticks = 1;
    3c18:	ce 01       	movw	r24, r28
    3c1a:	89 52       	subi	r24, 0x29	; 41
    3c1c:	9f 4f       	sbci	r25, 0xFF	; 255
    3c1e:	21 e0       	ldi	r18, 0x01	; 1
    3c20:	30 e0       	ldi	r19, 0x00	; 0
    3c22:	fc 01       	movw	r30, r24
    3c24:	31 83       	std	Z+1, r19	; 0x01
    3c26:	20 83       	st	Z, r18
    3c28:	6d c0       	rjmp	.+218    	; 0x3d04 <__stack+0x2c05>
	else if (__tmp > 65535)
    3c2a:	ce 01       	movw	r24, r28
    3c2c:	8d 52       	subi	r24, 0x2D	; 45
    3c2e:	9f 4f       	sbci	r25, 0xFF	; 255
    3c30:	20 e0       	ldi	r18, 0x00	; 0
    3c32:	3f ef       	ldi	r19, 0xFF	; 255
    3c34:	4f e7       	ldi	r20, 0x7F	; 127
    3c36:	57 e4       	ldi	r21, 0x47	; 71
    3c38:	fc 01       	movw	r30, r24
    3c3a:	60 81       	ld	r22, Z
    3c3c:	71 81       	ldd	r23, Z+1	; 0x01
    3c3e:	82 81       	ldd	r24, Z+2	; 0x02
    3c40:	93 81       	ldd	r25, Z+3	; 0x03
    3c42:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    3c46:	18 16       	cp	r1, r24
    3c48:	0c f0       	brlt	.+2      	; 0x3c4c <__stack+0x2b4d>
    3c4a:	4a c0       	rjmp	.+148    	; 0x3ce0 <__stack+0x2be1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c4c:	ce 01       	movw	r24, r28
    3c4e:	87 57       	subi	r24, 0x77	; 119
    3c50:	9f 4f       	sbci	r25, 0xFF	; 255
    3c52:	20 e0       	ldi	r18, 0x00	; 0
    3c54:	30 e0       	ldi	r19, 0x00	; 0
    3c56:	40 e2       	ldi	r20, 0x20	; 32
    3c58:	51 e4       	ldi	r21, 0x41	; 65
    3c5a:	fc 01       	movw	r30, r24
    3c5c:	60 81       	ld	r22, Z
    3c5e:	71 81       	ldd	r23, Z+1	; 0x01
    3c60:	82 81       	ldd	r24, Z+2	; 0x02
    3c62:	93 81       	ldd	r25, Z+3	; 0x03
    3c64:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    3c68:	dc 01       	movw	r26, r24
    3c6a:	cb 01       	movw	r24, r22
    3c6c:	8e 01       	movw	r16, r28
    3c6e:	09 52       	subi	r16, 0x29	; 41
    3c70:	1f 4f       	sbci	r17, 0xFF	; 255
    3c72:	bc 01       	movw	r22, r24
    3c74:	cd 01       	movw	r24, r26
    3c76:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    3c7a:	dc 01       	movw	r26, r24
    3c7c:	cb 01       	movw	r24, r22
    3c7e:	f8 01       	movw	r30, r16
    3c80:	91 83       	std	Z+1, r25	; 0x01
    3c82:	80 83       	st	Z, r24
    3c84:	24 c0       	rjmp	.+72     	; 0x3cce <__stack+0x2bcf>
    3c86:	ce 01       	movw	r24, r28
    3c88:	87 52       	subi	r24, 0x27	; 39
    3c8a:	9f 4f       	sbci	r25, 0xFF	; 255
    3c8c:	20 e9       	ldi	r18, 0x90	; 144
    3c8e:	31 e0       	ldi	r19, 0x01	; 1
    3c90:	fc 01       	movw	r30, r24
    3c92:	31 83       	std	Z+1, r19	; 0x01
    3c94:	20 83       	st	Z, r18
    3c96:	ce 01       	movw	r24, r28
    3c98:	87 52       	subi	r24, 0x27	; 39
    3c9a:	9f 4f       	sbci	r25, 0xFF	; 255
    3c9c:	fc 01       	movw	r30, r24
    3c9e:	80 81       	ld	r24, Z
    3ca0:	91 81       	ldd	r25, Z+1	; 0x01
    3ca2:	01 97       	sbiw	r24, 0x01	; 1
    3ca4:	f1 f7       	brne	.-4      	; 0x3ca2 <__stack+0x2ba3>
    3ca6:	9e 01       	movw	r18, r28
    3ca8:	27 52       	subi	r18, 0x27	; 39
    3caa:	3f 4f       	sbci	r19, 0xFF	; 255
    3cac:	f9 01       	movw	r30, r18
    3cae:	91 83       	std	Z+1, r25	; 0x01
    3cb0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3cb2:	ce 01       	movw	r24, r28
    3cb4:	89 52       	subi	r24, 0x29	; 41
    3cb6:	9f 4f       	sbci	r25, 0xFF	; 255
    3cb8:	9e 01       	movw	r18, r28
    3cba:	29 52       	subi	r18, 0x29	; 41
    3cbc:	3f 4f       	sbci	r19, 0xFF	; 255
    3cbe:	f9 01       	movw	r30, r18
    3cc0:	20 81       	ld	r18, Z
    3cc2:	31 81       	ldd	r19, Z+1	; 0x01
    3cc4:	21 50       	subi	r18, 0x01	; 1
    3cc6:	31 09       	sbc	r19, r1
    3cc8:	fc 01       	movw	r30, r24
    3cca:	31 83       	std	Z+1, r19	; 0x01
    3ccc:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3cce:	ce 01       	movw	r24, r28
    3cd0:	89 52       	subi	r24, 0x29	; 41
    3cd2:	9f 4f       	sbci	r25, 0xFF	; 255
    3cd4:	fc 01       	movw	r30, r24
    3cd6:	80 81       	ld	r24, Z
    3cd8:	91 81       	ldd	r25, Z+1	; 0x01
    3cda:	89 2b       	or	r24, r25
    3cdc:	a1 f6       	brne	.-88     	; 0x3c86 <__stack+0x2b87>
    3cde:	2c c0       	rjmp	.+88     	; 0x3d38 <__stack+0x2c39>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ce0:	8e 01       	movw	r16, r28
    3ce2:	09 52       	subi	r16, 0x29	; 41
    3ce4:	1f 4f       	sbci	r17, 0xFF	; 255
    3ce6:	ce 01       	movw	r24, r28
    3ce8:	8d 52       	subi	r24, 0x2D	; 45
    3cea:	9f 4f       	sbci	r25, 0xFF	; 255
    3cec:	fc 01       	movw	r30, r24
    3cee:	60 81       	ld	r22, Z
    3cf0:	71 81       	ldd	r23, Z+1	; 0x01
    3cf2:	82 81       	ldd	r24, Z+2	; 0x02
    3cf4:	93 81       	ldd	r25, Z+3	; 0x03
    3cf6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    3cfa:	dc 01       	movw	r26, r24
    3cfc:	cb 01       	movw	r24, r22
    3cfe:	f8 01       	movw	r30, r16
    3d00:	91 83       	std	Z+1, r25	; 0x01
    3d02:	80 83       	st	Z, r24
    3d04:	ce 01       	movw	r24, r28
    3d06:	85 52       	subi	r24, 0x25	; 37
    3d08:	9f 4f       	sbci	r25, 0xFF	; 255
    3d0a:	9e 01       	movw	r18, r28
    3d0c:	29 52       	subi	r18, 0x29	; 41
    3d0e:	3f 4f       	sbci	r19, 0xFF	; 255
    3d10:	f9 01       	movw	r30, r18
    3d12:	20 81       	ld	r18, Z
    3d14:	31 81       	ldd	r19, Z+1	; 0x01
    3d16:	fc 01       	movw	r30, r24
    3d18:	31 83       	std	Z+1, r19	; 0x01
    3d1a:	20 83       	st	Z, r18
    3d1c:	ce 01       	movw	r24, r28
    3d1e:	85 52       	subi	r24, 0x25	; 37
    3d20:	9f 4f       	sbci	r25, 0xFF	; 255
    3d22:	fc 01       	movw	r30, r24
    3d24:	80 81       	ld	r24, Z
    3d26:	91 81       	ldd	r25, Z+1	; 0x01
    3d28:	01 97       	sbiw	r24, 0x01	; 1
    3d2a:	f1 f7       	brne	.-4      	; 0x3d28 <__stack+0x2c29>
    3d2c:	9e 01       	movw	r18, r28
    3d2e:	25 52       	subi	r18, 0x25	; 37
    3d30:	3f 4f       	sbci	r19, 0xFF	; 255
    3d32:	f9 01       	movw	r30, r18
    3d34:	91 83       	std	Z+1, r25	; 0x01
    3d36:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F700 T80\n");
    3d38:	80 ec       	ldi	r24, 0xC0	; 192
    3d3a:	92 e0       	ldi	r25, 0x02	; 2
    3d3c:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    3d40:	9e 01       	movw	r18, r28
    3d42:	23 57       	subi	r18, 0x73	; 115
    3d44:	3f 4f       	sbci	r19, 0xFF	; 255
    3d46:	80 e0       	ldi	r24, 0x00	; 0
    3d48:	90 e0       	ldi	r25, 0x00	; 0
    3d4a:	a6 e1       	ldi	r26, 0x16	; 22
    3d4c:	b3 e4       	ldi	r27, 0x43	; 67
    3d4e:	f9 01       	movw	r30, r18
    3d50:	80 83       	st	Z, r24
    3d52:	91 83       	std	Z+1, r25	; 0x01
    3d54:	a2 83       	std	Z+2, r26	; 0x02
    3d56:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3d58:	8e 01       	movw	r16, r28
    3d5a:	07 53       	subi	r16, 0x37	; 55
    3d5c:	1f 4f       	sbci	r17, 0xFF	; 255
    3d5e:	ce 01       	movw	r24, r28
    3d60:	83 57       	subi	r24, 0x73	; 115
    3d62:	9f 4f       	sbci	r25, 0xFF	; 255
    3d64:	20 e0       	ldi	r18, 0x00	; 0
    3d66:	30 e0       	ldi	r19, 0x00	; 0
    3d68:	4a e7       	ldi	r20, 0x7A	; 122
    3d6a:	55 e4       	ldi	r21, 0x45	; 69
    3d6c:	fc 01       	movw	r30, r24
    3d6e:	60 81       	ld	r22, Z
    3d70:	71 81       	ldd	r23, Z+1	; 0x01
    3d72:	82 81       	ldd	r24, Z+2	; 0x02
    3d74:	93 81       	ldd	r25, Z+3	; 0x03
    3d76:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    3d7a:	dc 01       	movw	r26, r24
    3d7c:	cb 01       	movw	r24, r22
    3d7e:	f8 01       	movw	r30, r16
    3d80:	80 83       	st	Z, r24
    3d82:	91 83       	std	Z+1, r25	; 0x01
    3d84:	a2 83       	std	Z+2, r26	; 0x02
    3d86:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3d88:	ce 01       	movw	r24, r28
    3d8a:	87 53       	subi	r24, 0x37	; 55
    3d8c:	9f 4f       	sbci	r25, 0xFF	; 255
    3d8e:	20 e0       	ldi	r18, 0x00	; 0
    3d90:	30 e0       	ldi	r19, 0x00	; 0
    3d92:	40 e8       	ldi	r20, 0x80	; 128
    3d94:	5f e3       	ldi	r21, 0x3F	; 63
    3d96:	fc 01       	movw	r30, r24
    3d98:	60 81       	ld	r22, Z
    3d9a:	71 81       	ldd	r23, Z+1	; 0x01
    3d9c:	82 81       	ldd	r24, Z+2	; 0x02
    3d9e:	93 81       	ldd	r25, Z+3	; 0x03
    3da0:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    3da4:	88 23       	and	r24, r24
    3da6:	4c f4       	brge	.+18     	; 0x3dba <__stack+0x2cbb>
		__ticks = 1;
    3da8:	ce 01       	movw	r24, r28
    3daa:	83 53       	subi	r24, 0x33	; 51
    3dac:	9f 4f       	sbci	r25, 0xFF	; 255
    3dae:	21 e0       	ldi	r18, 0x01	; 1
    3db0:	30 e0       	ldi	r19, 0x00	; 0
    3db2:	fc 01       	movw	r30, r24
    3db4:	31 83       	std	Z+1, r19	; 0x01
    3db6:	20 83       	st	Z, r18
    3db8:	6d c0       	rjmp	.+218    	; 0x3e94 <__stack+0x2d95>
	else if (__tmp > 65535)
    3dba:	ce 01       	movw	r24, r28
    3dbc:	87 53       	subi	r24, 0x37	; 55
    3dbe:	9f 4f       	sbci	r25, 0xFF	; 255
    3dc0:	20 e0       	ldi	r18, 0x00	; 0
    3dc2:	3f ef       	ldi	r19, 0xFF	; 255
    3dc4:	4f e7       	ldi	r20, 0x7F	; 127
    3dc6:	57 e4       	ldi	r21, 0x47	; 71
    3dc8:	fc 01       	movw	r30, r24
    3dca:	60 81       	ld	r22, Z
    3dcc:	71 81       	ldd	r23, Z+1	; 0x01
    3dce:	82 81       	ldd	r24, Z+2	; 0x02
    3dd0:	93 81       	ldd	r25, Z+3	; 0x03
    3dd2:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    3dd6:	18 16       	cp	r1, r24
    3dd8:	0c f0       	brlt	.+2      	; 0x3ddc <__stack+0x2cdd>
    3dda:	4a c0       	rjmp	.+148    	; 0x3e70 <__stack+0x2d71>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ddc:	ce 01       	movw	r24, r28
    3dde:	83 57       	subi	r24, 0x73	; 115
    3de0:	9f 4f       	sbci	r25, 0xFF	; 255
    3de2:	20 e0       	ldi	r18, 0x00	; 0
    3de4:	30 e0       	ldi	r19, 0x00	; 0
    3de6:	40 e2       	ldi	r20, 0x20	; 32
    3de8:	51 e4       	ldi	r21, 0x41	; 65
    3dea:	fc 01       	movw	r30, r24
    3dec:	60 81       	ld	r22, Z
    3dee:	71 81       	ldd	r23, Z+1	; 0x01
    3df0:	82 81       	ldd	r24, Z+2	; 0x02
    3df2:	93 81       	ldd	r25, Z+3	; 0x03
    3df4:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    3df8:	dc 01       	movw	r26, r24
    3dfa:	cb 01       	movw	r24, r22
    3dfc:	8e 01       	movw	r16, r28
    3dfe:	03 53       	subi	r16, 0x33	; 51
    3e00:	1f 4f       	sbci	r17, 0xFF	; 255
    3e02:	bc 01       	movw	r22, r24
    3e04:	cd 01       	movw	r24, r26
    3e06:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    3e0a:	dc 01       	movw	r26, r24
    3e0c:	cb 01       	movw	r24, r22
    3e0e:	f8 01       	movw	r30, r16
    3e10:	91 83       	std	Z+1, r25	; 0x01
    3e12:	80 83       	st	Z, r24
    3e14:	24 c0       	rjmp	.+72     	; 0x3e5e <__stack+0x2d5f>
    3e16:	ce 01       	movw	r24, r28
    3e18:	81 53       	subi	r24, 0x31	; 49
    3e1a:	9f 4f       	sbci	r25, 0xFF	; 255
    3e1c:	20 e9       	ldi	r18, 0x90	; 144
    3e1e:	31 e0       	ldi	r19, 0x01	; 1
    3e20:	fc 01       	movw	r30, r24
    3e22:	31 83       	std	Z+1, r19	; 0x01
    3e24:	20 83       	st	Z, r18
    3e26:	ce 01       	movw	r24, r28
    3e28:	81 53       	subi	r24, 0x31	; 49
    3e2a:	9f 4f       	sbci	r25, 0xFF	; 255
    3e2c:	fc 01       	movw	r30, r24
    3e2e:	80 81       	ld	r24, Z
    3e30:	91 81       	ldd	r25, Z+1	; 0x01
    3e32:	01 97       	sbiw	r24, 0x01	; 1
    3e34:	f1 f7       	brne	.-4      	; 0x3e32 <__stack+0x2d33>
    3e36:	9e 01       	movw	r18, r28
    3e38:	21 53       	subi	r18, 0x31	; 49
    3e3a:	3f 4f       	sbci	r19, 0xFF	; 255
    3e3c:	f9 01       	movw	r30, r18
    3e3e:	91 83       	std	Z+1, r25	; 0x01
    3e40:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e42:	ce 01       	movw	r24, r28
    3e44:	83 53       	subi	r24, 0x33	; 51
    3e46:	9f 4f       	sbci	r25, 0xFF	; 255
    3e48:	9e 01       	movw	r18, r28
    3e4a:	23 53       	subi	r18, 0x33	; 51
    3e4c:	3f 4f       	sbci	r19, 0xFF	; 255
    3e4e:	f9 01       	movw	r30, r18
    3e50:	20 81       	ld	r18, Z
    3e52:	31 81       	ldd	r19, Z+1	; 0x01
    3e54:	21 50       	subi	r18, 0x01	; 1
    3e56:	31 09       	sbc	r19, r1
    3e58:	fc 01       	movw	r30, r24
    3e5a:	31 83       	std	Z+1, r19	; 0x01
    3e5c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e5e:	ce 01       	movw	r24, r28
    3e60:	83 53       	subi	r24, 0x33	; 51
    3e62:	9f 4f       	sbci	r25, 0xFF	; 255
    3e64:	fc 01       	movw	r30, r24
    3e66:	80 81       	ld	r24, Z
    3e68:	91 81       	ldd	r25, Z+1	; 0x01
    3e6a:	89 2b       	or	r24, r25
    3e6c:	a1 f6       	brne	.-88     	; 0x3e16 <__stack+0x2d17>
    3e6e:	2c c0       	rjmp	.+88     	; 0x3ec8 <__stack+0x2dc9>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e70:	8e 01       	movw	r16, r28
    3e72:	03 53       	subi	r16, 0x33	; 51
    3e74:	1f 4f       	sbci	r17, 0xFF	; 255
    3e76:	ce 01       	movw	r24, r28
    3e78:	87 53       	subi	r24, 0x37	; 55
    3e7a:	9f 4f       	sbci	r25, 0xFF	; 255
    3e7c:	fc 01       	movw	r30, r24
    3e7e:	60 81       	ld	r22, Z
    3e80:	71 81       	ldd	r23, Z+1	; 0x01
    3e82:	82 81       	ldd	r24, Z+2	; 0x02
    3e84:	93 81       	ldd	r25, Z+3	; 0x03
    3e86:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    3e8a:	dc 01       	movw	r26, r24
    3e8c:	cb 01       	movw	r24, r22
    3e8e:	f8 01       	movw	r30, r16
    3e90:	91 83       	std	Z+1, r25	; 0x01
    3e92:	80 83       	st	Z, r24
    3e94:	ce 01       	movw	r24, r28
    3e96:	8f 52       	subi	r24, 0x2F	; 47
    3e98:	9f 4f       	sbci	r25, 0xFF	; 255
    3e9a:	9e 01       	movw	r18, r28
    3e9c:	23 53       	subi	r18, 0x33	; 51
    3e9e:	3f 4f       	sbci	r19, 0xFF	; 255
    3ea0:	f9 01       	movw	r30, r18
    3ea2:	20 81       	ld	r18, Z
    3ea4:	31 81       	ldd	r19, Z+1	; 0x01
    3ea6:	fc 01       	movw	r30, r24
    3ea8:	31 83       	std	Z+1, r19	; 0x01
    3eaa:	20 83       	st	Z, r18
    3eac:	ce 01       	movw	r24, r28
    3eae:	8f 52       	subi	r24, 0x2F	; 47
    3eb0:	9f 4f       	sbci	r25, 0xFF	; 255
    3eb2:	fc 01       	movw	r30, r24
    3eb4:	80 81       	ld	r24, Z
    3eb6:	91 81       	ldd	r25, Z+1	; 0x01
    3eb8:	01 97       	sbiw	r24, 0x01	; 1
    3eba:	f1 f7       	brne	.-4      	; 0x3eb8 <__stack+0x2db9>
    3ebc:	9e 01       	movw	r18, r28
    3ebe:	2f 52       	subi	r18, 0x2F	; 47
    3ec0:	3f 4f       	sbci	r19, 0xFF	; 255
    3ec2:	f9 01       	movw	r30, r18
    3ec4:	91 83       	std	Z+1, r25	; 0x01
    3ec6:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F760 T50\n");
    3ec8:	80 e7       	ldi	r24, 0x70	; 112
    3eca:	92 e0       	ldi	r25, 0x02	; 2
    3ecc:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    3ed0:	9e 01       	movw	r18, r28
    3ed2:	2f 56       	subi	r18, 0x6F	; 111
    3ed4:	3f 4f       	sbci	r19, 0xFF	; 255
    3ed6:	80 e0       	ldi	r24, 0x00	; 0
    3ed8:	90 e0       	ldi	r25, 0x00	; 0
    3eda:	af ea       	ldi	r26, 0xAF	; 175
    3edc:	b3 e4       	ldi	r27, 0x43	; 67
    3ede:	f9 01       	movw	r30, r18
    3ee0:	80 83       	st	Z, r24
    3ee2:	91 83       	std	Z+1, r25	; 0x01
    3ee4:	a2 83       	std	Z+2, r26	; 0x02
    3ee6:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3ee8:	8e 01       	movw	r16, r28
    3eea:	01 54       	subi	r16, 0x41	; 65
    3eec:	1f 4f       	sbci	r17, 0xFF	; 255
    3eee:	ce 01       	movw	r24, r28
    3ef0:	8f 56       	subi	r24, 0x6F	; 111
    3ef2:	9f 4f       	sbci	r25, 0xFF	; 255
    3ef4:	20 e0       	ldi	r18, 0x00	; 0
    3ef6:	30 e0       	ldi	r19, 0x00	; 0
    3ef8:	4a e7       	ldi	r20, 0x7A	; 122
    3efa:	55 e4       	ldi	r21, 0x45	; 69
    3efc:	fc 01       	movw	r30, r24
    3efe:	60 81       	ld	r22, Z
    3f00:	71 81       	ldd	r23, Z+1	; 0x01
    3f02:	82 81       	ldd	r24, Z+2	; 0x02
    3f04:	93 81       	ldd	r25, Z+3	; 0x03
    3f06:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    3f0a:	dc 01       	movw	r26, r24
    3f0c:	cb 01       	movw	r24, r22
    3f0e:	f8 01       	movw	r30, r16
    3f10:	80 83       	st	Z, r24
    3f12:	91 83       	std	Z+1, r25	; 0x01
    3f14:	a2 83       	std	Z+2, r26	; 0x02
    3f16:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3f18:	ce 01       	movw	r24, r28
    3f1a:	81 54       	subi	r24, 0x41	; 65
    3f1c:	9f 4f       	sbci	r25, 0xFF	; 255
    3f1e:	20 e0       	ldi	r18, 0x00	; 0
    3f20:	30 e0       	ldi	r19, 0x00	; 0
    3f22:	40 e8       	ldi	r20, 0x80	; 128
    3f24:	5f e3       	ldi	r21, 0x3F	; 63
    3f26:	fc 01       	movw	r30, r24
    3f28:	60 81       	ld	r22, Z
    3f2a:	71 81       	ldd	r23, Z+1	; 0x01
    3f2c:	82 81       	ldd	r24, Z+2	; 0x02
    3f2e:	93 81       	ldd	r25, Z+3	; 0x03
    3f30:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    3f34:	88 23       	and	r24, r24
    3f36:	4c f4       	brge	.+18     	; 0x3f4a <__stack+0x2e4b>
		__ticks = 1;
    3f38:	ce 01       	movw	r24, r28
    3f3a:	8d 53       	subi	r24, 0x3D	; 61
    3f3c:	9f 4f       	sbci	r25, 0xFF	; 255
    3f3e:	21 e0       	ldi	r18, 0x01	; 1
    3f40:	30 e0       	ldi	r19, 0x00	; 0
    3f42:	fc 01       	movw	r30, r24
    3f44:	31 83       	std	Z+1, r19	; 0x01
    3f46:	20 83       	st	Z, r18
    3f48:	6d c0       	rjmp	.+218    	; 0x4024 <__stack+0x2f25>
	else if (__tmp > 65535)
    3f4a:	ce 01       	movw	r24, r28
    3f4c:	81 54       	subi	r24, 0x41	; 65
    3f4e:	9f 4f       	sbci	r25, 0xFF	; 255
    3f50:	20 e0       	ldi	r18, 0x00	; 0
    3f52:	3f ef       	ldi	r19, 0xFF	; 255
    3f54:	4f e7       	ldi	r20, 0x7F	; 127
    3f56:	57 e4       	ldi	r21, 0x47	; 71
    3f58:	fc 01       	movw	r30, r24
    3f5a:	60 81       	ld	r22, Z
    3f5c:	71 81       	ldd	r23, Z+1	; 0x01
    3f5e:	82 81       	ldd	r24, Z+2	; 0x02
    3f60:	93 81       	ldd	r25, Z+3	; 0x03
    3f62:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    3f66:	18 16       	cp	r1, r24
    3f68:	0c f0       	brlt	.+2      	; 0x3f6c <__stack+0x2e6d>
    3f6a:	4a c0       	rjmp	.+148    	; 0x4000 <__stack+0x2f01>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f6c:	ce 01       	movw	r24, r28
    3f6e:	8f 56       	subi	r24, 0x6F	; 111
    3f70:	9f 4f       	sbci	r25, 0xFF	; 255
    3f72:	20 e0       	ldi	r18, 0x00	; 0
    3f74:	30 e0       	ldi	r19, 0x00	; 0
    3f76:	40 e2       	ldi	r20, 0x20	; 32
    3f78:	51 e4       	ldi	r21, 0x41	; 65
    3f7a:	fc 01       	movw	r30, r24
    3f7c:	60 81       	ld	r22, Z
    3f7e:	71 81       	ldd	r23, Z+1	; 0x01
    3f80:	82 81       	ldd	r24, Z+2	; 0x02
    3f82:	93 81       	ldd	r25, Z+3	; 0x03
    3f84:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    3f88:	dc 01       	movw	r26, r24
    3f8a:	cb 01       	movw	r24, r22
    3f8c:	8e 01       	movw	r16, r28
    3f8e:	0d 53       	subi	r16, 0x3D	; 61
    3f90:	1f 4f       	sbci	r17, 0xFF	; 255
    3f92:	bc 01       	movw	r22, r24
    3f94:	cd 01       	movw	r24, r26
    3f96:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    3f9a:	dc 01       	movw	r26, r24
    3f9c:	cb 01       	movw	r24, r22
    3f9e:	f8 01       	movw	r30, r16
    3fa0:	91 83       	std	Z+1, r25	; 0x01
    3fa2:	80 83       	st	Z, r24
    3fa4:	24 c0       	rjmp	.+72     	; 0x3fee <__stack+0x2eef>
    3fa6:	ce 01       	movw	r24, r28
    3fa8:	8b 53       	subi	r24, 0x3B	; 59
    3faa:	9f 4f       	sbci	r25, 0xFF	; 255
    3fac:	20 e9       	ldi	r18, 0x90	; 144
    3fae:	31 e0       	ldi	r19, 0x01	; 1
    3fb0:	fc 01       	movw	r30, r24
    3fb2:	31 83       	std	Z+1, r19	; 0x01
    3fb4:	20 83       	st	Z, r18
    3fb6:	ce 01       	movw	r24, r28
    3fb8:	8b 53       	subi	r24, 0x3B	; 59
    3fba:	9f 4f       	sbci	r25, 0xFF	; 255
    3fbc:	fc 01       	movw	r30, r24
    3fbe:	80 81       	ld	r24, Z
    3fc0:	91 81       	ldd	r25, Z+1	; 0x01
    3fc2:	01 97       	sbiw	r24, 0x01	; 1
    3fc4:	f1 f7       	brne	.-4      	; 0x3fc2 <__stack+0x2ec3>
    3fc6:	9e 01       	movw	r18, r28
    3fc8:	2b 53       	subi	r18, 0x3B	; 59
    3fca:	3f 4f       	sbci	r19, 0xFF	; 255
    3fcc:	f9 01       	movw	r30, r18
    3fce:	91 83       	std	Z+1, r25	; 0x01
    3fd0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3fd2:	ce 01       	movw	r24, r28
    3fd4:	8d 53       	subi	r24, 0x3D	; 61
    3fd6:	9f 4f       	sbci	r25, 0xFF	; 255
    3fd8:	9e 01       	movw	r18, r28
    3fda:	2d 53       	subi	r18, 0x3D	; 61
    3fdc:	3f 4f       	sbci	r19, 0xFF	; 255
    3fde:	f9 01       	movw	r30, r18
    3fe0:	20 81       	ld	r18, Z
    3fe2:	31 81       	ldd	r19, Z+1	; 0x01
    3fe4:	21 50       	subi	r18, 0x01	; 1
    3fe6:	31 09       	sbc	r19, r1
    3fe8:	fc 01       	movw	r30, r24
    3fea:	31 83       	std	Z+1, r19	; 0x01
    3fec:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3fee:	ce 01       	movw	r24, r28
    3ff0:	8d 53       	subi	r24, 0x3D	; 61
    3ff2:	9f 4f       	sbci	r25, 0xFF	; 255
    3ff4:	fc 01       	movw	r30, r24
    3ff6:	80 81       	ld	r24, Z
    3ff8:	91 81       	ldd	r25, Z+1	; 0x01
    3ffa:	89 2b       	or	r24, r25
    3ffc:	a1 f6       	brne	.-88     	; 0x3fa6 <__stack+0x2ea7>
    3ffe:	2c c0       	rjmp	.+88     	; 0x4058 <__stack+0x2f59>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4000:	8e 01       	movw	r16, r28
    4002:	0d 53       	subi	r16, 0x3D	; 61
    4004:	1f 4f       	sbci	r17, 0xFF	; 255
    4006:	ce 01       	movw	r24, r28
    4008:	81 54       	subi	r24, 0x41	; 65
    400a:	9f 4f       	sbci	r25, 0xFF	; 255
    400c:	fc 01       	movw	r30, r24
    400e:	60 81       	ld	r22, Z
    4010:	71 81       	ldd	r23, Z+1	; 0x01
    4012:	82 81       	ldd	r24, Z+2	; 0x02
    4014:	93 81       	ldd	r25, Z+3	; 0x03
    4016:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    401a:	dc 01       	movw	r26, r24
    401c:	cb 01       	movw	r24, r22
    401e:	f8 01       	movw	r30, r16
    4020:	91 83       	std	Z+1, r25	; 0x01
    4022:	80 83       	st	Z, r24
    4024:	ce 01       	movw	r24, r28
    4026:	89 53       	subi	r24, 0x39	; 57
    4028:	9f 4f       	sbci	r25, 0xFF	; 255
    402a:	9e 01       	movw	r18, r28
    402c:	2d 53       	subi	r18, 0x3D	; 61
    402e:	3f 4f       	sbci	r19, 0xFF	; 255
    4030:	f9 01       	movw	r30, r18
    4032:	20 81       	ld	r18, Z
    4034:	31 81       	ldd	r19, Z+1	; 0x01
    4036:	fc 01       	movw	r30, r24
    4038:	31 83       	std	Z+1, r19	; 0x01
    403a:	20 83       	st	Z, r18
    403c:	ce 01       	movw	r24, r28
    403e:	89 53       	subi	r24, 0x39	; 57
    4040:	9f 4f       	sbci	r25, 0xFF	; 255
    4042:	fc 01       	movw	r30, r24
    4044:	80 81       	ld	r24, Z
    4046:	91 81       	ldd	r25, Z+1	; 0x01
    4048:	01 97       	sbiw	r24, 0x01	; 1
    404a:	f1 f7       	brne	.-4      	; 0x4048 <__stack+0x2f49>
    404c:	9e 01       	movw	r18, r28
    404e:	29 53       	subi	r18, 0x39	; 57
    4050:	3f 4f       	sbci	r19, 0xFF	; 255
    4052:	f9 01       	movw	r30, r18
    4054:	91 83       	std	Z+1, r25	; 0x01
    4056:	80 83       	st	Z, r24
	_delay_ms(350);
	to_uARM("M2210 F660 T80\n");
    4058:	80 e6       	ldi	r24, 0x60	; 96
    405a:	92 e0       	ldi	r25, 0x02	; 2
    405c:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    4060:	9e 01       	movw	r18, r28
    4062:	2b 56       	subi	r18, 0x6B	; 107
    4064:	3f 4f       	sbci	r19, 0xFF	; 255
    4066:	80 e0       	ldi	r24, 0x00	; 0
    4068:	90 e0       	ldi	r25, 0x00	; 0
    406a:	a6 e9       	ldi	r26, 0x96	; 150
    406c:	b3 e4       	ldi	r27, 0x43	; 67
    406e:	f9 01       	movw	r30, r18
    4070:	80 83       	st	Z, r24
    4072:	91 83       	std	Z+1, r25	; 0x01
    4074:	a2 83       	std	Z+2, r26	; 0x02
    4076:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4078:	8e 01       	movw	r16, r28
    407a:	0b 54       	subi	r16, 0x4B	; 75
    407c:	1f 4f       	sbci	r17, 0xFF	; 255
    407e:	ce 01       	movw	r24, r28
    4080:	8b 56       	subi	r24, 0x6B	; 107
    4082:	9f 4f       	sbci	r25, 0xFF	; 255
    4084:	20 e0       	ldi	r18, 0x00	; 0
    4086:	30 e0       	ldi	r19, 0x00	; 0
    4088:	4a e7       	ldi	r20, 0x7A	; 122
    408a:	55 e4       	ldi	r21, 0x45	; 69
    408c:	fc 01       	movw	r30, r24
    408e:	60 81       	ld	r22, Z
    4090:	71 81       	ldd	r23, Z+1	; 0x01
    4092:	82 81       	ldd	r24, Z+2	; 0x02
    4094:	93 81       	ldd	r25, Z+3	; 0x03
    4096:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    409a:	dc 01       	movw	r26, r24
    409c:	cb 01       	movw	r24, r22
    409e:	f8 01       	movw	r30, r16
    40a0:	80 83       	st	Z, r24
    40a2:	91 83       	std	Z+1, r25	; 0x01
    40a4:	a2 83       	std	Z+2, r26	; 0x02
    40a6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    40a8:	ce 01       	movw	r24, r28
    40aa:	8b 54       	subi	r24, 0x4B	; 75
    40ac:	9f 4f       	sbci	r25, 0xFF	; 255
    40ae:	20 e0       	ldi	r18, 0x00	; 0
    40b0:	30 e0       	ldi	r19, 0x00	; 0
    40b2:	40 e8       	ldi	r20, 0x80	; 128
    40b4:	5f e3       	ldi	r21, 0x3F	; 63
    40b6:	fc 01       	movw	r30, r24
    40b8:	60 81       	ld	r22, Z
    40ba:	71 81       	ldd	r23, Z+1	; 0x01
    40bc:	82 81       	ldd	r24, Z+2	; 0x02
    40be:	93 81       	ldd	r25, Z+3	; 0x03
    40c0:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    40c4:	88 23       	and	r24, r24
    40c6:	4c f4       	brge	.+18     	; 0x40da <__stack+0x2fdb>
		__ticks = 1;
    40c8:	ce 01       	movw	r24, r28
    40ca:	87 54       	subi	r24, 0x47	; 71
    40cc:	9f 4f       	sbci	r25, 0xFF	; 255
    40ce:	21 e0       	ldi	r18, 0x01	; 1
    40d0:	30 e0       	ldi	r19, 0x00	; 0
    40d2:	fc 01       	movw	r30, r24
    40d4:	31 83       	std	Z+1, r19	; 0x01
    40d6:	20 83       	st	Z, r18
    40d8:	6d c0       	rjmp	.+218    	; 0x41b4 <__stack+0x30b5>
	else if (__tmp > 65535)
    40da:	ce 01       	movw	r24, r28
    40dc:	8b 54       	subi	r24, 0x4B	; 75
    40de:	9f 4f       	sbci	r25, 0xFF	; 255
    40e0:	20 e0       	ldi	r18, 0x00	; 0
    40e2:	3f ef       	ldi	r19, 0xFF	; 255
    40e4:	4f e7       	ldi	r20, 0x7F	; 127
    40e6:	57 e4       	ldi	r21, 0x47	; 71
    40e8:	fc 01       	movw	r30, r24
    40ea:	60 81       	ld	r22, Z
    40ec:	71 81       	ldd	r23, Z+1	; 0x01
    40ee:	82 81       	ldd	r24, Z+2	; 0x02
    40f0:	93 81       	ldd	r25, Z+3	; 0x03
    40f2:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    40f6:	18 16       	cp	r1, r24
    40f8:	0c f0       	brlt	.+2      	; 0x40fc <__stack+0x2ffd>
    40fa:	4a c0       	rjmp	.+148    	; 0x4190 <__stack+0x3091>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    40fc:	ce 01       	movw	r24, r28
    40fe:	8b 56       	subi	r24, 0x6B	; 107
    4100:	9f 4f       	sbci	r25, 0xFF	; 255
    4102:	20 e0       	ldi	r18, 0x00	; 0
    4104:	30 e0       	ldi	r19, 0x00	; 0
    4106:	40 e2       	ldi	r20, 0x20	; 32
    4108:	51 e4       	ldi	r21, 0x41	; 65
    410a:	fc 01       	movw	r30, r24
    410c:	60 81       	ld	r22, Z
    410e:	71 81       	ldd	r23, Z+1	; 0x01
    4110:	82 81       	ldd	r24, Z+2	; 0x02
    4112:	93 81       	ldd	r25, Z+3	; 0x03
    4114:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    4118:	dc 01       	movw	r26, r24
    411a:	cb 01       	movw	r24, r22
    411c:	8e 01       	movw	r16, r28
    411e:	07 54       	subi	r16, 0x47	; 71
    4120:	1f 4f       	sbci	r17, 0xFF	; 255
    4122:	bc 01       	movw	r22, r24
    4124:	cd 01       	movw	r24, r26
    4126:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    412a:	dc 01       	movw	r26, r24
    412c:	cb 01       	movw	r24, r22
    412e:	f8 01       	movw	r30, r16
    4130:	91 83       	std	Z+1, r25	; 0x01
    4132:	80 83       	st	Z, r24
    4134:	24 c0       	rjmp	.+72     	; 0x417e <__stack+0x307f>
    4136:	ce 01       	movw	r24, r28
    4138:	85 54       	subi	r24, 0x45	; 69
    413a:	9f 4f       	sbci	r25, 0xFF	; 255
    413c:	20 e9       	ldi	r18, 0x90	; 144
    413e:	31 e0       	ldi	r19, 0x01	; 1
    4140:	fc 01       	movw	r30, r24
    4142:	31 83       	std	Z+1, r19	; 0x01
    4144:	20 83       	st	Z, r18
    4146:	ce 01       	movw	r24, r28
    4148:	85 54       	subi	r24, 0x45	; 69
    414a:	9f 4f       	sbci	r25, 0xFF	; 255
    414c:	fc 01       	movw	r30, r24
    414e:	80 81       	ld	r24, Z
    4150:	91 81       	ldd	r25, Z+1	; 0x01
    4152:	01 97       	sbiw	r24, 0x01	; 1
    4154:	f1 f7       	brne	.-4      	; 0x4152 <__stack+0x3053>
    4156:	9e 01       	movw	r18, r28
    4158:	25 54       	subi	r18, 0x45	; 69
    415a:	3f 4f       	sbci	r19, 0xFF	; 255
    415c:	f9 01       	movw	r30, r18
    415e:	91 83       	std	Z+1, r25	; 0x01
    4160:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4162:	ce 01       	movw	r24, r28
    4164:	87 54       	subi	r24, 0x47	; 71
    4166:	9f 4f       	sbci	r25, 0xFF	; 255
    4168:	9e 01       	movw	r18, r28
    416a:	27 54       	subi	r18, 0x47	; 71
    416c:	3f 4f       	sbci	r19, 0xFF	; 255
    416e:	f9 01       	movw	r30, r18
    4170:	20 81       	ld	r18, Z
    4172:	31 81       	ldd	r19, Z+1	; 0x01
    4174:	21 50       	subi	r18, 0x01	; 1
    4176:	31 09       	sbc	r19, r1
    4178:	fc 01       	movw	r30, r24
    417a:	31 83       	std	Z+1, r19	; 0x01
    417c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    417e:	ce 01       	movw	r24, r28
    4180:	87 54       	subi	r24, 0x47	; 71
    4182:	9f 4f       	sbci	r25, 0xFF	; 255
    4184:	fc 01       	movw	r30, r24
    4186:	80 81       	ld	r24, Z
    4188:	91 81       	ldd	r25, Z+1	; 0x01
    418a:	89 2b       	or	r24, r25
    418c:	a1 f6       	brne	.-88     	; 0x4136 <__stack+0x3037>
    418e:	2c c0       	rjmp	.+88     	; 0x41e8 <__stack+0x30e9>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4190:	8e 01       	movw	r16, r28
    4192:	07 54       	subi	r16, 0x47	; 71
    4194:	1f 4f       	sbci	r17, 0xFF	; 255
    4196:	ce 01       	movw	r24, r28
    4198:	8b 54       	subi	r24, 0x4B	; 75
    419a:	9f 4f       	sbci	r25, 0xFF	; 255
    419c:	fc 01       	movw	r30, r24
    419e:	60 81       	ld	r22, Z
    41a0:	71 81       	ldd	r23, Z+1	; 0x01
    41a2:	82 81       	ldd	r24, Z+2	; 0x02
    41a4:	93 81       	ldd	r25, Z+3	; 0x03
    41a6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    41aa:	dc 01       	movw	r26, r24
    41ac:	cb 01       	movw	r24, r22
    41ae:	f8 01       	movw	r30, r16
    41b0:	91 83       	std	Z+1, r25	; 0x01
    41b2:	80 83       	st	Z, r24
    41b4:	ce 01       	movw	r24, r28
    41b6:	83 54       	subi	r24, 0x43	; 67
    41b8:	9f 4f       	sbci	r25, 0xFF	; 255
    41ba:	9e 01       	movw	r18, r28
    41bc:	27 54       	subi	r18, 0x47	; 71
    41be:	3f 4f       	sbci	r19, 0xFF	; 255
    41c0:	f9 01       	movw	r30, r18
    41c2:	20 81       	ld	r18, Z
    41c4:	31 81       	ldd	r19, Z+1	; 0x01
    41c6:	fc 01       	movw	r30, r24
    41c8:	31 83       	std	Z+1, r19	; 0x01
    41ca:	20 83       	st	Z, r18
    41cc:	ce 01       	movw	r24, r28
    41ce:	83 54       	subi	r24, 0x43	; 67
    41d0:	9f 4f       	sbci	r25, 0xFF	; 255
    41d2:	fc 01       	movw	r30, r24
    41d4:	80 81       	ld	r24, Z
    41d6:	91 81       	ldd	r25, Z+1	; 0x01
    41d8:	01 97       	sbiw	r24, 0x01	; 1
    41da:	f1 f7       	brne	.-4      	; 0x41d8 <__stack+0x30d9>
    41dc:	9e 01       	movw	r18, r28
    41de:	23 54       	subi	r18, 0x43	; 67
    41e0:	3f 4f       	sbci	r19, 0xFF	; 255
    41e2:	f9 01       	movw	r30, r18
    41e4:	91 83       	std	Z+1, r25	; 0x01
    41e6:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F520 T80\n");
    41e8:	80 ea       	ldi	r24, 0xA0	; 160
    41ea:	92 e0       	ldi	r25, 0x02	; 2
    41ec:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    41f0:	9e 01       	movw	r18, r28
    41f2:	27 56       	subi	r18, 0x67	; 103
    41f4:	3f 4f       	sbci	r19, 0xFF	; 255
    41f6:	80 e0       	ldi	r24, 0x00	; 0
    41f8:	90 e0       	ldi	r25, 0x00	; 0
    41fa:	a6 e1       	ldi	r26, 0x16	; 22
    41fc:	b3 e4       	ldi	r27, 0x43	; 67
    41fe:	f9 01       	movw	r30, r18
    4200:	80 83       	st	Z, r24
    4202:	91 83       	std	Z+1, r25	; 0x01
    4204:	a2 83       	std	Z+2, r26	; 0x02
    4206:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4208:	8e 01       	movw	r16, r28
    420a:	05 55       	subi	r16, 0x55	; 85
    420c:	1f 4f       	sbci	r17, 0xFF	; 255
    420e:	ce 01       	movw	r24, r28
    4210:	87 56       	subi	r24, 0x67	; 103
    4212:	9f 4f       	sbci	r25, 0xFF	; 255
    4214:	20 e0       	ldi	r18, 0x00	; 0
    4216:	30 e0       	ldi	r19, 0x00	; 0
    4218:	4a e7       	ldi	r20, 0x7A	; 122
    421a:	55 e4       	ldi	r21, 0x45	; 69
    421c:	fc 01       	movw	r30, r24
    421e:	60 81       	ld	r22, Z
    4220:	71 81       	ldd	r23, Z+1	; 0x01
    4222:	82 81       	ldd	r24, Z+2	; 0x02
    4224:	93 81       	ldd	r25, Z+3	; 0x03
    4226:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    422a:	dc 01       	movw	r26, r24
    422c:	cb 01       	movw	r24, r22
    422e:	f8 01       	movw	r30, r16
    4230:	80 83       	st	Z, r24
    4232:	91 83       	std	Z+1, r25	; 0x01
    4234:	a2 83       	std	Z+2, r26	; 0x02
    4236:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4238:	ce 01       	movw	r24, r28
    423a:	85 55       	subi	r24, 0x55	; 85
    423c:	9f 4f       	sbci	r25, 0xFF	; 255
    423e:	20 e0       	ldi	r18, 0x00	; 0
    4240:	30 e0       	ldi	r19, 0x00	; 0
    4242:	40 e8       	ldi	r20, 0x80	; 128
    4244:	5f e3       	ldi	r21, 0x3F	; 63
    4246:	fc 01       	movw	r30, r24
    4248:	60 81       	ld	r22, Z
    424a:	71 81       	ldd	r23, Z+1	; 0x01
    424c:	82 81       	ldd	r24, Z+2	; 0x02
    424e:	93 81       	ldd	r25, Z+3	; 0x03
    4250:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    4254:	88 23       	and	r24, r24
    4256:	4c f4       	brge	.+18     	; 0x426a <__stack+0x316b>
		__ticks = 1;
    4258:	ce 01       	movw	r24, r28
    425a:	81 55       	subi	r24, 0x51	; 81
    425c:	9f 4f       	sbci	r25, 0xFF	; 255
    425e:	21 e0       	ldi	r18, 0x01	; 1
    4260:	30 e0       	ldi	r19, 0x00	; 0
    4262:	fc 01       	movw	r30, r24
    4264:	31 83       	std	Z+1, r19	; 0x01
    4266:	20 83       	st	Z, r18
    4268:	6d c0       	rjmp	.+218    	; 0x4344 <__stack+0x3245>
	else if (__tmp > 65535)
    426a:	ce 01       	movw	r24, r28
    426c:	85 55       	subi	r24, 0x55	; 85
    426e:	9f 4f       	sbci	r25, 0xFF	; 255
    4270:	20 e0       	ldi	r18, 0x00	; 0
    4272:	3f ef       	ldi	r19, 0xFF	; 255
    4274:	4f e7       	ldi	r20, 0x7F	; 127
    4276:	57 e4       	ldi	r21, 0x47	; 71
    4278:	fc 01       	movw	r30, r24
    427a:	60 81       	ld	r22, Z
    427c:	71 81       	ldd	r23, Z+1	; 0x01
    427e:	82 81       	ldd	r24, Z+2	; 0x02
    4280:	93 81       	ldd	r25, Z+3	; 0x03
    4282:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    4286:	18 16       	cp	r1, r24
    4288:	0c f0       	brlt	.+2      	; 0x428c <__stack+0x318d>
    428a:	4a c0       	rjmp	.+148    	; 0x4320 <__stack+0x3221>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    428c:	ce 01       	movw	r24, r28
    428e:	87 56       	subi	r24, 0x67	; 103
    4290:	9f 4f       	sbci	r25, 0xFF	; 255
    4292:	20 e0       	ldi	r18, 0x00	; 0
    4294:	30 e0       	ldi	r19, 0x00	; 0
    4296:	40 e2       	ldi	r20, 0x20	; 32
    4298:	51 e4       	ldi	r21, 0x41	; 65
    429a:	fc 01       	movw	r30, r24
    429c:	60 81       	ld	r22, Z
    429e:	71 81       	ldd	r23, Z+1	; 0x01
    42a0:	82 81       	ldd	r24, Z+2	; 0x02
    42a2:	93 81       	ldd	r25, Z+3	; 0x03
    42a4:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    42a8:	dc 01       	movw	r26, r24
    42aa:	cb 01       	movw	r24, r22
    42ac:	8e 01       	movw	r16, r28
    42ae:	01 55       	subi	r16, 0x51	; 81
    42b0:	1f 4f       	sbci	r17, 0xFF	; 255
    42b2:	bc 01       	movw	r22, r24
    42b4:	cd 01       	movw	r24, r26
    42b6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    42ba:	dc 01       	movw	r26, r24
    42bc:	cb 01       	movw	r24, r22
    42be:	f8 01       	movw	r30, r16
    42c0:	91 83       	std	Z+1, r25	; 0x01
    42c2:	80 83       	st	Z, r24
    42c4:	24 c0       	rjmp	.+72     	; 0x430e <__stack+0x320f>
    42c6:	ce 01       	movw	r24, r28
    42c8:	8f 54       	subi	r24, 0x4F	; 79
    42ca:	9f 4f       	sbci	r25, 0xFF	; 255
    42cc:	20 e9       	ldi	r18, 0x90	; 144
    42ce:	31 e0       	ldi	r19, 0x01	; 1
    42d0:	fc 01       	movw	r30, r24
    42d2:	31 83       	std	Z+1, r19	; 0x01
    42d4:	20 83       	st	Z, r18
    42d6:	ce 01       	movw	r24, r28
    42d8:	8f 54       	subi	r24, 0x4F	; 79
    42da:	9f 4f       	sbci	r25, 0xFF	; 255
    42dc:	fc 01       	movw	r30, r24
    42de:	80 81       	ld	r24, Z
    42e0:	91 81       	ldd	r25, Z+1	; 0x01
    42e2:	01 97       	sbiw	r24, 0x01	; 1
    42e4:	f1 f7       	brne	.-4      	; 0x42e2 <__stack+0x31e3>
    42e6:	9e 01       	movw	r18, r28
    42e8:	2f 54       	subi	r18, 0x4F	; 79
    42ea:	3f 4f       	sbci	r19, 0xFF	; 255
    42ec:	f9 01       	movw	r30, r18
    42ee:	91 83       	std	Z+1, r25	; 0x01
    42f0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    42f2:	ce 01       	movw	r24, r28
    42f4:	81 55       	subi	r24, 0x51	; 81
    42f6:	9f 4f       	sbci	r25, 0xFF	; 255
    42f8:	9e 01       	movw	r18, r28
    42fa:	21 55       	subi	r18, 0x51	; 81
    42fc:	3f 4f       	sbci	r19, 0xFF	; 255
    42fe:	f9 01       	movw	r30, r18
    4300:	20 81       	ld	r18, Z
    4302:	31 81       	ldd	r19, Z+1	; 0x01
    4304:	21 50       	subi	r18, 0x01	; 1
    4306:	31 09       	sbc	r19, r1
    4308:	fc 01       	movw	r30, r24
    430a:	31 83       	std	Z+1, r19	; 0x01
    430c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    430e:	ce 01       	movw	r24, r28
    4310:	81 55       	subi	r24, 0x51	; 81
    4312:	9f 4f       	sbci	r25, 0xFF	; 255
    4314:	fc 01       	movw	r30, r24
    4316:	80 81       	ld	r24, Z
    4318:	91 81       	ldd	r25, Z+1	; 0x01
    431a:	89 2b       	or	r24, r25
    431c:	a1 f6       	brne	.-88     	; 0x42c6 <__stack+0x31c7>
    431e:	2c c0       	rjmp	.+88     	; 0x4378 <__stack+0x3279>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4320:	8e 01       	movw	r16, r28
    4322:	01 55       	subi	r16, 0x51	; 81
    4324:	1f 4f       	sbci	r17, 0xFF	; 255
    4326:	ce 01       	movw	r24, r28
    4328:	85 55       	subi	r24, 0x55	; 85
    432a:	9f 4f       	sbci	r25, 0xFF	; 255
    432c:	fc 01       	movw	r30, r24
    432e:	60 81       	ld	r22, Z
    4330:	71 81       	ldd	r23, Z+1	; 0x01
    4332:	82 81       	ldd	r24, Z+2	; 0x02
    4334:	93 81       	ldd	r25, Z+3	; 0x03
    4336:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    433a:	dc 01       	movw	r26, r24
    433c:	cb 01       	movw	r24, r22
    433e:	f8 01       	movw	r30, r16
    4340:	91 83       	std	Z+1, r25	; 0x01
    4342:	80 83       	st	Z, r24
    4344:	ce 01       	movw	r24, r28
    4346:	8d 54       	subi	r24, 0x4D	; 77
    4348:	9f 4f       	sbci	r25, 0xFF	; 255
    434a:	9e 01       	movw	r18, r28
    434c:	21 55       	subi	r18, 0x51	; 81
    434e:	3f 4f       	sbci	r19, 0xFF	; 255
    4350:	f9 01       	movw	r30, r18
    4352:	20 81       	ld	r18, Z
    4354:	31 81       	ldd	r19, Z+1	; 0x01
    4356:	fc 01       	movw	r30, r24
    4358:	31 83       	std	Z+1, r19	; 0x01
    435a:	20 83       	st	Z, r18
    435c:	ce 01       	movw	r24, r28
    435e:	8d 54       	subi	r24, 0x4D	; 77
    4360:	9f 4f       	sbci	r25, 0xFF	; 255
    4362:	fc 01       	movw	r30, r24
    4364:	80 81       	ld	r24, Z
    4366:	91 81       	ldd	r25, Z+1	; 0x01
    4368:	01 97       	sbiw	r24, 0x01	; 1
    436a:	f1 f7       	brne	.-4      	; 0x4368 <__stack+0x3269>
    436c:	9e 01       	movw	r18, r28
    436e:	2d 54       	subi	r18, 0x4D	; 77
    4370:	3f 4f       	sbci	r19, 0xFF	; 255
    4372:	f9 01       	movw	r30, r18
    4374:	91 83       	std	Z+1, r25	; 0x01
    4376:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F580 T80\n");
    4378:	80 eb       	ldi	r24, 0xB0	; 176
    437a:	92 e0       	ldi	r25, 0x02	; 2
    437c:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    4380:	9e 01       	movw	r18, r28
    4382:	23 56       	subi	r18, 0x63	; 99
    4384:	3f 4f       	sbci	r19, 0xFF	; 255
    4386:	80 e0       	ldi	r24, 0x00	; 0
    4388:	90 e0       	ldi	r25, 0x00	; 0
    438a:	a6 e1       	ldi	r26, 0x16	; 22
    438c:	b3 e4       	ldi	r27, 0x43	; 67
    438e:	f9 01       	movw	r30, r18
    4390:	80 83       	st	Z, r24
    4392:	91 83       	std	Z+1, r25	; 0x01
    4394:	a2 83       	std	Z+2, r26	; 0x02
    4396:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4398:	8e 01       	movw	r16, r28
    439a:	0f 55       	subi	r16, 0x5F	; 95
    439c:	1f 4f       	sbci	r17, 0xFF	; 255
    439e:	ce 01       	movw	r24, r28
    43a0:	83 56       	subi	r24, 0x63	; 99
    43a2:	9f 4f       	sbci	r25, 0xFF	; 255
    43a4:	20 e0       	ldi	r18, 0x00	; 0
    43a6:	30 e0       	ldi	r19, 0x00	; 0
    43a8:	4a e7       	ldi	r20, 0x7A	; 122
    43aa:	55 e4       	ldi	r21, 0x45	; 69
    43ac:	fc 01       	movw	r30, r24
    43ae:	60 81       	ld	r22, Z
    43b0:	71 81       	ldd	r23, Z+1	; 0x01
    43b2:	82 81       	ldd	r24, Z+2	; 0x02
    43b4:	93 81       	ldd	r25, Z+3	; 0x03
    43b6:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    43ba:	dc 01       	movw	r26, r24
    43bc:	cb 01       	movw	r24, r22
    43be:	f8 01       	movw	r30, r16
    43c0:	80 83       	st	Z, r24
    43c2:	91 83       	std	Z+1, r25	; 0x01
    43c4:	a2 83       	std	Z+2, r26	; 0x02
    43c6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    43c8:	ce 01       	movw	r24, r28
    43ca:	8f 55       	subi	r24, 0x5F	; 95
    43cc:	9f 4f       	sbci	r25, 0xFF	; 255
    43ce:	20 e0       	ldi	r18, 0x00	; 0
    43d0:	30 e0       	ldi	r19, 0x00	; 0
    43d2:	40 e8       	ldi	r20, 0x80	; 128
    43d4:	5f e3       	ldi	r21, 0x3F	; 63
    43d6:	fc 01       	movw	r30, r24
    43d8:	60 81       	ld	r22, Z
    43da:	71 81       	ldd	r23, Z+1	; 0x01
    43dc:	82 81       	ldd	r24, Z+2	; 0x02
    43de:	93 81       	ldd	r25, Z+3	; 0x03
    43e0:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    43e4:	88 23       	and	r24, r24
    43e6:	4c f4       	brge	.+18     	; 0x43fa <__stack+0x32fb>
		__ticks = 1;
    43e8:	ce 01       	movw	r24, r28
    43ea:	8b 55       	subi	r24, 0x5B	; 91
    43ec:	9f 4f       	sbci	r25, 0xFF	; 255
    43ee:	21 e0       	ldi	r18, 0x01	; 1
    43f0:	30 e0       	ldi	r19, 0x00	; 0
    43f2:	fc 01       	movw	r30, r24
    43f4:	31 83       	std	Z+1, r19	; 0x01
    43f6:	20 83       	st	Z, r18
    43f8:	6d c0       	rjmp	.+218    	; 0x44d4 <__stack+0x33d5>
	else if (__tmp > 65535)
    43fa:	ce 01       	movw	r24, r28
    43fc:	8f 55       	subi	r24, 0x5F	; 95
    43fe:	9f 4f       	sbci	r25, 0xFF	; 255
    4400:	20 e0       	ldi	r18, 0x00	; 0
    4402:	3f ef       	ldi	r19, 0xFF	; 255
    4404:	4f e7       	ldi	r20, 0x7F	; 127
    4406:	57 e4       	ldi	r21, 0x47	; 71
    4408:	fc 01       	movw	r30, r24
    440a:	60 81       	ld	r22, Z
    440c:	71 81       	ldd	r23, Z+1	; 0x01
    440e:	82 81       	ldd	r24, Z+2	; 0x02
    4410:	93 81       	ldd	r25, Z+3	; 0x03
    4412:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    4416:	18 16       	cp	r1, r24
    4418:	0c f0       	brlt	.+2      	; 0x441c <__stack+0x331d>
    441a:	4a c0       	rjmp	.+148    	; 0x44b0 <__stack+0x33b1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    441c:	ce 01       	movw	r24, r28
    441e:	83 56       	subi	r24, 0x63	; 99
    4420:	9f 4f       	sbci	r25, 0xFF	; 255
    4422:	20 e0       	ldi	r18, 0x00	; 0
    4424:	30 e0       	ldi	r19, 0x00	; 0
    4426:	40 e2       	ldi	r20, 0x20	; 32
    4428:	51 e4       	ldi	r21, 0x41	; 65
    442a:	fc 01       	movw	r30, r24
    442c:	60 81       	ld	r22, Z
    442e:	71 81       	ldd	r23, Z+1	; 0x01
    4430:	82 81       	ldd	r24, Z+2	; 0x02
    4432:	93 81       	ldd	r25, Z+3	; 0x03
    4434:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    4438:	dc 01       	movw	r26, r24
    443a:	cb 01       	movw	r24, r22
    443c:	8e 01       	movw	r16, r28
    443e:	0b 55       	subi	r16, 0x5B	; 91
    4440:	1f 4f       	sbci	r17, 0xFF	; 255
    4442:	bc 01       	movw	r22, r24
    4444:	cd 01       	movw	r24, r26
    4446:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    444a:	dc 01       	movw	r26, r24
    444c:	cb 01       	movw	r24, r22
    444e:	f8 01       	movw	r30, r16
    4450:	91 83       	std	Z+1, r25	; 0x01
    4452:	80 83       	st	Z, r24
    4454:	24 c0       	rjmp	.+72     	; 0x449e <__stack+0x339f>
    4456:	ce 01       	movw	r24, r28
    4458:	89 55       	subi	r24, 0x59	; 89
    445a:	9f 4f       	sbci	r25, 0xFF	; 255
    445c:	20 e9       	ldi	r18, 0x90	; 144
    445e:	31 e0       	ldi	r19, 0x01	; 1
    4460:	fc 01       	movw	r30, r24
    4462:	31 83       	std	Z+1, r19	; 0x01
    4464:	20 83       	st	Z, r18
    4466:	ce 01       	movw	r24, r28
    4468:	89 55       	subi	r24, 0x59	; 89
    446a:	9f 4f       	sbci	r25, 0xFF	; 255
    446c:	fc 01       	movw	r30, r24
    446e:	80 81       	ld	r24, Z
    4470:	91 81       	ldd	r25, Z+1	; 0x01
    4472:	01 97       	sbiw	r24, 0x01	; 1
    4474:	f1 f7       	brne	.-4      	; 0x4472 <__stack+0x3373>
    4476:	9e 01       	movw	r18, r28
    4478:	29 55       	subi	r18, 0x59	; 89
    447a:	3f 4f       	sbci	r19, 0xFF	; 255
    447c:	f9 01       	movw	r30, r18
    447e:	91 83       	std	Z+1, r25	; 0x01
    4480:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4482:	ce 01       	movw	r24, r28
    4484:	8b 55       	subi	r24, 0x5B	; 91
    4486:	9f 4f       	sbci	r25, 0xFF	; 255
    4488:	9e 01       	movw	r18, r28
    448a:	2b 55       	subi	r18, 0x5B	; 91
    448c:	3f 4f       	sbci	r19, 0xFF	; 255
    448e:	f9 01       	movw	r30, r18
    4490:	20 81       	ld	r18, Z
    4492:	31 81       	ldd	r19, Z+1	; 0x01
    4494:	21 50       	subi	r18, 0x01	; 1
    4496:	31 09       	sbc	r19, r1
    4498:	fc 01       	movw	r30, r24
    449a:	31 83       	std	Z+1, r19	; 0x01
    449c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    449e:	ce 01       	movw	r24, r28
    44a0:	8b 55       	subi	r24, 0x5B	; 91
    44a2:	9f 4f       	sbci	r25, 0xFF	; 255
    44a4:	fc 01       	movw	r30, r24
    44a6:	80 81       	ld	r24, Z
    44a8:	91 81       	ldd	r25, Z+1	; 0x01
    44aa:	89 2b       	or	r24, r25
    44ac:	a1 f6       	brne	.-88     	; 0x4456 <__stack+0x3357>
    44ae:	2c c0       	rjmp	.+88     	; 0x4508 <__stack+0x3409>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    44b0:	8e 01       	movw	r16, r28
    44b2:	0b 55       	subi	r16, 0x5B	; 91
    44b4:	1f 4f       	sbci	r17, 0xFF	; 255
    44b6:	ce 01       	movw	r24, r28
    44b8:	8f 55       	subi	r24, 0x5F	; 95
    44ba:	9f 4f       	sbci	r25, 0xFF	; 255
    44bc:	fc 01       	movw	r30, r24
    44be:	60 81       	ld	r22, Z
    44c0:	71 81       	ldd	r23, Z+1	; 0x01
    44c2:	82 81       	ldd	r24, Z+2	; 0x02
    44c4:	93 81       	ldd	r25, Z+3	; 0x03
    44c6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    44ca:	dc 01       	movw	r26, r24
    44cc:	cb 01       	movw	r24, r22
    44ce:	f8 01       	movw	r30, r16
    44d0:	91 83       	std	Z+1, r25	; 0x01
    44d2:	80 83       	st	Z, r24
    44d4:	ce 01       	movw	r24, r28
    44d6:	87 55       	subi	r24, 0x57	; 87
    44d8:	9f 4f       	sbci	r25, 0xFF	; 255
    44da:	9e 01       	movw	r18, r28
    44dc:	2b 55       	subi	r18, 0x5B	; 91
    44de:	3f 4f       	sbci	r19, 0xFF	; 255
    44e0:	f9 01       	movw	r30, r18
    44e2:	20 81       	ld	r18, Z
    44e4:	31 81       	ldd	r19, Z+1	; 0x01
    44e6:	fc 01       	movw	r30, r24
    44e8:	31 83       	std	Z+1, r19	; 0x01
    44ea:	20 83       	st	Z, r18
    44ec:	ce 01       	movw	r24, r28
    44ee:	87 55       	subi	r24, 0x57	; 87
    44f0:	9f 4f       	sbci	r25, 0xFF	; 255
    44f2:	fc 01       	movw	r30, r24
    44f4:	80 81       	ld	r24, Z
    44f6:	91 81       	ldd	r25, Z+1	; 0x01
    44f8:	01 97       	sbiw	r24, 0x01	; 1
    44fa:	f1 f7       	brne	.-4      	; 0x44f8 <__stack+0x33f9>
    44fc:	9e 01       	movw	r18, r28
    44fe:	27 55       	subi	r18, 0x57	; 87
    4500:	3f 4f       	sbci	r19, 0xFF	; 255
    4502:	f9 01       	movw	r30, r18
    4504:	91 83       	std	Z+1, r25	; 0x01
    4506:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F480 T80\n");
    4508:	8e e2       	ldi	r24, 0x2E	; 46
    450a:	92 e0       	ldi	r25, 0x02	; 2
    450c:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
	//_delay_ms(500);
}
    4510:	00 00       	nop
    4512:	c0 5d       	subi	r28, 0xD0	; 208
    4514:	dd 4f       	sbci	r29, 0xFD	; 253
    4516:	0f b6       	in	r0, 0x3f	; 63
    4518:	f8 94       	cli
    451a:	de bf       	out	0x3e, r29	; 62
    451c:	0f be       	out	0x3f, r0	; 63
    451e:	cd bf       	out	0x3d, r28	; 61
    4520:	df 91       	pop	r29
    4522:	cf 91       	pop	r28
    4524:	1f 91       	pop	r17
    4526:	0f 91       	pop	r16
    4528:	08 95       	ret

0000452a <play_short>:
void play_short()
{
    452a:	0f 93       	push	r16
    452c:	1f 93       	push	r17
    452e:	cf 93       	push	r28
    4530:	df 93       	push	r29
    4532:	cd b7       	in	r28, 0x3d	; 61
    4534:	de b7       	in	r29, 0x3e	; 62
    4536:	c2 56       	subi	r28, 0x62	; 98
    4538:	d1 09       	sbc	r29, r1
    453a:	0f b6       	in	r0, 0x3f	; 63
    453c:	f8 94       	cli
    453e:	de bf       	out	0x3e, r29	; 62
    4540:	0f be       	out	0x3f, r0	; 63
    4542:	cd bf       	out	0x3d, r28	; 61
	to_uARM("M2210 F660 T100\n");
    4544:	88 ec       	ldi	r24, 0xC8	; 200
    4546:	91 e0       	ldi	r25, 0x01	; 1
    4548:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    454c:	80 e0       	ldi	r24, 0x00	; 0
    454e:	90 e0       	ldi	r25, 0x00	; 0
    4550:	a6 e1       	ldi	r26, 0x16	; 22
    4552:	b3 e4       	ldi	r27, 0x43	; 67
    4554:	89 83       	std	Y+1, r24	; 0x01
    4556:	9a 83       	std	Y+2, r25	; 0x02
    4558:	ab 83       	std	Y+3, r26	; 0x03
    455a:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    455c:	8e 01       	movw	r16, r28
    455e:	07 5a       	subi	r16, 0xA7	; 167
    4560:	1f 4f       	sbci	r17, 0xFF	; 255
    4562:	20 e0       	ldi	r18, 0x00	; 0
    4564:	30 e0       	ldi	r19, 0x00	; 0
    4566:	4a e7       	ldi	r20, 0x7A	; 122
    4568:	55 e4       	ldi	r21, 0x45	; 69
    456a:	69 81       	ldd	r22, Y+1	; 0x01
    456c:	7a 81       	ldd	r23, Y+2	; 0x02
    456e:	8b 81       	ldd	r24, Y+3	; 0x03
    4570:	9c 81       	ldd	r25, Y+4	; 0x04
    4572:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    4576:	dc 01       	movw	r26, r24
    4578:	cb 01       	movw	r24, r22
    457a:	f8 01       	movw	r30, r16
    457c:	80 83       	st	Z, r24
    457e:	91 83       	std	Z+1, r25	; 0x01
    4580:	a2 83       	std	Z+2, r26	; 0x02
    4582:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4584:	ce 01       	movw	r24, r28
    4586:	87 5a       	subi	r24, 0xA7	; 167
    4588:	9f 4f       	sbci	r25, 0xFF	; 255
    458a:	20 e0       	ldi	r18, 0x00	; 0
    458c:	30 e0       	ldi	r19, 0x00	; 0
    458e:	40 e8       	ldi	r20, 0x80	; 128
    4590:	5f e3       	ldi	r21, 0x3F	; 63
    4592:	fc 01       	movw	r30, r24
    4594:	60 81       	ld	r22, Z
    4596:	71 81       	ldd	r23, Z+1	; 0x01
    4598:	82 81       	ldd	r24, Z+2	; 0x02
    459a:	93 81       	ldd	r25, Z+3	; 0x03
    459c:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    45a0:	88 23       	and	r24, r24
    45a2:	4c f4       	brge	.+18     	; 0x45b6 <play_short+0x8c>
		__ticks = 1;
    45a4:	ce 01       	movw	r24, r28
    45a6:	83 5a       	subi	r24, 0xA3	; 163
    45a8:	9f 4f       	sbci	r25, 0xFF	; 255
    45aa:	21 e0       	ldi	r18, 0x01	; 1
    45ac:	30 e0       	ldi	r19, 0x00	; 0
    45ae:	fc 01       	movw	r30, r24
    45b0:	31 83       	std	Z+1, r19	; 0x01
    45b2:	20 83       	st	Z, r18
    45b4:	69 c0       	rjmp	.+210    	; 0x4688 <play_short+0x15e>
	else if (__tmp > 65535)
    45b6:	ce 01       	movw	r24, r28
    45b8:	87 5a       	subi	r24, 0xA7	; 167
    45ba:	9f 4f       	sbci	r25, 0xFF	; 255
    45bc:	20 e0       	ldi	r18, 0x00	; 0
    45be:	3f ef       	ldi	r19, 0xFF	; 255
    45c0:	4f e7       	ldi	r20, 0x7F	; 127
    45c2:	57 e4       	ldi	r21, 0x47	; 71
    45c4:	fc 01       	movw	r30, r24
    45c6:	60 81       	ld	r22, Z
    45c8:	71 81       	ldd	r23, Z+1	; 0x01
    45ca:	82 81       	ldd	r24, Z+2	; 0x02
    45cc:	93 81       	ldd	r25, Z+3	; 0x03
    45ce:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    45d2:	18 16       	cp	r1, r24
    45d4:	0c f0       	brlt	.+2      	; 0x45d8 <play_short+0xae>
    45d6:	46 c0       	rjmp	.+140    	; 0x4664 <play_short+0x13a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    45d8:	20 e0       	ldi	r18, 0x00	; 0
    45da:	30 e0       	ldi	r19, 0x00	; 0
    45dc:	40 e2       	ldi	r20, 0x20	; 32
    45de:	51 e4       	ldi	r21, 0x41	; 65
    45e0:	69 81       	ldd	r22, Y+1	; 0x01
    45e2:	7a 81       	ldd	r23, Y+2	; 0x02
    45e4:	8b 81       	ldd	r24, Y+3	; 0x03
    45e6:	9c 81       	ldd	r25, Y+4	; 0x04
    45e8:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    45ec:	dc 01       	movw	r26, r24
    45ee:	cb 01       	movw	r24, r22
    45f0:	8e 01       	movw	r16, r28
    45f2:	03 5a       	subi	r16, 0xA3	; 163
    45f4:	1f 4f       	sbci	r17, 0xFF	; 255
    45f6:	bc 01       	movw	r22, r24
    45f8:	cd 01       	movw	r24, r26
    45fa:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    45fe:	dc 01       	movw	r26, r24
    4600:	cb 01       	movw	r24, r22
    4602:	f8 01       	movw	r30, r16
    4604:	91 83       	std	Z+1, r25	; 0x01
    4606:	80 83       	st	Z, r24
    4608:	24 c0       	rjmp	.+72     	; 0x4652 <play_short+0x128>
    460a:	ce 01       	movw	r24, r28
    460c:	81 5a       	subi	r24, 0xA1	; 161
    460e:	9f 4f       	sbci	r25, 0xFF	; 255
    4610:	20 e9       	ldi	r18, 0x90	; 144
    4612:	31 e0       	ldi	r19, 0x01	; 1
    4614:	fc 01       	movw	r30, r24
    4616:	31 83       	std	Z+1, r19	; 0x01
    4618:	20 83       	st	Z, r18
    461a:	ce 01       	movw	r24, r28
    461c:	81 5a       	subi	r24, 0xA1	; 161
    461e:	9f 4f       	sbci	r25, 0xFF	; 255
    4620:	fc 01       	movw	r30, r24
    4622:	80 81       	ld	r24, Z
    4624:	91 81       	ldd	r25, Z+1	; 0x01
    4626:	01 97       	sbiw	r24, 0x01	; 1
    4628:	f1 f7       	brne	.-4      	; 0x4626 <play_short+0xfc>
    462a:	9e 01       	movw	r18, r28
    462c:	21 5a       	subi	r18, 0xA1	; 161
    462e:	3f 4f       	sbci	r19, 0xFF	; 255
    4630:	f9 01       	movw	r30, r18
    4632:	91 83       	std	Z+1, r25	; 0x01
    4634:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4636:	ce 01       	movw	r24, r28
    4638:	83 5a       	subi	r24, 0xA3	; 163
    463a:	9f 4f       	sbci	r25, 0xFF	; 255
    463c:	9e 01       	movw	r18, r28
    463e:	23 5a       	subi	r18, 0xA3	; 163
    4640:	3f 4f       	sbci	r19, 0xFF	; 255
    4642:	f9 01       	movw	r30, r18
    4644:	20 81       	ld	r18, Z
    4646:	31 81       	ldd	r19, Z+1	; 0x01
    4648:	21 50       	subi	r18, 0x01	; 1
    464a:	31 09       	sbc	r19, r1
    464c:	fc 01       	movw	r30, r24
    464e:	31 83       	std	Z+1, r19	; 0x01
    4650:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4652:	ce 01       	movw	r24, r28
    4654:	83 5a       	subi	r24, 0xA3	; 163
    4656:	9f 4f       	sbci	r25, 0xFF	; 255
    4658:	fc 01       	movw	r30, r24
    465a:	80 81       	ld	r24, Z
    465c:	91 81       	ldd	r25, Z+1	; 0x01
    465e:	89 2b       	or	r24, r25
    4660:	a1 f6       	brne	.-88     	; 0x460a <play_short+0xe0>
    4662:	2c c0       	rjmp	.+88     	; 0x46bc <play_short+0x192>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4664:	8e 01       	movw	r16, r28
    4666:	03 5a       	subi	r16, 0xA3	; 163
    4668:	1f 4f       	sbci	r17, 0xFF	; 255
    466a:	ce 01       	movw	r24, r28
    466c:	87 5a       	subi	r24, 0xA7	; 167
    466e:	9f 4f       	sbci	r25, 0xFF	; 255
    4670:	fc 01       	movw	r30, r24
    4672:	60 81       	ld	r22, Z
    4674:	71 81       	ldd	r23, Z+1	; 0x01
    4676:	82 81       	ldd	r24, Z+2	; 0x02
    4678:	93 81       	ldd	r25, Z+3	; 0x03
    467a:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    467e:	dc 01       	movw	r26, r24
    4680:	cb 01       	movw	r24, r22
    4682:	f8 01       	movw	r30, r16
    4684:	91 83       	std	Z+1, r25	; 0x01
    4686:	80 83       	st	Z, r24
    4688:	ce 01       	movw	r24, r28
    468a:	8f 59       	subi	r24, 0x9F	; 159
    468c:	9f 4f       	sbci	r25, 0xFF	; 255
    468e:	9e 01       	movw	r18, r28
    4690:	23 5a       	subi	r18, 0xA3	; 163
    4692:	3f 4f       	sbci	r19, 0xFF	; 255
    4694:	f9 01       	movw	r30, r18
    4696:	20 81       	ld	r18, Z
    4698:	31 81       	ldd	r19, Z+1	; 0x01
    469a:	fc 01       	movw	r30, r24
    469c:	31 83       	std	Z+1, r19	; 0x01
    469e:	20 83       	st	Z, r18
    46a0:	ce 01       	movw	r24, r28
    46a2:	8f 59       	subi	r24, 0x9F	; 159
    46a4:	9f 4f       	sbci	r25, 0xFF	; 255
    46a6:	fc 01       	movw	r30, r24
    46a8:	80 81       	ld	r24, Z
    46aa:	91 81       	ldd	r25, Z+1	; 0x01
    46ac:	01 97       	sbiw	r24, 0x01	; 1
    46ae:	f1 f7       	brne	.-4      	; 0x46ac <play_short+0x182>
    46b0:	9e 01       	movw	r18, r28
    46b2:	2f 59       	subi	r18, 0x9F	; 159
    46b4:	3f 4f       	sbci	r19, 0xFF	; 255
    46b6:	f9 01       	movw	r30, r18
    46b8:	91 83       	std	Z+1, r25	; 0x01
    46ba:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F660 T100\n");
    46bc:	88 ec       	ldi	r24, 0xC8	; 200
    46be:	91 e0       	ldi	r25, 0x01	; 1
    46c0:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    46c4:	80 e0       	ldi	r24, 0x00	; 0
    46c6:	90 e0       	ldi	r25, 0x00	; 0
    46c8:	a6 e9       	ldi	r26, 0x96	; 150
    46ca:	b3 e4       	ldi	r27, 0x43	; 67
    46cc:	8d 83       	std	Y+5, r24	; 0x05
    46ce:	9e 83       	std	Y+6, r25	; 0x06
    46d0:	af 83       	std	Y+7, r26	; 0x07
    46d2:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    46d4:	8e 01       	movw	r16, r28
    46d6:	01 5b       	subi	r16, 0xB1	; 177
    46d8:	1f 4f       	sbci	r17, 0xFF	; 255
    46da:	20 e0       	ldi	r18, 0x00	; 0
    46dc:	30 e0       	ldi	r19, 0x00	; 0
    46de:	4a e7       	ldi	r20, 0x7A	; 122
    46e0:	55 e4       	ldi	r21, 0x45	; 69
    46e2:	6d 81       	ldd	r22, Y+5	; 0x05
    46e4:	7e 81       	ldd	r23, Y+6	; 0x06
    46e6:	8f 81       	ldd	r24, Y+7	; 0x07
    46e8:	98 85       	ldd	r25, Y+8	; 0x08
    46ea:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    46ee:	dc 01       	movw	r26, r24
    46f0:	cb 01       	movw	r24, r22
    46f2:	f8 01       	movw	r30, r16
    46f4:	80 83       	st	Z, r24
    46f6:	91 83       	std	Z+1, r25	; 0x01
    46f8:	a2 83       	std	Z+2, r26	; 0x02
    46fa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    46fc:	ce 01       	movw	r24, r28
    46fe:	81 5b       	subi	r24, 0xB1	; 177
    4700:	9f 4f       	sbci	r25, 0xFF	; 255
    4702:	20 e0       	ldi	r18, 0x00	; 0
    4704:	30 e0       	ldi	r19, 0x00	; 0
    4706:	40 e8       	ldi	r20, 0x80	; 128
    4708:	5f e3       	ldi	r21, 0x3F	; 63
    470a:	fc 01       	movw	r30, r24
    470c:	60 81       	ld	r22, Z
    470e:	71 81       	ldd	r23, Z+1	; 0x01
    4710:	82 81       	ldd	r24, Z+2	; 0x02
    4712:	93 81       	ldd	r25, Z+3	; 0x03
    4714:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    4718:	88 23       	and	r24, r24
    471a:	4c f4       	brge	.+18     	; 0x472e <play_short+0x204>
		__ticks = 1;
    471c:	ce 01       	movw	r24, r28
    471e:	8d 5a       	subi	r24, 0xAD	; 173
    4720:	9f 4f       	sbci	r25, 0xFF	; 255
    4722:	21 e0       	ldi	r18, 0x01	; 1
    4724:	30 e0       	ldi	r19, 0x00	; 0
    4726:	fc 01       	movw	r30, r24
    4728:	31 83       	std	Z+1, r19	; 0x01
    472a:	20 83       	st	Z, r18
    472c:	69 c0       	rjmp	.+210    	; 0x4800 <play_short+0x2d6>
	else if (__tmp > 65535)
    472e:	ce 01       	movw	r24, r28
    4730:	81 5b       	subi	r24, 0xB1	; 177
    4732:	9f 4f       	sbci	r25, 0xFF	; 255
    4734:	20 e0       	ldi	r18, 0x00	; 0
    4736:	3f ef       	ldi	r19, 0xFF	; 255
    4738:	4f e7       	ldi	r20, 0x7F	; 127
    473a:	57 e4       	ldi	r21, 0x47	; 71
    473c:	fc 01       	movw	r30, r24
    473e:	60 81       	ld	r22, Z
    4740:	71 81       	ldd	r23, Z+1	; 0x01
    4742:	82 81       	ldd	r24, Z+2	; 0x02
    4744:	93 81       	ldd	r25, Z+3	; 0x03
    4746:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    474a:	18 16       	cp	r1, r24
    474c:	0c f0       	brlt	.+2      	; 0x4750 <play_short+0x226>
    474e:	46 c0       	rjmp	.+140    	; 0x47dc <play_short+0x2b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4750:	20 e0       	ldi	r18, 0x00	; 0
    4752:	30 e0       	ldi	r19, 0x00	; 0
    4754:	40 e2       	ldi	r20, 0x20	; 32
    4756:	51 e4       	ldi	r21, 0x41	; 65
    4758:	6d 81       	ldd	r22, Y+5	; 0x05
    475a:	7e 81       	ldd	r23, Y+6	; 0x06
    475c:	8f 81       	ldd	r24, Y+7	; 0x07
    475e:	98 85       	ldd	r25, Y+8	; 0x08
    4760:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    4764:	dc 01       	movw	r26, r24
    4766:	cb 01       	movw	r24, r22
    4768:	8e 01       	movw	r16, r28
    476a:	0d 5a       	subi	r16, 0xAD	; 173
    476c:	1f 4f       	sbci	r17, 0xFF	; 255
    476e:	bc 01       	movw	r22, r24
    4770:	cd 01       	movw	r24, r26
    4772:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    4776:	dc 01       	movw	r26, r24
    4778:	cb 01       	movw	r24, r22
    477a:	f8 01       	movw	r30, r16
    477c:	91 83       	std	Z+1, r25	; 0x01
    477e:	80 83       	st	Z, r24
    4780:	24 c0       	rjmp	.+72     	; 0x47ca <play_short+0x2a0>
    4782:	ce 01       	movw	r24, r28
    4784:	8b 5a       	subi	r24, 0xAB	; 171
    4786:	9f 4f       	sbci	r25, 0xFF	; 255
    4788:	20 e9       	ldi	r18, 0x90	; 144
    478a:	31 e0       	ldi	r19, 0x01	; 1
    478c:	fc 01       	movw	r30, r24
    478e:	31 83       	std	Z+1, r19	; 0x01
    4790:	20 83       	st	Z, r18
    4792:	ce 01       	movw	r24, r28
    4794:	8b 5a       	subi	r24, 0xAB	; 171
    4796:	9f 4f       	sbci	r25, 0xFF	; 255
    4798:	fc 01       	movw	r30, r24
    479a:	80 81       	ld	r24, Z
    479c:	91 81       	ldd	r25, Z+1	; 0x01
    479e:	01 97       	sbiw	r24, 0x01	; 1
    47a0:	f1 f7       	brne	.-4      	; 0x479e <play_short+0x274>
    47a2:	9e 01       	movw	r18, r28
    47a4:	2b 5a       	subi	r18, 0xAB	; 171
    47a6:	3f 4f       	sbci	r19, 0xFF	; 255
    47a8:	f9 01       	movw	r30, r18
    47aa:	91 83       	std	Z+1, r25	; 0x01
    47ac:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    47ae:	ce 01       	movw	r24, r28
    47b0:	8d 5a       	subi	r24, 0xAD	; 173
    47b2:	9f 4f       	sbci	r25, 0xFF	; 255
    47b4:	9e 01       	movw	r18, r28
    47b6:	2d 5a       	subi	r18, 0xAD	; 173
    47b8:	3f 4f       	sbci	r19, 0xFF	; 255
    47ba:	f9 01       	movw	r30, r18
    47bc:	20 81       	ld	r18, Z
    47be:	31 81       	ldd	r19, Z+1	; 0x01
    47c0:	21 50       	subi	r18, 0x01	; 1
    47c2:	31 09       	sbc	r19, r1
    47c4:	fc 01       	movw	r30, r24
    47c6:	31 83       	std	Z+1, r19	; 0x01
    47c8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    47ca:	ce 01       	movw	r24, r28
    47cc:	8d 5a       	subi	r24, 0xAD	; 173
    47ce:	9f 4f       	sbci	r25, 0xFF	; 255
    47d0:	fc 01       	movw	r30, r24
    47d2:	80 81       	ld	r24, Z
    47d4:	91 81       	ldd	r25, Z+1	; 0x01
    47d6:	89 2b       	or	r24, r25
    47d8:	a1 f6       	brne	.-88     	; 0x4782 <play_short+0x258>
    47da:	2c c0       	rjmp	.+88     	; 0x4834 <play_short+0x30a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    47dc:	8e 01       	movw	r16, r28
    47de:	0d 5a       	subi	r16, 0xAD	; 173
    47e0:	1f 4f       	sbci	r17, 0xFF	; 255
    47e2:	ce 01       	movw	r24, r28
    47e4:	81 5b       	subi	r24, 0xB1	; 177
    47e6:	9f 4f       	sbci	r25, 0xFF	; 255
    47e8:	fc 01       	movw	r30, r24
    47ea:	60 81       	ld	r22, Z
    47ec:	71 81       	ldd	r23, Z+1	; 0x01
    47ee:	82 81       	ldd	r24, Z+2	; 0x02
    47f0:	93 81       	ldd	r25, Z+3	; 0x03
    47f2:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    47f6:	dc 01       	movw	r26, r24
    47f8:	cb 01       	movw	r24, r22
    47fa:	f8 01       	movw	r30, r16
    47fc:	91 83       	std	Z+1, r25	; 0x01
    47fe:	80 83       	st	Z, r24
    4800:	ce 01       	movw	r24, r28
    4802:	89 5a       	subi	r24, 0xA9	; 169
    4804:	9f 4f       	sbci	r25, 0xFF	; 255
    4806:	9e 01       	movw	r18, r28
    4808:	2d 5a       	subi	r18, 0xAD	; 173
    480a:	3f 4f       	sbci	r19, 0xFF	; 255
    480c:	f9 01       	movw	r30, r18
    480e:	20 81       	ld	r18, Z
    4810:	31 81       	ldd	r19, Z+1	; 0x01
    4812:	fc 01       	movw	r30, r24
    4814:	31 83       	std	Z+1, r19	; 0x01
    4816:	20 83       	st	Z, r18
    4818:	ce 01       	movw	r24, r28
    481a:	89 5a       	subi	r24, 0xA9	; 169
    481c:	9f 4f       	sbci	r25, 0xFF	; 255
    481e:	fc 01       	movw	r30, r24
    4820:	80 81       	ld	r24, Z
    4822:	91 81       	ldd	r25, Z+1	; 0x01
    4824:	01 97       	sbiw	r24, 0x01	; 1
    4826:	f1 f7       	brne	.-4      	; 0x4824 <play_short+0x2fa>
    4828:	9e 01       	movw	r18, r28
    482a:	29 5a       	subi	r18, 0xA9	; 169
    482c:	3f 4f       	sbci	r19, 0xFF	; 255
    482e:	f9 01       	movw	r30, r18
    4830:	91 83       	std	Z+1, r25	; 0x01
    4832:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F660 T100\n");
    4834:	88 ec       	ldi	r24, 0xC8	; 200
    4836:	91 e0       	ldi	r25, 0x01	; 1
    4838:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    483c:	80 e0       	ldi	r24, 0x00	; 0
    483e:	90 e0       	ldi	r25, 0x00	; 0
    4840:	a6 e9       	ldi	r26, 0x96	; 150
    4842:	b3 e4       	ldi	r27, 0x43	; 67
    4844:	89 87       	std	Y+9, r24	; 0x09
    4846:	9a 87       	std	Y+10, r25	; 0x0a
    4848:	ab 87       	std	Y+11, r26	; 0x0b
    484a:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    484c:	8e 01       	movw	r16, r28
    484e:	0b 5b       	subi	r16, 0xBB	; 187
    4850:	1f 4f       	sbci	r17, 0xFF	; 255
    4852:	20 e0       	ldi	r18, 0x00	; 0
    4854:	30 e0       	ldi	r19, 0x00	; 0
    4856:	4a e7       	ldi	r20, 0x7A	; 122
    4858:	55 e4       	ldi	r21, 0x45	; 69
    485a:	69 85       	ldd	r22, Y+9	; 0x09
    485c:	7a 85       	ldd	r23, Y+10	; 0x0a
    485e:	8b 85       	ldd	r24, Y+11	; 0x0b
    4860:	9c 85       	ldd	r25, Y+12	; 0x0c
    4862:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    4866:	dc 01       	movw	r26, r24
    4868:	cb 01       	movw	r24, r22
    486a:	f8 01       	movw	r30, r16
    486c:	80 83       	st	Z, r24
    486e:	91 83       	std	Z+1, r25	; 0x01
    4870:	a2 83       	std	Z+2, r26	; 0x02
    4872:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4874:	ce 01       	movw	r24, r28
    4876:	8b 5b       	subi	r24, 0xBB	; 187
    4878:	9f 4f       	sbci	r25, 0xFF	; 255
    487a:	20 e0       	ldi	r18, 0x00	; 0
    487c:	30 e0       	ldi	r19, 0x00	; 0
    487e:	40 e8       	ldi	r20, 0x80	; 128
    4880:	5f e3       	ldi	r21, 0x3F	; 63
    4882:	fc 01       	movw	r30, r24
    4884:	60 81       	ld	r22, Z
    4886:	71 81       	ldd	r23, Z+1	; 0x01
    4888:	82 81       	ldd	r24, Z+2	; 0x02
    488a:	93 81       	ldd	r25, Z+3	; 0x03
    488c:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    4890:	88 23       	and	r24, r24
    4892:	4c f4       	brge	.+18     	; 0x48a6 <play_short+0x37c>
		__ticks = 1;
    4894:	ce 01       	movw	r24, r28
    4896:	87 5b       	subi	r24, 0xB7	; 183
    4898:	9f 4f       	sbci	r25, 0xFF	; 255
    489a:	21 e0       	ldi	r18, 0x01	; 1
    489c:	30 e0       	ldi	r19, 0x00	; 0
    489e:	fc 01       	movw	r30, r24
    48a0:	31 83       	std	Z+1, r19	; 0x01
    48a2:	20 83       	st	Z, r18
    48a4:	69 c0       	rjmp	.+210    	; 0x4978 <play_short+0x44e>
	else if (__tmp > 65535)
    48a6:	ce 01       	movw	r24, r28
    48a8:	8b 5b       	subi	r24, 0xBB	; 187
    48aa:	9f 4f       	sbci	r25, 0xFF	; 255
    48ac:	20 e0       	ldi	r18, 0x00	; 0
    48ae:	3f ef       	ldi	r19, 0xFF	; 255
    48b0:	4f e7       	ldi	r20, 0x7F	; 127
    48b2:	57 e4       	ldi	r21, 0x47	; 71
    48b4:	fc 01       	movw	r30, r24
    48b6:	60 81       	ld	r22, Z
    48b8:	71 81       	ldd	r23, Z+1	; 0x01
    48ba:	82 81       	ldd	r24, Z+2	; 0x02
    48bc:	93 81       	ldd	r25, Z+3	; 0x03
    48be:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    48c2:	18 16       	cp	r1, r24
    48c4:	0c f0       	brlt	.+2      	; 0x48c8 <play_short+0x39e>
    48c6:	46 c0       	rjmp	.+140    	; 0x4954 <play_short+0x42a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    48c8:	20 e0       	ldi	r18, 0x00	; 0
    48ca:	30 e0       	ldi	r19, 0x00	; 0
    48cc:	40 e2       	ldi	r20, 0x20	; 32
    48ce:	51 e4       	ldi	r21, 0x41	; 65
    48d0:	69 85       	ldd	r22, Y+9	; 0x09
    48d2:	7a 85       	ldd	r23, Y+10	; 0x0a
    48d4:	8b 85       	ldd	r24, Y+11	; 0x0b
    48d6:	9c 85       	ldd	r25, Y+12	; 0x0c
    48d8:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    48dc:	dc 01       	movw	r26, r24
    48de:	cb 01       	movw	r24, r22
    48e0:	8e 01       	movw	r16, r28
    48e2:	07 5b       	subi	r16, 0xB7	; 183
    48e4:	1f 4f       	sbci	r17, 0xFF	; 255
    48e6:	bc 01       	movw	r22, r24
    48e8:	cd 01       	movw	r24, r26
    48ea:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    48ee:	dc 01       	movw	r26, r24
    48f0:	cb 01       	movw	r24, r22
    48f2:	f8 01       	movw	r30, r16
    48f4:	91 83       	std	Z+1, r25	; 0x01
    48f6:	80 83       	st	Z, r24
    48f8:	24 c0       	rjmp	.+72     	; 0x4942 <play_short+0x418>
    48fa:	ce 01       	movw	r24, r28
    48fc:	85 5b       	subi	r24, 0xB5	; 181
    48fe:	9f 4f       	sbci	r25, 0xFF	; 255
    4900:	20 e9       	ldi	r18, 0x90	; 144
    4902:	31 e0       	ldi	r19, 0x01	; 1
    4904:	fc 01       	movw	r30, r24
    4906:	31 83       	std	Z+1, r19	; 0x01
    4908:	20 83       	st	Z, r18
    490a:	ce 01       	movw	r24, r28
    490c:	85 5b       	subi	r24, 0xB5	; 181
    490e:	9f 4f       	sbci	r25, 0xFF	; 255
    4910:	fc 01       	movw	r30, r24
    4912:	80 81       	ld	r24, Z
    4914:	91 81       	ldd	r25, Z+1	; 0x01
    4916:	01 97       	sbiw	r24, 0x01	; 1
    4918:	f1 f7       	brne	.-4      	; 0x4916 <play_short+0x3ec>
    491a:	9e 01       	movw	r18, r28
    491c:	25 5b       	subi	r18, 0xB5	; 181
    491e:	3f 4f       	sbci	r19, 0xFF	; 255
    4920:	f9 01       	movw	r30, r18
    4922:	91 83       	std	Z+1, r25	; 0x01
    4924:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4926:	ce 01       	movw	r24, r28
    4928:	87 5b       	subi	r24, 0xB7	; 183
    492a:	9f 4f       	sbci	r25, 0xFF	; 255
    492c:	9e 01       	movw	r18, r28
    492e:	27 5b       	subi	r18, 0xB7	; 183
    4930:	3f 4f       	sbci	r19, 0xFF	; 255
    4932:	f9 01       	movw	r30, r18
    4934:	20 81       	ld	r18, Z
    4936:	31 81       	ldd	r19, Z+1	; 0x01
    4938:	21 50       	subi	r18, 0x01	; 1
    493a:	31 09       	sbc	r19, r1
    493c:	fc 01       	movw	r30, r24
    493e:	31 83       	std	Z+1, r19	; 0x01
    4940:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4942:	ce 01       	movw	r24, r28
    4944:	87 5b       	subi	r24, 0xB7	; 183
    4946:	9f 4f       	sbci	r25, 0xFF	; 255
    4948:	fc 01       	movw	r30, r24
    494a:	80 81       	ld	r24, Z
    494c:	91 81       	ldd	r25, Z+1	; 0x01
    494e:	89 2b       	or	r24, r25
    4950:	a1 f6       	brne	.-88     	; 0x48fa <play_short+0x3d0>
    4952:	2c c0       	rjmp	.+88     	; 0x49ac <play_short+0x482>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4954:	8e 01       	movw	r16, r28
    4956:	07 5b       	subi	r16, 0xB7	; 183
    4958:	1f 4f       	sbci	r17, 0xFF	; 255
    495a:	ce 01       	movw	r24, r28
    495c:	8b 5b       	subi	r24, 0xBB	; 187
    495e:	9f 4f       	sbci	r25, 0xFF	; 255
    4960:	fc 01       	movw	r30, r24
    4962:	60 81       	ld	r22, Z
    4964:	71 81       	ldd	r23, Z+1	; 0x01
    4966:	82 81       	ldd	r24, Z+2	; 0x02
    4968:	93 81       	ldd	r25, Z+3	; 0x03
    496a:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    496e:	dc 01       	movw	r26, r24
    4970:	cb 01       	movw	r24, r22
    4972:	f8 01       	movw	r30, r16
    4974:	91 83       	std	Z+1, r25	; 0x01
    4976:	80 83       	st	Z, r24
    4978:	ce 01       	movw	r24, r28
    497a:	83 5b       	subi	r24, 0xB3	; 179
    497c:	9f 4f       	sbci	r25, 0xFF	; 255
    497e:	9e 01       	movw	r18, r28
    4980:	27 5b       	subi	r18, 0xB7	; 183
    4982:	3f 4f       	sbci	r19, 0xFF	; 255
    4984:	f9 01       	movw	r30, r18
    4986:	20 81       	ld	r18, Z
    4988:	31 81       	ldd	r19, Z+1	; 0x01
    498a:	fc 01       	movw	r30, r24
    498c:	31 83       	std	Z+1, r19	; 0x01
    498e:	20 83       	st	Z, r18
    4990:	ce 01       	movw	r24, r28
    4992:	83 5b       	subi	r24, 0xB3	; 179
    4994:	9f 4f       	sbci	r25, 0xFF	; 255
    4996:	fc 01       	movw	r30, r24
    4998:	80 81       	ld	r24, Z
    499a:	91 81       	ldd	r25, Z+1	; 0x01
    499c:	01 97       	sbiw	r24, 0x01	; 1
    499e:	f1 f7       	brne	.-4      	; 0x499c <play_short+0x472>
    49a0:	9e 01       	movw	r18, r28
    49a2:	23 5b       	subi	r18, 0xB3	; 179
    49a4:	3f 4f       	sbci	r19, 0xFF	; 255
    49a6:	f9 01       	movw	r30, r18
    49a8:	91 83       	std	Z+1, r25	; 0x01
    49aa:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F510 T100\n");
    49ac:	89 ed       	ldi	r24, 0xD9	; 217
    49ae:	91 e0       	ldi	r25, 0x01	; 1
    49b0:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    49b4:	80 e0       	ldi	r24, 0x00	; 0
    49b6:	90 e0       	ldi	r25, 0x00	; 0
    49b8:	a8 ec       	ldi	r26, 0xC8	; 200
    49ba:	b2 e4       	ldi	r27, 0x42	; 66
    49bc:	8d 87       	std	Y+13, r24	; 0x0d
    49be:	9e 87       	std	Y+14, r25	; 0x0e
    49c0:	af 87       	std	Y+15, r26	; 0x0f
    49c2:	b8 8b       	std	Y+16, r27	; 0x10

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    49c4:	20 e0       	ldi	r18, 0x00	; 0
    49c6:	30 e0       	ldi	r19, 0x00	; 0
    49c8:	4a e7       	ldi	r20, 0x7A	; 122
    49ca:	55 e4       	ldi	r21, 0x45	; 69
    49cc:	6d 85       	ldd	r22, Y+13	; 0x0d
    49ce:	7e 85       	ldd	r23, Y+14	; 0x0e
    49d0:	8f 85       	ldd	r24, Y+15	; 0x0f
    49d2:	98 89       	ldd	r25, Y+16	; 0x10
    49d4:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    49d8:	dc 01       	movw	r26, r24
    49da:	cb 01       	movw	r24, r22
    49dc:	8b af       	std	Y+59, r24	; 0x3b
    49de:	9c af       	std	Y+60, r25	; 0x3c
    49e0:	ad af       	std	Y+61, r26	; 0x3d
    49e2:	be af       	std	Y+62, r27	; 0x3e
	if (__tmp < 1.0)
    49e4:	20 e0       	ldi	r18, 0x00	; 0
    49e6:	30 e0       	ldi	r19, 0x00	; 0
    49e8:	40 e8       	ldi	r20, 0x80	; 128
    49ea:	5f e3       	ldi	r21, 0x3F	; 63
    49ec:	6b ad       	ldd	r22, Y+59	; 0x3b
    49ee:	7c ad       	ldd	r23, Y+60	; 0x3c
    49f0:	8d ad       	ldd	r24, Y+61	; 0x3d
    49f2:	9e ad       	ldd	r25, Y+62	; 0x3e
    49f4:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    49f8:	88 23       	and	r24, r24
    49fa:	44 f4       	brge	.+16     	; 0x4a0c <play_short+0x4e2>
		__ticks = 1;
    49fc:	21 e0       	ldi	r18, 0x01	; 1
    49fe:	30 e0       	ldi	r19, 0x00	; 0
    4a00:	ce 01       	movw	r24, r28
    4a02:	cf 96       	adiw	r24, 0x3f	; 63
    4a04:	fc 01       	movw	r30, r24
    4a06:	31 83       	std	Z+1, r19	; 0x01
    4a08:	20 83       	st	Z, r18
    4a0a:	5f c0       	rjmp	.+190    	; 0x4aca <play_short+0x5a0>
	else if (__tmp > 65535)
    4a0c:	20 e0       	ldi	r18, 0x00	; 0
    4a0e:	3f ef       	ldi	r19, 0xFF	; 255
    4a10:	4f e7       	ldi	r20, 0x7F	; 127
    4a12:	57 e4       	ldi	r21, 0x47	; 71
    4a14:	6b ad       	ldd	r22, Y+59	; 0x3b
    4a16:	7c ad       	ldd	r23, Y+60	; 0x3c
    4a18:	8d ad       	ldd	r24, Y+61	; 0x3d
    4a1a:	9e ad       	ldd	r25, Y+62	; 0x3e
    4a1c:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    4a20:	18 16       	cp	r1, r24
    4a22:	0c f0       	brlt	.+2      	; 0x4a26 <play_short+0x4fc>
    4a24:	44 c0       	rjmp	.+136    	; 0x4aae <play_short+0x584>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4a26:	20 e0       	ldi	r18, 0x00	; 0
    4a28:	30 e0       	ldi	r19, 0x00	; 0
    4a2a:	40 e2       	ldi	r20, 0x20	; 32
    4a2c:	51 e4       	ldi	r21, 0x41	; 65
    4a2e:	6d 85       	ldd	r22, Y+13	; 0x0d
    4a30:	7e 85       	ldd	r23, Y+14	; 0x0e
    4a32:	8f 85       	ldd	r24, Y+15	; 0x0f
    4a34:	98 89       	ldd	r25, Y+16	; 0x10
    4a36:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    4a3a:	dc 01       	movw	r26, r24
    4a3c:	cb 01       	movw	r24, r22
    4a3e:	bc 01       	movw	r22, r24
    4a40:	cd 01       	movw	r24, r26
    4a42:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    4a46:	dc 01       	movw	r26, r24
    4a48:	cb 01       	movw	r24, r22
    4a4a:	9e 01       	movw	r18, r28
    4a4c:	21 5c       	subi	r18, 0xC1	; 193
    4a4e:	3f 4f       	sbci	r19, 0xFF	; 255
    4a50:	f9 01       	movw	r30, r18
    4a52:	91 83       	std	Z+1, r25	; 0x01
    4a54:	80 83       	st	Z, r24
    4a56:	23 c0       	rjmp	.+70     	; 0x4a9e <play_short+0x574>
    4a58:	ce 01       	movw	r24, r28
    4a5a:	8f 5b       	subi	r24, 0xBF	; 191
    4a5c:	9f 4f       	sbci	r25, 0xFF	; 255
    4a5e:	20 e9       	ldi	r18, 0x90	; 144
    4a60:	31 e0       	ldi	r19, 0x01	; 1
    4a62:	fc 01       	movw	r30, r24
    4a64:	31 83       	std	Z+1, r19	; 0x01
    4a66:	20 83       	st	Z, r18
    4a68:	ce 01       	movw	r24, r28
    4a6a:	8f 5b       	subi	r24, 0xBF	; 191
    4a6c:	9f 4f       	sbci	r25, 0xFF	; 255
    4a6e:	fc 01       	movw	r30, r24
    4a70:	80 81       	ld	r24, Z
    4a72:	91 81       	ldd	r25, Z+1	; 0x01
    4a74:	01 97       	sbiw	r24, 0x01	; 1
    4a76:	f1 f7       	brne	.-4      	; 0x4a74 <play_short+0x54a>
    4a78:	9e 01       	movw	r18, r28
    4a7a:	2f 5b       	subi	r18, 0xBF	; 191
    4a7c:	3f 4f       	sbci	r19, 0xFF	; 255
    4a7e:	f9 01       	movw	r30, r18
    4a80:	91 83       	std	Z+1, r25	; 0x01
    4a82:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4a84:	ce 01       	movw	r24, r28
    4a86:	cf 96       	adiw	r24, 0x3f	; 63
    4a88:	fc 01       	movw	r30, r24
    4a8a:	80 81       	ld	r24, Z
    4a8c:	91 81       	ldd	r25, Z+1	; 0x01
    4a8e:	9c 01       	movw	r18, r24
    4a90:	21 50       	subi	r18, 0x01	; 1
    4a92:	31 09       	sbc	r19, r1
    4a94:	ce 01       	movw	r24, r28
    4a96:	cf 96       	adiw	r24, 0x3f	; 63
    4a98:	fc 01       	movw	r30, r24
    4a9a:	31 83       	std	Z+1, r19	; 0x01
    4a9c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4a9e:	ce 01       	movw	r24, r28
    4aa0:	cf 96       	adiw	r24, 0x3f	; 63
    4aa2:	fc 01       	movw	r30, r24
    4aa4:	80 81       	ld	r24, Z
    4aa6:	91 81       	ldd	r25, Z+1	; 0x01
    4aa8:	89 2b       	or	r24, r25
    4aaa:	b1 f6       	brne	.-84     	; 0x4a58 <play_short+0x52e>
    4aac:	28 c0       	rjmp	.+80     	; 0x4afe <play_short+0x5d4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4aae:	6b ad       	ldd	r22, Y+59	; 0x3b
    4ab0:	7c ad       	ldd	r23, Y+60	; 0x3c
    4ab2:	8d ad       	ldd	r24, Y+61	; 0x3d
    4ab4:	9e ad       	ldd	r25, Y+62	; 0x3e
    4ab6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    4aba:	dc 01       	movw	r26, r24
    4abc:	cb 01       	movw	r24, r22
    4abe:	9e 01       	movw	r18, r28
    4ac0:	21 5c       	subi	r18, 0xC1	; 193
    4ac2:	3f 4f       	sbci	r19, 0xFF	; 255
    4ac4:	f9 01       	movw	r30, r18
    4ac6:	91 83       	std	Z+1, r25	; 0x01
    4ac8:	80 83       	st	Z, r24
    4aca:	ce 01       	movw	r24, r28
    4acc:	8d 5b       	subi	r24, 0xBD	; 189
    4ace:	9f 4f       	sbci	r25, 0xFF	; 255
    4ad0:	9e 01       	movw	r18, r28
    4ad2:	21 5c       	subi	r18, 0xC1	; 193
    4ad4:	3f 4f       	sbci	r19, 0xFF	; 255
    4ad6:	f9 01       	movw	r30, r18
    4ad8:	20 81       	ld	r18, Z
    4ada:	31 81       	ldd	r19, Z+1	; 0x01
    4adc:	fc 01       	movw	r30, r24
    4ade:	31 83       	std	Z+1, r19	; 0x01
    4ae0:	20 83       	st	Z, r18
    4ae2:	ce 01       	movw	r24, r28
    4ae4:	8d 5b       	subi	r24, 0xBD	; 189
    4ae6:	9f 4f       	sbci	r25, 0xFF	; 255
    4ae8:	fc 01       	movw	r30, r24
    4aea:	80 81       	ld	r24, Z
    4aec:	91 81       	ldd	r25, Z+1	; 0x01
    4aee:	01 97       	sbiw	r24, 0x01	; 1
    4af0:	f1 f7       	brne	.-4      	; 0x4aee <play_short+0x5c4>
    4af2:	9e 01       	movw	r18, r28
    4af4:	2d 5b       	subi	r18, 0xBD	; 189
    4af6:	3f 4f       	sbci	r19, 0xFF	; 255
    4af8:	f9 01       	movw	r30, r18
    4afa:	91 83       	std	Z+1, r25	; 0x01
    4afc:	80 83       	st	Z, r24
	_delay_ms(100);
	to_uARM("M2210 F660 T100\n");
    4afe:	88 ec       	ldi	r24, 0xC8	; 200
    4b00:	91 e0       	ldi	r25, 0x01	; 1
    4b02:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    4b06:	80 e0       	ldi	r24, 0x00	; 0
    4b08:	90 e0       	ldi	r25, 0x00	; 0
    4b0a:	a6 e9       	ldi	r26, 0x96	; 150
    4b0c:	b3 e4       	ldi	r27, 0x43	; 67
    4b0e:	89 8b       	std	Y+17, r24	; 0x11
    4b10:	9a 8b       	std	Y+18, r25	; 0x12
    4b12:	ab 8b       	std	Y+19, r26	; 0x13
    4b14:	bc 8b       	std	Y+20, r27	; 0x14

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4b16:	20 e0       	ldi	r18, 0x00	; 0
    4b18:	30 e0       	ldi	r19, 0x00	; 0
    4b1a:	4a e7       	ldi	r20, 0x7A	; 122
    4b1c:	55 e4       	ldi	r21, 0x45	; 69
    4b1e:	69 89       	ldd	r22, Y+17	; 0x11
    4b20:	7a 89       	ldd	r23, Y+18	; 0x12
    4b22:	8b 89       	ldd	r24, Y+19	; 0x13
    4b24:	9c 89       	ldd	r25, Y+20	; 0x14
    4b26:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    4b2a:	dc 01       	movw	r26, r24
    4b2c:	cb 01       	movw	r24, r22
    4b2e:	89 ab       	std	Y+49, r24	; 0x31
    4b30:	9a ab       	std	Y+50, r25	; 0x32
    4b32:	ab ab       	std	Y+51, r26	; 0x33
    4b34:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4b36:	20 e0       	ldi	r18, 0x00	; 0
    4b38:	30 e0       	ldi	r19, 0x00	; 0
    4b3a:	40 e8       	ldi	r20, 0x80	; 128
    4b3c:	5f e3       	ldi	r21, 0x3F	; 63
    4b3e:	69 a9       	ldd	r22, Y+49	; 0x31
    4b40:	7a a9       	ldd	r23, Y+50	; 0x32
    4b42:	8b a9       	ldd	r24, Y+51	; 0x33
    4b44:	9c a9       	ldd	r25, Y+52	; 0x34
    4b46:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    4b4a:	88 23       	and	r24, r24
    4b4c:	2c f4       	brge	.+10     	; 0x4b58 <play_short+0x62e>
		__ticks = 1;
    4b4e:	81 e0       	ldi	r24, 0x01	; 1
    4b50:	90 e0       	ldi	r25, 0x00	; 0
    4b52:	9e ab       	std	Y+54, r25	; 0x36
    4b54:	8d ab       	std	Y+53, r24	; 0x35
    4b56:	3f c0       	rjmp	.+126    	; 0x4bd6 <play_short+0x6ac>
	else if (__tmp > 65535)
    4b58:	20 e0       	ldi	r18, 0x00	; 0
    4b5a:	3f ef       	ldi	r19, 0xFF	; 255
    4b5c:	4f e7       	ldi	r20, 0x7F	; 127
    4b5e:	57 e4       	ldi	r21, 0x47	; 71
    4b60:	69 a9       	ldd	r22, Y+49	; 0x31
    4b62:	7a a9       	ldd	r23, Y+50	; 0x32
    4b64:	8b a9       	ldd	r24, Y+51	; 0x33
    4b66:	9c a9       	ldd	r25, Y+52	; 0x34
    4b68:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    4b6c:	18 16       	cp	r1, r24
    4b6e:	4c f5       	brge	.+82     	; 0x4bc2 <play_short+0x698>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4b70:	20 e0       	ldi	r18, 0x00	; 0
    4b72:	30 e0       	ldi	r19, 0x00	; 0
    4b74:	40 e2       	ldi	r20, 0x20	; 32
    4b76:	51 e4       	ldi	r21, 0x41	; 65
    4b78:	69 89       	ldd	r22, Y+17	; 0x11
    4b7a:	7a 89       	ldd	r23, Y+18	; 0x12
    4b7c:	8b 89       	ldd	r24, Y+19	; 0x13
    4b7e:	9c 89       	ldd	r25, Y+20	; 0x14
    4b80:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    4b84:	dc 01       	movw	r26, r24
    4b86:	cb 01       	movw	r24, r22
    4b88:	bc 01       	movw	r22, r24
    4b8a:	cd 01       	movw	r24, r26
    4b8c:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    4b90:	dc 01       	movw	r26, r24
    4b92:	cb 01       	movw	r24, r22
    4b94:	9e ab       	std	Y+54, r25	; 0x36
    4b96:	8d ab       	std	Y+53, r24	; 0x35
    4b98:	0f c0       	rjmp	.+30     	; 0x4bb8 <play_short+0x68e>
    4b9a:	80 e9       	ldi	r24, 0x90	; 144
    4b9c:	91 e0       	ldi	r25, 0x01	; 1
    4b9e:	98 af       	std	Y+56, r25	; 0x38
    4ba0:	8f ab       	std	Y+55, r24	; 0x37
    4ba2:	8f a9       	ldd	r24, Y+55	; 0x37
    4ba4:	98 ad       	ldd	r25, Y+56	; 0x38
    4ba6:	01 97       	sbiw	r24, 0x01	; 1
    4ba8:	f1 f7       	brne	.-4      	; 0x4ba6 <play_short+0x67c>
    4baa:	98 af       	std	Y+56, r25	; 0x38
    4bac:	8f ab       	std	Y+55, r24	; 0x37
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4bae:	8d a9       	ldd	r24, Y+53	; 0x35
    4bb0:	9e a9       	ldd	r25, Y+54	; 0x36
    4bb2:	01 97       	sbiw	r24, 0x01	; 1
    4bb4:	9e ab       	std	Y+54, r25	; 0x36
    4bb6:	8d ab       	std	Y+53, r24	; 0x35
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4bb8:	8d a9       	ldd	r24, Y+53	; 0x35
    4bba:	9e a9       	ldd	r25, Y+54	; 0x36
    4bbc:	89 2b       	or	r24, r25
    4bbe:	69 f7       	brne	.-38     	; 0x4b9a <play_short+0x670>
    4bc0:	14 c0       	rjmp	.+40     	; 0x4bea <play_short+0x6c0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4bc2:	69 a9       	ldd	r22, Y+49	; 0x31
    4bc4:	7a a9       	ldd	r23, Y+50	; 0x32
    4bc6:	8b a9       	ldd	r24, Y+51	; 0x33
    4bc8:	9c a9       	ldd	r25, Y+52	; 0x34
    4bca:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    4bce:	dc 01       	movw	r26, r24
    4bd0:	cb 01       	movw	r24, r22
    4bd2:	9e ab       	std	Y+54, r25	; 0x36
    4bd4:	8d ab       	std	Y+53, r24	; 0x35
    4bd6:	8d a9       	ldd	r24, Y+53	; 0x35
    4bd8:	9e a9       	ldd	r25, Y+54	; 0x36
    4bda:	9a af       	std	Y+58, r25	; 0x3a
    4bdc:	89 af       	std	Y+57, r24	; 0x39
    4bde:	89 ad       	ldd	r24, Y+57	; 0x39
    4be0:	9a ad       	ldd	r25, Y+58	; 0x3a
    4be2:	01 97       	sbiw	r24, 0x01	; 1
    4be4:	f1 f7       	brne	.-4      	; 0x4be2 <play_short+0x6b8>
    4be6:	9a af       	std	Y+58, r25	; 0x3a
    4be8:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(300);
	to_uARM("M2210 F770 T100\n");
    4bea:	8a ee       	ldi	r24, 0xEA	; 234
    4bec:	91 e0       	ldi	r25, 0x01	; 1
    4bee:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    4bf2:	80 e0       	ldi	r24, 0x00	; 0
    4bf4:	90 e8       	ldi	r25, 0x80	; 128
    4bf6:	a9 e0       	ldi	r26, 0x09	; 9
    4bf8:	b4 e4       	ldi	r27, 0x44	; 68
    4bfa:	8d 8b       	std	Y+21, r24	; 0x15
    4bfc:	9e 8b       	std	Y+22, r25	; 0x16
    4bfe:	af 8b       	std	Y+23, r26	; 0x17
    4c00:	b8 8f       	std	Y+24, r27	; 0x18

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4c02:	20 e0       	ldi	r18, 0x00	; 0
    4c04:	30 e0       	ldi	r19, 0x00	; 0
    4c06:	4a e7       	ldi	r20, 0x7A	; 122
    4c08:	55 e4       	ldi	r21, 0x45	; 69
    4c0a:	6d 89       	ldd	r22, Y+21	; 0x15
    4c0c:	7e 89       	ldd	r23, Y+22	; 0x16
    4c0e:	8f 89       	ldd	r24, Y+23	; 0x17
    4c10:	98 8d       	ldd	r25, Y+24	; 0x18
    4c12:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    4c16:	dc 01       	movw	r26, r24
    4c18:	cb 01       	movw	r24, r22
    4c1a:	8f a3       	std	Y+39, r24	; 0x27
    4c1c:	98 a7       	std	Y+40, r25	; 0x28
    4c1e:	a9 a7       	std	Y+41, r26	; 0x29
    4c20:	ba a7       	std	Y+42, r27	; 0x2a
	if (__tmp < 1.0)
    4c22:	20 e0       	ldi	r18, 0x00	; 0
    4c24:	30 e0       	ldi	r19, 0x00	; 0
    4c26:	40 e8       	ldi	r20, 0x80	; 128
    4c28:	5f e3       	ldi	r21, 0x3F	; 63
    4c2a:	6f a1       	ldd	r22, Y+39	; 0x27
    4c2c:	78 a5       	ldd	r23, Y+40	; 0x28
    4c2e:	89 a5       	ldd	r24, Y+41	; 0x29
    4c30:	9a a5       	ldd	r25, Y+42	; 0x2a
    4c32:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    4c36:	88 23       	and	r24, r24
    4c38:	2c f4       	brge	.+10     	; 0x4c44 <play_short+0x71a>
		__ticks = 1;
    4c3a:	81 e0       	ldi	r24, 0x01	; 1
    4c3c:	90 e0       	ldi	r25, 0x00	; 0
    4c3e:	9c a7       	std	Y+44, r25	; 0x2c
    4c40:	8b a7       	std	Y+43, r24	; 0x2b
    4c42:	3f c0       	rjmp	.+126    	; 0x4cc2 <play_short+0x798>
	else if (__tmp > 65535)
    4c44:	20 e0       	ldi	r18, 0x00	; 0
    4c46:	3f ef       	ldi	r19, 0xFF	; 255
    4c48:	4f e7       	ldi	r20, 0x7F	; 127
    4c4a:	57 e4       	ldi	r21, 0x47	; 71
    4c4c:	6f a1       	ldd	r22, Y+39	; 0x27
    4c4e:	78 a5       	ldd	r23, Y+40	; 0x28
    4c50:	89 a5       	ldd	r24, Y+41	; 0x29
    4c52:	9a a5       	ldd	r25, Y+42	; 0x2a
    4c54:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    4c58:	18 16       	cp	r1, r24
    4c5a:	4c f5       	brge	.+82     	; 0x4cae <play_short+0x784>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4c5c:	20 e0       	ldi	r18, 0x00	; 0
    4c5e:	30 e0       	ldi	r19, 0x00	; 0
    4c60:	40 e2       	ldi	r20, 0x20	; 32
    4c62:	51 e4       	ldi	r21, 0x41	; 65
    4c64:	6d 89       	ldd	r22, Y+21	; 0x15
    4c66:	7e 89       	ldd	r23, Y+22	; 0x16
    4c68:	8f 89       	ldd	r24, Y+23	; 0x17
    4c6a:	98 8d       	ldd	r25, Y+24	; 0x18
    4c6c:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    4c70:	dc 01       	movw	r26, r24
    4c72:	cb 01       	movw	r24, r22
    4c74:	bc 01       	movw	r22, r24
    4c76:	cd 01       	movw	r24, r26
    4c78:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    4c7c:	dc 01       	movw	r26, r24
    4c7e:	cb 01       	movw	r24, r22
    4c80:	9c a7       	std	Y+44, r25	; 0x2c
    4c82:	8b a7       	std	Y+43, r24	; 0x2b
    4c84:	0f c0       	rjmp	.+30     	; 0x4ca4 <play_short+0x77a>
    4c86:	80 e9       	ldi	r24, 0x90	; 144
    4c88:	91 e0       	ldi	r25, 0x01	; 1
    4c8a:	9e a7       	std	Y+46, r25	; 0x2e
    4c8c:	8d a7       	std	Y+45, r24	; 0x2d
    4c8e:	8d a5       	ldd	r24, Y+45	; 0x2d
    4c90:	9e a5       	ldd	r25, Y+46	; 0x2e
    4c92:	01 97       	sbiw	r24, 0x01	; 1
    4c94:	f1 f7       	brne	.-4      	; 0x4c92 <play_short+0x768>
    4c96:	9e a7       	std	Y+46, r25	; 0x2e
    4c98:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4c9a:	8b a5       	ldd	r24, Y+43	; 0x2b
    4c9c:	9c a5       	ldd	r25, Y+44	; 0x2c
    4c9e:	01 97       	sbiw	r24, 0x01	; 1
    4ca0:	9c a7       	std	Y+44, r25	; 0x2c
    4ca2:	8b a7       	std	Y+43, r24	; 0x2b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4ca4:	8b a5       	ldd	r24, Y+43	; 0x2b
    4ca6:	9c a5       	ldd	r25, Y+44	; 0x2c
    4ca8:	89 2b       	or	r24, r25
    4caa:	69 f7       	brne	.-38     	; 0x4c86 <play_short+0x75c>
    4cac:	14 c0       	rjmp	.+40     	; 0x4cd6 <play_short+0x7ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4cae:	6f a1       	ldd	r22, Y+39	; 0x27
    4cb0:	78 a5       	ldd	r23, Y+40	; 0x28
    4cb2:	89 a5       	ldd	r24, Y+41	; 0x29
    4cb4:	9a a5       	ldd	r25, Y+42	; 0x2a
    4cb6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    4cba:	dc 01       	movw	r26, r24
    4cbc:	cb 01       	movw	r24, r22
    4cbe:	9c a7       	std	Y+44, r25	; 0x2c
    4cc0:	8b a7       	std	Y+43, r24	; 0x2b
    4cc2:	8b a5       	ldd	r24, Y+43	; 0x2b
    4cc4:	9c a5       	ldd	r25, Y+44	; 0x2c
    4cc6:	98 ab       	std	Y+48, r25	; 0x30
    4cc8:	8f a7       	std	Y+47, r24	; 0x2f
    4cca:	8f a5       	ldd	r24, Y+47	; 0x2f
    4ccc:	98 a9       	ldd	r25, Y+48	; 0x30
    4cce:	01 97       	sbiw	r24, 0x01	; 1
    4cd0:	f1 f7       	brne	.-4      	; 0x4cce <play_short+0x7a4>
    4cd2:	98 ab       	std	Y+48, r25	; 0x30
    4cd4:	8f a7       	std	Y+47, r24	; 0x2f
	_delay_ms(550);
	to_uARM("M2210 F380 T100\n");
    4cd6:	8b ef       	ldi	r24, 0xFB	; 251
    4cd8:	91 e0       	ldi	r25, 0x01	; 1
    4cda:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    4cde:	80 e0       	ldi	r24, 0x00	; 0
    4ce0:	90 ec       	ldi	r25, 0xC0	; 192
    4ce2:	af e0       	ldi	r26, 0x0F	; 15
    4ce4:	b4 e4       	ldi	r27, 0x44	; 68
    4ce6:	89 8f       	std	Y+25, r24	; 0x19
    4ce8:	9a 8f       	std	Y+26, r25	; 0x1a
    4cea:	ab 8f       	std	Y+27, r26	; 0x1b
    4cec:	bc 8f       	std	Y+28, r27	; 0x1c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4cee:	20 e0       	ldi	r18, 0x00	; 0
    4cf0:	30 e0       	ldi	r19, 0x00	; 0
    4cf2:	4a e7       	ldi	r20, 0x7A	; 122
    4cf4:	55 e4       	ldi	r21, 0x45	; 69
    4cf6:	69 8d       	ldd	r22, Y+25	; 0x19
    4cf8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4cfa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4cfc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4cfe:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    4d02:	dc 01       	movw	r26, r24
    4d04:	cb 01       	movw	r24, r22
    4d06:	8d 8f       	std	Y+29, r24	; 0x1d
    4d08:	9e 8f       	std	Y+30, r25	; 0x1e
    4d0a:	af 8f       	std	Y+31, r26	; 0x1f
    4d0c:	b8 a3       	std	Y+32, r27	; 0x20
	if (__tmp < 1.0)
    4d0e:	20 e0       	ldi	r18, 0x00	; 0
    4d10:	30 e0       	ldi	r19, 0x00	; 0
    4d12:	40 e8       	ldi	r20, 0x80	; 128
    4d14:	5f e3       	ldi	r21, 0x3F	; 63
    4d16:	6d 8d       	ldd	r22, Y+29	; 0x1d
    4d18:	7e 8d       	ldd	r23, Y+30	; 0x1e
    4d1a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4d1c:	98 a1       	ldd	r25, Y+32	; 0x20
    4d1e:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    4d22:	88 23       	and	r24, r24
    4d24:	2c f4       	brge	.+10     	; 0x4d30 <play_short+0x806>
		__ticks = 1;
    4d26:	81 e0       	ldi	r24, 0x01	; 1
    4d28:	90 e0       	ldi	r25, 0x00	; 0
    4d2a:	9a a3       	std	Y+34, r25	; 0x22
    4d2c:	89 a3       	std	Y+33, r24	; 0x21
    4d2e:	3f c0       	rjmp	.+126    	; 0x4dae <play_short+0x884>
	else if (__tmp > 65535)
    4d30:	20 e0       	ldi	r18, 0x00	; 0
    4d32:	3f ef       	ldi	r19, 0xFF	; 255
    4d34:	4f e7       	ldi	r20, 0x7F	; 127
    4d36:	57 e4       	ldi	r21, 0x47	; 71
    4d38:	6d 8d       	ldd	r22, Y+29	; 0x1d
    4d3a:	7e 8d       	ldd	r23, Y+30	; 0x1e
    4d3c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4d3e:	98 a1       	ldd	r25, Y+32	; 0x20
    4d40:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    4d44:	18 16       	cp	r1, r24
    4d46:	4c f5       	brge	.+82     	; 0x4d9a <play_short+0x870>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4d48:	20 e0       	ldi	r18, 0x00	; 0
    4d4a:	30 e0       	ldi	r19, 0x00	; 0
    4d4c:	40 e2       	ldi	r20, 0x20	; 32
    4d4e:	51 e4       	ldi	r21, 0x41	; 65
    4d50:	69 8d       	ldd	r22, Y+25	; 0x19
    4d52:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4d54:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4d56:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4d58:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    4d5c:	dc 01       	movw	r26, r24
    4d5e:	cb 01       	movw	r24, r22
    4d60:	bc 01       	movw	r22, r24
    4d62:	cd 01       	movw	r24, r26
    4d64:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    4d68:	dc 01       	movw	r26, r24
    4d6a:	cb 01       	movw	r24, r22
    4d6c:	9a a3       	std	Y+34, r25	; 0x22
    4d6e:	89 a3       	std	Y+33, r24	; 0x21
    4d70:	0f c0       	rjmp	.+30     	; 0x4d90 <play_short+0x866>
    4d72:	80 e9       	ldi	r24, 0x90	; 144
    4d74:	91 e0       	ldi	r25, 0x01	; 1
    4d76:	9c a3       	std	Y+36, r25	; 0x24
    4d78:	8b a3       	std	Y+35, r24	; 0x23
    4d7a:	8b a1       	ldd	r24, Y+35	; 0x23
    4d7c:	9c a1       	ldd	r25, Y+36	; 0x24
    4d7e:	01 97       	sbiw	r24, 0x01	; 1
    4d80:	f1 f7       	brne	.-4      	; 0x4d7e <play_short+0x854>
    4d82:	9c a3       	std	Y+36, r25	; 0x24
    4d84:	8b a3       	std	Y+35, r24	; 0x23
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4d86:	89 a1       	ldd	r24, Y+33	; 0x21
    4d88:	9a a1       	ldd	r25, Y+34	; 0x22
    4d8a:	01 97       	sbiw	r24, 0x01	; 1
    4d8c:	9a a3       	std	Y+34, r25	; 0x22
    4d8e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4d90:	89 a1       	ldd	r24, Y+33	; 0x21
    4d92:	9a a1       	ldd	r25, Y+34	; 0x22
    4d94:	89 2b       	or	r24, r25
    4d96:	69 f7       	brne	.-38     	; 0x4d72 <play_short+0x848>
	_delay_ms(575);
}
    4d98:	14 c0       	rjmp	.+40     	; 0x4dc2 <play_short+0x898>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4d9a:	6d 8d       	ldd	r22, Y+29	; 0x1d
    4d9c:	7e 8d       	ldd	r23, Y+30	; 0x1e
    4d9e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4da0:	98 a1       	ldd	r25, Y+32	; 0x20
    4da2:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    4da6:	dc 01       	movw	r26, r24
    4da8:	cb 01       	movw	r24, r22
    4daa:	9a a3       	std	Y+34, r25	; 0x22
    4dac:	89 a3       	std	Y+33, r24	; 0x21
    4dae:	89 a1       	ldd	r24, Y+33	; 0x21
    4db0:	9a a1       	ldd	r25, Y+34	; 0x22
    4db2:	9e a3       	std	Y+38, r25	; 0x26
    4db4:	8d a3       	std	Y+37, r24	; 0x25
    4db6:	8d a1       	ldd	r24, Y+37	; 0x25
    4db8:	9e a1       	ldd	r25, Y+38	; 0x26
    4dba:	01 97       	sbiw	r24, 0x01	; 1
    4dbc:	f1 f7       	brne	.-4      	; 0x4dba <play_short+0x890>
    4dbe:	9e a3       	std	Y+38, r25	; 0x26
    4dc0:	8d a3       	std	Y+37, r24	; 0x25
    4dc2:	00 00       	nop
    4dc4:	ce 59       	subi	r28, 0x9E	; 158
    4dc6:	df 4f       	sbci	r29, 0xFF	; 255
    4dc8:	0f b6       	in	r0, 0x3f	; 63
    4dca:	f8 94       	cli
    4dcc:	de bf       	out	0x3e, r29	; 62
    4dce:	0f be       	out	0x3f, r0	; 63
    4dd0:	cd bf       	out	0x3d, r28	; 61
    4dd2:	df 91       	pop	r29
    4dd4:	cf 91       	pop	r28
    4dd6:	1f 91       	pop	r17
    4dd8:	0f 91       	pop	r16
    4dda:	08 95       	ret

00004ddc <beep_short>:
void beep_short()
{
    4ddc:	cf 93       	push	r28
    4dde:	df 93       	push	r29
    4de0:	cd b7       	in	r28, 0x3d	; 61
    4de2:	de b7       	in	r29, 0x3e	; 62
	to_uARM("M2210 F500 T20\n");
    4de4:	80 ed       	ldi	r24, 0xD0	; 208
    4de6:	92 e0       	ldi	r25, 0x02	; 2
    4de8:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
}
    4dec:	00 00       	nop
    4dee:	df 91       	pop	r29
    4df0:	cf 91       	pop	r28
    4df2:	08 95       	ret

00004df4 <error_beep>:
void error_beep()
{
    4df4:	cf 93       	push	r28
    4df6:	df 93       	push	r29
    4df8:	cd b7       	in	r28, 0x3d	; 61
    4dfa:	de b7       	in	r29, 0x3e	; 62
    4dfc:	aa 97       	sbiw	r28, 0x2a	; 42
    4dfe:	0f b6       	in	r0, 0x3f	; 63
    4e00:	f8 94       	cli
    4e02:	de bf       	out	0x3e, r29	; 62
    4e04:	0f be       	out	0x3f, r0	; 63
    4e06:	cd bf       	out	0x3d, r28	; 61
	if (play_beep)
    4e08:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    4e0c:	88 23       	and	r24, r24
    4e0e:	09 f4       	brne	.+2      	; 0x4e12 <error_beep+0x1e>
    4e10:	63 c1       	rjmp	.+710    	; 0x50d8 <error_beep+0x2e4>
	{
		to_uARM("M2210 F800 T250\n");
    4e12:	80 ee       	ldi	r24, 0xE0	; 224
    4e14:	92 e0       	ldi	r25, 0x02	; 2
    4e16:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    4e1a:	80 e0       	ldi	r24, 0x00	; 0
    4e1c:	90 e0       	ldi	r25, 0x00	; 0
    4e1e:	a6 e9       	ldi	r26, 0x96	; 150
    4e20:	b3 e4       	ldi	r27, 0x43	; 67
    4e22:	89 83       	std	Y+1, r24	; 0x01
    4e24:	9a 83       	std	Y+2, r25	; 0x02
    4e26:	ab 83       	std	Y+3, r26	; 0x03
    4e28:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4e2a:	20 e0       	ldi	r18, 0x00	; 0
    4e2c:	30 e0       	ldi	r19, 0x00	; 0
    4e2e:	4a e7       	ldi	r20, 0x7A	; 122
    4e30:	55 e4       	ldi	r21, 0x45	; 69
    4e32:	69 81       	ldd	r22, Y+1	; 0x01
    4e34:	7a 81       	ldd	r23, Y+2	; 0x02
    4e36:	8b 81       	ldd	r24, Y+3	; 0x03
    4e38:	9c 81       	ldd	r25, Y+4	; 0x04
    4e3a:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    4e3e:	dc 01       	movw	r26, r24
    4e40:	cb 01       	movw	r24, r22
    4e42:	89 a3       	std	Y+33, r24	; 0x21
    4e44:	9a a3       	std	Y+34, r25	; 0x22
    4e46:	ab a3       	std	Y+35, r26	; 0x23
    4e48:	bc a3       	std	Y+36, r27	; 0x24
	if (__tmp < 1.0)
    4e4a:	20 e0       	ldi	r18, 0x00	; 0
    4e4c:	30 e0       	ldi	r19, 0x00	; 0
    4e4e:	40 e8       	ldi	r20, 0x80	; 128
    4e50:	5f e3       	ldi	r21, 0x3F	; 63
    4e52:	69 a1       	ldd	r22, Y+33	; 0x21
    4e54:	7a a1       	ldd	r23, Y+34	; 0x22
    4e56:	8b a1       	ldd	r24, Y+35	; 0x23
    4e58:	9c a1       	ldd	r25, Y+36	; 0x24
    4e5a:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    4e5e:	88 23       	and	r24, r24
    4e60:	2c f4       	brge	.+10     	; 0x4e6c <error_beep+0x78>
		__ticks = 1;
    4e62:	81 e0       	ldi	r24, 0x01	; 1
    4e64:	90 e0       	ldi	r25, 0x00	; 0
    4e66:	9e a3       	std	Y+38, r25	; 0x26
    4e68:	8d a3       	std	Y+37, r24	; 0x25
    4e6a:	3f c0       	rjmp	.+126    	; 0x4eea <error_beep+0xf6>
	else if (__tmp > 65535)
    4e6c:	20 e0       	ldi	r18, 0x00	; 0
    4e6e:	3f ef       	ldi	r19, 0xFF	; 255
    4e70:	4f e7       	ldi	r20, 0x7F	; 127
    4e72:	57 e4       	ldi	r21, 0x47	; 71
    4e74:	69 a1       	ldd	r22, Y+33	; 0x21
    4e76:	7a a1       	ldd	r23, Y+34	; 0x22
    4e78:	8b a1       	ldd	r24, Y+35	; 0x23
    4e7a:	9c a1       	ldd	r25, Y+36	; 0x24
    4e7c:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    4e80:	18 16       	cp	r1, r24
    4e82:	4c f5       	brge	.+82     	; 0x4ed6 <error_beep+0xe2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4e84:	20 e0       	ldi	r18, 0x00	; 0
    4e86:	30 e0       	ldi	r19, 0x00	; 0
    4e88:	40 e2       	ldi	r20, 0x20	; 32
    4e8a:	51 e4       	ldi	r21, 0x41	; 65
    4e8c:	69 81       	ldd	r22, Y+1	; 0x01
    4e8e:	7a 81       	ldd	r23, Y+2	; 0x02
    4e90:	8b 81       	ldd	r24, Y+3	; 0x03
    4e92:	9c 81       	ldd	r25, Y+4	; 0x04
    4e94:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    4e98:	dc 01       	movw	r26, r24
    4e9a:	cb 01       	movw	r24, r22
    4e9c:	bc 01       	movw	r22, r24
    4e9e:	cd 01       	movw	r24, r26
    4ea0:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    4ea4:	dc 01       	movw	r26, r24
    4ea6:	cb 01       	movw	r24, r22
    4ea8:	9e a3       	std	Y+38, r25	; 0x26
    4eaa:	8d a3       	std	Y+37, r24	; 0x25
    4eac:	0f c0       	rjmp	.+30     	; 0x4ecc <error_beep+0xd8>
    4eae:	80 e9       	ldi	r24, 0x90	; 144
    4eb0:	91 e0       	ldi	r25, 0x01	; 1
    4eb2:	98 a7       	std	Y+40, r25	; 0x28
    4eb4:	8f a3       	std	Y+39, r24	; 0x27
    4eb6:	8f a1       	ldd	r24, Y+39	; 0x27
    4eb8:	98 a5       	ldd	r25, Y+40	; 0x28
    4eba:	01 97       	sbiw	r24, 0x01	; 1
    4ebc:	f1 f7       	brne	.-4      	; 0x4eba <error_beep+0xc6>
    4ebe:	98 a7       	std	Y+40, r25	; 0x28
    4ec0:	8f a3       	std	Y+39, r24	; 0x27
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4ec2:	8d a1       	ldd	r24, Y+37	; 0x25
    4ec4:	9e a1       	ldd	r25, Y+38	; 0x26
    4ec6:	01 97       	sbiw	r24, 0x01	; 1
    4ec8:	9e a3       	std	Y+38, r25	; 0x26
    4eca:	8d a3       	std	Y+37, r24	; 0x25
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4ecc:	8d a1       	ldd	r24, Y+37	; 0x25
    4ece:	9e a1       	ldd	r25, Y+38	; 0x26
    4ed0:	89 2b       	or	r24, r25
    4ed2:	69 f7       	brne	.-38     	; 0x4eae <error_beep+0xba>
    4ed4:	14 c0       	rjmp	.+40     	; 0x4efe <error_beep+0x10a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ed6:	69 a1       	ldd	r22, Y+33	; 0x21
    4ed8:	7a a1       	ldd	r23, Y+34	; 0x22
    4eda:	8b a1       	ldd	r24, Y+35	; 0x23
    4edc:	9c a1       	ldd	r25, Y+36	; 0x24
    4ede:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    4ee2:	dc 01       	movw	r26, r24
    4ee4:	cb 01       	movw	r24, r22
    4ee6:	9e a3       	std	Y+38, r25	; 0x26
    4ee8:	8d a3       	std	Y+37, r24	; 0x25
    4eea:	8d a1       	ldd	r24, Y+37	; 0x25
    4eec:	9e a1       	ldd	r25, Y+38	; 0x26
    4eee:	9a a7       	std	Y+42, r25	; 0x2a
    4ef0:	89 a7       	std	Y+41, r24	; 0x29
    4ef2:	89 a5       	ldd	r24, Y+41	; 0x29
    4ef4:	9a a5       	ldd	r25, Y+42	; 0x2a
    4ef6:	01 97       	sbiw	r24, 0x01	; 1
    4ef8:	f1 f7       	brne	.-4      	; 0x4ef6 <error_beep+0x102>
    4efa:	9a a7       	std	Y+42, r25	; 0x2a
    4efc:	89 a7       	std	Y+41, r24	; 0x29
		_delay_ms(300);
		to_uARM("M2210 F400 T250\n");
    4efe:	81 ef       	ldi	r24, 0xF1	; 241
    4f00:	92 e0       	ldi	r25, 0x02	; 2
    4f02:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    4f06:	80 e0       	ldi	r24, 0x00	; 0
    4f08:	90 e0       	ldi	r25, 0x00	; 0
    4f0a:	a6 e9       	ldi	r26, 0x96	; 150
    4f0c:	b3 e4       	ldi	r27, 0x43	; 67
    4f0e:	8d 83       	std	Y+5, r24	; 0x05
    4f10:	9e 83       	std	Y+6, r25	; 0x06
    4f12:	af 83       	std	Y+7, r26	; 0x07
    4f14:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4f16:	20 e0       	ldi	r18, 0x00	; 0
    4f18:	30 e0       	ldi	r19, 0x00	; 0
    4f1a:	4a e7       	ldi	r20, 0x7A	; 122
    4f1c:	55 e4       	ldi	r21, 0x45	; 69
    4f1e:	6d 81       	ldd	r22, Y+5	; 0x05
    4f20:	7e 81       	ldd	r23, Y+6	; 0x06
    4f22:	8f 81       	ldd	r24, Y+7	; 0x07
    4f24:	98 85       	ldd	r25, Y+8	; 0x08
    4f26:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    4f2a:	dc 01       	movw	r26, r24
    4f2c:	cb 01       	movw	r24, r22
    4f2e:	8f 8b       	std	Y+23, r24	; 0x17
    4f30:	98 8f       	std	Y+24, r25	; 0x18
    4f32:	a9 8f       	std	Y+25, r26	; 0x19
    4f34:	ba 8f       	std	Y+26, r27	; 0x1a
	if (__tmp < 1.0)
    4f36:	20 e0       	ldi	r18, 0x00	; 0
    4f38:	30 e0       	ldi	r19, 0x00	; 0
    4f3a:	40 e8       	ldi	r20, 0x80	; 128
    4f3c:	5f e3       	ldi	r21, 0x3F	; 63
    4f3e:	6f 89       	ldd	r22, Y+23	; 0x17
    4f40:	78 8d       	ldd	r23, Y+24	; 0x18
    4f42:	89 8d       	ldd	r24, Y+25	; 0x19
    4f44:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4f46:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    4f4a:	88 23       	and	r24, r24
    4f4c:	2c f4       	brge	.+10     	; 0x4f58 <error_beep+0x164>
		__ticks = 1;
    4f4e:	81 e0       	ldi	r24, 0x01	; 1
    4f50:	90 e0       	ldi	r25, 0x00	; 0
    4f52:	9c 8f       	std	Y+28, r25	; 0x1c
    4f54:	8b 8f       	std	Y+27, r24	; 0x1b
    4f56:	3f c0       	rjmp	.+126    	; 0x4fd6 <error_beep+0x1e2>
	else if (__tmp > 65535)
    4f58:	20 e0       	ldi	r18, 0x00	; 0
    4f5a:	3f ef       	ldi	r19, 0xFF	; 255
    4f5c:	4f e7       	ldi	r20, 0x7F	; 127
    4f5e:	57 e4       	ldi	r21, 0x47	; 71
    4f60:	6f 89       	ldd	r22, Y+23	; 0x17
    4f62:	78 8d       	ldd	r23, Y+24	; 0x18
    4f64:	89 8d       	ldd	r24, Y+25	; 0x19
    4f66:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4f68:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    4f6c:	18 16       	cp	r1, r24
    4f6e:	4c f5       	brge	.+82     	; 0x4fc2 <error_beep+0x1ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4f70:	20 e0       	ldi	r18, 0x00	; 0
    4f72:	30 e0       	ldi	r19, 0x00	; 0
    4f74:	40 e2       	ldi	r20, 0x20	; 32
    4f76:	51 e4       	ldi	r21, 0x41	; 65
    4f78:	6d 81       	ldd	r22, Y+5	; 0x05
    4f7a:	7e 81       	ldd	r23, Y+6	; 0x06
    4f7c:	8f 81       	ldd	r24, Y+7	; 0x07
    4f7e:	98 85       	ldd	r25, Y+8	; 0x08
    4f80:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    4f84:	dc 01       	movw	r26, r24
    4f86:	cb 01       	movw	r24, r22
    4f88:	bc 01       	movw	r22, r24
    4f8a:	cd 01       	movw	r24, r26
    4f8c:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    4f90:	dc 01       	movw	r26, r24
    4f92:	cb 01       	movw	r24, r22
    4f94:	9c 8f       	std	Y+28, r25	; 0x1c
    4f96:	8b 8f       	std	Y+27, r24	; 0x1b
    4f98:	0f c0       	rjmp	.+30     	; 0x4fb8 <error_beep+0x1c4>
    4f9a:	80 e9       	ldi	r24, 0x90	; 144
    4f9c:	91 e0       	ldi	r25, 0x01	; 1
    4f9e:	9e 8f       	std	Y+30, r25	; 0x1e
    4fa0:	8d 8f       	std	Y+29, r24	; 0x1d
    4fa2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4fa4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4fa6:	01 97       	sbiw	r24, 0x01	; 1
    4fa8:	f1 f7       	brne	.-4      	; 0x4fa6 <error_beep+0x1b2>
    4faa:	9e 8f       	std	Y+30, r25	; 0x1e
    4fac:	8d 8f       	std	Y+29, r24	; 0x1d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4fae:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4fb0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4fb2:	01 97       	sbiw	r24, 0x01	; 1
    4fb4:	9c 8f       	std	Y+28, r25	; 0x1c
    4fb6:	8b 8f       	std	Y+27, r24	; 0x1b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4fb8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4fba:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4fbc:	89 2b       	or	r24, r25
    4fbe:	69 f7       	brne	.-38     	; 0x4f9a <error_beep+0x1a6>
    4fc0:	14 c0       	rjmp	.+40     	; 0x4fea <error_beep+0x1f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4fc2:	6f 89       	ldd	r22, Y+23	; 0x17
    4fc4:	78 8d       	ldd	r23, Y+24	; 0x18
    4fc6:	89 8d       	ldd	r24, Y+25	; 0x19
    4fc8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4fca:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    4fce:	dc 01       	movw	r26, r24
    4fd0:	cb 01       	movw	r24, r22
    4fd2:	9c 8f       	std	Y+28, r25	; 0x1c
    4fd4:	8b 8f       	std	Y+27, r24	; 0x1b
    4fd6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4fd8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4fda:	98 a3       	std	Y+32, r25	; 0x20
    4fdc:	8f 8f       	std	Y+31, r24	; 0x1f
    4fde:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4fe0:	98 a1       	ldd	r25, Y+32	; 0x20
    4fe2:	01 97       	sbiw	r24, 0x01	; 1
    4fe4:	f1 f7       	brne	.-4      	; 0x4fe2 <error_beep+0x1ee>
    4fe6:	98 a3       	std	Y+32, r25	; 0x20
    4fe8:	8f 8f       	std	Y+31, r24	; 0x1f
		_delay_ms(300);
		to_uARM("M2210 F200 T250\n");
    4fea:	82 e0       	ldi	r24, 0x02	; 2
    4fec:	93 e0       	ldi	r25, 0x03	; 3
    4fee:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    4ff2:	80 e0       	ldi	r24, 0x00	; 0
    4ff4:	90 e0       	ldi	r25, 0x00	; 0
    4ff6:	a6 e9       	ldi	r26, 0x96	; 150
    4ff8:	b3 e4       	ldi	r27, 0x43	; 67
    4ffa:	89 87       	std	Y+9, r24	; 0x09
    4ffc:	9a 87       	std	Y+10, r25	; 0x0a
    4ffe:	ab 87       	std	Y+11, r26	; 0x0b
    5000:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    5002:	20 e0       	ldi	r18, 0x00	; 0
    5004:	30 e0       	ldi	r19, 0x00	; 0
    5006:	4a e7       	ldi	r20, 0x7A	; 122
    5008:	55 e4       	ldi	r21, 0x45	; 69
    500a:	69 85       	ldd	r22, Y+9	; 0x09
    500c:	7a 85       	ldd	r23, Y+10	; 0x0a
    500e:	8b 85       	ldd	r24, Y+11	; 0x0b
    5010:	9c 85       	ldd	r25, Y+12	; 0x0c
    5012:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    5016:	dc 01       	movw	r26, r24
    5018:	cb 01       	movw	r24, r22
    501a:	8d 87       	std	Y+13, r24	; 0x0d
    501c:	9e 87       	std	Y+14, r25	; 0x0e
    501e:	af 87       	std	Y+15, r26	; 0x0f
    5020:	b8 8b       	std	Y+16, r27	; 0x10
	if (__tmp < 1.0)
    5022:	20 e0       	ldi	r18, 0x00	; 0
    5024:	30 e0       	ldi	r19, 0x00	; 0
    5026:	40 e8       	ldi	r20, 0x80	; 128
    5028:	5f e3       	ldi	r21, 0x3F	; 63
    502a:	6d 85       	ldd	r22, Y+13	; 0x0d
    502c:	7e 85       	ldd	r23, Y+14	; 0x0e
    502e:	8f 85       	ldd	r24, Y+15	; 0x0f
    5030:	98 89       	ldd	r25, Y+16	; 0x10
    5032:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    5036:	88 23       	and	r24, r24
    5038:	2c f4       	brge	.+10     	; 0x5044 <error_beep+0x250>
		__ticks = 1;
    503a:	81 e0       	ldi	r24, 0x01	; 1
    503c:	90 e0       	ldi	r25, 0x00	; 0
    503e:	9a 8b       	std	Y+18, r25	; 0x12
    5040:	89 8b       	std	Y+17, r24	; 0x11
    5042:	3f c0       	rjmp	.+126    	; 0x50c2 <error_beep+0x2ce>
	else if (__tmp > 65535)
    5044:	20 e0       	ldi	r18, 0x00	; 0
    5046:	3f ef       	ldi	r19, 0xFF	; 255
    5048:	4f e7       	ldi	r20, 0x7F	; 127
    504a:	57 e4       	ldi	r21, 0x47	; 71
    504c:	6d 85       	ldd	r22, Y+13	; 0x0d
    504e:	7e 85       	ldd	r23, Y+14	; 0x0e
    5050:	8f 85       	ldd	r24, Y+15	; 0x0f
    5052:	98 89       	ldd	r25, Y+16	; 0x10
    5054:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    5058:	18 16       	cp	r1, r24
    505a:	4c f5       	brge	.+82     	; 0x50ae <error_beep+0x2ba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    505c:	20 e0       	ldi	r18, 0x00	; 0
    505e:	30 e0       	ldi	r19, 0x00	; 0
    5060:	40 e2       	ldi	r20, 0x20	; 32
    5062:	51 e4       	ldi	r21, 0x41	; 65
    5064:	69 85       	ldd	r22, Y+9	; 0x09
    5066:	7a 85       	ldd	r23, Y+10	; 0x0a
    5068:	8b 85       	ldd	r24, Y+11	; 0x0b
    506a:	9c 85       	ldd	r25, Y+12	; 0x0c
    506c:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    5070:	dc 01       	movw	r26, r24
    5072:	cb 01       	movw	r24, r22
    5074:	bc 01       	movw	r22, r24
    5076:	cd 01       	movw	r24, r26
    5078:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    507c:	dc 01       	movw	r26, r24
    507e:	cb 01       	movw	r24, r22
    5080:	9a 8b       	std	Y+18, r25	; 0x12
    5082:	89 8b       	std	Y+17, r24	; 0x11
    5084:	0f c0       	rjmp	.+30     	; 0x50a4 <error_beep+0x2b0>
    5086:	80 e9       	ldi	r24, 0x90	; 144
    5088:	91 e0       	ldi	r25, 0x01	; 1
    508a:	9c 8b       	std	Y+20, r25	; 0x14
    508c:	8b 8b       	std	Y+19, r24	; 0x13
    508e:	8b 89       	ldd	r24, Y+19	; 0x13
    5090:	9c 89       	ldd	r25, Y+20	; 0x14
    5092:	01 97       	sbiw	r24, 0x01	; 1
    5094:	f1 f7       	brne	.-4      	; 0x5092 <error_beep+0x29e>
    5096:	9c 8b       	std	Y+20, r25	; 0x14
    5098:	8b 8b       	std	Y+19, r24	; 0x13
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    509a:	89 89       	ldd	r24, Y+17	; 0x11
    509c:	9a 89       	ldd	r25, Y+18	; 0x12
    509e:	01 97       	sbiw	r24, 0x01	; 1
    50a0:	9a 8b       	std	Y+18, r25	; 0x12
    50a2:	89 8b       	std	Y+17, r24	; 0x11
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    50a4:	89 89       	ldd	r24, Y+17	; 0x11
    50a6:	9a 89       	ldd	r25, Y+18	; 0x12
    50a8:	89 2b       	or	r24, r25
    50aa:	69 f7       	brne	.-38     	; 0x5086 <error_beep+0x292>
	}
	else
	{
		play_short();
	}
}
    50ac:	17 c0       	rjmp	.+46     	; 0x50dc <error_beep+0x2e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    50ae:	6d 85       	ldd	r22, Y+13	; 0x0d
    50b0:	7e 85       	ldd	r23, Y+14	; 0x0e
    50b2:	8f 85       	ldd	r24, Y+15	; 0x0f
    50b4:	98 89       	ldd	r25, Y+16	; 0x10
    50b6:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    50ba:	dc 01       	movw	r26, r24
    50bc:	cb 01       	movw	r24, r22
    50be:	9a 8b       	std	Y+18, r25	; 0x12
    50c0:	89 8b       	std	Y+17, r24	; 0x11
    50c2:	89 89       	ldd	r24, Y+17	; 0x11
    50c4:	9a 89       	ldd	r25, Y+18	; 0x12
    50c6:	9e 8b       	std	Y+22, r25	; 0x16
    50c8:	8d 8b       	std	Y+21, r24	; 0x15
    50ca:	8d 89       	ldd	r24, Y+21	; 0x15
    50cc:	9e 89       	ldd	r25, Y+22	; 0x16
    50ce:	01 97       	sbiw	r24, 0x01	; 1
    50d0:	f1 f7       	brne	.-4      	; 0x50ce <error_beep+0x2da>
    50d2:	9e 8b       	std	Y+22, r25	; 0x16
    50d4:	8d 8b       	std	Y+21, r24	; 0x15
    50d6:	02 c0       	rjmp	.+4      	; 0x50dc <error_beep+0x2e8>
		to_uARM("M2210 F200 T250\n");
		_delay_ms(300);
	}
	else
	{
		play_short();
    50d8:	0e 94 95 22 	call	0x452a	; 0x452a <play_short>
	}
}
    50dc:	00 00       	nop
    50de:	aa 96       	adiw	r28, 0x2a	; 42
    50e0:	0f b6       	in	r0, 0x3f	; 63
    50e2:	f8 94       	cli
    50e4:	de bf       	out	0x3e, r29	; 62
    50e6:	0f be       	out	0x3f, r0	; 63
    50e8:	cd bf       	out	0x3d, r28	; 61
    50ea:	df 91       	pop	r29
    50ec:	cf 91       	pop	r28
    50ee:	08 95       	ret

000050f0 <error_state>:
void error_state()
{
    50f0:	cf 93       	push	r28
    50f2:	df 93       	push	r29
    50f4:	cd b7       	in	r28, 0x3d	; 61
    50f6:	de b7       	in	r29, 0x3e	; 62
	set_led_mode(WAITING_FOR_FIRST_CMD);
    50f8:	80 e1       	ldi	r24, 0x10	; 16
    50fa:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <set_led_mode>
	error_beep();
    50fe:	0e 94 fa 26 	call	0x4df4	; 0x4df4 <error_beep>
	goto_start();
    5102:	0e 94 9d 03 	call	0x73a	; 0x73a <goto_start>
}
    5106:	00 00       	nop
    5108:	df 91       	pop	r29
    510a:	cf 91       	pop	r28
    510c:	08 95       	ret

0000510e <start_up_routine>:

void start_up_routine ()
{
    510e:	cf 93       	push	r28
    5110:	df 93       	push	r29
    5112:	cd b7       	in	r28, 0x3d	; 61
    5114:	de b7       	in	r29, 0x3e	; 62
    5116:	6c 97       	sbiw	r28, 0x1c	; 28
    5118:	0f b6       	in	r0, 0x3f	; 63
    511a:	f8 94       	cli
    511c:	de bf       	out	0x3e, r29	; 62
    511e:	0f be       	out	0x3f, r0	; 63
    5120:	cd bf       	out	0x3d, r28	; 61
	DDRA=0x0f;
    5122:	81 e2       	ldi	r24, 0x21	; 33
    5124:	90 e0       	ldi	r25, 0x00	; 0
    5126:	2f e0       	ldi	r18, 0x0F	; 15
    5128:	fc 01       	movw	r30, r24
    512a:	20 83       	st	Z, r18
	DDRB=0x00;
    512c:	84 e2       	ldi	r24, 0x24	; 36
    512e:	90 e0       	ldi	r25, 0x00	; 0
    5130:	fc 01       	movw	r30, r24
    5132:	10 82       	st	Z, r1
	DDRC=0x00;
    5134:	87 e2       	ldi	r24, 0x27	; 39
    5136:	90 e0       	ldi	r25, 0x00	; 0
    5138:	fc 01       	movw	r30, r24
    513a:	10 82       	st	Z, r1
	DDRD=0x00;
    513c:	8a e2       	ldi	r24, 0x2A	; 42
    513e:	90 e0       	ldi	r25, 0x00	; 0
    5140:	fc 01       	movw	r30, r24
    5142:	10 82       	st	Z, r1
	sei(); 					// Global Interrupts aktivieren
    5144:	78 94       	sei
	init_UART0();
    5146:	0e 94 a7 00 	call	0x14e	; 0x14e <init_UART0>
	init_UART1();
    514a:	0e 94 c8 00 	call	0x190	; 0x190 <init_UART1>
	set_led_mode(IDLE);
    514e:	80 e4       	ldi	r24, 0x40	; 64
    5150:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <set_led_mode>
    5154:	80 e0       	ldi	r24, 0x00	; 0
    5156:	90 e0       	ldi	r25, 0x00	; 0
    5158:	a0 e2       	ldi	r26, 0x20	; 32
    515a:	b1 e4       	ldi	r27, 0x41	; 65
    515c:	89 83       	std	Y+1, r24	; 0x01
    515e:	9a 83       	std	Y+2, r25	; 0x02
    5160:	ab 83       	std	Y+3, r26	; 0x03
    5162:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    5164:	20 e0       	ldi	r18, 0x00	; 0
    5166:	30 e0       	ldi	r19, 0x00	; 0
    5168:	4a e7       	ldi	r20, 0x7A	; 122
    516a:	55 e4       	ldi	r21, 0x45	; 69
    516c:	69 81       	ldd	r22, Y+1	; 0x01
    516e:	7a 81       	ldd	r23, Y+2	; 0x02
    5170:	8b 81       	ldd	r24, Y+3	; 0x03
    5172:	9c 81       	ldd	r25, Y+4	; 0x04
    5174:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    5178:	dc 01       	movw	r26, r24
    517a:	cb 01       	movw	r24, r22
    517c:	8b 8b       	std	Y+19, r24	; 0x13
    517e:	9c 8b       	std	Y+20, r25	; 0x14
    5180:	ad 8b       	std	Y+21, r26	; 0x15
    5182:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
    5184:	20 e0       	ldi	r18, 0x00	; 0
    5186:	30 e0       	ldi	r19, 0x00	; 0
    5188:	40 e8       	ldi	r20, 0x80	; 128
    518a:	5f e3       	ldi	r21, 0x3F	; 63
    518c:	6b 89       	ldd	r22, Y+19	; 0x13
    518e:	7c 89       	ldd	r23, Y+20	; 0x14
    5190:	8d 89       	ldd	r24, Y+21	; 0x15
    5192:	9e 89       	ldd	r25, Y+22	; 0x16
    5194:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    5198:	88 23       	and	r24, r24
    519a:	2c f4       	brge	.+10     	; 0x51a6 <start_up_routine+0x98>
		__ticks = 1;
    519c:	81 e0       	ldi	r24, 0x01	; 1
    519e:	90 e0       	ldi	r25, 0x00	; 0
    51a0:	98 8f       	std	Y+24, r25	; 0x18
    51a2:	8f 8b       	std	Y+23, r24	; 0x17
    51a4:	3f c0       	rjmp	.+126    	; 0x5224 <start_up_routine+0x116>
	else if (__tmp > 65535)
    51a6:	20 e0       	ldi	r18, 0x00	; 0
    51a8:	3f ef       	ldi	r19, 0xFF	; 255
    51aa:	4f e7       	ldi	r20, 0x7F	; 127
    51ac:	57 e4       	ldi	r21, 0x47	; 71
    51ae:	6b 89       	ldd	r22, Y+19	; 0x13
    51b0:	7c 89       	ldd	r23, Y+20	; 0x14
    51b2:	8d 89       	ldd	r24, Y+21	; 0x15
    51b4:	9e 89       	ldd	r25, Y+22	; 0x16
    51b6:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    51ba:	18 16       	cp	r1, r24
    51bc:	4c f5       	brge	.+82     	; 0x5210 <start_up_routine+0x102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    51be:	20 e0       	ldi	r18, 0x00	; 0
    51c0:	30 e0       	ldi	r19, 0x00	; 0
    51c2:	40 e2       	ldi	r20, 0x20	; 32
    51c4:	51 e4       	ldi	r21, 0x41	; 65
    51c6:	69 81       	ldd	r22, Y+1	; 0x01
    51c8:	7a 81       	ldd	r23, Y+2	; 0x02
    51ca:	8b 81       	ldd	r24, Y+3	; 0x03
    51cc:	9c 81       	ldd	r25, Y+4	; 0x04
    51ce:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    51d2:	dc 01       	movw	r26, r24
    51d4:	cb 01       	movw	r24, r22
    51d6:	bc 01       	movw	r22, r24
    51d8:	cd 01       	movw	r24, r26
    51da:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    51de:	dc 01       	movw	r26, r24
    51e0:	cb 01       	movw	r24, r22
    51e2:	98 8f       	std	Y+24, r25	; 0x18
    51e4:	8f 8b       	std	Y+23, r24	; 0x17
    51e6:	0f c0       	rjmp	.+30     	; 0x5206 <start_up_routine+0xf8>
    51e8:	80 e9       	ldi	r24, 0x90	; 144
    51ea:	91 e0       	ldi	r25, 0x01	; 1
    51ec:	9a 8f       	std	Y+26, r25	; 0x1a
    51ee:	89 8f       	std	Y+25, r24	; 0x19
    51f0:	89 8d       	ldd	r24, Y+25	; 0x19
    51f2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    51f4:	01 97       	sbiw	r24, 0x01	; 1
    51f6:	f1 f7       	brne	.-4      	; 0x51f4 <start_up_routine+0xe6>
    51f8:	9a 8f       	std	Y+26, r25	; 0x1a
    51fa:	89 8f       	std	Y+25, r24	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    51fc:	8f 89       	ldd	r24, Y+23	; 0x17
    51fe:	98 8d       	ldd	r25, Y+24	; 0x18
    5200:	01 97       	sbiw	r24, 0x01	; 1
    5202:	98 8f       	std	Y+24, r25	; 0x18
    5204:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5206:	8f 89       	ldd	r24, Y+23	; 0x17
    5208:	98 8d       	ldd	r25, Y+24	; 0x18
    520a:	89 2b       	or	r24, r25
    520c:	69 f7       	brne	.-38     	; 0x51e8 <start_up_routine+0xda>
    520e:	14 c0       	rjmp	.+40     	; 0x5238 <start_up_routine+0x12a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5210:	6b 89       	ldd	r22, Y+19	; 0x13
    5212:	7c 89       	ldd	r23, Y+20	; 0x14
    5214:	8d 89       	ldd	r24, Y+21	; 0x15
    5216:	9e 89       	ldd	r25, Y+22	; 0x16
    5218:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    521c:	dc 01       	movw	r26, r24
    521e:	cb 01       	movw	r24, r22
    5220:	98 8f       	std	Y+24, r25	; 0x18
    5222:	8f 8b       	std	Y+23, r24	; 0x17
    5224:	8f 89       	ldd	r24, Y+23	; 0x17
    5226:	98 8d       	ldd	r25, Y+24	; 0x18
    5228:	9c 8f       	std	Y+28, r25	; 0x1c
    522a:	8b 8f       	std	Y+27, r24	; 0x1b
    522c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    522e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5230:	01 97       	sbiw	r24, 0x01	; 1
    5232:	f1 f7       	brne	.-4      	; 0x5230 <start_up_routine+0x122>
    5234:	9c 8f       	std	Y+28, r25	; 0x1c
    5236:	8b 8f       	std	Y+27, r24	; 0x1b
	_delay_ms(10);
	goto_start();
    5238:	0e 94 9d 03 	call	0x73a	; 0x73a <goto_start>
	make_sound();
    523c:	0e 94 94 02 	call	0x528	; 0x528 <make_sound>
		//{
			//send_Byte_0('D');
			//_delay_ms(500);
		//}
	//}
	beep_short();
    5240:	0e 94 ee 26 	call	0x4ddc	; 0x4ddc <beep_short>
	goto_start();
    5244:	0e 94 9d 03 	call	0x73a	; 0x73a <goto_start>
	set_led_mode(FINISHED);
    5248:	80 e2       	ldi	r24, 0x20	; 32
    524a:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <set_led_mode>
    524e:	80 e0       	ldi	r24, 0x00	; 0
    5250:	90 e4       	ldi	r25, 0x40	; 64
    5252:	ac e9       	ldi	r26, 0x9C	; 156
    5254:	b5 e4       	ldi	r27, 0x45	; 69
    5256:	8d 83       	std	Y+5, r24	; 0x05
    5258:	9e 83       	std	Y+6, r25	; 0x06
    525a:	af 83       	std	Y+7, r26	; 0x07
    525c:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    525e:	20 e0       	ldi	r18, 0x00	; 0
    5260:	30 e0       	ldi	r19, 0x00	; 0
    5262:	4a e7       	ldi	r20, 0x7A	; 122
    5264:	55 e4       	ldi	r21, 0x45	; 69
    5266:	6d 81       	ldd	r22, Y+5	; 0x05
    5268:	7e 81       	ldd	r23, Y+6	; 0x06
    526a:	8f 81       	ldd	r24, Y+7	; 0x07
    526c:	98 85       	ldd	r25, Y+8	; 0x08
    526e:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    5272:	dc 01       	movw	r26, r24
    5274:	cb 01       	movw	r24, r22
    5276:	89 87       	std	Y+9, r24	; 0x09
    5278:	9a 87       	std	Y+10, r25	; 0x0a
    527a:	ab 87       	std	Y+11, r26	; 0x0b
    527c:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
    527e:	20 e0       	ldi	r18, 0x00	; 0
    5280:	30 e0       	ldi	r19, 0x00	; 0
    5282:	40 e8       	ldi	r20, 0x80	; 128
    5284:	5f e3       	ldi	r21, 0x3F	; 63
    5286:	69 85       	ldd	r22, Y+9	; 0x09
    5288:	7a 85       	ldd	r23, Y+10	; 0x0a
    528a:	8b 85       	ldd	r24, Y+11	; 0x0b
    528c:	9c 85       	ldd	r25, Y+12	; 0x0c
    528e:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    5292:	88 23       	and	r24, r24
    5294:	2c f4       	brge	.+10     	; 0x52a0 <start_up_routine+0x192>
		__ticks = 1;
    5296:	81 e0       	ldi	r24, 0x01	; 1
    5298:	90 e0       	ldi	r25, 0x00	; 0
    529a:	9e 87       	std	Y+14, r25	; 0x0e
    529c:	8d 87       	std	Y+13, r24	; 0x0d
    529e:	3f c0       	rjmp	.+126    	; 0x531e <start_up_routine+0x210>
	else if (__tmp > 65535)
    52a0:	20 e0       	ldi	r18, 0x00	; 0
    52a2:	3f ef       	ldi	r19, 0xFF	; 255
    52a4:	4f e7       	ldi	r20, 0x7F	; 127
    52a6:	57 e4       	ldi	r21, 0x47	; 71
    52a8:	69 85       	ldd	r22, Y+9	; 0x09
    52aa:	7a 85       	ldd	r23, Y+10	; 0x0a
    52ac:	8b 85       	ldd	r24, Y+11	; 0x0b
    52ae:	9c 85       	ldd	r25, Y+12	; 0x0c
    52b0:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    52b4:	18 16       	cp	r1, r24
    52b6:	4c f5       	brge	.+82     	; 0x530a <start_up_routine+0x1fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    52b8:	20 e0       	ldi	r18, 0x00	; 0
    52ba:	30 e0       	ldi	r19, 0x00	; 0
    52bc:	40 e2       	ldi	r20, 0x20	; 32
    52be:	51 e4       	ldi	r21, 0x41	; 65
    52c0:	6d 81       	ldd	r22, Y+5	; 0x05
    52c2:	7e 81       	ldd	r23, Y+6	; 0x06
    52c4:	8f 81       	ldd	r24, Y+7	; 0x07
    52c6:	98 85       	ldd	r25, Y+8	; 0x08
    52c8:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    52cc:	dc 01       	movw	r26, r24
    52ce:	cb 01       	movw	r24, r22
    52d0:	bc 01       	movw	r22, r24
    52d2:	cd 01       	movw	r24, r26
    52d4:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    52d8:	dc 01       	movw	r26, r24
    52da:	cb 01       	movw	r24, r22
    52dc:	9e 87       	std	Y+14, r25	; 0x0e
    52de:	8d 87       	std	Y+13, r24	; 0x0d
    52e0:	0f c0       	rjmp	.+30     	; 0x5300 <start_up_routine+0x1f2>
    52e2:	80 e9       	ldi	r24, 0x90	; 144
    52e4:	91 e0       	ldi	r25, 0x01	; 1
    52e6:	98 8b       	std	Y+16, r25	; 0x10
    52e8:	8f 87       	std	Y+15, r24	; 0x0f
    52ea:	8f 85       	ldd	r24, Y+15	; 0x0f
    52ec:	98 89       	ldd	r25, Y+16	; 0x10
    52ee:	01 97       	sbiw	r24, 0x01	; 1
    52f0:	f1 f7       	brne	.-4      	; 0x52ee <start_up_routine+0x1e0>
    52f2:	98 8b       	std	Y+16, r25	; 0x10
    52f4:	8f 87       	std	Y+15, r24	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    52f6:	8d 85       	ldd	r24, Y+13	; 0x0d
    52f8:	9e 85       	ldd	r25, Y+14	; 0x0e
    52fa:	01 97       	sbiw	r24, 0x01	; 1
    52fc:	9e 87       	std	Y+14, r25	; 0x0e
    52fe:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5300:	8d 85       	ldd	r24, Y+13	; 0x0d
    5302:	9e 85       	ldd	r25, Y+14	; 0x0e
    5304:	89 2b       	or	r24, r25
    5306:	69 f7       	brne	.-38     	; 0x52e2 <start_up_routine+0x1d4>
    5308:	14 c0       	rjmp	.+40     	; 0x5332 <start_up_routine+0x224>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    530a:	69 85       	ldd	r22, Y+9	; 0x09
    530c:	7a 85       	ldd	r23, Y+10	; 0x0a
    530e:	8b 85       	ldd	r24, Y+11	; 0x0b
    5310:	9c 85       	ldd	r25, Y+12	; 0x0c
    5312:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    5316:	dc 01       	movw	r26, r24
    5318:	cb 01       	movw	r24, r22
    531a:	9e 87       	std	Y+14, r25	; 0x0e
    531c:	8d 87       	std	Y+13, r24	; 0x0d
    531e:	8d 85       	ldd	r24, Y+13	; 0x0d
    5320:	9e 85       	ldd	r25, Y+14	; 0x0e
    5322:	9a 8b       	std	Y+18, r25	; 0x12
    5324:	89 8b       	std	Y+17, r24	; 0x11
    5326:	89 89       	ldd	r24, Y+17	; 0x11
    5328:	9a 89       	ldd	r25, Y+18	; 0x12
    532a:	01 97       	sbiw	r24, 0x01	; 1
    532c:	f1 f7       	brne	.-4      	; 0x532a <start_up_routine+0x21c>
    532e:	9a 8b       	std	Y+18, r25	; 0x12
    5330:	89 8b       	std	Y+17, r24	; 0x11
	_delay_ms(5000);
	set_led_mode(IDLE);
    5332:	80 e4       	ldi	r24, 0x40	; 64
    5334:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <set_led_mode>
	goto_start();
    5338:	0e 94 9d 03 	call	0x73a	; 0x73a <goto_start>
}
    533c:	00 00       	nop
    533e:	6c 96       	adiw	r28, 0x1c	; 28
    5340:	0f b6       	in	r0, 0x3f	; 63
    5342:	f8 94       	cli
    5344:	de bf       	out	0x3e, r29	; 62
    5346:	0f be       	out	0x3f, r0	; 63
    5348:	cd bf       	out	0x3d, r28	; 61
    534a:	df 91       	pop	r29
    534c:	cf 91       	pop	r28
    534e:	08 95       	ret

00005350 <main>:

int main (void)
{
    5350:	cf 93       	push	r28
    5352:	df 93       	push	r29
    5354:	cd b7       	in	r28, 0x3d	; 61
    5356:	de b7       	in	r29, 0x3e	; 62
    5358:	cd 55       	subi	r28, 0x5D	; 93
    535a:	d1 09       	sbc	r29, r1
    535c:	0f b6       	in	r0, 0x3f	; 63
    535e:	f8 94       	cli
    5360:	de bf       	out	0x3e, r29	; 62
    5362:	0f be       	out	0x3f, r0	; 63
    5364:	cd bf       	out	0x3d, r28	; 61
	unsigned char taster,direction,counter,go_through;
	int recieved_X,recieved_Y;
	unsigned char buffer [30];
	unsigned char return_buffer[30];
	start_up_routine();
    5366:	0e 94 87 28 	call	0x510e	; 0x510e <start_up_routine>
	while(1)
	{
		taster=read_buttons();
    536a:	0e 94 c2 03 	call	0x784	; 0x784 <read_buttons>
    536e:	89 83       	std	Y+1, r24	; 0x01
		buttons(taster);
    5370:	89 81       	ldd	r24, Y+1	; 0x01
    5372:	0e 94 ce 03 	call	0x79c	; 0x79c <buttons>
		if (play_sound!=0)
    5376:	80 91 68 03 	lds	r24, 0x0368	; 0x800368 <play_sound>
    537a:	88 23       	and	r24, r24
    537c:	21 f0       	breq	.+8      	; 0x5386 <main+0x36>
		{
			play_somthin_booy();
    537e:	0e 94 ed 03 	call	0x7da	; 0x7da <play_somthin_booy>
			play_sound=0;
    5382:	10 92 68 03 	sts	0x0368, r1	; 0x800368 <play_sound>
		}
		if (routine_done>=1) //if routine done
    5386:	80 91 67 03 	lds	r24, 0x0367	; 0x800367 <routine_done>
    538a:	88 23       	and	r24, r24
    538c:	21 f0       	breq	.+8      	; 0x5396 <main+0x46>
		{
			make_sound();
    538e:	0e 94 94 02 	call	0x528	; 0x528 <make_sound>
			routine_done=0;
    5392:	10 92 67 03 	sts	0x0367, r1	; 0x800367 <routine_done>
		}
		if (uart_str_complete!=0)
    5396:	80 91 66 03 	lds	r24, 0x0366	; 0x800366 <uart_str_complete>
    539a:	88 23       	and	r24, r24
    539c:	31 f3       	breq	.-52     	; 0x536a <main+0x1a>
		{
			uart_str_complete=0;
    539e:	10 92 66 03 	sts	0x0366, r1	; 0x800366 <uart_str_complete>
			send_Byte_0('1');	
    53a2:	81 e3       	ldi	r24, 0x31	; 49
    53a4:	0e 94 00 01 	call	0x200	; 0x200 <send_Byte_0>
			recieved_Y=(data[1]-48)*1000+(data[2]-48)*100+(data[3]-48)*10+data[4]-48;
    53a8:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <data+0x1>
    53ac:	88 2f       	mov	r24, r24
    53ae:	90 e0       	ldi	r25, 0x00	; 0
    53b0:	ac 01       	movw	r20, r24
    53b2:	40 53       	subi	r20, 0x30	; 48
    53b4:	51 09       	sbc	r21, r1
    53b6:	88 ee       	ldi	r24, 0xE8	; 232
    53b8:	93 e0       	ldi	r25, 0x03	; 3
    53ba:	48 9f       	mul	r20, r24
    53bc:	90 01       	movw	r18, r0
    53be:	49 9f       	mul	r20, r25
    53c0:	30 0d       	add	r19, r0
    53c2:	58 9f       	mul	r21, r24
    53c4:	30 0d       	add	r19, r0
    53c6:	11 24       	eor	r1, r1
    53c8:	80 91 70 03 	lds	r24, 0x0370	; 0x800370 <data+0x2>
    53cc:	88 2f       	mov	r24, r24
    53ce:	90 e0       	ldi	r25, 0x00	; 0
    53d0:	ac 01       	movw	r20, r24
    53d2:	40 53       	subi	r20, 0x30	; 48
    53d4:	51 09       	sbc	r21, r1
    53d6:	64 e6       	ldi	r22, 0x64	; 100
    53d8:	64 9f       	mul	r22, r20
    53da:	c0 01       	movw	r24, r0
    53dc:	65 9f       	mul	r22, r21
    53de:	90 0d       	add	r25, r0
    53e0:	11 24       	eor	r1, r1
    53e2:	28 0f       	add	r18, r24
    53e4:	39 1f       	adc	r19, r25
    53e6:	80 91 71 03 	lds	r24, 0x0371	; 0x800371 <data+0x3>
    53ea:	88 2f       	mov	r24, r24
    53ec:	90 e0       	ldi	r25, 0x00	; 0
    53ee:	c0 97       	sbiw	r24, 0x30	; 48
    53f0:	88 0f       	add	r24, r24
    53f2:	99 1f       	adc	r25, r25
    53f4:	ac 01       	movw	r20, r24
    53f6:	44 0f       	add	r20, r20
    53f8:	55 1f       	adc	r21, r21
    53fa:	44 0f       	add	r20, r20
    53fc:	55 1f       	adc	r21, r21
    53fe:	84 0f       	add	r24, r20
    5400:	95 1f       	adc	r25, r21
    5402:	28 0f       	add	r18, r24
    5404:	39 1f       	adc	r19, r25
    5406:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <data+0x4>
    540a:	88 2f       	mov	r24, r24
    540c:	90 e0       	ldi	r25, 0x00	; 0
    540e:	82 0f       	add	r24, r18
    5410:	93 1f       	adc	r25, r19
    5412:	c0 97       	sbiw	r24, 0x30	; 48
    5414:	9b 83       	std	Y+3, r25	; 0x03
    5416:	8a 83       	std	Y+2, r24	; 0x02
			recieved_X=(data[6]-48)*1000+(data[7]-48)*100+(data[8]-48)*10+data[9]-48;
    5418:	80 91 74 03 	lds	r24, 0x0374	; 0x800374 <data+0x6>
    541c:	88 2f       	mov	r24, r24
    541e:	90 e0       	ldi	r25, 0x00	; 0
    5420:	ac 01       	movw	r20, r24
    5422:	40 53       	subi	r20, 0x30	; 48
    5424:	51 09       	sbc	r21, r1
    5426:	88 ee       	ldi	r24, 0xE8	; 232
    5428:	93 e0       	ldi	r25, 0x03	; 3
    542a:	48 9f       	mul	r20, r24
    542c:	90 01       	movw	r18, r0
    542e:	49 9f       	mul	r20, r25
    5430:	30 0d       	add	r19, r0
    5432:	58 9f       	mul	r21, r24
    5434:	30 0d       	add	r19, r0
    5436:	11 24       	eor	r1, r1
    5438:	80 91 75 03 	lds	r24, 0x0375	; 0x800375 <data+0x7>
    543c:	88 2f       	mov	r24, r24
    543e:	90 e0       	ldi	r25, 0x00	; 0
    5440:	ac 01       	movw	r20, r24
    5442:	40 53       	subi	r20, 0x30	; 48
    5444:	51 09       	sbc	r21, r1
    5446:	64 e6       	ldi	r22, 0x64	; 100
    5448:	64 9f       	mul	r22, r20
    544a:	c0 01       	movw	r24, r0
    544c:	65 9f       	mul	r22, r21
    544e:	90 0d       	add	r25, r0
    5450:	11 24       	eor	r1, r1
    5452:	28 0f       	add	r18, r24
    5454:	39 1f       	adc	r19, r25
    5456:	80 91 76 03 	lds	r24, 0x0376	; 0x800376 <data+0x8>
    545a:	88 2f       	mov	r24, r24
    545c:	90 e0       	ldi	r25, 0x00	; 0
    545e:	c0 97       	sbiw	r24, 0x30	; 48
    5460:	88 0f       	add	r24, r24
    5462:	99 1f       	adc	r25, r25
    5464:	ac 01       	movw	r20, r24
    5466:	44 0f       	add	r20, r20
    5468:	55 1f       	adc	r21, r21
    546a:	44 0f       	add	r20, r20
    546c:	55 1f       	adc	r21, r21
    546e:	84 0f       	add	r24, r20
    5470:	95 1f       	adc	r25, r21
    5472:	28 0f       	add	r18, r24
    5474:	39 1f       	adc	r19, r25
    5476:	80 91 77 03 	lds	r24, 0x0377	; 0x800377 <data+0x9>
    547a:	88 2f       	mov	r24, r24
    547c:	90 e0       	ldi	r25, 0x00	; 0
    547e:	82 0f       	add	r24, r18
    5480:	93 1f       	adc	r25, r19
    5482:	c0 97       	sbiw	r24, 0x30	; 48
    5484:	9d 83       	std	Y+5, r25	; 0x05
    5486:	8c 83       	std	Y+4, r24	; 0x04
			//da hets en 2 ms delay drin gha... wer weiss
			snprintf(return_buffer,30,"%d %d",recieved_X,recieved_Y);
    5488:	8b 81       	ldd	r24, Y+3	; 0x03
    548a:	8f 93       	push	r24
    548c:	8a 81       	ldd	r24, Y+2	; 0x02
    548e:	8f 93       	push	r24
    5490:	8d 81       	ldd	r24, Y+5	; 0x05
    5492:	8f 93       	push	r24
    5494:	8c 81       	ldd	r24, Y+4	; 0x04
    5496:	8f 93       	push	r24
    5498:	83 e1       	ldi	r24, 0x13	; 19
    549a:	93 e0       	ldi	r25, 0x03	; 3
    549c:	89 2f       	mov	r24, r25
    549e:	8f 93       	push	r24
    54a0:	83 e1       	ldi	r24, 0x13	; 19
    54a2:	93 e0       	ldi	r25, 0x03	; 3
    54a4:	8f 93       	push	r24
    54a6:	1f 92       	push	r1
    54a8:	8e e1       	ldi	r24, 0x1E	; 30
    54aa:	8f 93       	push	r24
    54ac:	ce 01       	movw	r24, r28
    54ae:	80 5c       	subi	r24, 0xC0	; 192
    54b0:	9f 4f       	sbci	r25, 0xFF	; 255
    54b2:	29 2f       	mov	r18, r25
    54b4:	2f 93       	push	r18
    54b6:	8f 93       	push	r24
    54b8:	0e 94 15 2d 	call	0x5a2a	; 0x5a2a <snprintf>
    54bc:	8d b7       	in	r24, 0x3d	; 61
    54be:	9e b7       	in	r25, 0x3e	; 62
    54c0:	0a 96       	adiw	r24, 0x0a	; 10
    54c2:	0f b6       	in	r0, 0x3f	; 63
    54c4:	f8 94       	cli
    54c6:	de bf       	out	0x3e, r29	; 62
    54c8:	0f be       	out	0x3f, r0	; 63
    54ca:	cd bf       	out	0x3d, r28	; 61
			to_pc(return_buffer);
    54cc:	ce 01       	movw	r24, r28
    54ce:	80 5c       	subi	r24, 0xC0	; 192
    54d0:	9f 4f       	sbci	r25, 0xFF	; 255
    54d2:	0e 94 36 01 	call	0x26c	; 0x26c <to_pc>
			while(((false_state==0)&&(good==0))||((taster&0x01)!=0))
    54d6:	03 c0       	rjmp	.+6      	; 0x54de <main+0x18e>
			{
				taster = read_buttons();
    54d8:	0e 94 c2 03 	call	0x784	; 0x784 <read_buttons>
    54dc:	89 83       	std	Y+1, r24	; 0x01
			recieved_Y=(data[1]-48)*1000+(data[2]-48)*100+(data[3]-48)*10+data[4]-48;
			recieved_X=(data[6]-48)*1000+(data[7]-48)*100+(data[8]-48)*10+data[9]-48;
			//da hets en 2 ms delay drin gha... wer weiss
			snprintf(return_buffer,30,"%d %d",recieved_X,recieved_Y);
			to_pc(return_buffer);
			while(((false_state==0)&&(good==0))||((taster&0x01)!=0))
    54de:	80 91 65 03 	lds	r24, 0x0365	; 0x800365 <false_state>
    54e2:	88 23       	and	r24, r24
    54e4:	21 f4       	brne	.+8      	; 0x54ee <main+0x19e>
    54e6:	80 91 69 03 	lds	r24, 0x0369	; 0x800369 <good>
    54ea:	88 23       	and	r24, r24
    54ec:	a9 f3       	breq	.-22     	; 0x54d8 <main+0x188>
    54ee:	89 81       	ldd	r24, Y+1	; 0x01
    54f0:	88 2f       	mov	r24, r24
    54f2:	90 e0       	ldi	r25, 0x00	; 0
    54f4:	81 70       	andi	r24, 0x01	; 1
    54f6:	99 27       	eor	r25, r25
    54f8:	89 2b       	or	r24, r25
    54fa:	71 f7       	brne	.-36     	; 0x54d8 <main+0x188>
			{
				taster = read_buttons();
			}
			if (good!=0)
    54fc:	80 91 69 03 	lds	r24, 0x0369	; 0x800369 <good>
    5500:	88 23       	and	r24, r24
    5502:	09 f4       	brne	.+2      	; 0x5506 <main+0x1b6>
    5504:	cf c0       	rjmp	.+414    	; 0x56a4 <main+0x354>
			{
				good=0;
    5506:	10 92 69 03 	sts	0x0369, r1	; 0x800369 <good>
				//Grid anpassung
				recieved_X-=384;
    550a:	8c 81       	ldd	r24, Y+4	; 0x04
    550c:	9d 81       	ldd	r25, Y+5	; 0x05
    550e:	80 58       	subi	r24, 0x80	; 128
    5510:	91 40       	sbci	r25, 0x01	; 1
    5512:	9d 83       	std	Y+5, r25	; 0x05
    5514:	8c 83       	std	Y+4, r24	; 0x04
				recieved_Y-=512;
    5516:	8a 81       	ldd	r24, Y+2	; 0x02
    5518:	9b 81       	ldd	r25, Y+3	; 0x03
    551a:	92 50       	subi	r25, 0x02	; 2
    551c:	9b 83       	std	Y+3, r25	; 0x03
    551e:	8a 83       	std	Y+2, r24	; 0x02
				recieved_X=((recieved_X/5)*-1)+200;
    5520:	8c 81       	ldd	r24, Y+4	; 0x04
    5522:	9d 81       	ldd	r25, Y+5	; 0x05
    5524:	25 e0       	ldi	r18, 0x05	; 5
    5526:	30 e0       	ldi	r19, 0x00	; 0
    5528:	b9 01       	movw	r22, r18
    552a:	0e 94 e7 2c 	call	0x59ce	; 0x59ce <__divmodhi4>
    552e:	cb 01       	movw	r24, r22
    5530:	9c 01       	movw	r18, r24
    5532:	88 ec       	ldi	r24, 0xC8	; 200
    5534:	90 e0       	ldi	r25, 0x00	; 0
    5536:	82 1b       	sub	r24, r18
    5538:	93 0b       	sbc	r25, r19
    553a:	9d 83       	std	Y+5, r25	; 0x05
    553c:	8c 83       	std	Y+4, r24	; 0x04
				recieved_Y=(recieved_Y/5)*-1;
    553e:	8a 81       	ldd	r24, Y+2	; 0x02
    5540:	9b 81       	ldd	r25, Y+3	; 0x03
    5542:	25 e0       	ldi	r18, 0x05	; 5
    5544:	30 e0       	ldi	r19, 0x00	; 0
    5546:	b9 01       	movw	r22, r18
    5548:	0e 94 e7 2c 	call	0x59ce	; 0x59ce <__divmodhi4>
    554c:	cb 01       	movw	r24, r22
    554e:	91 95       	neg	r25
    5550:	81 95       	neg	r24
    5552:	91 09       	sbc	r25, r1
    5554:	9b 83       	std	Y+3, r25	; 0x03
    5556:	8a 83       	std	Y+2, r24	; 0x02
				snprintf(buffer,30,"G0 X%d Y%d Z-20 F6000\n",recieved_X,recieved_Y);//////////////////form new string
    5558:	8b 81       	ldd	r24, Y+3	; 0x03
    555a:	8f 93       	push	r24
    555c:	8a 81       	ldd	r24, Y+2	; 0x02
    555e:	8f 93       	push	r24
    5560:	8d 81       	ldd	r24, Y+5	; 0x05
    5562:	8f 93       	push	r24
    5564:	8c 81       	ldd	r24, Y+4	; 0x04
    5566:	8f 93       	push	r24
    5568:	89 e1       	ldi	r24, 0x19	; 25
    556a:	93 e0       	ldi	r25, 0x03	; 3
    556c:	89 2f       	mov	r24, r25
    556e:	8f 93       	push	r24
    5570:	89 e1       	ldi	r24, 0x19	; 25
    5572:	93 e0       	ldi	r25, 0x03	; 3
    5574:	8f 93       	push	r24
    5576:	1f 92       	push	r1
    5578:	8e e1       	ldi	r24, 0x1E	; 30
    557a:	8f 93       	push	r24
    557c:	ce 01       	movw	r24, r28
    557e:	82 96       	adiw	r24, 0x22	; 34
    5580:	29 2f       	mov	r18, r25
    5582:	2f 93       	push	r18
    5584:	8f 93       	push	r24
    5586:	0e 94 15 2d 	call	0x5a2a	; 0x5a2a <snprintf>
    558a:	8d b7       	in	r24, 0x3d	; 61
    558c:	9e b7       	in	r25, 0x3e	; 62
    558e:	0a 96       	adiw	r24, 0x0a	; 10
    5590:	0f b6       	in	r0, 0x3f	; 63
    5592:	f8 94       	cli
    5594:	de bf       	out	0x3e, r29	; 62
    5596:	0f be       	out	0x3f, r0	; 63
    5598:	cd bf       	out	0x3d, r28	; 61
				//to_uArm(buffer);		//send new string
				to_uARM(buffer);
    559a:	ce 01       	movw	r24, r28
    559c:	82 96       	adiw	r24, 0x22	; 34
    559e:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
    55a2:	80 e0       	ldi	r24, 0x00	; 0
    55a4:	90 e0       	ldi	r25, 0x00	; 0
    55a6:	a0 e0       	ldi	r26, 0x00	; 0
    55a8:	b0 e4       	ldi	r27, 0x40	; 64
    55aa:	8a 87       	std	Y+10, r24	; 0x0a
    55ac:	9b 87       	std	Y+11, r25	; 0x0b
    55ae:	ac 87       	std	Y+12, r26	; 0x0c
    55b0:	bd 87       	std	Y+13, r27	; 0x0d

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    55b2:	20 e0       	ldi	r18, 0x00	; 0
    55b4:	30 e0       	ldi	r19, 0x00	; 0
    55b6:	4a e7       	ldi	r20, 0x7A	; 122
    55b8:	55 e4       	ldi	r21, 0x45	; 69
    55ba:	6a 85       	ldd	r22, Y+10	; 0x0a
    55bc:	7b 85       	ldd	r23, Y+11	; 0x0b
    55be:	8c 85       	ldd	r24, Y+12	; 0x0c
    55c0:	9d 85       	ldd	r25, Y+13	; 0x0d
    55c2:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    55c6:	dc 01       	movw	r26, r24
    55c8:	cb 01       	movw	r24, r22
    55ca:	8e 87       	std	Y+14, r24	; 0x0e
    55cc:	9f 87       	std	Y+15, r25	; 0x0f
    55ce:	a8 8b       	std	Y+16, r26	; 0x10
    55d0:	b9 8b       	std	Y+17, r27	; 0x11
	if (__tmp < 1.0)
    55d2:	20 e0       	ldi	r18, 0x00	; 0
    55d4:	30 e0       	ldi	r19, 0x00	; 0
    55d6:	40 e8       	ldi	r20, 0x80	; 128
    55d8:	5f e3       	ldi	r21, 0x3F	; 63
    55da:	6e 85       	ldd	r22, Y+14	; 0x0e
    55dc:	7f 85       	ldd	r23, Y+15	; 0x0f
    55de:	88 89       	ldd	r24, Y+16	; 0x10
    55e0:	99 89       	ldd	r25, Y+17	; 0x11
    55e2:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    55e6:	88 23       	and	r24, r24
    55e8:	2c f4       	brge	.+10     	; 0x55f4 <main+0x2a4>
		__ticks = 1;
    55ea:	81 e0       	ldi	r24, 0x01	; 1
    55ec:	90 e0       	ldi	r25, 0x00	; 0
    55ee:	9b 8b       	std	Y+19, r25	; 0x13
    55f0:	8a 8b       	std	Y+18, r24	; 0x12
    55f2:	3f c0       	rjmp	.+126    	; 0x5672 <main+0x322>
	else if (__tmp > 65535)
    55f4:	20 e0       	ldi	r18, 0x00	; 0
    55f6:	3f ef       	ldi	r19, 0xFF	; 255
    55f8:	4f e7       	ldi	r20, 0x7F	; 127
    55fa:	57 e4       	ldi	r21, 0x47	; 71
    55fc:	6e 85       	ldd	r22, Y+14	; 0x0e
    55fe:	7f 85       	ldd	r23, Y+15	; 0x0f
    5600:	88 89       	ldd	r24, Y+16	; 0x10
    5602:	99 89       	ldd	r25, Y+17	; 0x11
    5604:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    5608:	18 16       	cp	r1, r24
    560a:	4c f5       	brge	.+82     	; 0x565e <main+0x30e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    560c:	20 e0       	ldi	r18, 0x00	; 0
    560e:	30 e0       	ldi	r19, 0x00	; 0
    5610:	40 e2       	ldi	r20, 0x20	; 32
    5612:	51 e4       	ldi	r21, 0x41	; 65
    5614:	6a 85       	ldd	r22, Y+10	; 0x0a
    5616:	7b 85       	ldd	r23, Y+11	; 0x0b
    5618:	8c 85       	ldd	r24, Y+12	; 0x0c
    561a:	9d 85       	ldd	r25, Y+13	; 0x0d
    561c:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    5620:	dc 01       	movw	r26, r24
    5622:	cb 01       	movw	r24, r22
    5624:	bc 01       	movw	r22, r24
    5626:	cd 01       	movw	r24, r26
    5628:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    562c:	dc 01       	movw	r26, r24
    562e:	cb 01       	movw	r24, r22
    5630:	9b 8b       	std	Y+19, r25	; 0x13
    5632:	8a 8b       	std	Y+18, r24	; 0x12
    5634:	0f c0       	rjmp	.+30     	; 0x5654 <main+0x304>
    5636:	80 e9       	ldi	r24, 0x90	; 144
    5638:	91 e0       	ldi	r25, 0x01	; 1
    563a:	9d 8b       	std	Y+21, r25	; 0x15
    563c:	8c 8b       	std	Y+20, r24	; 0x14
    563e:	8c 89       	ldd	r24, Y+20	; 0x14
    5640:	9d 89       	ldd	r25, Y+21	; 0x15
    5642:	01 97       	sbiw	r24, 0x01	; 1
    5644:	f1 f7       	brne	.-4      	; 0x5642 <main+0x2f2>
    5646:	9d 8b       	std	Y+21, r25	; 0x15
    5648:	8c 8b       	std	Y+20, r24	; 0x14
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    564a:	8a 89       	ldd	r24, Y+18	; 0x12
    564c:	9b 89       	ldd	r25, Y+19	; 0x13
    564e:	01 97       	sbiw	r24, 0x01	; 1
    5650:	9b 8b       	std	Y+19, r25	; 0x13
    5652:	8a 8b       	std	Y+18, r24	; 0x12
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5654:	8a 89       	ldd	r24, Y+18	; 0x12
    5656:	9b 89       	ldd	r25, Y+19	; 0x13
    5658:	89 2b       	or	r24, r25
    565a:	69 f7       	brne	.-38     	; 0x5636 <main+0x2e6>
    565c:	14 c0       	rjmp	.+40     	; 0x5686 <main+0x336>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    565e:	6e 85       	ldd	r22, Y+14	; 0x0e
    5660:	7f 85       	ldd	r23, Y+15	; 0x0f
    5662:	88 89       	ldd	r24, Y+16	; 0x10
    5664:	99 89       	ldd	r25, Y+17	; 0x11
    5666:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    566a:	dc 01       	movw	r26, r24
    566c:	cb 01       	movw	r24, r22
    566e:	9b 8b       	std	Y+19, r25	; 0x13
    5670:	8a 8b       	std	Y+18, r24	; 0x12
    5672:	8a 89       	ldd	r24, Y+18	; 0x12
    5674:	9b 89       	ldd	r25, Y+19	; 0x13
    5676:	9f 8b       	std	Y+23, r25	; 0x17
    5678:	8e 8b       	std	Y+22, r24	; 0x16
    567a:	8e 89       	ldd	r24, Y+22	; 0x16
    567c:	9f 89       	ldd	r25, Y+23	; 0x17
    567e:	01 97       	sbiw	r24, 0x01	; 1
    5680:	f1 f7       	brne	.-4      	; 0x567e <main+0x32e>
    5682:	9f 8b       	std	Y+23, r25	; 0x17
    5684:	8e 8b       	std	Y+22, r24	; 0x16
				_delay_ms(2);				//kleines wait bevor abfrage 
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    5686:	04 c0       	rjmp	.+8      	; 0x5690 <main+0x340>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
    5688:	81 e0       	ldi	r24, 0x01	; 1
    568a:	91 e0       	ldi	r25, 0x01	; 1
    568c:	0e 94 57 01 	call	0x2ae	; 0x2ae <to_uARM>
				recieved_Y=(recieved_Y/5)*-1;
				snprintf(buffer,30,"G0 X%d Y%d Z-20 F6000\n",recieved_X,recieved_Y);//////////////////form new string
				//to_uArm(buffer);		//send new string
				to_uARM(buffer);
				_delay_ms(2);				//kleines wait bevor abfrage 
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    5690:	80 91 36 03 	lds	r24, 0x0336	; 0x800336 <uart_string1+0x4>
    5694:	81 33       	cpi	r24, 0x31	; 49
    5696:	c1 f3       	breq	.-16     	; 0x5688 <main+0x338>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
				}
				beep();
    5698:	0e 94 b2 03 	call	0x764	; 0x764 <beep>
				send_Byte_0('1');		//return that action done
    569c:	81 e3       	ldi	r24, 0x31	; 49
    569e:	0e 94 00 01 	call	0x200	; 0x200 <send_Byte_0>
    56a2:	63 ce       	rjmp	.-826    	; 0x536a <main+0x1a>
			}
			else
			{
				false_state=0;
    56a4:	10 92 65 03 	sts	0x0365, r1	; 0x800365 <false_state>
				error_state();
    56a8:	0e 94 78 28 	call	0x50f0	; 0x50f0 <error_state>
    56ac:	80 e0       	ldi	r24, 0x00	; 0
    56ae:	90 e0       	ldi	r25, 0x00	; 0
    56b0:	aa ef       	ldi	r26, 0xFA	; 250
    56b2:	b3 e4       	ldi	r27, 0x43	; 67
    56b4:	8e 83       	std	Y+6, r24	; 0x06
    56b6:	9f 83       	std	Y+7, r25	; 0x07
    56b8:	a8 87       	std	Y+8, r26	; 0x08
    56ba:	b9 87       	std	Y+9, r27	; 0x09

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    56bc:	20 e0       	ldi	r18, 0x00	; 0
    56be:	30 e0       	ldi	r19, 0x00	; 0
    56c0:	4a e7       	ldi	r20, 0x7A	; 122
    56c2:	55 e4       	ldi	r21, 0x45	; 69
    56c4:	6e 81       	ldd	r22, Y+6	; 0x06
    56c6:	7f 81       	ldd	r23, Y+7	; 0x07
    56c8:	88 85       	ldd	r24, Y+8	; 0x08
    56ca:	99 85       	ldd	r25, Y+9	; 0x09
    56cc:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    56d0:	dc 01       	movw	r26, r24
    56d2:	cb 01       	movw	r24, r22
    56d4:	88 8f       	std	Y+24, r24	; 0x18
    56d6:	99 8f       	std	Y+25, r25	; 0x19
    56d8:	aa 8f       	std	Y+26, r26	; 0x1a
    56da:	bb 8f       	std	Y+27, r27	; 0x1b
	if (__tmp < 1.0)
    56dc:	20 e0       	ldi	r18, 0x00	; 0
    56de:	30 e0       	ldi	r19, 0x00	; 0
    56e0:	40 e8       	ldi	r20, 0x80	; 128
    56e2:	5f e3       	ldi	r21, 0x3F	; 63
    56e4:	68 8d       	ldd	r22, Y+24	; 0x18
    56e6:	79 8d       	ldd	r23, Y+25	; 0x19
    56e8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    56ea:	9b 8d       	ldd	r25, Y+27	; 0x1b
    56ec:	0e 94 cc 2b 	call	0x5798	; 0x5798 <__cmpsf2>
    56f0:	88 23       	and	r24, r24
    56f2:	2c f4       	brge	.+10     	; 0x56fe <main+0x3ae>
		__ticks = 1;
    56f4:	81 e0       	ldi	r24, 0x01	; 1
    56f6:	90 e0       	ldi	r25, 0x00	; 0
    56f8:	9d 8f       	std	Y+29, r25	; 0x1d
    56fa:	8c 8f       	std	Y+28, r24	; 0x1c
    56fc:	3f c0       	rjmp	.+126    	; 0x577c <main+0x42c>
	else if (__tmp > 65535)
    56fe:	20 e0       	ldi	r18, 0x00	; 0
    5700:	3f ef       	ldi	r19, 0xFF	; 255
    5702:	4f e7       	ldi	r20, 0x7F	; 127
    5704:	57 e4       	ldi	r21, 0x47	; 71
    5706:	68 8d       	ldd	r22, Y+24	; 0x18
    5708:	79 8d       	ldd	r23, Y+25	; 0x19
    570a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    570c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    570e:	0e 94 4d 2c 	call	0x589a	; 0x589a <__gesf2>
    5712:	18 16       	cp	r1, r24
    5714:	4c f5       	brge	.+82     	; 0x5768 <main+0x418>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5716:	20 e0       	ldi	r18, 0x00	; 0
    5718:	30 e0       	ldi	r19, 0x00	; 0
    571a:	40 e2       	ldi	r20, 0x20	; 32
    571c:	51 e4       	ldi	r21, 0x41	; 65
    571e:	6e 81       	ldd	r22, Y+6	; 0x06
    5720:	7f 81       	ldd	r23, Y+7	; 0x07
    5722:	88 85       	ldd	r24, Y+8	; 0x08
    5724:	99 85       	ldd	r25, Y+9	; 0x09
    5726:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <__mulsf3>
    572a:	dc 01       	movw	r26, r24
    572c:	cb 01       	movw	r24, r22
    572e:	bc 01       	movw	r22, r24
    5730:	cd 01       	movw	r24, r26
    5732:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    5736:	dc 01       	movw	r26, r24
    5738:	cb 01       	movw	r24, r22
    573a:	9d 8f       	std	Y+29, r25	; 0x1d
    573c:	8c 8f       	std	Y+28, r24	; 0x1c
    573e:	0f c0       	rjmp	.+30     	; 0x575e <main+0x40e>
    5740:	80 e9       	ldi	r24, 0x90	; 144
    5742:	91 e0       	ldi	r25, 0x01	; 1
    5744:	9f 8f       	std	Y+31, r25	; 0x1f
    5746:	8e 8f       	std	Y+30, r24	; 0x1e
    5748:	8e 8d       	ldd	r24, Y+30	; 0x1e
    574a:	9f 8d       	ldd	r25, Y+31	; 0x1f
    574c:	01 97       	sbiw	r24, 0x01	; 1
    574e:	f1 f7       	brne	.-4      	; 0x574c <main+0x3fc>
    5750:	9f 8f       	std	Y+31, r25	; 0x1f
    5752:	8e 8f       	std	Y+30, r24	; 0x1e
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5754:	8c 8d       	ldd	r24, Y+28	; 0x1c
    5756:	9d 8d       	ldd	r25, Y+29	; 0x1d
    5758:	01 97       	sbiw	r24, 0x01	; 1
    575a:	9d 8f       	std	Y+29, r25	; 0x1d
    575c:	8c 8f       	std	Y+28, r24	; 0x1c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    575e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    5760:	9d 8d       	ldd	r25, Y+29	; 0x1d
    5762:	89 2b       	or	r24, r25
    5764:	69 f7       	brne	.-38     	; 0x5740 <main+0x3f0>
    5766:	14 c0       	rjmp	.+40     	; 0x5790 <main+0x440>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5768:	68 8d       	ldd	r22, Y+24	; 0x18
    576a:	79 8d       	ldd	r23, Y+25	; 0x19
    576c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    576e:	9b 8d       	ldd	r25, Y+27	; 0x1b
    5770:	0e 94 d1 2b 	call	0x57a2	; 0x57a2 <__fixunssfsi>
    5774:	dc 01       	movw	r26, r24
    5776:	cb 01       	movw	r24, r22
    5778:	9d 8f       	std	Y+29, r25	; 0x1d
    577a:	8c 8f       	std	Y+28, r24	; 0x1c
    577c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    577e:	9d 8d       	ldd	r25, Y+29	; 0x1d
    5780:	99 a3       	std	Y+33, r25	; 0x21
    5782:	88 a3       	std	Y+32, r24	; 0x20
    5784:	88 a1       	ldd	r24, Y+32	; 0x20
    5786:	99 a1       	ldd	r25, Y+33	; 0x21
    5788:	01 97       	sbiw	r24, 0x01	; 1
    578a:	f1 f7       	brne	.-4      	; 0x5788 <main+0x438>
    578c:	99 a3       	std	Y+33, r25	; 0x21
    578e:	88 a3       	std	Y+32, r24	; 0x20
				_delay_ms(500);
				set_led_mode(IDLE);
    5790:	80 e4       	ldi	r24, 0x40	; 64
    5792:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <set_led_mode>
			}
		}		
	} //end while(1)
    5796:	e9 cd       	rjmp	.-1070   	; 0x536a <main+0x1a>

00005798 <__cmpsf2>:
    5798:	0e 94 00 2c 	call	0x5800	; 0x5800 <__fp_cmp>
    579c:	08 f4       	brcc	.+2      	; 0x57a0 <__cmpsf2+0x8>
    579e:	81 e0       	ldi	r24, 0x01	; 1
    57a0:	08 95       	ret

000057a2 <__fixunssfsi>:
    57a2:	0e 94 2c 2c 	call	0x5858	; 0x5858 <__fp_splitA>
    57a6:	88 f0       	brcs	.+34     	; 0x57ca <__fixunssfsi+0x28>
    57a8:	9f 57       	subi	r25, 0x7F	; 127
    57aa:	98 f0       	brcs	.+38     	; 0x57d2 <__fixunssfsi+0x30>
    57ac:	b9 2f       	mov	r27, r25
    57ae:	99 27       	eor	r25, r25
    57b0:	b7 51       	subi	r27, 0x17	; 23
    57b2:	b0 f0       	brcs	.+44     	; 0x57e0 <__fixunssfsi+0x3e>
    57b4:	e1 f0       	breq	.+56     	; 0x57ee <__fixunssfsi+0x4c>
    57b6:	66 0f       	add	r22, r22
    57b8:	77 1f       	adc	r23, r23
    57ba:	88 1f       	adc	r24, r24
    57bc:	99 1f       	adc	r25, r25
    57be:	1a f0       	brmi	.+6      	; 0x57c6 <__fixunssfsi+0x24>
    57c0:	ba 95       	dec	r27
    57c2:	c9 f7       	brne	.-14     	; 0x57b6 <__fixunssfsi+0x14>
    57c4:	14 c0       	rjmp	.+40     	; 0x57ee <__fixunssfsi+0x4c>
    57c6:	b1 30       	cpi	r27, 0x01	; 1
    57c8:	91 f0       	breq	.+36     	; 0x57ee <__fixunssfsi+0x4c>
    57ca:	0e 94 46 2c 	call	0x588c	; 0x588c <__fp_zero>
    57ce:	b1 e0       	ldi	r27, 0x01	; 1
    57d0:	08 95       	ret
    57d2:	0c 94 46 2c 	jmp	0x588c	; 0x588c <__fp_zero>
    57d6:	67 2f       	mov	r22, r23
    57d8:	78 2f       	mov	r23, r24
    57da:	88 27       	eor	r24, r24
    57dc:	b8 5f       	subi	r27, 0xF8	; 248
    57de:	39 f0       	breq	.+14     	; 0x57ee <__fixunssfsi+0x4c>
    57e0:	b9 3f       	cpi	r27, 0xF9	; 249
    57e2:	cc f3       	brlt	.-14     	; 0x57d6 <__fixunssfsi+0x34>
    57e4:	86 95       	lsr	r24
    57e6:	77 95       	ror	r23
    57e8:	67 95       	ror	r22
    57ea:	b3 95       	inc	r27
    57ec:	d9 f7       	brne	.-10     	; 0x57e4 <__fixunssfsi+0x42>
    57ee:	3e f4       	brtc	.+14     	; 0x57fe <__fixunssfsi+0x5c>
    57f0:	90 95       	com	r25
    57f2:	80 95       	com	r24
    57f4:	70 95       	com	r23
    57f6:	61 95       	neg	r22
    57f8:	7f 4f       	sbci	r23, 0xFF	; 255
    57fa:	8f 4f       	sbci	r24, 0xFF	; 255
    57fc:	9f 4f       	sbci	r25, 0xFF	; 255
    57fe:	08 95       	ret

00005800 <__fp_cmp>:
    5800:	99 0f       	add	r25, r25
    5802:	00 08       	sbc	r0, r0
    5804:	55 0f       	add	r21, r21
    5806:	aa 0b       	sbc	r26, r26
    5808:	e0 e8       	ldi	r30, 0x80	; 128
    580a:	fe ef       	ldi	r31, 0xFE	; 254
    580c:	16 16       	cp	r1, r22
    580e:	17 06       	cpc	r1, r23
    5810:	e8 07       	cpc	r30, r24
    5812:	f9 07       	cpc	r31, r25
    5814:	c0 f0       	brcs	.+48     	; 0x5846 <__fp_cmp+0x46>
    5816:	12 16       	cp	r1, r18
    5818:	13 06       	cpc	r1, r19
    581a:	e4 07       	cpc	r30, r20
    581c:	f5 07       	cpc	r31, r21
    581e:	98 f0       	brcs	.+38     	; 0x5846 <__fp_cmp+0x46>
    5820:	62 1b       	sub	r22, r18
    5822:	73 0b       	sbc	r23, r19
    5824:	84 0b       	sbc	r24, r20
    5826:	95 0b       	sbc	r25, r21
    5828:	39 f4       	brne	.+14     	; 0x5838 <__fp_cmp+0x38>
    582a:	0a 26       	eor	r0, r26
    582c:	61 f0       	breq	.+24     	; 0x5846 <__fp_cmp+0x46>
    582e:	23 2b       	or	r18, r19
    5830:	24 2b       	or	r18, r20
    5832:	25 2b       	or	r18, r21
    5834:	21 f4       	brne	.+8      	; 0x583e <__fp_cmp+0x3e>
    5836:	08 95       	ret
    5838:	0a 26       	eor	r0, r26
    583a:	09 f4       	brne	.+2      	; 0x583e <__fp_cmp+0x3e>
    583c:	a1 40       	sbci	r26, 0x01	; 1
    583e:	a6 95       	lsr	r26
    5840:	8f ef       	ldi	r24, 0xFF	; 255
    5842:	81 1d       	adc	r24, r1
    5844:	81 1d       	adc	r24, r1
    5846:	08 95       	ret

00005848 <__fp_split3>:
    5848:	57 fd       	sbrc	r21, 7
    584a:	90 58       	subi	r25, 0x80	; 128
    584c:	44 0f       	add	r20, r20
    584e:	55 1f       	adc	r21, r21
    5850:	59 f0       	breq	.+22     	; 0x5868 <__fp_splitA+0x10>
    5852:	5f 3f       	cpi	r21, 0xFF	; 255
    5854:	71 f0       	breq	.+28     	; 0x5872 <__fp_splitA+0x1a>
    5856:	47 95       	ror	r20

00005858 <__fp_splitA>:
    5858:	88 0f       	add	r24, r24
    585a:	97 fb       	bst	r25, 7
    585c:	99 1f       	adc	r25, r25
    585e:	61 f0       	breq	.+24     	; 0x5878 <__fp_splitA+0x20>
    5860:	9f 3f       	cpi	r25, 0xFF	; 255
    5862:	79 f0       	breq	.+30     	; 0x5882 <__fp_splitA+0x2a>
    5864:	87 95       	ror	r24
    5866:	08 95       	ret
    5868:	12 16       	cp	r1, r18
    586a:	13 06       	cpc	r1, r19
    586c:	14 06       	cpc	r1, r20
    586e:	55 1f       	adc	r21, r21
    5870:	f2 cf       	rjmp	.-28     	; 0x5856 <__fp_split3+0xe>
    5872:	46 95       	lsr	r20
    5874:	f1 df       	rcall	.-30     	; 0x5858 <__fp_splitA>
    5876:	08 c0       	rjmp	.+16     	; 0x5888 <__fp_splitA+0x30>
    5878:	16 16       	cp	r1, r22
    587a:	17 06       	cpc	r1, r23
    587c:	18 06       	cpc	r1, r24
    587e:	99 1f       	adc	r25, r25
    5880:	f1 cf       	rjmp	.-30     	; 0x5864 <__fp_splitA+0xc>
    5882:	86 95       	lsr	r24
    5884:	71 05       	cpc	r23, r1
    5886:	61 05       	cpc	r22, r1
    5888:	08 94       	sec
    588a:	08 95       	ret

0000588c <__fp_zero>:
    588c:	e8 94       	clt

0000588e <__fp_szero>:
    588e:	bb 27       	eor	r27, r27
    5890:	66 27       	eor	r22, r22
    5892:	77 27       	eor	r23, r23
    5894:	cb 01       	movw	r24, r22
    5896:	97 f9       	bld	r25, 7
    5898:	08 95       	ret

0000589a <__gesf2>:
    589a:	0e 94 00 2c 	call	0x5800	; 0x5800 <__fp_cmp>
    589e:	08 f4       	brcc	.+2      	; 0x58a2 <__gesf2+0x8>
    58a0:	8f ef       	ldi	r24, 0xFF	; 255
    58a2:	08 95       	ret

000058a4 <__mulsf3>:
    58a4:	0e 94 65 2c 	call	0x58ca	; 0x58ca <__mulsf3x>
    58a8:	0c 94 d6 2c 	jmp	0x59ac	; 0x59ac <__fp_round>
    58ac:	0e 94 c8 2c 	call	0x5990	; 0x5990 <__fp_pscA>
    58b0:	38 f0       	brcs	.+14     	; 0x58c0 <__mulsf3+0x1c>
    58b2:	0e 94 cf 2c 	call	0x599e	; 0x599e <__fp_pscB>
    58b6:	20 f0       	brcs	.+8      	; 0x58c0 <__mulsf3+0x1c>
    58b8:	95 23       	and	r25, r21
    58ba:	11 f0       	breq	.+4      	; 0x58c0 <__mulsf3+0x1c>
    58bc:	0c 94 bf 2c 	jmp	0x597e	; 0x597e <__fp_inf>
    58c0:	0c 94 c5 2c 	jmp	0x598a	; 0x598a <__fp_nan>
    58c4:	11 24       	eor	r1, r1
    58c6:	0c 94 47 2c 	jmp	0x588e	; 0x588e <__fp_szero>

000058ca <__mulsf3x>:
    58ca:	0e 94 24 2c 	call	0x5848	; 0x5848 <__fp_split3>
    58ce:	70 f3       	brcs	.-36     	; 0x58ac <__mulsf3+0x8>

000058d0 <__mulsf3_pse>:
    58d0:	95 9f       	mul	r25, r21
    58d2:	c1 f3       	breq	.-16     	; 0x58c4 <__mulsf3+0x20>
    58d4:	95 0f       	add	r25, r21
    58d6:	50 e0       	ldi	r21, 0x00	; 0
    58d8:	55 1f       	adc	r21, r21
    58da:	62 9f       	mul	r22, r18
    58dc:	f0 01       	movw	r30, r0
    58de:	72 9f       	mul	r23, r18
    58e0:	bb 27       	eor	r27, r27
    58e2:	f0 0d       	add	r31, r0
    58e4:	b1 1d       	adc	r27, r1
    58e6:	63 9f       	mul	r22, r19
    58e8:	aa 27       	eor	r26, r26
    58ea:	f0 0d       	add	r31, r0
    58ec:	b1 1d       	adc	r27, r1
    58ee:	aa 1f       	adc	r26, r26
    58f0:	64 9f       	mul	r22, r20
    58f2:	66 27       	eor	r22, r22
    58f4:	b0 0d       	add	r27, r0
    58f6:	a1 1d       	adc	r26, r1
    58f8:	66 1f       	adc	r22, r22
    58fa:	82 9f       	mul	r24, r18
    58fc:	22 27       	eor	r18, r18
    58fe:	b0 0d       	add	r27, r0
    5900:	a1 1d       	adc	r26, r1
    5902:	62 1f       	adc	r22, r18
    5904:	73 9f       	mul	r23, r19
    5906:	b0 0d       	add	r27, r0
    5908:	a1 1d       	adc	r26, r1
    590a:	62 1f       	adc	r22, r18
    590c:	83 9f       	mul	r24, r19
    590e:	a0 0d       	add	r26, r0
    5910:	61 1d       	adc	r22, r1
    5912:	22 1f       	adc	r18, r18
    5914:	74 9f       	mul	r23, r20
    5916:	33 27       	eor	r19, r19
    5918:	a0 0d       	add	r26, r0
    591a:	61 1d       	adc	r22, r1
    591c:	23 1f       	adc	r18, r19
    591e:	84 9f       	mul	r24, r20
    5920:	60 0d       	add	r22, r0
    5922:	21 1d       	adc	r18, r1
    5924:	82 2f       	mov	r24, r18
    5926:	76 2f       	mov	r23, r22
    5928:	6a 2f       	mov	r22, r26
    592a:	11 24       	eor	r1, r1
    592c:	9f 57       	subi	r25, 0x7F	; 127
    592e:	50 40       	sbci	r21, 0x00	; 0
    5930:	9a f0       	brmi	.+38     	; 0x5958 <__mulsf3_pse+0x88>
    5932:	f1 f0       	breq	.+60     	; 0x5970 <__mulsf3_pse+0xa0>
    5934:	88 23       	and	r24, r24
    5936:	4a f0       	brmi	.+18     	; 0x594a <__mulsf3_pse+0x7a>
    5938:	ee 0f       	add	r30, r30
    593a:	ff 1f       	adc	r31, r31
    593c:	bb 1f       	adc	r27, r27
    593e:	66 1f       	adc	r22, r22
    5940:	77 1f       	adc	r23, r23
    5942:	88 1f       	adc	r24, r24
    5944:	91 50       	subi	r25, 0x01	; 1
    5946:	50 40       	sbci	r21, 0x00	; 0
    5948:	a9 f7       	brne	.-22     	; 0x5934 <__mulsf3_pse+0x64>
    594a:	9e 3f       	cpi	r25, 0xFE	; 254
    594c:	51 05       	cpc	r21, r1
    594e:	80 f0       	brcs	.+32     	; 0x5970 <__mulsf3_pse+0xa0>
    5950:	0c 94 bf 2c 	jmp	0x597e	; 0x597e <__fp_inf>
    5954:	0c 94 47 2c 	jmp	0x588e	; 0x588e <__fp_szero>
    5958:	5f 3f       	cpi	r21, 0xFF	; 255
    595a:	e4 f3       	brlt	.-8      	; 0x5954 <__mulsf3_pse+0x84>
    595c:	98 3e       	cpi	r25, 0xE8	; 232
    595e:	d4 f3       	brlt	.-12     	; 0x5954 <__mulsf3_pse+0x84>
    5960:	86 95       	lsr	r24
    5962:	77 95       	ror	r23
    5964:	67 95       	ror	r22
    5966:	b7 95       	ror	r27
    5968:	f7 95       	ror	r31
    596a:	e7 95       	ror	r30
    596c:	9f 5f       	subi	r25, 0xFF	; 255
    596e:	c1 f7       	brne	.-16     	; 0x5960 <__mulsf3_pse+0x90>
    5970:	fe 2b       	or	r31, r30
    5972:	88 0f       	add	r24, r24
    5974:	91 1d       	adc	r25, r1
    5976:	96 95       	lsr	r25
    5978:	87 95       	ror	r24
    597a:	97 f9       	bld	r25, 7
    597c:	08 95       	ret

0000597e <__fp_inf>:
    597e:	97 f9       	bld	r25, 7
    5980:	9f 67       	ori	r25, 0x7F	; 127
    5982:	80 e8       	ldi	r24, 0x80	; 128
    5984:	70 e0       	ldi	r23, 0x00	; 0
    5986:	60 e0       	ldi	r22, 0x00	; 0
    5988:	08 95       	ret

0000598a <__fp_nan>:
    598a:	9f ef       	ldi	r25, 0xFF	; 255
    598c:	80 ec       	ldi	r24, 0xC0	; 192
    598e:	08 95       	ret

00005990 <__fp_pscA>:
    5990:	00 24       	eor	r0, r0
    5992:	0a 94       	dec	r0
    5994:	16 16       	cp	r1, r22
    5996:	17 06       	cpc	r1, r23
    5998:	18 06       	cpc	r1, r24
    599a:	09 06       	cpc	r0, r25
    599c:	08 95       	ret

0000599e <__fp_pscB>:
    599e:	00 24       	eor	r0, r0
    59a0:	0a 94       	dec	r0
    59a2:	12 16       	cp	r1, r18
    59a4:	13 06       	cpc	r1, r19
    59a6:	14 06       	cpc	r1, r20
    59a8:	05 06       	cpc	r0, r21
    59aa:	08 95       	ret

000059ac <__fp_round>:
    59ac:	09 2e       	mov	r0, r25
    59ae:	03 94       	inc	r0
    59b0:	00 0c       	add	r0, r0
    59b2:	11 f4       	brne	.+4      	; 0x59b8 <__fp_round+0xc>
    59b4:	88 23       	and	r24, r24
    59b6:	52 f0       	brmi	.+20     	; 0x59cc <__fp_round+0x20>
    59b8:	bb 0f       	add	r27, r27
    59ba:	40 f4       	brcc	.+16     	; 0x59cc <__fp_round+0x20>
    59bc:	bf 2b       	or	r27, r31
    59be:	11 f4       	brne	.+4      	; 0x59c4 <__fp_round+0x18>
    59c0:	60 ff       	sbrs	r22, 0
    59c2:	04 c0       	rjmp	.+8      	; 0x59cc <__fp_round+0x20>
    59c4:	6f 5f       	subi	r22, 0xFF	; 255
    59c6:	7f 4f       	sbci	r23, 0xFF	; 255
    59c8:	8f 4f       	sbci	r24, 0xFF	; 255
    59ca:	9f 4f       	sbci	r25, 0xFF	; 255
    59cc:	08 95       	ret

000059ce <__divmodhi4>:
    59ce:	97 fb       	bst	r25, 7
    59d0:	07 2e       	mov	r0, r23
    59d2:	16 f4       	brtc	.+4      	; 0x59d8 <__divmodhi4+0xa>
    59d4:	00 94       	com	r0
    59d6:	07 d0       	rcall	.+14     	; 0x59e6 <__divmodhi4_neg1>
    59d8:	77 fd       	sbrc	r23, 7
    59da:	09 d0       	rcall	.+18     	; 0x59ee <__divmodhi4_neg2>
    59dc:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <__udivmodhi4>
    59e0:	07 fc       	sbrc	r0, 7
    59e2:	05 d0       	rcall	.+10     	; 0x59ee <__divmodhi4_neg2>
    59e4:	3e f4       	brtc	.+14     	; 0x59f4 <__divmodhi4_exit>

000059e6 <__divmodhi4_neg1>:
    59e6:	90 95       	com	r25
    59e8:	81 95       	neg	r24
    59ea:	9f 4f       	sbci	r25, 0xFF	; 255
    59ec:	08 95       	ret

000059ee <__divmodhi4_neg2>:
    59ee:	70 95       	com	r23
    59f0:	61 95       	neg	r22
    59f2:	7f 4f       	sbci	r23, 0xFF	; 255

000059f4 <__divmodhi4_exit>:
    59f4:	08 95       	ret

000059f6 <__tablejump2__>:
    59f6:	ee 0f       	add	r30, r30
    59f8:	ff 1f       	adc	r31, r31
    59fa:	05 90       	lpm	r0, Z+
    59fc:	f4 91       	lpm	r31, Z
    59fe:	e0 2d       	mov	r30, r0
    5a00:	09 94       	ijmp

00005a02 <__udivmodhi4>:
    5a02:	aa 1b       	sub	r26, r26
    5a04:	bb 1b       	sub	r27, r27
    5a06:	51 e1       	ldi	r21, 0x11	; 17
    5a08:	07 c0       	rjmp	.+14     	; 0x5a18 <__udivmodhi4_ep>

00005a0a <__udivmodhi4_loop>:
    5a0a:	aa 1f       	adc	r26, r26
    5a0c:	bb 1f       	adc	r27, r27
    5a0e:	a6 17       	cp	r26, r22
    5a10:	b7 07       	cpc	r27, r23
    5a12:	10 f0       	brcs	.+4      	; 0x5a18 <__udivmodhi4_ep>
    5a14:	a6 1b       	sub	r26, r22
    5a16:	b7 0b       	sbc	r27, r23

00005a18 <__udivmodhi4_ep>:
    5a18:	88 1f       	adc	r24, r24
    5a1a:	99 1f       	adc	r25, r25
    5a1c:	5a 95       	dec	r21
    5a1e:	a9 f7       	brne	.-22     	; 0x5a0a <__udivmodhi4_loop>
    5a20:	80 95       	com	r24
    5a22:	90 95       	com	r25
    5a24:	bc 01       	movw	r22, r24
    5a26:	cd 01       	movw	r24, r26
    5a28:	08 95       	ret

00005a2a <snprintf>:
    5a2a:	ae e0       	ldi	r26, 0x0E	; 14
    5a2c:	b0 e0       	ldi	r27, 0x00	; 0
    5a2e:	eb e1       	ldi	r30, 0x1B	; 27
    5a30:	fd e2       	ldi	r31, 0x2D	; 45
    5a32:	0c 94 e4 2f 	jmp	0x5fc8	; 0x5fc8 <__prologue_saves__+0x1c>
    5a36:	0d 89       	ldd	r16, Y+21	; 0x15
    5a38:	1e 89       	ldd	r17, Y+22	; 0x16
    5a3a:	8f 89       	ldd	r24, Y+23	; 0x17
    5a3c:	98 8d       	ldd	r25, Y+24	; 0x18
    5a3e:	26 e0       	ldi	r18, 0x06	; 6
    5a40:	2c 83       	std	Y+4, r18	; 0x04
    5a42:	1a 83       	std	Y+2, r17	; 0x02
    5a44:	09 83       	std	Y+1, r16	; 0x01
    5a46:	97 ff       	sbrs	r25, 7
    5a48:	02 c0       	rjmp	.+4      	; 0x5a4e <snprintf+0x24>
    5a4a:	80 e0       	ldi	r24, 0x00	; 0
    5a4c:	90 e8       	ldi	r25, 0x80	; 128
    5a4e:	01 97       	sbiw	r24, 0x01	; 1
    5a50:	9e 83       	std	Y+6, r25	; 0x06
    5a52:	8d 83       	std	Y+5, r24	; 0x05
    5a54:	ae 01       	movw	r20, r28
    5a56:	45 5e       	subi	r20, 0xE5	; 229
    5a58:	5f 4f       	sbci	r21, 0xFF	; 255
    5a5a:	69 8d       	ldd	r22, Y+25	; 0x19
    5a5c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5a5e:	ce 01       	movw	r24, r28
    5a60:	01 96       	adiw	r24, 0x01	; 1
    5a62:	0e 94 45 2d 	call	0x5a8a	; 0x5a8a <vfprintf>
    5a66:	4d 81       	ldd	r20, Y+5	; 0x05
    5a68:	5e 81       	ldd	r21, Y+6	; 0x06
    5a6a:	57 fd       	sbrc	r21, 7
    5a6c:	0a c0       	rjmp	.+20     	; 0x5a82 <snprintf+0x58>
    5a6e:	2f 81       	ldd	r18, Y+7	; 0x07
    5a70:	38 85       	ldd	r19, Y+8	; 0x08
    5a72:	42 17       	cp	r20, r18
    5a74:	53 07       	cpc	r21, r19
    5a76:	0c f4       	brge	.+2      	; 0x5a7a <snprintf+0x50>
    5a78:	9a 01       	movw	r18, r20
    5a7a:	f8 01       	movw	r30, r16
    5a7c:	e2 0f       	add	r30, r18
    5a7e:	f3 1f       	adc	r31, r19
    5a80:	10 82       	st	Z, r1
    5a82:	2e 96       	adiw	r28, 0x0e	; 14
    5a84:	e4 e0       	ldi	r30, 0x04	; 4
    5a86:	0c 94 00 30 	jmp	0x6000	; 0x6000 <__epilogue_restores__+0x1c>

00005a8a <vfprintf>:
    5a8a:	ab e0       	ldi	r26, 0x0B	; 11
    5a8c:	b0 e0       	ldi	r27, 0x00	; 0
    5a8e:	eb e4       	ldi	r30, 0x4B	; 75
    5a90:	fd e2       	ldi	r31, 0x2D	; 45
    5a92:	0c 94 d6 2f 	jmp	0x5fac	; 0x5fac <__prologue_saves__>
    5a96:	6c 01       	movw	r12, r24
    5a98:	7b 01       	movw	r14, r22
    5a9a:	8a 01       	movw	r16, r20
    5a9c:	fc 01       	movw	r30, r24
    5a9e:	17 82       	std	Z+7, r1	; 0x07
    5aa0:	16 82       	std	Z+6, r1	; 0x06
    5aa2:	83 81       	ldd	r24, Z+3	; 0x03
    5aa4:	81 ff       	sbrs	r24, 1
    5aa6:	cc c1       	rjmp	.+920    	; 0x5e40 <vfprintf+0x3b6>
    5aa8:	ce 01       	movw	r24, r28
    5aaa:	01 96       	adiw	r24, 0x01	; 1
    5aac:	3c 01       	movw	r6, r24
    5aae:	f6 01       	movw	r30, r12
    5ab0:	93 81       	ldd	r25, Z+3	; 0x03
    5ab2:	f7 01       	movw	r30, r14
    5ab4:	93 fd       	sbrc	r25, 3
    5ab6:	85 91       	lpm	r24, Z+
    5ab8:	93 ff       	sbrs	r25, 3
    5aba:	81 91       	ld	r24, Z+
    5abc:	7f 01       	movw	r14, r30
    5abe:	88 23       	and	r24, r24
    5ac0:	09 f4       	brne	.+2      	; 0x5ac4 <vfprintf+0x3a>
    5ac2:	ba c1       	rjmp	.+884    	; 0x5e38 <vfprintf+0x3ae>
    5ac4:	85 32       	cpi	r24, 0x25	; 37
    5ac6:	39 f4       	brne	.+14     	; 0x5ad6 <vfprintf+0x4c>
    5ac8:	93 fd       	sbrc	r25, 3
    5aca:	85 91       	lpm	r24, Z+
    5acc:	93 ff       	sbrs	r25, 3
    5ace:	81 91       	ld	r24, Z+
    5ad0:	7f 01       	movw	r14, r30
    5ad2:	85 32       	cpi	r24, 0x25	; 37
    5ad4:	29 f4       	brne	.+10     	; 0x5ae0 <vfprintf+0x56>
    5ad6:	b6 01       	movw	r22, r12
    5ad8:	90 e0       	ldi	r25, 0x00	; 0
    5ada:	0e 94 3c 2f 	call	0x5e78	; 0x5e78 <fputc>
    5ade:	e7 cf       	rjmp	.-50     	; 0x5aae <vfprintf+0x24>
    5ae0:	91 2c       	mov	r9, r1
    5ae2:	21 2c       	mov	r2, r1
    5ae4:	31 2c       	mov	r3, r1
    5ae6:	ff e1       	ldi	r31, 0x1F	; 31
    5ae8:	f3 15       	cp	r31, r3
    5aea:	d8 f0       	brcs	.+54     	; 0x5b22 <vfprintf+0x98>
    5aec:	8b 32       	cpi	r24, 0x2B	; 43
    5aee:	79 f0       	breq	.+30     	; 0x5b0e <vfprintf+0x84>
    5af0:	38 f4       	brcc	.+14     	; 0x5b00 <vfprintf+0x76>
    5af2:	80 32       	cpi	r24, 0x20	; 32
    5af4:	79 f0       	breq	.+30     	; 0x5b14 <vfprintf+0x8a>
    5af6:	83 32       	cpi	r24, 0x23	; 35
    5af8:	a1 f4       	brne	.+40     	; 0x5b22 <vfprintf+0x98>
    5afa:	23 2d       	mov	r18, r3
    5afc:	20 61       	ori	r18, 0x10	; 16
    5afe:	1d c0       	rjmp	.+58     	; 0x5b3a <vfprintf+0xb0>
    5b00:	8d 32       	cpi	r24, 0x2D	; 45
    5b02:	61 f0       	breq	.+24     	; 0x5b1c <vfprintf+0x92>
    5b04:	80 33       	cpi	r24, 0x30	; 48
    5b06:	69 f4       	brne	.+26     	; 0x5b22 <vfprintf+0x98>
    5b08:	23 2d       	mov	r18, r3
    5b0a:	21 60       	ori	r18, 0x01	; 1
    5b0c:	16 c0       	rjmp	.+44     	; 0x5b3a <vfprintf+0xb0>
    5b0e:	83 2d       	mov	r24, r3
    5b10:	82 60       	ori	r24, 0x02	; 2
    5b12:	38 2e       	mov	r3, r24
    5b14:	e3 2d       	mov	r30, r3
    5b16:	e4 60       	ori	r30, 0x04	; 4
    5b18:	3e 2e       	mov	r3, r30
    5b1a:	2a c0       	rjmp	.+84     	; 0x5b70 <vfprintf+0xe6>
    5b1c:	f3 2d       	mov	r31, r3
    5b1e:	f8 60       	ori	r31, 0x08	; 8
    5b20:	1d c0       	rjmp	.+58     	; 0x5b5c <vfprintf+0xd2>
    5b22:	37 fc       	sbrc	r3, 7
    5b24:	2d c0       	rjmp	.+90     	; 0x5b80 <vfprintf+0xf6>
    5b26:	20 ed       	ldi	r18, 0xD0	; 208
    5b28:	28 0f       	add	r18, r24
    5b2a:	2a 30       	cpi	r18, 0x0A	; 10
    5b2c:	40 f0       	brcs	.+16     	; 0x5b3e <vfprintf+0xb4>
    5b2e:	8e 32       	cpi	r24, 0x2E	; 46
    5b30:	b9 f4       	brne	.+46     	; 0x5b60 <vfprintf+0xd6>
    5b32:	36 fc       	sbrc	r3, 6
    5b34:	81 c1       	rjmp	.+770    	; 0x5e38 <vfprintf+0x3ae>
    5b36:	23 2d       	mov	r18, r3
    5b38:	20 64       	ori	r18, 0x40	; 64
    5b3a:	32 2e       	mov	r3, r18
    5b3c:	19 c0       	rjmp	.+50     	; 0x5b70 <vfprintf+0xe6>
    5b3e:	36 fe       	sbrs	r3, 6
    5b40:	06 c0       	rjmp	.+12     	; 0x5b4e <vfprintf+0xc4>
    5b42:	8a e0       	ldi	r24, 0x0A	; 10
    5b44:	98 9e       	mul	r9, r24
    5b46:	20 0d       	add	r18, r0
    5b48:	11 24       	eor	r1, r1
    5b4a:	92 2e       	mov	r9, r18
    5b4c:	11 c0       	rjmp	.+34     	; 0x5b70 <vfprintf+0xe6>
    5b4e:	ea e0       	ldi	r30, 0x0A	; 10
    5b50:	2e 9e       	mul	r2, r30
    5b52:	20 0d       	add	r18, r0
    5b54:	11 24       	eor	r1, r1
    5b56:	22 2e       	mov	r2, r18
    5b58:	f3 2d       	mov	r31, r3
    5b5a:	f0 62       	ori	r31, 0x20	; 32
    5b5c:	3f 2e       	mov	r3, r31
    5b5e:	08 c0       	rjmp	.+16     	; 0x5b70 <vfprintf+0xe6>
    5b60:	8c 36       	cpi	r24, 0x6C	; 108
    5b62:	21 f4       	brne	.+8      	; 0x5b6c <vfprintf+0xe2>
    5b64:	83 2d       	mov	r24, r3
    5b66:	80 68       	ori	r24, 0x80	; 128
    5b68:	38 2e       	mov	r3, r24
    5b6a:	02 c0       	rjmp	.+4      	; 0x5b70 <vfprintf+0xe6>
    5b6c:	88 36       	cpi	r24, 0x68	; 104
    5b6e:	41 f4       	brne	.+16     	; 0x5b80 <vfprintf+0xf6>
    5b70:	f7 01       	movw	r30, r14
    5b72:	93 fd       	sbrc	r25, 3
    5b74:	85 91       	lpm	r24, Z+
    5b76:	93 ff       	sbrs	r25, 3
    5b78:	81 91       	ld	r24, Z+
    5b7a:	7f 01       	movw	r14, r30
    5b7c:	81 11       	cpse	r24, r1
    5b7e:	b3 cf       	rjmp	.-154    	; 0x5ae6 <vfprintf+0x5c>
    5b80:	98 2f       	mov	r25, r24
    5b82:	9f 7d       	andi	r25, 0xDF	; 223
    5b84:	95 54       	subi	r25, 0x45	; 69
    5b86:	93 30       	cpi	r25, 0x03	; 3
    5b88:	28 f4       	brcc	.+10     	; 0x5b94 <vfprintf+0x10a>
    5b8a:	0c 5f       	subi	r16, 0xFC	; 252
    5b8c:	1f 4f       	sbci	r17, 0xFF	; 255
    5b8e:	9f e3       	ldi	r25, 0x3F	; 63
    5b90:	99 83       	std	Y+1, r25	; 0x01
    5b92:	0d c0       	rjmp	.+26     	; 0x5bae <vfprintf+0x124>
    5b94:	83 36       	cpi	r24, 0x63	; 99
    5b96:	31 f0       	breq	.+12     	; 0x5ba4 <vfprintf+0x11a>
    5b98:	83 37       	cpi	r24, 0x73	; 115
    5b9a:	71 f0       	breq	.+28     	; 0x5bb8 <vfprintf+0x12e>
    5b9c:	83 35       	cpi	r24, 0x53	; 83
    5b9e:	09 f0       	breq	.+2      	; 0x5ba2 <vfprintf+0x118>
    5ba0:	59 c0       	rjmp	.+178    	; 0x5c54 <vfprintf+0x1ca>
    5ba2:	21 c0       	rjmp	.+66     	; 0x5be6 <vfprintf+0x15c>
    5ba4:	f8 01       	movw	r30, r16
    5ba6:	80 81       	ld	r24, Z
    5ba8:	89 83       	std	Y+1, r24	; 0x01
    5baa:	0e 5f       	subi	r16, 0xFE	; 254
    5bac:	1f 4f       	sbci	r17, 0xFF	; 255
    5bae:	88 24       	eor	r8, r8
    5bb0:	83 94       	inc	r8
    5bb2:	91 2c       	mov	r9, r1
    5bb4:	53 01       	movw	r10, r6
    5bb6:	13 c0       	rjmp	.+38     	; 0x5bde <vfprintf+0x154>
    5bb8:	28 01       	movw	r4, r16
    5bba:	f2 e0       	ldi	r31, 0x02	; 2
    5bbc:	4f 0e       	add	r4, r31
    5bbe:	51 1c       	adc	r5, r1
    5bc0:	f8 01       	movw	r30, r16
    5bc2:	a0 80       	ld	r10, Z
    5bc4:	b1 80       	ldd	r11, Z+1	; 0x01
    5bc6:	36 fe       	sbrs	r3, 6
    5bc8:	03 c0       	rjmp	.+6      	; 0x5bd0 <vfprintf+0x146>
    5bca:	69 2d       	mov	r22, r9
    5bcc:	70 e0       	ldi	r23, 0x00	; 0
    5bce:	02 c0       	rjmp	.+4      	; 0x5bd4 <vfprintf+0x14a>
    5bd0:	6f ef       	ldi	r22, 0xFF	; 255
    5bd2:	7f ef       	ldi	r23, 0xFF	; 255
    5bd4:	c5 01       	movw	r24, r10
    5bd6:	0e 94 31 2f 	call	0x5e62	; 0x5e62 <strnlen>
    5bda:	4c 01       	movw	r8, r24
    5bdc:	82 01       	movw	r16, r4
    5bde:	f3 2d       	mov	r31, r3
    5be0:	ff 77       	andi	r31, 0x7F	; 127
    5be2:	3f 2e       	mov	r3, r31
    5be4:	16 c0       	rjmp	.+44     	; 0x5c12 <vfprintf+0x188>
    5be6:	28 01       	movw	r4, r16
    5be8:	22 e0       	ldi	r18, 0x02	; 2
    5bea:	42 0e       	add	r4, r18
    5bec:	51 1c       	adc	r5, r1
    5bee:	f8 01       	movw	r30, r16
    5bf0:	a0 80       	ld	r10, Z
    5bf2:	b1 80       	ldd	r11, Z+1	; 0x01
    5bf4:	36 fe       	sbrs	r3, 6
    5bf6:	03 c0       	rjmp	.+6      	; 0x5bfe <vfprintf+0x174>
    5bf8:	69 2d       	mov	r22, r9
    5bfa:	70 e0       	ldi	r23, 0x00	; 0
    5bfc:	02 c0       	rjmp	.+4      	; 0x5c02 <vfprintf+0x178>
    5bfe:	6f ef       	ldi	r22, 0xFF	; 255
    5c00:	7f ef       	ldi	r23, 0xFF	; 255
    5c02:	c5 01       	movw	r24, r10
    5c04:	0e 94 26 2f 	call	0x5e4c	; 0x5e4c <strnlen_P>
    5c08:	4c 01       	movw	r8, r24
    5c0a:	f3 2d       	mov	r31, r3
    5c0c:	f0 68       	ori	r31, 0x80	; 128
    5c0e:	3f 2e       	mov	r3, r31
    5c10:	82 01       	movw	r16, r4
    5c12:	33 fc       	sbrc	r3, 3
    5c14:	1b c0       	rjmp	.+54     	; 0x5c4c <vfprintf+0x1c2>
    5c16:	82 2d       	mov	r24, r2
    5c18:	90 e0       	ldi	r25, 0x00	; 0
    5c1a:	88 16       	cp	r8, r24
    5c1c:	99 06       	cpc	r9, r25
    5c1e:	b0 f4       	brcc	.+44     	; 0x5c4c <vfprintf+0x1c2>
    5c20:	b6 01       	movw	r22, r12
    5c22:	80 e2       	ldi	r24, 0x20	; 32
    5c24:	90 e0       	ldi	r25, 0x00	; 0
    5c26:	0e 94 3c 2f 	call	0x5e78	; 0x5e78 <fputc>
    5c2a:	2a 94       	dec	r2
    5c2c:	f4 cf       	rjmp	.-24     	; 0x5c16 <vfprintf+0x18c>
    5c2e:	f5 01       	movw	r30, r10
    5c30:	37 fc       	sbrc	r3, 7
    5c32:	85 91       	lpm	r24, Z+
    5c34:	37 fe       	sbrs	r3, 7
    5c36:	81 91       	ld	r24, Z+
    5c38:	5f 01       	movw	r10, r30
    5c3a:	b6 01       	movw	r22, r12
    5c3c:	90 e0       	ldi	r25, 0x00	; 0
    5c3e:	0e 94 3c 2f 	call	0x5e78	; 0x5e78 <fputc>
    5c42:	21 10       	cpse	r2, r1
    5c44:	2a 94       	dec	r2
    5c46:	21 e0       	ldi	r18, 0x01	; 1
    5c48:	82 1a       	sub	r8, r18
    5c4a:	91 08       	sbc	r9, r1
    5c4c:	81 14       	cp	r8, r1
    5c4e:	91 04       	cpc	r9, r1
    5c50:	71 f7       	brne	.-36     	; 0x5c2e <vfprintf+0x1a4>
    5c52:	e8 c0       	rjmp	.+464    	; 0x5e24 <vfprintf+0x39a>
    5c54:	84 36       	cpi	r24, 0x64	; 100
    5c56:	11 f0       	breq	.+4      	; 0x5c5c <vfprintf+0x1d2>
    5c58:	89 36       	cpi	r24, 0x69	; 105
    5c5a:	41 f5       	brne	.+80     	; 0x5cac <vfprintf+0x222>
    5c5c:	f8 01       	movw	r30, r16
    5c5e:	37 fe       	sbrs	r3, 7
    5c60:	07 c0       	rjmp	.+14     	; 0x5c70 <vfprintf+0x1e6>
    5c62:	60 81       	ld	r22, Z
    5c64:	71 81       	ldd	r23, Z+1	; 0x01
    5c66:	82 81       	ldd	r24, Z+2	; 0x02
    5c68:	93 81       	ldd	r25, Z+3	; 0x03
    5c6a:	0c 5f       	subi	r16, 0xFC	; 252
    5c6c:	1f 4f       	sbci	r17, 0xFF	; 255
    5c6e:	08 c0       	rjmp	.+16     	; 0x5c80 <vfprintf+0x1f6>
    5c70:	60 81       	ld	r22, Z
    5c72:	71 81       	ldd	r23, Z+1	; 0x01
    5c74:	07 2e       	mov	r0, r23
    5c76:	00 0c       	add	r0, r0
    5c78:	88 0b       	sbc	r24, r24
    5c7a:	99 0b       	sbc	r25, r25
    5c7c:	0e 5f       	subi	r16, 0xFE	; 254
    5c7e:	1f 4f       	sbci	r17, 0xFF	; 255
    5c80:	f3 2d       	mov	r31, r3
    5c82:	ff 76       	andi	r31, 0x6F	; 111
    5c84:	3f 2e       	mov	r3, r31
    5c86:	97 ff       	sbrs	r25, 7
    5c88:	09 c0       	rjmp	.+18     	; 0x5c9c <vfprintf+0x212>
    5c8a:	90 95       	com	r25
    5c8c:	80 95       	com	r24
    5c8e:	70 95       	com	r23
    5c90:	61 95       	neg	r22
    5c92:	7f 4f       	sbci	r23, 0xFF	; 255
    5c94:	8f 4f       	sbci	r24, 0xFF	; 255
    5c96:	9f 4f       	sbci	r25, 0xFF	; 255
    5c98:	f0 68       	ori	r31, 0x80	; 128
    5c9a:	3f 2e       	mov	r3, r31
    5c9c:	2a e0       	ldi	r18, 0x0A	; 10
    5c9e:	30 e0       	ldi	r19, 0x00	; 0
    5ca0:	a3 01       	movw	r20, r6
    5ca2:	0e 94 78 2f 	call	0x5ef0	; 0x5ef0 <__ultoa_invert>
    5ca6:	88 2e       	mov	r8, r24
    5ca8:	86 18       	sub	r8, r6
    5caa:	45 c0       	rjmp	.+138    	; 0x5d36 <vfprintf+0x2ac>
    5cac:	85 37       	cpi	r24, 0x75	; 117
    5cae:	31 f4       	brne	.+12     	; 0x5cbc <vfprintf+0x232>
    5cb0:	23 2d       	mov	r18, r3
    5cb2:	2f 7e       	andi	r18, 0xEF	; 239
    5cb4:	b2 2e       	mov	r11, r18
    5cb6:	2a e0       	ldi	r18, 0x0A	; 10
    5cb8:	30 e0       	ldi	r19, 0x00	; 0
    5cba:	25 c0       	rjmp	.+74     	; 0x5d06 <vfprintf+0x27c>
    5cbc:	93 2d       	mov	r25, r3
    5cbe:	99 7f       	andi	r25, 0xF9	; 249
    5cc0:	b9 2e       	mov	r11, r25
    5cc2:	8f 36       	cpi	r24, 0x6F	; 111
    5cc4:	c1 f0       	breq	.+48     	; 0x5cf6 <vfprintf+0x26c>
    5cc6:	18 f4       	brcc	.+6      	; 0x5cce <vfprintf+0x244>
    5cc8:	88 35       	cpi	r24, 0x58	; 88
    5cca:	79 f0       	breq	.+30     	; 0x5cea <vfprintf+0x260>
    5ccc:	b5 c0       	rjmp	.+362    	; 0x5e38 <vfprintf+0x3ae>
    5cce:	80 37       	cpi	r24, 0x70	; 112
    5cd0:	19 f0       	breq	.+6      	; 0x5cd8 <vfprintf+0x24e>
    5cd2:	88 37       	cpi	r24, 0x78	; 120
    5cd4:	21 f0       	breq	.+8      	; 0x5cde <vfprintf+0x254>
    5cd6:	b0 c0       	rjmp	.+352    	; 0x5e38 <vfprintf+0x3ae>
    5cd8:	e9 2f       	mov	r30, r25
    5cda:	e0 61       	ori	r30, 0x10	; 16
    5cdc:	be 2e       	mov	r11, r30
    5cde:	b4 fe       	sbrs	r11, 4
    5ce0:	0d c0       	rjmp	.+26     	; 0x5cfc <vfprintf+0x272>
    5ce2:	fb 2d       	mov	r31, r11
    5ce4:	f4 60       	ori	r31, 0x04	; 4
    5ce6:	bf 2e       	mov	r11, r31
    5ce8:	09 c0       	rjmp	.+18     	; 0x5cfc <vfprintf+0x272>
    5cea:	34 fe       	sbrs	r3, 4
    5cec:	0a c0       	rjmp	.+20     	; 0x5d02 <vfprintf+0x278>
    5cee:	29 2f       	mov	r18, r25
    5cf0:	26 60       	ori	r18, 0x06	; 6
    5cf2:	b2 2e       	mov	r11, r18
    5cf4:	06 c0       	rjmp	.+12     	; 0x5d02 <vfprintf+0x278>
    5cf6:	28 e0       	ldi	r18, 0x08	; 8
    5cf8:	30 e0       	ldi	r19, 0x00	; 0
    5cfa:	05 c0       	rjmp	.+10     	; 0x5d06 <vfprintf+0x27c>
    5cfc:	20 e1       	ldi	r18, 0x10	; 16
    5cfe:	30 e0       	ldi	r19, 0x00	; 0
    5d00:	02 c0       	rjmp	.+4      	; 0x5d06 <vfprintf+0x27c>
    5d02:	20 e1       	ldi	r18, 0x10	; 16
    5d04:	32 e0       	ldi	r19, 0x02	; 2
    5d06:	f8 01       	movw	r30, r16
    5d08:	b7 fe       	sbrs	r11, 7
    5d0a:	07 c0       	rjmp	.+14     	; 0x5d1a <vfprintf+0x290>
    5d0c:	60 81       	ld	r22, Z
    5d0e:	71 81       	ldd	r23, Z+1	; 0x01
    5d10:	82 81       	ldd	r24, Z+2	; 0x02
    5d12:	93 81       	ldd	r25, Z+3	; 0x03
    5d14:	0c 5f       	subi	r16, 0xFC	; 252
    5d16:	1f 4f       	sbci	r17, 0xFF	; 255
    5d18:	06 c0       	rjmp	.+12     	; 0x5d26 <vfprintf+0x29c>
    5d1a:	60 81       	ld	r22, Z
    5d1c:	71 81       	ldd	r23, Z+1	; 0x01
    5d1e:	80 e0       	ldi	r24, 0x00	; 0
    5d20:	90 e0       	ldi	r25, 0x00	; 0
    5d22:	0e 5f       	subi	r16, 0xFE	; 254
    5d24:	1f 4f       	sbci	r17, 0xFF	; 255
    5d26:	a3 01       	movw	r20, r6
    5d28:	0e 94 78 2f 	call	0x5ef0	; 0x5ef0 <__ultoa_invert>
    5d2c:	88 2e       	mov	r8, r24
    5d2e:	86 18       	sub	r8, r6
    5d30:	fb 2d       	mov	r31, r11
    5d32:	ff 77       	andi	r31, 0x7F	; 127
    5d34:	3f 2e       	mov	r3, r31
    5d36:	36 fe       	sbrs	r3, 6
    5d38:	0d c0       	rjmp	.+26     	; 0x5d54 <vfprintf+0x2ca>
    5d3a:	23 2d       	mov	r18, r3
    5d3c:	2e 7f       	andi	r18, 0xFE	; 254
    5d3e:	a2 2e       	mov	r10, r18
    5d40:	89 14       	cp	r8, r9
    5d42:	58 f4       	brcc	.+22     	; 0x5d5a <vfprintf+0x2d0>
    5d44:	34 fe       	sbrs	r3, 4
    5d46:	0b c0       	rjmp	.+22     	; 0x5d5e <vfprintf+0x2d4>
    5d48:	32 fc       	sbrc	r3, 2
    5d4a:	09 c0       	rjmp	.+18     	; 0x5d5e <vfprintf+0x2d4>
    5d4c:	83 2d       	mov	r24, r3
    5d4e:	8e 7e       	andi	r24, 0xEE	; 238
    5d50:	a8 2e       	mov	r10, r24
    5d52:	05 c0       	rjmp	.+10     	; 0x5d5e <vfprintf+0x2d4>
    5d54:	b8 2c       	mov	r11, r8
    5d56:	a3 2c       	mov	r10, r3
    5d58:	03 c0       	rjmp	.+6      	; 0x5d60 <vfprintf+0x2d6>
    5d5a:	b8 2c       	mov	r11, r8
    5d5c:	01 c0       	rjmp	.+2      	; 0x5d60 <vfprintf+0x2d6>
    5d5e:	b9 2c       	mov	r11, r9
    5d60:	a4 fe       	sbrs	r10, 4
    5d62:	0f c0       	rjmp	.+30     	; 0x5d82 <vfprintf+0x2f8>
    5d64:	fe 01       	movw	r30, r28
    5d66:	e8 0d       	add	r30, r8
    5d68:	f1 1d       	adc	r31, r1
    5d6a:	80 81       	ld	r24, Z
    5d6c:	80 33       	cpi	r24, 0x30	; 48
    5d6e:	21 f4       	brne	.+8      	; 0x5d78 <vfprintf+0x2ee>
    5d70:	9a 2d       	mov	r25, r10
    5d72:	99 7e       	andi	r25, 0xE9	; 233
    5d74:	a9 2e       	mov	r10, r25
    5d76:	09 c0       	rjmp	.+18     	; 0x5d8a <vfprintf+0x300>
    5d78:	a2 fe       	sbrs	r10, 2
    5d7a:	06 c0       	rjmp	.+12     	; 0x5d88 <vfprintf+0x2fe>
    5d7c:	b3 94       	inc	r11
    5d7e:	b3 94       	inc	r11
    5d80:	04 c0       	rjmp	.+8      	; 0x5d8a <vfprintf+0x300>
    5d82:	8a 2d       	mov	r24, r10
    5d84:	86 78       	andi	r24, 0x86	; 134
    5d86:	09 f0       	breq	.+2      	; 0x5d8a <vfprintf+0x300>
    5d88:	b3 94       	inc	r11
    5d8a:	a3 fc       	sbrc	r10, 3
    5d8c:	11 c0       	rjmp	.+34     	; 0x5db0 <vfprintf+0x326>
    5d8e:	a0 fe       	sbrs	r10, 0
    5d90:	06 c0       	rjmp	.+12     	; 0x5d9e <vfprintf+0x314>
    5d92:	b2 14       	cp	r11, r2
    5d94:	88 f4       	brcc	.+34     	; 0x5db8 <vfprintf+0x32e>
    5d96:	28 0c       	add	r2, r8
    5d98:	92 2c       	mov	r9, r2
    5d9a:	9b 18       	sub	r9, r11
    5d9c:	0e c0       	rjmp	.+28     	; 0x5dba <vfprintf+0x330>
    5d9e:	b2 14       	cp	r11, r2
    5da0:	60 f4       	brcc	.+24     	; 0x5dba <vfprintf+0x330>
    5da2:	b6 01       	movw	r22, r12
    5da4:	80 e2       	ldi	r24, 0x20	; 32
    5da6:	90 e0       	ldi	r25, 0x00	; 0
    5da8:	0e 94 3c 2f 	call	0x5e78	; 0x5e78 <fputc>
    5dac:	b3 94       	inc	r11
    5dae:	f7 cf       	rjmp	.-18     	; 0x5d9e <vfprintf+0x314>
    5db0:	b2 14       	cp	r11, r2
    5db2:	18 f4       	brcc	.+6      	; 0x5dba <vfprintf+0x330>
    5db4:	2b 18       	sub	r2, r11
    5db6:	02 c0       	rjmp	.+4      	; 0x5dbc <vfprintf+0x332>
    5db8:	98 2c       	mov	r9, r8
    5dba:	21 2c       	mov	r2, r1
    5dbc:	a4 fe       	sbrs	r10, 4
    5dbe:	10 c0       	rjmp	.+32     	; 0x5de0 <vfprintf+0x356>
    5dc0:	b6 01       	movw	r22, r12
    5dc2:	80 e3       	ldi	r24, 0x30	; 48
    5dc4:	90 e0       	ldi	r25, 0x00	; 0
    5dc6:	0e 94 3c 2f 	call	0x5e78	; 0x5e78 <fputc>
    5dca:	a2 fe       	sbrs	r10, 2
    5dcc:	17 c0       	rjmp	.+46     	; 0x5dfc <vfprintf+0x372>
    5dce:	a1 fc       	sbrc	r10, 1
    5dd0:	03 c0       	rjmp	.+6      	; 0x5dd8 <vfprintf+0x34e>
    5dd2:	88 e7       	ldi	r24, 0x78	; 120
    5dd4:	90 e0       	ldi	r25, 0x00	; 0
    5dd6:	02 c0       	rjmp	.+4      	; 0x5ddc <vfprintf+0x352>
    5dd8:	88 e5       	ldi	r24, 0x58	; 88
    5dda:	90 e0       	ldi	r25, 0x00	; 0
    5ddc:	b6 01       	movw	r22, r12
    5dde:	0c c0       	rjmp	.+24     	; 0x5df8 <vfprintf+0x36e>
    5de0:	8a 2d       	mov	r24, r10
    5de2:	86 78       	andi	r24, 0x86	; 134
    5de4:	59 f0       	breq	.+22     	; 0x5dfc <vfprintf+0x372>
    5de6:	a1 fe       	sbrs	r10, 1
    5de8:	02 c0       	rjmp	.+4      	; 0x5dee <vfprintf+0x364>
    5dea:	8b e2       	ldi	r24, 0x2B	; 43
    5dec:	01 c0       	rjmp	.+2      	; 0x5df0 <vfprintf+0x366>
    5dee:	80 e2       	ldi	r24, 0x20	; 32
    5df0:	a7 fc       	sbrc	r10, 7
    5df2:	8d e2       	ldi	r24, 0x2D	; 45
    5df4:	b6 01       	movw	r22, r12
    5df6:	90 e0       	ldi	r25, 0x00	; 0
    5df8:	0e 94 3c 2f 	call	0x5e78	; 0x5e78 <fputc>
    5dfc:	89 14       	cp	r8, r9
    5dfe:	38 f4       	brcc	.+14     	; 0x5e0e <vfprintf+0x384>
    5e00:	b6 01       	movw	r22, r12
    5e02:	80 e3       	ldi	r24, 0x30	; 48
    5e04:	90 e0       	ldi	r25, 0x00	; 0
    5e06:	0e 94 3c 2f 	call	0x5e78	; 0x5e78 <fputc>
    5e0a:	9a 94       	dec	r9
    5e0c:	f7 cf       	rjmp	.-18     	; 0x5dfc <vfprintf+0x372>
    5e0e:	8a 94       	dec	r8
    5e10:	f3 01       	movw	r30, r6
    5e12:	e8 0d       	add	r30, r8
    5e14:	f1 1d       	adc	r31, r1
    5e16:	80 81       	ld	r24, Z
    5e18:	b6 01       	movw	r22, r12
    5e1a:	90 e0       	ldi	r25, 0x00	; 0
    5e1c:	0e 94 3c 2f 	call	0x5e78	; 0x5e78 <fputc>
    5e20:	81 10       	cpse	r8, r1
    5e22:	f5 cf       	rjmp	.-22     	; 0x5e0e <vfprintf+0x384>
    5e24:	22 20       	and	r2, r2
    5e26:	09 f4       	brne	.+2      	; 0x5e2a <vfprintf+0x3a0>
    5e28:	42 ce       	rjmp	.-892    	; 0x5aae <vfprintf+0x24>
    5e2a:	b6 01       	movw	r22, r12
    5e2c:	80 e2       	ldi	r24, 0x20	; 32
    5e2e:	90 e0       	ldi	r25, 0x00	; 0
    5e30:	0e 94 3c 2f 	call	0x5e78	; 0x5e78 <fputc>
    5e34:	2a 94       	dec	r2
    5e36:	f6 cf       	rjmp	.-20     	; 0x5e24 <vfprintf+0x39a>
    5e38:	f6 01       	movw	r30, r12
    5e3a:	86 81       	ldd	r24, Z+6	; 0x06
    5e3c:	97 81       	ldd	r25, Z+7	; 0x07
    5e3e:	02 c0       	rjmp	.+4      	; 0x5e44 <vfprintf+0x3ba>
    5e40:	8f ef       	ldi	r24, 0xFF	; 255
    5e42:	9f ef       	ldi	r25, 0xFF	; 255
    5e44:	2b 96       	adiw	r28, 0x0b	; 11
    5e46:	e2 e1       	ldi	r30, 0x12	; 18
    5e48:	0c 94 f2 2f 	jmp	0x5fe4	; 0x5fe4 <__epilogue_restores__>

00005e4c <strnlen_P>:
    5e4c:	fc 01       	movw	r30, r24
    5e4e:	05 90       	lpm	r0, Z+
    5e50:	61 50       	subi	r22, 0x01	; 1
    5e52:	70 40       	sbci	r23, 0x00	; 0
    5e54:	01 10       	cpse	r0, r1
    5e56:	d8 f7       	brcc	.-10     	; 0x5e4e <strnlen_P+0x2>
    5e58:	80 95       	com	r24
    5e5a:	90 95       	com	r25
    5e5c:	8e 0f       	add	r24, r30
    5e5e:	9f 1f       	adc	r25, r31
    5e60:	08 95       	ret

00005e62 <strnlen>:
    5e62:	fc 01       	movw	r30, r24
    5e64:	61 50       	subi	r22, 0x01	; 1
    5e66:	70 40       	sbci	r23, 0x00	; 0
    5e68:	01 90       	ld	r0, Z+
    5e6a:	01 10       	cpse	r0, r1
    5e6c:	d8 f7       	brcc	.-10     	; 0x5e64 <strnlen+0x2>
    5e6e:	80 95       	com	r24
    5e70:	90 95       	com	r25
    5e72:	8e 0f       	add	r24, r30
    5e74:	9f 1f       	adc	r25, r31
    5e76:	08 95       	ret

00005e78 <fputc>:
    5e78:	0f 93       	push	r16
    5e7a:	1f 93       	push	r17
    5e7c:	cf 93       	push	r28
    5e7e:	df 93       	push	r29
    5e80:	fb 01       	movw	r30, r22
    5e82:	23 81       	ldd	r18, Z+3	; 0x03
    5e84:	21 fd       	sbrc	r18, 1
    5e86:	03 c0       	rjmp	.+6      	; 0x5e8e <fputc+0x16>
    5e88:	8f ef       	ldi	r24, 0xFF	; 255
    5e8a:	9f ef       	ldi	r25, 0xFF	; 255
    5e8c:	2c c0       	rjmp	.+88     	; 0x5ee6 <fputc+0x6e>
    5e8e:	22 ff       	sbrs	r18, 2
    5e90:	16 c0       	rjmp	.+44     	; 0x5ebe <fputc+0x46>
    5e92:	46 81       	ldd	r20, Z+6	; 0x06
    5e94:	57 81       	ldd	r21, Z+7	; 0x07
    5e96:	24 81       	ldd	r18, Z+4	; 0x04
    5e98:	35 81       	ldd	r19, Z+5	; 0x05
    5e9a:	42 17       	cp	r20, r18
    5e9c:	53 07       	cpc	r21, r19
    5e9e:	44 f4       	brge	.+16     	; 0x5eb0 <fputc+0x38>
    5ea0:	a0 81       	ld	r26, Z
    5ea2:	b1 81       	ldd	r27, Z+1	; 0x01
    5ea4:	9d 01       	movw	r18, r26
    5ea6:	2f 5f       	subi	r18, 0xFF	; 255
    5ea8:	3f 4f       	sbci	r19, 0xFF	; 255
    5eaa:	31 83       	std	Z+1, r19	; 0x01
    5eac:	20 83       	st	Z, r18
    5eae:	8c 93       	st	X, r24
    5eb0:	26 81       	ldd	r18, Z+6	; 0x06
    5eb2:	37 81       	ldd	r19, Z+7	; 0x07
    5eb4:	2f 5f       	subi	r18, 0xFF	; 255
    5eb6:	3f 4f       	sbci	r19, 0xFF	; 255
    5eb8:	37 83       	std	Z+7, r19	; 0x07
    5eba:	26 83       	std	Z+6, r18	; 0x06
    5ebc:	14 c0       	rjmp	.+40     	; 0x5ee6 <fputc+0x6e>
    5ebe:	8b 01       	movw	r16, r22
    5ec0:	ec 01       	movw	r28, r24
    5ec2:	fb 01       	movw	r30, r22
    5ec4:	00 84       	ldd	r0, Z+8	; 0x08
    5ec6:	f1 85       	ldd	r31, Z+9	; 0x09
    5ec8:	e0 2d       	mov	r30, r0
    5eca:	09 95       	icall
    5ecc:	89 2b       	or	r24, r25
    5ece:	e1 f6       	brne	.-72     	; 0x5e88 <fputc+0x10>
    5ed0:	d8 01       	movw	r26, r16
    5ed2:	16 96       	adiw	r26, 0x06	; 6
    5ed4:	8d 91       	ld	r24, X+
    5ed6:	9c 91       	ld	r25, X
    5ed8:	17 97       	sbiw	r26, 0x07	; 7
    5eda:	01 96       	adiw	r24, 0x01	; 1
    5edc:	17 96       	adiw	r26, 0x07	; 7
    5ede:	9c 93       	st	X, r25
    5ee0:	8e 93       	st	-X, r24
    5ee2:	16 97       	sbiw	r26, 0x06	; 6
    5ee4:	ce 01       	movw	r24, r28
    5ee6:	df 91       	pop	r29
    5ee8:	cf 91       	pop	r28
    5eea:	1f 91       	pop	r17
    5eec:	0f 91       	pop	r16
    5eee:	08 95       	ret

00005ef0 <__ultoa_invert>:
    5ef0:	fa 01       	movw	r30, r20
    5ef2:	aa 27       	eor	r26, r26
    5ef4:	28 30       	cpi	r18, 0x08	; 8
    5ef6:	51 f1       	breq	.+84     	; 0x5f4c <__ultoa_invert+0x5c>
    5ef8:	20 31       	cpi	r18, 0x10	; 16
    5efa:	81 f1       	breq	.+96     	; 0x5f5c <__ultoa_invert+0x6c>
    5efc:	e8 94       	clt
    5efe:	6f 93       	push	r22
    5f00:	6e 7f       	andi	r22, 0xFE	; 254
    5f02:	6e 5f       	subi	r22, 0xFE	; 254
    5f04:	7f 4f       	sbci	r23, 0xFF	; 255
    5f06:	8f 4f       	sbci	r24, 0xFF	; 255
    5f08:	9f 4f       	sbci	r25, 0xFF	; 255
    5f0a:	af 4f       	sbci	r26, 0xFF	; 255
    5f0c:	b1 e0       	ldi	r27, 0x01	; 1
    5f0e:	3e d0       	rcall	.+124    	; 0x5f8c <__ultoa_invert+0x9c>
    5f10:	b4 e0       	ldi	r27, 0x04	; 4
    5f12:	3c d0       	rcall	.+120    	; 0x5f8c <__ultoa_invert+0x9c>
    5f14:	67 0f       	add	r22, r23
    5f16:	78 1f       	adc	r23, r24
    5f18:	89 1f       	adc	r24, r25
    5f1a:	9a 1f       	adc	r25, r26
    5f1c:	a1 1d       	adc	r26, r1
    5f1e:	68 0f       	add	r22, r24
    5f20:	79 1f       	adc	r23, r25
    5f22:	8a 1f       	adc	r24, r26
    5f24:	91 1d       	adc	r25, r1
    5f26:	a1 1d       	adc	r26, r1
    5f28:	6a 0f       	add	r22, r26
    5f2a:	71 1d       	adc	r23, r1
    5f2c:	81 1d       	adc	r24, r1
    5f2e:	91 1d       	adc	r25, r1
    5f30:	a1 1d       	adc	r26, r1
    5f32:	20 d0       	rcall	.+64     	; 0x5f74 <__ultoa_invert+0x84>
    5f34:	09 f4       	brne	.+2      	; 0x5f38 <__ultoa_invert+0x48>
    5f36:	68 94       	set
    5f38:	3f 91       	pop	r19
    5f3a:	2a e0       	ldi	r18, 0x0A	; 10
    5f3c:	26 9f       	mul	r18, r22
    5f3e:	11 24       	eor	r1, r1
    5f40:	30 19       	sub	r19, r0
    5f42:	30 5d       	subi	r19, 0xD0	; 208
    5f44:	31 93       	st	Z+, r19
    5f46:	de f6       	brtc	.-74     	; 0x5efe <__ultoa_invert+0xe>
    5f48:	cf 01       	movw	r24, r30
    5f4a:	08 95       	ret
    5f4c:	46 2f       	mov	r20, r22
    5f4e:	47 70       	andi	r20, 0x07	; 7
    5f50:	40 5d       	subi	r20, 0xD0	; 208
    5f52:	41 93       	st	Z+, r20
    5f54:	b3 e0       	ldi	r27, 0x03	; 3
    5f56:	0f d0       	rcall	.+30     	; 0x5f76 <__ultoa_invert+0x86>
    5f58:	c9 f7       	brne	.-14     	; 0x5f4c <__ultoa_invert+0x5c>
    5f5a:	f6 cf       	rjmp	.-20     	; 0x5f48 <__ultoa_invert+0x58>
    5f5c:	46 2f       	mov	r20, r22
    5f5e:	4f 70       	andi	r20, 0x0F	; 15
    5f60:	40 5d       	subi	r20, 0xD0	; 208
    5f62:	4a 33       	cpi	r20, 0x3A	; 58
    5f64:	18 f0       	brcs	.+6      	; 0x5f6c <__ultoa_invert+0x7c>
    5f66:	49 5d       	subi	r20, 0xD9	; 217
    5f68:	31 fd       	sbrc	r19, 1
    5f6a:	40 52       	subi	r20, 0x20	; 32
    5f6c:	41 93       	st	Z+, r20
    5f6e:	02 d0       	rcall	.+4      	; 0x5f74 <__ultoa_invert+0x84>
    5f70:	a9 f7       	brne	.-22     	; 0x5f5c <__ultoa_invert+0x6c>
    5f72:	ea cf       	rjmp	.-44     	; 0x5f48 <__ultoa_invert+0x58>
    5f74:	b4 e0       	ldi	r27, 0x04	; 4
    5f76:	a6 95       	lsr	r26
    5f78:	97 95       	ror	r25
    5f7a:	87 95       	ror	r24
    5f7c:	77 95       	ror	r23
    5f7e:	67 95       	ror	r22
    5f80:	ba 95       	dec	r27
    5f82:	c9 f7       	brne	.-14     	; 0x5f76 <__ultoa_invert+0x86>
    5f84:	00 97       	sbiw	r24, 0x00	; 0
    5f86:	61 05       	cpc	r22, r1
    5f88:	71 05       	cpc	r23, r1
    5f8a:	08 95       	ret
    5f8c:	9b 01       	movw	r18, r22
    5f8e:	ac 01       	movw	r20, r24
    5f90:	0a 2e       	mov	r0, r26
    5f92:	06 94       	lsr	r0
    5f94:	57 95       	ror	r21
    5f96:	47 95       	ror	r20
    5f98:	37 95       	ror	r19
    5f9a:	27 95       	ror	r18
    5f9c:	ba 95       	dec	r27
    5f9e:	c9 f7       	brne	.-14     	; 0x5f92 <__ultoa_invert+0xa2>
    5fa0:	62 0f       	add	r22, r18
    5fa2:	73 1f       	adc	r23, r19
    5fa4:	84 1f       	adc	r24, r20
    5fa6:	95 1f       	adc	r25, r21
    5fa8:	a0 1d       	adc	r26, r0
    5faa:	08 95       	ret

00005fac <__prologue_saves__>:
    5fac:	2f 92       	push	r2
    5fae:	3f 92       	push	r3
    5fb0:	4f 92       	push	r4
    5fb2:	5f 92       	push	r5
    5fb4:	6f 92       	push	r6
    5fb6:	7f 92       	push	r7
    5fb8:	8f 92       	push	r8
    5fba:	9f 92       	push	r9
    5fbc:	af 92       	push	r10
    5fbe:	bf 92       	push	r11
    5fc0:	cf 92       	push	r12
    5fc2:	df 92       	push	r13
    5fc4:	ef 92       	push	r14
    5fc6:	ff 92       	push	r15
    5fc8:	0f 93       	push	r16
    5fca:	1f 93       	push	r17
    5fcc:	cf 93       	push	r28
    5fce:	df 93       	push	r29
    5fd0:	cd b7       	in	r28, 0x3d	; 61
    5fd2:	de b7       	in	r29, 0x3e	; 62
    5fd4:	ca 1b       	sub	r28, r26
    5fd6:	db 0b       	sbc	r29, r27
    5fd8:	0f b6       	in	r0, 0x3f	; 63
    5fda:	f8 94       	cli
    5fdc:	de bf       	out	0x3e, r29	; 62
    5fde:	0f be       	out	0x3f, r0	; 63
    5fe0:	cd bf       	out	0x3d, r28	; 61
    5fe2:	09 94       	ijmp

00005fe4 <__epilogue_restores__>:
    5fe4:	2a 88       	ldd	r2, Y+18	; 0x12
    5fe6:	39 88       	ldd	r3, Y+17	; 0x11
    5fe8:	48 88       	ldd	r4, Y+16	; 0x10
    5fea:	5f 84       	ldd	r5, Y+15	; 0x0f
    5fec:	6e 84       	ldd	r6, Y+14	; 0x0e
    5fee:	7d 84       	ldd	r7, Y+13	; 0x0d
    5ff0:	8c 84       	ldd	r8, Y+12	; 0x0c
    5ff2:	9b 84       	ldd	r9, Y+11	; 0x0b
    5ff4:	aa 84       	ldd	r10, Y+10	; 0x0a
    5ff6:	b9 84       	ldd	r11, Y+9	; 0x09
    5ff8:	c8 84       	ldd	r12, Y+8	; 0x08
    5ffa:	df 80       	ldd	r13, Y+7	; 0x07
    5ffc:	ee 80       	ldd	r14, Y+6	; 0x06
    5ffe:	fd 80       	ldd	r15, Y+5	; 0x05
    6000:	0c 81       	ldd	r16, Y+4	; 0x04
    6002:	1b 81       	ldd	r17, Y+3	; 0x03
    6004:	aa 81       	ldd	r26, Y+2	; 0x02
    6006:	b9 81       	ldd	r27, Y+1	; 0x01
    6008:	ce 0f       	add	r28, r30
    600a:	d1 1d       	adc	r29, r1
    600c:	0f b6       	in	r0, 0x3f	; 63
    600e:	f8 94       	cli
    6010:	de bf       	out	0x3e, r29	; 62
    6012:	0f be       	out	0x3f, r0	; 63
    6014:	cd bf       	out	0x3d, r28	; 61
    6016:	ed 01       	movw	r28, r26
    6018:	08 95       	ret

0000601a <_exit>:
    601a:	f8 94       	cli

0000601c <__stop_program>:
    601c:	ff cf       	rjmp	.-2      	; 0x601c <__stop_program>
