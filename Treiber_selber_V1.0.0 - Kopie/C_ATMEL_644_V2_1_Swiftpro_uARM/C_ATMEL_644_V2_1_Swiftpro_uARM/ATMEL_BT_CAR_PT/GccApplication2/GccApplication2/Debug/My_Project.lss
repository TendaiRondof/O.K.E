
My_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000027e  00800100  00006f28  00006fbc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00006f28  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000071  0080037e  0080037e  0000723a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000723a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00007298  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000180  00000000  00000000  000072d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002e9e  00000000  00000000  00007458  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c9e  00000000  00000000  0000a2f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000245f  00000000  00000000  0000af94  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005a8  00000000  00000000  0000d3f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a12  00000000  00000000  0000d99c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b9d  00000000  00000000  0000e3ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  0000ef4b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 b6 2f 	jmp	0x5f6c	; 0x5f6c <__vector_16>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 a3 03 	jmp	0x746	; 0x746 <__vector_20>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      70:	0c 94 fe 03 	jmp	0x7fc	; 0x7fc <__vector_28>
      74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d0 e1       	ldi	r29, 0x10	; 16
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	13 e0       	ldi	r17, 0x03	; 3
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	e8 e2       	ldi	r30, 0x28	; 40
      90:	ff e6       	ldi	r31, 0x6F	; 111
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	ae 37       	cpi	r26, 0x7E	; 126
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	23 e0       	ldi	r18, 0x03	; 3
      a0:	ae e7       	ldi	r26, 0x7E	; 126
      a2:	b3 e0       	ldi	r27, 0x03	; 3
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	af 3e       	cpi	r26, 0xEF	; 239
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 66 05 	call	0xacc	; 0xacc <main>
      b2:	0c 94 92 37 	jmp	0x6f24	; 0x6f24 <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <ws2812_setleds>:
#include <avr/interrupt.h>
#include <avr/io.h>
#include <util/delay.h>
 
void inline ws2812_setleds(struct cRGB *ledarray, uint16_t leds)
{
      ba:	cf 93       	push	r28
      bc:	df 93       	push	r29
      be:	00 d0       	rcall	.+0      	; 0xc0 <ws2812_setleds+0x6>
      c0:	00 d0       	rcall	.+0      	; 0xc2 <ws2812_setleds+0x8>
      c2:	cd b7       	in	r28, 0x3d	; 61
      c4:	de b7       	in	r29, 0x3e	; 62
      c6:	9a 83       	std	Y+2, r25	; 0x02
      c8:	89 83       	std	Y+1, r24	; 0x01
      ca:	7c 83       	std	Y+4, r23	; 0x04
      cc:	6b 83       	std	Y+3, r22	; 0x03
   ws2812_setleds_pin(ledarray,leds, _BV(ws2812_pin));
      ce:	2b 81       	ldd	r18, Y+3	; 0x03
      d0:	3c 81       	ldd	r19, Y+4	; 0x04
      d2:	89 81       	ldd	r24, Y+1	; 0x01
      d4:	9a 81       	ldd	r25, Y+2	; 0x02
      d6:	40 e8       	ldi	r20, 0x80	; 128
      d8:	b9 01       	movw	r22, r18
      da:	0e 94 77 00 	call	0xee	; 0xee <ws2812_setleds_pin>
}
      de:	00 00       	nop
      e0:	0f 90       	pop	r0
      e2:	0f 90       	pop	r0
      e4:	0f 90       	pop	r0
      e6:	0f 90       	pop	r0
      e8:	df 91       	pop	r29
      ea:	cf 91       	pop	r28
      ec:	08 95       	ret

000000ee <ws2812_setleds_pin>:

void inline ws2812_setleds_pin(struct cRGB *ledarray, uint16_t leds, uint8_t pinmask)
{
      ee:	cf 93       	push	r28
      f0:	df 93       	push	r29
      f2:	cd b7       	in	r28, 0x3d	; 61
      f4:	de b7       	in	r29, 0x3e	; 62
      f6:	a5 97       	sbiw	r28, 0x25	; 37
      f8:	0f b6       	in	r0, 0x3f	; 63
      fa:	f8 94       	cli
      fc:	de bf       	out	0x3e, r29	; 62
      fe:	0f be       	out	0x3f, r0	; 63
     100:	cd bf       	out	0x3d, r28	; 61
     102:	9a a3       	std	Y+34, r25	; 0x22
     104:	89 a3       	std	Y+33, r24	; 0x21
     106:	7c a3       	std	Y+36, r23	; 0x24
     108:	6b a3       	std	Y+35, r22	; 0x23
     10a:	4d a3       	std	Y+37, r20	; 0x25
  ws2812_DDRREG |= pinmask; // Enable DDR
     10c:	81 e2       	ldi	r24, 0x21	; 33
     10e:	90 e0       	ldi	r25, 0x00	; 0
     110:	21 e2       	ldi	r18, 0x21	; 33
     112:	30 e0       	ldi	r19, 0x00	; 0
     114:	f9 01       	movw	r30, r18
     116:	30 81       	ld	r19, Z
     118:	2d a1       	ldd	r18, Y+37	; 0x25
     11a:	23 2b       	or	r18, r19
     11c:	fc 01       	movw	r30, r24
     11e:	20 83       	st	Z, r18
  ws2812_sendarray_mask((uint8_t*)ledarray,leds+leds+leds,pinmask);
     120:	2b a1       	ldd	r18, Y+35	; 0x23
     122:	3c a1       	ldd	r19, Y+36	; 0x24
     124:	8b a1       	ldd	r24, Y+35	; 0x23
     126:	9c a1       	ldd	r25, Y+36	; 0x24
     128:	28 0f       	add	r18, r24
     12a:	39 1f       	adc	r19, r25
     12c:	8b a1       	ldd	r24, Y+35	; 0x23
     12e:	9c a1       	ldd	r25, Y+36	; 0x24
     130:	28 0f       	add	r18, r24
     132:	39 1f       	adc	r19, r25
     134:	89 a1       	ldd	r24, Y+33	; 0x21
     136:	9a a1       	ldd	r25, Y+34	; 0x22
     138:	4d a1       	ldd	r20, Y+37	; 0x25
     13a:	b9 01       	movw	r22, r18
     13c:	0e 94 b3 01 	call	0x366	; 0x366 <ws2812_sendarray_mask>
     140:	80 e0       	ldi	r24, 0x00	; 0
     142:	90 e0       	ldi	r25, 0x00	; 0
     144:	a8 e4       	ldi	r26, 0x48	; 72
     146:	b2 e4       	ldi	r27, 0x42	; 66
     148:	89 83       	std	Y+1, r24	; 0x01
     14a:	9a 83       	std	Y+2, r25	; 0x02
     14c:	ab 83       	std	Y+3, r26	; 0x03
     14e:	bc 83       	std	Y+4, r27	; 0x04
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
     150:	2b ea       	ldi	r18, 0xAB	; 171
     152:	3a ea       	ldi	r19, 0xAA	; 170
     154:	4a ea       	ldi	r20, 0xAA	; 170
     156:	5e e3       	ldi	r21, 0x3E	; 62
     158:	69 81       	ldd	r22, Y+1	; 0x01
     15a:	7a 81       	ldd	r23, Y+2	; 0x02
     15c:	8b 81       	ldd	r24, Y+3	; 0x03
     15e:	9c 81       	ldd	r25, Y+4	; 0x04
     160:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
     164:	dc 01       	movw	r26, r24
     166:	cb 01       	movw	r24, r22
     168:	8d 83       	std	Y+5, r24	; 0x05
     16a:	9e 83       	std	Y+6, r25	; 0x06
     16c:	af 83       	std	Y+7, r26	; 0x07
     16e:	b8 87       	std	Y+8, r27	; 0x08
	__tmp2 = ((F_CPU) / 4e6) * __us;
     170:	20 e0       	ldi	r18, 0x00	; 0
     172:	30 e0       	ldi	r19, 0x00	; 0
     174:	40 e8       	ldi	r20, 0x80	; 128
     176:	5e e3       	ldi	r21, 0x3E	; 62
     178:	69 81       	ldd	r22, Y+1	; 0x01
     17a:	7a 81       	ldd	r23, Y+2	; 0x02
     17c:	8b 81       	ldd	r24, Y+3	; 0x03
     17e:	9c 81       	ldd	r25, Y+4	; 0x04
     180:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
     184:	dc 01       	movw	r26, r24
     186:	cb 01       	movw	r24, r22
     188:	89 87       	std	Y+9, r24	; 0x09
     18a:	9a 87       	std	Y+10, r25	; 0x0a
     18c:	ab 87       	std	Y+11, r26	; 0x0b
     18e:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     190:	20 e0       	ldi	r18, 0x00	; 0
     192:	30 e0       	ldi	r19, 0x00	; 0
     194:	40 e8       	ldi	r20, 0x80	; 128
     196:	5f e3       	ldi	r21, 0x3F	; 63
     198:	6d 81       	ldd	r22, Y+5	; 0x05
     19a:	7e 81       	ldd	r23, Y+6	; 0x06
     19c:	8f 81       	ldd	r24, Y+7	; 0x07
     19e:	98 85       	ldd	r25, Y+8	; 0x08
     1a0:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
     1a4:	88 23       	and	r24, r24
     1a6:	1c f4       	brge	.+6      	; 0x1ae <ws2812_setleds_pin+0xc0>
		__ticks = 1;
     1a8:	81 e0       	ldi	r24, 0x01	; 1
     1aa:	8d 87       	std	Y+13, r24	; 0x0d
     1ac:	b2 c0       	rjmp	.+356    	; 0x312 <ws2812_setleds_pin+0x224>
	else if (__tmp2 > 65535)
     1ae:	20 e0       	ldi	r18, 0x00	; 0
     1b0:	3f ef       	ldi	r19, 0xFF	; 255
     1b2:	4f e7       	ldi	r20, 0x7F	; 127
     1b4:	57 e4       	ldi	r21, 0x47	; 71
     1b6:	69 85       	ldd	r22, Y+9	; 0x09
     1b8:	7a 85       	ldd	r23, Y+10	; 0x0a
     1ba:	8b 85       	ldd	r24, Y+11	; 0x0b
     1bc:	9c 85       	ldd	r25, Y+12	; 0x0c
     1be:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
     1c2:	18 16       	cp	r1, r24
     1c4:	0c f0       	brlt	.+2      	; 0x1c8 <ws2812_setleds_pin+0xda>
     1c6:	7b c0       	rjmp	.+246    	; 0x2be <ws2812_setleds_pin+0x1d0>
	{
		_delay_ms(__us / 1000.0);
     1c8:	20 e0       	ldi	r18, 0x00	; 0
     1ca:	30 e0       	ldi	r19, 0x00	; 0
     1cc:	4a e7       	ldi	r20, 0x7A	; 122
     1ce:	54 e4       	ldi	r21, 0x44	; 68
     1d0:	69 81       	ldd	r22, Y+1	; 0x01
     1d2:	7a 81       	ldd	r23, Y+2	; 0x02
     1d4:	8b 81       	ldd	r24, Y+3	; 0x03
     1d6:	9c 81       	ldd	r25, Y+4	; 0x04
     1d8:	0e 94 c8 32 	call	0x6590	; 0x6590 <__divsf3>
     1dc:	dc 01       	movw	r26, r24
     1de:	cb 01       	movw	r24, r22
     1e0:	8e 87       	std	Y+14, r24	; 0x0e
     1e2:	9f 87       	std	Y+15, r25	; 0x0f
     1e4:	a8 8b       	std	Y+16, r26	; 0x10
     1e6:	b9 8b       	std	Y+17, r27	; 0x11

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     1e8:	20 e0       	ldi	r18, 0x00	; 0
     1ea:	30 e0       	ldi	r19, 0x00	; 0
     1ec:	4a e7       	ldi	r20, 0x7A	; 122
     1ee:	53 e4       	ldi	r21, 0x43	; 67
     1f0:	6e 85       	ldd	r22, Y+14	; 0x0e
     1f2:	7f 85       	ldd	r23, Y+15	; 0x0f
     1f4:	88 89       	ldd	r24, Y+16	; 0x10
     1f6:	99 89       	ldd	r25, Y+17	; 0x11
     1f8:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
     1fc:	dc 01       	movw	r26, r24
     1fe:	cb 01       	movw	r24, r22
     200:	8a 8b       	std	Y+18, r24	; 0x12
     202:	9b 8b       	std	Y+19, r25	; 0x13
     204:	ac 8b       	std	Y+20, r26	; 0x14
     206:	bd 8b       	std	Y+21, r27	; 0x15
	if (__tmp < 1.0)
     208:	20 e0       	ldi	r18, 0x00	; 0
     20a:	30 e0       	ldi	r19, 0x00	; 0
     20c:	40 e8       	ldi	r20, 0x80	; 128
     20e:	5f e3       	ldi	r21, 0x3F	; 63
     210:	6a 89       	ldd	r22, Y+18	; 0x12
     212:	7b 89       	ldd	r23, Y+19	; 0x13
     214:	8c 89       	ldd	r24, Y+20	; 0x14
     216:	9d 89       	ldd	r25, Y+21	; 0x15
     218:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
     21c:	88 23       	and	r24, r24
     21e:	2c f4       	brge	.+10     	; 0x22a <ws2812_setleds_pin+0x13c>
		__ticks = 1;
     220:	81 e0       	ldi	r24, 0x01	; 1
     222:	90 e0       	ldi	r25, 0x00	; 0
     224:	9f 8b       	std	Y+23, r25	; 0x17
     226:	8e 8b       	std	Y+22, r24	; 0x16
     228:	3f c0       	rjmp	.+126    	; 0x2a8 <ws2812_setleds_pin+0x1ba>
	else if (__tmp > 65535)
     22a:	20 e0       	ldi	r18, 0x00	; 0
     22c:	3f ef       	ldi	r19, 0xFF	; 255
     22e:	4f e7       	ldi	r20, 0x7F	; 127
     230:	57 e4       	ldi	r21, 0x47	; 71
     232:	6a 89       	ldd	r22, Y+18	; 0x12
     234:	7b 89       	ldd	r23, Y+19	; 0x13
     236:	8c 89       	ldd	r24, Y+20	; 0x14
     238:	9d 89       	ldd	r25, Y+21	; 0x15
     23a:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
     23e:	18 16       	cp	r1, r24
     240:	4c f5       	brge	.+82     	; 0x294 <ws2812_setleds_pin+0x1a6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     242:	20 e0       	ldi	r18, 0x00	; 0
     244:	30 e0       	ldi	r19, 0x00	; 0
     246:	40 e2       	ldi	r20, 0x20	; 32
     248:	51 e4       	ldi	r21, 0x41	; 65
     24a:	6e 85       	ldd	r22, Y+14	; 0x0e
     24c:	7f 85       	ldd	r23, Y+15	; 0x0f
     24e:	88 89       	ldd	r24, Y+16	; 0x10
     250:	99 89       	ldd	r25, Y+17	; 0x11
     252:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
     256:	dc 01       	movw	r26, r24
     258:	cb 01       	movw	r24, r22
     25a:	bc 01       	movw	r22, r24
     25c:	cd 01       	movw	r24, r26
     25e:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
     262:	dc 01       	movw	r26, r24
     264:	cb 01       	movw	r24, r22
     266:	9f 8b       	std	Y+23, r25	; 0x17
     268:	8e 8b       	std	Y+22, r24	; 0x16
     26a:	0f c0       	rjmp	.+30     	; 0x28a <ws2812_setleds_pin+0x19c>
     26c:	89 e1       	ldi	r24, 0x19	; 25
     26e:	90 e0       	ldi	r25, 0x00	; 0
     270:	99 8f       	std	Y+25, r25	; 0x19
     272:	88 8f       	std	Y+24, r24	; 0x18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     274:	88 8d       	ldd	r24, Y+24	; 0x18
     276:	99 8d       	ldd	r25, Y+25	; 0x19
     278:	01 97       	sbiw	r24, 0x01	; 1
     27a:	f1 f7       	brne	.-4      	; 0x278 <ws2812_setleds_pin+0x18a>
     27c:	99 8f       	std	Y+25, r25	; 0x19
     27e:	88 8f       	std	Y+24, r24	; 0x18
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     280:	8e 89       	ldd	r24, Y+22	; 0x16
     282:	9f 89       	ldd	r25, Y+23	; 0x17
     284:	01 97       	sbiw	r24, 0x01	; 1
     286:	9f 8b       	std	Y+23, r25	; 0x17
     288:	8e 8b       	std	Y+22, r24	; 0x16
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     28a:	8e 89       	ldd	r24, Y+22	; 0x16
     28c:	9f 89       	ldd	r25, Y+23	; 0x17
     28e:	89 2b       	or	r24, r25
     290:	69 f7       	brne	.-38     	; 0x26c <ws2812_setleds_pin+0x17e>
     292:	3f c0       	rjmp	.+126    	; 0x312 <ws2812_setleds_pin+0x224>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     294:	6a 89       	ldd	r22, Y+18	; 0x12
     296:	7b 89       	ldd	r23, Y+19	; 0x13
     298:	8c 89       	ldd	r24, Y+20	; 0x14
     29a:	9d 89       	ldd	r25, Y+21	; 0x15
     29c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
     2a0:	dc 01       	movw	r26, r24
     2a2:	cb 01       	movw	r24, r22
     2a4:	9f 8b       	std	Y+23, r25	; 0x17
     2a6:	8e 8b       	std	Y+22, r24	; 0x16
     2a8:	8e 89       	ldd	r24, Y+22	; 0x16
     2aa:	9f 89       	ldd	r25, Y+23	; 0x17
     2ac:	9b 8f       	std	Y+27, r25	; 0x1b
     2ae:	8a 8f       	std	Y+26, r24	; 0x1a
     2b0:	8a 8d       	ldd	r24, Y+26	; 0x1a
     2b2:	9b 8d       	ldd	r25, Y+27	; 0x1b
     2b4:	01 97       	sbiw	r24, 0x01	; 1
     2b6:	f1 f7       	brne	.-4      	; 0x2b4 <ws2812_setleds_pin+0x1c6>
     2b8:	9b 8f       	std	Y+27, r25	; 0x1b
     2ba:	8a 8f       	std	Y+26, r24	; 0x1a
     2bc:	2a c0       	rjmp	.+84     	; 0x312 <ws2812_setleds_pin+0x224>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
     2be:	20 e0       	ldi	r18, 0x00	; 0
     2c0:	30 e0       	ldi	r19, 0x00	; 0
     2c2:	4f e7       	ldi	r20, 0x7F	; 127
     2c4:	53 e4       	ldi	r21, 0x43	; 67
     2c6:	6d 81       	ldd	r22, Y+5	; 0x05
     2c8:	7e 81       	ldd	r23, Y+6	; 0x06
     2ca:	8f 81       	ldd	r24, Y+7	; 0x07
     2cc:	98 85       	ldd	r25, Y+8	; 0x08
     2ce:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
     2d2:	18 16       	cp	r1, r24
     2d4:	ac f4       	brge	.+42     	; 0x300 <ws2812_setleds_pin+0x212>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     2d6:	69 85       	ldd	r22, Y+9	; 0x09
     2d8:	7a 85       	ldd	r23, Y+10	; 0x0a
     2da:	8b 85       	ldd	r24, Y+11	; 0x0b
     2dc:	9c 85       	ldd	r25, Y+12	; 0x0c
     2de:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
     2e2:	dc 01       	movw	r26, r24
     2e4:	cb 01       	movw	r24, r22
     2e6:	9d 8f       	std	Y+29, r25	; 0x1d
     2e8:	8c 8f       	std	Y+28, r24	; 0x1c
     2ea:	8c 8d       	ldd	r24, Y+28	; 0x1c
     2ec:	9d 8d       	ldd	r25, Y+29	; 0x1d
     2ee:	9f 8f       	std	Y+31, r25	; 0x1f
     2f0:	8e 8f       	std	Y+30, r24	; 0x1e
     2f2:	8e 8d       	ldd	r24, Y+30	; 0x1e
     2f4:	9f 8d       	ldd	r25, Y+31	; 0x1f
     2f6:	01 97       	sbiw	r24, 0x01	; 1
     2f8:	f1 f7       	brne	.-4      	; 0x2f6 <ws2812_setleds_pin+0x208>
     2fa:	9f 8f       	std	Y+31, r25	; 0x1f
     2fc:	8e 8f       	std	Y+30, r24	; 0x1e
  _delay_us(50);
}
     2fe:	0f c0       	rjmp	.+30     	; 0x31e <ws2812_setleds_pin+0x230>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     300:	6d 81       	ldd	r22, Y+5	; 0x05
     302:	7e 81       	ldd	r23, Y+6	; 0x06
     304:	8f 81       	ldd	r24, Y+7	; 0x07
     306:	98 85       	ldd	r25, Y+8	; 0x08
     308:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
     30c:	dc 01       	movw	r26, r24
     30e:	cb 01       	movw	r24, r22
     310:	8d 87       	std	Y+13, r24	; 0x0d
     312:	8d 85       	ldd	r24, Y+13	; 0x0d
     314:	88 a3       	std	Y+32, r24	; 0x20
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     316:	88 a1       	ldd	r24, Y+32	; 0x20
     318:	8a 95       	dec	r24
     31a:	f1 f7       	brne	.-4      	; 0x318 <ws2812_setleds_pin+0x22a>
     31c:	88 a3       	std	Y+32, r24	; 0x20
     31e:	00 00       	nop
     320:	a5 96       	adiw	r28, 0x25	; 37
     322:	0f b6       	in	r0, 0x3f	; 63
     324:	f8 94       	cli
     326:	de bf       	out	0x3e, r29	; 62
     328:	0f be       	out	0x3f, r0	; 63
     32a:	cd bf       	out	0x3d, r28	; 61
     32c:	df 91       	pop	r29
     32e:	cf 91       	pop	r28
     330:	08 95       	ret

00000332 <ws2812_sendarray>:

void ws2812_sendarray(uint8_t *data,uint16_t datlen)
{
     332:	cf 93       	push	r28
     334:	df 93       	push	r29
     336:	00 d0       	rcall	.+0      	; 0x338 <ws2812_sendarray+0x6>
     338:	00 d0       	rcall	.+0      	; 0x33a <ws2812_sendarray+0x8>
     33a:	cd b7       	in	r28, 0x3d	; 61
     33c:	de b7       	in	r29, 0x3e	; 62
     33e:	9a 83       	std	Y+2, r25	; 0x02
     340:	89 83       	std	Y+1, r24	; 0x01
     342:	7c 83       	std	Y+4, r23	; 0x04
     344:	6b 83       	std	Y+3, r22	; 0x03
  ws2812_sendarray_mask(data,datlen,_BV(ws2812_pin));
     346:	2b 81       	ldd	r18, Y+3	; 0x03
     348:	3c 81       	ldd	r19, Y+4	; 0x04
     34a:	89 81       	ldd	r24, Y+1	; 0x01
     34c:	9a 81       	ldd	r25, Y+2	; 0x02
     34e:	40 e8       	ldi	r20, 0x80	; 128
     350:	b9 01       	movw	r22, r18
     352:	0e 94 b3 01 	call	0x366	; 0x366 <ws2812_sendarray_mask>
}
     356:	00 00       	nop
     358:	0f 90       	pop	r0
     35a:	0f 90       	pop	r0
     35c:	0f 90       	pop	r0
     35e:	0f 90       	pop	r0
     360:	df 91       	pop	r29
     362:	cf 91       	pop	r28
     364:	08 95       	ret

00000366 <ws2812_sendarray_mask>:
#define w_nop4  w_nop2 w_nop2
#define w_nop8  w_nop4 w_nop4
#define w_nop16 w_nop8 w_nop8

void inline ws2812_sendarray_mask(uint8_t *data,uint16_t datlen,uint8_t maskhi)
{
     366:	cf 93       	push	r28
     368:	df 93       	push	r29
     36a:	cd b7       	in	r28, 0x3d	; 61
     36c:	de b7       	in	r29, 0x3e	; 62
     36e:	29 97       	sbiw	r28, 0x09	; 9
     370:	0f b6       	in	r0, 0x3f	; 63
     372:	f8 94       	cli
     374:	de bf       	out	0x3e, r29	; 62
     376:	0f be       	out	0x3f, r0	; 63
     378:	cd bf       	out	0x3d, r28	; 61
     37a:	9e 83       	std	Y+6, r25	; 0x06
     37c:	8d 83       	std	Y+5, r24	; 0x05
     37e:	78 87       	std	Y+8, r23	; 0x08
     380:	6f 83       	std	Y+7, r22	; 0x07
     382:	49 87       	std	Y+9, r20	; 0x09
  uint8_t curbyte,ctr,masklo;
  uint8_t sreg_prev;
  
  masklo	=~maskhi&ws2812_PORTREG;
     384:	89 85       	ldd	r24, Y+9	; 0x09
     386:	28 2f       	mov	r18, r24
     388:	20 95       	com	r18
     38a:	82 e2       	ldi	r24, 0x22	; 34
     38c:	90 e0       	ldi	r25, 0x00	; 0
     38e:	fc 01       	movw	r30, r24
     390:	80 81       	ld	r24, Z
     392:	82 23       	and	r24, r18
     394:	89 83       	std	Y+1, r24	; 0x01
  maskhi |=        ws2812_PORTREG;
     396:	82 e2       	ldi	r24, 0x22	; 34
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	fc 01       	movw	r30, r24
     39c:	80 81       	ld	r24, Z
     39e:	99 85       	ldd	r25, Y+9	; 0x09
     3a0:	89 2b       	or	r24, r25
     3a2:	89 87       	std	Y+9, r24	; 0x09
  sreg_prev=SREG;
     3a4:	8f e5       	ldi	r24, 0x5F	; 95
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	fc 01       	movw	r30, r24
     3aa:	80 81       	ld	r24, Z
     3ac:	8a 83       	std	Y+2, r24	; 0x02
  cli();  
     3ae:	f8 94       	cli

  while (datlen--) {
     3b0:	43 c0       	rjmp	.+134    	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
    curbyte=*data++;
     3b2:	8d 81       	ldd	r24, Y+5	; 0x05
     3b4:	9e 81       	ldd	r25, Y+6	; 0x06
     3b6:	9c 01       	movw	r18, r24
     3b8:	2f 5f       	subi	r18, 0xFF	; 255
     3ba:	3f 4f       	sbci	r19, 0xFF	; 255
     3bc:	3e 83       	std	Y+6, r19	; 0x06
     3be:	2d 83       	std	Y+5, r18	; 0x05
     3c0:	fc 01       	movw	r30, r24
     3c2:	80 81       	ld	r24, Z
     3c4:	8b 83       	std	Y+3, r24	; 0x03
    
    asm volatile(
     3c6:	9b 81       	ldd	r25, Y+3	; 0x03
     3c8:	29 85       	ldd	r18, Y+9	; 0x09
     3ca:	39 81       	ldd	r19, Y+1	; 0x01
     3cc:	88 e0       	ldi	r24, 0x08	; 8

000003ce <loop335>:
     3ce:	22 b9       	out	0x02, r18	; 2
     3d0:	00 c0       	rjmp	.+0      	; 0x3d2 <loop335+0x4>
     3d2:	00 c0       	rjmp	.+0      	; 0x3d4 <loop335+0x6>
     3d4:	00 c0       	rjmp	.+0      	; 0x3d6 <loop335+0x8>
     3d6:	00 c0       	rjmp	.+0      	; 0x3d8 <loop335+0xa>
     3d8:	00 c0       	rjmp	.+0      	; 0x3da <loop335+0xc>
     3da:	00 c0       	rjmp	.+0      	; 0x3dc <loop335+0xe>
     3dc:	00 c0       	rjmp	.+0      	; 0x3de <loop335+0x10>
     3de:	00 c0       	rjmp	.+0      	; 0x3e0 <loop335+0x12>
     3e0:	00 c0       	rjmp	.+0      	; 0x3e2 <loop335+0x14>
     3e2:	00 c0       	rjmp	.+0      	; 0x3e4 <loop335+0x16>
     3e4:	00 c0       	rjmp	.+0      	; 0x3e6 <loop335+0x18>
     3e6:	00 c0       	rjmp	.+0      	; 0x3e8 <loop335+0x1a>
     3e8:	00 c0       	rjmp	.+0      	; 0x3ea <loop335+0x1c>
     3ea:	00 c0       	rjmp	.+0      	; 0x3ec <loop335+0x1e>
     3ec:	00 c0       	rjmp	.+0      	; 0x3ee <loop335+0x20>
     3ee:	97 ff       	sbrs	r25, 7
     3f0:	32 b9       	out	0x02, r19	; 2
     3f2:	99 0f       	add	r25, r25
     3f4:	00 00       	nop
     3f6:	00 c0       	rjmp	.+0      	; 0x3f8 <loop335+0x2a>
     3f8:	00 c0       	rjmp	.+0      	; 0x3fa <loop335+0x2c>
     3fa:	00 c0       	rjmp	.+0      	; 0x3fc <loop335+0x2e>
     3fc:	00 c0       	rjmp	.+0      	; 0x3fe <loop335+0x30>
     3fe:	00 c0       	rjmp	.+0      	; 0x400 <__LOCK_REGION_LENGTH__>
     400:	00 c0       	rjmp	.+0      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     402:	00 c0       	rjmp	.+0      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     404:	00 c0       	rjmp	.+0      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     406:	00 c0       	rjmp	.+0      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     408:	00 c0       	rjmp	.+0      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     40a:	00 c0       	rjmp	.+0      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     40c:	00 c0       	rjmp	.+0      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     40e:	00 c0       	rjmp	.+0      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     410:	00 c0       	rjmp	.+0      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     412:	00 c0       	rjmp	.+0      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
     414:	32 b9       	out	0x02, r19	; 2
     416:	00 c0       	rjmp	.+0      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     418:	00 c0       	rjmp	.+0      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     41a:	00 c0       	rjmp	.+0      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
     41c:	00 c0       	rjmp	.+0      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
     41e:	00 c0       	rjmp	.+0      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     420:	00 c0       	rjmp	.+0      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     422:	00 c0       	rjmp	.+0      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
     424:	00 c0       	rjmp	.+0      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
     426:	00 c0       	rjmp	.+0      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     428:	00 c0       	rjmp	.+0      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
     42a:	00 c0       	rjmp	.+0      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
     42c:	00 c0       	rjmp	.+0      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     42e:	00 c0       	rjmp	.+0      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
     430:	00 c0       	rjmp	.+0      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
     432:	8a 95       	dec	r24
     434:	61 f6       	brne	.-104    	; 0x3ce <loop335>
     436:	8c 83       	std	Y+4, r24	; 0x04
  masklo	=~maskhi&ws2812_PORTREG;
  maskhi |=        ws2812_PORTREG;
  sreg_prev=SREG;
  cli();  

  while (datlen--) {
     438:	8f 81       	ldd	r24, Y+7	; 0x07
     43a:	98 85       	ldd	r25, Y+8	; 0x08
     43c:	9c 01       	movw	r18, r24
     43e:	21 50       	subi	r18, 0x01	; 1
     440:	31 09       	sbc	r19, r1
     442:	38 87       	std	Y+8, r19	; 0x08
     444:	2f 83       	std	Y+7, r18	; 0x07
     446:	89 2b       	or	r24, r25
     448:	09 f0       	breq	.+2      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     44a:	b3 cf       	rjmp	.-154    	; 0x3b2 <ws2812_sendarray_mask+0x4c>
    :	"=&d" (ctr)
    :	"r" (curbyte), "I" (_SFR_IO_ADDR(ws2812_PORTREG)), "r" (maskhi), "r" (masklo)
    );
  }
  
  SREG=sreg_prev;
     44c:	8f e5       	ldi	r24, 0x5F	; 95
     44e:	90 e0       	ldi	r25, 0x00	; 0
     450:	2a 81       	ldd	r18, Y+2	; 0x02
     452:	fc 01       	movw	r30, r24
     454:	20 83       	st	Z, r18
     456:	00 00       	nop
     458:	29 96       	adiw	r28, 0x09	; 9
     45a:	0f b6       	in	r0, 0x3f	; 63
     45c:	f8 94       	cli
     45e:	de bf       	out	0x3e, r29	; 62
     460:	0f be       	out	0x3f, r0	; 63
     462:	cd bf       	out	0x3d, r28	; 61
     464:	df 91       	pop	r29
     466:	cf 91       	pop	r28
     468:	08 95       	ret

0000046a <get_DIP_Switch>:
	}
	if ((x>300)&&(x<700)&&(y<700)&&(y>300))
	{
		return 0;
	}
}
     46a:	cf 93       	push	r28
     46c:	df 93       	push	r29
     46e:	00 d0       	rcall	.+0      	; 0x470 <get_DIP_Switch+0x6>
     470:	1f 92       	push	r1
     472:	cd b7       	in	r28, 0x3d	; 61
     474:	de b7       	in	r29, 0x3e	; 62
     476:	19 82       	std	Y+1, r1	; 0x01
     478:	82 e2       	ldi	r24, 0x22	; 34
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	22 e2       	ldi	r18, 0x22	; 34
     47e:	30 e0       	ldi	r19, 0x00	; 0
     480:	f9 01       	movw	r30, r18
     482:	20 81       	ld	r18, Z
     484:	20 62       	ori	r18, 0x20	; 32
     486:	fc 01       	movw	r30, r24
     488:	20 83       	st	Z, r18
     48a:	82 e2       	ldi	r24, 0x22	; 34
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	22 e2       	ldi	r18, 0x22	; 34
     490:	30 e0       	ldi	r19, 0x00	; 0
     492:	f9 01       	movw	r30, r18
     494:	20 81       	ld	r18, Z
     496:	2f 7d       	andi	r18, 0xDF	; 223
     498:	fc 01       	movw	r30, r24
     49a:	20 83       	st	Z, r18
     49c:	82 e2       	ldi	r24, 0x22	; 34
     49e:	90 e0       	ldi	r25, 0x00	; 0
     4a0:	22 e2       	ldi	r18, 0x22	; 34
     4a2:	30 e0       	ldi	r19, 0x00	; 0
     4a4:	f9 01       	movw	r30, r18
     4a6:	20 81       	ld	r18, Z
     4a8:	20 62       	ori	r18, 0x20	; 32
     4aa:	fc 01       	movw	r30, r24
     4ac:	20 83       	st	Z, r18
     4ae:	87 e0       	ldi	r24, 0x07	; 7
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	9b 83       	std	Y+3, r25	; 0x03
     4b4:	8a 83       	std	Y+2, r24	; 0x02
     4b6:	30 c0       	rjmp	.+96     	; 0x518 <get_DIP_Switch+0xae>
     4b8:	80 e2       	ldi	r24, 0x20	; 32
     4ba:	90 e0       	ldi	r25, 0x00	; 0
     4bc:	fc 01       	movw	r30, r24
     4be:	80 81       	ld	r24, Z
     4c0:	88 2f       	mov	r24, r24
     4c2:	90 e0       	ldi	r25, 0x00	; 0
     4c4:	80 78       	andi	r24, 0x80	; 128
     4c6:	99 27       	eor	r25, r25
     4c8:	47 e0       	ldi	r20, 0x07	; 7
     4ca:	50 e0       	ldi	r21, 0x00	; 0
     4cc:	2a 81       	ldd	r18, Y+2	; 0x02
     4ce:	3b 81       	ldd	r19, Y+3	; 0x03
     4d0:	ba 01       	movw	r22, r20
     4d2:	62 1b       	sub	r22, r18
     4d4:	73 0b       	sbc	r23, r19
     4d6:	9b 01       	movw	r18, r22
     4d8:	02 c0       	rjmp	.+4      	; 0x4de <get_DIP_Switch+0x74>
     4da:	95 95       	asr	r25
     4dc:	87 95       	ror	r24
     4de:	2a 95       	dec	r18
     4e0:	e2 f7       	brpl	.-8      	; 0x4da <get_DIP_Switch+0x70>
     4e2:	98 2f       	mov	r25, r24
     4e4:	89 81       	ldd	r24, Y+1	; 0x01
     4e6:	89 2b       	or	r24, r25
     4e8:	89 83       	std	Y+1, r24	; 0x01
     4ea:	82 e2       	ldi	r24, 0x22	; 34
     4ec:	90 e0       	ldi	r25, 0x00	; 0
     4ee:	22 e2       	ldi	r18, 0x22	; 34
     4f0:	30 e0       	ldi	r19, 0x00	; 0
     4f2:	f9 01       	movw	r30, r18
     4f4:	20 81       	ld	r18, Z
     4f6:	2f 7b       	andi	r18, 0xBF	; 191
     4f8:	fc 01       	movw	r30, r24
     4fa:	20 83       	st	Z, r18
     4fc:	82 e2       	ldi	r24, 0x22	; 34
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	22 e2       	ldi	r18, 0x22	; 34
     502:	30 e0       	ldi	r19, 0x00	; 0
     504:	f9 01       	movw	r30, r18
     506:	20 81       	ld	r18, Z
     508:	20 64       	ori	r18, 0x40	; 64
     50a:	fc 01       	movw	r30, r24
     50c:	20 83       	st	Z, r18
     50e:	8a 81       	ldd	r24, Y+2	; 0x02
     510:	9b 81       	ldd	r25, Y+3	; 0x03
     512:	01 97       	sbiw	r24, 0x01	; 1
     514:	9b 83       	std	Y+3, r25	; 0x03
     516:	8a 83       	std	Y+2, r24	; 0x02
     518:	8a 81       	ldd	r24, Y+2	; 0x02
     51a:	9b 81       	ldd	r25, Y+3	; 0x03
     51c:	99 23       	and	r25, r25
     51e:	64 f6       	brge	.-104    	; 0x4b8 <get_DIP_Switch+0x4e>
     520:	89 81       	ldd	r24, Y+1	; 0x01
     522:	0f 90       	pop	r0
     524:	0f 90       	pop	r0
     526:	0f 90       	pop	r0
     528:	df 91       	pop	r29
     52a:	cf 91       	pop	r28
     52c:	08 95       	ret

0000052e <get_LCD_Taster>:
     52e:	cf 93       	push	r28
     530:	df 93       	push	r29
     532:	1f 92       	push	r1
     534:	cd b7       	in	r28, 0x3d	; 61
     536:	de b7       	in	r29, 0x3e	; 62
     538:	85 e2       	ldi	r24, 0x25	; 37
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	25 e2       	ldi	r18, 0x25	; 37
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	f9 01       	movw	r30, r18
     542:	20 81       	ld	r18, Z
     544:	20 7f       	andi	r18, 0xF0	; 240
     546:	fc 01       	movw	r30, r24
     548:	20 83       	st	Z, r18
     54a:	84 e2       	ldi	r24, 0x24	; 36
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	20 ef       	ldi	r18, 0xF0	; 240
     550:	fc 01       	movw	r30, r24
     552:	20 83       	st	Z, r18
	...
     568:	83 e2       	ldi	r24, 0x23	; 35
     56a:	90 e0       	ldi	r25, 0x00	; 0
     56c:	fc 01       	movw	r30, r24
     56e:	80 81       	ld	r24, Z
     570:	8f 70       	andi	r24, 0x0F	; 15
     572:	89 83       	std	Y+1, r24	; 0x01
     574:	84 e2       	ldi	r24, 0x24	; 36
     576:	90 e0       	ldi	r25, 0x00	; 0
     578:	2f ef       	ldi	r18, 0xFF	; 255
     57a:	fc 01       	movw	r30, r24
     57c:	20 83       	st	Z, r18
     57e:	89 81       	ldd	r24, Y+1	; 0x01
     580:	0f 90       	pop	r0
     582:	df 91       	pop	r29
     584:	cf 91       	pop	r28
     586:	08 95       	ret

00000588 <init_ADC>:
     588:	cf 93       	push	r28
     58a:	df 93       	push	r29
     58c:	cd b7       	in	r28, 0x3d	; 61
     58e:	de b7       	in	r29, 0x3e	; 62
     590:	8a e7       	ldi	r24, 0x7A	; 122
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	2a e7       	ldi	r18, 0x7A	; 122
     596:	30 e0       	ldi	r19, 0x00	; 0
     598:	f9 01       	movw	r30, r18
     59a:	20 81       	ld	r18, Z
     59c:	20 68       	ori	r18, 0x80	; 128
     59e:	fc 01       	movw	r30, r24
     5a0:	20 83       	st	Z, r18
     5a2:	8c e7       	ldi	r24, 0x7C	; 124
     5a4:	90 e0       	ldi	r25, 0x00	; 0
     5a6:	2c e7       	ldi	r18, 0x7C	; 124
     5a8:	30 e0       	ldi	r19, 0x00	; 0
     5aa:	f9 01       	movw	r30, r18
     5ac:	20 81       	ld	r18, Z
     5ae:	20 64       	ori	r18, 0x40	; 64
     5b0:	fc 01       	movw	r30, r24
     5b2:	20 83       	st	Z, r18
     5b4:	8a e7       	ldi	r24, 0x7A	; 122
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	2a e7       	ldi	r18, 0x7A	; 122
     5ba:	30 e0       	ldi	r19, 0x00	; 0
     5bc:	f9 01       	movw	r30, r18
     5be:	20 81       	ld	r18, Z
     5c0:	27 60       	ori	r18, 0x07	; 7
     5c2:	fc 01       	movw	r30, r24
     5c4:	20 83       	st	Z, r18
     5c6:	00 00       	nop
     5c8:	df 91       	pop	r29
     5ca:	cf 91       	pop	r28
     5cc:	08 95       	ret

000005ce <init_UART0>:
     5ce:	cf 93       	push	r28
     5d0:	df 93       	push	r29
     5d2:	cd b7       	in	r28, 0x3d	; 61
     5d4:	de b7       	in	r29, 0x3e	; 62
     5d6:	84 ec       	ldi	r24, 0xC4	; 196
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	20 e1       	ldi	r18, 0x10	; 16
     5dc:	30 e0       	ldi	r19, 0x00	; 0
     5de:	fc 01       	movw	r30, r24
     5e0:	31 83       	std	Z+1, r19	; 0x01
     5e2:	20 83       	st	Z, r18
     5e4:	80 ec       	ldi	r24, 0xC0	; 192
     5e6:	90 e0       	ldi	r25, 0x00	; 0
     5e8:	20 ec       	ldi	r18, 0xC0	; 192
     5ea:	30 e0       	ldi	r19, 0x00	; 0
     5ec:	f9 01       	movw	r30, r18
     5ee:	20 81       	ld	r18, Z
     5f0:	22 60       	ori	r18, 0x02	; 2
     5f2:	fc 01       	movw	r30, r24
     5f4:	20 83       	st	Z, r18
     5f6:	81 ec       	ldi	r24, 0xC1	; 193
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	21 ec       	ldi	r18, 0xC1	; 193
     5fc:	30 e0       	ldi	r19, 0x00	; 0
     5fe:	f9 01       	movw	r30, r18
     600:	20 81       	ld	r18, Z
     602:	28 69       	ori	r18, 0x98	; 152
     604:	fc 01       	movw	r30, r24
     606:	20 83       	st	Z, r18
     608:	00 00       	nop
     60a:	df 91       	pop	r29
     60c:	cf 91       	pop	r28
     60e:	08 95       	ret

00000610 <init_UART1>:
     610:	cf 93       	push	r28
     612:	df 93       	push	r29
     614:	cd b7       	in	r28, 0x3d	; 61
     616:	de b7       	in	r29, 0x3e	; 62
     618:	8c ec       	ldi	r24, 0xCC	; 204
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	20 e1       	ldi	r18, 0x10	; 16
     61e:	30 e0       	ldi	r19, 0x00	; 0
     620:	fc 01       	movw	r30, r24
     622:	31 83       	std	Z+1, r19	; 0x01
     624:	20 83       	st	Z, r18
     626:	88 ec       	ldi	r24, 0xC8	; 200
     628:	90 e0       	ldi	r25, 0x00	; 0
     62a:	28 ec       	ldi	r18, 0xC8	; 200
     62c:	30 e0       	ldi	r19, 0x00	; 0
     62e:	f9 01       	movw	r30, r18
     630:	20 81       	ld	r18, Z
     632:	22 60       	ori	r18, 0x02	; 2
     634:	fc 01       	movw	r30, r24
     636:	20 83       	st	Z, r18
     638:	89 ec       	ldi	r24, 0xC9	; 201
     63a:	90 e0       	ldi	r25, 0x00	; 0
     63c:	29 ec       	ldi	r18, 0xC9	; 201
     63e:	30 e0       	ldi	r19, 0x00	; 0
     640:	f9 01       	movw	r30, r18
     642:	20 81       	ld	r18, Z
     644:	28 69       	ori	r18, 0x98	; 152
     646:	fc 01       	movw	r30, r24
     648:	20 83       	st	Z, r18
     64a:	00 00       	nop
     64c:	df 91       	pop	r29
     64e:	cf 91       	pop	r28
     650:	08 95       	ret

00000652 <send_Byte_0>:
     652:	cf 93       	push	r28
     654:	df 93       	push	r29
     656:	1f 92       	push	r1
     658:	cd b7       	in	r28, 0x3d	; 61
     65a:	de b7       	in	r29, 0x3e	; 62
     65c:	89 83       	std	Y+1, r24	; 0x01
     65e:	00 00       	nop
     660:	80 ec       	ldi	r24, 0xC0	; 192
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	fc 01       	movw	r30, r24
     666:	80 81       	ld	r24, Z
     668:	88 2f       	mov	r24, r24
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	80 72       	andi	r24, 0x20	; 32
     66e:	99 27       	eor	r25, r25
     670:	89 2b       	or	r24, r25
     672:	b1 f3       	breq	.-20     	; 0x660 <send_Byte_0+0xe>
     674:	86 ec       	ldi	r24, 0xC6	; 198
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	29 81       	ldd	r18, Y+1	; 0x01
     67a:	fc 01       	movw	r30, r24
     67c:	20 83       	st	Z, r18
     67e:	00 00       	nop
     680:	0f 90       	pop	r0
     682:	df 91       	pop	r29
     684:	cf 91       	pop	r28
     686:	08 95       	ret

00000688 <send_Byte_1>:
     688:	cf 93       	push	r28
     68a:	df 93       	push	r29
     68c:	1f 92       	push	r1
     68e:	cd b7       	in	r28, 0x3d	; 61
     690:	de b7       	in	r29, 0x3e	; 62
     692:	89 83       	std	Y+1, r24	; 0x01
     694:	00 00       	nop
     696:	88 ec       	ldi	r24, 0xC8	; 200
     698:	90 e0       	ldi	r25, 0x00	; 0
     69a:	fc 01       	movw	r30, r24
     69c:	80 81       	ld	r24, Z
     69e:	88 2f       	mov	r24, r24
     6a0:	90 e0       	ldi	r25, 0x00	; 0
     6a2:	80 72       	andi	r24, 0x20	; 32
     6a4:	99 27       	eor	r25, r25
     6a6:	89 2b       	or	r24, r25
     6a8:	b1 f3       	breq	.-20     	; 0x696 <send_Byte_1+0xe>
     6aa:	8e ec       	ldi	r24, 0xCE	; 206
     6ac:	90 e0       	ldi	r25, 0x00	; 0
     6ae:	29 81       	ldd	r18, Y+1	; 0x01
     6b0:	fc 01       	movw	r30, r24
     6b2:	20 83       	st	Z, r18
     6b4:	00 00       	nop
     6b6:	0f 90       	pop	r0
     6b8:	df 91       	pop	r29
     6ba:	cf 91       	pop	r28
     6bc:	08 95       	ret

000006be <to_uARM>:
     6be:	cf 93       	push	r28
     6c0:	df 93       	push	r29
     6c2:	00 d0       	rcall	.+0      	; 0x6c4 <to_uARM+0x6>
     6c4:	cd b7       	in	r28, 0x3d	; 61
     6c6:	de b7       	in	r29, 0x3e	; 62
     6c8:	9a 83       	std	Y+2, r25	; 0x02
     6ca:	89 83       	std	Y+1, r24	; 0x01
     6cc:	0b c0       	rjmp	.+22     	; 0x6e4 <to_uARM+0x26>
     6ce:	89 81       	ldd	r24, Y+1	; 0x01
     6d0:	9a 81       	ldd	r25, Y+2	; 0x02
     6d2:	fc 01       	movw	r30, r24
     6d4:	80 81       	ld	r24, Z
     6d6:	0e 94 44 03 	call	0x688	; 0x688 <send_Byte_1>
     6da:	89 81       	ldd	r24, Y+1	; 0x01
     6dc:	9a 81       	ldd	r25, Y+2	; 0x02
     6de:	01 96       	adiw	r24, 0x01	; 1
     6e0:	9a 83       	std	Y+2, r25	; 0x02
     6e2:	89 83       	std	Y+1, r24	; 0x01
     6e4:	89 81       	ldd	r24, Y+1	; 0x01
     6e6:	9a 81       	ldd	r25, Y+2	; 0x02
     6e8:	fc 01       	movw	r30, r24
     6ea:	80 81       	ld	r24, Z
     6ec:	88 23       	and	r24, r24
     6ee:	79 f7       	brne	.-34     	; 0x6ce <to_uARM+0x10>
     6f0:	10 92 80 03 	sts	0x0380, r1	; 0x800380 <uart_str_complete1>
     6f4:	00 00       	nop
     6f6:	80 91 80 03 	lds	r24, 0x0380	; 0x800380 <uart_str_complete1>
     6fa:	88 23       	and	r24, r24
     6fc:	e1 f3       	breq	.-8      	; 0x6f6 <to_uARM+0x38>
     6fe:	00 00       	nop
     700:	0f 90       	pop	r0
     702:	0f 90       	pop	r0
     704:	df 91       	pop	r29
     706:	cf 91       	pop	r28
     708:	08 95       	ret

0000070a <send_to_uArm>:
     70a:	cf 93       	push	r28
     70c:	df 93       	push	r29
     70e:	00 d0       	rcall	.+0      	; 0x710 <send_to_uArm+0x6>
     710:	cd b7       	in	r28, 0x3d	; 61
     712:	de b7       	in	r29, 0x3e	; 62
     714:	9a 83       	std	Y+2, r25	; 0x02
     716:	89 83       	std	Y+1, r24	; 0x01
     718:	89 81       	ldd	r24, Y+1	; 0x01
     71a:	9a 81       	ldd	r25, Y+2	; 0x02
     71c:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
     720:	80 e0       	ldi	r24, 0x00	; 0
     722:	91 e0       	ldi	r25, 0x01	; 1
     724:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
     728:	04 c0       	rjmp	.+8      	; 0x732 <send_to_uArm+0x28>
     72a:	80 e0       	ldi	r24, 0x00	; 0
     72c:	91 e0       	ldi	r25, 0x01	; 1
     72e:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
     732:	80 91 87 03 	lds	r24, 0x0387	; 0x800387 <uart_string1+0x4>
     736:	81 33       	cpi	r24, 0x31	; 49
     738:	c1 f3       	breq	.-16     	; 0x72a <send_to_uArm+0x20>
     73a:	00 00       	nop
     73c:	0f 90       	pop	r0
     73e:	0f 90       	pop	r0
     740:	df 91       	pop	r29
     742:	cf 91       	pop	r28
     744:	08 95       	ret

00000746 <__vector_20>:
     746:	1f 92       	push	r1
     748:	0f 92       	push	r0
     74a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     74e:	0f 92       	push	r0
     750:	11 24       	eor	r1, r1
     752:	2f 93       	push	r18
     754:	3f 93       	push	r19
     756:	8f 93       	push	r24
     758:	9f 93       	push	r25
     75a:	ef 93       	push	r30
     75c:	ff 93       	push	r31
     75e:	cf 93       	push	r28
     760:	df 93       	push	r29
     762:	00 d0       	rcall	.+0      	; 0x764 <__vector_20+0x1e>
     764:	1f 92       	push	r1
     766:	cd b7       	in	r28, 0x3d	; 61
     768:	de b7       	in	r29, 0x3e	; 62
     76a:	1a 82       	std	Y+2, r1	; 0x02
     76c:	86 ec       	ldi	r24, 0xC6	; 198
     76e:	90 e0       	ldi	r25, 0x00	; 0
     770:	fc 01       	movw	r30, r24
     772:	80 81       	ld	r24, Z
     774:	8b 83       	std	Y+3, r24	; 0x03
     776:	8b 81       	ldd	r24, Y+3	; 0x03
     778:	8a 30       	cpi	r24, 0x0A	; 10
     77a:	99 f0       	breq	.+38     	; 0x7a2 <__vector_20+0x5c>
     77c:	80 91 82 03 	lds	r24, 0x0382	; 0x800382 <uart_str_count1>
     780:	82 33       	cpi	r24, 0x32	; 50
     782:	78 f4       	brcc	.+30     	; 0x7a2 <__vector_20+0x5c>
     784:	80 91 81 03 	lds	r24, 0x0381	; 0x800381 <data_bytes_recieved>
     788:	88 2f       	mov	r24, r24
     78a:	90 e0       	ldi	r25, 0x00	; 0
     78c:	8d 52       	subi	r24, 0x2D	; 45
     78e:	9c 4f       	sbci	r25, 0xFC	; 252
     790:	2b 81       	ldd	r18, Y+3	; 0x03
     792:	fc 01       	movw	r30, r24
     794:	20 83       	st	Z, r18
     796:	80 91 81 03 	lds	r24, 0x0381	; 0x800381 <data_bytes_recieved>
     79a:	8f 5f       	subi	r24, 0xFF	; 255
     79c:	80 93 81 03 	sts	0x0381, r24	; 0x800381 <data_bytes_recieved>
     7a0:	1b c0       	rjmp	.+54     	; 0x7d8 <__vector_20+0x92>
     7a2:	19 82       	std	Y+1, r1	; 0x01
     7a4:	11 c0       	rjmp	.+34     	; 0x7c8 <__vector_20+0x82>
     7a6:	89 81       	ldd	r24, Y+1	; 0x01
     7a8:	88 2f       	mov	r24, r24
     7aa:	90 e0       	ldi	r25, 0x00	; 0
     7ac:	29 81       	ldd	r18, Y+1	; 0x01
     7ae:	22 2f       	mov	r18, r18
     7b0:	30 e0       	ldi	r19, 0x00	; 0
     7b2:	2d 52       	subi	r18, 0x2D	; 45
     7b4:	3c 4f       	sbci	r19, 0xFC	; 252
     7b6:	f9 01       	movw	r30, r18
     7b8:	20 81       	ld	r18, Z
     7ba:	8f 51       	subi	r24, 0x1F	; 31
     7bc:	9c 4f       	sbci	r25, 0xFC	; 252
     7be:	fc 01       	movw	r30, r24
     7c0:	20 83       	st	Z, r18
     7c2:	89 81       	ldd	r24, Y+1	; 0x01
     7c4:	8f 5f       	subi	r24, 0xFF	; 255
     7c6:	89 83       	std	Y+1, r24	; 0x01
     7c8:	80 91 81 03 	lds	r24, 0x0381	; 0x800381 <data_bytes_recieved>
     7cc:	99 81       	ldd	r25, Y+1	; 0x01
     7ce:	89 17       	cp	r24, r25
     7d0:	50 f7       	brcc	.-44     	; 0x7a6 <__vector_20+0x60>
     7d2:	81 e0       	ldi	r24, 0x01	; 1
     7d4:	80 93 7f 03 	sts	0x037F, r24	; 0x80037f <uart_str_complete>
     7d8:	00 00       	nop
     7da:	0f 90       	pop	r0
     7dc:	0f 90       	pop	r0
     7de:	0f 90       	pop	r0
     7e0:	df 91       	pop	r29
     7e2:	cf 91       	pop	r28
     7e4:	ff 91       	pop	r31
     7e6:	ef 91       	pop	r30
     7e8:	9f 91       	pop	r25
     7ea:	8f 91       	pop	r24
     7ec:	3f 91       	pop	r19
     7ee:	2f 91       	pop	r18
     7f0:	0f 90       	pop	r0
     7f2:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     7f6:	0f 90       	pop	r0
     7f8:	1f 90       	pop	r1
     7fa:	18 95       	reti

000007fc <__vector_28>:
     7fc:	1f 92       	push	r1
     7fe:	0f 92       	push	r0
     800:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     804:	0f 92       	push	r0
     806:	11 24       	eor	r1, r1
     808:	2f 93       	push	r18
     80a:	8f 93       	push	r24
     80c:	9f 93       	push	r25
     80e:	ef 93       	push	r30
     810:	ff 93       	push	r31
     812:	cf 93       	push	r28
     814:	df 93       	push	r29
     816:	1f 92       	push	r1
     818:	cd b7       	in	r28, 0x3d	; 61
     81a:	de b7       	in	r29, 0x3e	; 62
     81c:	8e ec       	ldi	r24, 0xCE	; 206
     81e:	90 e0       	ldi	r25, 0x00	; 0
     820:	fc 01       	movw	r30, r24
     822:	80 81       	ld	r24, Z
     824:	89 83       	std	Y+1, r24	; 0x01
     826:	80 91 80 03 	lds	r24, 0x0380	; 0x800380 <uart_str_complete1>
     82a:	88 23       	and	r24, r24
     82c:	31 f5       	brne	.+76     	; 0x87a <__vector_28+0x7e>
     82e:	89 81       	ldd	r24, Y+1	; 0x01
     830:	8a 30       	cpi	r24, 0x0A	; 10
     832:	b1 f0       	breq	.+44     	; 0x860 <__vector_28+0x64>
     834:	89 81       	ldd	r24, Y+1	; 0x01
     836:	8d 30       	cpi	r24, 0x0D	; 13
     838:	99 f0       	breq	.+38     	; 0x860 <__vector_28+0x64>
     83a:	80 91 82 03 	lds	r24, 0x0382	; 0x800382 <uart_str_count1>
     83e:	82 33       	cpi	r24, 0x32	; 50
     840:	78 f4       	brcc	.+30     	; 0x860 <__vector_28+0x64>
     842:	80 91 82 03 	lds	r24, 0x0382	; 0x800382 <uart_str_count1>
     846:	88 2f       	mov	r24, r24
     848:	90 e0       	ldi	r25, 0x00	; 0
     84a:	8d 57       	subi	r24, 0x7D	; 125
     84c:	9c 4f       	sbci	r25, 0xFC	; 252
     84e:	29 81       	ldd	r18, Y+1	; 0x01
     850:	fc 01       	movw	r30, r24
     852:	20 83       	st	Z, r18
     854:	80 91 82 03 	lds	r24, 0x0382	; 0x800382 <uart_str_count1>
     858:	8f 5f       	subi	r24, 0xFF	; 255
     85a:	80 93 82 03 	sts	0x0382, r24	; 0x800382 <uart_str_count1>
     85e:	0d c0       	rjmp	.+26     	; 0x87a <__vector_28+0x7e>
     860:	80 91 82 03 	lds	r24, 0x0382	; 0x800382 <uart_str_count1>
     864:	88 2f       	mov	r24, r24
     866:	90 e0       	ldi	r25, 0x00	; 0
     868:	8d 57       	subi	r24, 0x7D	; 125
     86a:	9c 4f       	sbci	r25, 0xFC	; 252
     86c:	fc 01       	movw	r30, r24
     86e:	10 82       	st	Z, r1
     870:	10 92 82 03 	sts	0x0382, r1	; 0x800382 <uart_str_count1>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	80 93 80 03 	sts	0x0380, r24	; 0x800380 <uart_str_complete1>
     87a:	00 00       	nop
     87c:	0f 90       	pop	r0
     87e:	df 91       	pop	r29
     880:	cf 91       	pop	r28
     882:	ff 91       	pop	r31
     884:	ef 91       	pop	r30
     886:	9f 91       	pop	r25
     888:	8f 91       	pop	r24
     88a:	2f 91       	pop	r18
     88c:	0f 90       	pop	r0
     88e:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     892:	0f 90       	pop	r0
     894:	1f 90       	pop	r1
     896:	18 95       	reti

00000898 <start_up_routine>:

void start_up_routine ()
{
     898:	cf 93       	push	r28
     89a:	df 93       	push	r29
     89c:	cd b7       	in	r28, 0x3d	; 61
     89e:	de b7       	in	r29, 0x3e	; 62
     8a0:	6c 97       	sbiw	r28, 0x1c	; 28
     8a2:	0f b6       	in	r0, 0x3f	; 63
     8a4:	f8 94       	cli
     8a6:	de bf       	out	0x3e, r29	; 62
     8a8:	0f be       	out	0x3f, r0	; 63
     8aa:	cd bf       	out	0x3d, r28	; 61
	init_BT_CAR_V2_0();			// Das Board wird hier initialisiert
     8ac:	0e 94 a5 32 	call	0x654a	; 0x654a <init_BT_CAR_V2_0>
	wait_1ms(1000);
     8b0:	68 ee       	ldi	r22, 0xE8	; 232
     8b2:	73 e0       	ldi	r23, 0x03	; 3
     8b4:	80 e0       	ldi	r24, 0x00	; 0
     8b6:	90 e0       	ldi	r25, 0x00	; 0
     8b8:	0e 94 3c 30 	call	0x6078	; 0x6078 <wait_1ms>
	init_ADC();
     8bc:	0e 94 c4 02 	call	0x588	; 0x588 <init_ADC>
	init_UART0();
     8c0:	0e 94 e7 02 	call	0x5ce	; 0x5ce <init_UART0>
	init_UART1();
     8c4:	0e 94 08 03 	call	0x610	; 0x610 <init_UART1>
	wait_1ms(1000);
     8c8:	68 ee       	ldi	r22, 0xE8	; 232
     8ca:	73 e0       	ldi	r23, 0x03	; 3
     8cc:	80 e0       	ldi	r24, 0x00	; 0
     8ce:	90 e0       	ldi	r25, 0x00	; 0
     8d0:	0e 94 3c 30 	call	0x6078	; 0x6078 <wait_1ms>
	//while (final_data[0]!='D')
	//{
	//	to_pc('R');
	//}
	
	to_uARM("M2210 F500 T200\n");
     8d4:	8e e5       	ldi	r24, 0x5E	; 94
     8d6:	91 e0       	ldi	r25, 0x01	; 1
     8d8:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
     8dc:	80 e0       	ldi	r24, 0x00	; 0
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	a8 e4       	ldi	r26, 0x48	; 72
     8e2:	b3 e4       	ldi	r27, 0x43	; 67
     8e4:	89 83       	std	Y+1, r24	; 0x01
     8e6:	9a 83       	std	Y+2, r25	; 0x02
     8e8:	ab 83       	std	Y+3, r26	; 0x03
     8ea:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     8ec:	20 e0       	ldi	r18, 0x00	; 0
     8ee:	30 e0       	ldi	r19, 0x00	; 0
     8f0:	4a e7       	ldi	r20, 0x7A	; 122
     8f2:	55 e4       	ldi	r21, 0x45	; 69
     8f4:	69 81       	ldd	r22, Y+1	; 0x01
     8f6:	7a 81       	ldd	r23, Y+2	; 0x02
     8f8:	8b 81       	ldd	r24, Y+3	; 0x03
     8fa:	9c 81       	ldd	r25, Y+4	; 0x04
     8fc:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
     900:	dc 01       	movw	r26, r24
     902:	cb 01       	movw	r24, r22
     904:	8b 8b       	std	Y+19, r24	; 0x13
     906:	9c 8b       	std	Y+20, r25	; 0x14
     908:	ad 8b       	std	Y+21, r26	; 0x15
     90a:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     90c:	20 e0       	ldi	r18, 0x00	; 0
     90e:	30 e0       	ldi	r19, 0x00	; 0
     910:	40 e8       	ldi	r20, 0x80	; 128
     912:	5f e3       	ldi	r21, 0x3F	; 63
     914:	6b 89       	ldd	r22, Y+19	; 0x13
     916:	7c 89       	ldd	r23, Y+20	; 0x14
     918:	8d 89       	ldd	r24, Y+21	; 0x15
     91a:	9e 89       	ldd	r25, Y+22	; 0x16
     91c:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
     920:	88 23       	and	r24, r24
     922:	2c f4       	brge	.+10     	; 0x92e <start_up_routine+0x96>
		__ticks = 1;
     924:	81 e0       	ldi	r24, 0x01	; 1
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	98 8f       	std	Y+24, r25	; 0x18
     92a:	8f 8b       	std	Y+23, r24	; 0x17
     92c:	3f c0       	rjmp	.+126    	; 0x9ac <start_up_routine+0x114>
	else if (__tmp > 65535)
     92e:	20 e0       	ldi	r18, 0x00	; 0
     930:	3f ef       	ldi	r19, 0xFF	; 255
     932:	4f e7       	ldi	r20, 0x7F	; 127
     934:	57 e4       	ldi	r21, 0x47	; 71
     936:	6b 89       	ldd	r22, Y+19	; 0x13
     938:	7c 89       	ldd	r23, Y+20	; 0x14
     93a:	8d 89       	ldd	r24, Y+21	; 0x15
     93c:	9e 89       	ldd	r25, Y+22	; 0x16
     93e:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
     942:	18 16       	cp	r1, r24
     944:	4c f5       	brge	.+82     	; 0x998 <start_up_routine+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     946:	20 e0       	ldi	r18, 0x00	; 0
     948:	30 e0       	ldi	r19, 0x00	; 0
     94a:	40 e2       	ldi	r20, 0x20	; 32
     94c:	51 e4       	ldi	r21, 0x41	; 65
     94e:	69 81       	ldd	r22, Y+1	; 0x01
     950:	7a 81       	ldd	r23, Y+2	; 0x02
     952:	8b 81       	ldd	r24, Y+3	; 0x03
     954:	9c 81       	ldd	r25, Y+4	; 0x04
     956:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
     95a:	dc 01       	movw	r26, r24
     95c:	cb 01       	movw	r24, r22
     95e:	bc 01       	movw	r22, r24
     960:	cd 01       	movw	r24, r26
     962:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
     966:	dc 01       	movw	r26, r24
     968:	cb 01       	movw	r24, r22
     96a:	98 8f       	std	Y+24, r25	; 0x18
     96c:	8f 8b       	std	Y+23, r24	; 0x17
     96e:	0f c0       	rjmp	.+30     	; 0x98e <start_up_routine+0xf6>
     970:	80 e9       	ldi	r24, 0x90	; 144
     972:	91 e0       	ldi	r25, 0x01	; 1
     974:	9a 8f       	std	Y+26, r25	; 0x1a
     976:	89 8f       	std	Y+25, r24	; 0x19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     978:	89 8d       	ldd	r24, Y+25	; 0x19
     97a:	9a 8d       	ldd	r25, Y+26	; 0x1a
     97c:	01 97       	sbiw	r24, 0x01	; 1
     97e:	f1 f7       	brne	.-4      	; 0x97c <start_up_routine+0xe4>
     980:	9a 8f       	std	Y+26, r25	; 0x1a
     982:	89 8f       	std	Y+25, r24	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     984:	8f 89       	ldd	r24, Y+23	; 0x17
     986:	98 8d       	ldd	r25, Y+24	; 0x18
     988:	01 97       	sbiw	r24, 0x01	; 1
     98a:	98 8f       	std	Y+24, r25	; 0x18
     98c:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     98e:	8f 89       	ldd	r24, Y+23	; 0x17
     990:	98 8d       	ldd	r25, Y+24	; 0x18
     992:	89 2b       	or	r24, r25
     994:	69 f7       	brne	.-38     	; 0x970 <start_up_routine+0xd8>
     996:	14 c0       	rjmp	.+40     	; 0x9c0 <start_up_routine+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     998:	6b 89       	ldd	r22, Y+19	; 0x13
     99a:	7c 89       	ldd	r23, Y+20	; 0x14
     99c:	8d 89       	ldd	r24, Y+21	; 0x15
     99e:	9e 89       	ldd	r25, Y+22	; 0x16
     9a0:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
     9a4:	dc 01       	movw	r26, r24
     9a6:	cb 01       	movw	r24, r22
     9a8:	98 8f       	std	Y+24, r25	; 0x18
     9aa:	8f 8b       	std	Y+23, r24	; 0x17
     9ac:	8f 89       	ldd	r24, Y+23	; 0x17
     9ae:	98 8d       	ldd	r25, Y+24	; 0x18
     9b0:	9c 8f       	std	Y+28, r25	; 0x1c
     9b2:	8b 8f       	std	Y+27, r24	; 0x1b
     9b4:	8b 8d       	ldd	r24, Y+27	; 0x1b
     9b6:	9c 8d       	ldd	r25, Y+28	; 0x1c
     9b8:	01 97       	sbiw	r24, 0x01	; 1
     9ba:	f1 f7       	brne	.-4      	; 0x9b8 <start_up_routine+0x120>
     9bc:	9c 8f       	std	Y+28, r25	; 0x1c
     9be:	8b 8f       	std	Y+27, r24	; 0x1b
	_delay_ms(200);
	to_uARM("M2210 F1000 T500\n");
     9c0:	8f e6       	ldi	r24, 0x6F	; 111
     9c2:	91 e0       	ldi	r25, 0x01	; 1
     9c4:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
     9c8:	80 e0       	ldi	r24, 0x00	; 0
     9ca:	90 e0       	ldi	r25, 0x00	; 0
     9cc:	aa ef       	ldi	r26, 0xFA	; 250
     9ce:	b3 e4       	ldi	r27, 0x43	; 67
     9d0:	8d 83       	std	Y+5, r24	; 0x05
     9d2:	9e 83       	std	Y+6, r25	; 0x06
     9d4:	af 83       	std	Y+7, r26	; 0x07
     9d6:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     9d8:	20 e0       	ldi	r18, 0x00	; 0
     9da:	30 e0       	ldi	r19, 0x00	; 0
     9dc:	4a e7       	ldi	r20, 0x7A	; 122
     9de:	55 e4       	ldi	r21, 0x45	; 69
     9e0:	6d 81       	ldd	r22, Y+5	; 0x05
     9e2:	7e 81       	ldd	r23, Y+6	; 0x06
     9e4:	8f 81       	ldd	r24, Y+7	; 0x07
     9e6:	98 85       	ldd	r25, Y+8	; 0x08
     9e8:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
     9ec:	dc 01       	movw	r26, r24
     9ee:	cb 01       	movw	r24, r22
     9f0:	89 87       	std	Y+9, r24	; 0x09
     9f2:	9a 87       	std	Y+10, r25	; 0x0a
     9f4:	ab 87       	std	Y+11, r26	; 0x0b
     9f6:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     9f8:	20 e0       	ldi	r18, 0x00	; 0
     9fa:	30 e0       	ldi	r19, 0x00	; 0
     9fc:	40 e8       	ldi	r20, 0x80	; 128
     9fe:	5f e3       	ldi	r21, 0x3F	; 63
     a00:	69 85       	ldd	r22, Y+9	; 0x09
     a02:	7a 85       	ldd	r23, Y+10	; 0x0a
     a04:	8b 85       	ldd	r24, Y+11	; 0x0b
     a06:	9c 85       	ldd	r25, Y+12	; 0x0c
     a08:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
     a0c:	88 23       	and	r24, r24
     a0e:	2c f4       	brge	.+10     	; 0xa1a <start_up_routine+0x182>
		__ticks = 1;
     a10:	81 e0       	ldi	r24, 0x01	; 1
     a12:	90 e0       	ldi	r25, 0x00	; 0
     a14:	9e 87       	std	Y+14, r25	; 0x0e
     a16:	8d 87       	std	Y+13, r24	; 0x0d
     a18:	3f c0       	rjmp	.+126    	; 0xa98 <start_up_routine+0x200>
	else if (__tmp > 65535)
     a1a:	20 e0       	ldi	r18, 0x00	; 0
     a1c:	3f ef       	ldi	r19, 0xFF	; 255
     a1e:	4f e7       	ldi	r20, 0x7F	; 127
     a20:	57 e4       	ldi	r21, 0x47	; 71
     a22:	69 85       	ldd	r22, Y+9	; 0x09
     a24:	7a 85       	ldd	r23, Y+10	; 0x0a
     a26:	8b 85       	ldd	r24, Y+11	; 0x0b
     a28:	9c 85       	ldd	r25, Y+12	; 0x0c
     a2a:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
     a2e:	18 16       	cp	r1, r24
     a30:	4c f5       	brge	.+82     	; 0xa84 <start_up_routine+0x1ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a32:	20 e0       	ldi	r18, 0x00	; 0
     a34:	30 e0       	ldi	r19, 0x00	; 0
     a36:	40 e2       	ldi	r20, 0x20	; 32
     a38:	51 e4       	ldi	r21, 0x41	; 65
     a3a:	6d 81       	ldd	r22, Y+5	; 0x05
     a3c:	7e 81       	ldd	r23, Y+6	; 0x06
     a3e:	8f 81       	ldd	r24, Y+7	; 0x07
     a40:	98 85       	ldd	r25, Y+8	; 0x08
     a42:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
     a46:	dc 01       	movw	r26, r24
     a48:	cb 01       	movw	r24, r22
     a4a:	bc 01       	movw	r22, r24
     a4c:	cd 01       	movw	r24, r26
     a4e:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
     a52:	dc 01       	movw	r26, r24
     a54:	cb 01       	movw	r24, r22
     a56:	9e 87       	std	Y+14, r25	; 0x0e
     a58:	8d 87       	std	Y+13, r24	; 0x0d
     a5a:	0f c0       	rjmp	.+30     	; 0xa7a <start_up_routine+0x1e2>
     a5c:	80 e9       	ldi	r24, 0x90	; 144
     a5e:	91 e0       	ldi	r25, 0x01	; 1
     a60:	98 8b       	std	Y+16, r25	; 0x10
     a62:	8f 87       	std	Y+15, r24	; 0x0f
     a64:	8f 85       	ldd	r24, Y+15	; 0x0f
     a66:	98 89       	ldd	r25, Y+16	; 0x10
     a68:	01 97       	sbiw	r24, 0x01	; 1
     a6a:	f1 f7       	brne	.-4      	; 0xa68 <start_up_routine+0x1d0>
     a6c:	98 8b       	std	Y+16, r25	; 0x10
     a6e:	8f 87       	std	Y+15, r24	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a70:	8d 85       	ldd	r24, Y+13	; 0x0d
     a72:	9e 85       	ldd	r25, Y+14	; 0x0e
     a74:	01 97       	sbiw	r24, 0x01	; 1
     a76:	9e 87       	std	Y+14, r25	; 0x0e
     a78:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a7a:	8d 85       	ldd	r24, Y+13	; 0x0d
     a7c:	9e 85       	ldd	r25, Y+14	; 0x0e
     a7e:	89 2b       	or	r24, r25
     a80:	69 f7       	brne	.-38     	; 0xa5c <start_up_routine+0x1c4>
     a82:	14 c0       	rjmp	.+40     	; 0xaac <start_up_routine+0x214>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a84:	69 85       	ldd	r22, Y+9	; 0x09
     a86:	7a 85       	ldd	r23, Y+10	; 0x0a
     a88:	8b 85       	ldd	r24, Y+11	; 0x0b
     a8a:	9c 85       	ldd	r25, Y+12	; 0x0c
     a8c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
     a90:	dc 01       	movw	r26, r24
     a92:	cb 01       	movw	r24, r22
     a94:	9e 87       	std	Y+14, r25	; 0x0e
     a96:	8d 87       	std	Y+13, r24	; 0x0d
     a98:	8d 85       	ldd	r24, Y+13	; 0x0d
     a9a:	9e 85       	ldd	r25, Y+14	; 0x0e
     a9c:	9a 8b       	std	Y+18, r25	; 0x12
     a9e:	89 8b       	std	Y+17, r24	; 0x11
     aa0:	89 89       	ldd	r24, Y+17	; 0x11
     aa2:	9a 89       	ldd	r25, Y+18	; 0x12
     aa4:	01 97       	sbiw	r24, 0x01	; 1
     aa6:	f1 f7       	brne	.-4      	; 0xaa4 <start_up_routine+0x20c>
     aa8:	9a 8b       	std	Y+18, r25	; 0x12
     aaa:	89 8b       	std	Y+17, r24	; 0x11
	_delay_ms(500);
	to_uARM("M2210 F2000 T500\n");
     aac:	81 e8       	ldi	r24, 0x81	; 129
     aae:	91 e0       	ldi	r25, 0x01	; 1
     ab0:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
	clear_lcd();
     ab4:	0e 94 42 32 	call	0x6484	; 0x6484 <clear_lcd>
}
     ab8:	00 00       	nop
     aba:	6c 96       	adiw	r28, 0x1c	; 28
     abc:	0f b6       	in	r0, 0x3f	; 63
     abe:	f8 94       	cli
     ac0:	de bf       	out	0x3e, r29	; 62
     ac2:	0f be       	out	0x3f, r0	; 63
     ac4:	cd bf       	out	0x3d, r28	; 61
     ac6:	df 91       	pop	r29
     ac8:	cf 91       	pop	r28
     aca:	08 95       	ret

00000acc <main>:

int main (void)
{
     acc:	cf 92       	push	r12
     ace:	ef 92       	push	r14
     ad0:	0f 93       	push	r16
     ad2:	1f 93       	push	r17
     ad4:	cf 93       	push	r28
     ad6:	df 93       	push	r29
     ad8:	cd b7       	in	r28, 0x3d	; 61
     ada:	de b7       	in	r29, 0x3e	; 62
     adc:	ce 57       	subi	r28, 0x7E	; 126
     ade:	d3 40       	sbci	r29, 0x03	; 3
     ae0:	0f b6       	in	r0, 0x3f	; 63
     ae2:	f8 94       	cli
     ae4:	de bf       	out	0x3e, r29	; 62
     ae6:	0f be       	out	0x3f, r0	; 63
     ae8:	cd bf       	out	0x3d, r28	; 61
	start_up_routine();
     aea:	0e 94 4c 04 	call	0x898	; 0x898 <start_up_routine>
	unsigned char taster;
	//unsigned char direction;
	int recieved_X; 
	int recieved_Y;
	unsigned char buffer [30];
	unsigned char check=0;
     aee:	1d 82       	std	Y+5, r1	; 0x05
	unsigned char counter=0;
     af0:	1e 82       	std	Y+6, r1	; 0x06
	unsigned char routine_done=0;
     af2:	1f 82       	std	Y+7, r1	; 0x07
	unsigned int sound[14]={262,277,294,311,330,349,370,392,415,440,466,494,523,0};
     af4:	ce 01       	movw	r24, r28
     af6:	81 50       	subi	r24, 0x01	; 1
     af8:	9d 4f       	sbci	r25, 0xFD	; 253
     afa:	2c e1       	ldi	r18, 0x1C	; 28
     afc:	e0 e3       	ldi	r30, 0x30	; 48
     afe:	f3 e0       	ldi	r31, 0x03	; 3
     b00:	dc 01       	movw	r26, r24
     b02:	01 90       	ld	r0, Z+
     b04:	0d 92       	st	X+, r0
     b06:	2a 95       	dec	r18
     b08:	e1 f7       	brne	.-8      	; 0xb02 <main+0x36>
	unsigned char music[50]={0,0,2,2,0,0,5,5,4,4,4,4,0,0,2,2,0,0,7,7,5,5,5,5,0,0,12,12,9,9,5,5,4,4,2,2,10,10,9,9,5,5,7,7,5,5,5,5,5,5};
     b0a:	ce 01       	movw	r24, r28
     b0c:	85 5e       	subi	r24, 0xE5	; 229
     b0e:	9c 4f       	sbci	r25, 0xFC	; 252
     b10:	22 e3       	ldi	r18, 0x32	; 50
     b12:	ec e4       	ldi	r30, 0x4C	; 76
     b14:	f3 e0       	ldi	r31, 0x03	; 3
     b16:	dc 01       	movw	r26, r24
     b18:	01 90       	ld	r0, Z+
     b1a:	0d 92       	st	X+, r0
     b1c:	2a 95       	dec	r18
     b1e:	e1 f7       	brne	.-8      	; 0xb18 <main+0x4c>
	unsigned char sound_buffer[20];
	unsigned int tone;
	struct cRGB array[LED_AMOUNT];
	ws2812_setleds(array,LED_AMOUNT);
     b20:	ce 01       	movw	r24, r28
     b22:	8f 59       	subi	r24, 0x9F	; 159
     b24:	9c 4f       	sbci	r25, 0xFC	; 252
     b26:	6a e0       	ldi	r22, 0x0A	; 10
     b28:	70 e0       	ldi	r23, 0x00	; 0
     b2a:	0e 94 5d 00 	call	0xba	; 0xba <ws2812_setleds>
	
	while(1)
	{
	//	direction=get_direction();
		taster = get_LCD_Taster();
     b2e:	0e 94 97 02 	call	0x52e	; 0x52e <get_LCD_Taster>
     b32:	88 87       	std	Y+8, r24	; 0x08
		DIP_Switch=get_DIP_Switch();
     b34:	0e 94 35 02 	call	0x46a	; 0x46a <get_DIP_Switch>
     b38:	80 93 7e 03 	sts	0x037E, r24	; 0x80037e <__data_end>
		if ((DIP_Switch&0x01)&&(taster&0x01))
     b3c:	80 91 7e 03 	lds	r24, 0x037E	; 0x80037e <__data_end>
     b40:	88 2f       	mov	r24, r24
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	81 70       	andi	r24, 0x01	; 1
     b46:	99 27       	eor	r25, r25
     b48:	89 2b       	or	r24, r25
     b4a:	11 f4       	brne	.+4      	; 0xb50 <main+0x84>
     b4c:	0c 94 0f 29 	jmp	0x521e	; 0x521e <__stack+0x411f>
     b50:	88 85       	ldd	r24, Y+8	; 0x08
     b52:	88 2f       	mov	r24, r24
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	81 70       	andi	r24, 0x01	; 1
     b58:	99 27       	eor	r25, r25
     b5a:	89 2b       	or	r24, r25
     b5c:	11 f4       	brne	.+4      	; 0xb62 <main+0x96>
     b5e:	0c 94 0f 29 	jmp	0x521e	; 0x521e <__stack+0x411f>
		{
			to_uARM("M2210 F660 T100\n");
     b62:	83 e9       	ldi	r24, 0x93	; 147
     b64:	91 e0       	ldi	r25, 0x01	; 1
     b66:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
     b6a:	80 e0       	ldi	r24, 0x00	; 0
     b6c:	90 e0       	ldi	r25, 0x00	; 0
     b6e:	a6 e1       	ldi	r26, 0x16	; 22
     b70:	b3 e4       	ldi	r27, 0x43	; 67
     b72:	8d 87       	std	Y+13, r24	; 0x0d
     b74:	9e 87       	std	Y+14, r25	; 0x0e
     b76:	af 87       	std	Y+15, r26	; 0x0f
     b78:	b8 8b       	std	Y+16, r27	; 0x10

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     b7a:	8e 01       	movw	r16, r28
     b7c:	05 56       	subi	r16, 0x65	; 101
     b7e:	1d 4f       	sbci	r17, 0xFD	; 253
     b80:	20 e0       	ldi	r18, 0x00	; 0
     b82:	30 e0       	ldi	r19, 0x00	; 0
     b84:	4a e7       	ldi	r20, 0x7A	; 122
     b86:	55 e4       	ldi	r21, 0x45	; 69
     b88:	6d 85       	ldd	r22, Y+13	; 0x0d
     b8a:	7e 85       	ldd	r23, Y+14	; 0x0e
     b8c:	8f 85       	ldd	r24, Y+15	; 0x0f
     b8e:	98 89       	ldd	r25, Y+16	; 0x10
     b90:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
     b94:	dc 01       	movw	r26, r24
     b96:	cb 01       	movw	r24, r22
     b98:	f8 01       	movw	r30, r16
     b9a:	80 83       	st	Z, r24
     b9c:	91 83       	std	Z+1, r25	; 0x01
     b9e:	a2 83       	std	Z+2, r26	; 0x02
     ba0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     ba2:	ce 01       	movw	r24, r28
     ba4:	85 56       	subi	r24, 0x65	; 101
     ba6:	9d 4f       	sbci	r25, 0xFD	; 253
     ba8:	20 e0       	ldi	r18, 0x00	; 0
     baa:	30 e0       	ldi	r19, 0x00	; 0
     bac:	40 e8       	ldi	r20, 0x80	; 128
     bae:	5f e3       	ldi	r21, 0x3F	; 63
     bb0:	fc 01       	movw	r30, r24
     bb2:	60 81       	ld	r22, Z
     bb4:	71 81       	ldd	r23, Z+1	; 0x01
     bb6:	82 81       	ldd	r24, Z+2	; 0x02
     bb8:	93 81       	ldd	r25, Z+3	; 0x03
     bba:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
     bbe:	88 23       	and	r24, r24
     bc0:	4c f4       	brge	.+18     	; 0xbd4 <main+0x108>
		__ticks = 1;
     bc2:	ce 01       	movw	r24, r28
     bc4:	81 56       	subi	r24, 0x61	; 97
     bc6:	9d 4f       	sbci	r25, 0xFD	; 253
     bc8:	21 e0       	ldi	r18, 0x01	; 1
     bca:	30 e0       	ldi	r19, 0x00	; 0
     bcc:	fc 01       	movw	r30, r24
     bce:	31 83       	std	Z+1, r19	; 0x01
     bd0:	20 83       	st	Z, r18
     bd2:	69 c0       	rjmp	.+210    	; 0xca6 <main+0x1da>
	else if (__tmp > 65535)
     bd4:	ce 01       	movw	r24, r28
     bd6:	85 56       	subi	r24, 0x65	; 101
     bd8:	9d 4f       	sbci	r25, 0xFD	; 253
     bda:	20 e0       	ldi	r18, 0x00	; 0
     bdc:	3f ef       	ldi	r19, 0xFF	; 255
     bde:	4f e7       	ldi	r20, 0x7F	; 127
     be0:	57 e4       	ldi	r21, 0x47	; 71
     be2:	fc 01       	movw	r30, r24
     be4:	60 81       	ld	r22, Z
     be6:	71 81       	ldd	r23, Z+1	; 0x01
     be8:	82 81       	ldd	r24, Z+2	; 0x02
     bea:	93 81       	ldd	r25, Z+3	; 0x03
     bec:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
     bf0:	18 16       	cp	r1, r24
     bf2:	0c f0       	brlt	.+2      	; 0xbf6 <main+0x12a>
     bf4:	46 c0       	rjmp	.+140    	; 0xc82 <main+0x1b6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bf6:	20 e0       	ldi	r18, 0x00	; 0
     bf8:	30 e0       	ldi	r19, 0x00	; 0
     bfa:	40 e2       	ldi	r20, 0x20	; 32
     bfc:	51 e4       	ldi	r21, 0x41	; 65
     bfe:	6d 85       	ldd	r22, Y+13	; 0x0d
     c00:	7e 85       	ldd	r23, Y+14	; 0x0e
     c02:	8f 85       	ldd	r24, Y+15	; 0x0f
     c04:	98 89       	ldd	r25, Y+16	; 0x10
     c06:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
     c0a:	dc 01       	movw	r26, r24
     c0c:	cb 01       	movw	r24, r22
     c0e:	8e 01       	movw	r16, r28
     c10:	01 56       	subi	r16, 0x61	; 97
     c12:	1d 4f       	sbci	r17, 0xFD	; 253
     c14:	bc 01       	movw	r22, r24
     c16:	cd 01       	movw	r24, r26
     c18:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
     c1c:	dc 01       	movw	r26, r24
     c1e:	cb 01       	movw	r24, r22
     c20:	f8 01       	movw	r30, r16
     c22:	91 83       	std	Z+1, r25	; 0x01
     c24:	80 83       	st	Z, r24
     c26:	24 c0       	rjmp	.+72     	; 0xc70 <main+0x1a4>
     c28:	ce 01       	movw	r24, r28
     c2a:	8f 55       	subi	r24, 0x5F	; 95
     c2c:	9d 4f       	sbci	r25, 0xFD	; 253
     c2e:	20 e9       	ldi	r18, 0x90	; 144
     c30:	31 e0       	ldi	r19, 0x01	; 1
     c32:	fc 01       	movw	r30, r24
     c34:	31 83       	std	Z+1, r19	; 0x01
     c36:	20 83       	st	Z, r18
     c38:	ce 01       	movw	r24, r28
     c3a:	8f 55       	subi	r24, 0x5F	; 95
     c3c:	9d 4f       	sbci	r25, 0xFD	; 253
     c3e:	fc 01       	movw	r30, r24
     c40:	80 81       	ld	r24, Z
     c42:	91 81       	ldd	r25, Z+1	; 0x01
     c44:	01 97       	sbiw	r24, 0x01	; 1
     c46:	f1 f7       	brne	.-4      	; 0xc44 <main+0x178>
     c48:	9e 01       	movw	r18, r28
     c4a:	2f 55       	subi	r18, 0x5F	; 95
     c4c:	3d 4f       	sbci	r19, 0xFD	; 253
     c4e:	f9 01       	movw	r30, r18
     c50:	91 83       	std	Z+1, r25	; 0x01
     c52:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c54:	ce 01       	movw	r24, r28
     c56:	81 56       	subi	r24, 0x61	; 97
     c58:	9d 4f       	sbci	r25, 0xFD	; 253
     c5a:	9e 01       	movw	r18, r28
     c5c:	21 56       	subi	r18, 0x61	; 97
     c5e:	3d 4f       	sbci	r19, 0xFD	; 253
     c60:	f9 01       	movw	r30, r18
     c62:	20 81       	ld	r18, Z
     c64:	31 81       	ldd	r19, Z+1	; 0x01
     c66:	21 50       	subi	r18, 0x01	; 1
     c68:	31 09       	sbc	r19, r1
     c6a:	fc 01       	movw	r30, r24
     c6c:	31 83       	std	Z+1, r19	; 0x01
     c6e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c70:	ce 01       	movw	r24, r28
     c72:	81 56       	subi	r24, 0x61	; 97
     c74:	9d 4f       	sbci	r25, 0xFD	; 253
     c76:	fc 01       	movw	r30, r24
     c78:	80 81       	ld	r24, Z
     c7a:	91 81       	ldd	r25, Z+1	; 0x01
     c7c:	89 2b       	or	r24, r25
     c7e:	a1 f6       	brne	.-88     	; 0xc28 <main+0x15c>
     c80:	2c c0       	rjmp	.+88     	; 0xcda <main+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c82:	8e 01       	movw	r16, r28
     c84:	01 56       	subi	r16, 0x61	; 97
     c86:	1d 4f       	sbci	r17, 0xFD	; 253
     c88:	ce 01       	movw	r24, r28
     c8a:	85 56       	subi	r24, 0x65	; 101
     c8c:	9d 4f       	sbci	r25, 0xFD	; 253
     c8e:	fc 01       	movw	r30, r24
     c90:	60 81       	ld	r22, Z
     c92:	71 81       	ldd	r23, Z+1	; 0x01
     c94:	82 81       	ldd	r24, Z+2	; 0x02
     c96:	93 81       	ldd	r25, Z+3	; 0x03
     c98:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
     c9c:	dc 01       	movw	r26, r24
     c9e:	cb 01       	movw	r24, r22
     ca0:	f8 01       	movw	r30, r16
     ca2:	91 83       	std	Z+1, r25	; 0x01
     ca4:	80 83       	st	Z, r24
     ca6:	ce 01       	movw	r24, r28
     ca8:	8d 55       	subi	r24, 0x5D	; 93
     caa:	9d 4f       	sbci	r25, 0xFD	; 253
     cac:	9e 01       	movw	r18, r28
     cae:	21 56       	subi	r18, 0x61	; 97
     cb0:	3d 4f       	sbci	r19, 0xFD	; 253
     cb2:	f9 01       	movw	r30, r18
     cb4:	20 81       	ld	r18, Z
     cb6:	31 81       	ldd	r19, Z+1	; 0x01
     cb8:	fc 01       	movw	r30, r24
     cba:	31 83       	std	Z+1, r19	; 0x01
     cbc:	20 83       	st	Z, r18
     cbe:	ce 01       	movw	r24, r28
     cc0:	8d 55       	subi	r24, 0x5D	; 93
     cc2:	9d 4f       	sbci	r25, 0xFD	; 253
     cc4:	fc 01       	movw	r30, r24
     cc6:	80 81       	ld	r24, Z
     cc8:	91 81       	ldd	r25, Z+1	; 0x01
     cca:	01 97       	sbiw	r24, 0x01	; 1
     ccc:	f1 f7       	brne	.-4      	; 0xcca <main+0x1fe>
     cce:	9e 01       	movw	r18, r28
     cd0:	2d 55       	subi	r18, 0x5D	; 93
     cd2:	3d 4f       	sbci	r19, 0xFD	; 253
     cd4:	f9 01       	movw	r30, r18
     cd6:	91 83       	std	Z+1, r25	; 0x01
     cd8:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F660 T100\n");
     cda:	83 e9       	ldi	r24, 0x93	; 147
     cdc:	91 e0       	ldi	r25, 0x01	; 1
     cde:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
     ce2:	80 e0       	ldi	r24, 0x00	; 0
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	a6 e9       	ldi	r26, 0x96	; 150
     ce8:	b3 e4       	ldi	r27, 0x43	; 67
     cea:	89 8b       	std	Y+17, r24	; 0x11
     cec:	9a 8b       	std	Y+18, r25	; 0x12
     cee:	ab 8b       	std	Y+19, r26	; 0x13
     cf0:	bc 8b       	std	Y+20, r27	; 0x14

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     cf2:	8e 01       	movw	r16, r28
     cf4:	0f 56       	subi	r16, 0x6F	; 111
     cf6:	1d 4f       	sbci	r17, 0xFD	; 253
     cf8:	20 e0       	ldi	r18, 0x00	; 0
     cfa:	30 e0       	ldi	r19, 0x00	; 0
     cfc:	4a e7       	ldi	r20, 0x7A	; 122
     cfe:	55 e4       	ldi	r21, 0x45	; 69
     d00:	69 89       	ldd	r22, Y+17	; 0x11
     d02:	7a 89       	ldd	r23, Y+18	; 0x12
     d04:	8b 89       	ldd	r24, Y+19	; 0x13
     d06:	9c 89       	ldd	r25, Y+20	; 0x14
     d08:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
     d0c:	dc 01       	movw	r26, r24
     d0e:	cb 01       	movw	r24, r22
     d10:	f8 01       	movw	r30, r16
     d12:	80 83       	st	Z, r24
     d14:	91 83       	std	Z+1, r25	; 0x01
     d16:	a2 83       	std	Z+2, r26	; 0x02
     d18:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d1a:	ce 01       	movw	r24, r28
     d1c:	8f 56       	subi	r24, 0x6F	; 111
     d1e:	9d 4f       	sbci	r25, 0xFD	; 253
     d20:	20 e0       	ldi	r18, 0x00	; 0
     d22:	30 e0       	ldi	r19, 0x00	; 0
     d24:	40 e8       	ldi	r20, 0x80	; 128
     d26:	5f e3       	ldi	r21, 0x3F	; 63
     d28:	fc 01       	movw	r30, r24
     d2a:	60 81       	ld	r22, Z
     d2c:	71 81       	ldd	r23, Z+1	; 0x01
     d2e:	82 81       	ldd	r24, Z+2	; 0x02
     d30:	93 81       	ldd	r25, Z+3	; 0x03
     d32:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
     d36:	88 23       	and	r24, r24
     d38:	4c f4       	brge	.+18     	; 0xd4c <main+0x280>
		__ticks = 1;
     d3a:	ce 01       	movw	r24, r28
     d3c:	8b 56       	subi	r24, 0x6B	; 107
     d3e:	9d 4f       	sbci	r25, 0xFD	; 253
     d40:	21 e0       	ldi	r18, 0x01	; 1
     d42:	30 e0       	ldi	r19, 0x00	; 0
     d44:	fc 01       	movw	r30, r24
     d46:	31 83       	std	Z+1, r19	; 0x01
     d48:	20 83       	st	Z, r18
     d4a:	69 c0       	rjmp	.+210    	; 0xe1e <main+0x352>
	else if (__tmp > 65535)
     d4c:	ce 01       	movw	r24, r28
     d4e:	8f 56       	subi	r24, 0x6F	; 111
     d50:	9d 4f       	sbci	r25, 0xFD	; 253
     d52:	20 e0       	ldi	r18, 0x00	; 0
     d54:	3f ef       	ldi	r19, 0xFF	; 255
     d56:	4f e7       	ldi	r20, 0x7F	; 127
     d58:	57 e4       	ldi	r21, 0x47	; 71
     d5a:	fc 01       	movw	r30, r24
     d5c:	60 81       	ld	r22, Z
     d5e:	71 81       	ldd	r23, Z+1	; 0x01
     d60:	82 81       	ldd	r24, Z+2	; 0x02
     d62:	93 81       	ldd	r25, Z+3	; 0x03
     d64:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
     d68:	18 16       	cp	r1, r24
     d6a:	0c f0       	brlt	.+2      	; 0xd6e <main+0x2a2>
     d6c:	46 c0       	rjmp	.+140    	; 0xdfa <main+0x32e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d6e:	20 e0       	ldi	r18, 0x00	; 0
     d70:	30 e0       	ldi	r19, 0x00	; 0
     d72:	40 e2       	ldi	r20, 0x20	; 32
     d74:	51 e4       	ldi	r21, 0x41	; 65
     d76:	69 89       	ldd	r22, Y+17	; 0x11
     d78:	7a 89       	ldd	r23, Y+18	; 0x12
     d7a:	8b 89       	ldd	r24, Y+19	; 0x13
     d7c:	9c 89       	ldd	r25, Y+20	; 0x14
     d7e:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
     d82:	dc 01       	movw	r26, r24
     d84:	cb 01       	movw	r24, r22
     d86:	8e 01       	movw	r16, r28
     d88:	0b 56       	subi	r16, 0x6B	; 107
     d8a:	1d 4f       	sbci	r17, 0xFD	; 253
     d8c:	bc 01       	movw	r22, r24
     d8e:	cd 01       	movw	r24, r26
     d90:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
     d94:	dc 01       	movw	r26, r24
     d96:	cb 01       	movw	r24, r22
     d98:	f8 01       	movw	r30, r16
     d9a:	91 83       	std	Z+1, r25	; 0x01
     d9c:	80 83       	st	Z, r24
     d9e:	24 c0       	rjmp	.+72     	; 0xde8 <main+0x31c>
     da0:	ce 01       	movw	r24, r28
     da2:	89 56       	subi	r24, 0x69	; 105
     da4:	9d 4f       	sbci	r25, 0xFD	; 253
     da6:	20 e9       	ldi	r18, 0x90	; 144
     da8:	31 e0       	ldi	r19, 0x01	; 1
     daa:	fc 01       	movw	r30, r24
     dac:	31 83       	std	Z+1, r19	; 0x01
     dae:	20 83       	st	Z, r18
     db0:	ce 01       	movw	r24, r28
     db2:	89 56       	subi	r24, 0x69	; 105
     db4:	9d 4f       	sbci	r25, 0xFD	; 253
     db6:	fc 01       	movw	r30, r24
     db8:	80 81       	ld	r24, Z
     dba:	91 81       	ldd	r25, Z+1	; 0x01
     dbc:	01 97       	sbiw	r24, 0x01	; 1
     dbe:	f1 f7       	brne	.-4      	; 0xdbc <main+0x2f0>
     dc0:	9e 01       	movw	r18, r28
     dc2:	29 56       	subi	r18, 0x69	; 105
     dc4:	3d 4f       	sbci	r19, 0xFD	; 253
     dc6:	f9 01       	movw	r30, r18
     dc8:	91 83       	std	Z+1, r25	; 0x01
     dca:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     dcc:	ce 01       	movw	r24, r28
     dce:	8b 56       	subi	r24, 0x6B	; 107
     dd0:	9d 4f       	sbci	r25, 0xFD	; 253
     dd2:	9e 01       	movw	r18, r28
     dd4:	2b 56       	subi	r18, 0x6B	; 107
     dd6:	3d 4f       	sbci	r19, 0xFD	; 253
     dd8:	f9 01       	movw	r30, r18
     dda:	20 81       	ld	r18, Z
     ddc:	31 81       	ldd	r19, Z+1	; 0x01
     dde:	21 50       	subi	r18, 0x01	; 1
     de0:	31 09       	sbc	r19, r1
     de2:	fc 01       	movw	r30, r24
     de4:	31 83       	std	Z+1, r19	; 0x01
     de6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     de8:	ce 01       	movw	r24, r28
     dea:	8b 56       	subi	r24, 0x6B	; 107
     dec:	9d 4f       	sbci	r25, 0xFD	; 253
     dee:	fc 01       	movw	r30, r24
     df0:	80 81       	ld	r24, Z
     df2:	91 81       	ldd	r25, Z+1	; 0x01
     df4:	89 2b       	or	r24, r25
     df6:	a1 f6       	brne	.-88     	; 0xda0 <main+0x2d4>
     df8:	2c c0       	rjmp	.+88     	; 0xe52 <main+0x386>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     dfa:	8e 01       	movw	r16, r28
     dfc:	0b 56       	subi	r16, 0x6B	; 107
     dfe:	1d 4f       	sbci	r17, 0xFD	; 253
     e00:	ce 01       	movw	r24, r28
     e02:	8f 56       	subi	r24, 0x6F	; 111
     e04:	9d 4f       	sbci	r25, 0xFD	; 253
     e06:	fc 01       	movw	r30, r24
     e08:	60 81       	ld	r22, Z
     e0a:	71 81       	ldd	r23, Z+1	; 0x01
     e0c:	82 81       	ldd	r24, Z+2	; 0x02
     e0e:	93 81       	ldd	r25, Z+3	; 0x03
     e10:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
     e14:	dc 01       	movw	r26, r24
     e16:	cb 01       	movw	r24, r22
     e18:	f8 01       	movw	r30, r16
     e1a:	91 83       	std	Z+1, r25	; 0x01
     e1c:	80 83       	st	Z, r24
     e1e:	ce 01       	movw	r24, r28
     e20:	87 56       	subi	r24, 0x67	; 103
     e22:	9d 4f       	sbci	r25, 0xFD	; 253
     e24:	9e 01       	movw	r18, r28
     e26:	2b 56       	subi	r18, 0x6B	; 107
     e28:	3d 4f       	sbci	r19, 0xFD	; 253
     e2a:	f9 01       	movw	r30, r18
     e2c:	20 81       	ld	r18, Z
     e2e:	31 81       	ldd	r19, Z+1	; 0x01
     e30:	fc 01       	movw	r30, r24
     e32:	31 83       	std	Z+1, r19	; 0x01
     e34:	20 83       	st	Z, r18
     e36:	ce 01       	movw	r24, r28
     e38:	87 56       	subi	r24, 0x67	; 103
     e3a:	9d 4f       	sbci	r25, 0xFD	; 253
     e3c:	fc 01       	movw	r30, r24
     e3e:	80 81       	ld	r24, Z
     e40:	91 81       	ldd	r25, Z+1	; 0x01
     e42:	01 97       	sbiw	r24, 0x01	; 1
     e44:	f1 f7       	brne	.-4      	; 0xe42 <main+0x376>
     e46:	9e 01       	movw	r18, r28
     e48:	27 56       	subi	r18, 0x67	; 103
     e4a:	3d 4f       	sbci	r19, 0xFD	; 253
     e4c:	f9 01       	movw	r30, r18
     e4e:	91 83       	std	Z+1, r25	; 0x01
     e50:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F660 T100\n");
     e52:	83 e9       	ldi	r24, 0x93	; 147
     e54:	91 e0       	ldi	r25, 0x01	; 1
     e56:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
     e5a:	80 e0       	ldi	r24, 0x00	; 0
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	a6 e9       	ldi	r26, 0x96	; 150
     e60:	b3 e4       	ldi	r27, 0x43	; 67
     e62:	8d 8b       	std	Y+21, r24	; 0x15
     e64:	9e 8b       	std	Y+22, r25	; 0x16
     e66:	af 8b       	std	Y+23, r26	; 0x17
     e68:	b8 8f       	std	Y+24, r27	; 0x18

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     e6a:	8e 01       	movw	r16, r28
     e6c:	09 57       	subi	r16, 0x79	; 121
     e6e:	1d 4f       	sbci	r17, 0xFD	; 253
     e70:	20 e0       	ldi	r18, 0x00	; 0
     e72:	30 e0       	ldi	r19, 0x00	; 0
     e74:	4a e7       	ldi	r20, 0x7A	; 122
     e76:	55 e4       	ldi	r21, 0x45	; 69
     e78:	6d 89       	ldd	r22, Y+21	; 0x15
     e7a:	7e 89       	ldd	r23, Y+22	; 0x16
     e7c:	8f 89       	ldd	r24, Y+23	; 0x17
     e7e:	98 8d       	ldd	r25, Y+24	; 0x18
     e80:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
     e84:	dc 01       	movw	r26, r24
     e86:	cb 01       	movw	r24, r22
     e88:	f8 01       	movw	r30, r16
     e8a:	80 83       	st	Z, r24
     e8c:	91 83       	std	Z+1, r25	; 0x01
     e8e:	a2 83       	std	Z+2, r26	; 0x02
     e90:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     e92:	ce 01       	movw	r24, r28
     e94:	89 57       	subi	r24, 0x79	; 121
     e96:	9d 4f       	sbci	r25, 0xFD	; 253
     e98:	20 e0       	ldi	r18, 0x00	; 0
     e9a:	30 e0       	ldi	r19, 0x00	; 0
     e9c:	40 e8       	ldi	r20, 0x80	; 128
     e9e:	5f e3       	ldi	r21, 0x3F	; 63
     ea0:	fc 01       	movw	r30, r24
     ea2:	60 81       	ld	r22, Z
     ea4:	71 81       	ldd	r23, Z+1	; 0x01
     ea6:	82 81       	ldd	r24, Z+2	; 0x02
     ea8:	93 81       	ldd	r25, Z+3	; 0x03
     eaa:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
     eae:	88 23       	and	r24, r24
     eb0:	4c f4       	brge	.+18     	; 0xec4 <main+0x3f8>
		__ticks = 1;
     eb2:	ce 01       	movw	r24, r28
     eb4:	85 57       	subi	r24, 0x75	; 117
     eb6:	9d 4f       	sbci	r25, 0xFD	; 253
     eb8:	21 e0       	ldi	r18, 0x01	; 1
     eba:	30 e0       	ldi	r19, 0x00	; 0
     ebc:	fc 01       	movw	r30, r24
     ebe:	31 83       	std	Z+1, r19	; 0x01
     ec0:	20 83       	st	Z, r18
     ec2:	69 c0       	rjmp	.+210    	; 0xf96 <main+0x4ca>
	else if (__tmp > 65535)
     ec4:	ce 01       	movw	r24, r28
     ec6:	89 57       	subi	r24, 0x79	; 121
     ec8:	9d 4f       	sbci	r25, 0xFD	; 253
     eca:	20 e0       	ldi	r18, 0x00	; 0
     ecc:	3f ef       	ldi	r19, 0xFF	; 255
     ece:	4f e7       	ldi	r20, 0x7F	; 127
     ed0:	57 e4       	ldi	r21, 0x47	; 71
     ed2:	fc 01       	movw	r30, r24
     ed4:	60 81       	ld	r22, Z
     ed6:	71 81       	ldd	r23, Z+1	; 0x01
     ed8:	82 81       	ldd	r24, Z+2	; 0x02
     eda:	93 81       	ldd	r25, Z+3	; 0x03
     edc:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
     ee0:	18 16       	cp	r1, r24
     ee2:	0c f0       	brlt	.+2      	; 0xee6 <main+0x41a>
     ee4:	46 c0       	rjmp	.+140    	; 0xf72 <main+0x4a6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ee6:	20 e0       	ldi	r18, 0x00	; 0
     ee8:	30 e0       	ldi	r19, 0x00	; 0
     eea:	40 e2       	ldi	r20, 0x20	; 32
     eec:	51 e4       	ldi	r21, 0x41	; 65
     eee:	6d 89       	ldd	r22, Y+21	; 0x15
     ef0:	7e 89       	ldd	r23, Y+22	; 0x16
     ef2:	8f 89       	ldd	r24, Y+23	; 0x17
     ef4:	98 8d       	ldd	r25, Y+24	; 0x18
     ef6:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
     efa:	dc 01       	movw	r26, r24
     efc:	cb 01       	movw	r24, r22
     efe:	8e 01       	movw	r16, r28
     f00:	05 57       	subi	r16, 0x75	; 117
     f02:	1d 4f       	sbci	r17, 0xFD	; 253
     f04:	bc 01       	movw	r22, r24
     f06:	cd 01       	movw	r24, r26
     f08:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
     f0c:	dc 01       	movw	r26, r24
     f0e:	cb 01       	movw	r24, r22
     f10:	f8 01       	movw	r30, r16
     f12:	91 83       	std	Z+1, r25	; 0x01
     f14:	80 83       	st	Z, r24
     f16:	24 c0       	rjmp	.+72     	; 0xf60 <main+0x494>
     f18:	ce 01       	movw	r24, r28
     f1a:	83 57       	subi	r24, 0x73	; 115
     f1c:	9d 4f       	sbci	r25, 0xFD	; 253
     f1e:	20 e9       	ldi	r18, 0x90	; 144
     f20:	31 e0       	ldi	r19, 0x01	; 1
     f22:	fc 01       	movw	r30, r24
     f24:	31 83       	std	Z+1, r19	; 0x01
     f26:	20 83       	st	Z, r18
     f28:	ce 01       	movw	r24, r28
     f2a:	83 57       	subi	r24, 0x73	; 115
     f2c:	9d 4f       	sbci	r25, 0xFD	; 253
     f2e:	fc 01       	movw	r30, r24
     f30:	80 81       	ld	r24, Z
     f32:	91 81       	ldd	r25, Z+1	; 0x01
     f34:	01 97       	sbiw	r24, 0x01	; 1
     f36:	f1 f7       	brne	.-4      	; 0xf34 <main+0x468>
     f38:	9e 01       	movw	r18, r28
     f3a:	23 57       	subi	r18, 0x73	; 115
     f3c:	3d 4f       	sbci	r19, 0xFD	; 253
     f3e:	f9 01       	movw	r30, r18
     f40:	91 83       	std	Z+1, r25	; 0x01
     f42:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f44:	ce 01       	movw	r24, r28
     f46:	85 57       	subi	r24, 0x75	; 117
     f48:	9d 4f       	sbci	r25, 0xFD	; 253
     f4a:	9e 01       	movw	r18, r28
     f4c:	25 57       	subi	r18, 0x75	; 117
     f4e:	3d 4f       	sbci	r19, 0xFD	; 253
     f50:	f9 01       	movw	r30, r18
     f52:	20 81       	ld	r18, Z
     f54:	31 81       	ldd	r19, Z+1	; 0x01
     f56:	21 50       	subi	r18, 0x01	; 1
     f58:	31 09       	sbc	r19, r1
     f5a:	fc 01       	movw	r30, r24
     f5c:	31 83       	std	Z+1, r19	; 0x01
     f5e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f60:	ce 01       	movw	r24, r28
     f62:	85 57       	subi	r24, 0x75	; 117
     f64:	9d 4f       	sbci	r25, 0xFD	; 253
     f66:	fc 01       	movw	r30, r24
     f68:	80 81       	ld	r24, Z
     f6a:	91 81       	ldd	r25, Z+1	; 0x01
     f6c:	89 2b       	or	r24, r25
     f6e:	a1 f6       	brne	.-88     	; 0xf18 <main+0x44c>
     f70:	2c c0       	rjmp	.+88     	; 0xfca <main+0x4fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f72:	8e 01       	movw	r16, r28
     f74:	05 57       	subi	r16, 0x75	; 117
     f76:	1d 4f       	sbci	r17, 0xFD	; 253
     f78:	ce 01       	movw	r24, r28
     f7a:	89 57       	subi	r24, 0x79	; 121
     f7c:	9d 4f       	sbci	r25, 0xFD	; 253
     f7e:	fc 01       	movw	r30, r24
     f80:	60 81       	ld	r22, Z
     f82:	71 81       	ldd	r23, Z+1	; 0x01
     f84:	82 81       	ldd	r24, Z+2	; 0x02
     f86:	93 81       	ldd	r25, Z+3	; 0x03
     f88:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
     f8c:	dc 01       	movw	r26, r24
     f8e:	cb 01       	movw	r24, r22
     f90:	f8 01       	movw	r30, r16
     f92:	91 83       	std	Z+1, r25	; 0x01
     f94:	80 83       	st	Z, r24
     f96:	ce 01       	movw	r24, r28
     f98:	81 57       	subi	r24, 0x71	; 113
     f9a:	9d 4f       	sbci	r25, 0xFD	; 253
     f9c:	9e 01       	movw	r18, r28
     f9e:	25 57       	subi	r18, 0x75	; 117
     fa0:	3d 4f       	sbci	r19, 0xFD	; 253
     fa2:	f9 01       	movw	r30, r18
     fa4:	20 81       	ld	r18, Z
     fa6:	31 81       	ldd	r19, Z+1	; 0x01
     fa8:	fc 01       	movw	r30, r24
     faa:	31 83       	std	Z+1, r19	; 0x01
     fac:	20 83       	st	Z, r18
     fae:	ce 01       	movw	r24, r28
     fb0:	81 57       	subi	r24, 0x71	; 113
     fb2:	9d 4f       	sbci	r25, 0xFD	; 253
     fb4:	fc 01       	movw	r30, r24
     fb6:	80 81       	ld	r24, Z
     fb8:	91 81       	ldd	r25, Z+1	; 0x01
     fba:	01 97       	sbiw	r24, 0x01	; 1
     fbc:	f1 f7       	brne	.-4      	; 0xfba <main+0x4ee>
     fbe:	9e 01       	movw	r18, r28
     fc0:	21 57       	subi	r18, 0x71	; 113
     fc2:	3d 4f       	sbci	r19, 0xFD	; 253
     fc4:	f9 01       	movw	r30, r18
     fc6:	91 83       	std	Z+1, r25	; 0x01
     fc8:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F510 T100\n");
     fca:	84 ea       	ldi	r24, 0xA4	; 164
     fcc:	91 e0       	ldi	r25, 0x01	; 1
     fce:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
     fd2:	80 e0       	ldi	r24, 0x00	; 0
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	a8 ec       	ldi	r26, 0xC8	; 200
     fd8:	b2 e4       	ldi	r27, 0x42	; 66
     fda:	89 8f       	std	Y+25, r24	; 0x19
     fdc:	9a 8f       	std	Y+26, r25	; 0x1a
     fde:	ab 8f       	std	Y+27, r26	; 0x1b
     fe0:	bc 8f       	std	Y+28, r27	; 0x1c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     fe2:	8e 01       	movw	r16, r28
     fe4:	03 58       	subi	r16, 0x83	; 131
     fe6:	1d 4f       	sbci	r17, 0xFD	; 253
     fe8:	20 e0       	ldi	r18, 0x00	; 0
     fea:	30 e0       	ldi	r19, 0x00	; 0
     fec:	4a e7       	ldi	r20, 0x7A	; 122
     fee:	55 e4       	ldi	r21, 0x45	; 69
     ff0:	69 8d       	ldd	r22, Y+25	; 0x19
     ff2:	7a 8d       	ldd	r23, Y+26	; 0x1a
     ff4:	8b 8d       	ldd	r24, Y+27	; 0x1b
     ff6:	9c 8d       	ldd	r25, Y+28	; 0x1c
     ff8:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
     ffc:	dc 01       	movw	r26, r24
     ffe:	cb 01       	movw	r24, r22
    1000:	f8 01       	movw	r30, r16
    1002:	80 83       	st	Z, r24
    1004:	91 83       	std	Z+1, r25	; 0x01
    1006:	a2 83       	std	Z+2, r26	; 0x02
    1008:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    100a:	ce 01       	movw	r24, r28
    100c:	83 58       	subi	r24, 0x83	; 131
    100e:	9d 4f       	sbci	r25, 0xFD	; 253
    1010:	20 e0       	ldi	r18, 0x00	; 0
    1012:	30 e0       	ldi	r19, 0x00	; 0
    1014:	40 e8       	ldi	r20, 0x80	; 128
    1016:	5f e3       	ldi	r21, 0x3F	; 63
    1018:	fc 01       	movw	r30, r24
    101a:	60 81       	ld	r22, Z
    101c:	71 81       	ldd	r23, Z+1	; 0x01
    101e:	82 81       	ldd	r24, Z+2	; 0x02
    1020:	93 81       	ldd	r25, Z+3	; 0x03
    1022:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    1026:	88 23       	and	r24, r24
    1028:	4c f4       	brge	.+18     	; 0x103c <main+0x570>
		__ticks = 1;
    102a:	ce 01       	movw	r24, r28
    102c:	8f 57       	subi	r24, 0x7F	; 127
    102e:	9d 4f       	sbci	r25, 0xFD	; 253
    1030:	21 e0       	ldi	r18, 0x01	; 1
    1032:	30 e0       	ldi	r19, 0x00	; 0
    1034:	fc 01       	movw	r30, r24
    1036:	31 83       	std	Z+1, r19	; 0x01
    1038:	20 83       	st	Z, r18
    103a:	69 c0       	rjmp	.+210    	; 0x110e <__stack+0xf>
	else if (__tmp > 65535)
    103c:	ce 01       	movw	r24, r28
    103e:	83 58       	subi	r24, 0x83	; 131
    1040:	9d 4f       	sbci	r25, 0xFD	; 253
    1042:	20 e0       	ldi	r18, 0x00	; 0
    1044:	3f ef       	ldi	r19, 0xFF	; 255
    1046:	4f e7       	ldi	r20, 0x7F	; 127
    1048:	57 e4       	ldi	r21, 0x47	; 71
    104a:	fc 01       	movw	r30, r24
    104c:	60 81       	ld	r22, Z
    104e:	71 81       	ldd	r23, Z+1	; 0x01
    1050:	82 81       	ldd	r24, Z+2	; 0x02
    1052:	93 81       	ldd	r25, Z+3	; 0x03
    1054:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    1058:	18 16       	cp	r1, r24
    105a:	0c f0       	brlt	.+2      	; 0x105e <main+0x592>
    105c:	46 c0       	rjmp	.+140    	; 0x10ea <main+0x61e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    105e:	20 e0       	ldi	r18, 0x00	; 0
    1060:	30 e0       	ldi	r19, 0x00	; 0
    1062:	40 e2       	ldi	r20, 0x20	; 32
    1064:	51 e4       	ldi	r21, 0x41	; 65
    1066:	69 8d       	ldd	r22, Y+25	; 0x19
    1068:	7a 8d       	ldd	r23, Y+26	; 0x1a
    106a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    106c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    106e:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    1072:	dc 01       	movw	r26, r24
    1074:	cb 01       	movw	r24, r22
    1076:	8e 01       	movw	r16, r28
    1078:	0f 57       	subi	r16, 0x7F	; 127
    107a:	1d 4f       	sbci	r17, 0xFD	; 253
    107c:	bc 01       	movw	r22, r24
    107e:	cd 01       	movw	r24, r26
    1080:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    1084:	dc 01       	movw	r26, r24
    1086:	cb 01       	movw	r24, r22
    1088:	f8 01       	movw	r30, r16
    108a:	91 83       	std	Z+1, r25	; 0x01
    108c:	80 83       	st	Z, r24
    108e:	24 c0       	rjmp	.+72     	; 0x10d8 <main+0x60c>
    1090:	ce 01       	movw	r24, r28
    1092:	8d 57       	subi	r24, 0x7D	; 125
    1094:	9d 4f       	sbci	r25, 0xFD	; 253
    1096:	20 e9       	ldi	r18, 0x90	; 144
    1098:	31 e0       	ldi	r19, 0x01	; 1
    109a:	fc 01       	movw	r30, r24
    109c:	31 83       	std	Z+1, r19	; 0x01
    109e:	20 83       	st	Z, r18
    10a0:	ce 01       	movw	r24, r28
    10a2:	8d 57       	subi	r24, 0x7D	; 125
    10a4:	9d 4f       	sbci	r25, 0xFD	; 253
    10a6:	fc 01       	movw	r30, r24
    10a8:	80 81       	ld	r24, Z
    10aa:	91 81       	ldd	r25, Z+1	; 0x01
    10ac:	01 97       	sbiw	r24, 0x01	; 1
    10ae:	f1 f7       	brne	.-4      	; 0x10ac <main+0x5e0>
    10b0:	9e 01       	movw	r18, r28
    10b2:	2d 57       	subi	r18, 0x7D	; 125
    10b4:	3d 4f       	sbci	r19, 0xFD	; 253
    10b6:	f9 01       	movw	r30, r18
    10b8:	91 83       	std	Z+1, r25	; 0x01
    10ba:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10bc:	ce 01       	movw	r24, r28
    10be:	8f 57       	subi	r24, 0x7F	; 127
    10c0:	9d 4f       	sbci	r25, 0xFD	; 253
    10c2:	9e 01       	movw	r18, r28
    10c4:	2f 57       	subi	r18, 0x7F	; 127
    10c6:	3d 4f       	sbci	r19, 0xFD	; 253
    10c8:	f9 01       	movw	r30, r18
    10ca:	20 81       	ld	r18, Z
    10cc:	31 81       	ldd	r19, Z+1	; 0x01
    10ce:	21 50       	subi	r18, 0x01	; 1
    10d0:	31 09       	sbc	r19, r1
    10d2:	fc 01       	movw	r30, r24
    10d4:	31 83       	std	Z+1, r19	; 0x01
    10d6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10d8:	ce 01       	movw	r24, r28
    10da:	8f 57       	subi	r24, 0x7F	; 127
    10dc:	9d 4f       	sbci	r25, 0xFD	; 253
    10de:	fc 01       	movw	r30, r24
    10e0:	80 81       	ld	r24, Z
    10e2:	91 81       	ldd	r25, Z+1	; 0x01
    10e4:	89 2b       	or	r24, r25
    10e6:	a1 f6       	brne	.-88     	; 0x1090 <main+0x5c4>
    10e8:	2c c0       	rjmp	.+88     	; 0x1142 <__stack+0x43>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10ea:	8e 01       	movw	r16, r28
    10ec:	0f 57       	subi	r16, 0x7F	; 127
    10ee:	1d 4f       	sbci	r17, 0xFD	; 253
    10f0:	ce 01       	movw	r24, r28
    10f2:	83 58       	subi	r24, 0x83	; 131
    10f4:	9d 4f       	sbci	r25, 0xFD	; 253
    10f6:	fc 01       	movw	r30, r24
    10f8:	60 81       	ld	r22, Z
    10fa:	71 81       	ldd	r23, Z+1	; 0x01
    10fc:	82 81       	ldd	r24, Z+2	; 0x02
    10fe:	93 81       	ldd	r25, Z+3	; 0x03
    1100:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    1104:	dc 01       	movw	r26, r24
    1106:	cb 01       	movw	r24, r22
    1108:	f8 01       	movw	r30, r16
    110a:	91 83       	std	Z+1, r25	; 0x01
    110c:	80 83       	st	Z, r24
    110e:	ce 01       	movw	r24, r28
    1110:	8b 57       	subi	r24, 0x7B	; 123
    1112:	9d 4f       	sbci	r25, 0xFD	; 253
    1114:	9e 01       	movw	r18, r28
    1116:	2f 57       	subi	r18, 0x7F	; 127
    1118:	3d 4f       	sbci	r19, 0xFD	; 253
    111a:	f9 01       	movw	r30, r18
    111c:	20 81       	ld	r18, Z
    111e:	31 81       	ldd	r19, Z+1	; 0x01
    1120:	fc 01       	movw	r30, r24
    1122:	31 83       	std	Z+1, r19	; 0x01
    1124:	20 83       	st	Z, r18
    1126:	ce 01       	movw	r24, r28
    1128:	8b 57       	subi	r24, 0x7B	; 123
    112a:	9d 4f       	sbci	r25, 0xFD	; 253
    112c:	fc 01       	movw	r30, r24
    112e:	80 81       	ld	r24, Z
    1130:	91 81       	ldd	r25, Z+1	; 0x01
    1132:	01 97       	sbiw	r24, 0x01	; 1
    1134:	f1 f7       	brne	.-4      	; 0x1132 <__stack+0x33>
    1136:	9e 01       	movw	r18, r28
    1138:	2b 57       	subi	r18, 0x7B	; 123
    113a:	3d 4f       	sbci	r19, 0xFD	; 253
    113c:	f9 01       	movw	r30, r18
    113e:	91 83       	std	Z+1, r25	; 0x01
    1140:	80 83       	st	Z, r24
			_delay_ms(100);
			to_uARM("M2210 F660 T100\n");
    1142:	83 e9       	ldi	r24, 0x93	; 147
    1144:	91 e0       	ldi	r25, 0x01	; 1
    1146:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    114a:	80 e0       	ldi	r24, 0x00	; 0
    114c:	90 e0       	ldi	r25, 0x00	; 0
    114e:	a6 e9       	ldi	r26, 0x96	; 150
    1150:	b3 e4       	ldi	r27, 0x43	; 67
    1152:	8d 8f       	std	Y+29, r24	; 0x1d
    1154:	9e 8f       	std	Y+30, r25	; 0x1e
    1156:	af 8f       	std	Y+31, r26	; 0x1f
    1158:	b8 a3       	std	Y+32, r27	; 0x20

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    115a:	8e 01       	movw	r16, r28
    115c:	0d 58       	subi	r16, 0x8D	; 141
    115e:	1d 4f       	sbci	r17, 0xFD	; 253
    1160:	20 e0       	ldi	r18, 0x00	; 0
    1162:	30 e0       	ldi	r19, 0x00	; 0
    1164:	4a e7       	ldi	r20, 0x7A	; 122
    1166:	55 e4       	ldi	r21, 0x45	; 69
    1168:	6d 8d       	ldd	r22, Y+29	; 0x1d
    116a:	7e 8d       	ldd	r23, Y+30	; 0x1e
    116c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    116e:	98 a1       	ldd	r25, Y+32	; 0x20
    1170:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    1174:	dc 01       	movw	r26, r24
    1176:	cb 01       	movw	r24, r22
    1178:	f8 01       	movw	r30, r16
    117a:	80 83       	st	Z, r24
    117c:	91 83       	std	Z+1, r25	; 0x01
    117e:	a2 83       	std	Z+2, r26	; 0x02
    1180:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1182:	ce 01       	movw	r24, r28
    1184:	8d 58       	subi	r24, 0x8D	; 141
    1186:	9d 4f       	sbci	r25, 0xFD	; 253
    1188:	20 e0       	ldi	r18, 0x00	; 0
    118a:	30 e0       	ldi	r19, 0x00	; 0
    118c:	40 e8       	ldi	r20, 0x80	; 128
    118e:	5f e3       	ldi	r21, 0x3F	; 63
    1190:	fc 01       	movw	r30, r24
    1192:	60 81       	ld	r22, Z
    1194:	71 81       	ldd	r23, Z+1	; 0x01
    1196:	82 81       	ldd	r24, Z+2	; 0x02
    1198:	93 81       	ldd	r25, Z+3	; 0x03
    119a:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    119e:	88 23       	and	r24, r24
    11a0:	4c f4       	brge	.+18     	; 0x11b4 <__stack+0xb5>
		__ticks = 1;
    11a2:	ce 01       	movw	r24, r28
    11a4:	89 58       	subi	r24, 0x89	; 137
    11a6:	9d 4f       	sbci	r25, 0xFD	; 253
    11a8:	21 e0       	ldi	r18, 0x01	; 1
    11aa:	30 e0       	ldi	r19, 0x00	; 0
    11ac:	fc 01       	movw	r30, r24
    11ae:	31 83       	std	Z+1, r19	; 0x01
    11b0:	20 83       	st	Z, r18
    11b2:	69 c0       	rjmp	.+210    	; 0x1286 <__stack+0x187>
	else if (__tmp > 65535)
    11b4:	ce 01       	movw	r24, r28
    11b6:	8d 58       	subi	r24, 0x8D	; 141
    11b8:	9d 4f       	sbci	r25, 0xFD	; 253
    11ba:	20 e0       	ldi	r18, 0x00	; 0
    11bc:	3f ef       	ldi	r19, 0xFF	; 255
    11be:	4f e7       	ldi	r20, 0x7F	; 127
    11c0:	57 e4       	ldi	r21, 0x47	; 71
    11c2:	fc 01       	movw	r30, r24
    11c4:	60 81       	ld	r22, Z
    11c6:	71 81       	ldd	r23, Z+1	; 0x01
    11c8:	82 81       	ldd	r24, Z+2	; 0x02
    11ca:	93 81       	ldd	r25, Z+3	; 0x03
    11cc:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    11d0:	18 16       	cp	r1, r24
    11d2:	0c f0       	brlt	.+2      	; 0x11d6 <__stack+0xd7>
    11d4:	46 c0       	rjmp	.+140    	; 0x1262 <__stack+0x163>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11d6:	20 e0       	ldi	r18, 0x00	; 0
    11d8:	30 e0       	ldi	r19, 0x00	; 0
    11da:	40 e2       	ldi	r20, 0x20	; 32
    11dc:	51 e4       	ldi	r21, 0x41	; 65
    11de:	6d 8d       	ldd	r22, Y+29	; 0x1d
    11e0:	7e 8d       	ldd	r23, Y+30	; 0x1e
    11e2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    11e4:	98 a1       	ldd	r25, Y+32	; 0x20
    11e6:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    11ea:	dc 01       	movw	r26, r24
    11ec:	cb 01       	movw	r24, r22
    11ee:	8e 01       	movw	r16, r28
    11f0:	09 58       	subi	r16, 0x89	; 137
    11f2:	1d 4f       	sbci	r17, 0xFD	; 253
    11f4:	bc 01       	movw	r22, r24
    11f6:	cd 01       	movw	r24, r26
    11f8:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    11fc:	dc 01       	movw	r26, r24
    11fe:	cb 01       	movw	r24, r22
    1200:	f8 01       	movw	r30, r16
    1202:	91 83       	std	Z+1, r25	; 0x01
    1204:	80 83       	st	Z, r24
    1206:	24 c0       	rjmp	.+72     	; 0x1250 <__stack+0x151>
    1208:	ce 01       	movw	r24, r28
    120a:	87 58       	subi	r24, 0x87	; 135
    120c:	9d 4f       	sbci	r25, 0xFD	; 253
    120e:	20 e9       	ldi	r18, 0x90	; 144
    1210:	31 e0       	ldi	r19, 0x01	; 1
    1212:	fc 01       	movw	r30, r24
    1214:	31 83       	std	Z+1, r19	; 0x01
    1216:	20 83       	st	Z, r18
    1218:	ce 01       	movw	r24, r28
    121a:	87 58       	subi	r24, 0x87	; 135
    121c:	9d 4f       	sbci	r25, 0xFD	; 253
    121e:	fc 01       	movw	r30, r24
    1220:	80 81       	ld	r24, Z
    1222:	91 81       	ldd	r25, Z+1	; 0x01
    1224:	01 97       	sbiw	r24, 0x01	; 1
    1226:	f1 f7       	brne	.-4      	; 0x1224 <__stack+0x125>
    1228:	9e 01       	movw	r18, r28
    122a:	27 58       	subi	r18, 0x87	; 135
    122c:	3d 4f       	sbci	r19, 0xFD	; 253
    122e:	f9 01       	movw	r30, r18
    1230:	91 83       	std	Z+1, r25	; 0x01
    1232:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1234:	ce 01       	movw	r24, r28
    1236:	89 58       	subi	r24, 0x89	; 137
    1238:	9d 4f       	sbci	r25, 0xFD	; 253
    123a:	9e 01       	movw	r18, r28
    123c:	29 58       	subi	r18, 0x89	; 137
    123e:	3d 4f       	sbci	r19, 0xFD	; 253
    1240:	f9 01       	movw	r30, r18
    1242:	20 81       	ld	r18, Z
    1244:	31 81       	ldd	r19, Z+1	; 0x01
    1246:	21 50       	subi	r18, 0x01	; 1
    1248:	31 09       	sbc	r19, r1
    124a:	fc 01       	movw	r30, r24
    124c:	31 83       	std	Z+1, r19	; 0x01
    124e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1250:	ce 01       	movw	r24, r28
    1252:	89 58       	subi	r24, 0x89	; 137
    1254:	9d 4f       	sbci	r25, 0xFD	; 253
    1256:	fc 01       	movw	r30, r24
    1258:	80 81       	ld	r24, Z
    125a:	91 81       	ldd	r25, Z+1	; 0x01
    125c:	89 2b       	or	r24, r25
    125e:	a1 f6       	brne	.-88     	; 0x1208 <__stack+0x109>
    1260:	2c c0       	rjmp	.+88     	; 0x12ba <__stack+0x1bb>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1262:	8e 01       	movw	r16, r28
    1264:	09 58       	subi	r16, 0x89	; 137
    1266:	1d 4f       	sbci	r17, 0xFD	; 253
    1268:	ce 01       	movw	r24, r28
    126a:	8d 58       	subi	r24, 0x8D	; 141
    126c:	9d 4f       	sbci	r25, 0xFD	; 253
    126e:	fc 01       	movw	r30, r24
    1270:	60 81       	ld	r22, Z
    1272:	71 81       	ldd	r23, Z+1	; 0x01
    1274:	82 81       	ldd	r24, Z+2	; 0x02
    1276:	93 81       	ldd	r25, Z+3	; 0x03
    1278:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    127c:	dc 01       	movw	r26, r24
    127e:	cb 01       	movw	r24, r22
    1280:	f8 01       	movw	r30, r16
    1282:	91 83       	std	Z+1, r25	; 0x01
    1284:	80 83       	st	Z, r24
    1286:	ce 01       	movw	r24, r28
    1288:	85 58       	subi	r24, 0x85	; 133
    128a:	9d 4f       	sbci	r25, 0xFD	; 253
    128c:	9e 01       	movw	r18, r28
    128e:	29 58       	subi	r18, 0x89	; 137
    1290:	3d 4f       	sbci	r19, 0xFD	; 253
    1292:	f9 01       	movw	r30, r18
    1294:	20 81       	ld	r18, Z
    1296:	31 81       	ldd	r19, Z+1	; 0x01
    1298:	fc 01       	movw	r30, r24
    129a:	31 83       	std	Z+1, r19	; 0x01
    129c:	20 83       	st	Z, r18
    129e:	ce 01       	movw	r24, r28
    12a0:	85 58       	subi	r24, 0x85	; 133
    12a2:	9d 4f       	sbci	r25, 0xFD	; 253
    12a4:	fc 01       	movw	r30, r24
    12a6:	80 81       	ld	r24, Z
    12a8:	91 81       	ldd	r25, Z+1	; 0x01
    12aa:	01 97       	sbiw	r24, 0x01	; 1
    12ac:	f1 f7       	brne	.-4      	; 0x12aa <__stack+0x1ab>
    12ae:	9e 01       	movw	r18, r28
    12b0:	25 58       	subi	r18, 0x85	; 133
    12b2:	3d 4f       	sbci	r19, 0xFD	; 253
    12b4:	f9 01       	movw	r30, r18
    12b6:	91 83       	std	Z+1, r25	; 0x01
    12b8:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F770 T100\n");
    12ba:	85 eb       	ldi	r24, 0xB5	; 181
    12bc:	91 e0       	ldi	r25, 0x01	; 1
    12be:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    12c2:	80 e0       	ldi	r24, 0x00	; 0
    12c4:	90 e8       	ldi	r25, 0x80	; 128
    12c6:	a9 e0       	ldi	r26, 0x09	; 9
    12c8:	b4 e4       	ldi	r27, 0x44	; 68
    12ca:	89 a3       	std	Y+33, r24	; 0x21
    12cc:	9a a3       	std	Y+34, r25	; 0x22
    12ce:	ab a3       	std	Y+35, r26	; 0x23
    12d0:	bc a3       	std	Y+36, r27	; 0x24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    12d2:	8e 01       	movw	r16, r28
    12d4:	07 59       	subi	r16, 0x97	; 151
    12d6:	1d 4f       	sbci	r17, 0xFD	; 253
    12d8:	20 e0       	ldi	r18, 0x00	; 0
    12da:	30 e0       	ldi	r19, 0x00	; 0
    12dc:	4a e7       	ldi	r20, 0x7A	; 122
    12de:	55 e4       	ldi	r21, 0x45	; 69
    12e0:	69 a1       	ldd	r22, Y+33	; 0x21
    12e2:	7a a1       	ldd	r23, Y+34	; 0x22
    12e4:	8b a1       	ldd	r24, Y+35	; 0x23
    12e6:	9c a1       	ldd	r25, Y+36	; 0x24
    12e8:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    12ec:	dc 01       	movw	r26, r24
    12ee:	cb 01       	movw	r24, r22
    12f0:	f8 01       	movw	r30, r16
    12f2:	80 83       	st	Z, r24
    12f4:	91 83       	std	Z+1, r25	; 0x01
    12f6:	a2 83       	std	Z+2, r26	; 0x02
    12f8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    12fa:	ce 01       	movw	r24, r28
    12fc:	87 59       	subi	r24, 0x97	; 151
    12fe:	9d 4f       	sbci	r25, 0xFD	; 253
    1300:	20 e0       	ldi	r18, 0x00	; 0
    1302:	30 e0       	ldi	r19, 0x00	; 0
    1304:	40 e8       	ldi	r20, 0x80	; 128
    1306:	5f e3       	ldi	r21, 0x3F	; 63
    1308:	fc 01       	movw	r30, r24
    130a:	60 81       	ld	r22, Z
    130c:	71 81       	ldd	r23, Z+1	; 0x01
    130e:	82 81       	ldd	r24, Z+2	; 0x02
    1310:	93 81       	ldd	r25, Z+3	; 0x03
    1312:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    1316:	88 23       	and	r24, r24
    1318:	4c f4       	brge	.+18     	; 0x132c <__stack+0x22d>
		__ticks = 1;
    131a:	ce 01       	movw	r24, r28
    131c:	83 59       	subi	r24, 0x93	; 147
    131e:	9d 4f       	sbci	r25, 0xFD	; 253
    1320:	21 e0       	ldi	r18, 0x01	; 1
    1322:	30 e0       	ldi	r19, 0x00	; 0
    1324:	fc 01       	movw	r30, r24
    1326:	31 83       	std	Z+1, r19	; 0x01
    1328:	20 83       	st	Z, r18
    132a:	69 c0       	rjmp	.+210    	; 0x13fe <__stack+0x2ff>
	else if (__tmp > 65535)
    132c:	ce 01       	movw	r24, r28
    132e:	87 59       	subi	r24, 0x97	; 151
    1330:	9d 4f       	sbci	r25, 0xFD	; 253
    1332:	20 e0       	ldi	r18, 0x00	; 0
    1334:	3f ef       	ldi	r19, 0xFF	; 255
    1336:	4f e7       	ldi	r20, 0x7F	; 127
    1338:	57 e4       	ldi	r21, 0x47	; 71
    133a:	fc 01       	movw	r30, r24
    133c:	60 81       	ld	r22, Z
    133e:	71 81       	ldd	r23, Z+1	; 0x01
    1340:	82 81       	ldd	r24, Z+2	; 0x02
    1342:	93 81       	ldd	r25, Z+3	; 0x03
    1344:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    1348:	18 16       	cp	r1, r24
    134a:	0c f0       	brlt	.+2      	; 0x134e <__stack+0x24f>
    134c:	46 c0       	rjmp	.+140    	; 0x13da <__stack+0x2db>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    134e:	20 e0       	ldi	r18, 0x00	; 0
    1350:	30 e0       	ldi	r19, 0x00	; 0
    1352:	40 e2       	ldi	r20, 0x20	; 32
    1354:	51 e4       	ldi	r21, 0x41	; 65
    1356:	69 a1       	ldd	r22, Y+33	; 0x21
    1358:	7a a1       	ldd	r23, Y+34	; 0x22
    135a:	8b a1       	ldd	r24, Y+35	; 0x23
    135c:	9c a1       	ldd	r25, Y+36	; 0x24
    135e:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    1362:	dc 01       	movw	r26, r24
    1364:	cb 01       	movw	r24, r22
    1366:	8e 01       	movw	r16, r28
    1368:	03 59       	subi	r16, 0x93	; 147
    136a:	1d 4f       	sbci	r17, 0xFD	; 253
    136c:	bc 01       	movw	r22, r24
    136e:	cd 01       	movw	r24, r26
    1370:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    1374:	dc 01       	movw	r26, r24
    1376:	cb 01       	movw	r24, r22
    1378:	f8 01       	movw	r30, r16
    137a:	91 83       	std	Z+1, r25	; 0x01
    137c:	80 83       	st	Z, r24
    137e:	24 c0       	rjmp	.+72     	; 0x13c8 <__stack+0x2c9>
    1380:	ce 01       	movw	r24, r28
    1382:	81 59       	subi	r24, 0x91	; 145
    1384:	9d 4f       	sbci	r25, 0xFD	; 253
    1386:	20 e9       	ldi	r18, 0x90	; 144
    1388:	31 e0       	ldi	r19, 0x01	; 1
    138a:	fc 01       	movw	r30, r24
    138c:	31 83       	std	Z+1, r19	; 0x01
    138e:	20 83       	st	Z, r18
    1390:	ce 01       	movw	r24, r28
    1392:	81 59       	subi	r24, 0x91	; 145
    1394:	9d 4f       	sbci	r25, 0xFD	; 253
    1396:	fc 01       	movw	r30, r24
    1398:	80 81       	ld	r24, Z
    139a:	91 81       	ldd	r25, Z+1	; 0x01
    139c:	01 97       	sbiw	r24, 0x01	; 1
    139e:	f1 f7       	brne	.-4      	; 0x139c <__stack+0x29d>
    13a0:	9e 01       	movw	r18, r28
    13a2:	21 59       	subi	r18, 0x91	; 145
    13a4:	3d 4f       	sbci	r19, 0xFD	; 253
    13a6:	f9 01       	movw	r30, r18
    13a8:	91 83       	std	Z+1, r25	; 0x01
    13aa:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13ac:	ce 01       	movw	r24, r28
    13ae:	83 59       	subi	r24, 0x93	; 147
    13b0:	9d 4f       	sbci	r25, 0xFD	; 253
    13b2:	9e 01       	movw	r18, r28
    13b4:	23 59       	subi	r18, 0x93	; 147
    13b6:	3d 4f       	sbci	r19, 0xFD	; 253
    13b8:	f9 01       	movw	r30, r18
    13ba:	20 81       	ld	r18, Z
    13bc:	31 81       	ldd	r19, Z+1	; 0x01
    13be:	21 50       	subi	r18, 0x01	; 1
    13c0:	31 09       	sbc	r19, r1
    13c2:	fc 01       	movw	r30, r24
    13c4:	31 83       	std	Z+1, r19	; 0x01
    13c6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13c8:	ce 01       	movw	r24, r28
    13ca:	83 59       	subi	r24, 0x93	; 147
    13cc:	9d 4f       	sbci	r25, 0xFD	; 253
    13ce:	fc 01       	movw	r30, r24
    13d0:	80 81       	ld	r24, Z
    13d2:	91 81       	ldd	r25, Z+1	; 0x01
    13d4:	89 2b       	or	r24, r25
    13d6:	a1 f6       	brne	.-88     	; 0x1380 <__stack+0x281>
    13d8:	2c c0       	rjmp	.+88     	; 0x1432 <__stack+0x333>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13da:	8e 01       	movw	r16, r28
    13dc:	03 59       	subi	r16, 0x93	; 147
    13de:	1d 4f       	sbci	r17, 0xFD	; 253
    13e0:	ce 01       	movw	r24, r28
    13e2:	87 59       	subi	r24, 0x97	; 151
    13e4:	9d 4f       	sbci	r25, 0xFD	; 253
    13e6:	fc 01       	movw	r30, r24
    13e8:	60 81       	ld	r22, Z
    13ea:	71 81       	ldd	r23, Z+1	; 0x01
    13ec:	82 81       	ldd	r24, Z+2	; 0x02
    13ee:	93 81       	ldd	r25, Z+3	; 0x03
    13f0:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    13f4:	dc 01       	movw	r26, r24
    13f6:	cb 01       	movw	r24, r22
    13f8:	f8 01       	movw	r30, r16
    13fa:	91 83       	std	Z+1, r25	; 0x01
    13fc:	80 83       	st	Z, r24
    13fe:	ce 01       	movw	r24, r28
    1400:	8f 58       	subi	r24, 0x8F	; 143
    1402:	9d 4f       	sbci	r25, 0xFD	; 253
    1404:	9e 01       	movw	r18, r28
    1406:	23 59       	subi	r18, 0x93	; 147
    1408:	3d 4f       	sbci	r19, 0xFD	; 253
    140a:	f9 01       	movw	r30, r18
    140c:	20 81       	ld	r18, Z
    140e:	31 81       	ldd	r19, Z+1	; 0x01
    1410:	fc 01       	movw	r30, r24
    1412:	31 83       	std	Z+1, r19	; 0x01
    1414:	20 83       	st	Z, r18
    1416:	ce 01       	movw	r24, r28
    1418:	8f 58       	subi	r24, 0x8F	; 143
    141a:	9d 4f       	sbci	r25, 0xFD	; 253
    141c:	fc 01       	movw	r30, r24
    141e:	80 81       	ld	r24, Z
    1420:	91 81       	ldd	r25, Z+1	; 0x01
    1422:	01 97       	sbiw	r24, 0x01	; 1
    1424:	f1 f7       	brne	.-4      	; 0x1422 <__stack+0x323>
    1426:	9e 01       	movw	r18, r28
    1428:	2f 58       	subi	r18, 0x8F	; 143
    142a:	3d 4f       	sbci	r19, 0xFD	; 253
    142c:	f9 01       	movw	r30, r18
    142e:	91 83       	std	Z+1, r25	; 0x01
    1430:	80 83       	st	Z, r24
			_delay_ms(550);
			to_uARM("M2210 F380 T100\n");
    1432:	86 ec       	ldi	r24, 0xC6	; 198
    1434:	91 e0       	ldi	r25, 0x01	; 1
    1436:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    143a:	80 e0       	ldi	r24, 0x00	; 0
    143c:	90 ec       	ldi	r25, 0xC0	; 192
    143e:	af e0       	ldi	r26, 0x0F	; 15
    1440:	b4 e4       	ldi	r27, 0x44	; 68
    1442:	8d a3       	std	Y+37, r24	; 0x25
    1444:	9e a3       	std	Y+38, r25	; 0x26
    1446:	af a3       	std	Y+39, r26	; 0x27
    1448:	b8 a7       	std	Y+40, r27	; 0x28

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    144a:	8e 01       	movw	r16, r28
    144c:	01 5a       	subi	r16, 0xA1	; 161
    144e:	1d 4f       	sbci	r17, 0xFD	; 253
    1450:	20 e0       	ldi	r18, 0x00	; 0
    1452:	30 e0       	ldi	r19, 0x00	; 0
    1454:	4a e7       	ldi	r20, 0x7A	; 122
    1456:	55 e4       	ldi	r21, 0x45	; 69
    1458:	6d a1       	ldd	r22, Y+37	; 0x25
    145a:	7e a1       	ldd	r23, Y+38	; 0x26
    145c:	8f a1       	ldd	r24, Y+39	; 0x27
    145e:	98 a5       	ldd	r25, Y+40	; 0x28
    1460:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    1464:	dc 01       	movw	r26, r24
    1466:	cb 01       	movw	r24, r22
    1468:	f8 01       	movw	r30, r16
    146a:	80 83       	st	Z, r24
    146c:	91 83       	std	Z+1, r25	; 0x01
    146e:	a2 83       	std	Z+2, r26	; 0x02
    1470:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1472:	ce 01       	movw	r24, r28
    1474:	81 5a       	subi	r24, 0xA1	; 161
    1476:	9d 4f       	sbci	r25, 0xFD	; 253
    1478:	20 e0       	ldi	r18, 0x00	; 0
    147a:	30 e0       	ldi	r19, 0x00	; 0
    147c:	40 e8       	ldi	r20, 0x80	; 128
    147e:	5f e3       	ldi	r21, 0x3F	; 63
    1480:	fc 01       	movw	r30, r24
    1482:	60 81       	ld	r22, Z
    1484:	71 81       	ldd	r23, Z+1	; 0x01
    1486:	82 81       	ldd	r24, Z+2	; 0x02
    1488:	93 81       	ldd	r25, Z+3	; 0x03
    148a:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    148e:	88 23       	and	r24, r24
    1490:	4c f4       	brge	.+18     	; 0x14a4 <__stack+0x3a5>
		__ticks = 1;
    1492:	ce 01       	movw	r24, r28
    1494:	8d 59       	subi	r24, 0x9D	; 157
    1496:	9d 4f       	sbci	r25, 0xFD	; 253
    1498:	21 e0       	ldi	r18, 0x01	; 1
    149a:	30 e0       	ldi	r19, 0x00	; 0
    149c:	fc 01       	movw	r30, r24
    149e:	31 83       	std	Z+1, r19	; 0x01
    14a0:	20 83       	st	Z, r18
    14a2:	69 c0       	rjmp	.+210    	; 0x1576 <__stack+0x477>
	else if (__tmp > 65535)
    14a4:	ce 01       	movw	r24, r28
    14a6:	81 5a       	subi	r24, 0xA1	; 161
    14a8:	9d 4f       	sbci	r25, 0xFD	; 253
    14aa:	20 e0       	ldi	r18, 0x00	; 0
    14ac:	3f ef       	ldi	r19, 0xFF	; 255
    14ae:	4f e7       	ldi	r20, 0x7F	; 127
    14b0:	57 e4       	ldi	r21, 0x47	; 71
    14b2:	fc 01       	movw	r30, r24
    14b4:	60 81       	ld	r22, Z
    14b6:	71 81       	ldd	r23, Z+1	; 0x01
    14b8:	82 81       	ldd	r24, Z+2	; 0x02
    14ba:	93 81       	ldd	r25, Z+3	; 0x03
    14bc:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    14c0:	18 16       	cp	r1, r24
    14c2:	0c f0       	brlt	.+2      	; 0x14c6 <__stack+0x3c7>
    14c4:	46 c0       	rjmp	.+140    	; 0x1552 <__stack+0x453>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14c6:	20 e0       	ldi	r18, 0x00	; 0
    14c8:	30 e0       	ldi	r19, 0x00	; 0
    14ca:	40 e2       	ldi	r20, 0x20	; 32
    14cc:	51 e4       	ldi	r21, 0x41	; 65
    14ce:	6d a1       	ldd	r22, Y+37	; 0x25
    14d0:	7e a1       	ldd	r23, Y+38	; 0x26
    14d2:	8f a1       	ldd	r24, Y+39	; 0x27
    14d4:	98 a5       	ldd	r25, Y+40	; 0x28
    14d6:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    14da:	dc 01       	movw	r26, r24
    14dc:	cb 01       	movw	r24, r22
    14de:	8e 01       	movw	r16, r28
    14e0:	0d 59       	subi	r16, 0x9D	; 157
    14e2:	1d 4f       	sbci	r17, 0xFD	; 253
    14e4:	bc 01       	movw	r22, r24
    14e6:	cd 01       	movw	r24, r26
    14e8:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    14ec:	dc 01       	movw	r26, r24
    14ee:	cb 01       	movw	r24, r22
    14f0:	f8 01       	movw	r30, r16
    14f2:	91 83       	std	Z+1, r25	; 0x01
    14f4:	80 83       	st	Z, r24
    14f6:	24 c0       	rjmp	.+72     	; 0x1540 <__stack+0x441>
    14f8:	ce 01       	movw	r24, r28
    14fa:	8b 59       	subi	r24, 0x9B	; 155
    14fc:	9d 4f       	sbci	r25, 0xFD	; 253
    14fe:	20 e9       	ldi	r18, 0x90	; 144
    1500:	31 e0       	ldi	r19, 0x01	; 1
    1502:	fc 01       	movw	r30, r24
    1504:	31 83       	std	Z+1, r19	; 0x01
    1506:	20 83       	st	Z, r18
    1508:	ce 01       	movw	r24, r28
    150a:	8b 59       	subi	r24, 0x9B	; 155
    150c:	9d 4f       	sbci	r25, 0xFD	; 253
    150e:	fc 01       	movw	r30, r24
    1510:	80 81       	ld	r24, Z
    1512:	91 81       	ldd	r25, Z+1	; 0x01
    1514:	01 97       	sbiw	r24, 0x01	; 1
    1516:	f1 f7       	brne	.-4      	; 0x1514 <__stack+0x415>
    1518:	9e 01       	movw	r18, r28
    151a:	2b 59       	subi	r18, 0x9B	; 155
    151c:	3d 4f       	sbci	r19, 0xFD	; 253
    151e:	f9 01       	movw	r30, r18
    1520:	91 83       	std	Z+1, r25	; 0x01
    1522:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1524:	ce 01       	movw	r24, r28
    1526:	8d 59       	subi	r24, 0x9D	; 157
    1528:	9d 4f       	sbci	r25, 0xFD	; 253
    152a:	9e 01       	movw	r18, r28
    152c:	2d 59       	subi	r18, 0x9D	; 157
    152e:	3d 4f       	sbci	r19, 0xFD	; 253
    1530:	f9 01       	movw	r30, r18
    1532:	20 81       	ld	r18, Z
    1534:	31 81       	ldd	r19, Z+1	; 0x01
    1536:	21 50       	subi	r18, 0x01	; 1
    1538:	31 09       	sbc	r19, r1
    153a:	fc 01       	movw	r30, r24
    153c:	31 83       	std	Z+1, r19	; 0x01
    153e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1540:	ce 01       	movw	r24, r28
    1542:	8d 59       	subi	r24, 0x9D	; 157
    1544:	9d 4f       	sbci	r25, 0xFD	; 253
    1546:	fc 01       	movw	r30, r24
    1548:	80 81       	ld	r24, Z
    154a:	91 81       	ldd	r25, Z+1	; 0x01
    154c:	89 2b       	or	r24, r25
    154e:	a1 f6       	brne	.-88     	; 0x14f8 <__stack+0x3f9>
    1550:	2c c0       	rjmp	.+88     	; 0x15aa <__stack+0x4ab>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1552:	8e 01       	movw	r16, r28
    1554:	0d 59       	subi	r16, 0x9D	; 157
    1556:	1d 4f       	sbci	r17, 0xFD	; 253
    1558:	ce 01       	movw	r24, r28
    155a:	81 5a       	subi	r24, 0xA1	; 161
    155c:	9d 4f       	sbci	r25, 0xFD	; 253
    155e:	fc 01       	movw	r30, r24
    1560:	60 81       	ld	r22, Z
    1562:	71 81       	ldd	r23, Z+1	; 0x01
    1564:	82 81       	ldd	r24, Z+2	; 0x02
    1566:	93 81       	ldd	r25, Z+3	; 0x03
    1568:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    156c:	dc 01       	movw	r26, r24
    156e:	cb 01       	movw	r24, r22
    1570:	f8 01       	movw	r30, r16
    1572:	91 83       	std	Z+1, r25	; 0x01
    1574:	80 83       	st	Z, r24
    1576:	ce 01       	movw	r24, r28
    1578:	89 59       	subi	r24, 0x99	; 153
    157a:	9d 4f       	sbci	r25, 0xFD	; 253
    157c:	9e 01       	movw	r18, r28
    157e:	2d 59       	subi	r18, 0x9D	; 157
    1580:	3d 4f       	sbci	r19, 0xFD	; 253
    1582:	f9 01       	movw	r30, r18
    1584:	20 81       	ld	r18, Z
    1586:	31 81       	ldd	r19, Z+1	; 0x01
    1588:	fc 01       	movw	r30, r24
    158a:	31 83       	std	Z+1, r19	; 0x01
    158c:	20 83       	st	Z, r18
    158e:	ce 01       	movw	r24, r28
    1590:	89 59       	subi	r24, 0x99	; 153
    1592:	9d 4f       	sbci	r25, 0xFD	; 253
    1594:	fc 01       	movw	r30, r24
    1596:	80 81       	ld	r24, Z
    1598:	91 81       	ldd	r25, Z+1	; 0x01
    159a:	01 97       	sbiw	r24, 0x01	; 1
    159c:	f1 f7       	brne	.-4      	; 0x159a <__stack+0x49b>
    159e:	9e 01       	movw	r18, r28
    15a0:	29 59       	subi	r18, 0x99	; 153
    15a2:	3d 4f       	sbci	r19, 0xFD	; 253
    15a4:	f9 01       	movw	r30, r18
    15a6:	91 83       	std	Z+1, r25	; 0x01
    15a8:	80 83       	st	Z, r24
			_delay_ms(575);
			
			
			to_uARM("M2210 F510 T100\n");
    15aa:	84 ea       	ldi	r24, 0xA4	; 164
    15ac:	91 e0       	ldi	r25, 0x01	; 1
    15ae:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    15b2:	80 e0       	ldi	r24, 0x00	; 0
    15b4:	90 e0       	ldi	r25, 0x00	; 0
    15b6:	a1 ee       	ldi	r26, 0xE1	; 225
    15b8:	b3 e4       	ldi	r27, 0x43	; 67
    15ba:	89 a7       	std	Y+41, r24	; 0x29
    15bc:	9a a7       	std	Y+42, r25	; 0x2a
    15be:	ab a7       	std	Y+43, r26	; 0x2b
    15c0:	bc a7       	std	Y+44, r27	; 0x2c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    15c2:	8e 01       	movw	r16, r28
    15c4:	0b 5a       	subi	r16, 0xAB	; 171
    15c6:	1d 4f       	sbci	r17, 0xFD	; 253
    15c8:	20 e0       	ldi	r18, 0x00	; 0
    15ca:	30 e0       	ldi	r19, 0x00	; 0
    15cc:	4a e7       	ldi	r20, 0x7A	; 122
    15ce:	55 e4       	ldi	r21, 0x45	; 69
    15d0:	69 a5       	ldd	r22, Y+41	; 0x29
    15d2:	7a a5       	ldd	r23, Y+42	; 0x2a
    15d4:	8b a5       	ldd	r24, Y+43	; 0x2b
    15d6:	9c a5       	ldd	r25, Y+44	; 0x2c
    15d8:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    15dc:	dc 01       	movw	r26, r24
    15de:	cb 01       	movw	r24, r22
    15e0:	f8 01       	movw	r30, r16
    15e2:	80 83       	st	Z, r24
    15e4:	91 83       	std	Z+1, r25	; 0x01
    15e6:	a2 83       	std	Z+2, r26	; 0x02
    15e8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    15ea:	ce 01       	movw	r24, r28
    15ec:	8b 5a       	subi	r24, 0xAB	; 171
    15ee:	9d 4f       	sbci	r25, 0xFD	; 253
    15f0:	20 e0       	ldi	r18, 0x00	; 0
    15f2:	30 e0       	ldi	r19, 0x00	; 0
    15f4:	40 e8       	ldi	r20, 0x80	; 128
    15f6:	5f e3       	ldi	r21, 0x3F	; 63
    15f8:	fc 01       	movw	r30, r24
    15fa:	60 81       	ld	r22, Z
    15fc:	71 81       	ldd	r23, Z+1	; 0x01
    15fe:	82 81       	ldd	r24, Z+2	; 0x02
    1600:	93 81       	ldd	r25, Z+3	; 0x03
    1602:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    1606:	88 23       	and	r24, r24
    1608:	4c f4       	brge	.+18     	; 0x161c <__stack+0x51d>
		__ticks = 1;
    160a:	ce 01       	movw	r24, r28
    160c:	87 5a       	subi	r24, 0xA7	; 167
    160e:	9d 4f       	sbci	r25, 0xFD	; 253
    1610:	21 e0       	ldi	r18, 0x01	; 1
    1612:	30 e0       	ldi	r19, 0x00	; 0
    1614:	fc 01       	movw	r30, r24
    1616:	31 83       	std	Z+1, r19	; 0x01
    1618:	20 83       	st	Z, r18
    161a:	69 c0       	rjmp	.+210    	; 0x16ee <__stack+0x5ef>
	else if (__tmp > 65535)
    161c:	ce 01       	movw	r24, r28
    161e:	8b 5a       	subi	r24, 0xAB	; 171
    1620:	9d 4f       	sbci	r25, 0xFD	; 253
    1622:	20 e0       	ldi	r18, 0x00	; 0
    1624:	3f ef       	ldi	r19, 0xFF	; 255
    1626:	4f e7       	ldi	r20, 0x7F	; 127
    1628:	57 e4       	ldi	r21, 0x47	; 71
    162a:	fc 01       	movw	r30, r24
    162c:	60 81       	ld	r22, Z
    162e:	71 81       	ldd	r23, Z+1	; 0x01
    1630:	82 81       	ldd	r24, Z+2	; 0x02
    1632:	93 81       	ldd	r25, Z+3	; 0x03
    1634:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    1638:	18 16       	cp	r1, r24
    163a:	0c f0       	brlt	.+2      	; 0x163e <__stack+0x53f>
    163c:	46 c0       	rjmp	.+140    	; 0x16ca <__stack+0x5cb>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    163e:	20 e0       	ldi	r18, 0x00	; 0
    1640:	30 e0       	ldi	r19, 0x00	; 0
    1642:	40 e2       	ldi	r20, 0x20	; 32
    1644:	51 e4       	ldi	r21, 0x41	; 65
    1646:	69 a5       	ldd	r22, Y+41	; 0x29
    1648:	7a a5       	ldd	r23, Y+42	; 0x2a
    164a:	8b a5       	ldd	r24, Y+43	; 0x2b
    164c:	9c a5       	ldd	r25, Y+44	; 0x2c
    164e:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    1652:	dc 01       	movw	r26, r24
    1654:	cb 01       	movw	r24, r22
    1656:	8e 01       	movw	r16, r28
    1658:	07 5a       	subi	r16, 0xA7	; 167
    165a:	1d 4f       	sbci	r17, 0xFD	; 253
    165c:	bc 01       	movw	r22, r24
    165e:	cd 01       	movw	r24, r26
    1660:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    1664:	dc 01       	movw	r26, r24
    1666:	cb 01       	movw	r24, r22
    1668:	f8 01       	movw	r30, r16
    166a:	91 83       	std	Z+1, r25	; 0x01
    166c:	80 83       	st	Z, r24
    166e:	24 c0       	rjmp	.+72     	; 0x16b8 <__stack+0x5b9>
    1670:	ce 01       	movw	r24, r28
    1672:	85 5a       	subi	r24, 0xA5	; 165
    1674:	9d 4f       	sbci	r25, 0xFD	; 253
    1676:	20 e9       	ldi	r18, 0x90	; 144
    1678:	31 e0       	ldi	r19, 0x01	; 1
    167a:	fc 01       	movw	r30, r24
    167c:	31 83       	std	Z+1, r19	; 0x01
    167e:	20 83       	st	Z, r18
    1680:	ce 01       	movw	r24, r28
    1682:	85 5a       	subi	r24, 0xA5	; 165
    1684:	9d 4f       	sbci	r25, 0xFD	; 253
    1686:	fc 01       	movw	r30, r24
    1688:	80 81       	ld	r24, Z
    168a:	91 81       	ldd	r25, Z+1	; 0x01
    168c:	01 97       	sbiw	r24, 0x01	; 1
    168e:	f1 f7       	brne	.-4      	; 0x168c <__stack+0x58d>
    1690:	9e 01       	movw	r18, r28
    1692:	25 5a       	subi	r18, 0xA5	; 165
    1694:	3d 4f       	sbci	r19, 0xFD	; 253
    1696:	f9 01       	movw	r30, r18
    1698:	91 83       	std	Z+1, r25	; 0x01
    169a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    169c:	ce 01       	movw	r24, r28
    169e:	87 5a       	subi	r24, 0xA7	; 167
    16a0:	9d 4f       	sbci	r25, 0xFD	; 253
    16a2:	9e 01       	movw	r18, r28
    16a4:	27 5a       	subi	r18, 0xA7	; 167
    16a6:	3d 4f       	sbci	r19, 0xFD	; 253
    16a8:	f9 01       	movw	r30, r18
    16aa:	20 81       	ld	r18, Z
    16ac:	31 81       	ldd	r19, Z+1	; 0x01
    16ae:	21 50       	subi	r18, 0x01	; 1
    16b0:	31 09       	sbc	r19, r1
    16b2:	fc 01       	movw	r30, r24
    16b4:	31 83       	std	Z+1, r19	; 0x01
    16b6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16b8:	ce 01       	movw	r24, r28
    16ba:	87 5a       	subi	r24, 0xA7	; 167
    16bc:	9d 4f       	sbci	r25, 0xFD	; 253
    16be:	fc 01       	movw	r30, r24
    16c0:	80 81       	ld	r24, Z
    16c2:	91 81       	ldd	r25, Z+1	; 0x01
    16c4:	89 2b       	or	r24, r25
    16c6:	a1 f6       	brne	.-88     	; 0x1670 <__stack+0x571>
    16c8:	2c c0       	rjmp	.+88     	; 0x1722 <__stack+0x623>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16ca:	8e 01       	movw	r16, r28
    16cc:	07 5a       	subi	r16, 0xA7	; 167
    16ce:	1d 4f       	sbci	r17, 0xFD	; 253
    16d0:	ce 01       	movw	r24, r28
    16d2:	8b 5a       	subi	r24, 0xAB	; 171
    16d4:	9d 4f       	sbci	r25, 0xFD	; 253
    16d6:	fc 01       	movw	r30, r24
    16d8:	60 81       	ld	r22, Z
    16da:	71 81       	ldd	r23, Z+1	; 0x01
    16dc:	82 81       	ldd	r24, Z+2	; 0x02
    16de:	93 81       	ldd	r25, Z+3	; 0x03
    16e0:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    16e4:	dc 01       	movw	r26, r24
    16e6:	cb 01       	movw	r24, r22
    16e8:	f8 01       	movw	r30, r16
    16ea:	91 83       	std	Z+1, r25	; 0x01
    16ec:	80 83       	st	Z, r24
    16ee:	ce 01       	movw	r24, r28
    16f0:	83 5a       	subi	r24, 0xA3	; 163
    16f2:	9d 4f       	sbci	r25, 0xFD	; 253
    16f4:	9e 01       	movw	r18, r28
    16f6:	27 5a       	subi	r18, 0xA7	; 167
    16f8:	3d 4f       	sbci	r19, 0xFD	; 253
    16fa:	f9 01       	movw	r30, r18
    16fc:	20 81       	ld	r18, Z
    16fe:	31 81       	ldd	r19, Z+1	; 0x01
    1700:	fc 01       	movw	r30, r24
    1702:	31 83       	std	Z+1, r19	; 0x01
    1704:	20 83       	st	Z, r18
    1706:	ce 01       	movw	r24, r28
    1708:	83 5a       	subi	r24, 0xA3	; 163
    170a:	9d 4f       	sbci	r25, 0xFD	; 253
    170c:	fc 01       	movw	r30, r24
    170e:	80 81       	ld	r24, Z
    1710:	91 81       	ldd	r25, Z+1	; 0x01
    1712:	01 97       	sbiw	r24, 0x01	; 1
    1714:	f1 f7       	brne	.-4      	; 0x1712 <__stack+0x613>
    1716:	9e 01       	movw	r18, r28
    1718:	23 5a       	subi	r18, 0xA3	; 163
    171a:	3d 4f       	sbci	r19, 0xFD	; 253
    171c:	f9 01       	movw	r30, r18
    171e:	91 83       	std	Z+1, r25	; 0x01
    1720:	80 83       	st	Z, r24
			_delay_ms(450);
			to_uARM("M2210 F380 T100\n");
    1722:	86 ec       	ldi	r24, 0xC6	; 198
    1724:	91 e0       	ldi	r25, 0x01	; 1
    1726:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    172a:	80 e0       	ldi	r24, 0x00	; 0
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	a8 ec       	ldi	r26, 0xC8	; 200
    1730:	b3 e4       	ldi	r27, 0x43	; 67
    1732:	8d a7       	std	Y+45, r24	; 0x2d
    1734:	9e a7       	std	Y+46, r25	; 0x2e
    1736:	af a7       	std	Y+47, r26	; 0x2f
    1738:	b8 ab       	std	Y+48, r27	; 0x30

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    173a:	8e 01       	movw	r16, r28
    173c:	05 5b       	subi	r16, 0xB5	; 181
    173e:	1d 4f       	sbci	r17, 0xFD	; 253
    1740:	20 e0       	ldi	r18, 0x00	; 0
    1742:	30 e0       	ldi	r19, 0x00	; 0
    1744:	4a e7       	ldi	r20, 0x7A	; 122
    1746:	55 e4       	ldi	r21, 0x45	; 69
    1748:	6d a5       	ldd	r22, Y+45	; 0x2d
    174a:	7e a5       	ldd	r23, Y+46	; 0x2e
    174c:	8f a5       	ldd	r24, Y+47	; 0x2f
    174e:	98 a9       	ldd	r25, Y+48	; 0x30
    1750:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    1754:	dc 01       	movw	r26, r24
    1756:	cb 01       	movw	r24, r22
    1758:	f8 01       	movw	r30, r16
    175a:	80 83       	st	Z, r24
    175c:	91 83       	std	Z+1, r25	; 0x01
    175e:	a2 83       	std	Z+2, r26	; 0x02
    1760:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1762:	ce 01       	movw	r24, r28
    1764:	85 5b       	subi	r24, 0xB5	; 181
    1766:	9d 4f       	sbci	r25, 0xFD	; 253
    1768:	20 e0       	ldi	r18, 0x00	; 0
    176a:	30 e0       	ldi	r19, 0x00	; 0
    176c:	40 e8       	ldi	r20, 0x80	; 128
    176e:	5f e3       	ldi	r21, 0x3F	; 63
    1770:	fc 01       	movw	r30, r24
    1772:	60 81       	ld	r22, Z
    1774:	71 81       	ldd	r23, Z+1	; 0x01
    1776:	82 81       	ldd	r24, Z+2	; 0x02
    1778:	93 81       	ldd	r25, Z+3	; 0x03
    177a:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    177e:	88 23       	and	r24, r24
    1780:	4c f4       	brge	.+18     	; 0x1794 <__stack+0x695>
		__ticks = 1;
    1782:	ce 01       	movw	r24, r28
    1784:	81 5b       	subi	r24, 0xB1	; 177
    1786:	9d 4f       	sbci	r25, 0xFD	; 253
    1788:	21 e0       	ldi	r18, 0x01	; 1
    178a:	30 e0       	ldi	r19, 0x00	; 0
    178c:	fc 01       	movw	r30, r24
    178e:	31 83       	std	Z+1, r19	; 0x01
    1790:	20 83       	st	Z, r18
    1792:	69 c0       	rjmp	.+210    	; 0x1866 <__stack+0x767>
	else if (__tmp > 65535)
    1794:	ce 01       	movw	r24, r28
    1796:	85 5b       	subi	r24, 0xB5	; 181
    1798:	9d 4f       	sbci	r25, 0xFD	; 253
    179a:	20 e0       	ldi	r18, 0x00	; 0
    179c:	3f ef       	ldi	r19, 0xFF	; 255
    179e:	4f e7       	ldi	r20, 0x7F	; 127
    17a0:	57 e4       	ldi	r21, 0x47	; 71
    17a2:	fc 01       	movw	r30, r24
    17a4:	60 81       	ld	r22, Z
    17a6:	71 81       	ldd	r23, Z+1	; 0x01
    17a8:	82 81       	ldd	r24, Z+2	; 0x02
    17aa:	93 81       	ldd	r25, Z+3	; 0x03
    17ac:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    17b0:	18 16       	cp	r1, r24
    17b2:	0c f0       	brlt	.+2      	; 0x17b6 <__stack+0x6b7>
    17b4:	46 c0       	rjmp	.+140    	; 0x1842 <__stack+0x743>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17b6:	20 e0       	ldi	r18, 0x00	; 0
    17b8:	30 e0       	ldi	r19, 0x00	; 0
    17ba:	40 e2       	ldi	r20, 0x20	; 32
    17bc:	51 e4       	ldi	r21, 0x41	; 65
    17be:	6d a5       	ldd	r22, Y+45	; 0x2d
    17c0:	7e a5       	ldd	r23, Y+46	; 0x2e
    17c2:	8f a5       	ldd	r24, Y+47	; 0x2f
    17c4:	98 a9       	ldd	r25, Y+48	; 0x30
    17c6:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    17ca:	dc 01       	movw	r26, r24
    17cc:	cb 01       	movw	r24, r22
    17ce:	8e 01       	movw	r16, r28
    17d0:	01 5b       	subi	r16, 0xB1	; 177
    17d2:	1d 4f       	sbci	r17, 0xFD	; 253
    17d4:	bc 01       	movw	r22, r24
    17d6:	cd 01       	movw	r24, r26
    17d8:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    17dc:	dc 01       	movw	r26, r24
    17de:	cb 01       	movw	r24, r22
    17e0:	f8 01       	movw	r30, r16
    17e2:	91 83       	std	Z+1, r25	; 0x01
    17e4:	80 83       	st	Z, r24
    17e6:	24 c0       	rjmp	.+72     	; 0x1830 <__stack+0x731>
    17e8:	ce 01       	movw	r24, r28
    17ea:	8f 5a       	subi	r24, 0xAF	; 175
    17ec:	9d 4f       	sbci	r25, 0xFD	; 253
    17ee:	20 e9       	ldi	r18, 0x90	; 144
    17f0:	31 e0       	ldi	r19, 0x01	; 1
    17f2:	fc 01       	movw	r30, r24
    17f4:	31 83       	std	Z+1, r19	; 0x01
    17f6:	20 83       	st	Z, r18
    17f8:	ce 01       	movw	r24, r28
    17fa:	8f 5a       	subi	r24, 0xAF	; 175
    17fc:	9d 4f       	sbci	r25, 0xFD	; 253
    17fe:	fc 01       	movw	r30, r24
    1800:	80 81       	ld	r24, Z
    1802:	91 81       	ldd	r25, Z+1	; 0x01
    1804:	01 97       	sbiw	r24, 0x01	; 1
    1806:	f1 f7       	brne	.-4      	; 0x1804 <__stack+0x705>
    1808:	9e 01       	movw	r18, r28
    180a:	2f 5a       	subi	r18, 0xAF	; 175
    180c:	3d 4f       	sbci	r19, 0xFD	; 253
    180e:	f9 01       	movw	r30, r18
    1810:	91 83       	std	Z+1, r25	; 0x01
    1812:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1814:	ce 01       	movw	r24, r28
    1816:	81 5b       	subi	r24, 0xB1	; 177
    1818:	9d 4f       	sbci	r25, 0xFD	; 253
    181a:	9e 01       	movw	r18, r28
    181c:	21 5b       	subi	r18, 0xB1	; 177
    181e:	3d 4f       	sbci	r19, 0xFD	; 253
    1820:	f9 01       	movw	r30, r18
    1822:	20 81       	ld	r18, Z
    1824:	31 81       	ldd	r19, Z+1	; 0x01
    1826:	21 50       	subi	r18, 0x01	; 1
    1828:	31 09       	sbc	r19, r1
    182a:	fc 01       	movw	r30, r24
    182c:	31 83       	std	Z+1, r19	; 0x01
    182e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1830:	ce 01       	movw	r24, r28
    1832:	81 5b       	subi	r24, 0xB1	; 177
    1834:	9d 4f       	sbci	r25, 0xFD	; 253
    1836:	fc 01       	movw	r30, r24
    1838:	80 81       	ld	r24, Z
    183a:	91 81       	ldd	r25, Z+1	; 0x01
    183c:	89 2b       	or	r24, r25
    183e:	a1 f6       	brne	.-88     	; 0x17e8 <__stack+0x6e9>
    1840:	2c c0       	rjmp	.+88     	; 0x189a <__stack+0x79b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1842:	8e 01       	movw	r16, r28
    1844:	01 5b       	subi	r16, 0xB1	; 177
    1846:	1d 4f       	sbci	r17, 0xFD	; 253
    1848:	ce 01       	movw	r24, r28
    184a:	85 5b       	subi	r24, 0xB5	; 181
    184c:	9d 4f       	sbci	r25, 0xFD	; 253
    184e:	fc 01       	movw	r30, r24
    1850:	60 81       	ld	r22, Z
    1852:	71 81       	ldd	r23, Z+1	; 0x01
    1854:	82 81       	ldd	r24, Z+2	; 0x02
    1856:	93 81       	ldd	r25, Z+3	; 0x03
    1858:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    185c:	dc 01       	movw	r26, r24
    185e:	cb 01       	movw	r24, r22
    1860:	f8 01       	movw	r30, r16
    1862:	91 83       	std	Z+1, r25	; 0x01
    1864:	80 83       	st	Z, r24
    1866:	ce 01       	movw	r24, r28
    1868:	8d 5a       	subi	r24, 0xAD	; 173
    186a:	9d 4f       	sbci	r25, 0xFD	; 253
    186c:	9e 01       	movw	r18, r28
    186e:	21 5b       	subi	r18, 0xB1	; 177
    1870:	3d 4f       	sbci	r19, 0xFD	; 253
    1872:	f9 01       	movw	r30, r18
    1874:	20 81       	ld	r18, Z
    1876:	31 81       	ldd	r19, Z+1	; 0x01
    1878:	fc 01       	movw	r30, r24
    187a:	31 83       	std	Z+1, r19	; 0x01
    187c:	20 83       	st	Z, r18
    187e:	ce 01       	movw	r24, r28
    1880:	8d 5a       	subi	r24, 0xAD	; 173
    1882:	9d 4f       	sbci	r25, 0xFD	; 253
    1884:	fc 01       	movw	r30, r24
    1886:	80 81       	ld	r24, Z
    1888:	91 81       	ldd	r25, Z+1	; 0x01
    188a:	01 97       	sbiw	r24, 0x01	; 1
    188c:	f1 f7       	brne	.-4      	; 0x188a <__stack+0x78b>
    188e:	9e 01       	movw	r18, r28
    1890:	2d 5a       	subi	r18, 0xAD	; 173
    1892:	3d 4f       	sbci	r19, 0xFD	; 253
    1894:	f9 01       	movw	r30, r18
    1896:	91 83       	std	Z+1, r25	; 0x01
    1898:	80 83       	st	Z, r24
			_delay_ms(400);
			to_uARM("M2210 F320 T100\n");
    189a:	87 ed       	ldi	r24, 0xD7	; 215
    189c:	91 e0       	ldi	r25, 0x01	; 1
    189e:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    18a2:	80 e0       	ldi	r24, 0x00	; 0
    18a4:	90 e0       	ldi	r25, 0x00	; 0
    18a6:	aa ef       	ldi	r26, 0xFA	; 250
    18a8:	b3 e4       	ldi	r27, 0x43	; 67
    18aa:	89 ab       	std	Y+49, r24	; 0x31
    18ac:	9a ab       	std	Y+50, r25	; 0x32
    18ae:	ab ab       	std	Y+51, r26	; 0x33
    18b0:	bc ab       	std	Y+52, r27	; 0x34

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    18b2:	8e 01       	movw	r16, r28
    18b4:	0f 5b       	subi	r16, 0xBF	; 191
    18b6:	1d 4f       	sbci	r17, 0xFD	; 253
    18b8:	20 e0       	ldi	r18, 0x00	; 0
    18ba:	30 e0       	ldi	r19, 0x00	; 0
    18bc:	4a e7       	ldi	r20, 0x7A	; 122
    18be:	55 e4       	ldi	r21, 0x45	; 69
    18c0:	69 a9       	ldd	r22, Y+49	; 0x31
    18c2:	7a a9       	ldd	r23, Y+50	; 0x32
    18c4:	8b a9       	ldd	r24, Y+51	; 0x33
    18c6:	9c a9       	ldd	r25, Y+52	; 0x34
    18c8:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    18cc:	dc 01       	movw	r26, r24
    18ce:	cb 01       	movw	r24, r22
    18d0:	f8 01       	movw	r30, r16
    18d2:	80 83       	st	Z, r24
    18d4:	91 83       	std	Z+1, r25	; 0x01
    18d6:	a2 83       	std	Z+2, r26	; 0x02
    18d8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    18da:	ce 01       	movw	r24, r28
    18dc:	8f 5b       	subi	r24, 0xBF	; 191
    18de:	9d 4f       	sbci	r25, 0xFD	; 253
    18e0:	20 e0       	ldi	r18, 0x00	; 0
    18e2:	30 e0       	ldi	r19, 0x00	; 0
    18e4:	40 e8       	ldi	r20, 0x80	; 128
    18e6:	5f e3       	ldi	r21, 0x3F	; 63
    18e8:	fc 01       	movw	r30, r24
    18ea:	60 81       	ld	r22, Z
    18ec:	71 81       	ldd	r23, Z+1	; 0x01
    18ee:	82 81       	ldd	r24, Z+2	; 0x02
    18f0:	93 81       	ldd	r25, Z+3	; 0x03
    18f2:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    18f6:	88 23       	and	r24, r24
    18f8:	4c f4       	brge	.+18     	; 0x190c <__stack+0x80d>
		__ticks = 1;
    18fa:	ce 01       	movw	r24, r28
    18fc:	8b 5b       	subi	r24, 0xBB	; 187
    18fe:	9d 4f       	sbci	r25, 0xFD	; 253
    1900:	21 e0       	ldi	r18, 0x01	; 1
    1902:	30 e0       	ldi	r19, 0x00	; 0
    1904:	fc 01       	movw	r30, r24
    1906:	31 83       	std	Z+1, r19	; 0x01
    1908:	20 83       	st	Z, r18
    190a:	69 c0       	rjmp	.+210    	; 0x19de <__stack+0x8df>
	else if (__tmp > 65535)
    190c:	ce 01       	movw	r24, r28
    190e:	8f 5b       	subi	r24, 0xBF	; 191
    1910:	9d 4f       	sbci	r25, 0xFD	; 253
    1912:	20 e0       	ldi	r18, 0x00	; 0
    1914:	3f ef       	ldi	r19, 0xFF	; 255
    1916:	4f e7       	ldi	r20, 0x7F	; 127
    1918:	57 e4       	ldi	r21, 0x47	; 71
    191a:	fc 01       	movw	r30, r24
    191c:	60 81       	ld	r22, Z
    191e:	71 81       	ldd	r23, Z+1	; 0x01
    1920:	82 81       	ldd	r24, Z+2	; 0x02
    1922:	93 81       	ldd	r25, Z+3	; 0x03
    1924:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    1928:	18 16       	cp	r1, r24
    192a:	0c f0       	brlt	.+2      	; 0x192e <__stack+0x82f>
    192c:	46 c0       	rjmp	.+140    	; 0x19ba <__stack+0x8bb>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    192e:	20 e0       	ldi	r18, 0x00	; 0
    1930:	30 e0       	ldi	r19, 0x00	; 0
    1932:	40 e2       	ldi	r20, 0x20	; 32
    1934:	51 e4       	ldi	r21, 0x41	; 65
    1936:	69 a9       	ldd	r22, Y+49	; 0x31
    1938:	7a a9       	ldd	r23, Y+50	; 0x32
    193a:	8b a9       	ldd	r24, Y+51	; 0x33
    193c:	9c a9       	ldd	r25, Y+52	; 0x34
    193e:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    1942:	dc 01       	movw	r26, r24
    1944:	cb 01       	movw	r24, r22
    1946:	8e 01       	movw	r16, r28
    1948:	0b 5b       	subi	r16, 0xBB	; 187
    194a:	1d 4f       	sbci	r17, 0xFD	; 253
    194c:	bc 01       	movw	r22, r24
    194e:	cd 01       	movw	r24, r26
    1950:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    1954:	dc 01       	movw	r26, r24
    1956:	cb 01       	movw	r24, r22
    1958:	f8 01       	movw	r30, r16
    195a:	91 83       	std	Z+1, r25	; 0x01
    195c:	80 83       	st	Z, r24
    195e:	24 c0       	rjmp	.+72     	; 0x19a8 <__stack+0x8a9>
    1960:	ce 01       	movw	r24, r28
    1962:	89 5b       	subi	r24, 0xB9	; 185
    1964:	9d 4f       	sbci	r25, 0xFD	; 253
    1966:	20 e9       	ldi	r18, 0x90	; 144
    1968:	31 e0       	ldi	r19, 0x01	; 1
    196a:	fc 01       	movw	r30, r24
    196c:	31 83       	std	Z+1, r19	; 0x01
    196e:	20 83       	st	Z, r18
    1970:	ce 01       	movw	r24, r28
    1972:	89 5b       	subi	r24, 0xB9	; 185
    1974:	9d 4f       	sbci	r25, 0xFD	; 253
    1976:	fc 01       	movw	r30, r24
    1978:	80 81       	ld	r24, Z
    197a:	91 81       	ldd	r25, Z+1	; 0x01
    197c:	01 97       	sbiw	r24, 0x01	; 1
    197e:	f1 f7       	brne	.-4      	; 0x197c <__stack+0x87d>
    1980:	9e 01       	movw	r18, r28
    1982:	29 5b       	subi	r18, 0xB9	; 185
    1984:	3d 4f       	sbci	r19, 0xFD	; 253
    1986:	f9 01       	movw	r30, r18
    1988:	91 83       	std	Z+1, r25	; 0x01
    198a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    198c:	ce 01       	movw	r24, r28
    198e:	8b 5b       	subi	r24, 0xBB	; 187
    1990:	9d 4f       	sbci	r25, 0xFD	; 253
    1992:	9e 01       	movw	r18, r28
    1994:	2b 5b       	subi	r18, 0xBB	; 187
    1996:	3d 4f       	sbci	r19, 0xFD	; 253
    1998:	f9 01       	movw	r30, r18
    199a:	20 81       	ld	r18, Z
    199c:	31 81       	ldd	r19, Z+1	; 0x01
    199e:	21 50       	subi	r18, 0x01	; 1
    19a0:	31 09       	sbc	r19, r1
    19a2:	fc 01       	movw	r30, r24
    19a4:	31 83       	std	Z+1, r19	; 0x01
    19a6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19a8:	ce 01       	movw	r24, r28
    19aa:	8b 5b       	subi	r24, 0xBB	; 187
    19ac:	9d 4f       	sbci	r25, 0xFD	; 253
    19ae:	fc 01       	movw	r30, r24
    19b0:	80 81       	ld	r24, Z
    19b2:	91 81       	ldd	r25, Z+1	; 0x01
    19b4:	89 2b       	or	r24, r25
    19b6:	a1 f6       	brne	.-88     	; 0x1960 <__stack+0x861>
    19b8:	2c c0       	rjmp	.+88     	; 0x1a12 <__stack+0x913>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19ba:	8e 01       	movw	r16, r28
    19bc:	0b 5b       	subi	r16, 0xBB	; 187
    19be:	1d 4f       	sbci	r17, 0xFD	; 253
    19c0:	ce 01       	movw	r24, r28
    19c2:	8f 5b       	subi	r24, 0xBF	; 191
    19c4:	9d 4f       	sbci	r25, 0xFD	; 253
    19c6:	fc 01       	movw	r30, r24
    19c8:	60 81       	ld	r22, Z
    19ca:	71 81       	ldd	r23, Z+1	; 0x01
    19cc:	82 81       	ldd	r24, Z+2	; 0x02
    19ce:	93 81       	ldd	r25, Z+3	; 0x03
    19d0:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    19d4:	dc 01       	movw	r26, r24
    19d6:	cb 01       	movw	r24, r22
    19d8:	f8 01       	movw	r30, r16
    19da:	91 83       	std	Z+1, r25	; 0x01
    19dc:	80 83       	st	Z, r24
    19de:	ce 01       	movw	r24, r28
    19e0:	87 5b       	subi	r24, 0xB7	; 183
    19e2:	9d 4f       	sbci	r25, 0xFD	; 253
    19e4:	9e 01       	movw	r18, r28
    19e6:	2b 5b       	subi	r18, 0xBB	; 187
    19e8:	3d 4f       	sbci	r19, 0xFD	; 253
    19ea:	f9 01       	movw	r30, r18
    19ec:	20 81       	ld	r18, Z
    19ee:	31 81       	ldd	r19, Z+1	; 0x01
    19f0:	fc 01       	movw	r30, r24
    19f2:	31 83       	std	Z+1, r19	; 0x01
    19f4:	20 83       	st	Z, r18
    19f6:	ce 01       	movw	r24, r28
    19f8:	87 5b       	subi	r24, 0xB7	; 183
    19fa:	9d 4f       	sbci	r25, 0xFD	; 253
    19fc:	fc 01       	movw	r30, r24
    19fe:	80 81       	ld	r24, Z
    1a00:	91 81       	ldd	r25, Z+1	; 0x01
    1a02:	01 97       	sbiw	r24, 0x01	; 1
    1a04:	f1 f7       	brne	.-4      	; 0x1a02 <__stack+0x903>
    1a06:	9e 01       	movw	r18, r28
    1a08:	27 5b       	subi	r18, 0xB7	; 183
    1a0a:	3d 4f       	sbci	r19, 0xFD	; 253
    1a0c:	f9 01       	movw	r30, r18
    1a0e:	91 83       	std	Z+1, r25	; 0x01
    1a10:	80 83       	st	Z, r24
			_delay_ms(500);
			to_uARM("M2210 F440 T100\n");
    1a12:	88 ee       	ldi	r24, 0xE8	; 232
    1a14:	91 e0       	ldi	r25, 0x01	; 1
    1a16:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    1a1a:	80 e0       	ldi	r24, 0x00	; 0
    1a1c:	90 e0       	ldi	r25, 0x00	; 0
    1a1e:	a6 e9       	ldi	r26, 0x96	; 150
    1a20:	b3 e4       	ldi	r27, 0x43	; 67
    1a22:	8d ab       	std	Y+53, r24	; 0x35
    1a24:	9e ab       	std	Y+54, r25	; 0x36
    1a26:	af ab       	std	Y+55, r26	; 0x37
    1a28:	b8 af       	std	Y+56, r27	; 0x38

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1a2a:	8e 01       	movw	r16, r28
    1a2c:	09 5c       	subi	r16, 0xC9	; 201
    1a2e:	1d 4f       	sbci	r17, 0xFD	; 253
    1a30:	20 e0       	ldi	r18, 0x00	; 0
    1a32:	30 e0       	ldi	r19, 0x00	; 0
    1a34:	4a e7       	ldi	r20, 0x7A	; 122
    1a36:	55 e4       	ldi	r21, 0x45	; 69
    1a38:	6d a9       	ldd	r22, Y+53	; 0x35
    1a3a:	7e a9       	ldd	r23, Y+54	; 0x36
    1a3c:	8f a9       	ldd	r24, Y+55	; 0x37
    1a3e:	98 ad       	ldd	r25, Y+56	; 0x38
    1a40:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    1a44:	dc 01       	movw	r26, r24
    1a46:	cb 01       	movw	r24, r22
    1a48:	f8 01       	movw	r30, r16
    1a4a:	80 83       	st	Z, r24
    1a4c:	91 83       	std	Z+1, r25	; 0x01
    1a4e:	a2 83       	std	Z+2, r26	; 0x02
    1a50:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1a52:	ce 01       	movw	r24, r28
    1a54:	89 5c       	subi	r24, 0xC9	; 201
    1a56:	9d 4f       	sbci	r25, 0xFD	; 253
    1a58:	20 e0       	ldi	r18, 0x00	; 0
    1a5a:	30 e0       	ldi	r19, 0x00	; 0
    1a5c:	40 e8       	ldi	r20, 0x80	; 128
    1a5e:	5f e3       	ldi	r21, 0x3F	; 63
    1a60:	fc 01       	movw	r30, r24
    1a62:	60 81       	ld	r22, Z
    1a64:	71 81       	ldd	r23, Z+1	; 0x01
    1a66:	82 81       	ldd	r24, Z+2	; 0x02
    1a68:	93 81       	ldd	r25, Z+3	; 0x03
    1a6a:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    1a6e:	88 23       	and	r24, r24
    1a70:	4c f4       	brge	.+18     	; 0x1a84 <__stack+0x985>
		__ticks = 1;
    1a72:	ce 01       	movw	r24, r28
    1a74:	85 5c       	subi	r24, 0xC5	; 197
    1a76:	9d 4f       	sbci	r25, 0xFD	; 253
    1a78:	21 e0       	ldi	r18, 0x01	; 1
    1a7a:	30 e0       	ldi	r19, 0x00	; 0
    1a7c:	fc 01       	movw	r30, r24
    1a7e:	31 83       	std	Z+1, r19	; 0x01
    1a80:	20 83       	st	Z, r18
    1a82:	69 c0       	rjmp	.+210    	; 0x1b56 <__stack+0xa57>
	else if (__tmp > 65535)
    1a84:	ce 01       	movw	r24, r28
    1a86:	89 5c       	subi	r24, 0xC9	; 201
    1a88:	9d 4f       	sbci	r25, 0xFD	; 253
    1a8a:	20 e0       	ldi	r18, 0x00	; 0
    1a8c:	3f ef       	ldi	r19, 0xFF	; 255
    1a8e:	4f e7       	ldi	r20, 0x7F	; 127
    1a90:	57 e4       	ldi	r21, 0x47	; 71
    1a92:	fc 01       	movw	r30, r24
    1a94:	60 81       	ld	r22, Z
    1a96:	71 81       	ldd	r23, Z+1	; 0x01
    1a98:	82 81       	ldd	r24, Z+2	; 0x02
    1a9a:	93 81       	ldd	r25, Z+3	; 0x03
    1a9c:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    1aa0:	18 16       	cp	r1, r24
    1aa2:	0c f0       	brlt	.+2      	; 0x1aa6 <__stack+0x9a7>
    1aa4:	46 c0       	rjmp	.+140    	; 0x1b32 <__stack+0xa33>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1aa6:	20 e0       	ldi	r18, 0x00	; 0
    1aa8:	30 e0       	ldi	r19, 0x00	; 0
    1aaa:	40 e2       	ldi	r20, 0x20	; 32
    1aac:	51 e4       	ldi	r21, 0x41	; 65
    1aae:	6d a9       	ldd	r22, Y+53	; 0x35
    1ab0:	7e a9       	ldd	r23, Y+54	; 0x36
    1ab2:	8f a9       	ldd	r24, Y+55	; 0x37
    1ab4:	98 ad       	ldd	r25, Y+56	; 0x38
    1ab6:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    1aba:	dc 01       	movw	r26, r24
    1abc:	cb 01       	movw	r24, r22
    1abe:	8e 01       	movw	r16, r28
    1ac0:	05 5c       	subi	r16, 0xC5	; 197
    1ac2:	1d 4f       	sbci	r17, 0xFD	; 253
    1ac4:	bc 01       	movw	r22, r24
    1ac6:	cd 01       	movw	r24, r26
    1ac8:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    1acc:	dc 01       	movw	r26, r24
    1ace:	cb 01       	movw	r24, r22
    1ad0:	f8 01       	movw	r30, r16
    1ad2:	91 83       	std	Z+1, r25	; 0x01
    1ad4:	80 83       	st	Z, r24
    1ad6:	24 c0       	rjmp	.+72     	; 0x1b20 <__stack+0xa21>
    1ad8:	ce 01       	movw	r24, r28
    1ada:	83 5c       	subi	r24, 0xC3	; 195
    1adc:	9d 4f       	sbci	r25, 0xFD	; 253
    1ade:	20 e9       	ldi	r18, 0x90	; 144
    1ae0:	31 e0       	ldi	r19, 0x01	; 1
    1ae2:	fc 01       	movw	r30, r24
    1ae4:	31 83       	std	Z+1, r19	; 0x01
    1ae6:	20 83       	st	Z, r18
    1ae8:	ce 01       	movw	r24, r28
    1aea:	83 5c       	subi	r24, 0xC3	; 195
    1aec:	9d 4f       	sbci	r25, 0xFD	; 253
    1aee:	fc 01       	movw	r30, r24
    1af0:	80 81       	ld	r24, Z
    1af2:	91 81       	ldd	r25, Z+1	; 0x01
    1af4:	01 97       	sbiw	r24, 0x01	; 1
    1af6:	f1 f7       	brne	.-4      	; 0x1af4 <__stack+0x9f5>
    1af8:	9e 01       	movw	r18, r28
    1afa:	23 5c       	subi	r18, 0xC3	; 195
    1afc:	3d 4f       	sbci	r19, 0xFD	; 253
    1afe:	f9 01       	movw	r30, r18
    1b00:	91 83       	std	Z+1, r25	; 0x01
    1b02:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b04:	ce 01       	movw	r24, r28
    1b06:	85 5c       	subi	r24, 0xC5	; 197
    1b08:	9d 4f       	sbci	r25, 0xFD	; 253
    1b0a:	9e 01       	movw	r18, r28
    1b0c:	25 5c       	subi	r18, 0xC5	; 197
    1b0e:	3d 4f       	sbci	r19, 0xFD	; 253
    1b10:	f9 01       	movw	r30, r18
    1b12:	20 81       	ld	r18, Z
    1b14:	31 81       	ldd	r19, Z+1	; 0x01
    1b16:	21 50       	subi	r18, 0x01	; 1
    1b18:	31 09       	sbc	r19, r1
    1b1a:	fc 01       	movw	r30, r24
    1b1c:	31 83       	std	Z+1, r19	; 0x01
    1b1e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b20:	ce 01       	movw	r24, r28
    1b22:	85 5c       	subi	r24, 0xC5	; 197
    1b24:	9d 4f       	sbci	r25, 0xFD	; 253
    1b26:	fc 01       	movw	r30, r24
    1b28:	80 81       	ld	r24, Z
    1b2a:	91 81       	ldd	r25, Z+1	; 0x01
    1b2c:	89 2b       	or	r24, r25
    1b2e:	a1 f6       	brne	.-88     	; 0x1ad8 <__stack+0x9d9>
    1b30:	2c c0       	rjmp	.+88     	; 0x1b8a <__stack+0xa8b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b32:	8e 01       	movw	r16, r28
    1b34:	05 5c       	subi	r16, 0xC5	; 197
    1b36:	1d 4f       	sbci	r17, 0xFD	; 253
    1b38:	ce 01       	movw	r24, r28
    1b3a:	89 5c       	subi	r24, 0xC9	; 201
    1b3c:	9d 4f       	sbci	r25, 0xFD	; 253
    1b3e:	fc 01       	movw	r30, r24
    1b40:	60 81       	ld	r22, Z
    1b42:	71 81       	ldd	r23, Z+1	; 0x01
    1b44:	82 81       	ldd	r24, Z+2	; 0x02
    1b46:	93 81       	ldd	r25, Z+3	; 0x03
    1b48:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    1b4c:	dc 01       	movw	r26, r24
    1b4e:	cb 01       	movw	r24, r22
    1b50:	f8 01       	movw	r30, r16
    1b52:	91 83       	std	Z+1, r25	; 0x01
    1b54:	80 83       	st	Z, r24
    1b56:	ce 01       	movw	r24, r28
    1b58:	81 5c       	subi	r24, 0xC1	; 193
    1b5a:	9d 4f       	sbci	r25, 0xFD	; 253
    1b5c:	9e 01       	movw	r18, r28
    1b5e:	25 5c       	subi	r18, 0xC5	; 197
    1b60:	3d 4f       	sbci	r19, 0xFD	; 253
    1b62:	f9 01       	movw	r30, r18
    1b64:	20 81       	ld	r18, Z
    1b66:	31 81       	ldd	r19, Z+1	; 0x01
    1b68:	fc 01       	movw	r30, r24
    1b6a:	31 83       	std	Z+1, r19	; 0x01
    1b6c:	20 83       	st	Z, r18
    1b6e:	ce 01       	movw	r24, r28
    1b70:	81 5c       	subi	r24, 0xC1	; 193
    1b72:	9d 4f       	sbci	r25, 0xFD	; 253
    1b74:	fc 01       	movw	r30, r24
    1b76:	80 81       	ld	r24, Z
    1b78:	91 81       	ldd	r25, Z+1	; 0x01
    1b7a:	01 97       	sbiw	r24, 0x01	; 1
    1b7c:	f1 f7       	brne	.-4      	; 0x1b7a <__stack+0xa7b>
    1b7e:	9e 01       	movw	r18, r28
    1b80:	21 5c       	subi	r18, 0xC1	; 193
    1b82:	3d 4f       	sbci	r19, 0xFD	; 253
    1b84:	f9 01       	movw	r30, r18
    1b86:	91 83       	std	Z+1, r25	; 0x01
    1b88:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F480 T80\n");
    1b8a:	89 ef       	ldi	r24, 0xF9	; 249
    1b8c:	91 e0       	ldi	r25, 0x01	; 1
    1b8e:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    1b92:	80 e0       	ldi	r24, 0x00	; 0
    1b94:	90 e0       	ldi	r25, 0x00	; 0
    1b96:	a5 ea       	ldi	r26, 0xA5	; 165
    1b98:	b3 e4       	ldi	r27, 0x43	; 67
    1b9a:	89 af       	std	Y+57, r24	; 0x39
    1b9c:	9a af       	std	Y+58, r25	; 0x3a
    1b9e:	ab af       	std	Y+59, r26	; 0x3b
    1ba0:	bc af       	std	Y+60, r27	; 0x3c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1ba2:	8e 01       	movw	r16, r28
    1ba4:	03 5d       	subi	r16, 0xD3	; 211
    1ba6:	1d 4f       	sbci	r17, 0xFD	; 253
    1ba8:	20 e0       	ldi	r18, 0x00	; 0
    1baa:	30 e0       	ldi	r19, 0x00	; 0
    1bac:	4a e7       	ldi	r20, 0x7A	; 122
    1bae:	55 e4       	ldi	r21, 0x45	; 69
    1bb0:	69 ad       	ldd	r22, Y+57	; 0x39
    1bb2:	7a ad       	ldd	r23, Y+58	; 0x3a
    1bb4:	8b ad       	ldd	r24, Y+59	; 0x3b
    1bb6:	9c ad       	ldd	r25, Y+60	; 0x3c
    1bb8:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    1bbc:	dc 01       	movw	r26, r24
    1bbe:	cb 01       	movw	r24, r22
    1bc0:	f8 01       	movw	r30, r16
    1bc2:	80 83       	st	Z, r24
    1bc4:	91 83       	std	Z+1, r25	; 0x01
    1bc6:	a2 83       	std	Z+2, r26	; 0x02
    1bc8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1bca:	ce 01       	movw	r24, r28
    1bcc:	83 5d       	subi	r24, 0xD3	; 211
    1bce:	9d 4f       	sbci	r25, 0xFD	; 253
    1bd0:	20 e0       	ldi	r18, 0x00	; 0
    1bd2:	30 e0       	ldi	r19, 0x00	; 0
    1bd4:	40 e8       	ldi	r20, 0x80	; 128
    1bd6:	5f e3       	ldi	r21, 0x3F	; 63
    1bd8:	fc 01       	movw	r30, r24
    1bda:	60 81       	ld	r22, Z
    1bdc:	71 81       	ldd	r23, Z+1	; 0x01
    1bde:	82 81       	ldd	r24, Z+2	; 0x02
    1be0:	93 81       	ldd	r25, Z+3	; 0x03
    1be2:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    1be6:	88 23       	and	r24, r24
    1be8:	4c f4       	brge	.+18     	; 0x1bfc <__stack+0xafd>
		__ticks = 1;
    1bea:	ce 01       	movw	r24, r28
    1bec:	8f 5c       	subi	r24, 0xCF	; 207
    1bee:	9d 4f       	sbci	r25, 0xFD	; 253
    1bf0:	21 e0       	ldi	r18, 0x01	; 1
    1bf2:	30 e0       	ldi	r19, 0x00	; 0
    1bf4:	fc 01       	movw	r30, r24
    1bf6:	31 83       	std	Z+1, r19	; 0x01
    1bf8:	20 83       	st	Z, r18
    1bfa:	69 c0       	rjmp	.+210    	; 0x1cce <__stack+0xbcf>
	else if (__tmp > 65535)
    1bfc:	ce 01       	movw	r24, r28
    1bfe:	83 5d       	subi	r24, 0xD3	; 211
    1c00:	9d 4f       	sbci	r25, 0xFD	; 253
    1c02:	20 e0       	ldi	r18, 0x00	; 0
    1c04:	3f ef       	ldi	r19, 0xFF	; 255
    1c06:	4f e7       	ldi	r20, 0x7F	; 127
    1c08:	57 e4       	ldi	r21, 0x47	; 71
    1c0a:	fc 01       	movw	r30, r24
    1c0c:	60 81       	ld	r22, Z
    1c0e:	71 81       	ldd	r23, Z+1	; 0x01
    1c10:	82 81       	ldd	r24, Z+2	; 0x02
    1c12:	93 81       	ldd	r25, Z+3	; 0x03
    1c14:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    1c18:	18 16       	cp	r1, r24
    1c1a:	0c f0       	brlt	.+2      	; 0x1c1e <__stack+0xb1f>
    1c1c:	46 c0       	rjmp	.+140    	; 0x1caa <__stack+0xbab>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c1e:	20 e0       	ldi	r18, 0x00	; 0
    1c20:	30 e0       	ldi	r19, 0x00	; 0
    1c22:	40 e2       	ldi	r20, 0x20	; 32
    1c24:	51 e4       	ldi	r21, 0x41	; 65
    1c26:	69 ad       	ldd	r22, Y+57	; 0x39
    1c28:	7a ad       	ldd	r23, Y+58	; 0x3a
    1c2a:	8b ad       	ldd	r24, Y+59	; 0x3b
    1c2c:	9c ad       	ldd	r25, Y+60	; 0x3c
    1c2e:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    1c32:	dc 01       	movw	r26, r24
    1c34:	cb 01       	movw	r24, r22
    1c36:	8e 01       	movw	r16, r28
    1c38:	0f 5c       	subi	r16, 0xCF	; 207
    1c3a:	1d 4f       	sbci	r17, 0xFD	; 253
    1c3c:	bc 01       	movw	r22, r24
    1c3e:	cd 01       	movw	r24, r26
    1c40:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    1c44:	dc 01       	movw	r26, r24
    1c46:	cb 01       	movw	r24, r22
    1c48:	f8 01       	movw	r30, r16
    1c4a:	91 83       	std	Z+1, r25	; 0x01
    1c4c:	80 83       	st	Z, r24
    1c4e:	24 c0       	rjmp	.+72     	; 0x1c98 <__stack+0xb99>
    1c50:	ce 01       	movw	r24, r28
    1c52:	8d 5c       	subi	r24, 0xCD	; 205
    1c54:	9d 4f       	sbci	r25, 0xFD	; 253
    1c56:	20 e9       	ldi	r18, 0x90	; 144
    1c58:	31 e0       	ldi	r19, 0x01	; 1
    1c5a:	fc 01       	movw	r30, r24
    1c5c:	31 83       	std	Z+1, r19	; 0x01
    1c5e:	20 83       	st	Z, r18
    1c60:	ce 01       	movw	r24, r28
    1c62:	8d 5c       	subi	r24, 0xCD	; 205
    1c64:	9d 4f       	sbci	r25, 0xFD	; 253
    1c66:	fc 01       	movw	r30, r24
    1c68:	80 81       	ld	r24, Z
    1c6a:	91 81       	ldd	r25, Z+1	; 0x01
    1c6c:	01 97       	sbiw	r24, 0x01	; 1
    1c6e:	f1 f7       	brne	.-4      	; 0x1c6c <__stack+0xb6d>
    1c70:	9e 01       	movw	r18, r28
    1c72:	2d 5c       	subi	r18, 0xCD	; 205
    1c74:	3d 4f       	sbci	r19, 0xFD	; 253
    1c76:	f9 01       	movw	r30, r18
    1c78:	91 83       	std	Z+1, r25	; 0x01
    1c7a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c7c:	ce 01       	movw	r24, r28
    1c7e:	8f 5c       	subi	r24, 0xCF	; 207
    1c80:	9d 4f       	sbci	r25, 0xFD	; 253
    1c82:	9e 01       	movw	r18, r28
    1c84:	2f 5c       	subi	r18, 0xCF	; 207
    1c86:	3d 4f       	sbci	r19, 0xFD	; 253
    1c88:	f9 01       	movw	r30, r18
    1c8a:	20 81       	ld	r18, Z
    1c8c:	31 81       	ldd	r19, Z+1	; 0x01
    1c8e:	21 50       	subi	r18, 0x01	; 1
    1c90:	31 09       	sbc	r19, r1
    1c92:	fc 01       	movw	r30, r24
    1c94:	31 83       	std	Z+1, r19	; 0x01
    1c96:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c98:	ce 01       	movw	r24, r28
    1c9a:	8f 5c       	subi	r24, 0xCF	; 207
    1c9c:	9d 4f       	sbci	r25, 0xFD	; 253
    1c9e:	fc 01       	movw	r30, r24
    1ca0:	80 81       	ld	r24, Z
    1ca2:	91 81       	ldd	r25, Z+1	; 0x01
    1ca4:	89 2b       	or	r24, r25
    1ca6:	a1 f6       	brne	.-88     	; 0x1c50 <__stack+0xb51>
    1ca8:	2c c0       	rjmp	.+88     	; 0x1d02 <__stack+0xc03>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1caa:	8e 01       	movw	r16, r28
    1cac:	0f 5c       	subi	r16, 0xCF	; 207
    1cae:	1d 4f       	sbci	r17, 0xFD	; 253
    1cb0:	ce 01       	movw	r24, r28
    1cb2:	83 5d       	subi	r24, 0xD3	; 211
    1cb4:	9d 4f       	sbci	r25, 0xFD	; 253
    1cb6:	fc 01       	movw	r30, r24
    1cb8:	60 81       	ld	r22, Z
    1cba:	71 81       	ldd	r23, Z+1	; 0x01
    1cbc:	82 81       	ldd	r24, Z+2	; 0x02
    1cbe:	93 81       	ldd	r25, Z+3	; 0x03
    1cc0:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    1cc4:	dc 01       	movw	r26, r24
    1cc6:	cb 01       	movw	r24, r22
    1cc8:	f8 01       	movw	r30, r16
    1cca:	91 83       	std	Z+1, r25	; 0x01
    1ccc:	80 83       	st	Z, r24
    1cce:	ce 01       	movw	r24, r28
    1cd0:	8b 5c       	subi	r24, 0xCB	; 203
    1cd2:	9d 4f       	sbci	r25, 0xFD	; 253
    1cd4:	9e 01       	movw	r18, r28
    1cd6:	2f 5c       	subi	r18, 0xCF	; 207
    1cd8:	3d 4f       	sbci	r19, 0xFD	; 253
    1cda:	f9 01       	movw	r30, r18
    1cdc:	20 81       	ld	r18, Z
    1cde:	31 81       	ldd	r19, Z+1	; 0x01
    1ce0:	fc 01       	movw	r30, r24
    1ce2:	31 83       	std	Z+1, r19	; 0x01
    1ce4:	20 83       	st	Z, r18
    1ce6:	ce 01       	movw	r24, r28
    1ce8:	8b 5c       	subi	r24, 0xCB	; 203
    1cea:	9d 4f       	sbci	r25, 0xFD	; 253
    1cec:	fc 01       	movw	r30, r24
    1cee:	80 81       	ld	r24, Z
    1cf0:	91 81       	ldd	r25, Z+1	; 0x01
    1cf2:	01 97       	sbiw	r24, 0x01	; 1
    1cf4:	f1 f7       	brne	.-4      	; 0x1cf2 <__stack+0xbf3>
    1cf6:	9e 01       	movw	r18, r28
    1cf8:	2b 5c       	subi	r18, 0xCB	; 203
    1cfa:	3d 4f       	sbci	r19, 0xFD	; 253
    1cfc:	f9 01       	movw	r30, r18
    1cfe:	91 83       	std	Z+1, r25	; 0x01
    1d00:	80 83       	st	Z, r24
			_delay_ms(330);
			to_uARM("M2210 F450 T100\n");
    1d02:	89 e0       	ldi	r24, 0x09	; 9
    1d04:	92 e0       	ldi	r25, 0x02	; 2
    1d06:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    1d0a:	80 e0       	ldi	r24, 0x00	; 0
    1d0c:	90 e0       	ldi	r25, 0x00	; 0
    1d0e:	a6 e1       	ldi	r26, 0x16	; 22
    1d10:	b3 e4       	ldi	r27, 0x43	; 67
    1d12:	9e 01       	movw	r18, r28
    1d14:	23 5c       	subi	r18, 0xC3	; 195
    1d16:	3f 4f       	sbci	r19, 0xFF	; 255
    1d18:	f9 01       	movw	r30, r18
    1d1a:	80 83       	st	Z, r24
    1d1c:	91 83       	std	Z+1, r25	; 0x01
    1d1e:	a2 83       	std	Z+2, r26	; 0x02
    1d20:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1d22:	8e 01       	movw	r16, r28
    1d24:	0d 5d       	subi	r16, 0xDD	; 221
    1d26:	1d 4f       	sbci	r17, 0xFD	; 253
    1d28:	20 e0       	ldi	r18, 0x00	; 0
    1d2a:	30 e0       	ldi	r19, 0x00	; 0
    1d2c:	4a e7       	ldi	r20, 0x7A	; 122
    1d2e:	55 e4       	ldi	r21, 0x45	; 69
    1d30:	ce 01       	movw	r24, r28
    1d32:	cd 96       	adiw	r24, 0x3d	; 61
    1d34:	fc 01       	movw	r30, r24
    1d36:	60 81       	ld	r22, Z
    1d38:	71 81       	ldd	r23, Z+1	; 0x01
    1d3a:	82 81       	ldd	r24, Z+2	; 0x02
    1d3c:	93 81       	ldd	r25, Z+3	; 0x03
    1d3e:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    1d42:	dc 01       	movw	r26, r24
    1d44:	cb 01       	movw	r24, r22
    1d46:	f8 01       	movw	r30, r16
    1d48:	80 83       	st	Z, r24
    1d4a:	91 83       	std	Z+1, r25	; 0x01
    1d4c:	a2 83       	std	Z+2, r26	; 0x02
    1d4e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d50:	ce 01       	movw	r24, r28
    1d52:	8d 5d       	subi	r24, 0xDD	; 221
    1d54:	9d 4f       	sbci	r25, 0xFD	; 253
    1d56:	20 e0       	ldi	r18, 0x00	; 0
    1d58:	30 e0       	ldi	r19, 0x00	; 0
    1d5a:	40 e8       	ldi	r20, 0x80	; 128
    1d5c:	5f e3       	ldi	r21, 0x3F	; 63
    1d5e:	fc 01       	movw	r30, r24
    1d60:	60 81       	ld	r22, Z
    1d62:	71 81       	ldd	r23, Z+1	; 0x01
    1d64:	82 81       	ldd	r24, Z+2	; 0x02
    1d66:	93 81       	ldd	r25, Z+3	; 0x03
    1d68:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    1d6c:	88 23       	and	r24, r24
    1d6e:	4c f4       	brge	.+18     	; 0x1d82 <__stack+0xc83>
		__ticks = 1;
    1d70:	ce 01       	movw	r24, r28
    1d72:	89 5d       	subi	r24, 0xD9	; 217
    1d74:	9d 4f       	sbci	r25, 0xFD	; 253
    1d76:	21 e0       	ldi	r18, 0x01	; 1
    1d78:	30 e0       	ldi	r19, 0x00	; 0
    1d7a:	fc 01       	movw	r30, r24
    1d7c:	31 83       	std	Z+1, r19	; 0x01
    1d7e:	20 83       	st	Z, r18
    1d80:	6c c0       	rjmp	.+216    	; 0x1e5a <__stack+0xd5b>
	else if (__tmp > 65535)
    1d82:	ce 01       	movw	r24, r28
    1d84:	8d 5d       	subi	r24, 0xDD	; 221
    1d86:	9d 4f       	sbci	r25, 0xFD	; 253
    1d88:	20 e0       	ldi	r18, 0x00	; 0
    1d8a:	3f ef       	ldi	r19, 0xFF	; 255
    1d8c:	4f e7       	ldi	r20, 0x7F	; 127
    1d8e:	57 e4       	ldi	r21, 0x47	; 71
    1d90:	fc 01       	movw	r30, r24
    1d92:	60 81       	ld	r22, Z
    1d94:	71 81       	ldd	r23, Z+1	; 0x01
    1d96:	82 81       	ldd	r24, Z+2	; 0x02
    1d98:	93 81       	ldd	r25, Z+3	; 0x03
    1d9a:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    1d9e:	18 16       	cp	r1, r24
    1da0:	0c f0       	brlt	.+2      	; 0x1da4 <__stack+0xca5>
    1da2:	49 c0       	rjmp	.+146    	; 0x1e36 <__stack+0xd37>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1da4:	20 e0       	ldi	r18, 0x00	; 0
    1da6:	30 e0       	ldi	r19, 0x00	; 0
    1da8:	40 e2       	ldi	r20, 0x20	; 32
    1daa:	51 e4       	ldi	r21, 0x41	; 65
    1dac:	ce 01       	movw	r24, r28
    1dae:	cd 96       	adiw	r24, 0x3d	; 61
    1db0:	fc 01       	movw	r30, r24
    1db2:	60 81       	ld	r22, Z
    1db4:	71 81       	ldd	r23, Z+1	; 0x01
    1db6:	82 81       	ldd	r24, Z+2	; 0x02
    1db8:	93 81       	ldd	r25, Z+3	; 0x03
    1dba:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    1dbe:	dc 01       	movw	r26, r24
    1dc0:	cb 01       	movw	r24, r22
    1dc2:	8e 01       	movw	r16, r28
    1dc4:	09 5d       	subi	r16, 0xD9	; 217
    1dc6:	1d 4f       	sbci	r17, 0xFD	; 253
    1dc8:	bc 01       	movw	r22, r24
    1dca:	cd 01       	movw	r24, r26
    1dcc:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    1dd0:	dc 01       	movw	r26, r24
    1dd2:	cb 01       	movw	r24, r22
    1dd4:	f8 01       	movw	r30, r16
    1dd6:	91 83       	std	Z+1, r25	; 0x01
    1dd8:	80 83       	st	Z, r24
    1dda:	24 c0       	rjmp	.+72     	; 0x1e24 <__stack+0xd25>
    1ddc:	ce 01       	movw	r24, r28
    1dde:	87 5d       	subi	r24, 0xD7	; 215
    1de0:	9d 4f       	sbci	r25, 0xFD	; 253
    1de2:	20 e9       	ldi	r18, 0x90	; 144
    1de4:	31 e0       	ldi	r19, 0x01	; 1
    1de6:	fc 01       	movw	r30, r24
    1de8:	31 83       	std	Z+1, r19	; 0x01
    1dea:	20 83       	st	Z, r18
    1dec:	ce 01       	movw	r24, r28
    1dee:	87 5d       	subi	r24, 0xD7	; 215
    1df0:	9d 4f       	sbci	r25, 0xFD	; 253
    1df2:	fc 01       	movw	r30, r24
    1df4:	80 81       	ld	r24, Z
    1df6:	91 81       	ldd	r25, Z+1	; 0x01
    1df8:	01 97       	sbiw	r24, 0x01	; 1
    1dfa:	f1 f7       	brne	.-4      	; 0x1df8 <__stack+0xcf9>
    1dfc:	9e 01       	movw	r18, r28
    1dfe:	27 5d       	subi	r18, 0xD7	; 215
    1e00:	3d 4f       	sbci	r19, 0xFD	; 253
    1e02:	f9 01       	movw	r30, r18
    1e04:	91 83       	std	Z+1, r25	; 0x01
    1e06:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e08:	ce 01       	movw	r24, r28
    1e0a:	89 5d       	subi	r24, 0xD9	; 217
    1e0c:	9d 4f       	sbci	r25, 0xFD	; 253
    1e0e:	9e 01       	movw	r18, r28
    1e10:	29 5d       	subi	r18, 0xD9	; 217
    1e12:	3d 4f       	sbci	r19, 0xFD	; 253
    1e14:	f9 01       	movw	r30, r18
    1e16:	20 81       	ld	r18, Z
    1e18:	31 81       	ldd	r19, Z+1	; 0x01
    1e1a:	21 50       	subi	r18, 0x01	; 1
    1e1c:	31 09       	sbc	r19, r1
    1e1e:	fc 01       	movw	r30, r24
    1e20:	31 83       	std	Z+1, r19	; 0x01
    1e22:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e24:	ce 01       	movw	r24, r28
    1e26:	89 5d       	subi	r24, 0xD9	; 217
    1e28:	9d 4f       	sbci	r25, 0xFD	; 253
    1e2a:	fc 01       	movw	r30, r24
    1e2c:	80 81       	ld	r24, Z
    1e2e:	91 81       	ldd	r25, Z+1	; 0x01
    1e30:	89 2b       	or	r24, r25
    1e32:	a1 f6       	brne	.-88     	; 0x1ddc <__stack+0xcdd>
    1e34:	2c c0       	rjmp	.+88     	; 0x1e8e <__stack+0xd8f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e36:	8e 01       	movw	r16, r28
    1e38:	09 5d       	subi	r16, 0xD9	; 217
    1e3a:	1d 4f       	sbci	r17, 0xFD	; 253
    1e3c:	ce 01       	movw	r24, r28
    1e3e:	8d 5d       	subi	r24, 0xDD	; 221
    1e40:	9d 4f       	sbci	r25, 0xFD	; 253
    1e42:	fc 01       	movw	r30, r24
    1e44:	60 81       	ld	r22, Z
    1e46:	71 81       	ldd	r23, Z+1	; 0x01
    1e48:	82 81       	ldd	r24, Z+2	; 0x02
    1e4a:	93 81       	ldd	r25, Z+3	; 0x03
    1e4c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    1e50:	dc 01       	movw	r26, r24
    1e52:	cb 01       	movw	r24, r22
    1e54:	f8 01       	movw	r30, r16
    1e56:	91 83       	std	Z+1, r25	; 0x01
    1e58:	80 83       	st	Z, r24
    1e5a:	ce 01       	movw	r24, r28
    1e5c:	85 5d       	subi	r24, 0xD5	; 213
    1e5e:	9d 4f       	sbci	r25, 0xFD	; 253
    1e60:	9e 01       	movw	r18, r28
    1e62:	29 5d       	subi	r18, 0xD9	; 217
    1e64:	3d 4f       	sbci	r19, 0xFD	; 253
    1e66:	f9 01       	movw	r30, r18
    1e68:	20 81       	ld	r18, Z
    1e6a:	31 81       	ldd	r19, Z+1	; 0x01
    1e6c:	fc 01       	movw	r30, r24
    1e6e:	31 83       	std	Z+1, r19	; 0x01
    1e70:	20 83       	st	Z, r18
    1e72:	ce 01       	movw	r24, r28
    1e74:	85 5d       	subi	r24, 0xD5	; 213
    1e76:	9d 4f       	sbci	r25, 0xFD	; 253
    1e78:	fc 01       	movw	r30, r24
    1e7a:	80 81       	ld	r24, Z
    1e7c:	91 81       	ldd	r25, Z+1	; 0x01
    1e7e:	01 97       	sbiw	r24, 0x01	; 1
    1e80:	f1 f7       	brne	.-4      	; 0x1e7e <__stack+0xd7f>
    1e82:	9e 01       	movw	r18, r28
    1e84:	25 5d       	subi	r18, 0xD5	; 213
    1e86:	3d 4f       	sbci	r19, 0xFD	; 253
    1e88:	f9 01       	movw	r30, r18
    1e8a:	91 83       	std	Z+1, r25	; 0x01
    1e8c:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F430 T100\n");
    1e8e:	8a e1       	ldi	r24, 0x1A	; 26
    1e90:	92 e0       	ldi	r25, 0x02	; 2
    1e92:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    1e96:	9e 01       	movw	r18, r28
    1e98:	2f 5b       	subi	r18, 0xBF	; 191
    1e9a:	3f 4f       	sbci	r19, 0xFF	; 255
    1e9c:	80 e0       	ldi	r24, 0x00	; 0
    1e9e:	90 e0       	ldi	r25, 0x00	; 0
    1ea0:	a6 e9       	ldi	r26, 0x96	; 150
    1ea2:	b3 e4       	ldi	r27, 0x43	; 67
    1ea4:	f9 01       	movw	r30, r18
    1ea6:	80 83       	st	Z, r24
    1ea8:	91 83       	std	Z+1, r25	; 0x01
    1eaa:	a2 83       	std	Z+2, r26	; 0x02
    1eac:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1eae:	8e 01       	movw	r16, r28
    1eb0:	07 5e       	subi	r16, 0xE7	; 231
    1eb2:	1d 4f       	sbci	r17, 0xFD	; 253
    1eb4:	ce 01       	movw	r24, r28
    1eb6:	8f 5b       	subi	r24, 0xBF	; 191
    1eb8:	9f 4f       	sbci	r25, 0xFF	; 255
    1eba:	20 e0       	ldi	r18, 0x00	; 0
    1ebc:	30 e0       	ldi	r19, 0x00	; 0
    1ebe:	4a e7       	ldi	r20, 0x7A	; 122
    1ec0:	55 e4       	ldi	r21, 0x45	; 69
    1ec2:	fc 01       	movw	r30, r24
    1ec4:	60 81       	ld	r22, Z
    1ec6:	71 81       	ldd	r23, Z+1	; 0x01
    1ec8:	82 81       	ldd	r24, Z+2	; 0x02
    1eca:	93 81       	ldd	r25, Z+3	; 0x03
    1ecc:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    1ed0:	dc 01       	movw	r26, r24
    1ed2:	cb 01       	movw	r24, r22
    1ed4:	f8 01       	movw	r30, r16
    1ed6:	80 83       	st	Z, r24
    1ed8:	91 83       	std	Z+1, r25	; 0x01
    1eda:	a2 83       	std	Z+2, r26	; 0x02
    1edc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ede:	ce 01       	movw	r24, r28
    1ee0:	87 5e       	subi	r24, 0xE7	; 231
    1ee2:	9d 4f       	sbci	r25, 0xFD	; 253
    1ee4:	20 e0       	ldi	r18, 0x00	; 0
    1ee6:	30 e0       	ldi	r19, 0x00	; 0
    1ee8:	40 e8       	ldi	r20, 0x80	; 128
    1eea:	5f e3       	ldi	r21, 0x3F	; 63
    1eec:	fc 01       	movw	r30, r24
    1eee:	60 81       	ld	r22, Z
    1ef0:	71 81       	ldd	r23, Z+1	; 0x01
    1ef2:	82 81       	ldd	r24, Z+2	; 0x02
    1ef4:	93 81       	ldd	r25, Z+3	; 0x03
    1ef6:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    1efa:	88 23       	and	r24, r24
    1efc:	4c f4       	brge	.+18     	; 0x1f10 <__stack+0xe11>
		__ticks = 1;
    1efe:	ce 01       	movw	r24, r28
    1f00:	83 5e       	subi	r24, 0xE3	; 227
    1f02:	9d 4f       	sbci	r25, 0xFD	; 253
    1f04:	21 e0       	ldi	r18, 0x01	; 1
    1f06:	30 e0       	ldi	r19, 0x00	; 0
    1f08:	fc 01       	movw	r30, r24
    1f0a:	31 83       	std	Z+1, r19	; 0x01
    1f0c:	20 83       	st	Z, r18
    1f0e:	6d c0       	rjmp	.+218    	; 0x1fea <__stack+0xeeb>
	else if (__tmp > 65535)
    1f10:	ce 01       	movw	r24, r28
    1f12:	87 5e       	subi	r24, 0xE7	; 231
    1f14:	9d 4f       	sbci	r25, 0xFD	; 253
    1f16:	20 e0       	ldi	r18, 0x00	; 0
    1f18:	3f ef       	ldi	r19, 0xFF	; 255
    1f1a:	4f e7       	ldi	r20, 0x7F	; 127
    1f1c:	57 e4       	ldi	r21, 0x47	; 71
    1f1e:	fc 01       	movw	r30, r24
    1f20:	60 81       	ld	r22, Z
    1f22:	71 81       	ldd	r23, Z+1	; 0x01
    1f24:	82 81       	ldd	r24, Z+2	; 0x02
    1f26:	93 81       	ldd	r25, Z+3	; 0x03
    1f28:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    1f2c:	18 16       	cp	r1, r24
    1f2e:	0c f0       	brlt	.+2      	; 0x1f32 <__stack+0xe33>
    1f30:	4a c0       	rjmp	.+148    	; 0x1fc6 <__stack+0xec7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f32:	ce 01       	movw	r24, r28
    1f34:	8f 5b       	subi	r24, 0xBF	; 191
    1f36:	9f 4f       	sbci	r25, 0xFF	; 255
    1f38:	20 e0       	ldi	r18, 0x00	; 0
    1f3a:	30 e0       	ldi	r19, 0x00	; 0
    1f3c:	40 e2       	ldi	r20, 0x20	; 32
    1f3e:	51 e4       	ldi	r21, 0x41	; 65
    1f40:	fc 01       	movw	r30, r24
    1f42:	60 81       	ld	r22, Z
    1f44:	71 81       	ldd	r23, Z+1	; 0x01
    1f46:	82 81       	ldd	r24, Z+2	; 0x02
    1f48:	93 81       	ldd	r25, Z+3	; 0x03
    1f4a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    1f4e:	dc 01       	movw	r26, r24
    1f50:	cb 01       	movw	r24, r22
    1f52:	8e 01       	movw	r16, r28
    1f54:	03 5e       	subi	r16, 0xE3	; 227
    1f56:	1d 4f       	sbci	r17, 0xFD	; 253
    1f58:	bc 01       	movw	r22, r24
    1f5a:	cd 01       	movw	r24, r26
    1f5c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    1f60:	dc 01       	movw	r26, r24
    1f62:	cb 01       	movw	r24, r22
    1f64:	f8 01       	movw	r30, r16
    1f66:	91 83       	std	Z+1, r25	; 0x01
    1f68:	80 83       	st	Z, r24
    1f6a:	24 c0       	rjmp	.+72     	; 0x1fb4 <__stack+0xeb5>
    1f6c:	ce 01       	movw	r24, r28
    1f6e:	81 5e       	subi	r24, 0xE1	; 225
    1f70:	9d 4f       	sbci	r25, 0xFD	; 253
    1f72:	20 e9       	ldi	r18, 0x90	; 144
    1f74:	31 e0       	ldi	r19, 0x01	; 1
    1f76:	fc 01       	movw	r30, r24
    1f78:	31 83       	std	Z+1, r19	; 0x01
    1f7a:	20 83       	st	Z, r18
    1f7c:	ce 01       	movw	r24, r28
    1f7e:	81 5e       	subi	r24, 0xE1	; 225
    1f80:	9d 4f       	sbci	r25, 0xFD	; 253
    1f82:	fc 01       	movw	r30, r24
    1f84:	80 81       	ld	r24, Z
    1f86:	91 81       	ldd	r25, Z+1	; 0x01
    1f88:	01 97       	sbiw	r24, 0x01	; 1
    1f8a:	f1 f7       	brne	.-4      	; 0x1f88 <__stack+0xe89>
    1f8c:	9e 01       	movw	r18, r28
    1f8e:	21 5e       	subi	r18, 0xE1	; 225
    1f90:	3d 4f       	sbci	r19, 0xFD	; 253
    1f92:	f9 01       	movw	r30, r18
    1f94:	91 83       	std	Z+1, r25	; 0x01
    1f96:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f98:	ce 01       	movw	r24, r28
    1f9a:	83 5e       	subi	r24, 0xE3	; 227
    1f9c:	9d 4f       	sbci	r25, 0xFD	; 253
    1f9e:	9e 01       	movw	r18, r28
    1fa0:	23 5e       	subi	r18, 0xE3	; 227
    1fa2:	3d 4f       	sbci	r19, 0xFD	; 253
    1fa4:	f9 01       	movw	r30, r18
    1fa6:	20 81       	ld	r18, Z
    1fa8:	31 81       	ldd	r19, Z+1	; 0x01
    1faa:	21 50       	subi	r18, 0x01	; 1
    1fac:	31 09       	sbc	r19, r1
    1fae:	fc 01       	movw	r30, r24
    1fb0:	31 83       	std	Z+1, r19	; 0x01
    1fb2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1fb4:	ce 01       	movw	r24, r28
    1fb6:	83 5e       	subi	r24, 0xE3	; 227
    1fb8:	9d 4f       	sbci	r25, 0xFD	; 253
    1fba:	fc 01       	movw	r30, r24
    1fbc:	80 81       	ld	r24, Z
    1fbe:	91 81       	ldd	r25, Z+1	; 0x01
    1fc0:	89 2b       	or	r24, r25
    1fc2:	a1 f6       	brne	.-88     	; 0x1f6c <__stack+0xe6d>
    1fc4:	2c c0       	rjmp	.+88     	; 0x201e <__stack+0xf1f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1fc6:	8e 01       	movw	r16, r28
    1fc8:	03 5e       	subi	r16, 0xE3	; 227
    1fca:	1d 4f       	sbci	r17, 0xFD	; 253
    1fcc:	ce 01       	movw	r24, r28
    1fce:	87 5e       	subi	r24, 0xE7	; 231
    1fd0:	9d 4f       	sbci	r25, 0xFD	; 253
    1fd2:	fc 01       	movw	r30, r24
    1fd4:	60 81       	ld	r22, Z
    1fd6:	71 81       	ldd	r23, Z+1	; 0x01
    1fd8:	82 81       	ldd	r24, Z+2	; 0x02
    1fda:	93 81       	ldd	r25, Z+3	; 0x03
    1fdc:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    1fe0:	dc 01       	movw	r26, r24
    1fe2:	cb 01       	movw	r24, r22
    1fe4:	f8 01       	movw	r30, r16
    1fe6:	91 83       	std	Z+1, r25	; 0x01
    1fe8:	80 83       	st	Z, r24
    1fea:	ce 01       	movw	r24, r28
    1fec:	8f 5d       	subi	r24, 0xDF	; 223
    1fee:	9d 4f       	sbci	r25, 0xFD	; 253
    1ff0:	9e 01       	movw	r18, r28
    1ff2:	23 5e       	subi	r18, 0xE3	; 227
    1ff4:	3d 4f       	sbci	r19, 0xFD	; 253
    1ff6:	f9 01       	movw	r30, r18
    1ff8:	20 81       	ld	r18, Z
    1ffa:	31 81       	ldd	r19, Z+1	; 0x01
    1ffc:	fc 01       	movw	r30, r24
    1ffe:	31 83       	std	Z+1, r19	; 0x01
    2000:	20 83       	st	Z, r18
    2002:	ce 01       	movw	r24, r28
    2004:	8f 5d       	subi	r24, 0xDF	; 223
    2006:	9d 4f       	sbci	r25, 0xFD	; 253
    2008:	fc 01       	movw	r30, r24
    200a:	80 81       	ld	r24, Z
    200c:	91 81       	ldd	r25, Z+1	; 0x01
    200e:	01 97       	sbiw	r24, 0x01	; 1
    2010:	f1 f7       	brne	.-4      	; 0x200e <__stack+0xf0f>
    2012:	9e 01       	movw	r18, r28
    2014:	2f 5d       	subi	r18, 0xDF	; 223
    2016:	3d 4f       	sbci	r19, 0xFD	; 253
    2018:	f9 01       	movw	r30, r18
    201a:	91 83       	std	Z+1, r25	; 0x01
    201c:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F380 T100\n");
    201e:	86 ec       	ldi	r24, 0xC6	; 198
    2020:	91 e0       	ldi	r25, 0x01	; 1
    2022:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    2026:	9e 01       	movw	r18, r28
    2028:	2b 5b       	subi	r18, 0xBB	; 187
    202a:	3f 4f       	sbci	r19, 0xFF	; 255
    202c:	80 e0       	ldi	r24, 0x00	; 0
    202e:	90 e0       	ldi	r25, 0x00	; 0
    2030:	a8 e4       	ldi	r26, 0x48	; 72
    2032:	b3 e4       	ldi	r27, 0x43	; 67
    2034:	f9 01       	movw	r30, r18
    2036:	80 83       	st	Z, r24
    2038:	91 83       	std	Z+1, r25	; 0x01
    203a:	a2 83       	std	Z+2, r26	; 0x02
    203c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    203e:	8e 01       	movw	r16, r28
    2040:	01 5f       	subi	r16, 0xF1	; 241
    2042:	1d 4f       	sbci	r17, 0xFD	; 253
    2044:	ce 01       	movw	r24, r28
    2046:	8b 5b       	subi	r24, 0xBB	; 187
    2048:	9f 4f       	sbci	r25, 0xFF	; 255
    204a:	20 e0       	ldi	r18, 0x00	; 0
    204c:	30 e0       	ldi	r19, 0x00	; 0
    204e:	4a e7       	ldi	r20, 0x7A	; 122
    2050:	55 e4       	ldi	r21, 0x45	; 69
    2052:	fc 01       	movw	r30, r24
    2054:	60 81       	ld	r22, Z
    2056:	71 81       	ldd	r23, Z+1	; 0x01
    2058:	82 81       	ldd	r24, Z+2	; 0x02
    205a:	93 81       	ldd	r25, Z+3	; 0x03
    205c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    2060:	dc 01       	movw	r26, r24
    2062:	cb 01       	movw	r24, r22
    2064:	f8 01       	movw	r30, r16
    2066:	80 83       	st	Z, r24
    2068:	91 83       	std	Z+1, r25	; 0x01
    206a:	a2 83       	std	Z+2, r26	; 0x02
    206c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    206e:	ce 01       	movw	r24, r28
    2070:	81 5f       	subi	r24, 0xF1	; 241
    2072:	9d 4f       	sbci	r25, 0xFD	; 253
    2074:	20 e0       	ldi	r18, 0x00	; 0
    2076:	30 e0       	ldi	r19, 0x00	; 0
    2078:	40 e8       	ldi	r20, 0x80	; 128
    207a:	5f e3       	ldi	r21, 0x3F	; 63
    207c:	fc 01       	movw	r30, r24
    207e:	60 81       	ld	r22, Z
    2080:	71 81       	ldd	r23, Z+1	; 0x01
    2082:	82 81       	ldd	r24, Z+2	; 0x02
    2084:	93 81       	ldd	r25, Z+3	; 0x03
    2086:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    208a:	88 23       	and	r24, r24
    208c:	4c f4       	brge	.+18     	; 0x20a0 <__stack+0xfa1>
		__ticks = 1;
    208e:	ce 01       	movw	r24, r28
    2090:	8d 5e       	subi	r24, 0xED	; 237
    2092:	9d 4f       	sbci	r25, 0xFD	; 253
    2094:	21 e0       	ldi	r18, 0x01	; 1
    2096:	30 e0       	ldi	r19, 0x00	; 0
    2098:	fc 01       	movw	r30, r24
    209a:	31 83       	std	Z+1, r19	; 0x01
    209c:	20 83       	st	Z, r18
    209e:	6d c0       	rjmp	.+218    	; 0x217a <__stack+0x107b>
	else if (__tmp > 65535)
    20a0:	ce 01       	movw	r24, r28
    20a2:	81 5f       	subi	r24, 0xF1	; 241
    20a4:	9d 4f       	sbci	r25, 0xFD	; 253
    20a6:	20 e0       	ldi	r18, 0x00	; 0
    20a8:	3f ef       	ldi	r19, 0xFF	; 255
    20aa:	4f e7       	ldi	r20, 0x7F	; 127
    20ac:	57 e4       	ldi	r21, 0x47	; 71
    20ae:	fc 01       	movw	r30, r24
    20b0:	60 81       	ld	r22, Z
    20b2:	71 81       	ldd	r23, Z+1	; 0x01
    20b4:	82 81       	ldd	r24, Z+2	; 0x02
    20b6:	93 81       	ldd	r25, Z+3	; 0x03
    20b8:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    20bc:	18 16       	cp	r1, r24
    20be:	0c f0       	brlt	.+2      	; 0x20c2 <__stack+0xfc3>
    20c0:	4a c0       	rjmp	.+148    	; 0x2156 <__stack+0x1057>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20c2:	ce 01       	movw	r24, r28
    20c4:	8b 5b       	subi	r24, 0xBB	; 187
    20c6:	9f 4f       	sbci	r25, 0xFF	; 255
    20c8:	20 e0       	ldi	r18, 0x00	; 0
    20ca:	30 e0       	ldi	r19, 0x00	; 0
    20cc:	40 e2       	ldi	r20, 0x20	; 32
    20ce:	51 e4       	ldi	r21, 0x41	; 65
    20d0:	fc 01       	movw	r30, r24
    20d2:	60 81       	ld	r22, Z
    20d4:	71 81       	ldd	r23, Z+1	; 0x01
    20d6:	82 81       	ldd	r24, Z+2	; 0x02
    20d8:	93 81       	ldd	r25, Z+3	; 0x03
    20da:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    20de:	dc 01       	movw	r26, r24
    20e0:	cb 01       	movw	r24, r22
    20e2:	8e 01       	movw	r16, r28
    20e4:	0d 5e       	subi	r16, 0xED	; 237
    20e6:	1d 4f       	sbci	r17, 0xFD	; 253
    20e8:	bc 01       	movw	r22, r24
    20ea:	cd 01       	movw	r24, r26
    20ec:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    20f0:	dc 01       	movw	r26, r24
    20f2:	cb 01       	movw	r24, r22
    20f4:	f8 01       	movw	r30, r16
    20f6:	91 83       	std	Z+1, r25	; 0x01
    20f8:	80 83       	st	Z, r24
    20fa:	24 c0       	rjmp	.+72     	; 0x2144 <__stack+0x1045>
    20fc:	ce 01       	movw	r24, r28
    20fe:	8b 5e       	subi	r24, 0xEB	; 235
    2100:	9d 4f       	sbci	r25, 0xFD	; 253
    2102:	20 e9       	ldi	r18, 0x90	; 144
    2104:	31 e0       	ldi	r19, 0x01	; 1
    2106:	fc 01       	movw	r30, r24
    2108:	31 83       	std	Z+1, r19	; 0x01
    210a:	20 83       	st	Z, r18
    210c:	ce 01       	movw	r24, r28
    210e:	8b 5e       	subi	r24, 0xEB	; 235
    2110:	9d 4f       	sbci	r25, 0xFD	; 253
    2112:	fc 01       	movw	r30, r24
    2114:	80 81       	ld	r24, Z
    2116:	91 81       	ldd	r25, Z+1	; 0x01
    2118:	01 97       	sbiw	r24, 0x01	; 1
    211a:	f1 f7       	brne	.-4      	; 0x2118 <__stack+0x1019>
    211c:	9e 01       	movw	r18, r28
    211e:	2b 5e       	subi	r18, 0xEB	; 235
    2120:	3d 4f       	sbci	r19, 0xFD	; 253
    2122:	f9 01       	movw	r30, r18
    2124:	91 83       	std	Z+1, r25	; 0x01
    2126:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2128:	ce 01       	movw	r24, r28
    212a:	8d 5e       	subi	r24, 0xED	; 237
    212c:	9d 4f       	sbci	r25, 0xFD	; 253
    212e:	9e 01       	movw	r18, r28
    2130:	2d 5e       	subi	r18, 0xED	; 237
    2132:	3d 4f       	sbci	r19, 0xFD	; 253
    2134:	f9 01       	movw	r30, r18
    2136:	20 81       	ld	r18, Z
    2138:	31 81       	ldd	r19, Z+1	; 0x01
    213a:	21 50       	subi	r18, 0x01	; 1
    213c:	31 09       	sbc	r19, r1
    213e:	fc 01       	movw	r30, r24
    2140:	31 83       	std	Z+1, r19	; 0x01
    2142:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2144:	ce 01       	movw	r24, r28
    2146:	8d 5e       	subi	r24, 0xED	; 237
    2148:	9d 4f       	sbci	r25, 0xFD	; 253
    214a:	fc 01       	movw	r30, r24
    214c:	80 81       	ld	r24, Z
    214e:	91 81       	ldd	r25, Z+1	; 0x01
    2150:	89 2b       	or	r24, r25
    2152:	a1 f6       	brne	.-88     	; 0x20fc <__stack+0xffd>
    2154:	2c c0       	rjmp	.+88     	; 0x21ae <__stack+0x10af>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2156:	8e 01       	movw	r16, r28
    2158:	0d 5e       	subi	r16, 0xED	; 237
    215a:	1d 4f       	sbci	r17, 0xFD	; 253
    215c:	ce 01       	movw	r24, r28
    215e:	81 5f       	subi	r24, 0xF1	; 241
    2160:	9d 4f       	sbci	r25, 0xFD	; 253
    2162:	fc 01       	movw	r30, r24
    2164:	60 81       	ld	r22, Z
    2166:	71 81       	ldd	r23, Z+1	; 0x01
    2168:	82 81       	ldd	r24, Z+2	; 0x02
    216a:	93 81       	ldd	r25, Z+3	; 0x03
    216c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    2170:	dc 01       	movw	r26, r24
    2172:	cb 01       	movw	r24, r22
    2174:	f8 01       	movw	r30, r16
    2176:	91 83       	std	Z+1, r25	; 0x01
    2178:	80 83       	st	Z, r24
    217a:	ce 01       	movw	r24, r28
    217c:	89 5e       	subi	r24, 0xE9	; 233
    217e:	9d 4f       	sbci	r25, 0xFD	; 253
    2180:	9e 01       	movw	r18, r28
    2182:	2d 5e       	subi	r18, 0xED	; 237
    2184:	3d 4f       	sbci	r19, 0xFD	; 253
    2186:	f9 01       	movw	r30, r18
    2188:	20 81       	ld	r18, Z
    218a:	31 81       	ldd	r19, Z+1	; 0x01
    218c:	fc 01       	movw	r30, r24
    218e:	31 83       	std	Z+1, r19	; 0x01
    2190:	20 83       	st	Z, r18
    2192:	ce 01       	movw	r24, r28
    2194:	89 5e       	subi	r24, 0xE9	; 233
    2196:	9d 4f       	sbci	r25, 0xFD	; 253
    2198:	fc 01       	movw	r30, r24
    219a:	80 81       	ld	r24, Z
    219c:	91 81       	ldd	r25, Z+1	; 0x01
    219e:	01 97       	sbiw	r24, 0x01	; 1
    21a0:	f1 f7       	brne	.-4      	; 0x219e <__stack+0x109f>
    21a2:	9e 01       	movw	r18, r28
    21a4:	29 5e       	subi	r18, 0xE9	; 233
    21a6:	3d 4f       	sbci	r19, 0xFD	; 253
    21a8:	f9 01       	movw	r30, r18
    21aa:	91 83       	std	Z+1, r25	; 0x01
    21ac:	80 83       	st	Z, r24
			_delay_ms(200);
			to_uARM("M2210 F660 T80\n");
    21ae:	8b e2       	ldi	r24, 0x2B	; 43
    21b0:	92 e0       	ldi	r25, 0x02	; 2
    21b2:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    21b6:	9e 01       	movw	r18, r28
    21b8:	27 5b       	subi	r18, 0xB7	; 183
    21ba:	3f 4f       	sbci	r19, 0xFF	; 255
    21bc:	80 e0       	ldi	r24, 0x00	; 0
    21be:	90 e0       	ldi	r25, 0x00	; 0
    21c0:	a8 e4       	ldi	r26, 0x48	; 72
    21c2:	b3 e4       	ldi	r27, 0x43	; 67
    21c4:	f9 01       	movw	r30, r18
    21c6:	80 83       	st	Z, r24
    21c8:	91 83       	std	Z+1, r25	; 0x01
    21ca:	a2 83       	std	Z+2, r26	; 0x02
    21cc:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    21ce:	8e 01       	movw	r16, r28
    21d0:	0b 5f       	subi	r16, 0xFB	; 251
    21d2:	1d 4f       	sbci	r17, 0xFD	; 253
    21d4:	ce 01       	movw	r24, r28
    21d6:	87 5b       	subi	r24, 0xB7	; 183
    21d8:	9f 4f       	sbci	r25, 0xFF	; 255
    21da:	20 e0       	ldi	r18, 0x00	; 0
    21dc:	30 e0       	ldi	r19, 0x00	; 0
    21de:	4a e7       	ldi	r20, 0x7A	; 122
    21e0:	55 e4       	ldi	r21, 0x45	; 69
    21e2:	fc 01       	movw	r30, r24
    21e4:	60 81       	ld	r22, Z
    21e6:	71 81       	ldd	r23, Z+1	; 0x01
    21e8:	82 81       	ldd	r24, Z+2	; 0x02
    21ea:	93 81       	ldd	r25, Z+3	; 0x03
    21ec:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    21f0:	dc 01       	movw	r26, r24
    21f2:	cb 01       	movw	r24, r22
    21f4:	f8 01       	movw	r30, r16
    21f6:	80 83       	st	Z, r24
    21f8:	91 83       	std	Z+1, r25	; 0x01
    21fa:	a2 83       	std	Z+2, r26	; 0x02
    21fc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    21fe:	ce 01       	movw	r24, r28
    2200:	8b 5f       	subi	r24, 0xFB	; 251
    2202:	9d 4f       	sbci	r25, 0xFD	; 253
    2204:	20 e0       	ldi	r18, 0x00	; 0
    2206:	30 e0       	ldi	r19, 0x00	; 0
    2208:	40 e8       	ldi	r20, 0x80	; 128
    220a:	5f e3       	ldi	r21, 0x3F	; 63
    220c:	fc 01       	movw	r30, r24
    220e:	60 81       	ld	r22, Z
    2210:	71 81       	ldd	r23, Z+1	; 0x01
    2212:	82 81       	ldd	r24, Z+2	; 0x02
    2214:	93 81       	ldd	r25, Z+3	; 0x03
    2216:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    221a:	88 23       	and	r24, r24
    221c:	4c f4       	brge	.+18     	; 0x2230 <__stack+0x1131>
		__ticks = 1;
    221e:	ce 01       	movw	r24, r28
    2220:	87 5f       	subi	r24, 0xF7	; 247
    2222:	9d 4f       	sbci	r25, 0xFD	; 253
    2224:	21 e0       	ldi	r18, 0x01	; 1
    2226:	30 e0       	ldi	r19, 0x00	; 0
    2228:	fc 01       	movw	r30, r24
    222a:	31 83       	std	Z+1, r19	; 0x01
    222c:	20 83       	st	Z, r18
    222e:	6d c0       	rjmp	.+218    	; 0x230a <__stack+0x120b>
	else if (__tmp > 65535)
    2230:	ce 01       	movw	r24, r28
    2232:	8b 5f       	subi	r24, 0xFB	; 251
    2234:	9d 4f       	sbci	r25, 0xFD	; 253
    2236:	20 e0       	ldi	r18, 0x00	; 0
    2238:	3f ef       	ldi	r19, 0xFF	; 255
    223a:	4f e7       	ldi	r20, 0x7F	; 127
    223c:	57 e4       	ldi	r21, 0x47	; 71
    223e:	fc 01       	movw	r30, r24
    2240:	60 81       	ld	r22, Z
    2242:	71 81       	ldd	r23, Z+1	; 0x01
    2244:	82 81       	ldd	r24, Z+2	; 0x02
    2246:	93 81       	ldd	r25, Z+3	; 0x03
    2248:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    224c:	18 16       	cp	r1, r24
    224e:	0c f0       	brlt	.+2      	; 0x2252 <__stack+0x1153>
    2250:	4a c0       	rjmp	.+148    	; 0x22e6 <__stack+0x11e7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2252:	ce 01       	movw	r24, r28
    2254:	87 5b       	subi	r24, 0xB7	; 183
    2256:	9f 4f       	sbci	r25, 0xFF	; 255
    2258:	20 e0       	ldi	r18, 0x00	; 0
    225a:	30 e0       	ldi	r19, 0x00	; 0
    225c:	40 e2       	ldi	r20, 0x20	; 32
    225e:	51 e4       	ldi	r21, 0x41	; 65
    2260:	fc 01       	movw	r30, r24
    2262:	60 81       	ld	r22, Z
    2264:	71 81       	ldd	r23, Z+1	; 0x01
    2266:	82 81       	ldd	r24, Z+2	; 0x02
    2268:	93 81       	ldd	r25, Z+3	; 0x03
    226a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    226e:	dc 01       	movw	r26, r24
    2270:	cb 01       	movw	r24, r22
    2272:	8e 01       	movw	r16, r28
    2274:	07 5f       	subi	r16, 0xF7	; 247
    2276:	1d 4f       	sbci	r17, 0xFD	; 253
    2278:	bc 01       	movw	r22, r24
    227a:	cd 01       	movw	r24, r26
    227c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    2280:	dc 01       	movw	r26, r24
    2282:	cb 01       	movw	r24, r22
    2284:	f8 01       	movw	r30, r16
    2286:	91 83       	std	Z+1, r25	; 0x01
    2288:	80 83       	st	Z, r24
    228a:	24 c0       	rjmp	.+72     	; 0x22d4 <__stack+0x11d5>
    228c:	ce 01       	movw	r24, r28
    228e:	85 5f       	subi	r24, 0xF5	; 245
    2290:	9d 4f       	sbci	r25, 0xFD	; 253
    2292:	20 e9       	ldi	r18, 0x90	; 144
    2294:	31 e0       	ldi	r19, 0x01	; 1
    2296:	fc 01       	movw	r30, r24
    2298:	31 83       	std	Z+1, r19	; 0x01
    229a:	20 83       	st	Z, r18
    229c:	ce 01       	movw	r24, r28
    229e:	85 5f       	subi	r24, 0xF5	; 245
    22a0:	9d 4f       	sbci	r25, 0xFD	; 253
    22a2:	fc 01       	movw	r30, r24
    22a4:	80 81       	ld	r24, Z
    22a6:	91 81       	ldd	r25, Z+1	; 0x01
    22a8:	01 97       	sbiw	r24, 0x01	; 1
    22aa:	f1 f7       	brne	.-4      	; 0x22a8 <__stack+0x11a9>
    22ac:	9e 01       	movw	r18, r28
    22ae:	25 5f       	subi	r18, 0xF5	; 245
    22b0:	3d 4f       	sbci	r19, 0xFD	; 253
    22b2:	f9 01       	movw	r30, r18
    22b4:	91 83       	std	Z+1, r25	; 0x01
    22b6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22b8:	ce 01       	movw	r24, r28
    22ba:	87 5f       	subi	r24, 0xF7	; 247
    22bc:	9d 4f       	sbci	r25, 0xFD	; 253
    22be:	9e 01       	movw	r18, r28
    22c0:	27 5f       	subi	r18, 0xF7	; 247
    22c2:	3d 4f       	sbci	r19, 0xFD	; 253
    22c4:	f9 01       	movw	r30, r18
    22c6:	20 81       	ld	r18, Z
    22c8:	31 81       	ldd	r19, Z+1	; 0x01
    22ca:	21 50       	subi	r18, 0x01	; 1
    22cc:	31 09       	sbc	r19, r1
    22ce:	fc 01       	movw	r30, r24
    22d0:	31 83       	std	Z+1, r19	; 0x01
    22d2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22d4:	ce 01       	movw	r24, r28
    22d6:	87 5f       	subi	r24, 0xF7	; 247
    22d8:	9d 4f       	sbci	r25, 0xFD	; 253
    22da:	fc 01       	movw	r30, r24
    22dc:	80 81       	ld	r24, Z
    22de:	91 81       	ldd	r25, Z+1	; 0x01
    22e0:	89 2b       	or	r24, r25
    22e2:	a1 f6       	brne	.-88     	; 0x228c <__stack+0x118d>
    22e4:	2c c0       	rjmp	.+88     	; 0x233e <__stack+0x123f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22e6:	8e 01       	movw	r16, r28
    22e8:	07 5f       	subi	r16, 0xF7	; 247
    22ea:	1d 4f       	sbci	r17, 0xFD	; 253
    22ec:	ce 01       	movw	r24, r28
    22ee:	8b 5f       	subi	r24, 0xFB	; 251
    22f0:	9d 4f       	sbci	r25, 0xFD	; 253
    22f2:	fc 01       	movw	r30, r24
    22f4:	60 81       	ld	r22, Z
    22f6:	71 81       	ldd	r23, Z+1	; 0x01
    22f8:	82 81       	ldd	r24, Z+2	; 0x02
    22fa:	93 81       	ldd	r25, Z+3	; 0x03
    22fc:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    2300:	dc 01       	movw	r26, r24
    2302:	cb 01       	movw	r24, r22
    2304:	f8 01       	movw	r30, r16
    2306:	91 83       	std	Z+1, r25	; 0x01
    2308:	80 83       	st	Z, r24
    230a:	ce 01       	movw	r24, r28
    230c:	83 5f       	subi	r24, 0xF3	; 243
    230e:	9d 4f       	sbci	r25, 0xFD	; 253
    2310:	9e 01       	movw	r18, r28
    2312:	27 5f       	subi	r18, 0xF7	; 247
    2314:	3d 4f       	sbci	r19, 0xFD	; 253
    2316:	f9 01       	movw	r30, r18
    2318:	20 81       	ld	r18, Z
    231a:	31 81       	ldd	r19, Z+1	; 0x01
    231c:	fc 01       	movw	r30, r24
    231e:	31 83       	std	Z+1, r19	; 0x01
    2320:	20 83       	st	Z, r18
    2322:	ce 01       	movw	r24, r28
    2324:	83 5f       	subi	r24, 0xF3	; 243
    2326:	9d 4f       	sbci	r25, 0xFD	; 253
    2328:	fc 01       	movw	r30, r24
    232a:	80 81       	ld	r24, Z
    232c:	91 81       	ldd	r25, Z+1	; 0x01
    232e:	01 97       	sbiw	r24, 0x01	; 1
    2330:	f1 f7       	brne	.-4      	; 0x232e <__stack+0x122f>
    2332:	9e 01       	movw	r18, r28
    2334:	23 5f       	subi	r18, 0xF3	; 243
    2336:	3d 4f       	sbci	r19, 0xFD	; 253
    2338:	f9 01       	movw	r30, r18
    233a:	91 83       	std	Z+1, r25	; 0x01
    233c:	80 83       	st	Z, r24
			_delay_ms(200);
			to_uARM("M2210 F760 T50\n");
    233e:	8b e3       	ldi	r24, 0x3B	; 59
    2340:	92 e0       	ldi	r25, 0x02	; 2
    2342:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    2346:	9e 01       	movw	r18, r28
    2348:	23 5b       	subi	r18, 0xB3	; 179
    234a:	3f 4f       	sbci	r19, 0xFF	; 255
    234c:	80 e0       	ldi	r24, 0x00	; 0
    234e:	90 e0       	ldi	r25, 0x00	; 0
    2350:	a6 e1       	ldi	r26, 0x16	; 22
    2352:	b3 e4       	ldi	r27, 0x43	; 67
    2354:	f9 01       	movw	r30, r18
    2356:	80 83       	st	Z, r24
    2358:	91 83       	std	Z+1, r25	; 0x01
    235a:	a2 83       	std	Z+2, r26	; 0x02
    235c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    235e:	8e 01       	movw	r16, r28
    2360:	05 50       	subi	r16, 0x05	; 5
    2362:	1e 4f       	sbci	r17, 0xFE	; 254
    2364:	ce 01       	movw	r24, r28
    2366:	83 5b       	subi	r24, 0xB3	; 179
    2368:	9f 4f       	sbci	r25, 0xFF	; 255
    236a:	20 e0       	ldi	r18, 0x00	; 0
    236c:	30 e0       	ldi	r19, 0x00	; 0
    236e:	4a e7       	ldi	r20, 0x7A	; 122
    2370:	55 e4       	ldi	r21, 0x45	; 69
    2372:	fc 01       	movw	r30, r24
    2374:	60 81       	ld	r22, Z
    2376:	71 81       	ldd	r23, Z+1	; 0x01
    2378:	82 81       	ldd	r24, Z+2	; 0x02
    237a:	93 81       	ldd	r25, Z+3	; 0x03
    237c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    2380:	dc 01       	movw	r26, r24
    2382:	cb 01       	movw	r24, r22
    2384:	f8 01       	movw	r30, r16
    2386:	80 83       	st	Z, r24
    2388:	91 83       	std	Z+1, r25	; 0x01
    238a:	a2 83       	std	Z+2, r26	; 0x02
    238c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    238e:	ce 01       	movw	r24, r28
    2390:	85 50       	subi	r24, 0x05	; 5
    2392:	9e 4f       	sbci	r25, 0xFE	; 254
    2394:	20 e0       	ldi	r18, 0x00	; 0
    2396:	30 e0       	ldi	r19, 0x00	; 0
    2398:	40 e8       	ldi	r20, 0x80	; 128
    239a:	5f e3       	ldi	r21, 0x3F	; 63
    239c:	fc 01       	movw	r30, r24
    239e:	60 81       	ld	r22, Z
    23a0:	71 81       	ldd	r23, Z+1	; 0x01
    23a2:	82 81       	ldd	r24, Z+2	; 0x02
    23a4:	93 81       	ldd	r25, Z+3	; 0x03
    23a6:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    23aa:	88 23       	and	r24, r24
    23ac:	4c f4       	brge	.+18     	; 0x23c0 <__stack+0x12c1>
		__ticks = 1;
    23ae:	ce 01       	movw	r24, r28
    23b0:	81 50       	subi	r24, 0x01	; 1
    23b2:	9e 4f       	sbci	r25, 0xFE	; 254
    23b4:	21 e0       	ldi	r18, 0x01	; 1
    23b6:	30 e0       	ldi	r19, 0x00	; 0
    23b8:	fc 01       	movw	r30, r24
    23ba:	31 83       	std	Z+1, r19	; 0x01
    23bc:	20 83       	st	Z, r18
    23be:	6d c0       	rjmp	.+218    	; 0x249a <__stack+0x139b>
	else if (__tmp > 65535)
    23c0:	ce 01       	movw	r24, r28
    23c2:	85 50       	subi	r24, 0x05	; 5
    23c4:	9e 4f       	sbci	r25, 0xFE	; 254
    23c6:	20 e0       	ldi	r18, 0x00	; 0
    23c8:	3f ef       	ldi	r19, 0xFF	; 255
    23ca:	4f e7       	ldi	r20, 0x7F	; 127
    23cc:	57 e4       	ldi	r21, 0x47	; 71
    23ce:	fc 01       	movw	r30, r24
    23d0:	60 81       	ld	r22, Z
    23d2:	71 81       	ldd	r23, Z+1	; 0x01
    23d4:	82 81       	ldd	r24, Z+2	; 0x02
    23d6:	93 81       	ldd	r25, Z+3	; 0x03
    23d8:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    23dc:	18 16       	cp	r1, r24
    23de:	0c f0       	brlt	.+2      	; 0x23e2 <__stack+0x12e3>
    23e0:	4a c0       	rjmp	.+148    	; 0x2476 <__stack+0x1377>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23e2:	ce 01       	movw	r24, r28
    23e4:	83 5b       	subi	r24, 0xB3	; 179
    23e6:	9f 4f       	sbci	r25, 0xFF	; 255
    23e8:	20 e0       	ldi	r18, 0x00	; 0
    23ea:	30 e0       	ldi	r19, 0x00	; 0
    23ec:	40 e2       	ldi	r20, 0x20	; 32
    23ee:	51 e4       	ldi	r21, 0x41	; 65
    23f0:	fc 01       	movw	r30, r24
    23f2:	60 81       	ld	r22, Z
    23f4:	71 81       	ldd	r23, Z+1	; 0x01
    23f6:	82 81       	ldd	r24, Z+2	; 0x02
    23f8:	93 81       	ldd	r25, Z+3	; 0x03
    23fa:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    23fe:	dc 01       	movw	r26, r24
    2400:	cb 01       	movw	r24, r22
    2402:	8e 01       	movw	r16, r28
    2404:	01 50       	subi	r16, 0x01	; 1
    2406:	1e 4f       	sbci	r17, 0xFE	; 254
    2408:	bc 01       	movw	r22, r24
    240a:	cd 01       	movw	r24, r26
    240c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    2410:	dc 01       	movw	r26, r24
    2412:	cb 01       	movw	r24, r22
    2414:	f8 01       	movw	r30, r16
    2416:	91 83       	std	Z+1, r25	; 0x01
    2418:	80 83       	st	Z, r24
    241a:	24 c0       	rjmp	.+72     	; 0x2464 <__stack+0x1365>
    241c:	ce 01       	movw	r24, r28
    241e:	8f 5f       	subi	r24, 0xFF	; 255
    2420:	9d 4f       	sbci	r25, 0xFD	; 253
    2422:	20 e9       	ldi	r18, 0x90	; 144
    2424:	31 e0       	ldi	r19, 0x01	; 1
    2426:	fc 01       	movw	r30, r24
    2428:	31 83       	std	Z+1, r19	; 0x01
    242a:	20 83       	st	Z, r18
    242c:	ce 01       	movw	r24, r28
    242e:	8f 5f       	subi	r24, 0xFF	; 255
    2430:	9d 4f       	sbci	r25, 0xFD	; 253
    2432:	fc 01       	movw	r30, r24
    2434:	80 81       	ld	r24, Z
    2436:	91 81       	ldd	r25, Z+1	; 0x01
    2438:	01 97       	sbiw	r24, 0x01	; 1
    243a:	f1 f7       	brne	.-4      	; 0x2438 <__stack+0x1339>
    243c:	9e 01       	movw	r18, r28
    243e:	2f 5f       	subi	r18, 0xFF	; 255
    2440:	3d 4f       	sbci	r19, 0xFD	; 253
    2442:	f9 01       	movw	r30, r18
    2444:	91 83       	std	Z+1, r25	; 0x01
    2446:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2448:	ce 01       	movw	r24, r28
    244a:	81 50       	subi	r24, 0x01	; 1
    244c:	9e 4f       	sbci	r25, 0xFE	; 254
    244e:	9e 01       	movw	r18, r28
    2450:	21 50       	subi	r18, 0x01	; 1
    2452:	3e 4f       	sbci	r19, 0xFE	; 254
    2454:	f9 01       	movw	r30, r18
    2456:	20 81       	ld	r18, Z
    2458:	31 81       	ldd	r19, Z+1	; 0x01
    245a:	21 50       	subi	r18, 0x01	; 1
    245c:	31 09       	sbc	r19, r1
    245e:	fc 01       	movw	r30, r24
    2460:	31 83       	std	Z+1, r19	; 0x01
    2462:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2464:	ce 01       	movw	r24, r28
    2466:	81 50       	subi	r24, 0x01	; 1
    2468:	9e 4f       	sbci	r25, 0xFE	; 254
    246a:	fc 01       	movw	r30, r24
    246c:	80 81       	ld	r24, Z
    246e:	91 81       	ldd	r25, Z+1	; 0x01
    2470:	89 2b       	or	r24, r25
    2472:	a1 f6       	brne	.-88     	; 0x241c <__stack+0x131d>
    2474:	2c c0       	rjmp	.+88     	; 0x24ce <__stack+0x13cf>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2476:	8e 01       	movw	r16, r28
    2478:	01 50       	subi	r16, 0x01	; 1
    247a:	1e 4f       	sbci	r17, 0xFE	; 254
    247c:	ce 01       	movw	r24, r28
    247e:	85 50       	subi	r24, 0x05	; 5
    2480:	9e 4f       	sbci	r25, 0xFE	; 254
    2482:	fc 01       	movw	r30, r24
    2484:	60 81       	ld	r22, Z
    2486:	71 81       	ldd	r23, Z+1	; 0x01
    2488:	82 81       	ldd	r24, Z+2	; 0x02
    248a:	93 81       	ldd	r25, Z+3	; 0x03
    248c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    2490:	dc 01       	movw	r26, r24
    2492:	cb 01       	movw	r24, r22
    2494:	f8 01       	movw	r30, r16
    2496:	91 83       	std	Z+1, r25	; 0x01
    2498:	80 83       	st	Z, r24
    249a:	ce 01       	movw	r24, r28
    249c:	8d 5f       	subi	r24, 0xFD	; 253
    249e:	9d 4f       	sbci	r25, 0xFD	; 253
    24a0:	9e 01       	movw	r18, r28
    24a2:	21 50       	subi	r18, 0x01	; 1
    24a4:	3e 4f       	sbci	r19, 0xFE	; 254
    24a6:	f9 01       	movw	r30, r18
    24a8:	20 81       	ld	r18, Z
    24aa:	31 81       	ldd	r19, Z+1	; 0x01
    24ac:	fc 01       	movw	r30, r24
    24ae:	31 83       	std	Z+1, r19	; 0x01
    24b0:	20 83       	st	Z, r18
    24b2:	ce 01       	movw	r24, r28
    24b4:	8d 5f       	subi	r24, 0xFD	; 253
    24b6:	9d 4f       	sbci	r25, 0xFD	; 253
    24b8:	fc 01       	movw	r30, r24
    24ba:	80 81       	ld	r24, Z
    24bc:	91 81       	ldd	r25, Z+1	; 0x01
    24be:	01 97       	sbiw	r24, 0x01	; 1
    24c0:	f1 f7       	brne	.-4      	; 0x24be <__stack+0x13bf>
    24c2:	9e 01       	movw	r18, r28
    24c4:	2d 5f       	subi	r18, 0xFD	; 253
    24c6:	3d 4f       	sbci	r19, 0xFD	; 253
    24c8:	f9 01       	movw	r30, r18
    24ca:	91 83       	std	Z+1, r25	; 0x01
    24cc:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F860 T100\n");
    24ce:	8b e4       	ldi	r24, 0x4B	; 75
    24d0:	92 e0       	ldi	r25, 0x02	; 2
    24d2:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    24d6:	9e 01       	movw	r18, r28
    24d8:	2f 5a       	subi	r18, 0xAF	; 175
    24da:	3f 4f       	sbci	r19, 0xFF	; 255
    24dc:	80 e0       	ldi	r24, 0x00	; 0
    24de:	90 e0       	ldi	r25, 0x00	; 0
    24e0:	a6 e9       	ldi	r26, 0x96	; 150
    24e2:	b3 e4       	ldi	r27, 0x43	; 67
    24e4:	f9 01       	movw	r30, r18
    24e6:	80 83       	st	Z, r24
    24e8:	91 83       	std	Z+1, r25	; 0x01
    24ea:	a2 83       	std	Z+2, r26	; 0x02
    24ec:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    24ee:	8e 01       	movw	r16, r28
    24f0:	0f 50       	subi	r16, 0x0F	; 15
    24f2:	1e 4f       	sbci	r17, 0xFE	; 254
    24f4:	ce 01       	movw	r24, r28
    24f6:	8f 5a       	subi	r24, 0xAF	; 175
    24f8:	9f 4f       	sbci	r25, 0xFF	; 255
    24fa:	20 e0       	ldi	r18, 0x00	; 0
    24fc:	30 e0       	ldi	r19, 0x00	; 0
    24fe:	4a e7       	ldi	r20, 0x7A	; 122
    2500:	55 e4       	ldi	r21, 0x45	; 69
    2502:	fc 01       	movw	r30, r24
    2504:	60 81       	ld	r22, Z
    2506:	71 81       	ldd	r23, Z+1	; 0x01
    2508:	82 81       	ldd	r24, Z+2	; 0x02
    250a:	93 81       	ldd	r25, Z+3	; 0x03
    250c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    2510:	dc 01       	movw	r26, r24
    2512:	cb 01       	movw	r24, r22
    2514:	f8 01       	movw	r30, r16
    2516:	80 83       	st	Z, r24
    2518:	91 83       	std	Z+1, r25	; 0x01
    251a:	a2 83       	std	Z+2, r26	; 0x02
    251c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    251e:	ce 01       	movw	r24, r28
    2520:	8f 50       	subi	r24, 0x0F	; 15
    2522:	9e 4f       	sbci	r25, 0xFE	; 254
    2524:	20 e0       	ldi	r18, 0x00	; 0
    2526:	30 e0       	ldi	r19, 0x00	; 0
    2528:	40 e8       	ldi	r20, 0x80	; 128
    252a:	5f e3       	ldi	r21, 0x3F	; 63
    252c:	fc 01       	movw	r30, r24
    252e:	60 81       	ld	r22, Z
    2530:	71 81       	ldd	r23, Z+1	; 0x01
    2532:	82 81       	ldd	r24, Z+2	; 0x02
    2534:	93 81       	ldd	r25, Z+3	; 0x03
    2536:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    253a:	88 23       	and	r24, r24
    253c:	4c f4       	brge	.+18     	; 0x2550 <__stack+0x1451>
		__ticks = 1;
    253e:	ce 01       	movw	r24, r28
    2540:	8b 50       	subi	r24, 0x0B	; 11
    2542:	9e 4f       	sbci	r25, 0xFE	; 254
    2544:	21 e0       	ldi	r18, 0x01	; 1
    2546:	30 e0       	ldi	r19, 0x00	; 0
    2548:	fc 01       	movw	r30, r24
    254a:	31 83       	std	Z+1, r19	; 0x01
    254c:	20 83       	st	Z, r18
    254e:	6d c0       	rjmp	.+218    	; 0x262a <__stack+0x152b>
	else if (__tmp > 65535)
    2550:	ce 01       	movw	r24, r28
    2552:	8f 50       	subi	r24, 0x0F	; 15
    2554:	9e 4f       	sbci	r25, 0xFE	; 254
    2556:	20 e0       	ldi	r18, 0x00	; 0
    2558:	3f ef       	ldi	r19, 0xFF	; 255
    255a:	4f e7       	ldi	r20, 0x7F	; 127
    255c:	57 e4       	ldi	r21, 0x47	; 71
    255e:	fc 01       	movw	r30, r24
    2560:	60 81       	ld	r22, Z
    2562:	71 81       	ldd	r23, Z+1	; 0x01
    2564:	82 81       	ldd	r24, Z+2	; 0x02
    2566:	93 81       	ldd	r25, Z+3	; 0x03
    2568:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    256c:	18 16       	cp	r1, r24
    256e:	0c f0       	brlt	.+2      	; 0x2572 <__stack+0x1473>
    2570:	4a c0       	rjmp	.+148    	; 0x2606 <__stack+0x1507>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2572:	ce 01       	movw	r24, r28
    2574:	8f 5a       	subi	r24, 0xAF	; 175
    2576:	9f 4f       	sbci	r25, 0xFF	; 255
    2578:	20 e0       	ldi	r18, 0x00	; 0
    257a:	30 e0       	ldi	r19, 0x00	; 0
    257c:	40 e2       	ldi	r20, 0x20	; 32
    257e:	51 e4       	ldi	r21, 0x41	; 65
    2580:	fc 01       	movw	r30, r24
    2582:	60 81       	ld	r22, Z
    2584:	71 81       	ldd	r23, Z+1	; 0x01
    2586:	82 81       	ldd	r24, Z+2	; 0x02
    2588:	93 81       	ldd	r25, Z+3	; 0x03
    258a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    258e:	dc 01       	movw	r26, r24
    2590:	cb 01       	movw	r24, r22
    2592:	8e 01       	movw	r16, r28
    2594:	0b 50       	subi	r16, 0x0B	; 11
    2596:	1e 4f       	sbci	r17, 0xFE	; 254
    2598:	bc 01       	movw	r22, r24
    259a:	cd 01       	movw	r24, r26
    259c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    25a0:	dc 01       	movw	r26, r24
    25a2:	cb 01       	movw	r24, r22
    25a4:	f8 01       	movw	r30, r16
    25a6:	91 83       	std	Z+1, r25	; 0x01
    25a8:	80 83       	st	Z, r24
    25aa:	24 c0       	rjmp	.+72     	; 0x25f4 <__stack+0x14f5>
    25ac:	ce 01       	movw	r24, r28
    25ae:	89 50       	subi	r24, 0x09	; 9
    25b0:	9e 4f       	sbci	r25, 0xFE	; 254
    25b2:	20 e9       	ldi	r18, 0x90	; 144
    25b4:	31 e0       	ldi	r19, 0x01	; 1
    25b6:	fc 01       	movw	r30, r24
    25b8:	31 83       	std	Z+1, r19	; 0x01
    25ba:	20 83       	st	Z, r18
    25bc:	ce 01       	movw	r24, r28
    25be:	89 50       	subi	r24, 0x09	; 9
    25c0:	9e 4f       	sbci	r25, 0xFE	; 254
    25c2:	fc 01       	movw	r30, r24
    25c4:	80 81       	ld	r24, Z
    25c6:	91 81       	ldd	r25, Z+1	; 0x01
    25c8:	01 97       	sbiw	r24, 0x01	; 1
    25ca:	f1 f7       	brne	.-4      	; 0x25c8 <__stack+0x14c9>
    25cc:	9e 01       	movw	r18, r28
    25ce:	29 50       	subi	r18, 0x09	; 9
    25d0:	3e 4f       	sbci	r19, 0xFE	; 254
    25d2:	f9 01       	movw	r30, r18
    25d4:	91 83       	std	Z+1, r25	; 0x01
    25d6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25d8:	ce 01       	movw	r24, r28
    25da:	8b 50       	subi	r24, 0x0B	; 11
    25dc:	9e 4f       	sbci	r25, 0xFE	; 254
    25de:	9e 01       	movw	r18, r28
    25e0:	2b 50       	subi	r18, 0x0B	; 11
    25e2:	3e 4f       	sbci	r19, 0xFE	; 254
    25e4:	f9 01       	movw	r30, r18
    25e6:	20 81       	ld	r18, Z
    25e8:	31 81       	ldd	r19, Z+1	; 0x01
    25ea:	21 50       	subi	r18, 0x01	; 1
    25ec:	31 09       	sbc	r19, r1
    25ee:	fc 01       	movw	r30, r24
    25f0:	31 83       	std	Z+1, r19	; 0x01
    25f2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25f4:	ce 01       	movw	r24, r28
    25f6:	8b 50       	subi	r24, 0x0B	; 11
    25f8:	9e 4f       	sbci	r25, 0xFE	; 254
    25fa:	fc 01       	movw	r30, r24
    25fc:	80 81       	ld	r24, Z
    25fe:	91 81       	ldd	r25, Z+1	; 0x01
    2600:	89 2b       	or	r24, r25
    2602:	a1 f6       	brne	.-88     	; 0x25ac <__stack+0x14ad>
    2604:	2c c0       	rjmp	.+88     	; 0x265e <__stack+0x155f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2606:	8e 01       	movw	r16, r28
    2608:	0b 50       	subi	r16, 0x0B	; 11
    260a:	1e 4f       	sbci	r17, 0xFE	; 254
    260c:	ce 01       	movw	r24, r28
    260e:	8f 50       	subi	r24, 0x0F	; 15
    2610:	9e 4f       	sbci	r25, 0xFE	; 254
    2612:	fc 01       	movw	r30, r24
    2614:	60 81       	ld	r22, Z
    2616:	71 81       	ldd	r23, Z+1	; 0x01
    2618:	82 81       	ldd	r24, Z+2	; 0x02
    261a:	93 81       	ldd	r25, Z+3	; 0x03
    261c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    2620:	dc 01       	movw	r26, r24
    2622:	cb 01       	movw	r24, r22
    2624:	f8 01       	movw	r30, r16
    2626:	91 83       	std	Z+1, r25	; 0x01
    2628:	80 83       	st	Z, r24
    262a:	ce 01       	movw	r24, r28
    262c:	87 50       	subi	r24, 0x07	; 7
    262e:	9e 4f       	sbci	r25, 0xFE	; 254
    2630:	9e 01       	movw	r18, r28
    2632:	2b 50       	subi	r18, 0x0B	; 11
    2634:	3e 4f       	sbci	r19, 0xFE	; 254
    2636:	f9 01       	movw	r30, r18
    2638:	20 81       	ld	r18, Z
    263a:	31 81       	ldd	r19, Z+1	; 0x01
    263c:	fc 01       	movw	r30, r24
    263e:	31 83       	std	Z+1, r19	; 0x01
    2640:	20 83       	st	Z, r18
    2642:	ce 01       	movw	r24, r28
    2644:	87 50       	subi	r24, 0x07	; 7
    2646:	9e 4f       	sbci	r25, 0xFE	; 254
    2648:	fc 01       	movw	r30, r24
    264a:	80 81       	ld	r24, Z
    264c:	91 81       	ldd	r25, Z+1	; 0x01
    264e:	01 97       	sbiw	r24, 0x01	; 1
    2650:	f1 f7       	brne	.-4      	; 0x264e <__stack+0x154f>
    2652:	9e 01       	movw	r18, r28
    2654:	27 50       	subi	r18, 0x07	; 7
    2656:	3e 4f       	sbci	r19, 0xFE	; 254
    2658:	f9 01       	movw	r30, r18
    265a:	91 83       	std	Z+1, r25	; 0x01
    265c:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F700 T80\n");
    265e:	8c e5       	ldi	r24, 0x5C	; 92
    2660:	92 e0       	ldi	r25, 0x02	; 2
    2662:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    2666:	9e 01       	movw	r18, r28
    2668:	2b 5a       	subi	r18, 0xAB	; 171
    266a:	3f 4f       	sbci	r19, 0xFF	; 255
    266c:	80 e0       	ldi	r24, 0x00	; 0
    266e:	90 e0       	ldi	r25, 0x00	; 0
    2670:	a6 e1       	ldi	r26, 0x16	; 22
    2672:	b3 e4       	ldi	r27, 0x43	; 67
    2674:	f9 01       	movw	r30, r18
    2676:	80 83       	st	Z, r24
    2678:	91 83       	std	Z+1, r25	; 0x01
    267a:	a2 83       	std	Z+2, r26	; 0x02
    267c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    267e:	8e 01       	movw	r16, r28
    2680:	09 51       	subi	r16, 0x19	; 25
    2682:	1e 4f       	sbci	r17, 0xFE	; 254
    2684:	ce 01       	movw	r24, r28
    2686:	8b 5a       	subi	r24, 0xAB	; 171
    2688:	9f 4f       	sbci	r25, 0xFF	; 255
    268a:	20 e0       	ldi	r18, 0x00	; 0
    268c:	30 e0       	ldi	r19, 0x00	; 0
    268e:	4a e7       	ldi	r20, 0x7A	; 122
    2690:	55 e4       	ldi	r21, 0x45	; 69
    2692:	fc 01       	movw	r30, r24
    2694:	60 81       	ld	r22, Z
    2696:	71 81       	ldd	r23, Z+1	; 0x01
    2698:	82 81       	ldd	r24, Z+2	; 0x02
    269a:	93 81       	ldd	r25, Z+3	; 0x03
    269c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    26a0:	dc 01       	movw	r26, r24
    26a2:	cb 01       	movw	r24, r22
    26a4:	f8 01       	movw	r30, r16
    26a6:	80 83       	st	Z, r24
    26a8:	91 83       	std	Z+1, r25	; 0x01
    26aa:	a2 83       	std	Z+2, r26	; 0x02
    26ac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    26ae:	ce 01       	movw	r24, r28
    26b0:	89 51       	subi	r24, 0x19	; 25
    26b2:	9e 4f       	sbci	r25, 0xFE	; 254
    26b4:	20 e0       	ldi	r18, 0x00	; 0
    26b6:	30 e0       	ldi	r19, 0x00	; 0
    26b8:	40 e8       	ldi	r20, 0x80	; 128
    26ba:	5f e3       	ldi	r21, 0x3F	; 63
    26bc:	fc 01       	movw	r30, r24
    26be:	60 81       	ld	r22, Z
    26c0:	71 81       	ldd	r23, Z+1	; 0x01
    26c2:	82 81       	ldd	r24, Z+2	; 0x02
    26c4:	93 81       	ldd	r25, Z+3	; 0x03
    26c6:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    26ca:	88 23       	and	r24, r24
    26cc:	4c f4       	brge	.+18     	; 0x26e0 <__stack+0x15e1>
		__ticks = 1;
    26ce:	ce 01       	movw	r24, r28
    26d0:	85 51       	subi	r24, 0x15	; 21
    26d2:	9e 4f       	sbci	r25, 0xFE	; 254
    26d4:	21 e0       	ldi	r18, 0x01	; 1
    26d6:	30 e0       	ldi	r19, 0x00	; 0
    26d8:	fc 01       	movw	r30, r24
    26da:	31 83       	std	Z+1, r19	; 0x01
    26dc:	20 83       	st	Z, r18
    26de:	6d c0       	rjmp	.+218    	; 0x27ba <__stack+0x16bb>
	else if (__tmp > 65535)
    26e0:	ce 01       	movw	r24, r28
    26e2:	89 51       	subi	r24, 0x19	; 25
    26e4:	9e 4f       	sbci	r25, 0xFE	; 254
    26e6:	20 e0       	ldi	r18, 0x00	; 0
    26e8:	3f ef       	ldi	r19, 0xFF	; 255
    26ea:	4f e7       	ldi	r20, 0x7F	; 127
    26ec:	57 e4       	ldi	r21, 0x47	; 71
    26ee:	fc 01       	movw	r30, r24
    26f0:	60 81       	ld	r22, Z
    26f2:	71 81       	ldd	r23, Z+1	; 0x01
    26f4:	82 81       	ldd	r24, Z+2	; 0x02
    26f6:	93 81       	ldd	r25, Z+3	; 0x03
    26f8:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    26fc:	18 16       	cp	r1, r24
    26fe:	0c f0       	brlt	.+2      	; 0x2702 <__stack+0x1603>
    2700:	4a c0       	rjmp	.+148    	; 0x2796 <__stack+0x1697>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2702:	ce 01       	movw	r24, r28
    2704:	8b 5a       	subi	r24, 0xAB	; 171
    2706:	9f 4f       	sbci	r25, 0xFF	; 255
    2708:	20 e0       	ldi	r18, 0x00	; 0
    270a:	30 e0       	ldi	r19, 0x00	; 0
    270c:	40 e2       	ldi	r20, 0x20	; 32
    270e:	51 e4       	ldi	r21, 0x41	; 65
    2710:	fc 01       	movw	r30, r24
    2712:	60 81       	ld	r22, Z
    2714:	71 81       	ldd	r23, Z+1	; 0x01
    2716:	82 81       	ldd	r24, Z+2	; 0x02
    2718:	93 81       	ldd	r25, Z+3	; 0x03
    271a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    271e:	dc 01       	movw	r26, r24
    2720:	cb 01       	movw	r24, r22
    2722:	8e 01       	movw	r16, r28
    2724:	05 51       	subi	r16, 0x15	; 21
    2726:	1e 4f       	sbci	r17, 0xFE	; 254
    2728:	bc 01       	movw	r22, r24
    272a:	cd 01       	movw	r24, r26
    272c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    2730:	dc 01       	movw	r26, r24
    2732:	cb 01       	movw	r24, r22
    2734:	f8 01       	movw	r30, r16
    2736:	91 83       	std	Z+1, r25	; 0x01
    2738:	80 83       	st	Z, r24
    273a:	24 c0       	rjmp	.+72     	; 0x2784 <__stack+0x1685>
    273c:	ce 01       	movw	r24, r28
    273e:	83 51       	subi	r24, 0x13	; 19
    2740:	9e 4f       	sbci	r25, 0xFE	; 254
    2742:	20 e9       	ldi	r18, 0x90	; 144
    2744:	31 e0       	ldi	r19, 0x01	; 1
    2746:	fc 01       	movw	r30, r24
    2748:	31 83       	std	Z+1, r19	; 0x01
    274a:	20 83       	st	Z, r18
    274c:	ce 01       	movw	r24, r28
    274e:	83 51       	subi	r24, 0x13	; 19
    2750:	9e 4f       	sbci	r25, 0xFE	; 254
    2752:	fc 01       	movw	r30, r24
    2754:	80 81       	ld	r24, Z
    2756:	91 81       	ldd	r25, Z+1	; 0x01
    2758:	01 97       	sbiw	r24, 0x01	; 1
    275a:	f1 f7       	brne	.-4      	; 0x2758 <__stack+0x1659>
    275c:	9e 01       	movw	r18, r28
    275e:	23 51       	subi	r18, 0x13	; 19
    2760:	3e 4f       	sbci	r19, 0xFE	; 254
    2762:	f9 01       	movw	r30, r18
    2764:	91 83       	std	Z+1, r25	; 0x01
    2766:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2768:	ce 01       	movw	r24, r28
    276a:	85 51       	subi	r24, 0x15	; 21
    276c:	9e 4f       	sbci	r25, 0xFE	; 254
    276e:	9e 01       	movw	r18, r28
    2770:	25 51       	subi	r18, 0x15	; 21
    2772:	3e 4f       	sbci	r19, 0xFE	; 254
    2774:	f9 01       	movw	r30, r18
    2776:	20 81       	ld	r18, Z
    2778:	31 81       	ldd	r19, Z+1	; 0x01
    277a:	21 50       	subi	r18, 0x01	; 1
    277c:	31 09       	sbc	r19, r1
    277e:	fc 01       	movw	r30, r24
    2780:	31 83       	std	Z+1, r19	; 0x01
    2782:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2784:	ce 01       	movw	r24, r28
    2786:	85 51       	subi	r24, 0x15	; 21
    2788:	9e 4f       	sbci	r25, 0xFE	; 254
    278a:	fc 01       	movw	r30, r24
    278c:	80 81       	ld	r24, Z
    278e:	91 81       	ldd	r25, Z+1	; 0x01
    2790:	89 2b       	or	r24, r25
    2792:	a1 f6       	brne	.-88     	; 0x273c <__stack+0x163d>
    2794:	2c c0       	rjmp	.+88     	; 0x27ee <__stack+0x16ef>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2796:	8e 01       	movw	r16, r28
    2798:	05 51       	subi	r16, 0x15	; 21
    279a:	1e 4f       	sbci	r17, 0xFE	; 254
    279c:	ce 01       	movw	r24, r28
    279e:	89 51       	subi	r24, 0x19	; 25
    27a0:	9e 4f       	sbci	r25, 0xFE	; 254
    27a2:	fc 01       	movw	r30, r24
    27a4:	60 81       	ld	r22, Z
    27a6:	71 81       	ldd	r23, Z+1	; 0x01
    27a8:	82 81       	ldd	r24, Z+2	; 0x02
    27aa:	93 81       	ldd	r25, Z+3	; 0x03
    27ac:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    27b0:	dc 01       	movw	r26, r24
    27b2:	cb 01       	movw	r24, r22
    27b4:	f8 01       	movw	r30, r16
    27b6:	91 83       	std	Z+1, r25	; 0x01
    27b8:	80 83       	st	Z, r24
    27ba:	ce 01       	movw	r24, r28
    27bc:	81 51       	subi	r24, 0x11	; 17
    27be:	9e 4f       	sbci	r25, 0xFE	; 254
    27c0:	9e 01       	movw	r18, r28
    27c2:	25 51       	subi	r18, 0x15	; 21
    27c4:	3e 4f       	sbci	r19, 0xFE	; 254
    27c6:	f9 01       	movw	r30, r18
    27c8:	20 81       	ld	r18, Z
    27ca:	31 81       	ldd	r19, Z+1	; 0x01
    27cc:	fc 01       	movw	r30, r24
    27ce:	31 83       	std	Z+1, r19	; 0x01
    27d0:	20 83       	st	Z, r18
    27d2:	ce 01       	movw	r24, r28
    27d4:	81 51       	subi	r24, 0x11	; 17
    27d6:	9e 4f       	sbci	r25, 0xFE	; 254
    27d8:	fc 01       	movw	r30, r24
    27da:	80 81       	ld	r24, Z
    27dc:	91 81       	ldd	r25, Z+1	; 0x01
    27de:	01 97       	sbiw	r24, 0x01	; 1
    27e0:	f1 f7       	brne	.-4      	; 0x27de <__stack+0x16df>
    27e2:	9e 01       	movw	r18, r28
    27e4:	21 51       	subi	r18, 0x11	; 17
    27e6:	3e 4f       	sbci	r19, 0xFE	; 254
    27e8:	f9 01       	movw	r30, r18
    27ea:	91 83       	std	Z+1, r25	; 0x01
    27ec:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F760 T50\n");
    27ee:	8b e3       	ldi	r24, 0x3B	; 59
    27f0:	92 e0       	ldi	r25, 0x02	; 2
    27f2:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    27f6:	9e 01       	movw	r18, r28
    27f8:	27 5a       	subi	r18, 0xA7	; 167
    27fa:	3f 4f       	sbci	r19, 0xFF	; 255
    27fc:	80 e0       	ldi	r24, 0x00	; 0
    27fe:	90 e0       	ldi	r25, 0x00	; 0
    2800:	af ea       	ldi	r26, 0xAF	; 175
    2802:	b3 e4       	ldi	r27, 0x43	; 67
    2804:	f9 01       	movw	r30, r18
    2806:	80 83       	st	Z, r24
    2808:	91 83       	std	Z+1, r25	; 0x01
    280a:	a2 83       	std	Z+2, r26	; 0x02
    280c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    280e:	8e 01       	movw	r16, r28
    2810:	03 52       	subi	r16, 0x23	; 35
    2812:	1e 4f       	sbci	r17, 0xFE	; 254
    2814:	ce 01       	movw	r24, r28
    2816:	87 5a       	subi	r24, 0xA7	; 167
    2818:	9f 4f       	sbci	r25, 0xFF	; 255
    281a:	20 e0       	ldi	r18, 0x00	; 0
    281c:	30 e0       	ldi	r19, 0x00	; 0
    281e:	4a e7       	ldi	r20, 0x7A	; 122
    2820:	55 e4       	ldi	r21, 0x45	; 69
    2822:	fc 01       	movw	r30, r24
    2824:	60 81       	ld	r22, Z
    2826:	71 81       	ldd	r23, Z+1	; 0x01
    2828:	82 81       	ldd	r24, Z+2	; 0x02
    282a:	93 81       	ldd	r25, Z+3	; 0x03
    282c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    2830:	dc 01       	movw	r26, r24
    2832:	cb 01       	movw	r24, r22
    2834:	f8 01       	movw	r30, r16
    2836:	80 83       	st	Z, r24
    2838:	91 83       	std	Z+1, r25	; 0x01
    283a:	a2 83       	std	Z+2, r26	; 0x02
    283c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    283e:	ce 01       	movw	r24, r28
    2840:	83 52       	subi	r24, 0x23	; 35
    2842:	9e 4f       	sbci	r25, 0xFE	; 254
    2844:	20 e0       	ldi	r18, 0x00	; 0
    2846:	30 e0       	ldi	r19, 0x00	; 0
    2848:	40 e8       	ldi	r20, 0x80	; 128
    284a:	5f e3       	ldi	r21, 0x3F	; 63
    284c:	fc 01       	movw	r30, r24
    284e:	60 81       	ld	r22, Z
    2850:	71 81       	ldd	r23, Z+1	; 0x01
    2852:	82 81       	ldd	r24, Z+2	; 0x02
    2854:	93 81       	ldd	r25, Z+3	; 0x03
    2856:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    285a:	88 23       	and	r24, r24
    285c:	4c f4       	brge	.+18     	; 0x2870 <__stack+0x1771>
		__ticks = 1;
    285e:	ce 01       	movw	r24, r28
    2860:	8f 51       	subi	r24, 0x1F	; 31
    2862:	9e 4f       	sbci	r25, 0xFE	; 254
    2864:	21 e0       	ldi	r18, 0x01	; 1
    2866:	30 e0       	ldi	r19, 0x00	; 0
    2868:	fc 01       	movw	r30, r24
    286a:	31 83       	std	Z+1, r19	; 0x01
    286c:	20 83       	st	Z, r18
    286e:	6d c0       	rjmp	.+218    	; 0x294a <__stack+0x184b>
	else if (__tmp > 65535)
    2870:	ce 01       	movw	r24, r28
    2872:	83 52       	subi	r24, 0x23	; 35
    2874:	9e 4f       	sbci	r25, 0xFE	; 254
    2876:	20 e0       	ldi	r18, 0x00	; 0
    2878:	3f ef       	ldi	r19, 0xFF	; 255
    287a:	4f e7       	ldi	r20, 0x7F	; 127
    287c:	57 e4       	ldi	r21, 0x47	; 71
    287e:	fc 01       	movw	r30, r24
    2880:	60 81       	ld	r22, Z
    2882:	71 81       	ldd	r23, Z+1	; 0x01
    2884:	82 81       	ldd	r24, Z+2	; 0x02
    2886:	93 81       	ldd	r25, Z+3	; 0x03
    2888:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    288c:	18 16       	cp	r1, r24
    288e:	0c f0       	brlt	.+2      	; 0x2892 <__stack+0x1793>
    2890:	4a c0       	rjmp	.+148    	; 0x2926 <__stack+0x1827>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2892:	ce 01       	movw	r24, r28
    2894:	87 5a       	subi	r24, 0xA7	; 167
    2896:	9f 4f       	sbci	r25, 0xFF	; 255
    2898:	20 e0       	ldi	r18, 0x00	; 0
    289a:	30 e0       	ldi	r19, 0x00	; 0
    289c:	40 e2       	ldi	r20, 0x20	; 32
    289e:	51 e4       	ldi	r21, 0x41	; 65
    28a0:	fc 01       	movw	r30, r24
    28a2:	60 81       	ld	r22, Z
    28a4:	71 81       	ldd	r23, Z+1	; 0x01
    28a6:	82 81       	ldd	r24, Z+2	; 0x02
    28a8:	93 81       	ldd	r25, Z+3	; 0x03
    28aa:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    28ae:	dc 01       	movw	r26, r24
    28b0:	cb 01       	movw	r24, r22
    28b2:	8e 01       	movw	r16, r28
    28b4:	0f 51       	subi	r16, 0x1F	; 31
    28b6:	1e 4f       	sbci	r17, 0xFE	; 254
    28b8:	bc 01       	movw	r22, r24
    28ba:	cd 01       	movw	r24, r26
    28bc:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    28c0:	dc 01       	movw	r26, r24
    28c2:	cb 01       	movw	r24, r22
    28c4:	f8 01       	movw	r30, r16
    28c6:	91 83       	std	Z+1, r25	; 0x01
    28c8:	80 83       	st	Z, r24
    28ca:	24 c0       	rjmp	.+72     	; 0x2914 <__stack+0x1815>
    28cc:	ce 01       	movw	r24, r28
    28ce:	8d 51       	subi	r24, 0x1D	; 29
    28d0:	9e 4f       	sbci	r25, 0xFE	; 254
    28d2:	20 e9       	ldi	r18, 0x90	; 144
    28d4:	31 e0       	ldi	r19, 0x01	; 1
    28d6:	fc 01       	movw	r30, r24
    28d8:	31 83       	std	Z+1, r19	; 0x01
    28da:	20 83       	st	Z, r18
    28dc:	ce 01       	movw	r24, r28
    28de:	8d 51       	subi	r24, 0x1D	; 29
    28e0:	9e 4f       	sbci	r25, 0xFE	; 254
    28e2:	fc 01       	movw	r30, r24
    28e4:	80 81       	ld	r24, Z
    28e6:	91 81       	ldd	r25, Z+1	; 0x01
    28e8:	01 97       	sbiw	r24, 0x01	; 1
    28ea:	f1 f7       	brne	.-4      	; 0x28e8 <__stack+0x17e9>
    28ec:	9e 01       	movw	r18, r28
    28ee:	2d 51       	subi	r18, 0x1D	; 29
    28f0:	3e 4f       	sbci	r19, 0xFE	; 254
    28f2:	f9 01       	movw	r30, r18
    28f4:	91 83       	std	Z+1, r25	; 0x01
    28f6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28f8:	ce 01       	movw	r24, r28
    28fa:	8f 51       	subi	r24, 0x1F	; 31
    28fc:	9e 4f       	sbci	r25, 0xFE	; 254
    28fe:	9e 01       	movw	r18, r28
    2900:	2f 51       	subi	r18, 0x1F	; 31
    2902:	3e 4f       	sbci	r19, 0xFE	; 254
    2904:	f9 01       	movw	r30, r18
    2906:	20 81       	ld	r18, Z
    2908:	31 81       	ldd	r19, Z+1	; 0x01
    290a:	21 50       	subi	r18, 0x01	; 1
    290c:	31 09       	sbc	r19, r1
    290e:	fc 01       	movw	r30, r24
    2910:	31 83       	std	Z+1, r19	; 0x01
    2912:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2914:	ce 01       	movw	r24, r28
    2916:	8f 51       	subi	r24, 0x1F	; 31
    2918:	9e 4f       	sbci	r25, 0xFE	; 254
    291a:	fc 01       	movw	r30, r24
    291c:	80 81       	ld	r24, Z
    291e:	91 81       	ldd	r25, Z+1	; 0x01
    2920:	89 2b       	or	r24, r25
    2922:	a1 f6       	brne	.-88     	; 0x28cc <__stack+0x17cd>
    2924:	2c c0       	rjmp	.+88     	; 0x297e <__stack+0x187f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2926:	8e 01       	movw	r16, r28
    2928:	0f 51       	subi	r16, 0x1F	; 31
    292a:	1e 4f       	sbci	r17, 0xFE	; 254
    292c:	ce 01       	movw	r24, r28
    292e:	83 52       	subi	r24, 0x23	; 35
    2930:	9e 4f       	sbci	r25, 0xFE	; 254
    2932:	fc 01       	movw	r30, r24
    2934:	60 81       	ld	r22, Z
    2936:	71 81       	ldd	r23, Z+1	; 0x01
    2938:	82 81       	ldd	r24, Z+2	; 0x02
    293a:	93 81       	ldd	r25, Z+3	; 0x03
    293c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    2940:	dc 01       	movw	r26, r24
    2942:	cb 01       	movw	r24, r22
    2944:	f8 01       	movw	r30, r16
    2946:	91 83       	std	Z+1, r25	; 0x01
    2948:	80 83       	st	Z, r24
    294a:	ce 01       	movw	r24, r28
    294c:	8b 51       	subi	r24, 0x1B	; 27
    294e:	9e 4f       	sbci	r25, 0xFE	; 254
    2950:	9e 01       	movw	r18, r28
    2952:	2f 51       	subi	r18, 0x1F	; 31
    2954:	3e 4f       	sbci	r19, 0xFE	; 254
    2956:	f9 01       	movw	r30, r18
    2958:	20 81       	ld	r18, Z
    295a:	31 81       	ldd	r19, Z+1	; 0x01
    295c:	fc 01       	movw	r30, r24
    295e:	31 83       	std	Z+1, r19	; 0x01
    2960:	20 83       	st	Z, r18
    2962:	ce 01       	movw	r24, r28
    2964:	8b 51       	subi	r24, 0x1B	; 27
    2966:	9e 4f       	sbci	r25, 0xFE	; 254
    2968:	fc 01       	movw	r30, r24
    296a:	80 81       	ld	r24, Z
    296c:	91 81       	ldd	r25, Z+1	; 0x01
    296e:	01 97       	sbiw	r24, 0x01	; 1
    2970:	f1 f7       	brne	.-4      	; 0x296e <__stack+0x186f>
    2972:	9e 01       	movw	r18, r28
    2974:	2b 51       	subi	r18, 0x1B	; 27
    2976:	3e 4f       	sbci	r19, 0xFE	; 254
    2978:	f9 01       	movw	r30, r18
    297a:	91 83       	std	Z+1, r25	; 0x01
    297c:	80 83       	st	Z, r24
			_delay_ms(350);
			to_uARM("M2210 F660 T80\n");
    297e:	8b e2       	ldi	r24, 0x2B	; 43
    2980:	92 e0       	ldi	r25, 0x02	; 2
    2982:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    2986:	9e 01       	movw	r18, r28
    2988:	23 5a       	subi	r18, 0xA3	; 163
    298a:	3f 4f       	sbci	r19, 0xFF	; 255
    298c:	80 e0       	ldi	r24, 0x00	; 0
    298e:	90 e0       	ldi	r25, 0x00	; 0
    2990:	a6 e9       	ldi	r26, 0x96	; 150
    2992:	b3 e4       	ldi	r27, 0x43	; 67
    2994:	f9 01       	movw	r30, r18
    2996:	80 83       	st	Z, r24
    2998:	91 83       	std	Z+1, r25	; 0x01
    299a:	a2 83       	std	Z+2, r26	; 0x02
    299c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    299e:	8e 01       	movw	r16, r28
    29a0:	0d 52       	subi	r16, 0x2D	; 45
    29a2:	1e 4f       	sbci	r17, 0xFE	; 254
    29a4:	ce 01       	movw	r24, r28
    29a6:	83 5a       	subi	r24, 0xA3	; 163
    29a8:	9f 4f       	sbci	r25, 0xFF	; 255
    29aa:	20 e0       	ldi	r18, 0x00	; 0
    29ac:	30 e0       	ldi	r19, 0x00	; 0
    29ae:	4a e7       	ldi	r20, 0x7A	; 122
    29b0:	55 e4       	ldi	r21, 0x45	; 69
    29b2:	fc 01       	movw	r30, r24
    29b4:	60 81       	ld	r22, Z
    29b6:	71 81       	ldd	r23, Z+1	; 0x01
    29b8:	82 81       	ldd	r24, Z+2	; 0x02
    29ba:	93 81       	ldd	r25, Z+3	; 0x03
    29bc:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    29c0:	dc 01       	movw	r26, r24
    29c2:	cb 01       	movw	r24, r22
    29c4:	f8 01       	movw	r30, r16
    29c6:	80 83       	st	Z, r24
    29c8:	91 83       	std	Z+1, r25	; 0x01
    29ca:	a2 83       	std	Z+2, r26	; 0x02
    29cc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    29ce:	ce 01       	movw	r24, r28
    29d0:	8d 52       	subi	r24, 0x2D	; 45
    29d2:	9e 4f       	sbci	r25, 0xFE	; 254
    29d4:	20 e0       	ldi	r18, 0x00	; 0
    29d6:	30 e0       	ldi	r19, 0x00	; 0
    29d8:	40 e8       	ldi	r20, 0x80	; 128
    29da:	5f e3       	ldi	r21, 0x3F	; 63
    29dc:	fc 01       	movw	r30, r24
    29de:	60 81       	ld	r22, Z
    29e0:	71 81       	ldd	r23, Z+1	; 0x01
    29e2:	82 81       	ldd	r24, Z+2	; 0x02
    29e4:	93 81       	ldd	r25, Z+3	; 0x03
    29e6:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    29ea:	88 23       	and	r24, r24
    29ec:	4c f4       	brge	.+18     	; 0x2a00 <__stack+0x1901>
		__ticks = 1;
    29ee:	ce 01       	movw	r24, r28
    29f0:	89 52       	subi	r24, 0x29	; 41
    29f2:	9e 4f       	sbci	r25, 0xFE	; 254
    29f4:	21 e0       	ldi	r18, 0x01	; 1
    29f6:	30 e0       	ldi	r19, 0x00	; 0
    29f8:	fc 01       	movw	r30, r24
    29fa:	31 83       	std	Z+1, r19	; 0x01
    29fc:	20 83       	st	Z, r18
    29fe:	6d c0       	rjmp	.+218    	; 0x2ada <__stack+0x19db>
	else if (__tmp > 65535)
    2a00:	ce 01       	movw	r24, r28
    2a02:	8d 52       	subi	r24, 0x2D	; 45
    2a04:	9e 4f       	sbci	r25, 0xFE	; 254
    2a06:	20 e0       	ldi	r18, 0x00	; 0
    2a08:	3f ef       	ldi	r19, 0xFF	; 255
    2a0a:	4f e7       	ldi	r20, 0x7F	; 127
    2a0c:	57 e4       	ldi	r21, 0x47	; 71
    2a0e:	fc 01       	movw	r30, r24
    2a10:	60 81       	ld	r22, Z
    2a12:	71 81       	ldd	r23, Z+1	; 0x01
    2a14:	82 81       	ldd	r24, Z+2	; 0x02
    2a16:	93 81       	ldd	r25, Z+3	; 0x03
    2a18:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    2a1c:	18 16       	cp	r1, r24
    2a1e:	0c f0       	brlt	.+2      	; 0x2a22 <__stack+0x1923>
    2a20:	4a c0       	rjmp	.+148    	; 0x2ab6 <__stack+0x19b7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a22:	ce 01       	movw	r24, r28
    2a24:	83 5a       	subi	r24, 0xA3	; 163
    2a26:	9f 4f       	sbci	r25, 0xFF	; 255
    2a28:	20 e0       	ldi	r18, 0x00	; 0
    2a2a:	30 e0       	ldi	r19, 0x00	; 0
    2a2c:	40 e2       	ldi	r20, 0x20	; 32
    2a2e:	51 e4       	ldi	r21, 0x41	; 65
    2a30:	fc 01       	movw	r30, r24
    2a32:	60 81       	ld	r22, Z
    2a34:	71 81       	ldd	r23, Z+1	; 0x01
    2a36:	82 81       	ldd	r24, Z+2	; 0x02
    2a38:	93 81       	ldd	r25, Z+3	; 0x03
    2a3a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    2a3e:	dc 01       	movw	r26, r24
    2a40:	cb 01       	movw	r24, r22
    2a42:	8e 01       	movw	r16, r28
    2a44:	09 52       	subi	r16, 0x29	; 41
    2a46:	1e 4f       	sbci	r17, 0xFE	; 254
    2a48:	bc 01       	movw	r22, r24
    2a4a:	cd 01       	movw	r24, r26
    2a4c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    2a50:	dc 01       	movw	r26, r24
    2a52:	cb 01       	movw	r24, r22
    2a54:	f8 01       	movw	r30, r16
    2a56:	91 83       	std	Z+1, r25	; 0x01
    2a58:	80 83       	st	Z, r24
    2a5a:	24 c0       	rjmp	.+72     	; 0x2aa4 <__stack+0x19a5>
    2a5c:	ce 01       	movw	r24, r28
    2a5e:	87 52       	subi	r24, 0x27	; 39
    2a60:	9e 4f       	sbci	r25, 0xFE	; 254
    2a62:	20 e9       	ldi	r18, 0x90	; 144
    2a64:	31 e0       	ldi	r19, 0x01	; 1
    2a66:	fc 01       	movw	r30, r24
    2a68:	31 83       	std	Z+1, r19	; 0x01
    2a6a:	20 83       	st	Z, r18
    2a6c:	ce 01       	movw	r24, r28
    2a6e:	87 52       	subi	r24, 0x27	; 39
    2a70:	9e 4f       	sbci	r25, 0xFE	; 254
    2a72:	fc 01       	movw	r30, r24
    2a74:	80 81       	ld	r24, Z
    2a76:	91 81       	ldd	r25, Z+1	; 0x01
    2a78:	01 97       	sbiw	r24, 0x01	; 1
    2a7a:	f1 f7       	brne	.-4      	; 0x2a78 <__stack+0x1979>
    2a7c:	9e 01       	movw	r18, r28
    2a7e:	27 52       	subi	r18, 0x27	; 39
    2a80:	3e 4f       	sbci	r19, 0xFE	; 254
    2a82:	f9 01       	movw	r30, r18
    2a84:	91 83       	std	Z+1, r25	; 0x01
    2a86:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a88:	ce 01       	movw	r24, r28
    2a8a:	89 52       	subi	r24, 0x29	; 41
    2a8c:	9e 4f       	sbci	r25, 0xFE	; 254
    2a8e:	9e 01       	movw	r18, r28
    2a90:	29 52       	subi	r18, 0x29	; 41
    2a92:	3e 4f       	sbci	r19, 0xFE	; 254
    2a94:	f9 01       	movw	r30, r18
    2a96:	20 81       	ld	r18, Z
    2a98:	31 81       	ldd	r19, Z+1	; 0x01
    2a9a:	21 50       	subi	r18, 0x01	; 1
    2a9c:	31 09       	sbc	r19, r1
    2a9e:	fc 01       	movw	r30, r24
    2aa0:	31 83       	std	Z+1, r19	; 0x01
    2aa2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2aa4:	ce 01       	movw	r24, r28
    2aa6:	89 52       	subi	r24, 0x29	; 41
    2aa8:	9e 4f       	sbci	r25, 0xFE	; 254
    2aaa:	fc 01       	movw	r30, r24
    2aac:	80 81       	ld	r24, Z
    2aae:	91 81       	ldd	r25, Z+1	; 0x01
    2ab0:	89 2b       	or	r24, r25
    2ab2:	a1 f6       	brne	.-88     	; 0x2a5c <__stack+0x195d>
    2ab4:	2c c0       	rjmp	.+88     	; 0x2b0e <__stack+0x1a0f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ab6:	8e 01       	movw	r16, r28
    2ab8:	09 52       	subi	r16, 0x29	; 41
    2aba:	1e 4f       	sbci	r17, 0xFE	; 254
    2abc:	ce 01       	movw	r24, r28
    2abe:	8d 52       	subi	r24, 0x2D	; 45
    2ac0:	9e 4f       	sbci	r25, 0xFE	; 254
    2ac2:	fc 01       	movw	r30, r24
    2ac4:	60 81       	ld	r22, Z
    2ac6:	71 81       	ldd	r23, Z+1	; 0x01
    2ac8:	82 81       	ldd	r24, Z+2	; 0x02
    2aca:	93 81       	ldd	r25, Z+3	; 0x03
    2acc:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    2ad0:	dc 01       	movw	r26, r24
    2ad2:	cb 01       	movw	r24, r22
    2ad4:	f8 01       	movw	r30, r16
    2ad6:	91 83       	std	Z+1, r25	; 0x01
    2ad8:	80 83       	st	Z, r24
    2ada:	ce 01       	movw	r24, r28
    2adc:	85 52       	subi	r24, 0x25	; 37
    2ade:	9e 4f       	sbci	r25, 0xFE	; 254
    2ae0:	9e 01       	movw	r18, r28
    2ae2:	29 52       	subi	r18, 0x29	; 41
    2ae4:	3e 4f       	sbci	r19, 0xFE	; 254
    2ae6:	f9 01       	movw	r30, r18
    2ae8:	20 81       	ld	r18, Z
    2aea:	31 81       	ldd	r19, Z+1	; 0x01
    2aec:	fc 01       	movw	r30, r24
    2aee:	31 83       	std	Z+1, r19	; 0x01
    2af0:	20 83       	st	Z, r18
    2af2:	ce 01       	movw	r24, r28
    2af4:	85 52       	subi	r24, 0x25	; 37
    2af6:	9e 4f       	sbci	r25, 0xFE	; 254
    2af8:	fc 01       	movw	r30, r24
    2afa:	80 81       	ld	r24, Z
    2afc:	91 81       	ldd	r25, Z+1	; 0x01
    2afe:	01 97       	sbiw	r24, 0x01	; 1
    2b00:	f1 f7       	brne	.-4      	; 0x2afe <__stack+0x19ff>
    2b02:	9e 01       	movw	r18, r28
    2b04:	25 52       	subi	r18, 0x25	; 37
    2b06:	3e 4f       	sbci	r19, 0xFE	; 254
    2b08:	f9 01       	movw	r30, r18
    2b0a:	91 83       	std	Z+1, r25	; 0x01
    2b0c:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F520 T80\n");
    2b0e:	8c e6       	ldi	r24, 0x6C	; 108
    2b10:	92 e0       	ldi	r25, 0x02	; 2
    2b12:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    2b16:	9e 01       	movw	r18, r28
    2b18:	2f 59       	subi	r18, 0x9F	; 159
    2b1a:	3f 4f       	sbci	r19, 0xFF	; 255
    2b1c:	80 e0       	ldi	r24, 0x00	; 0
    2b1e:	90 e0       	ldi	r25, 0x00	; 0
    2b20:	a6 e1       	ldi	r26, 0x16	; 22
    2b22:	b3 e4       	ldi	r27, 0x43	; 67
    2b24:	f9 01       	movw	r30, r18
    2b26:	80 83       	st	Z, r24
    2b28:	91 83       	std	Z+1, r25	; 0x01
    2b2a:	a2 83       	std	Z+2, r26	; 0x02
    2b2c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2b2e:	8e 01       	movw	r16, r28
    2b30:	07 53       	subi	r16, 0x37	; 55
    2b32:	1e 4f       	sbci	r17, 0xFE	; 254
    2b34:	ce 01       	movw	r24, r28
    2b36:	8f 59       	subi	r24, 0x9F	; 159
    2b38:	9f 4f       	sbci	r25, 0xFF	; 255
    2b3a:	20 e0       	ldi	r18, 0x00	; 0
    2b3c:	30 e0       	ldi	r19, 0x00	; 0
    2b3e:	4a e7       	ldi	r20, 0x7A	; 122
    2b40:	55 e4       	ldi	r21, 0x45	; 69
    2b42:	fc 01       	movw	r30, r24
    2b44:	60 81       	ld	r22, Z
    2b46:	71 81       	ldd	r23, Z+1	; 0x01
    2b48:	82 81       	ldd	r24, Z+2	; 0x02
    2b4a:	93 81       	ldd	r25, Z+3	; 0x03
    2b4c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    2b50:	dc 01       	movw	r26, r24
    2b52:	cb 01       	movw	r24, r22
    2b54:	f8 01       	movw	r30, r16
    2b56:	80 83       	st	Z, r24
    2b58:	91 83       	std	Z+1, r25	; 0x01
    2b5a:	a2 83       	std	Z+2, r26	; 0x02
    2b5c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b5e:	ce 01       	movw	r24, r28
    2b60:	87 53       	subi	r24, 0x37	; 55
    2b62:	9e 4f       	sbci	r25, 0xFE	; 254
    2b64:	20 e0       	ldi	r18, 0x00	; 0
    2b66:	30 e0       	ldi	r19, 0x00	; 0
    2b68:	40 e8       	ldi	r20, 0x80	; 128
    2b6a:	5f e3       	ldi	r21, 0x3F	; 63
    2b6c:	fc 01       	movw	r30, r24
    2b6e:	60 81       	ld	r22, Z
    2b70:	71 81       	ldd	r23, Z+1	; 0x01
    2b72:	82 81       	ldd	r24, Z+2	; 0x02
    2b74:	93 81       	ldd	r25, Z+3	; 0x03
    2b76:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    2b7a:	88 23       	and	r24, r24
    2b7c:	4c f4       	brge	.+18     	; 0x2b90 <__stack+0x1a91>
		__ticks = 1;
    2b7e:	ce 01       	movw	r24, r28
    2b80:	83 53       	subi	r24, 0x33	; 51
    2b82:	9e 4f       	sbci	r25, 0xFE	; 254
    2b84:	21 e0       	ldi	r18, 0x01	; 1
    2b86:	30 e0       	ldi	r19, 0x00	; 0
    2b88:	fc 01       	movw	r30, r24
    2b8a:	31 83       	std	Z+1, r19	; 0x01
    2b8c:	20 83       	st	Z, r18
    2b8e:	6d c0       	rjmp	.+218    	; 0x2c6a <__stack+0x1b6b>
	else if (__tmp > 65535)
    2b90:	ce 01       	movw	r24, r28
    2b92:	87 53       	subi	r24, 0x37	; 55
    2b94:	9e 4f       	sbci	r25, 0xFE	; 254
    2b96:	20 e0       	ldi	r18, 0x00	; 0
    2b98:	3f ef       	ldi	r19, 0xFF	; 255
    2b9a:	4f e7       	ldi	r20, 0x7F	; 127
    2b9c:	57 e4       	ldi	r21, 0x47	; 71
    2b9e:	fc 01       	movw	r30, r24
    2ba0:	60 81       	ld	r22, Z
    2ba2:	71 81       	ldd	r23, Z+1	; 0x01
    2ba4:	82 81       	ldd	r24, Z+2	; 0x02
    2ba6:	93 81       	ldd	r25, Z+3	; 0x03
    2ba8:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    2bac:	18 16       	cp	r1, r24
    2bae:	0c f0       	brlt	.+2      	; 0x2bb2 <__stack+0x1ab3>
    2bb0:	4a c0       	rjmp	.+148    	; 0x2c46 <__stack+0x1b47>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bb2:	ce 01       	movw	r24, r28
    2bb4:	8f 59       	subi	r24, 0x9F	; 159
    2bb6:	9f 4f       	sbci	r25, 0xFF	; 255
    2bb8:	20 e0       	ldi	r18, 0x00	; 0
    2bba:	30 e0       	ldi	r19, 0x00	; 0
    2bbc:	40 e2       	ldi	r20, 0x20	; 32
    2bbe:	51 e4       	ldi	r21, 0x41	; 65
    2bc0:	fc 01       	movw	r30, r24
    2bc2:	60 81       	ld	r22, Z
    2bc4:	71 81       	ldd	r23, Z+1	; 0x01
    2bc6:	82 81       	ldd	r24, Z+2	; 0x02
    2bc8:	93 81       	ldd	r25, Z+3	; 0x03
    2bca:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    2bce:	dc 01       	movw	r26, r24
    2bd0:	cb 01       	movw	r24, r22
    2bd2:	8e 01       	movw	r16, r28
    2bd4:	03 53       	subi	r16, 0x33	; 51
    2bd6:	1e 4f       	sbci	r17, 0xFE	; 254
    2bd8:	bc 01       	movw	r22, r24
    2bda:	cd 01       	movw	r24, r26
    2bdc:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    2be0:	dc 01       	movw	r26, r24
    2be2:	cb 01       	movw	r24, r22
    2be4:	f8 01       	movw	r30, r16
    2be6:	91 83       	std	Z+1, r25	; 0x01
    2be8:	80 83       	st	Z, r24
    2bea:	24 c0       	rjmp	.+72     	; 0x2c34 <__stack+0x1b35>
    2bec:	ce 01       	movw	r24, r28
    2bee:	81 53       	subi	r24, 0x31	; 49
    2bf0:	9e 4f       	sbci	r25, 0xFE	; 254
    2bf2:	20 e9       	ldi	r18, 0x90	; 144
    2bf4:	31 e0       	ldi	r19, 0x01	; 1
    2bf6:	fc 01       	movw	r30, r24
    2bf8:	31 83       	std	Z+1, r19	; 0x01
    2bfa:	20 83       	st	Z, r18
    2bfc:	ce 01       	movw	r24, r28
    2bfe:	81 53       	subi	r24, 0x31	; 49
    2c00:	9e 4f       	sbci	r25, 0xFE	; 254
    2c02:	fc 01       	movw	r30, r24
    2c04:	80 81       	ld	r24, Z
    2c06:	91 81       	ldd	r25, Z+1	; 0x01
    2c08:	01 97       	sbiw	r24, 0x01	; 1
    2c0a:	f1 f7       	brne	.-4      	; 0x2c08 <__stack+0x1b09>
    2c0c:	9e 01       	movw	r18, r28
    2c0e:	21 53       	subi	r18, 0x31	; 49
    2c10:	3e 4f       	sbci	r19, 0xFE	; 254
    2c12:	f9 01       	movw	r30, r18
    2c14:	91 83       	std	Z+1, r25	; 0x01
    2c16:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c18:	ce 01       	movw	r24, r28
    2c1a:	83 53       	subi	r24, 0x33	; 51
    2c1c:	9e 4f       	sbci	r25, 0xFE	; 254
    2c1e:	9e 01       	movw	r18, r28
    2c20:	23 53       	subi	r18, 0x33	; 51
    2c22:	3e 4f       	sbci	r19, 0xFE	; 254
    2c24:	f9 01       	movw	r30, r18
    2c26:	20 81       	ld	r18, Z
    2c28:	31 81       	ldd	r19, Z+1	; 0x01
    2c2a:	21 50       	subi	r18, 0x01	; 1
    2c2c:	31 09       	sbc	r19, r1
    2c2e:	fc 01       	movw	r30, r24
    2c30:	31 83       	std	Z+1, r19	; 0x01
    2c32:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c34:	ce 01       	movw	r24, r28
    2c36:	83 53       	subi	r24, 0x33	; 51
    2c38:	9e 4f       	sbci	r25, 0xFE	; 254
    2c3a:	fc 01       	movw	r30, r24
    2c3c:	80 81       	ld	r24, Z
    2c3e:	91 81       	ldd	r25, Z+1	; 0x01
    2c40:	89 2b       	or	r24, r25
    2c42:	a1 f6       	brne	.-88     	; 0x2bec <__stack+0x1aed>
    2c44:	2c c0       	rjmp	.+88     	; 0x2c9e <__stack+0x1b9f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c46:	8e 01       	movw	r16, r28
    2c48:	03 53       	subi	r16, 0x33	; 51
    2c4a:	1e 4f       	sbci	r17, 0xFE	; 254
    2c4c:	ce 01       	movw	r24, r28
    2c4e:	87 53       	subi	r24, 0x37	; 55
    2c50:	9e 4f       	sbci	r25, 0xFE	; 254
    2c52:	fc 01       	movw	r30, r24
    2c54:	60 81       	ld	r22, Z
    2c56:	71 81       	ldd	r23, Z+1	; 0x01
    2c58:	82 81       	ldd	r24, Z+2	; 0x02
    2c5a:	93 81       	ldd	r25, Z+3	; 0x03
    2c5c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    2c60:	dc 01       	movw	r26, r24
    2c62:	cb 01       	movw	r24, r22
    2c64:	f8 01       	movw	r30, r16
    2c66:	91 83       	std	Z+1, r25	; 0x01
    2c68:	80 83       	st	Z, r24
    2c6a:	ce 01       	movw	r24, r28
    2c6c:	8f 52       	subi	r24, 0x2F	; 47
    2c6e:	9e 4f       	sbci	r25, 0xFE	; 254
    2c70:	9e 01       	movw	r18, r28
    2c72:	23 53       	subi	r18, 0x33	; 51
    2c74:	3e 4f       	sbci	r19, 0xFE	; 254
    2c76:	f9 01       	movw	r30, r18
    2c78:	20 81       	ld	r18, Z
    2c7a:	31 81       	ldd	r19, Z+1	; 0x01
    2c7c:	fc 01       	movw	r30, r24
    2c7e:	31 83       	std	Z+1, r19	; 0x01
    2c80:	20 83       	st	Z, r18
    2c82:	ce 01       	movw	r24, r28
    2c84:	8f 52       	subi	r24, 0x2F	; 47
    2c86:	9e 4f       	sbci	r25, 0xFE	; 254
    2c88:	fc 01       	movw	r30, r24
    2c8a:	80 81       	ld	r24, Z
    2c8c:	91 81       	ldd	r25, Z+1	; 0x01
    2c8e:	01 97       	sbiw	r24, 0x01	; 1
    2c90:	f1 f7       	brne	.-4      	; 0x2c8e <__stack+0x1b8f>
    2c92:	9e 01       	movw	r18, r28
    2c94:	2f 52       	subi	r18, 0x2F	; 47
    2c96:	3e 4f       	sbci	r19, 0xFE	; 254
    2c98:	f9 01       	movw	r30, r18
    2c9a:	91 83       	std	Z+1, r25	; 0x01
    2c9c:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F580 T80\n");
    2c9e:	8c e7       	ldi	r24, 0x7C	; 124
    2ca0:	92 e0       	ldi	r25, 0x02	; 2
    2ca2:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    2ca6:	9e 01       	movw	r18, r28
    2ca8:	2b 59       	subi	r18, 0x9B	; 155
    2caa:	3f 4f       	sbci	r19, 0xFF	; 255
    2cac:	80 e0       	ldi	r24, 0x00	; 0
    2cae:	90 e0       	ldi	r25, 0x00	; 0
    2cb0:	a6 e1       	ldi	r26, 0x16	; 22
    2cb2:	b3 e4       	ldi	r27, 0x43	; 67
    2cb4:	f9 01       	movw	r30, r18
    2cb6:	80 83       	st	Z, r24
    2cb8:	91 83       	std	Z+1, r25	; 0x01
    2cba:	a2 83       	std	Z+2, r26	; 0x02
    2cbc:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2cbe:	8e 01       	movw	r16, r28
    2cc0:	01 54       	subi	r16, 0x41	; 65
    2cc2:	1e 4f       	sbci	r17, 0xFE	; 254
    2cc4:	ce 01       	movw	r24, r28
    2cc6:	8b 59       	subi	r24, 0x9B	; 155
    2cc8:	9f 4f       	sbci	r25, 0xFF	; 255
    2cca:	20 e0       	ldi	r18, 0x00	; 0
    2ccc:	30 e0       	ldi	r19, 0x00	; 0
    2cce:	4a e7       	ldi	r20, 0x7A	; 122
    2cd0:	55 e4       	ldi	r21, 0x45	; 69
    2cd2:	fc 01       	movw	r30, r24
    2cd4:	60 81       	ld	r22, Z
    2cd6:	71 81       	ldd	r23, Z+1	; 0x01
    2cd8:	82 81       	ldd	r24, Z+2	; 0x02
    2cda:	93 81       	ldd	r25, Z+3	; 0x03
    2cdc:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    2ce0:	dc 01       	movw	r26, r24
    2ce2:	cb 01       	movw	r24, r22
    2ce4:	f8 01       	movw	r30, r16
    2ce6:	80 83       	st	Z, r24
    2ce8:	91 83       	std	Z+1, r25	; 0x01
    2cea:	a2 83       	std	Z+2, r26	; 0x02
    2cec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2cee:	ce 01       	movw	r24, r28
    2cf0:	81 54       	subi	r24, 0x41	; 65
    2cf2:	9e 4f       	sbci	r25, 0xFE	; 254
    2cf4:	20 e0       	ldi	r18, 0x00	; 0
    2cf6:	30 e0       	ldi	r19, 0x00	; 0
    2cf8:	40 e8       	ldi	r20, 0x80	; 128
    2cfa:	5f e3       	ldi	r21, 0x3F	; 63
    2cfc:	fc 01       	movw	r30, r24
    2cfe:	60 81       	ld	r22, Z
    2d00:	71 81       	ldd	r23, Z+1	; 0x01
    2d02:	82 81       	ldd	r24, Z+2	; 0x02
    2d04:	93 81       	ldd	r25, Z+3	; 0x03
    2d06:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    2d0a:	88 23       	and	r24, r24
    2d0c:	4c f4       	brge	.+18     	; 0x2d20 <__stack+0x1c21>
		__ticks = 1;
    2d0e:	ce 01       	movw	r24, r28
    2d10:	8d 53       	subi	r24, 0x3D	; 61
    2d12:	9e 4f       	sbci	r25, 0xFE	; 254
    2d14:	21 e0       	ldi	r18, 0x01	; 1
    2d16:	30 e0       	ldi	r19, 0x00	; 0
    2d18:	fc 01       	movw	r30, r24
    2d1a:	31 83       	std	Z+1, r19	; 0x01
    2d1c:	20 83       	st	Z, r18
    2d1e:	6d c0       	rjmp	.+218    	; 0x2dfa <__stack+0x1cfb>
	else if (__tmp > 65535)
    2d20:	ce 01       	movw	r24, r28
    2d22:	81 54       	subi	r24, 0x41	; 65
    2d24:	9e 4f       	sbci	r25, 0xFE	; 254
    2d26:	20 e0       	ldi	r18, 0x00	; 0
    2d28:	3f ef       	ldi	r19, 0xFF	; 255
    2d2a:	4f e7       	ldi	r20, 0x7F	; 127
    2d2c:	57 e4       	ldi	r21, 0x47	; 71
    2d2e:	fc 01       	movw	r30, r24
    2d30:	60 81       	ld	r22, Z
    2d32:	71 81       	ldd	r23, Z+1	; 0x01
    2d34:	82 81       	ldd	r24, Z+2	; 0x02
    2d36:	93 81       	ldd	r25, Z+3	; 0x03
    2d38:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    2d3c:	18 16       	cp	r1, r24
    2d3e:	0c f0       	brlt	.+2      	; 0x2d42 <__stack+0x1c43>
    2d40:	4a c0       	rjmp	.+148    	; 0x2dd6 <__stack+0x1cd7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d42:	ce 01       	movw	r24, r28
    2d44:	8b 59       	subi	r24, 0x9B	; 155
    2d46:	9f 4f       	sbci	r25, 0xFF	; 255
    2d48:	20 e0       	ldi	r18, 0x00	; 0
    2d4a:	30 e0       	ldi	r19, 0x00	; 0
    2d4c:	40 e2       	ldi	r20, 0x20	; 32
    2d4e:	51 e4       	ldi	r21, 0x41	; 65
    2d50:	fc 01       	movw	r30, r24
    2d52:	60 81       	ld	r22, Z
    2d54:	71 81       	ldd	r23, Z+1	; 0x01
    2d56:	82 81       	ldd	r24, Z+2	; 0x02
    2d58:	93 81       	ldd	r25, Z+3	; 0x03
    2d5a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    2d5e:	dc 01       	movw	r26, r24
    2d60:	cb 01       	movw	r24, r22
    2d62:	8e 01       	movw	r16, r28
    2d64:	0d 53       	subi	r16, 0x3D	; 61
    2d66:	1e 4f       	sbci	r17, 0xFE	; 254
    2d68:	bc 01       	movw	r22, r24
    2d6a:	cd 01       	movw	r24, r26
    2d6c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    2d70:	dc 01       	movw	r26, r24
    2d72:	cb 01       	movw	r24, r22
    2d74:	f8 01       	movw	r30, r16
    2d76:	91 83       	std	Z+1, r25	; 0x01
    2d78:	80 83       	st	Z, r24
    2d7a:	24 c0       	rjmp	.+72     	; 0x2dc4 <__stack+0x1cc5>
    2d7c:	ce 01       	movw	r24, r28
    2d7e:	8b 53       	subi	r24, 0x3B	; 59
    2d80:	9e 4f       	sbci	r25, 0xFE	; 254
    2d82:	20 e9       	ldi	r18, 0x90	; 144
    2d84:	31 e0       	ldi	r19, 0x01	; 1
    2d86:	fc 01       	movw	r30, r24
    2d88:	31 83       	std	Z+1, r19	; 0x01
    2d8a:	20 83       	st	Z, r18
    2d8c:	ce 01       	movw	r24, r28
    2d8e:	8b 53       	subi	r24, 0x3B	; 59
    2d90:	9e 4f       	sbci	r25, 0xFE	; 254
    2d92:	fc 01       	movw	r30, r24
    2d94:	80 81       	ld	r24, Z
    2d96:	91 81       	ldd	r25, Z+1	; 0x01
    2d98:	01 97       	sbiw	r24, 0x01	; 1
    2d9a:	f1 f7       	brne	.-4      	; 0x2d98 <__stack+0x1c99>
    2d9c:	9e 01       	movw	r18, r28
    2d9e:	2b 53       	subi	r18, 0x3B	; 59
    2da0:	3e 4f       	sbci	r19, 0xFE	; 254
    2da2:	f9 01       	movw	r30, r18
    2da4:	91 83       	std	Z+1, r25	; 0x01
    2da6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2da8:	ce 01       	movw	r24, r28
    2daa:	8d 53       	subi	r24, 0x3D	; 61
    2dac:	9e 4f       	sbci	r25, 0xFE	; 254
    2dae:	9e 01       	movw	r18, r28
    2db0:	2d 53       	subi	r18, 0x3D	; 61
    2db2:	3e 4f       	sbci	r19, 0xFE	; 254
    2db4:	f9 01       	movw	r30, r18
    2db6:	20 81       	ld	r18, Z
    2db8:	31 81       	ldd	r19, Z+1	; 0x01
    2dba:	21 50       	subi	r18, 0x01	; 1
    2dbc:	31 09       	sbc	r19, r1
    2dbe:	fc 01       	movw	r30, r24
    2dc0:	31 83       	std	Z+1, r19	; 0x01
    2dc2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2dc4:	ce 01       	movw	r24, r28
    2dc6:	8d 53       	subi	r24, 0x3D	; 61
    2dc8:	9e 4f       	sbci	r25, 0xFE	; 254
    2dca:	fc 01       	movw	r30, r24
    2dcc:	80 81       	ld	r24, Z
    2dce:	91 81       	ldd	r25, Z+1	; 0x01
    2dd0:	89 2b       	or	r24, r25
    2dd2:	a1 f6       	brne	.-88     	; 0x2d7c <__stack+0x1c7d>
    2dd4:	2c c0       	rjmp	.+88     	; 0x2e2e <__stack+0x1d2f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2dd6:	8e 01       	movw	r16, r28
    2dd8:	0d 53       	subi	r16, 0x3D	; 61
    2dda:	1e 4f       	sbci	r17, 0xFE	; 254
    2ddc:	ce 01       	movw	r24, r28
    2dde:	81 54       	subi	r24, 0x41	; 65
    2de0:	9e 4f       	sbci	r25, 0xFE	; 254
    2de2:	fc 01       	movw	r30, r24
    2de4:	60 81       	ld	r22, Z
    2de6:	71 81       	ldd	r23, Z+1	; 0x01
    2de8:	82 81       	ldd	r24, Z+2	; 0x02
    2dea:	93 81       	ldd	r25, Z+3	; 0x03
    2dec:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    2df0:	dc 01       	movw	r26, r24
    2df2:	cb 01       	movw	r24, r22
    2df4:	f8 01       	movw	r30, r16
    2df6:	91 83       	std	Z+1, r25	; 0x01
    2df8:	80 83       	st	Z, r24
    2dfa:	ce 01       	movw	r24, r28
    2dfc:	89 53       	subi	r24, 0x39	; 57
    2dfe:	9e 4f       	sbci	r25, 0xFE	; 254
    2e00:	9e 01       	movw	r18, r28
    2e02:	2d 53       	subi	r18, 0x3D	; 61
    2e04:	3e 4f       	sbci	r19, 0xFE	; 254
    2e06:	f9 01       	movw	r30, r18
    2e08:	20 81       	ld	r18, Z
    2e0a:	31 81       	ldd	r19, Z+1	; 0x01
    2e0c:	fc 01       	movw	r30, r24
    2e0e:	31 83       	std	Z+1, r19	; 0x01
    2e10:	20 83       	st	Z, r18
    2e12:	ce 01       	movw	r24, r28
    2e14:	89 53       	subi	r24, 0x39	; 57
    2e16:	9e 4f       	sbci	r25, 0xFE	; 254
    2e18:	fc 01       	movw	r30, r24
    2e1a:	80 81       	ld	r24, Z
    2e1c:	91 81       	ldd	r25, Z+1	; 0x01
    2e1e:	01 97       	sbiw	r24, 0x01	; 1
    2e20:	f1 f7       	brne	.-4      	; 0x2e1e <__stack+0x1d1f>
    2e22:	9e 01       	movw	r18, r28
    2e24:	29 53       	subi	r18, 0x39	; 57
    2e26:	3e 4f       	sbci	r19, 0xFE	; 254
    2e28:	f9 01       	movw	r30, r18
    2e2a:	91 83       	std	Z+1, r25	; 0x01
    2e2c:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F480 T80\n");
    2e2e:	89 ef       	ldi	r24, 0xF9	; 249
    2e30:	91 e0       	ldi	r25, 0x01	; 1
    2e32:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    2e36:	9e 01       	movw	r18, r28
    2e38:	27 59       	subi	r18, 0x97	; 151
    2e3a:	3f 4f       	sbci	r19, 0xFF	; 255
    2e3c:	80 e0       	ldi	r24, 0x00	; 0
    2e3e:	90 e0       	ldi	r25, 0x00	; 0
    2e40:	aa ef       	ldi	r26, 0xFA	; 250
    2e42:	b3 e4       	ldi	r27, 0x43	; 67
    2e44:	f9 01       	movw	r30, r18
    2e46:	80 83       	st	Z, r24
    2e48:	91 83       	std	Z+1, r25	; 0x01
    2e4a:	a2 83       	std	Z+2, r26	; 0x02
    2e4c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2e4e:	8e 01       	movw	r16, r28
    2e50:	0b 54       	subi	r16, 0x4B	; 75
    2e52:	1e 4f       	sbci	r17, 0xFE	; 254
    2e54:	ce 01       	movw	r24, r28
    2e56:	87 59       	subi	r24, 0x97	; 151
    2e58:	9f 4f       	sbci	r25, 0xFF	; 255
    2e5a:	20 e0       	ldi	r18, 0x00	; 0
    2e5c:	30 e0       	ldi	r19, 0x00	; 0
    2e5e:	4a e7       	ldi	r20, 0x7A	; 122
    2e60:	55 e4       	ldi	r21, 0x45	; 69
    2e62:	fc 01       	movw	r30, r24
    2e64:	60 81       	ld	r22, Z
    2e66:	71 81       	ldd	r23, Z+1	; 0x01
    2e68:	82 81       	ldd	r24, Z+2	; 0x02
    2e6a:	93 81       	ldd	r25, Z+3	; 0x03
    2e6c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    2e70:	dc 01       	movw	r26, r24
    2e72:	cb 01       	movw	r24, r22
    2e74:	f8 01       	movw	r30, r16
    2e76:	80 83       	st	Z, r24
    2e78:	91 83       	std	Z+1, r25	; 0x01
    2e7a:	a2 83       	std	Z+2, r26	; 0x02
    2e7c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2e7e:	ce 01       	movw	r24, r28
    2e80:	8b 54       	subi	r24, 0x4B	; 75
    2e82:	9e 4f       	sbci	r25, 0xFE	; 254
    2e84:	20 e0       	ldi	r18, 0x00	; 0
    2e86:	30 e0       	ldi	r19, 0x00	; 0
    2e88:	40 e8       	ldi	r20, 0x80	; 128
    2e8a:	5f e3       	ldi	r21, 0x3F	; 63
    2e8c:	fc 01       	movw	r30, r24
    2e8e:	60 81       	ld	r22, Z
    2e90:	71 81       	ldd	r23, Z+1	; 0x01
    2e92:	82 81       	ldd	r24, Z+2	; 0x02
    2e94:	93 81       	ldd	r25, Z+3	; 0x03
    2e96:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    2e9a:	88 23       	and	r24, r24
    2e9c:	4c f4       	brge	.+18     	; 0x2eb0 <__stack+0x1db1>
		__ticks = 1;
    2e9e:	ce 01       	movw	r24, r28
    2ea0:	87 54       	subi	r24, 0x47	; 71
    2ea2:	9e 4f       	sbci	r25, 0xFE	; 254
    2ea4:	21 e0       	ldi	r18, 0x01	; 1
    2ea6:	30 e0       	ldi	r19, 0x00	; 0
    2ea8:	fc 01       	movw	r30, r24
    2eaa:	31 83       	std	Z+1, r19	; 0x01
    2eac:	20 83       	st	Z, r18
    2eae:	6d c0       	rjmp	.+218    	; 0x2f8a <__stack+0x1e8b>
	else if (__tmp > 65535)
    2eb0:	ce 01       	movw	r24, r28
    2eb2:	8b 54       	subi	r24, 0x4B	; 75
    2eb4:	9e 4f       	sbci	r25, 0xFE	; 254
    2eb6:	20 e0       	ldi	r18, 0x00	; 0
    2eb8:	3f ef       	ldi	r19, 0xFF	; 255
    2eba:	4f e7       	ldi	r20, 0x7F	; 127
    2ebc:	57 e4       	ldi	r21, 0x47	; 71
    2ebe:	fc 01       	movw	r30, r24
    2ec0:	60 81       	ld	r22, Z
    2ec2:	71 81       	ldd	r23, Z+1	; 0x01
    2ec4:	82 81       	ldd	r24, Z+2	; 0x02
    2ec6:	93 81       	ldd	r25, Z+3	; 0x03
    2ec8:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    2ecc:	18 16       	cp	r1, r24
    2ece:	0c f0       	brlt	.+2      	; 0x2ed2 <__stack+0x1dd3>
    2ed0:	4a c0       	rjmp	.+148    	; 0x2f66 <__stack+0x1e67>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ed2:	ce 01       	movw	r24, r28
    2ed4:	87 59       	subi	r24, 0x97	; 151
    2ed6:	9f 4f       	sbci	r25, 0xFF	; 255
    2ed8:	20 e0       	ldi	r18, 0x00	; 0
    2eda:	30 e0       	ldi	r19, 0x00	; 0
    2edc:	40 e2       	ldi	r20, 0x20	; 32
    2ede:	51 e4       	ldi	r21, 0x41	; 65
    2ee0:	fc 01       	movw	r30, r24
    2ee2:	60 81       	ld	r22, Z
    2ee4:	71 81       	ldd	r23, Z+1	; 0x01
    2ee6:	82 81       	ldd	r24, Z+2	; 0x02
    2ee8:	93 81       	ldd	r25, Z+3	; 0x03
    2eea:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    2eee:	dc 01       	movw	r26, r24
    2ef0:	cb 01       	movw	r24, r22
    2ef2:	8e 01       	movw	r16, r28
    2ef4:	07 54       	subi	r16, 0x47	; 71
    2ef6:	1e 4f       	sbci	r17, 0xFE	; 254
    2ef8:	bc 01       	movw	r22, r24
    2efa:	cd 01       	movw	r24, r26
    2efc:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    2f00:	dc 01       	movw	r26, r24
    2f02:	cb 01       	movw	r24, r22
    2f04:	f8 01       	movw	r30, r16
    2f06:	91 83       	std	Z+1, r25	; 0x01
    2f08:	80 83       	st	Z, r24
    2f0a:	24 c0       	rjmp	.+72     	; 0x2f54 <__stack+0x1e55>
    2f0c:	ce 01       	movw	r24, r28
    2f0e:	85 54       	subi	r24, 0x45	; 69
    2f10:	9e 4f       	sbci	r25, 0xFE	; 254
    2f12:	20 e9       	ldi	r18, 0x90	; 144
    2f14:	31 e0       	ldi	r19, 0x01	; 1
    2f16:	fc 01       	movw	r30, r24
    2f18:	31 83       	std	Z+1, r19	; 0x01
    2f1a:	20 83       	st	Z, r18
    2f1c:	ce 01       	movw	r24, r28
    2f1e:	85 54       	subi	r24, 0x45	; 69
    2f20:	9e 4f       	sbci	r25, 0xFE	; 254
    2f22:	fc 01       	movw	r30, r24
    2f24:	80 81       	ld	r24, Z
    2f26:	91 81       	ldd	r25, Z+1	; 0x01
    2f28:	01 97       	sbiw	r24, 0x01	; 1
    2f2a:	f1 f7       	brne	.-4      	; 0x2f28 <__stack+0x1e29>
    2f2c:	9e 01       	movw	r18, r28
    2f2e:	25 54       	subi	r18, 0x45	; 69
    2f30:	3e 4f       	sbci	r19, 0xFE	; 254
    2f32:	f9 01       	movw	r30, r18
    2f34:	91 83       	std	Z+1, r25	; 0x01
    2f36:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f38:	ce 01       	movw	r24, r28
    2f3a:	87 54       	subi	r24, 0x47	; 71
    2f3c:	9e 4f       	sbci	r25, 0xFE	; 254
    2f3e:	9e 01       	movw	r18, r28
    2f40:	27 54       	subi	r18, 0x47	; 71
    2f42:	3e 4f       	sbci	r19, 0xFE	; 254
    2f44:	f9 01       	movw	r30, r18
    2f46:	20 81       	ld	r18, Z
    2f48:	31 81       	ldd	r19, Z+1	; 0x01
    2f4a:	21 50       	subi	r18, 0x01	; 1
    2f4c:	31 09       	sbc	r19, r1
    2f4e:	fc 01       	movw	r30, r24
    2f50:	31 83       	std	Z+1, r19	; 0x01
    2f52:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f54:	ce 01       	movw	r24, r28
    2f56:	87 54       	subi	r24, 0x47	; 71
    2f58:	9e 4f       	sbci	r25, 0xFE	; 254
    2f5a:	fc 01       	movw	r30, r24
    2f5c:	80 81       	ld	r24, Z
    2f5e:	91 81       	ldd	r25, Z+1	; 0x01
    2f60:	89 2b       	or	r24, r25
    2f62:	a1 f6       	brne	.-88     	; 0x2f0c <__stack+0x1e0d>
    2f64:	2c c0       	rjmp	.+88     	; 0x2fbe <__stack+0x1ebf>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f66:	8e 01       	movw	r16, r28
    2f68:	07 54       	subi	r16, 0x47	; 71
    2f6a:	1e 4f       	sbci	r17, 0xFE	; 254
    2f6c:	ce 01       	movw	r24, r28
    2f6e:	8b 54       	subi	r24, 0x4B	; 75
    2f70:	9e 4f       	sbci	r25, 0xFE	; 254
    2f72:	fc 01       	movw	r30, r24
    2f74:	60 81       	ld	r22, Z
    2f76:	71 81       	ldd	r23, Z+1	; 0x01
    2f78:	82 81       	ldd	r24, Z+2	; 0x02
    2f7a:	93 81       	ldd	r25, Z+3	; 0x03
    2f7c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    2f80:	dc 01       	movw	r26, r24
    2f82:	cb 01       	movw	r24, r22
    2f84:	f8 01       	movw	r30, r16
    2f86:	91 83       	std	Z+1, r25	; 0x01
    2f88:	80 83       	st	Z, r24
    2f8a:	ce 01       	movw	r24, r28
    2f8c:	83 54       	subi	r24, 0x43	; 67
    2f8e:	9e 4f       	sbci	r25, 0xFE	; 254
    2f90:	9e 01       	movw	r18, r28
    2f92:	27 54       	subi	r18, 0x47	; 71
    2f94:	3e 4f       	sbci	r19, 0xFE	; 254
    2f96:	f9 01       	movw	r30, r18
    2f98:	20 81       	ld	r18, Z
    2f9a:	31 81       	ldd	r19, Z+1	; 0x01
    2f9c:	fc 01       	movw	r30, r24
    2f9e:	31 83       	std	Z+1, r19	; 0x01
    2fa0:	20 83       	st	Z, r18
    2fa2:	ce 01       	movw	r24, r28
    2fa4:	83 54       	subi	r24, 0x43	; 67
    2fa6:	9e 4f       	sbci	r25, 0xFE	; 254
    2fa8:	fc 01       	movw	r30, r24
    2faa:	80 81       	ld	r24, Z
    2fac:	91 81       	ldd	r25, Z+1	; 0x01
    2fae:	01 97       	sbiw	r24, 0x01	; 1
    2fb0:	f1 f7       	brne	.-4      	; 0x2fae <__stack+0x1eaf>
    2fb2:	9e 01       	movw	r18, r28
    2fb4:	23 54       	subi	r18, 0x43	; 67
    2fb6:	3e 4f       	sbci	r19, 0xFE	; 254
    2fb8:	f9 01       	movw	r30, r18
    2fba:	91 83       	std	Z+1, r25	; 0x01
    2fbc:	80 83       	st	Z, r24
			_delay_ms(500);
			
			to_uARM("M2210 F510 T100\n");
    2fbe:	84 ea       	ldi	r24, 0xA4	; 164
    2fc0:	91 e0       	ldi	r25, 0x01	; 1
    2fc2:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    2fc6:	9e 01       	movw	r18, r28
    2fc8:	23 59       	subi	r18, 0x93	; 147
    2fca:	3f 4f       	sbci	r19, 0xFF	; 255
    2fcc:	80 e0       	ldi	r24, 0x00	; 0
    2fce:	90 e0       	ldi	r25, 0x00	; 0
    2fd0:	a1 ee       	ldi	r26, 0xE1	; 225
    2fd2:	b3 e4       	ldi	r27, 0x43	; 67
    2fd4:	f9 01       	movw	r30, r18
    2fd6:	80 83       	st	Z, r24
    2fd8:	91 83       	std	Z+1, r25	; 0x01
    2fda:	a2 83       	std	Z+2, r26	; 0x02
    2fdc:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2fde:	8e 01       	movw	r16, r28
    2fe0:	05 55       	subi	r16, 0x55	; 85
    2fe2:	1e 4f       	sbci	r17, 0xFE	; 254
    2fe4:	ce 01       	movw	r24, r28
    2fe6:	83 59       	subi	r24, 0x93	; 147
    2fe8:	9f 4f       	sbci	r25, 0xFF	; 255
    2fea:	20 e0       	ldi	r18, 0x00	; 0
    2fec:	30 e0       	ldi	r19, 0x00	; 0
    2fee:	4a e7       	ldi	r20, 0x7A	; 122
    2ff0:	55 e4       	ldi	r21, 0x45	; 69
    2ff2:	fc 01       	movw	r30, r24
    2ff4:	60 81       	ld	r22, Z
    2ff6:	71 81       	ldd	r23, Z+1	; 0x01
    2ff8:	82 81       	ldd	r24, Z+2	; 0x02
    2ffa:	93 81       	ldd	r25, Z+3	; 0x03
    2ffc:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    3000:	dc 01       	movw	r26, r24
    3002:	cb 01       	movw	r24, r22
    3004:	f8 01       	movw	r30, r16
    3006:	80 83       	st	Z, r24
    3008:	91 83       	std	Z+1, r25	; 0x01
    300a:	a2 83       	std	Z+2, r26	; 0x02
    300c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    300e:	ce 01       	movw	r24, r28
    3010:	85 55       	subi	r24, 0x55	; 85
    3012:	9e 4f       	sbci	r25, 0xFE	; 254
    3014:	20 e0       	ldi	r18, 0x00	; 0
    3016:	30 e0       	ldi	r19, 0x00	; 0
    3018:	40 e8       	ldi	r20, 0x80	; 128
    301a:	5f e3       	ldi	r21, 0x3F	; 63
    301c:	fc 01       	movw	r30, r24
    301e:	60 81       	ld	r22, Z
    3020:	71 81       	ldd	r23, Z+1	; 0x01
    3022:	82 81       	ldd	r24, Z+2	; 0x02
    3024:	93 81       	ldd	r25, Z+3	; 0x03
    3026:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    302a:	88 23       	and	r24, r24
    302c:	4c f4       	brge	.+18     	; 0x3040 <__stack+0x1f41>
		__ticks = 1;
    302e:	ce 01       	movw	r24, r28
    3030:	81 55       	subi	r24, 0x51	; 81
    3032:	9e 4f       	sbci	r25, 0xFE	; 254
    3034:	21 e0       	ldi	r18, 0x01	; 1
    3036:	30 e0       	ldi	r19, 0x00	; 0
    3038:	fc 01       	movw	r30, r24
    303a:	31 83       	std	Z+1, r19	; 0x01
    303c:	20 83       	st	Z, r18
    303e:	6d c0       	rjmp	.+218    	; 0x311a <__stack+0x201b>
	else if (__tmp > 65535)
    3040:	ce 01       	movw	r24, r28
    3042:	85 55       	subi	r24, 0x55	; 85
    3044:	9e 4f       	sbci	r25, 0xFE	; 254
    3046:	20 e0       	ldi	r18, 0x00	; 0
    3048:	3f ef       	ldi	r19, 0xFF	; 255
    304a:	4f e7       	ldi	r20, 0x7F	; 127
    304c:	57 e4       	ldi	r21, 0x47	; 71
    304e:	fc 01       	movw	r30, r24
    3050:	60 81       	ld	r22, Z
    3052:	71 81       	ldd	r23, Z+1	; 0x01
    3054:	82 81       	ldd	r24, Z+2	; 0x02
    3056:	93 81       	ldd	r25, Z+3	; 0x03
    3058:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    305c:	18 16       	cp	r1, r24
    305e:	0c f0       	brlt	.+2      	; 0x3062 <__stack+0x1f63>
    3060:	4a c0       	rjmp	.+148    	; 0x30f6 <__stack+0x1ff7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3062:	ce 01       	movw	r24, r28
    3064:	83 59       	subi	r24, 0x93	; 147
    3066:	9f 4f       	sbci	r25, 0xFF	; 255
    3068:	20 e0       	ldi	r18, 0x00	; 0
    306a:	30 e0       	ldi	r19, 0x00	; 0
    306c:	40 e2       	ldi	r20, 0x20	; 32
    306e:	51 e4       	ldi	r21, 0x41	; 65
    3070:	fc 01       	movw	r30, r24
    3072:	60 81       	ld	r22, Z
    3074:	71 81       	ldd	r23, Z+1	; 0x01
    3076:	82 81       	ldd	r24, Z+2	; 0x02
    3078:	93 81       	ldd	r25, Z+3	; 0x03
    307a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    307e:	dc 01       	movw	r26, r24
    3080:	cb 01       	movw	r24, r22
    3082:	8e 01       	movw	r16, r28
    3084:	01 55       	subi	r16, 0x51	; 81
    3086:	1e 4f       	sbci	r17, 0xFE	; 254
    3088:	bc 01       	movw	r22, r24
    308a:	cd 01       	movw	r24, r26
    308c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    3090:	dc 01       	movw	r26, r24
    3092:	cb 01       	movw	r24, r22
    3094:	f8 01       	movw	r30, r16
    3096:	91 83       	std	Z+1, r25	; 0x01
    3098:	80 83       	st	Z, r24
    309a:	24 c0       	rjmp	.+72     	; 0x30e4 <__stack+0x1fe5>
    309c:	ce 01       	movw	r24, r28
    309e:	8f 54       	subi	r24, 0x4F	; 79
    30a0:	9e 4f       	sbci	r25, 0xFE	; 254
    30a2:	20 e9       	ldi	r18, 0x90	; 144
    30a4:	31 e0       	ldi	r19, 0x01	; 1
    30a6:	fc 01       	movw	r30, r24
    30a8:	31 83       	std	Z+1, r19	; 0x01
    30aa:	20 83       	st	Z, r18
    30ac:	ce 01       	movw	r24, r28
    30ae:	8f 54       	subi	r24, 0x4F	; 79
    30b0:	9e 4f       	sbci	r25, 0xFE	; 254
    30b2:	fc 01       	movw	r30, r24
    30b4:	80 81       	ld	r24, Z
    30b6:	91 81       	ldd	r25, Z+1	; 0x01
    30b8:	01 97       	sbiw	r24, 0x01	; 1
    30ba:	f1 f7       	brne	.-4      	; 0x30b8 <__stack+0x1fb9>
    30bc:	9e 01       	movw	r18, r28
    30be:	2f 54       	subi	r18, 0x4F	; 79
    30c0:	3e 4f       	sbci	r19, 0xFE	; 254
    30c2:	f9 01       	movw	r30, r18
    30c4:	91 83       	std	Z+1, r25	; 0x01
    30c6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    30c8:	ce 01       	movw	r24, r28
    30ca:	81 55       	subi	r24, 0x51	; 81
    30cc:	9e 4f       	sbci	r25, 0xFE	; 254
    30ce:	9e 01       	movw	r18, r28
    30d0:	21 55       	subi	r18, 0x51	; 81
    30d2:	3e 4f       	sbci	r19, 0xFE	; 254
    30d4:	f9 01       	movw	r30, r18
    30d6:	20 81       	ld	r18, Z
    30d8:	31 81       	ldd	r19, Z+1	; 0x01
    30da:	21 50       	subi	r18, 0x01	; 1
    30dc:	31 09       	sbc	r19, r1
    30de:	fc 01       	movw	r30, r24
    30e0:	31 83       	std	Z+1, r19	; 0x01
    30e2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    30e4:	ce 01       	movw	r24, r28
    30e6:	81 55       	subi	r24, 0x51	; 81
    30e8:	9e 4f       	sbci	r25, 0xFE	; 254
    30ea:	fc 01       	movw	r30, r24
    30ec:	80 81       	ld	r24, Z
    30ee:	91 81       	ldd	r25, Z+1	; 0x01
    30f0:	89 2b       	or	r24, r25
    30f2:	a1 f6       	brne	.-88     	; 0x309c <__stack+0x1f9d>
    30f4:	2c c0       	rjmp	.+88     	; 0x314e <__stack+0x204f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    30f6:	8e 01       	movw	r16, r28
    30f8:	01 55       	subi	r16, 0x51	; 81
    30fa:	1e 4f       	sbci	r17, 0xFE	; 254
    30fc:	ce 01       	movw	r24, r28
    30fe:	85 55       	subi	r24, 0x55	; 85
    3100:	9e 4f       	sbci	r25, 0xFE	; 254
    3102:	fc 01       	movw	r30, r24
    3104:	60 81       	ld	r22, Z
    3106:	71 81       	ldd	r23, Z+1	; 0x01
    3108:	82 81       	ldd	r24, Z+2	; 0x02
    310a:	93 81       	ldd	r25, Z+3	; 0x03
    310c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    3110:	dc 01       	movw	r26, r24
    3112:	cb 01       	movw	r24, r22
    3114:	f8 01       	movw	r30, r16
    3116:	91 83       	std	Z+1, r25	; 0x01
    3118:	80 83       	st	Z, r24
    311a:	ce 01       	movw	r24, r28
    311c:	8d 54       	subi	r24, 0x4D	; 77
    311e:	9e 4f       	sbci	r25, 0xFE	; 254
    3120:	9e 01       	movw	r18, r28
    3122:	21 55       	subi	r18, 0x51	; 81
    3124:	3e 4f       	sbci	r19, 0xFE	; 254
    3126:	f9 01       	movw	r30, r18
    3128:	20 81       	ld	r18, Z
    312a:	31 81       	ldd	r19, Z+1	; 0x01
    312c:	fc 01       	movw	r30, r24
    312e:	31 83       	std	Z+1, r19	; 0x01
    3130:	20 83       	st	Z, r18
    3132:	ce 01       	movw	r24, r28
    3134:	8d 54       	subi	r24, 0x4D	; 77
    3136:	9e 4f       	sbci	r25, 0xFE	; 254
    3138:	fc 01       	movw	r30, r24
    313a:	80 81       	ld	r24, Z
    313c:	91 81       	ldd	r25, Z+1	; 0x01
    313e:	01 97       	sbiw	r24, 0x01	; 1
    3140:	f1 f7       	brne	.-4      	; 0x313e <__stack+0x203f>
    3142:	9e 01       	movw	r18, r28
    3144:	2d 54       	subi	r18, 0x4D	; 77
    3146:	3e 4f       	sbci	r19, 0xFE	; 254
    3148:	f9 01       	movw	r30, r18
    314a:	91 83       	std	Z+1, r25	; 0x01
    314c:	80 83       	st	Z, r24
			_delay_ms(450);
			to_uARM("M2210 F380 T100\n");
    314e:	86 ec       	ldi	r24, 0xC6	; 198
    3150:	91 e0       	ldi	r25, 0x01	; 1
    3152:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    3156:	9e 01       	movw	r18, r28
    3158:	2f 58       	subi	r18, 0x8F	; 143
    315a:	3f 4f       	sbci	r19, 0xFF	; 255
    315c:	80 e0       	ldi	r24, 0x00	; 0
    315e:	90 e0       	ldi	r25, 0x00	; 0
    3160:	a8 ec       	ldi	r26, 0xC8	; 200
    3162:	b3 e4       	ldi	r27, 0x43	; 67
    3164:	f9 01       	movw	r30, r18
    3166:	80 83       	st	Z, r24
    3168:	91 83       	std	Z+1, r25	; 0x01
    316a:	a2 83       	std	Z+2, r26	; 0x02
    316c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    316e:	8e 01       	movw	r16, r28
    3170:	0f 55       	subi	r16, 0x5F	; 95
    3172:	1e 4f       	sbci	r17, 0xFE	; 254
    3174:	ce 01       	movw	r24, r28
    3176:	8f 58       	subi	r24, 0x8F	; 143
    3178:	9f 4f       	sbci	r25, 0xFF	; 255
    317a:	20 e0       	ldi	r18, 0x00	; 0
    317c:	30 e0       	ldi	r19, 0x00	; 0
    317e:	4a e7       	ldi	r20, 0x7A	; 122
    3180:	55 e4       	ldi	r21, 0x45	; 69
    3182:	fc 01       	movw	r30, r24
    3184:	60 81       	ld	r22, Z
    3186:	71 81       	ldd	r23, Z+1	; 0x01
    3188:	82 81       	ldd	r24, Z+2	; 0x02
    318a:	93 81       	ldd	r25, Z+3	; 0x03
    318c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    3190:	dc 01       	movw	r26, r24
    3192:	cb 01       	movw	r24, r22
    3194:	f8 01       	movw	r30, r16
    3196:	80 83       	st	Z, r24
    3198:	91 83       	std	Z+1, r25	; 0x01
    319a:	a2 83       	std	Z+2, r26	; 0x02
    319c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    319e:	ce 01       	movw	r24, r28
    31a0:	8f 55       	subi	r24, 0x5F	; 95
    31a2:	9e 4f       	sbci	r25, 0xFE	; 254
    31a4:	20 e0       	ldi	r18, 0x00	; 0
    31a6:	30 e0       	ldi	r19, 0x00	; 0
    31a8:	40 e8       	ldi	r20, 0x80	; 128
    31aa:	5f e3       	ldi	r21, 0x3F	; 63
    31ac:	fc 01       	movw	r30, r24
    31ae:	60 81       	ld	r22, Z
    31b0:	71 81       	ldd	r23, Z+1	; 0x01
    31b2:	82 81       	ldd	r24, Z+2	; 0x02
    31b4:	93 81       	ldd	r25, Z+3	; 0x03
    31b6:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    31ba:	88 23       	and	r24, r24
    31bc:	4c f4       	brge	.+18     	; 0x31d0 <__stack+0x20d1>
		__ticks = 1;
    31be:	ce 01       	movw	r24, r28
    31c0:	8b 55       	subi	r24, 0x5B	; 91
    31c2:	9e 4f       	sbci	r25, 0xFE	; 254
    31c4:	21 e0       	ldi	r18, 0x01	; 1
    31c6:	30 e0       	ldi	r19, 0x00	; 0
    31c8:	fc 01       	movw	r30, r24
    31ca:	31 83       	std	Z+1, r19	; 0x01
    31cc:	20 83       	st	Z, r18
    31ce:	6d c0       	rjmp	.+218    	; 0x32aa <__stack+0x21ab>
	else if (__tmp > 65535)
    31d0:	ce 01       	movw	r24, r28
    31d2:	8f 55       	subi	r24, 0x5F	; 95
    31d4:	9e 4f       	sbci	r25, 0xFE	; 254
    31d6:	20 e0       	ldi	r18, 0x00	; 0
    31d8:	3f ef       	ldi	r19, 0xFF	; 255
    31da:	4f e7       	ldi	r20, 0x7F	; 127
    31dc:	57 e4       	ldi	r21, 0x47	; 71
    31de:	fc 01       	movw	r30, r24
    31e0:	60 81       	ld	r22, Z
    31e2:	71 81       	ldd	r23, Z+1	; 0x01
    31e4:	82 81       	ldd	r24, Z+2	; 0x02
    31e6:	93 81       	ldd	r25, Z+3	; 0x03
    31e8:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    31ec:	18 16       	cp	r1, r24
    31ee:	0c f0       	brlt	.+2      	; 0x31f2 <__stack+0x20f3>
    31f0:	4a c0       	rjmp	.+148    	; 0x3286 <__stack+0x2187>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    31f2:	ce 01       	movw	r24, r28
    31f4:	8f 58       	subi	r24, 0x8F	; 143
    31f6:	9f 4f       	sbci	r25, 0xFF	; 255
    31f8:	20 e0       	ldi	r18, 0x00	; 0
    31fa:	30 e0       	ldi	r19, 0x00	; 0
    31fc:	40 e2       	ldi	r20, 0x20	; 32
    31fe:	51 e4       	ldi	r21, 0x41	; 65
    3200:	fc 01       	movw	r30, r24
    3202:	60 81       	ld	r22, Z
    3204:	71 81       	ldd	r23, Z+1	; 0x01
    3206:	82 81       	ldd	r24, Z+2	; 0x02
    3208:	93 81       	ldd	r25, Z+3	; 0x03
    320a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    320e:	dc 01       	movw	r26, r24
    3210:	cb 01       	movw	r24, r22
    3212:	8e 01       	movw	r16, r28
    3214:	0b 55       	subi	r16, 0x5B	; 91
    3216:	1e 4f       	sbci	r17, 0xFE	; 254
    3218:	bc 01       	movw	r22, r24
    321a:	cd 01       	movw	r24, r26
    321c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    3220:	dc 01       	movw	r26, r24
    3222:	cb 01       	movw	r24, r22
    3224:	f8 01       	movw	r30, r16
    3226:	91 83       	std	Z+1, r25	; 0x01
    3228:	80 83       	st	Z, r24
    322a:	24 c0       	rjmp	.+72     	; 0x3274 <__stack+0x2175>
    322c:	ce 01       	movw	r24, r28
    322e:	89 55       	subi	r24, 0x59	; 89
    3230:	9e 4f       	sbci	r25, 0xFE	; 254
    3232:	20 e9       	ldi	r18, 0x90	; 144
    3234:	31 e0       	ldi	r19, 0x01	; 1
    3236:	fc 01       	movw	r30, r24
    3238:	31 83       	std	Z+1, r19	; 0x01
    323a:	20 83       	st	Z, r18
    323c:	ce 01       	movw	r24, r28
    323e:	89 55       	subi	r24, 0x59	; 89
    3240:	9e 4f       	sbci	r25, 0xFE	; 254
    3242:	fc 01       	movw	r30, r24
    3244:	80 81       	ld	r24, Z
    3246:	91 81       	ldd	r25, Z+1	; 0x01
    3248:	01 97       	sbiw	r24, 0x01	; 1
    324a:	f1 f7       	brne	.-4      	; 0x3248 <__stack+0x2149>
    324c:	9e 01       	movw	r18, r28
    324e:	29 55       	subi	r18, 0x59	; 89
    3250:	3e 4f       	sbci	r19, 0xFE	; 254
    3252:	f9 01       	movw	r30, r18
    3254:	91 83       	std	Z+1, r25	; 0x01
    3256:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3258:	ce 01       	movw	r24, r28
    325a:	8b 55       	subi	r24, 0x5B	; 91
    325c:	9e 4f       	sbci	r25, 0xFE	; 254
    325e:	9e 01       	movw	r18, r28
    3260:	2b 55       	subi	r18, 0x5B	; 91
    3262:	3e 4f       	sbci	r19, 0xFE	; 254
    3264:	f9 01       	movw	r30, r18
    3266:	20 81       	ld	r18, Z
    3268:	31 81       	ldd	r19, Z+1	; 0x01
    326a:	21 50       	subi	r18, 0x01	; 1
    326c:	31 09       	sbc	r19, r1
    326e:	fc 01       	movw	r30, r24
    3270:	31 83       	std	Z+1, r19	; 0x01
    3272:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3274:	ce 01       	movw	r24, r28
    3276:	8b 55       	subi	r24, 0x5B	; 91
    3278:	9e 4f       	sbci	r25, 0xFE	; 254
    327a:	fc 01       	movw	r30, r24
    327c:	80 81       	ld	r24, Z
    327e:	91 81       	ldd	r25, Z+1	; 0x01
    3280:	89 2b       	or	r24, r25
    3282:	a1 f6       	brne	.-88     	; 0x322c <__stack+0x212d>
    3284:	2c c0       	rjmp	.+88     	; 0x32de <__stack+0x21df>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3286:	8e 01       	movw	r16, r28
    3288:	0b 55       	subi	r16, 0x5B	; 91
    328a:	1e 4f       	sbci	r17, 0xFE	; 254
    328c:	ce 01       	movw	r24, r28
    328e:	8f 55       	subi	r24, 0x5F	; 95
    3290:	9e 4f       	sbci	r25, 0xFE	; 254
    3292:	fc 01       	movw	r30, r24
    3294:	60 81       	ld	r22, Z
    3296:	71 81       	ldd	r23, Z+1	; 0x01
    3298:	82 81       	ldd	r24, Z+2	; 0x02
    329a:	93 81       	ldd	r25, Z+3	; 0x03
    329c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    32a0:	dc 01       	movw	r26, r24
    32a2:	cb 01       	movw	r24, r22
    32a4:	f8 01       	movw	r30, r16
    32a6:	91 83       	std	Z+1, r25	; 0x01
    32a8:	80 83       	st	Z, r24
    32aa:	ce 01       	movw	r24, r28
    32ac:	87 55       	subi	r24, 0x57	; 87
    32ae:	9e 4f       	sbci	r25, 0xFE	; 254
    32b0:	9e 01       	movw	r18, r28
    32b2:	2b 55       	subi	r18, 0x5B	; 91
    32b4:	3e 4f       	sbci	r19, 0xFE	; 254
    32b6:	f9 01       	movw	r30, r18
    32b8:	20 81       	ld	r18, Z
    32ba:	31 81       	ldd	r19, Z+1	; 0x01
    32bc:	fc 01       	movw	r30, r24
    32be:	31 83       	std	Z+1, r19	; 0x01
    32c0:	20 83       	st	Z, r18
    32c2:	ce 01       	movw	r24, r28
    32c4:	87 55       	subi	r24, 0x57	; 87
    32c6:	9e 4f       	sbci	r25, 0xFE	; 254
    32c8:	fc 01       	movw	r30, r24
    32ca:	80 81       	ld	r24, Z
    32cc:	91 81       	ldd	r25, Z+1	; 0x01
    32ce:	01 97       	sbiw	r24, 0x01	; 1
    32d0:	f1 f7       	brne	.-4      	; 0x32ce <__stack+0x21cf>
    32d2:	9e 01       	movw	r18, r28
    32d4:	27 55       	subi	r18, 0x57	; 87
    32d6:	3e 4f       	sbci	r19, 0xFE	; 254
    32d8:	f9 01       	movw	r30, r18
    32da:	91 83       	std	Z+1, r25	; 0x01
    32dc:	80 83       	st	Z, r24
			_delay_ms(400);
			to_uARM("M2210 F320 T100\n");
    32de:	87 ed       	ldi	r24, 0xD7	; 215
    32e0:	91 e0       	ldi	r25, 0x01	; 1
    32e2:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    32e6:	9e 01       	movw	r18, r28
    32e8:	2b 58       	subi	r18, 0x8B	; 139
    32ea:	3f 4f       	sbci	r19, 0xFF	; 255
    32ec:	80 e0       	ldi	r24, 0x00	; 0
    32ee:	90 e0       	ldi	r25, 0x00	; 0
    32f0:	aa ef       	ldi	r26, 0xFA	; 250
    32f2:	b3 e4       	ldi	r27, 0x43	; 67
    32f4:	f9 01       	movw	r30, r18
    32f6:	80 83       	st	Z, r24
    32f8:	91 83       	std	Z+1, r25	; 0x01
    32fa:	a2 83       	std	Z+2, r26	; 0x02
    32fc:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    32fe:	8e 01       	movw	r16, r28
    3300:	09 56       	subi	r16, 0x69	; 105
    3302:	1e 4f       	sbci	r17, 0xFE	; 254
    3304:	ce 01       	movw	r24, r28
    3306:	8b 58       	subi	r24, 0x8B	; 139
    3308:	9f 4f       	sbci	r25, 0xFF	; 255
    330a:	20 e0       	ldi	r18, 0x00	; 0
    330c:	30 e0       	ldi	r19, 0x00	; 0
    330e:	4a e7       	ldi	r20, 0x7A	; 122
    3310:	55 e4       	ldi	r21, 0x45	; 69
    3312:	fc 01       	movw	r30, r24
    3314:	60 81       	ld	r22, Z
    3316:	71 81       	ldd	r23, Z+1	; 0x01
    3318:	82 81       	ldd	r24, Z+2	; 0x02
    331a:	93 81       	ldd	r25, Z+3	; 0x03
    331c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    3320:	dc 01       	movw	r26, r24
    3322:	cb 01       	movw	r24, r22
    3324:	f8 01       	movw	r30, r16
    3326:	80 83       	st	Z, r24
    3328:	91 83       	std	Z+1, r25	; 0x01
    332a:	a2 83       	std	Z+2, r26	; 0x02
    332c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    332e:	ce 01       	movw	r24, r28
    3330:	89 56       	subi	r24, 0x69	; 105
    3332:	9e 4f       	sbci	r25, 0xFE	; 254
    3334:	20 e0       	ldi	r18, 0x00	; 0
    3336:	30 e0       	ldi	r19, 0x00	; 0
    3338:	40 e8       	ldi	r20, 0x80	; 128
    333a:	5f e3       	ldi	r21, 0x3F	; 63
    333c:	fc 01       	movw	r30, r24
    333e:	60 81       	ld	r22, Z
    3340:	71 81       	ldd	r23, Z+1	; 0x01
    3342:	82 81       	ldd	r24, Z+2	; 0x02
    3344:	93 81       	ldd	r25, Z+3	; 0x03
    3346:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    334a:	88 23       	and	r24, r24
    334c:	4c f4       	brge	.+18     	; 0x3360 <__stack+0x2261>
		__ticks = 1;
    334e:	ce 01       	movw	r24, r28
    3350:	85 56       	subi	r24, 0x65	; 101
    3352:	9e 4f       	sbci	r25, 0xFE	; 254
    3354:	21 e0       	ldi	r18, 0x01	; 1
    3356:	30 e0       	ldi	r19, 0x00	; 0
    3358:	fc 01       	movw	r30, r24
    335a:	31 83       	std	Z+1, r19	; 0x01
    335c:	20 83       	st	Z, r18
    335e:	6d c0       	rjmp	.+218    	; 0x343a <__stack+0x233b>
	else if (__tmp > 65535)
    3360:	ce 01       	movw	r24, r28
    3362:	89 56       	subi	r24, 0x69	; 105
    3364:	9e 4f       	sbci	r25, 0xFE	; 254
    3366:	20 e0       	ldi	r18, 0x00	; 0
    3368:	3f ef       	ldi	r19, 0xFF	; 255
    336a:	4f e7       	ldi	r20, 0x7F	; 127
    336c:	57 e4       	ldi	r21, 0x47	; 71
    336e:	fc 01       	movw	r30, r24
    3370:	60 81       	ld	r22, Z
    3372:	71 81       	ldd	r23, Z+1	; 0x01
    3374:	82 81       	ldd	r24, Z+2	; 0x02
    3376:	93 81       	ldd	r25, Z+3	; 0x03
    3378:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    337c:	18 16       	cp	r1, r24
    337e:	0c f0       	brlt	.+2      	; 0x3382 <__stack+0x2283>
    3380:	4a c0       	rjmp	.+148    	; 0x3416 <__stack+0x2317>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3382:	ce 01       	movw	r24, r28
    3384:	8b 58       	subi	r24, 0x8B	; 139
    3386:	9f 4f       	sbci	r25, 0xFF	; 255
    3388:	20 e0       	ldi	r18, 0x00	; 0
    338a:	30 e0       	ldi	r19, 0x00	; 0
    338c:	40 e2       	ldi	r20, 0x20	; 32
    338e:	51 e4       	ldi	r21, 0x41	; 65
    3390:	fc 01       	movw	r30, r24
    3392:	60 81       	ld	r22, Z
    3394:	71 81       	ldd	r23, Z+1	; 0x01
    3396:	82 81       	ldd	r24, Z+2	; 0x02
    3398:	93 81       	ldd	r25, Z+3	; 0x03
    339a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    339e:	dc 01       	movw	r26, r24
    33a0:	cb 01       	movw	r24, r22
    33a2:	8e 01       	movw	r16, r28
    33a4:	05 56       	subi	r16, 0x65	; 101
    33a6:	1e 4f       	sbci	r17, 0xFE	; 254
    33a8:	bc 01       	movw	r22, r24
    33aa:	cd 01       	movw	r24, r26
    33ac:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    33b0:	dc 01       	movw	r26, r24
    33b2:	cb 01       	movw	r24, r22
    33b4:	f8 01       	movw	r30, r16
    33b6:	91 83       	std	Z+1, r25	; 0x01
    33b8:	80 83       	st	Z, r24
    33ba:	24 c0       	rjmp	.+72     	; 0x3404 <__stack+0x2305>
    33bc:	ce 01       	movw	r24, r28
    33be:	83 56       	subi	r24, 0x63	; 99
    33c0:	9e 4f       	sbci	r25, 0xFE	; 254
    33c2:	20 e9       	ldi	r18, 0x90	; 144
    33c4:	31 e0       	ldi	r19, 0x01	; 1
    33c6:	fc 01       	movw	r30, r24
    33c8:	31 83       	std	Z+1, r19	; 0x01
    33ca:	20 83       	st	Z, r18
    33cc:	ce 01       	movw	r24, r28
    33ce:	83 56       	subi	r24, 0x63	; 99
    33d0:	9e 4f       	sbci	r25, 0xFE	; 254
    33d2:	fc 01       	movw	r30, r24
    33d4:	80 81       	ld	r24, Z
    33d6:	91 81       	ldd	r25, Z+1	; 0x01
    33d8:	01 97       	sbiw	r24, 0x01	; 1
    33da:	f1 f7       	brne	.-4      	; 0x33d8 <__stack+0x22d9>
    33dc:	9e 01       	movw	r18, r28
    33de:	23 56       	subi	r18, 0x63	; 99
    33e0:	3e 4f       	sbci	r19, 0xFE	; 254
    33e2:	f9 01       	movw	r30, r18
    33e4:	91 83       	std	Z+1, r25	; 0x01
    33e6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    33e8:	ce 01       	movw	r24, r28
    33ea:	85 56       	subi	r24, 0x65	; 101
    33ec:	9e 4f       	sbci	r25, 0xFE	; 254
    33ee:	9e 01       	movw	r18, r28
    33f0:	25 56       	subi	r18, 0x65	; 101
    33f2:	3e 4f       	sbci	r19, 0xFE	; 254
    33f4:	f9 01       	movw	r30, r18
    33f6:	20 81       	ld	r18, Z
    33f8:	31 81       	ldd	r19, Z+1	; 0x01
    33fa:	21 50       	subi	r18, 0x01	; 1
    33fc:	31 09       	sbc	r19, r1
    33fe:	fc 01       	movw	r30, r24
    3400:	31 83       	std	Z+1, r19	; 0x01
    3402:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3404:	ce 01       	movw	r24, r28
    3406:	85 56       	subi	r24, 0x65	; 101
    3408:	9e 4f       	sbci	r25, 0xFE	; 254
    340a:	fc 01       	movw	r30, r24
    340c:	80 81       	ld	r24, Z
    340e:	91 81       	ldd	r25, Z+1	; 0x01
    3410:	89 2b       	or	r24, r25
    3412:	a1 f6       	brne	.-88     	; 0x33bc <__stack+0x22bd>
    3414:	2c c0       	rjmp	.+88     	; 0x346e <__stack+0x236f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3416:	8e 01       	movw	r16, r28
    3418:	05 56       	subi	r16, 0x65	; 101
    341a:	1e 4f       	sbci	r17, 0xFE	; 254
    341c:	ce 01       	movw	r24, r28
    341e:	89 56       	subi	r24, 0x69	; 105
    3420:	9e 4f       	sbci	r25, 0xFE	; 254
    3422:	fc 01       	movw	r30, r24
    3424:	60 81       	ld	r22, Z
    3426:	71 81       	ldd	r23, Z+1	; 0x01
    3428:	82 81       	ldd	r24, Z+2	; 0x02
    342a:	93 81       	ldd	r25, Z+3	; 0x03
    342c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    3430:	dc 01       	movw	r26, r24
    3432:	cb 01       	movw	r24, r22
    3434:	f8 01       	movw	r30, r16
    3436:	91 83       	std	Z+1, r25	; 0x01
    3438:	80 83       	st	Z, r24
    343a:	ce 01       	movw	r24, r28
    343c:	81 56       	subi	r24, 0x61	; 97
    343e:	9e 4f       	sbci	r25, 0xFE	; 254
    3440:	9e 01       	movw	r18, r28
    3442:	25 56       	subi	r18, 0x65	; 101
    3444:	3e 4f       	sbci	r19, 0xFE	; 254
    3446:	f9 01       	movw	r30, r18
    3448:	20 81       	ld	r18, Z
    344a:	31 81       	ldd	r19, Z+1	; 0x01
    344c:	fc 01       	movw	r30, r24
    344e:	31 83       	std	Z+1, r19	; 0x01
    3450:	20 83       	st	Z, r18
    3452:	ce 01       	movw	r24, r28
    3454:	81 56       	subi	r24, 0x61	; 97
    3456:	9e 4f       	sbci	r25, 0xFE	; 254
    3458:	fc 01       	movw	r30, r24
    345a:	80 81       	ld	r24, Z
    345c:	91 81       	ldd	r25, Z+1	; 0x01
    345e:	01 97       	sbiw	r24, 0x01	; 1
    3460:	f1 f7       	brne	.-4      	; 0x345e <__stack+0x235f>
    3462:	9e 01       	movw	r18, r28
    3464:	21 56       	subi	r18, 0x61	; 97
    3466:	3e 4f       	sbci	r19, 0xFE	; 254
    3468:	f9 01       	movw	r30, r18
    346a:	91 83       	std	Z+1, r25	; 0x01
    346c:	80 83       	st	Z, r24
			_delay_ms(500);
			to_uARM("M2210 F440 T100\n");
    346e:	88 ee       	ldi	r24, 0xE8	; 232
    3470:	91 e0       	ldi	r25, 0x01	; 1
    3472:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    3476:	9e 01       	movw	r18, r28
    3478:	27 58       	subi	r18, 0x87	; 135
    347a:	3f 4f       	sbci	r19, 0xFF	; 255
    347c:	80 e0       	ldi	r24, 0x00	; 0
    347e:	90 e0       	ldi	r25, 0x00	; 0
    3480:	a6 e9       	ldi	r26, 0x96	; 150
    3482:	b3 e4       	ldi	r27, 0x43	; 67
    3484:	f9 01       	movw	r30, r18
    3486:	80 83       	st	Z, r24
    3488:	91 83       	std	Z+1, r25	; 0x01
    348a:	a2 83       	std	Z+2, r26	; 0x02
    348c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    348e:	8e 01       	movw	r16, r28
    3490:	03 57       	subi	r16, 0x73	; 115
    3492:	1e 4f       	sbci	r17, 0xFE	; 254
    3494:	ce 01       	movw	r24, r28
    3496:	87 58       	subi	r24, 0x87	; 135
    3498:	9f 4f       	sbci	r25, 0xFF	; 255
    349a:	20 e0       	ldi	r18, 0x00	; 0
    349c:	30 e0       	ldi	r19, 0x00	; 0
    349e:	4a e7       	ldi	r20, 0x7A	; 122
    34a0:	55 e4       	ldi	r21, 0x45	; 69
    34a2:	fc 01       	movw	r30, r24
    34a4:	60 81       	ld	r22, Z
    34a6:	71 81       	ldd	r23, Z+1	; 0x01
    34a8:	82 81       	ldd	r24, Z+2	; 0x02
    34aa:	93 81       	ldd	r25, Z+3	; 0x03
    34ac:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    34b0:	dc 01       	movw	r26, r24
    34b2:	cb 01       	movw	r24, r22
    34b4:	f8 01       	movw	r30, r16
    34b6:	80 83       	st	Z, r24
    34b8:	91 83       	std	Z+1, r25	; 0x01
    34ba:	a2 83       	std	Z+2, r26	; 0x02
    34bc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    34be:	ce 01       	movw	r24, r28
    34c0:	83 57       	subi	r24, 0x73	; 115
    34c2:	9e 4f       	sbci	r25, 0xFE	; 254
    34c4:	20 e0       	ldi	r18, 0x00	; 0
    34c6:	30 e0       	ldi	r19, 0x00	; 0
    34c8:	40 e8       	ldi	r20, 0x80	; 128
    34ca:	5f e3       	ldi	r21, 0x3F	; 63
    34cc:	fc 01       	movw	r30, r24
    34ce:	60 81       	ld	r22, Z
    34d0:	71 81       	ldd	r23, Z+1	; 0x01
    34d2:	82 81       	ldd	r24, Z+2	; 0x02
    34d4:	93 81       	ldd	r25, Z+3	; 0x03
    34d6:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    34da:	88 23       	and	r24, r24
    34dc:	4c f4       	brge	.+18     	; 0x34f0 <__stack+0x23f1>
		__ticks = 1;
    34de:	ce 01       	movw	r24, r28
    34e0:	8f 56       	subi	r24, 0x6F	; 111
    34e2:	9e 4f       	sbci	r25, 0xFE	; 254
    34e4:	21 e0       	ldi	r18, 0x01	; 1
    34e6:	30 e0       	ldi	r19, 0x00	; 0
    34e8:	fc 01       	movw	r30, r24
    34ea:	31 83       	std	Z+1, r19	; 0x01
    34ec:	20 83       	st	Z, r18
    34ee:	6d c0       	rjmp	.+218    	; 0x35ca <__stack+0x24cb>
	else if (__tmp > 65535)
    34f0:	ce 01       	movw	r24, r28
    34f2:	83 57       	subi	r24, 0x73	; 115
    34f4:	9e 4f       	sbci	r25, 0xFE	; 254
    34f6:	20 e0       	ldi	r18, 0x00	; 0
    34f8:	3f ef       	ldi	r19, 0xFF	; 255
    34fa:	4f e7       	ldi	r20, 0x7F	; 127
    34fc:	57 e4       	ldi	r21, 0x47	; 71
    34fe:	fc 01       	movw	r30, r24
    3500:	60 81       	ld	r22, Z
    3502:	71 81       	ldd	r23, Z+1	; 0x01
    3504:	82 81       	ldd	r24, Z+2	; 0x02
    3506:	93 81       	ldd	r25, Z+3	; 0x03
    3508:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    350c:	18 16       	cp	r1, r24
    350e:	0c f0       	brlt	.+2      	; 0x3512 <__stack+0x2413>
    3510:	4a c0       	rjmp	.+148    	; 0x35a6 <__stack+0x24a7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3512:	ce 01       	movw	r24, r28
    3514:	87 58       	subi	r24, 0x87	; 135
    3516:	9f 4f       	sbci	r25, 0xFF	; 255
    3518:	20 e0       	ldi	r18, 0x00	; 0
    351a:	30 e0       	ldi	r19, 0x00	; 0
    351c:	40 e2       	ldi	r20, 0x20	; 32
    351e:	51 e4       	ldi	r21, 0x41	; 65
    3520:	fc 01       	movw	r30, r24
    3522:	60 81       	ld	r22, Z
    3524:	71 81       	ldd	r23, Z+1	; 0x01
    3526:	82 81       	ldd	r24, Z+2	; 0x02
    3528:	93 81       	ldd	r25, Z+3	; 0x03
    352a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    352e:	dc 01       	movw	r26, r24
    3530:	cb 01       	movw	r24, r22
    3532:	8e 01       	movw	r16, r28
    3534:	0f 56       	subi	r16, 0x6F	; 111
    3536:	1e 4f       	sbci	r17, 0xFE	; 254
    3538:	bc 01       	movw	r22, r24
    353a:	cd 01       	movw	r24, r26
    353c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    3540:	dc 01       	movw	r26, r24
    3542:	cb 01       	movw	r24, r22
    3544:	f8 01       	movw	r30, r16
    3546:	91 83       	std	Z+1, r25	; 0x01
    3548:	80 83       	st	Z, r24
    354a:	24 c0       	rjmp	.+72     	; 0x3594 <__stack+0x2495>
    354c:	ce 01       	movw	r24, r28
    354e:	8d 56       	subi	r24, 0x6D	; 109
    3550:	9e 4f       	sbci	r25, 0xFE	; 254
    3552:	20 e9       	ldi	r18, 0x90	; 144
    3554:	31 e0       	ldi	r19, 0x01	; 1
    3556:	fc 01       	movw	r30, r24
    3558:	31 83       	std	Z+1, r19	; 0x01
    355a:	20 83       	st	Z, r18
    355c:	ce 01       	movw	r24, r28
    355e:	8d 56       	subi	r24, 0x6D	; 109
    3560:	9e 4f       	sbci	r25, 0xFE	; 254
    3562:	fc 01       	movw	r30, r24
    3564:	80 81       	ld	r24, Z
    3566:	91 81       	ldd	r25, Z+1	; 0x01
    3568:	01 97       	sbiw	r24, 0x01	; 1
    356a:	f1 f7       	brne	.-4      	; 0x3568 <__stack+0x2469>
    356c:	9e 01       	movw	r18, r28
    356e:	2d 56       	subi	r18, 0x6D	; 109
    3570:	3e 4f       	sbci	r19, 0xFE	; 254
    3572:	f9 01       	movw	r30, r18
    3574:	91 83       	std	Z+1, r25	; 0x01
    3576:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3578:	ce 01       	movw	r24, r28
    357a:	8f 56       	subi	r24, 0x6F	; 111
    357c:	9e 4f       	sbci	r25, 0xFE	; 254
    357e:	9e 01       	movw	r18, r28
    3580:	2f 56       	subi	r18, 0x6F	; 111
    3582:	3e 4f       	sbci	r19, 0xFE	; 254
    3584:	f9 01       	movw	r30, r18
    3586:	20 81       	ld	r18, Z
    3588:	31 81       	ldd	r19, Z+1	; 0x01
    358a:	21 50       	subi	r18, 0x01	; 1
    358c:	31 09       	sbc	r19, r1
    358e:	fc 01       	movw	r30, r24
    3590:	31 83       	std	Z+1, r19	; 0x01
    3592:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3594:	ce 01       	movw	r24, r28
    3596:	8f 56       	subi	r24, 0x6F	; 111
    3598:	9e 4f       	sbci	r25, 0xFE	; 254
    359a:	fc 01       	movw	r30, r24
    359c:	80 81       	ld	r24, Z
    359e:	91 81       	ldd	r25, Z+1	; 0x01
    35a0:	89 2b       	or	r24, r25
    35a2:	a1 f6       	brne	.-88     	; 0x354c <__stack+0x244d>
    35a4:	2c c0       	rjmp	.+88     	; 0x35fe <__stack+0x24ff>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    35a6:	8e 01       	movw	r16, r28
    35a8:	0f 56       	subi	r16, 0x6F	; 111
    35aa:	1e 4f       	sbci	r17, 0xFE	; 254
    35ac:	ce 01       	movw	r24, r28
    35ae:	83 57       	subi	r24, 0x73	; 115
    35b0:	9e 4f       	sbci	r25, 0xFE	; 254
    35b2:	fc 01       	movw	r30, r24
    35b4:	60 81       	ld	r22, Z
    35b6:	71 81       	ldd	r23, Z+1	; 0x01
    35b8:	82 81       	ldd	r24, Z+2	; 0x02
    35ba:	93 81       	ldd	r25, Z+3	; 0x03
    35bc:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    35c0:	dc 01       	movw	r26, r24
    35c2:	cb 01       	movw	r24, r22
    35c4:	f8 01       	movw	r30, r16
    35c6:	91 83       	std	Z+1, r25	; 0x01
    35c8:	80 83       	st	Z, r24
    35ca:	ce 01       	movw	r24, r28
    35cc:	8b 56       	subi	r24, 0x6B	; 107
    35ce:	9e 4f       	sbci	r25, 0xFE	; 254
    35d0:	9e 01       	movw	r18, r28
    35d2:	2f 56       	subi	r18, 0x6F	; 111
    35d4:	3e 4f       	sbci	r19, 0xFE	; 254
    35d6:	f9 01       	movw	r30, r18
    35d8:	20 81       	ld	r18, Z
    35da:	31 81       	ldd	r19, Z+1	; 0x01
    35dc:	fc 01       	movw	r30, r24
    35de:	31 83       	std	Z+1, r19	; 0x01
    35e0:	20 83       	st	Z, r18
    35e2:	ce 01       	movw	r24, r28
    35e4:	8b 56       	subi	r24, 0x6B	; 107
    35e6:	9e 4f       	sbci	r25, 0xFE	; 254
    35e8:	fc 01       	movw	r30, r24
    35ea:	80 81       	ld	r24, Z
    35ec:	91 81       	ldd	r25, Z+1	; 0x01
    35ee:	01 97       	sbiw	r24, 0x01	; 1
    35f0:	f1 f7       	brne	.-4      	; 0x35ee <__stack+0x24ef>
    35f2:	9e 01       	movw	r18, r28
    35f4:	2b 56       	subi	r18, 0x6B	; 107
    35f6:	3e 4f       	sbci	r19, 0xFE	; 254
    35f8:	f9 01       	movw	r30, r18
    35fa:	91 83       	std	Z+1, r25	; 0x01
    35fc:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F480 T80\n");
    35fe:	89 ef       	ldi	r24, 0xF9	; 249
    3600:	91 e0       	ldi	r25, 0x01	; 1
    3602:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    3606:	9e 01       	movw	r18, r28
    3608:	23 58       	subi	r18, 0x83	; 131
    360a:	3f 4f       	sbci	r19, 0xFF	; 255
    360c:	80 e0       	ldi	r24, 0x00	; 0
    360e:	90 e0       	ldi	r25, 0x00	; 0
    3610:	a5 ea       	ldi	r26, 0xA5	; 165
    3612:	b3 e4       	ldi	r27, 0x43	; 67
    3614:	f9 01       	movw	r30, r18
    3616:	80 83       	st	Z, r24
    3618:	91 83       	std	Z+1, r25	; 0x01
    361a:	a2 83       	std	Z+2, r26	; 0x02
    361c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    361e:	8e 01       	movw	r16, r28
    3620:	0d 57       	subi	r16, 0x7D	; 125
    3622:	1e 4f       	sbci	r17, 0xFE	; 254
    3624:	ce 01       	movw	r24, r28
    3626:	83 58       	subi	r24, 0x83	; 131
    3628:	9f 4f       	sbci	r25, 0xFF	; 255
    362a:	20 e0       	ldi	r18, 0x00	; 0
    362c:	30 e0       	ldi	r19, 0x00	; 0
    362e:	4a e7       	ldi	r20, 0x7A	; 122
    3630:	55 e4       	ldi	r21, 0x45	; 69
    3632:	fc 01       	movw	r30, r24
    3634:	60 81       	ld	r22, Z
    3636:	71 81       	ldd	r23, Z+1	; 0x01
    3638:	82 81       	ldd	r24, Z+2	; 0x02
    363a:	93 81       	ldd	r25, Z+3	; 0x03
    363c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    3640:	dc 01       	movw	r26, r24
    3642:	cb 01       	movw	r24, r22
    3644:	f8 01       	movw	r30, r16
    3646:	80 83       	st	Z, r24
    3648:	91 83       	std	Z+1, r25	; 0x01
    364a:	a2 83       	std	Z+2, r26	; 0x02
    364c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    364e:	ce 01       	movw	r24, r28
    3650:	8d 57       	subi	r24, 0x7D	; 125
    3652:	9e 4f       	sbci	r25, 0xFE	; 254
    3654:	20 e0       	ldi	r18, 0x00	; 0
    3656:	30 e0       	ldi	r19, 0x00	; 0
    3658:	40 e8       	ldi	r20, 0x80	; 128
    365a:	5f e3       	ldi	r21, 0x3F	; 63
    365c:	fc 01       	movw	r30, r24
    365e:	60 81       	ld	r22, Z
    3660:	71 81       	ldd	r23, Z+1	; 0x01
    3662:	82 81       	ldd	r24, Z+2	; 0x02
    3664:	93 81       	ldd	r25, Z+3	; 0x03
    3666:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    366a:	88 23       	and	r24, r24
    366c:	4c f4       	brge	.+18     	; 0x3680 <__stack+0x2581>
		__ticks = 1;
    366e:	ce 01       	movw	r24, r28
    3670:	89 57       	subi	r24, 0x79	; 121
    3672:	9e 4f       	sbci	r25, 0xFE	; 254
    3674:	21 e0       	ldi	r18, 0x01	; 1
    3676:	30 e0       	ldi	r19, 0x00	; 0
    3678:	fc 01       	movw	r30, r24
    367a:	31 83       	std	Z+1, r19	; 0x01
    367c:	20 83       	st	Z, r18
    367e:	6d c0       	rjmp	.+218    	; 0x375a <__stack+0x265b>
	else if (__tmp > 65535)
    3680:	ce 01       	movw	r24, r28
    3682:	8d 57       	subi	r24, 0x7D	; 125
    3684:	9e 4f       	sbci	r25, 0xFE	; 254
    3686:	20 e0       	ldi	r18, 0x00	; 0
    3688:	3f ef       	ldi	r19, 0xFF	; 255
    368a:	4f e7       	ldi	r20, 0x7F	; 127
    368c:	57 e4       	ldi	r21, 0x47	; 71
    368e:	fc 01       	movw	r30, r24
    3690:	60 81       	ld	r22, Z
    3692:	71 81       	ldd	r23, Z+1	; 0x01
    3694:	82 81       	ldd	r24, Z+2	; 0x02
    3696:	93 81       	ldd	r25, Z+3	; 0x03
    3698:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    369c:	18 16       	cp	r1, r24
    369e:	0c f0       	brlt	.+2      	; 0x36a2 <__stack+0x25a3>
    36a0:	4a c0       	rjmp	.+148    	; 0x3736 <__stack+0x2637>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    36a2:	ce 01       	movw	r24, r28
    36a4:	83 58       	subi	r24, 0x83	; 131
    36a6:	9f 4f       	sbci	r25, 0xFF	; 255
    36a8:	20 e0       	ldi	r18, 0x00	; 0
    36aa:	30 e0       	ldi	r19, 0x00	; 0
    36ac:	40 e2       	ldi	r20, 0x20	; 32
    36ae:	51 e4       	ldi	r21, 0x41	; 65
    36b0:	fc 01       	movw	r30, r24
    36b2:	60 81       	ld	r22, Z
    36b4:	71 81       	ldd	r23, Z+1	; 0x01
    36b6:	82 81       	ldd	r24, Z+2	; 0x02
    36b8:	93 81       	ldd	r25, Z+3	; 0x03
    36ba:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    36be:	dc 01       	movw	r26, r24
    36c0:	cb 01       	movw	r24, r22
    36c2:	8e 01       	movw	r16, r28
    36c4:	09 57       	subi	r16, 0x79	; 121
    36c6:	1e 4f       	sbci	r17, 0xFE	; 254
    36c8:	bc 01       	movw	r22, r24
    36ca:	cd 01       	movw	r24, r26
    36cc:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    36d0:	dc 01       	movw	r26, r24
    36d2:	cb 01       	movw	r24, r22
    36d4:	f8 01       	movw	r30, r16
    36d6:	91 83       	std	Z+1, r25	; 0x01
    36d8:	80 83       	st	Z, r24
    36da:	24 c0       	rjmp	.+72     	; 0x3724 <__stack+0x2625>
    36dc:	ce 01       	movw	r24, r28
    36de:	87 57       	subi	r24, 0x77	; 119
    36e0:	9e 4f       	sbci	r25, 0xFE	; 254
    36e2:	20 e9       	ldi	r18, 0x90	; 144
    36e4:	31 e0       	ldi	r19, 0x01	; 1
    36e6:	fc 01       	movw	r30, r24
    36e8:	31 83       	std	Z+1, r19	; 0x01
    36ea:	20 83       	st	Z, r18
    36ec:	ce 01       	movw	r24, r28
    36ee:	87 57       	subi	r24, 0x77	; 119
    36f0:	9e 4f       	sbci	r25, 0xFE	; 254
    36f2:	fc 01       	movw	r30, r24
    36f4:	80 81       	ld	r24, Z
    36f6:	91 81       	ldd	r25, Z+1	; 0x01
    36f8:	01 97       	sbiw	r24, 0x01	; 1
    36fa:	f1 f7       	brne	.-4      	; 0x36f8 <__stack+0x25f9>
    36fc:	9e 01       	movw	r18, r28
    36fe:	27 57       	subi	r18, 0x77	; 119
    3700:	3e 4f       	sbci	r19, 0xFE	; 254
    3702:	f9 01       	movw	r30, r18
    3704:	91 83       	std	Z+1, r25	; 0x01
    3706:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3708:	ce 01       	movw	r24, r28
    370a:	89 57       	subi	r24, 0x79	; 121
    370c:	9e 4f       	sbci	r25, 0xFE	; 254
    370e:	9e 01       	movw	r18, r28
    3710:	29 57       	subi	r18, 0x79	; 121
    3712:	3e 4f       	sbci	r19, 0xFE	; 254
    3714:	f9 01       	movw	r30, r18
    3716:	20 81       	ld	r18, Z
    3718:	31 81       	ldd	r19, Z+1	; 0x01
    371a:	21 50       	subi	r18, 0x01	; 1
    371c:	31 09       	sbc	r19, r1
    371e:	fc 01       	movw	r30, r24
    3720:	31 83       	std	Z+1, r19	; 0x01
    3722:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3724:	ce 01       	movw	r24, r28
    3726:	89 57       	subi	r24, 0x79	; 121
    3728:	9e 4f       	sbci	r25, 0xFE	; 254
    372a:	fc 01       	movw	r30, r24
    372c:	80 81       	ld	r24, Z
    372e:	91 81       	ldd	r25, Z+1	; 0x01
    3730:	89 2b       	or	r24, r25
    3732:	a1 f6       	brne	.-88     	; 0x36dc <__stack+0x25dd>
    3734:	2c c0       	rjmp	.+88     	; 0x378e <__stack+0x268f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3736:	8e 01       	movw	r16, r28
    3738:	09 57       	subi	r16, 0x79	; 121
    373a:	1e 4f       	sbci	r17, 0xFE	; 254
    373c:	ce 01       	movw	r24, r28
    373e:	8d 57       	subi	r24, 0x7D	; 125
    3740:	9e 4f       	sbci	r25, 0xFE	; 254
    3742:	fc 01       	movw	r30, r24
    3744:	60 81       	ld	r22, Z
    3746:	71 81       	ldd	r23, Z+1	; 0x01
    3748:	82 81       	ldd	r24, Z+2	; 0x02
    374a:	93 81       	ldd	r25, Z+3	; 0x03
    374c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    3750:	dc 01       	movw	r26, r24
    3752:	cb 01       	movw	r24, r22
    3754:	f8 01       	movw	r30, r16
    3756:	91 83       	std	Z+1, r25	; 0x01
    3758:	80 83       	st	Z, r24
    375a:	ce 01       	movw	r24, r28
    375c:	85 57       	subi	r24, 0x75	; 117
    375e:	9e 4f       	sbci	r25, 0xFE	; 254
    3760:	9e 01       	movw	r18, r28
    3762:	29 57       	subi	r18, 0x79	; 121
    3764:	3e 4f       	sbci	r19, 0xFE	; 254
    3766:	f9 01       	movw	r30, r18
    3768:	20 81       	ld	r18, Z
    376a:	31 81       	ldd	r19, Z+1	; 0x01
    376c:	fc 01       	movw	r30, r24
    376e:	31 83       	std	Z+1, r19	; 0x01
    3770:	20 83       	st	Z, r18
    3772:	ce 01       	movw	r24, r28
    3774:	85 57       	subi	r24, 0x75	; 117
    3776:	9e 4f       	sbci	r25, 0xFE	; 254
    3778:	fc 01       	movw	r30, r24
    377a:	80 81       	ld	r24, Z
    377c:	91 81       	ldd	r25, Z+1	; 0x01
    377e:	01 97       	sbiw	r24, 0x01	; 1
    3780:	f1 f7       	brne	.-4      	; 0x377e <__stack+0x267f>
    3782:	9e 01       	movw	r18, r28
    3784:	25 57       	subi	r18, 0x75	; 117
    3786:	3e 4f       	sbci	r19, 0xFE	; 254
    3788:	f9 01       	movw	r30, r18
    378a:	91 83       	std	Z+1, r25	; 0x01
    378c:	80 83       	st	Z, r24
			_delay_ms(330);
			to_uARM("M2210 F450 T100\n");
    378e:	89 e0       	ldi	r24, 0x09	; 9
    3790:	92 e0       	ldi	r25, 0x02	; 2
    3792:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    3796:	9e 01       	movw	r18, r28
    3798:	2f 57       	subi	r18, 0x7F	; 127
    379a:	3f 4f       	sbci	r19, 0xFF	; 255
    379c:	80 e0       	ldi	r24, 0x00	; 0
    379e:	90 e0       	ldi	r25, 0x00	; 0
    37a0:	a6 e1       	ldi	r26, 0x16	; 22
    37a2:	b3 e4       	ldi	r27, 0x43	; 67
    37a4:	f9 01       	movw	r30, r18
    37a6:	80 83       	st	Z, r24
    37a8:	91 83       	std	Z+1, r25	; 0x01
    37aa:	a2 83       	std	Z+2, r26	; 0x02
    37ac:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    37ae:	8e 01       	movw	r16, r28
    37b0:	07 58       	subi	r16, 0x87	; 135
    37b2:	1e 4f       	sbci	r17, 0xFE	; 254
    37b4:	ce 01       	movw	r24, r28
    37b6:	8f 57       	subi	r24, 0x7F	; 127
    37b8:	9f 4f       	sbci	r25, 0xFF	; 255
    37ba:	20 e0       	ldi	r18, 0x00	; 0
    37bc:	30 e0       	ldi	r19, 0x00	; 0
    37be:	4a e7       	ldi	r20, 0x7A	; 122
    37c0:	55 e4       	ldi	r21, 0x45	; 69
    37c2:	fc 01       	movw	r30, r24
    37c4:	60 81       	ld	r22, Z
    37c6:	71 81       	ldd	r23, Z+1	; 0x01
    37c8:	82 81       	ldd	r24, Z+2	; 0x02
    37ca:	93 81       	ldd	r25, Z+3	; 0x03
    37cc:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    37d0:	dc 01       	movw	r26, r24
    37d2:	cb 01       	movw	r24, r22
    37d4:	f8 01       	movw	r30, r16
    37d6:	80 83       	st	Z, r24
    37d8:	91 83       	std	Z+1, r25	; 0x01
    37da:	a2 83       	std	Z+2, r26	; 0x02
    37dc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    37de:	ce 01       	movw	r24, r28
    37e0:	87 58       	subi	r24, 0x87	; 135
    37e2:	9e 4f       	sbci	r25, 0xFE	; 254
    37e4:	20 e0       	ldi	r18, 0x00	; 0
    37e6:	30 e0       	ldi	r19, 0x00	; 0
    37e8:	40 e8       	ldi	r20, 0x80	; 128
    37ea:	5f e3       	ldi	r21, 0x3F	; 63
    37ec:	fc 01       	movw	r30, r24
    37ee:	60 81       	ld	r22, Z
    37f0:	71 81       	ldd	r23, Z+1	; 0x01
    37f2:	82 81       	ldd	r24, Z+2	; 0x02
    37f4:	93 81       	ldd	r25, Z+3	; 0x03
    37f6:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    37fa:	88 23       	and	r24, r24
    37fc:	4c f4       	brge	.+18     	; 0x3810 <__stack+0x2711>
		__ticks = 1;
    37fe:	ce 01       	movw	r24, r28
    3800:	83 58       	subi	r24, 0x83	; 131
    3802:	9e 4f       	sbci	r25, 0xFE	; 254
    3804:	21 e0       	ldi	r18, 0x01	; 1
    3806:	30 e0       	ldi	r19, 0x00	; 0
    3808:	fc 01       	movw	r30, r24
    380a:	31 83       	std	Z+1, r19	; 0x01
    380c:	20 83       	st	Z, r18
    380e:	6d c0       	rjmp	.+218    	; 0x38ea <__stack+0x27eb>
	else if (__tmp > 65535)
    3810:	ce 01       	movw	r24, r28
    3812:	87 58       	subi	r24, 0x87	; 135
    3814:	9e 4f       	sbci	r25, 0xFE	; 254
    3816:	20 e0       	ldi	r18, 0x00	; 0
    3818:	3f ef       	ldi	r19, 0xFF	; 255
    381a:	4f e7       	ldi	r20, 0x7F	; 127
    381c:	57 e4       	ldi	r21, 0x47	; 71
    381e:	fc 01       	movw	r30, r24
    3820:	60 81       	ld	r22, Z
    3822:	71 81       	ldd	r23, Z+1	; 0x01
    3824:	82 81       	ldd	r24, Z+2	; 0x02
    3826:	93 81       	ldd	r25, Z+3	; 0x03
    3828:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    382c:	18 16       	cp	r1, r24
    382e:	0c f0       	brlt	.+2      	; 0x3832 <__stack+0x2733>
    3830:	4a c0       	rjmp	.+148    	; 0x38c6 <__stack+0x27c7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3832:	ce 01       	movw	r24, r28
    3834:	8f 57       	subi	r24, 0x7F	; 127
    3836:	9f 4f       	sbci	r25, 0xFF	; 255
    3838:	20 e0       	ldi	r18, 0x00	; 0
    383a:	30 e0       	ldi	r19, 0x00	; 0
    383c:	40 e2       	ldi	r20, 0x20	; 32
    383e:	51 e4       	ldi	r21, 0x41	; 65
    3840:	fc 01       	movw	r30, r24
    3842:	60 81       	ld	r22, Z
    3844:	71 81       	ldd	r23, Z+1	; 0x01
    3846:	82 81       	ldd	r24, Z+2	; 0x02
    3848:	93 81       	ldd	r25, Z+3	; 0x03
    384a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    384e:	dc 01       	movw	r26, r24
    3850:	cb 01       	movw	r24, r22
    3852:	8e 01       	movw	r16, r28
    3854:	03 58       	subi	r16, 0x83	; 131
    3856:	1e 4f       	sbci	r17, 0xFE	; 254
    3858:	bc 01       	movw	r22, r24
    385a:	cd 01       	movw	r24, r26
    385c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    3860:	dc 01       	movw	r26, r24
    3862:	cb 01       	movw	r24, r22
    3864:	f8 01       	movw	r30, r16
    3866:	91 83       	std	Z+1, r25	; 0x01
    3868:	80 83       	st	Z, r24
    386a:	24 c0       	rjmp	.+72     	; 0x38b4 <__stack+0x27b5>
    386c:	ce 01       	movw	r24, r28
    386e:	81 58       	subi	r24, 0x81	; 129
    3870:	9e 4f       	sbci	r25, 0xFE	; 254
    3872:	20 e9       	ldi	r18, 0x90	; 144
    3874:	31 e0       	ldi	r19, 0x01	; 1
    3876:	fc 01       	movw	r30, r24
    3878:	31 83       	std	Z+1, r19	; 0x01
    387a:	20 83       	st	Z, r18
    387c:	ce 01       	movw	r24, r28
    387e:	81 58       	subi	r24, 0x81	; 129
    3880:	9e 4f       	sbci	r25, 0xFE	; 254
    3882:	fc 01       	movw	r30, r24
    3884:	80 81       	ld	r24, Z
    3886:	91 81       	ldd	r25, Z+1	; 0x01
    3888:	01 97       	sbiw	r24, 0x01	; 1
    388a:	f1 f7       	brne	.-4      	; 0x3888 <__stack+0x2789>
    388c:	9e 01       	movw	r18, r28
    388e:	21 58       	subi	r18, 0x81	; 129
    3890:	3e 4f       	sbci	r19, 0xFE	; 254
    3892:	f9 01       	movw	r30, r18
    3894:	91 83       	std	Z+1, r25	; 0x01
    3896:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3898:	ce 01       	movw	r24, r28
    389a:	83 58       	subi	r24, 0x83	; 131
    389c:	9e 4f       	sbci	r25, 0xFE	; 254
    389e:	9e 01       	movw	r18, r28
    38a0:	23 58       	subi	r18, 0x83	; 131
    38a2:	3e 4f       	sbci	r19, 0xFE	; 254
    38a4:	f9 01       	movw	r30, r18
    38a6:	20 81       	ld	r18, Z
    38a8:	31 81       	ldd	r19, Z+1	; 0x01
    38aa:	21 50       	subi	r18, 0x01	; 1
    38ac:	31 09       	sbc	r19, r1
    38ae:	fc 01       	movw	r30, r24
    38b0:	31 83       	std	Z+1, r19	; 0x01
    38b2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    38b4:	ce 01       	movw	r24, r28
    38b6:	83 58       	subi	r24, 0x83	; 131
    38b8:	9e 4f       	sbci	r25, 0xFE	; 254
    38ba:	fc 01       	movw	r30, r24
    38bc:	80 81       	ld	r24, Z
    38be:	91 81       	ldd	r25, Z+1	; 0x01
    38c0:	89 2b       	or	r24, r25
    38c2:	a1 f6       	brne	.-88     	; 0x386c <__stack+0x276d>
    38c4:	2c c0       	rjmp	.+88     	; 0x391e <__stack+0x281f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    38c6:	8e 01       	movw	r16, r28
    38c8:	03 58       	subi	r16, 0x83	; 131
    38ca:	1e 4f       	sbci	r17, 0xFE	; 254
    38cc:	ce 01       	movw	r24, r28
    38ce:	87 58       	subi	r24, 0x87	; 135
    38d0:	9e 4f       	sbci	r25, 0xFE	; 254
    38d2:	fc 01       	movw	r30, r24
    38d4:	60 81       	ld	r22, Z
    38d6:	71 81       	ldd	r23, Z+1	; 0x01
    38d8:	82 81       	ldd	r24, Z+2	; 0x02
    38da:	93 81       	ldd	r25, Z+3	; 0x03
    38dc:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    38e0:	dc 01       	movw	r26, r24
    38e2:	cb 01       	movw	r24, r22
    38e4:	f8 01       	movw	r30, r16
    38e6:	91 83       	std	Z+1, r25	; 0x01
    38e8:	80 83       	st	Z, r24
    38ea:	ce 01       	movw	r24, r28
    38ec:	8f 57       	subi	r24, 0x7F	; 127
    38ee:	9e 4f       	sbci	r25, 0xFE	; 254
    38f0:	9e 01       	movw	r18, r28
    38f2:	23 58       	subi	r18, 0x83	; 131
    38f4:	3e 4f       	sbci	r19, 0xFE	; 254
    38f6:	f9 01       	movw	r30, r18
    38f8:	20 81       	ld	r18, Z
    38fa:	31 81       	ldd	r19, Z+1	; 0x01
    38fc:	fc 01       	movw	r30, r24
    38fe:	31 83       	std	Z+1, r19	; 0x01
    3900:	20 83       	st	Z, r18
    3902:	ce 01       	movw	r24, r28
    3904:	8f 57       	subi	r24, 0x7F	; 127
    3906:	9e 4f       	sbci	r25, 0xFE	; 254
    3908:	fc 01       	movw	r30, r24
    390a:	80 81       	ld	r24, Z
    390c:	91 81       	ldd	r25, Z+1	; 0x01
    390e:	01 97       	sbiw	r24, 0x01	; 1
    3910:	f1 f7       	brne	.-4      	; 0x390e <__stack+0x280f>
    3912:	9e 01       	movw	r18, r28
    3914:	2f 57       	subi	r18, 0x7F	; 127
    3916:	3e 4f       	sbci	r19, 0xFE	; 254
    3918:	f9 01       	movw	r30, r18
    391a:	91 83       	std	Z+1, r25	; 0x01
    391c:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F430 T100\n");
    391e:	8a e1       	ldi	r24, 0x1A	; 26
    3920:	92 e0       	ldi	r25, 0x02	; 2
    3922:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    3926:	9e 01       	movw	r18, r28
    3928:	2b 57       	subi	r18, 0x7B	; 123
    392a:	3f 4f       	sbci	r19, 0xFF	; 255
    392c:	80 e0       	ldi	r24, 0x00	; 0
    392e:	90 e0       	ldi	r25, 0x00	; 0
    3930:	a6 e9       	ldi	r26, 0x96	; 150
    3932:	b3 e4       	ldi	r27, 0x43	; 67
    3934:	f9 01       	movw	r30, r18
    3936:	80 83       	st	Z, r24
    3938:	91 83       	std	Z+1, r25	; 0x01
    393a:	a2 83       	std	Z+2, r26	; 0x02
    393c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    393e:	8e 01       	movw	r16, r28
    3940:	01 59       	subi	r16, 0x91	; 145
    3942:	1e 4f       	sbci	r17, 0xFE	; 254
    3944:	ce 01       	movw	r24, r28
    3946:	8b 57       	subi	r24, 0x7B	; 123
    3948:	9f 4f       	sbci	r25, 0xFF	; 255
    394a:	20 e0       	ldi	r18, 0x00	; 0
    394c:	30 e0       	ldi	r19, 0x00	; 0
    394e:	4a e7       	ldi	r20, 0x7A	; 122
    3950:	55 e4       	ldi	r21, 0x45	; 69
    3952:	fc 01       	movw	r30, r24
    3954:	60 81       	ld	r22, Z
    3956:	71 81       	ldd	r23, Z+1	; 0x01
    3958:	82 81       	ldd	r24, Z+2	; 0x02
    395a:	93 81       	ldd	r25, Z+3	; 0x03
    395c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    3960:	dc 01       	movw	r26, r24
    3962:	cb 01       	movw	r24, r22
    3964:	f8 01       	movw	r30, r16
    3966:	80 83       	st	Z, r24
    3968:	91 83       	std	Z+1, r25	; 0x01
    396a:	a2 83       	std	Z+2, r26	; 0x02
    396c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    396e:	ce 01       	movw	r24, r28
    3970:	81 59       	subi	r24, 0x91	; 145
    3972:	9e 4f       	sbci	r25, 0xFE	; 254
    3974:	20 e0       	ldi	r18, 0x00	; 0
    3976:	30 e0       	ldi	r19, 0x00	; 0
    3978:	40 e8       	ldi	r20, 0x80	; 128
    397a:	5f e3       	ldi	r21, 0x3F	; 63
    397c:	fc 01       	movw	r30, r24
    397e:	60 81       	ld	r22, Z
    3980:	71 81       	ldd	r23, Z+1	; 0x01
    3982:	82 81       	ldd	r24, Z+2	; 0x02
    3984:	93 81       	ldd	r25, Z+3	; 0x03
    3986:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    398a:	88 23       	and	r24, r24
    398c:	4c f4       	brge	.+18     	; 0x39a0 <__stack+0x28a1>
		__ticks = 1;
    398e:	ce 01       	movw	r24, r28
    3990:	8d 58       	subi	r24, 0x8D	; 141
    3992:	9e 4f       	sbci	r25, 0xFE	; 254
    3994:	21 e0       	ldi	r18, 0x01	; 1
    3996:	30 e0       	ldi	r19, 0x00	; 0
    3998:	fc 01       	movw	r30, r24
    399a:	31 83       	std	Z+1, r19	; 0x01
    399c:	20 83       	st	Z, r18
    399e:	6d c0       	rjmp	.+218    	; 0x3a7a <__stack+0x297b>
	else if (__tmp > 65535)
    39a0:	ce 01       	movw	r24, r28
    39a2:	81 59       	subi	r24, 0x91	; 145
    39a4:	9e 4f       	sbci	r25, 0xFE	; 254
    39a6:	20 e0       	ldi	r18, 0x00	; 0
    39a8:	3f ef       	ldi	r19, 0xFF	; 255
    39aa:	4f e7       	ldi	r20, 0x7F	; 127
    39ac:	57 e4       	ldi	r21, 0x47	; 71
    39ae:	fc 01       	movw	r30, r24
    39b0:	60 81       	ld	r22, Z
    39b2:	71 81       	ldd	r23, Z+1	; 0x01
    39b4:	82 81       	ldd	r24, Z+2	; 0x02
    39b6:	93 81       	ldd	r25, Z+3	; 0x03
    39b8:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    39bc:	18 16       	cp	r1, r24
    39be:	0c f0       	brlt	.+2      	; 0x39c2 <__stack+0x28c3>
    39c0:	4a c0       	rjmp	.+148    	; 0x3a56 <__stack+0x2957>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    39c2:	ce 01       	movw	r24, r28
    39c4:	8b 57       	subi	r24, 0x7B	; 123
    39c6:	9f 4f       	sbci	r25, 0xFF	; 255
    39c8:	20 e0       	ldi	r18, 0x00	; 0
    39ca:	30 e0       	ldi	r19, 0x00	; 0
    39cc:	40 e2       	ldi	r20, 0x20	; 32
    39ce:	51 e4       	ldi	r21, 0x41	; 65
    39d0:	fc 01       	movw	r30, r24
    39d2:	60 81       	ld	r22, Z
    39d4:	71 81       	ldd	r23, Z+1	; 0x01
    39d6:	82 81       	ldd	r24, Z+2	; 0x02
    39d8:	93 81       	ldd	r25, Z+3	; 0x03
    39da:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    39de:	dc 01       	movw	r26, r24
    39e0:	cb 01       	movw	r24, r22
    39e2:	8e 01       	movw	r16, r28
    39e4:	0d 58       	subi	r16, 0x8D	; 141
    39e6:	1e 4f       	sbci	r17, 0xFE	; 254
    39e8:	bc 01       	movw	r22, r24
    39ea:	cd 01       	movw	r24, r26
    39ec:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    39f0:	dc 01       	movw	r26, r24
    39f2:	cb 01       	movw	r24, r22
    39f4:	f8 01       	movw	r30, r16
    39f6:	91 83       	std	Z+1, r25	; 0x01
    39f8:	80 83       	st	Z, r24
    39fa:	24 c0       	rjmp	.+72     	; 0x3a44 <__stack+0x2945>
    39fc:	ce 01       	movw	r24, r28
    39fe:	8b 58       	subi	r24, 0x8B	; 139
    3a00:	9e 4f       	sbci	r25, 0xFE	; 254
    3a02:	20 e9       	ldi	r18, 0x90	; 144
    3a04:	31 e0       	ldi	r19, 0x01	; 1
    3a06:	fc 01       	movw	r30, r24
    3a08:	31 83       	std	Z+1, r19	; 0x01
    3a0a:	20 83       	st	Z, r18
    3a0c:	ce 01       	movw	r24, r28
    3a0e:	8b 58       	subi	r24, 0x8B	; 139
    3a10:	9e 4f       	sbci	r25, 0xFE	; 254
    3a12:	fc 01       	movw	r30, r24
    3a14:	80 81       	ld	r24, Z
    3a16:	91 81       	ldd	r25, Z+1	; 0x01
    3a18:	01 97       	sbiw	r24, 0x01	; 1
    3a1a:	f1 f7       	brne	.-4      	; 0x3a18 <__stack+0x2919>
    3a1c:	9e 01       	movw	r18, r28
    3a1e:	2b 58       	subi	r18, 0x8B	; 139
    3a20:	3e 4f       	sbci	r19, 0xFE	; 254
    3a22:	f9 01       	movw	r30, r18
    3a24:	91 83       	std	Z+1, r25	; 0x01
    3a26:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a28:	ce 01       	movw	r24, r28
    3a2a:	8d 58       	subi	r24, 0x8D	; 141
    3a2c:	9e 4f       	sbci	r25, 0xFE	; 254
    3a2e:	9e 01       	movw	r18, r28
    3a30:	2d 58       	subi	r18, 0x8D	; 141
    3a32:	3e 4f       	sbci	r19, 0xFE	; 254
    3a34:	f9 01       	movw	r30, r18
    3a36:	20 81       	ld	r18, Z
    3a38:	31 81       	ldd	r19, Z+1	; 0x01
    3a3a:	21 50       	subi	r18, 0x01	; 1
    3a3c:	31 09       	sbc	r19, r1
    3a3e:	fc 01       	movw	r30, r24
    3a40:	31 83       	std	Z+1, r19	; 0x01
    3a42:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a44:	ce 01       	movw	r24, r28
    3a46:	8d 58       	subi	r24, 0x8D	; 141
    3a48:	9e 4f       	sbci	r25, 0xFE	; 254
    3a4a:	fc 01       	movw	r30, r24
    3a4c:	80 81       	ld	r24, Z
    3a4e:	91 81       	ldd	r25, Z+1	; 0x01
    3a50:	89 2b       	or	r24, r25
    3a52:	a1 f6       	brne	.-88     	; 0x39fc <__stack+0x28fd>
    3a54:	2c c0       	rjmp	.+88     	; 0x3aae <__stack+0x29af>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a56:	8e 01       	movw	r16, r28
    3a58:	0d 58       	subi	r16, 0x8D	; 141
    3a5a:	1e 4f       	sbci	r17, 0xFE	; 254
    3a5c:	ce 01       	movw	r24, r28
    3a5e:	81 59       	subi	r24, 0x91	; 145
    3a60:	9e 4f       	sbci	r25, 0xFE	; 254
    3a62:	fc 01       	movw	r30, r24
    3a64:	60 81       	ld	r22, Z
    3a66:	71 81       	ldd	r23, Z+1	; 0x01
    3a68:	82 81       	ldd	r24, Z+2	; 0x02
    3a6a:	93 81       	ldd	r25, Z+3	; 0x03
    3a6c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    3a70:	dc 01       	movw	r26, r24
    3a72:	cb 01       	movw	r24, r22
    3a74:	f8 01       	movw	r30, r16
    3a76:	91 83       	std	Z+1, r25	; 0x01
    3a78:	80 83       	st	Z, r24
    3a7a:	ce 01       	movw	r24, r28
    3a7c:	89 58       	subi	r24, 0x89	; 137
    3a7e:	9e 4f       	sbci	r25, 0xFE	; 254
    3a80:	9e 01       	movw	r18, r28
    3a82:	2d 58       	subi	r18, 0x8D	; 141
    3a84:	3e 4f       	sbci	r19, 0xFE	; 254
    3a86:	f9 01       	movw	r30, r18
    3a88:	20 81       	ld	r18, Z
    3a8a:	31 81       	ldd	r19, Z+1	; 0x01
    3a8c:	fc 01       	movw	r30, r24
    3a8e:	31 83       	std	Z+1, r19	; 0x01
    3a90:	20 83       	st	Z, r18
    3a92:	ce 01       	movw	r24, r28
    3a94:	89 58       	subi	r24, 0x89	; 137
    3a96:	9e 4f       	sbci	r25, 0xFE	; 254
    3a98:	fc 01       	movw	r30, r24
    3a9a:	80 81       	ld	r24, Z
    3a9c:	91 81       	ldd	r25, Z+1	; 0x01
    3a9e:	01 97       	sbiw	r24, 0x01	; 1
    3aa0:	f1 f7       	brne	.-4      	; 0x3a9e <__stack+0x299f>
    3aa2:	9e 01       	movw	r18, r28
    3aa4:	29 58       	subi	r18, 0x89	; 137
    3aa6:	3e 4f       	sbci	r19, 0xFE	; 254
    3aa8:	f9 01       	movw	r30, r18
    3aaa:	91 83       	std	Z+1, r25	; 0x01
    3aac:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F380 T100\n");
    3aae:	86 ec       	ldi	r24, 0xC6	; 198
    3ab0:	91 e0       	ldi	r25, 0x01	; 1
    3ab2:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    3ab6:	9e 01       	movw	r18, r28
    3ab8:	27 57       	subi	r18, 0x77	; 119
    3aba:	3f 4f       	sbci	r19, 0xFF	; 255
    3abc:	80 e0       	ldi	r24, 0x00	; 0
    3abe:	90 e0       	ldi	r25, 0x00	; 0
    3ac0:	a8 e4       	ldi	r26, 0x48	; 72
    3ac2:	b3 e4       	ldi	r27, 0x43	; 67
    3ac4:	f9 01       	movw	r30, r18
    3ac6:	80 83       	st	Z, r24
    3ac8:	91 83       	std	Z+1, r25	; 0x01
    3aca:	a2 83       	std	Z+2, r26	; 0x02
    3acc:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3ace:	8e 01       	movw	r16, r28
    3ad0:	0b 59       	subi	r16, 0x9B	; 155
    3ad2:	1e 4f       	sbci	r17, 0xFE	; 254
    3ad4:	ce 01       	movw	r24, r28
    3ad6:	87 57       	subi	r24, 0x77	; 119
    3ad8:	9f 4f       	sbci	r25, 0xFF	; 255
    3ada:	20 e0       	ldi	r18, 0x00	; 0
    3adc:	30 e0       	ldi	r19, 0x00	; 0
    3ade:	4a e7       	ldi	r20, 0x7A	; 122
    3ae0:	55 e4       	ldi	r21, 0x45	; 69
    3ae2:	fc 01       	movw	r30, r24
    3ae4:	60 81       	ld	r22, Z
    3ae6:	71 81       	ldd	r23, Z+1	; 0x01
    3ae8:	82 81       	ldd	r24, Z+2	; 0x02
    3aea:	93 81       	ldd	r25, Z+3	; 0x03
    3aec:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    3af0:	dc 01       	movw	r26, r24
    3af2:	cb 01       	movw	r24, r22
    3af4:	f8 01       	movw	r30, r16
    3af6:	80 83       	st	Z, r24
    3af8:	91 83       	std	Z+1, r25	; 0x01
    3afa:	a2 83       	std	Z+2, r26	; 0x02
    3afc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3afe:	ce 01       	movw	r24, r28
    3b00:	8b 59       	subi	r24, 0x9B	; 155
    3b02:	9e 4f       	sbci	r25, 0xFE	; 254
    3b04:	20 e0       	ldi	r18, 0x00	; 0
    3b06:	30 e0       	ldi	r19, 0x00	; 0
    3b08:	40 e8       	ldi	r20, 0x80	; 128
    3b0a:	5f e3       	ldi	r21, 0x3F	; 63
    3b0c:	fc 01       	movw	r30, r24
    3b0e:	60 81       	ld	r22, Z
    3b10:	71 81       	ldd	r23, Z+1	; 0x01
    3b12:	82 81       	ldd	r24, Z+2	; 0x02
    3b14:	93 81       	ldd	r25, Z+3	; 0x03
    3b16:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    3b1a:	88 23       	and	r24, r24
    3b1c:	4c f4       	brge	.+18     	; 0x3b30 <__stack+0x2a31>
		__ticks = 1;
    3b1e:	ce 01       	movw	r24, r28
    3b20:	87 59       	subi	r24, 0x97	; 151
    3b22:	9e 4f       	sbci	r25, 0xFE	; 254
    3b24:	21 e0       	ldi	r18, 0x01	; 1
    3b26:	30 e0       	ldi	r19, 0x00	; 0
    3b28:	fc 01       	movw	r30, r24
    3b2a:	31 83       	std	Z+1, r19	; 0x01
    3b2c:	20 83       	st	Z, r18
    3b2e:	6d c0       	rjmp	.+218    	; 0x3c0a <__stack+0x2b0b>
	else if (__tmp > 65535)
    3b30:	ce 01       	movw	r24, r28
    3b32:	8b 59       	subi	r24, 0x9B	; 155
    3b34:	9e 4f       	sbci	r25, 0xFE	; 254
    3b36:	20 e0       	ldi	r18, 0x00	; 0
    3b38:	3f ef       	ldi	r19, 0xFF	; 255
    3b3a:	4f e7       	ldi	r20, 0x7F	; 127
    3b3c:	57 e4       	ldi	r21, 0x47	; 71
    3b3e:	fc 01       	movw	r30, r24
    3b40:	60 81       	ld	r22, Z
    3b42:	71 81       	ldd	r23, Z+1	; 0x01
    3b44:	82 81       	ldd	r24, Z+2	; 0x02
    3b46:	93 81       	ldd	r25, Z+3	; 0x03
    3b48:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    3b4c:	18 16       	cp	r1, r24
    3b4e:	0c f0       	brlt	.+2      	; 0x3b52 <__stack+0x2a53>
    3b50:	4a c0       	rjmp	.+148    	; 0x3be6 <__stack+0x2ae7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b52:	ce 01       	movw	r24, r28
    3b54:	87 57       	subi	r24, 0x77	; 119
    3b56:	9f 4f       	sbci	r25, 0xFF	; 255
    3b58:	20 e0       	ldi	r18, 0x00	; 0
    3b5a:	30 e0       	ldi	r19, 0x00	; 0
    3b5c:	40 e2       	ldi	r20, 0x20	; 32
    3b5e:	51 e4       	ldi	r21, 0x41	; 65
    3b60:	fc 01       	movw	r30, r24
    3b62:	60 81       	ld	r22, Z
    3b64:	71 81       	ldd	r23, Z+1	; 0x01
    3b66:	82 81       	ldd	r24, Z+2	; 0x02
    3b68:	93 81       	ldd	r25, Z+3	; 0x03
    3b6a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    3b6e:	dc 01       	movw	r26, r24
    3b70:	cb 01       	movw	r24, r22
    3b72:	8e 01       	movw	r16, r28
    3b74:	07 59       	subi	r16, 0x97	; 151
    3b76:	1e 4f       	sbci	r17, 0xFE	; 254
    3b78:	bc 01       	movw	r22, r24
    3b7a:	cd 01       	movw	r24, r26
    3b7c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    3b80:	dc 01       	movw	r26, r24
    3b82:	cb 01       	movw	r24, r22
    3b84:	f8 01       	movw	r30, r16
    3b86:	91 83       	std	Z+1, r25	; 0x01
    3b88:	80 83       	st	Z, r24
    3b8a:	24 c0       	rjmp	.+72     	; 0x3bd4 <__stack+0x2ad5>
    3b8c:	ce 01       	movw	r24, r28
    3b8e:	85 59       	subi	r24, 0x95	; 149
    3b90:	9e 4f       	sbci	r25, 0xFE	; 254
    3b92:	20 e9       	ldi	r18, 0x90	; 144
    3b94:	31 e0       	ldi	r19, 0x01	; 1
    3b96:	fc 01       	movw	r30, r24
    3b98:	31 83       	std	Z+1, r19	; 0x01
    3b9a:	20 83       	st	Z, r18
    3b9c:	ce 01       	movw	r24, r28
    3b9e:	85 59       	subi	r24, 0x95	; 149
    3ba0:	9e 4f       	sbci	r25, 0xFE	; 254
    3ba2:	fc 01       	movw	r30, r24
    3ba4:	80 81       	ld	r24, Z
    3ba6:	91 81       	ldd	r25, Z+1	; 0x01
    3ba8:	01 97       	sbiw	r24, 0x01	; 1
    3baa:	f1 f7       	brne	.-4      	; 0x3ba8 <__stack+0x2aa9>
    3bac:	9e 01       	movw	r18, r28
    3bae:	25 59       	subi	r18, 0x95	; 149
    3bb0:	3e 4f       	sbci	r19, 0xFE	; 254
    3bb2:	f9 01       	movw	r30, r18
    3bb4:	91 83       	std	Z+1, r25	; 0x01
    3bb6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3bb8:	ce 01       	movw	r24, r28
    3bba:	87 59       	subi	r24, 0x97	; 151
    3bbc:	9e 4f       	sbci	r25, 0xFE	; 254
    3bbe:	9e 01       	movw	r18, r28
    3bc0:	27 59       	subi	r18, 0x97	; 151
    3bc2:	3e 4f       	sbci	r19, 0xFE	; 254
    3bc4:	f9 01       	movw	r30, r18
    3bc6:	20 81       	ld	r18, Z
    3bc8:	31 81       	ldd	r19, Z+1	; 0x01
    3bca:	21 50       	subi	r18, 0x01	; 1
    3bcc:	31 09       	sbc	r19, r1
    3bce:	fc 01       	movw	r30, r24
    3bd0:	31 83       	std	Z+1, r19	; 0x01
    3bd2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3bd4:	ce 01       	movw	r24, r28
    3bd6:	87 59       	subi	r24, 0x97	; 151
    3bd8:	9e 4f       	sbci	r25, 0xFE	; 254
    3bda:	fc 01       	movw	r30, r24
    3bdc:	80 81       	ld	r24, Z
    3bde:	91 81       	ldd	r25, Z+1	; 0x01
    3be0:	89 2b       	or	r24, r25
    3be2:	a1 f6       	brne	.-88     	; 0x3b8c <__stack+0x2a8d>
    3be4:	2c c0       	rjmp	.+88     	; 0x3c3e <__stack+0x2b3f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3be6:	8e 01       	movw	r16, r28
    3be8:	07 59       	subi	r16, 0x97	; 151
    3bea:	1e 4f       	sbci	r17, 0xFE	; 254
    3bec:	ce 01       	movw	r24, r28
    3bee:	8b 59       	subi	r24, 0x9B	; 155
    3bf0:	9e 4f       	sbci	r25, 0xFE	; 254
    3bf2:	fc 01       	movw	r30, r24
    3bf4:	60 81       	ld	r22, Z
    3bf6:	71 81       	ldd	r23, Z+1	; 0x01
    3bf8:	82 81       	ldd	r24, Z+2	; 0x02
    3bfa:	93 81       	ldd	r25, Z+3	; 0x03
    3bfc:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    3c00:	dc 01       	movw	r26, r24
    3c02:	cb 01       	movw	r24, r22
    3c04:	f8 01       	movw	r30, r16
    3c06:	91 83       	std	Z+1, r25	; 0x01
    3c08:	80 83       	st	Z, r24
    3c0a:	ce 01       	movw	r24, r28
    3c0c:	83 59       	subi	r24, 0x93	; 147
    3c0e:	9e 4f       	sbci	r25, 0xFE	; 254
    3c10:	9e 01       	movw	r18, r28
    3c12:	27 59       	subi	r18, 0x97	; 151
    3c14:	3e 4f       	sbci	r19, 0xFE	; 254
    3c16:	f9 01       	movw	r30, r18
    3c18:	20 81       	ld	r18, Z
    3c1a:	31 81       	ldd	r19, Z+1	; 0x01
    3c1c:	fc 01       	movw	r30, r24
    3c1e:	31 83       	std	Z+1, r19	; 0x01
    3c20:	20 83       	st	Z, r18
    3c22:	ce 01       	movw	r24, r28
    3c24:	83 59       	subi	r24, 0x93	; 147
    3c26:	9e 4f       	sbci	r25, 0xFE	; 254
    3c28:	fc 01       	movw	r30, r24
    3c2a:	80 81       	ld	r24, Z
    3c2c:	91 81       	ldd	r25, Z+1	; 0x01
    3c2e:	01 97       	sbiw	r24, 0x01	; 1
    3c30:	f1 f7       	brne	.-4      	; 0x3c2e <__stack+0x2b2f>
    3c32:	9e 01       	movw	r18, r28
    3c34:	23 59       	subi	r18, 0x93	; 147
    3c36:	3e 4f       	sbci	r19, 0xFE	; 254
    3c38:	f9 01       	movw	r30, r18
    3c3a:	91 83       	std	Z+1, r25	; 0x01
    3c3c:	80 83       	st	Z, r24
			_delay_ms(200);
			to_uARM("M2210 F660 T80\n");
    3c3e:	8b e2       	ldi	r24, 0x2B	; 43
    3c40:	92 e0       	ldi	r25, 0x02	; 2
    3c42:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    3c46:	9e 01       	movw	r18, r28
    3c48:	23 57       	subi	r18, 0x73	; 115
    3c4a:	3f 4f       	sbci	r19, 0xFF	; 255
    3c4c:	80 e0       	ldi	r24, 0x00	; 0
    3c4e:	90 e0       	ldi	r25, 0x00	; 0
    3c50:	a8 e4       	ldi	r26, 0x48	; 72
    3c52:	b3 e4       	ldi	r27, 0x43	; 67
    3c54:	f9 01       	movw	r30, r18
    3c56:	80 83       	st	Z, r24
    3c58:	91 83       	std	Z+1, r25	; 0x01
    3c5a:	a2 83       	std	Z+2, r26	; 0x02
    3c5c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3c5e:	8e 01       	movw	r16, r28
    3c60:	05 5a       	subi	r16, 0xA5	; 165
    3c62:	1e 4f       	sbci	r17, 0xFE	; 254
    3c64:	ce 01       	movw	r24, r28
    3c66:	83 57       	subi	r24, 0x73	; 115
    3c68:	9f 4f       	sbci	r25, 0xFF	; 255
    3c6a:	20 e0       	ldi	r18, 0x00	; 0
    3c6c:	30 e0       	ldi	r19, 0x00	; 0
    3c6e:	4a e7       	ldi	r20, 0x7A	; 122
    3c70:	55 e4       	ldi	r21, 0x45	; 69
    3c72:	fc 01       	movw	r30, r24
    3c74:	60 81       	ld	r22, Z
    3c76:	71 81       	ldd	r23, Z+1	; 0x01
    3c78:	82 81       	ldd	r24, Z+2	; 0x02
    3c7a:	93 81       	ldd	r25, Z+3	; 0x03
    3c7c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    3c80:	dc 01       	movw	r26, r24
    3c82:	cb 01       	movw	r24, r22
    3c84:	f8 01       	movw	r30, r16
    3c86:	80 83       	st	Z, r24
    3c88:	91 83       	std	Z+1, r25	; 0x01
    3c8a:	a2 83       	std	Z+2, r26	; 0x02
    3c8c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3c8e:	ce 01       	movw	r24, r28
    3c90:	85 5a       	subi	r24, 0xA5	; 165
    3c92:	9e 4f       	sbci	r25, 0xFE	; 254
    3c94:	20 e0       	ldi	r18, 0x00	; 0
    3c96:	30 e0       	ldi	r19, 0x00	; 0
    3c98:	40 e8       	ldi	r20, 0x80	; 128
    3c9a:	5f e3       	ldi	r21, 0x3F	; 63
    3c9c:	fc 01       	movw	r30, r24
    3c9e:	60 81       	ld	r22, Z
    3ca0:	71 81       	ldd	r23, Z+1	; 0x01
    3ca2:	82 81       	ldd	r24, Z+2	; 0x02
    3ca4:	93 81       	ldd	r25, Z+3	; 0x03
    3ca6:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    3caa:	88 23       	and	r24, r24
    3cac:	4c f4       	brge	.+18     	; 0x3cc0 <__stack+0x2bc1>
		__ticks = 1;
    3cae:	ce 01       	movw	r24, r28
    3cb0:	81 5a       	subi	r24, 0xA1	; 161
    3cb2:	9e 4f       	sbci	r25, 0xFE	; 254
    3cb4:	21 e0       	ldi	r18, 0x01	; 1
    3cb6:	30 e0       	ldi	r19, 0x00	; 0
    3cb8:	fc 01       	movw	r30, r24
    3cba:	31 83       	std	Z+1, r19	; 0x01
    3cbc:	20 83       	st	Z, r18
    3cbe:	6d c0       	rjmp	.+218    	; 0x3d9a <__stack+0x2c9b>
	else if (__tmp > 65535)
    3cc0:	ce 01       	movw	r24, r28
    3cc2:	85 5a       	subi	r24, 0xA5	; 165
    3cc4:	9e 4f       	sbci	r25, 0xFE	; 254
    3cc6:	20 e0       	ldi	r18, 0x00	; 0
    3cc8:	3f ef       	ldi	r19, 0xFF	; 255
    3cca:	4f e7       	ldi	r20, 0x7F	; 127
    3ccc:	57 e4       	ldi	r21, 0x47	; 71
    3cce:	fc 01       	movw	r30, r24
    3cd0:	60 81       	ld	r22, Z
    3cd2:	71 81       	ldd	r23, Z+1	; 0x01
    3cd4:	82 81       	ldd	r24, Z+2	; 0x02
    3cd6:	93 81       	ldd	r25, Z+3	; 0x03
    3cd8:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    3cdc:	18 16       	cp	r1, r24
    3cde:	0c f0       	brlt	.+2      	; 0x3ce2 <__stack+0x2be3>
    3ce0:	4a c0       	rjmp	.+148    	; 0x3d76 <__stack+0x2c77>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ce2:	ce 01       	movw	r24, r28
    3ce4:	83 57       	subi	r24, 0x73	; 115
    3ce6:	9f 4f       	sbci	r25, 0xFF	; 255
    3ce8:	20 e0       	ldi	r18, 0x00	; 0
    3cea:	30 e0       	ldi	r19, 0x00	; 0
    3cec:	40 e2       	ldi	r20, 0x20	; 32
    3cee:	51 e4       	ldi	r21, 0x41	; 65
    3cf0:	fc 01       	movw	r30, r24
    3cf2:	60 81       	ld	r22, Z
    3cf4:	71 81       	ldd	r23, Z+1	; 0x01
    3cf6:	82 81       	ldd	r24, Z+2	; 0x02
    3cf8:	93 81       	ldd	r25, Z+3	; 0x03
    3cfa:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    3cfe:	dc 01       	movw	r26, r24
    3d00:	cb 01       	movw	r24, r22
    3d02:	8e 01       	movw	r16, r28
    3d04:	01 5a       	subi	r16, 0xA1	; 161
    3d06:	1e 4f       	sbci	r17, 0xFE	; 254
    3d08:	bc 01       	movw	r22, r24
    3d0a:	cd 01       	movw	r24, r26
    3d0c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    3d10:	dc 01       	movw	r26, r24
    3d12:	cb 01       	movw	r24, r22
    3d14:	f8 01       	movw	r30, r16
    3d16:	91 83       	std	Z+1, r25	; 0x01
    3d18:	80 83       	st	Z, r24
    3d1a:	24 c0       	rjmp	.+72     	; 0x3d64 <__stack+0x2c65>
    3d1c:	ce 01       	movw	r24, r28
    3d1e:	8f 59       	subi	r24, 0x9F	; 159
    3d20:	9e 4f       	sbci	r25, 0xFE	; 254
    3d22:	20 e9       	ldi	r18, 0x90	; 144
    3d24:	31 e0       	ldi	r19, 0x01	; 1
    3d26:	fc 01       	movw	r30, r24
    3d28:	31 83       	std	Z+1, r19	; 0x01
    3d2a:	20 83       	st	Z, r18
    3d2c:	ce 01       	movw	r24, r28
    3d2e:	8f 59       	subi	r24, 0x9F	; 159
    3d30:	9e 4f       	sbci	r25, 0xFE	; 254
    3d32:	fc 01       	movw	r30, r24
    3d34:	80 81       	ld	r24, Z
    3d36:	91 81       	ldd	r25, Z+1	; 0x01
    3d38:	01 97       	sbiw	r24, 0x01	; 1
    3d3a:	f1 f7       	brne	.-4      	; 0x3d38 <__stack+0x2c39>
    3d3c:	9e 01       	movw	r18, r28
    3d3e:	2f 59       	subi	r18, 0x9F	; 159
    3d40:	3e 4f       	sbci	r19, 0xFE	; 254
    3d42:	f9 01       	movw	r30, r18
    3d44:	91 83       	std	Z+1, r25	; 0x01
    3d46:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d48:	ce 01       	movw	r24, r28
    3d4a:	81 5a       	subi	r24, 0xA1	; 161
    3d4c:	9e 4f       	sbci	r25, 0xFE	; 254
    3d4e:	9e 01       	movw	r18, r28
    3d50:	21 5a       	subi	r18, 0xA1	; 161
    3d52:	3e 4f       	sbci	r19, 0xFE	; 254
    3d54:	f9 01       	movw	r30, r18
    3d56:	20 81       	ld	r18, Z
    3d58:	31 81       	ldd	r19, Z+1	; 0x01
    3d5a:	21 50       	subi	r18, 0x01	; 1
    3d5c:	31 09       	sbc	r19, r1
    3d5e:	fc 01       	movw	r30, r24
    3d60:	31 83       	std	Z+1, r19	; 0x01
    3d62:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d64:	ce 01       	movw	r24, r28
    3d66:	81 5a       	subi	r24, 0xA1	; 161
    3d68:	9e 4f       	sbci	r25, 0xFE	; 254
    3d6a:	fc 01       	movw	r30, r24
    3d6c:	80 81       	ld	r24, Z
    3d6e:	91 81       	ldd	r25, Z+1	; 0x01
    3d70:	89 2b       	or	r24, r25
    3d72:	a1 f6       	brne	.-88     	; 0x3d1c <__stack+0x2c1d>
    3d74:	2c c0       	rjmp	.+88     	; 0x3dce <__stack+0x2ccf>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d76:	8e 01       	movw	r16, r28
    3d78:	01 5a       	subi	r16, 0xA1	; 161
    3d7a:	1e 4f       	sbci	r17, 0xFE	; 254
    3d7c:	ce 01       	movw	r24, r28
    3d7e:	85 5a       	subi	r24, 0xA5	; 165
    3d80:	9e 4f       	sbci	r25, 0xFE	; 254
    3d82:	fc 01       	movw	r30, r24
    3d84:	60 81       	ld	r22, Z
    3d86:	71 81       	ldd	r23, Z+1	; 0x01
    3d88:	82 81       	ldd	r24, Z+2	; 0x02
    3d8a:	93 81       	ldd	r25, Z+3	; 0x03
    3d8c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    3d90:	dc 01       	movw	r26, r24
    3d92:	cb 01       	movw	r24, r22
    3d94:	f8 01       	movw	r30, r16
    3d96:	91 83       	std	Z+1, r25	; 0x01
    3d98:	80 83       	st	Z, r24
    3d9a:	ce 01       	movw	r24, r28
    3d9c:	8d 59       	subi	r24, 0x9D	; 157
    3d9e:	9e 4f       	sbci	r25, 0xFE	; 254
    3da0:	9e 01       	movw	r18, r28
    3da2:	21 5a       	subi	r18, 0xA1	; 161
    3da4:	3e 4f       	sbci	r19, 0xFE	; 254
    3da6:	f9 01       	movw	r30, r18
    3da8:	20 81       	ld	r18, Z
    3daa:	31 81       	ldd	r19, Z+1	; 0x01
    3dac:	fc 01       	movw	r30, r24
    3dae:	31 83       	std	Z+1, r19	; 0x01
    3db0:	20 83       	st	Z, r18
    3db2:	ce 01       	movw	r24, r28
    3db4:	8d 59       	subi	r24, 0x9D	; 157
    3db6:	9e 4f       	sbci	r25, 0xFE	; 254
    3db8:	fc 01       	movw	r30, r24
    3dba:	80 81       	ld	r24, Z
    3dbc:	91 81       	ldd	r25, Z+1	; 0x01
    3dbe:	01 97       	sbiw	r24, 0x01	; 1
    3dc0:	f1 f7       	brne	.-4      	; 0x3dbe <__stack+0x2cbf>
    3dc2:	9e 01       	movw	r18, r28
    3dc4:	2d 59       	subi	r18, 0x9D	; 157
    3dc6:	3e 4f       	sbci	r19, 0xFE	; 254
    3dc8:	f9 01       	movw	r30, r18
    3dca:	91 83       	std	Z+1, r25	; 0x01
    3dcc:	80 83       	st	Z, r24
			_delay_ms(200);
			to_uARM("M2210 F760 T50\n");
    3dce:	8b e3       	ldi	r24, 0x3B	; 59
    3dd0:	92 e0       	ldi	r25, 0x02	; 2
    3dd2:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    3dd6:	9e 01       	movw	r18, r28
    3dd8:	2f 56       	subi	r18, 0x6F	; 111
    3dda:	3f 4f       	sbci	r19, 0xFF	; 255
    3ddc:	80 e0       	ldi	r24, 0x00	; 0
    3dde:	90 e0       	ldi	r25, 0x00	; 0
    3de0:	a6 e1       	ldi	r26, 0x16	; 22
    3de2:	b3 e4       	ldi	r27, 0x43	; 67
    3de4:	f9 01       	movw	r30, r18
    3de6:	80 83       	st	Z, r24
    3de8:	91 83       	std	Z+1, r25	; 0x01
    3dea:	a2 83       	std	Z+2, r26	; 0x02
    3dec:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3dee:	8e 01       	movw	r16, r28
    3df0:	0f 5a       	subi	r16, 0xAF	; 175
    3df2:	1e 4f       	sbci	r17, 0xFE	; 254
    3df4:	ce 01       	movw	r24, r28
    3df6:	8f 56       	subi	r24, 0x6F	; 111
    3df8:	9f 4f       	sbci	r25, 0xFF	; 255
    3dfa:	20 e0       	ldi	r18, 0x00	; 0
    3dfc:	30 e0       	ldi	r19, 0x00	; 0
    3dfe:	4a e7       	ldi	r20, 0x7A	; 122
    3e00:	55 e4       	ldi	r21, 0x45	; 69
    3e02:	fc 01       	movw	r30, r24
    3e04:	60 81       	ld	r22, Z
    3e06:	71 81       	ldd	r23, Z+1	; 0x01
    3e08:	82 81       	ldd	r24, Z+2	; 0x02
    3e0a:	93 81       	ldd	r25, Z+3	; 0x03
    3e0c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    3e10:	dc 01       	movw	r26, r24
    3e12:	cb 01       	movw	r24, r22
    3e14:	f8 01       	movw	r30, r16
    3e16:	80 83       	st	Z, r24
    3e18:	91 83       	std	Z+1, r25	; 0x01
    3e1a:	a2 83       	std	Z+2, r26	; 0x02
    3e1c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3e1e:	ce 01       	movw	r24, r28
    3e20:	8f 5a       	subi	r24, 0xAF	; 175
    3e22:	9e 4f       	sbci	r25, 0xFE	; 254
    3e24:	20 e0       	ldi	r18, 0x00	; 0
    3e26:	30 e0       	ldi	r19, 0x00	; 0
    3e28:	40 e8       	ldi	r20, 0x80	; 128
    3e2a:	5f e3       	ldi	r21, 0x3F	; 63
    3e2c:	fc 01       	movw	r30, r24
    3e2e:	60 81       	ld	r22, Z
    3e30:	71 81       	ldd	r23, Z+1	; 0x01
    3e32:	82 81       	ldd	r24, Z+2	; 0x02
    3e34:	93 81       	ldd	r25, Z+3	; 0x03
    3e36:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    3e3a:	88 23       	and	r24, r24
    3e3c:	4c f4       	brge	.+18     	; 0x3e50 <__stack+0x2d51>
		__ticks = 1;
    3e3e:	ce 01       	movw	r24, r28
    3e40:	8b 5a       	subi	r24, 0xAB	; 171
    3e42:	9e 4f       	sbci	r25, 0xFE	; 254
    3e44:	21 e0       	ldi	r18, 0x01	; 1
    3e46:	30 e0       	ldi	r19, 0x00	; 0
    3e48:	fc 01       	movw	r30, r24
    3e4a:	31 83       	std	Z+1, r19	; 0x01
    3e4c:	20 83       	st	Z, r18
    3e4e:	6d c0       	rjmp	.+218    	; 0x3f2a <__stack+0x2e2b>
	else if (__tmp > 65535)
    3e50:	ce 01       	movw	r24, r28
    3e52:	8f 5a       	subi	r24, 0xAF	; 175
    3e54:	9e 4f       	sbci	r25, 0xFE	; 254
    3e56:	20 e0       	ldi	r18, 0x00	; 0
    3e58:	3f ef       	ldi	r19, 0xFF	; 255
    3e5a:	4f e7       	ldi	r20, 0x7F	; 127
    3e5c:	57 e4       	ldi	r21, 0x47	; 71
    3e5e:	fc 01       	movw	r30, r24
    3e60:	60 81       	ld	r22, Z
    3e62:	71 81       	ldd	r23, Z+1	; 0x01
    3e64:	82 81       	ldd	r24, Z+2	; 0x02
    3e66:	93 81       	ldd	r25, Z+3	; 0x03
    3e68:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    3e6c:	18 16       	cp	r1, r24
    3e6e:	0c f0       	brlt	.+2      	; 0x3e72 <__stack+0x2d73>
    3e70:	4a c0       	rjmp	.+148    	; 0x3f06 <__stack+0x2e07>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e72:	ce 01       	movw	r24, r28
    3e74:	8f 56       	subi	r24, 0x6F	; 111
    3e76:	9f 4f       	sbci	r25, 0xFF	; 255
    3e78:	20 e0       	ldi	r18, 0x00	; 0
    3e7a:	30 e0       	ldi	r19, 0x00	; 0
    3e7c:	40 e2       	ldi	r20, 0x20	; 32
    3e7e:	51 e4       	ldi	r21, 0x41	; 65
    3e80:	fc 01       	movw	r30, r24
    3e82:	60 81       	ld	r22, Z
    3e84:	71 81       	ldd	r23, Z+1	; 0x01
    3e86:	82 81       	ldd	r24, Z+2	; 0x02
    3e88:	93 81       	ldd	r25, Z+3	; 0x03
    3e8a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    3e8e:	dc 01       	movw	r26, r24
    3e90:	cb 01       	movw	r24, r22
    3e92:	8e 01       	movw	r16, r28
    3e94:	0b 5a       	subi	r16, 0xAB	; 171
    3e96:	1e 4f       	sbci	r17, 0xFE	; 254
    3e98:	bc 01       	movw	r22, r24
    3e9a:	cd 01       	movw	r24, r26
    3e9c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    3ea0:	dc 01       	movw	r26, r24
    3ea2:	cb 01       	movw	r24, r22
    3ea4:	f8 01       	movw	r30, r16
    3ea6:	91 83       	std	Z+1, r25	; 0x01
    3ea8:	80 83       	st	Z, r24
    3eaa:	24 c0       	rjmp	.+72     	; 0x3ef4 <__stack+0x2df5>
    3eac:	ce 01       	movw	r24, r28
    3eae:	89 5a       	subi	r24, 0xA9	; 169
    3eb0:	9e 4f       	sbci	r25, 0xFE	; 254
    3eb2:	20 e9       	ldi	r18, 0x90	; 144
    3eb4:	31 e0       	ldi	r19, 0x01	; 1
    3eb6:	fc 01       	movw	r30, r24
    3eb8:	31 83       	std	Z+1, r19	; 0x01
    3eba:	20 83       	st	Z, r18
    3ebc:	ce 01       	movw	r24, r28
    3ebe:	89 5a       	subi	r24, 0xA9	; 169
    3ec0:	9e 4f       	sbci	r25, 0xFE	; 254
    3ec2:	fc 01       	movw	r30, r24
    3ec4:	80 81       	ld	r24, Z
    3ec6:	91 81       	ldd	r25, Z+1	; 0x01
    3ec8:	01 97       	sbiw	r24, 0x01	; 1
    3eca:	f1 f7       	brne	.-4      	; 0x3ec8 <__stack+0x2dc9>
    3ecc:	9e 01       	movw	r18, r28
    3ece:	29 5a       	subi	r18, 0xA9	; 169
    3ed0:	3e 4f       	sbci	r19, 0xFE	; 254
    3ed2:	f9 01       	movw	r30, r18
    3ed4:	91 83       	std	Z+1, r25	; 0x01
    3ed6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ed8:	ce 01       	movw	r24, r28
    3eda:	8b 5a       	subi	r24, 0xAB	; 171
    3edc:	9e 4f       	sbci	r25, 0xFE	; 254
    3ede:	9e 01       	movw	r18, r28
    3ee0:	2b 5a       	subi	r18, 0xAB	; 171
    3ee2:	3e 4f       	sbci	r19, 0xFE	; 254
    3ee4:	f9 01       	movw	r30, r18
    3ee6:	20 81       	ld	r18, Z
    3ee8:	31 81       	ldd	r19, Z+1	; 0x01
    3eea:	21 50       	subi	r18, 0x01	; 1
    3eec:	31 09       	sbc	r19, r1
    3eee:	fc 01       	movw	r30, r24
    3ef0:	31 83       	std	Z+1, r19	; 0x01
    3ef2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ef4:	ce 01       	movw	r24, r28
    3ef6:	8b 5a       	subi	r24, 0xAB	; 171
    3ef8:	9e 4f       	sbci	r25, 0xFE	; 254
    3efa:	fc 01       	movw	r30, r24
    3efc:	80 81       	ld	r24, Z
    3efe:	91 81       	ldd	r25, Z+1	; 0x01
    3f00:	89 2b       	or	r24, r25
    3f02:	a1 f6       	brne	.-88     	; 0x3eac <__stack+0x2dad>
    3f04:	2c c0       	rjmp	.+88     	; 0x3f5e <__stack+0x2e5f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3f06:	8e 01       	movw	r16, r28
    3f08:	0b 5a       	subi	r16, 0xAB	; 171
    3f0a:	1e 4f       	sbci	r17, 0xFE	; 254
    3f0c:	ce 01       	movw	r24, r28
    3f0e:	8f 5a       	subi	r24, 0xAF	; 175
    3f10:	9e 4f       	sbci	r25, 0xFE	; 254
    3f12:	fc 01       	movw	r30, r24
    3f14:	60 81       	ld	r22, Z
    3f16:	71 81       	ldd	r23, Z+1	; 0x01
    3f18:	82 81       	ldd	r24, Z+2	; 0x02
    3f1a:	93 81       	ldd	r25, Z+3	; 0x03
    3f1c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    3f20:	dc 01       	movw	r26, r24
    3f22:	cb 01       	movw	r24, r22
    3f24:	f8 01       	movw	r30, r16
    3f26:	91 83       	std	Z+1, r25	; 0x01
    3f28:	80 83       	st	Z, r24
    3f2a:	ce 01       	movw	r24, r28
    3f2c:	87 5a       	subi	r24, 0xA7	; 167
    3f2e:	9e 4f       	sbci	r25, 0xFE	; 254
    3f30:	9e 01       	movw	r18, r28
    3f32:	2b 5a       	subi	r18, 0xAB	; 171
    3f34:	3e 4f       	sbci	r19, 0xFE	; 254
    3f36:	f9 01       	movw	r30, r18
    3f38:	20 81       	ld	r18, Z
    3f3a:	31 81       	ldd	r19, Z+1	; 0x01
    3f3c:	fc 01       	movw	r30, r24
    3f3e:	31 83       	std	Z+1, r19	; 0x01
    3f40:	20 83       	st	Z, r18
    3f42:	ce 01       	movw	r24, r28
    3f44:	87 5a       	subi	r24, 0xA7	; 167
    3f46:	9e 4f       	sbci	r25, 0xFE	; 254
    3f48:	fc 01       	movw	r30, r24
    3f4a:	80 81       	ld	r24, Z
    3f4c:	91 81       	ldd	r25, Z+1	; 0x01
    3f4e:	01 97       	sbiw	r24, 0x01	; 1
    3f50:	f1 f7       	brne	.-4      	; 0x3f4e <__stack+0x2e4f>
    3f52:	9e 01       	movw	r18, r28
    3f54:	27 5a       	subi	r18, 0xA7	; 167
    3f56:	3e 4f       	sbci	r19, 0xFE	; 254
    3f58:	f9 01       	movw	r30, r18
    3f5a:	91 83       	std	Z+1, r25	; 0x01
    3f5c:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F860 T100\n");
    3f5e:	8b e4       	ldi	r24, 0x4B	; 75
    3f60:	92 e0       	ldi	r25, 0x02	; 2
    3f62:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    3f66:	9e 01       	movw	r18, r28
    3f68:	2b 56       	subi	r18, 0x6B	; 107
    3f6a:	3f 4f       	sbci	r19, 0xFF	; 255
    3f6c:	80 e0       	ldi	r24, 0x00	; 0
    3f6e:	90 e0       	ldi	r25, 0x00	; 0
    3f70:	a6 e9       	ldi	r26, 0x96	; 150
    3f72:	b3 e4       	ldi	r27, 0x43	; 67
    3f74:	f9 01       	movw	r30, r18
    3f76:	80 83       	st	Z, r24
    3f78:	91 83       	std	Z+1, r25	; 0x01
    3f7a:	a2 83       	std	Z+2, r26	; 0x02
    3f7c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3f7e:	8e 01       	movw	r16, r28
    3f80:	09 5b       	subi	r16, 0xB9	; 185
    3f82:	1e 4f       	sbci	r17, 0xFE	; 254
    3f84:	ce 01       	movw	r24, r28
    3f86:	8b 56       	subi	r24, 0x6B	; 107
    3f88:	9f 4f       	sbci	r25, 0xFF	; 255
    3f8a:	20 e0       	ldi	r18, 0x00	; 0
    3f8c:	30 e0       	ldi	r19, 0x00	; 0
    3f8e:	4a e7       	ldi	r20, 0x7A	; 122
    3f90:	55 e4       	ldi	r21, 0x45	; 69
    3f92:	fc 01       	movw	r30, r24
    3f94:	60 81       	ld	r22, Z
    3f96:	71 81       	ldd	r23, Z+1	; 0x01
    3f98:	82 81       	ldd	r24, Z+2	; 0x02
    3f9a:	93 81       	ldd	r25, Z+3	; 0x03
    3f9c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    3fa0:	dc 01       	movw	r26, r24
    3fa2:	cb 01       	movw	r24, r22
    3fa4:	f8 01       	movw	r30, r16
    3fa6:	80 83       	st	Z, r24
    3fa8:	91 83       	std	Z+1, r25	; 0x01
    3faa:	a2 83       	std	Z+2, r26	; 0x02
    3fac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3fae:	ce 01       	movw	r24, r28
    3fb0:	89 5b       	subi	r24, 0xB9	; 185
    3fb2:	9e 4f       	sbci	r25, 0xFE	; 254
    3fb4:	20 e0       	ldi	r18, 0x00	; 0
    3fb6:	30 e0       	ldi	r19, 0x00	; 0
    3fb8:	40 e8       	ldi	r20, 0x80	; 128
    3fba:	5f e3       	ldi	r21, 0x3F	; 63
    3fbc:	fc 01       	movw	r30, r24
    3fbe:	60 81       	ld	r22, Z
    3fc0:	71 81       	ldd	r23, Z+1	; 0x01
    3fc2:	82 81       	ldd	r24, Z+2	; 0x02
    3fc4:	93 81       	ldd	r25, Z+3	; 0x03
    3fc6:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    3fca:	88 23       	and	r24, r24
    3fcc:	4c f4       	brge	.+18     	; 0x3fe0 <__stack+0x2ee1>
		__ticks = 1;
    3fce:	ce 01       	movw	r24, r28
    3fd0:	85 5b       	subi	r24, 0xB5	; 181
    3fd2:	9e 4f       	sbci	r25, 0xFE	; 254
    3fd4:	21 e0       	ldi	r18, 0x01	; 1
    3fd6:	30 e0       	ldi	r19, 0x00	; 0
    3fd8:	fc 01       	movw	r30, r24
    3fda:	31 83       	std	Z+1, r19	; 0x01
    3fdc:	20 83       	st	Z, r18
    3fde:	6d c0       	rjmp	.+218    	; 0x40ba <__stack+0x2fbb>
	else if (__tmp > 65535)
    3fe0:	ce 01       	movw	r24, r28
    3fe2:	89 5b       	subi	r24, 0xB9	; 185
    3fe4:	9e 4f       	sbci	r25, 0xFE	; 254
    3fe6:	20 e0       	ldi	r18, 0x00	; 0
    3fe8:	3f ef       	ldi	r19, 0xFF	; 255
    3fea:	4f e7       	ldi	r20, 0x7F	; 127
    3fec:	57 e4       	ldi	r21, 0x47	; 71
    3fee:	fc 01       	movw	r30, r24
    3ff0:	60 81       	ld	r22, Z
    3ff2:	71 81       	ldd	r23, Z+1	; 0x01
    3ff4:	82 81       	ldd	r24, Z+2	; 0x02
    3ff6:	93 81       	ldd	r25, Z+3	; 0x03
    3ff8:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    3ffc:	18 16       	cp	r1, r24
    3ffe:	0c f0       	brlt	.+2      	; 0x4002 <__stack+0x2f03>
    4000:	4a c0       	rjmp	.+148    	; 0x4096 <__stack+0x2f97>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4002:	ce 01       	movw	r24, r28
    4004:	8b 56       	subi	r24, 0x6B	; 107
    4006:	9f 4f       	sbci	r25, 0xFF	; 255
    4008:	20 e0       	ldi	r18, 0x00	; 0
    400a:	30 e0       	ldi	r19, 0x00	; 0
    400c:	40 e2       	ldi	r20, 0x20	; 32
    400e:	51 e4       	ldi	r21, 0x41	; 65
    4010:	fc 01       	movw	r30, r24
    4012:	60 81       	ld	r22, Z
    4014:	71 81       	ldd	r23, Z+1	; 0x01
    4016:	82 81       	ldd	r24, Z+2	; 0x02
    4018:	93 81       	ldd	r25, Z+3	; 0x03
    401a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    401e:	dc 01       	movw	r26, r24
    4020:	cb 01       	movw	r24, r22
    4022:	8e 01       	movw	r16, r28
    4024:	05 5b       	subi	r16, 0xB5	; 181
    4026:	1e 4f       	sbci	r17, 0xFE	; 254
    4028:	bc 01       	movw	r22, r24
    402a:	cd 01       	movw	r24, r26
    402c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    4030:	dc 01       	movw	r26, r24
    4032:	cb 01       	movw	r24, r22
    4034:	f8 01       	movw	r30, r16
    4036:	91 83       	std	Z+1, r25	; 0x01
    4038:	80 83       	st	Z, r24
    403a:	24 c0       	rjmp	.+72     	; 0x4084 <__stack+0x2f85>
    403c:	ce 01       	movw	r24, r28
    403e:	83 5b       	subi	r24, 0xB3	; 179
    4040:	9e 4f       	sbci	r25, 0xFE	; 254
    4042:	20 e9       	ldi	r18, 0x90	; 144
    4044:	31 e0       	ldi	r19, 0x01	; 1
    4046:	fc 01       	movw	r30, r24
    4048:	31 83       	std	Z+1, r19	; 0x01
    404a:	20 83       	st	Z, r18
    404c:	ce 01       	movw	r24, r28
    404e:	83 5b       	subi	r24, 0xB3	; 179
    4050:	9e 4f       	sbci	r25, 0xFE	; 254
    4052:	fc 01       	movw	r30, r24
    4054:	80 81       	ld	r24, Z
    4056:	91 81       	ldd	r25, Z+1	; 0x01
    4058:	01 97       	sbiw	r24, 0x01	; 1
    405a:	f1 f7       	brne	.-4      	; 0x4058 <__stack+0x2f59>
    405c:	9e 01       	movw	r18, r28
    405e:	23 5b       	subi	r18, 0xB3	; 179
    4060:	3e 4f       	sbci	r19, 0xFE	; 254
    4062:	f9 01       	movw	r30, r18
    4064:	91 83       	std	Z+1, r25	; 0x01
    4066:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4068:	ce 01       	movw	r24, r28
    406a:	85 5b       	subi	r24, 0xB5	; 181
    406c:	9e 4f       	sbci	r25, 0xFE	; 254
    406e:	9e 01       	movw	r18, r28
    4070:	25 5b       	subi	r18, 0xB5	; 181
    4072:	3e 4f       	sbci	r19, 0xFE	; 254
    4074:	f9 01       	movw	r30, r18
    4076:	20 81       	ld	r18, Z
    4078:	31 81       	ldd	r19, Z+1	; 0x01
    407a:	21 50       	subi	r18, 0x01	; 1
    407c:	31 09       	sbc	r19, r1
    407e:	fc 01       	movw	r30, r24
    4080:	31 83       	std	Z+1, r19	; 0x01
    4082:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4084:	ce 01       	movw	r24, r28
    4086:	85 5b       	subi	r24, 0xB5	; 181
    4088:	9e 4f       	sbci	r25, 0xFE	; 254
    408a:	fc 01       	movw	r30, r24
    408c:	80 81       	ld	r24, Z
    408e:	91 81       	ldd	r25, Z+1	; 0x01
    4090:	89 2b       	or	r24, r25
    4092:	a1 f6       	brne	.-88     	; 0x403c <__stack+0x2f3d>
    4094:	2c c0       	rjmp	.+88     	; 0x40ee <__stack+0x2fef>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4096:	8e 01       	movw	r16, r28
    4098:	05 5b       	subi	r16, 0xB5	; 181
    409a:	1e 4f       	sbci	r17, 0xFE	; 254
    409c:	ce 01       	movw	r24, r28
    409e:	89 5b       	subi	r24, 0xB9	; 185
    40a0:	9e 4f       	sbci	r25, 0xFE	; 254
    40a2:	fc 01       	movw	r30, r24
    40a4:	60 81       	ld	r22, Z
    40a6:	71 81       	ldd	r23, Z+1	; 0x01
    40a8:	82 81       	ldd	r24, Z+2	; 0x02
    40aa:	93 81       	ldd	r25, Z+3	; 0x03
    40ac:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    40b0:	dc 01       	movw	r26, r24
    40b2:	cb 01       	movw	r24, r22
    40b4:	f8 01       	movw	r30, r16
    40b6:	91 83       	std	Z+1, r25	; 0x01
    40b8:	80 83       	st	Z, r24
    40ba:	ce 01       	movw	r24, r28
    40bc:	81 5b       	subi	r24, 0xB1	; 177
    40be:	9e 4f       	sbci	r25, 0xFE	; 254
    40c0:	9e 01       	movw	r18, r28
    40c2:	25 5b       	subi	r18, 0xB5	; 181
    40c4:	3e 4f       	sbci	r19, 0xFE	; 254
    40c6:	f9 01       	movw	r30, r18
    40c8:	20 81       	ld	r18, Z
    40ca:	31 81       	ldd	r19, Z+1	; 0x01
    40cc:	fc 01       	movw	r30, r24
    40ce:	31 83       	std	Z+1, r19	; 0x01
    40d0:	20 83       	st	Z, r18
    40d2:	ce 01       	movw	r24, r28
    40d4:	81 5b       	subi	r24, 0xB1	; 177
    40d6:	9e 4f       	sbci	r25, 0xFE	; 254
    40d8:	fc 01       	movw	r30, r24
    40da:	80 81       	ld	r24, Z
    40dc:	91 81       	ldd	r25, Z+1	; 0x01
    40de:	01 97       	sbiw	r24, 0x01	; 1
    40e0:	f1 f7       	brne	.-4      	; 0x40de <__stack+0x2fdf>
    40e2:	9e 01       	movw	r18, r28
    40e4:	21 5b       	subi	r18, 0xB1	; 177
    40e6:	3e 4f       	sbci	r19, 0xFE	; 254
    40e8:	f9 01       	movw	r30, r18
    40ea:	91 83       	std	Z+1, r25	; 0x01
    40ec:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 700 T80\n");
    40ee:	8c e8       	ldi	r24, 0x8C	; 140
    40f0:	92 e0       	ldi	r25, 0x02	; 2
    40f2:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    40f6:	9e 01       	movw	r18, r28
    40f8:	27 56       	subi	r18, 0x67	; 103
    40fa:	3f 4f       	sbci	r19, 0xFF	; 255
    40fc:	80 e0       	ldi	r24, 0x00	; 0
    40fe:	90 e0       	ldi	r25, 0x00	; 0
    4100:	a6 e1       	ldi	r26, 0x16	; 22
    4102:	b3 e4       	ldi	r27, 0x43	; 67
    4104:	f9 01       	movw	r30, r18
    4106:	80 83       	st	Z, r24
    4108:	91 83       	std	Z+1, r25	; 0x01
    410a:	a2 83       	std	Z+2, r26	; 0x02
    410c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    410e:	8e 01       	movw	r16, r28
    4110:	03 5c       	subi	r16, 0xC3	; 195
    4112:	1e 4f       	sbci	r17, 0xFE	; 254
    4114:	ce 01       	movw	r24, r28
    4116:	87 56       	subi	r24, 0x67	; 103
    4118:	9f 4f       	sbci	r25, 0xFF	; 255
    411a:	20 e0       	ldi	r18, 0x00	; 0
    411c:	30 e0       	ldi	r19, 0x00	; 0
    411e:	4a e7       	ldi	r20, 0x7A	; 122
    4120:	55 e4       	ldi	r21, 0x45	; 69
    4122:	fc 01       	movw	r30, r24
    4124:	60 81       	ld	r22, Z
    4126:	71 81       	ldd	r23, Z+1	; 0x01
    4128:	82 81       	ldd	r24, Z+2	; 0x02
    412a:	93 81       	ldd	r25, Z+3	; 0x03
    412c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    4130:	dc 01       	movw	r26, r24
    4132:	cb 01       	movw	r24, r22
    4134:	f8 01       	movw	r30, r16
    4136:	80 83       	st	Z, r24
    4138:	91 83       	std	Z+1, r25	; 0x01
    413a:	a2 83       	std	Z+2, r26	; 0x02
    413c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    413e:	ce 01       	movw	r24, r28
    4140:	83 5c       	subi	r24, 0xC3	; 195
    4142:	9e 4f       	sbci	r25, 0xFE	; 254
    4144:	20 e0       	ldi	r18, 0x00	; 0
    4146:	30 e0       	ldi	r19, 0x00	; 0
    4148:	40 e8       	ldi	r20, 0x80	; 128
    414a:	5f e3       	ldi	r21, 0x3F	; 63
    414c:	fc 01       	movw	r30, r24
    414e:	60 81       	ld	r22, Z
    4150:	71 81       	ldd	r23, Z+1	; 0x01
    4152:	82 81       	ldd	r24, Z+2	; 0x02
    4154:	93 81       	ldd	r25, Z+3	; 0x03
    4156:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    415a:	88 23       	and	r24, r24
    415c:	4c f4       	brge	.+18     	; 0x4170 <__stack+0x3071>
		__ticks = 1;
    415e:	ce 01       	movw	r24, r28
    4160:	8f 5b       	subi	r24, 0xBF	; 191
    4162:	9e 4f       	sbci	r25, 0xFE	; 254
    4164:	21 e0       	ldi	r18, 0x01	; 1
    4166:	30 e0       	ldi	r19, 0x00	; 0
    4168:	fc 01       	movw	r30, r24
    416a:	31 83       	std	Z+1, r19	; 0x01
    416c:	20 83       	st	Z, r18
    416e:	6d c0       	rjmp	.+218    	; 0x424a <__stack+0x314b>
	else if (__tmp > 65535)
    4170:	ce 01       	movw	r24, r28
    4172:	83 5c       	subi	r24, 0xC3	; 195
    4174:	9e 4f       	sbci	r25, 0xFE	; 254
    4176:	20 e0       	ldi	r18, 0x00	; 0
    4178:	3f ef       	ldi	r19, 0xFF	; 255
    417a:	4f e7       	ldi	r20, 0x7F	; 127
    417c:	57 e4       	ldi	r21, 0x47	; 71
    417e:	fc 01       	movw	r30, r24
    4180:	60 81       	ld	r22, Z
    4182:	71 81       	ldd	r23, Z+1	; 0x01
    4184:	82 81       	ldd	r24, Z+2	; 0x02
    4186:	93 81       	ldd	r25, Z+3	; 0x03
    4188:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    418c:	18 16       	cp	r1, r24
    418e:	0c f0       	brlt	.+2      	; 0x4192 <__stack+0x3093>
    4190:	4a c0       	rjmp	.+148    	; 0x4226 <__stack+0x3127>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4192:	ce 01       	movw	r24, r28
    4194:	87 56       	subi	r24, 0x67	; 103
    4196:	9f 4f       	sbci	r25, 0xFF	; 255
    4198:	20 e0       	ldi	r18, 0x00	; 0
    419a:	30 e0       	ldi	r19, 0x00	; 0
    419c:	40 e2       	ldi	r20, 0x20	; 32
    419e:	51 e4       	ldi	r21, 0x41	; 65
    41a0:	fc 01       	movw	r30, r24
    41a2:	60 81       	ld	r22, Z
    41a4:	71 81       	ldd	r23, Z+1	; 0x01
    41a6:	82 81       	ldd	r24, Z+2	; 0x02
    41a8:	93 81       	ldd	r25, Z+3	; 0x03
    41aa:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    41ae:	dc 01       	movw	r26, r24
    41b0:	cb 01       	movw	r24, r22
    41b2:	8e 01       	movw	r16, r28
    41b4:	0f 5b       	subi	r16, 0xBF	; 191
    41b6:	1e 4f       	sbci	r17, 0xFE	; 254
    41b8:	bc 01       	movw	r22, r24
    41ba:	cd 01       	movw	r24, r26
    41bc:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    41c0:	dc 01       	movw	r26, r24
    41c2:	cb 01       	movw	r24, r22
    41c4:	f8 01       	movw	r30, r16
    41c6:	91 83       	std	Z+1, r25	; 0x01
    41c8:	80 83       	st	Z, r24
    41ca:	24 c0       	rjmp	.+72     	; 0x4214 <__stack+0x3115>
    41cc:	ce 01       	movw	r24, r28
    41ce:	8d 5b       	subi	r24, 0xBD	; 189
    41d0:	9e 4f       	sbci	r25, 0xFE	; 254
    41d2:	20 e9       	ldi	r18, 0x90	; 144
    41d4:	31 e0       	ldi	r19, 0x01	; 1
    41d6:	fc 01       	movw	r30, r24
    41d8:	31 83       	std	Z+1, r19	; 0x01
    41da:	20 83       	st	Z, r18
    41dc:	ce 01       	movw	r24, r28
    41de:	8d 5b       	subi	r24, 0xBD	; 189
    41e0:	9e 4f       	sbci	r25, 0xFE	; 254
    41e2:	fc 01       	movw	r30, r24
    41e4:	80 81       	ld	r24, Z
    41e6:	91 81       	ldd	r25, Z+1	; 0x01
    41e8:	01 97       	sbiw	r24, 0x01	; 1
    41ea:	f1 f7       	brne	.-4      	; 0x41e8 <__stack+0x30e9>
    41ec:	9e 01       	movw	r18, r28
    41ee:	2d 5b       	subi	r18, 0xBD	; 189
    41f0:	3e 4f       	sbci	r19, 0xFE	; 254
    41f2:	f9 01       	movw	r30, r18
    41f4:	91 83       	std	Z+1, r25	; 0x01
    41f6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    41f8:	ce 01       	movw	r24, r28
    41fa:	8f 5b       	subi	r24, 0xBF	; 191
    41fc:	9e 4f       	sbci	r25, 0xFE	; 254
    41fe:	9e 01       	movw	r18, r28
    4200:	2f 5b       	subi	r18, 0xBF	; 191
    4202:	3e 4f       	sbci	r19, 0xFE	; 254
    4204:	f9 01       	movw	r30, r18
    4206:	20 81       	ld	r18, Z
    4208:	31 81       	ldd	r19, Z+1	; 0x01
    420a:	21 50       	subi	r18, 0x01	; 1
    420c:	31 09       	sbc	r19, r1
    420e:	fc 01       	movw	r30, r24
    4210:	31 83       	std	Z+1, r19	; 0x01
    4212:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4214:	ce 01       	movw	r24, r28
    4216:	8f 5b       	subi	r24, 0xBF	; 191
    4218:	9e 4f       	sbci	r25, 0xFE	; 254
    421a:	fc 01       	movw	r30, r24
    421c:	80 81       	ld	r24, Z
    421e:	91 81       	ldd	r25, Z+1	; 0x01
    4220:	89 2b       	or	r24, r25
    4222:	a1 f6       	brne	.-88     	; 0x41cc <__stack+0x30cd>
    4224:	2c c0       	rjmp	.+88     	; 0x427e <__stack+0x317f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4226:	8e 01       	movw	r16, r28
    4228:	0f 5b       	subi	r16, 0xBF	; 191
    422a:	1e 4f       	sbci	r17, 0xFE	; 254
    422c:	ce 01       	movw	r24, r28
    422e:	83 5c       	subi	r24, 0xC3	; 195
    4230:	9e 4f       	sbci	r25, 0xFE	; 254
    4232:	fc 01       	movw	r30, r24
    4234:	60 81       	ld	r22, Z
    4236:	71 81       	ldd	r23, Z+1	; 0x01
    4238:	82 81       	ldd	r24, Z+2	; 0x02
    423a:	93 81       	ldd	r25, Z+3	; 0x03
    423c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    4240:	dc 01       	movw	r26, r24
    4242:	cb 01       	movw	r24, r22
    4244:	f8 01       	movw	r30, r16
    4246:	91 83       	std	Z+1, r25	; 0x01
    4248:	80 83       	st	Z, r24
    424a:	ce 01       	movw	r24, r28
    424c:	8b 5b       	subi	r24, 0xBB	; 187
    424e:	9e 4f       	sbci	r25, 0xFE	; 254
    4250:	9e 01       	movw	r18, r28
    4252:	2f 5b       	subi	r18, 0xBF	; 191
    4254:	3e 4f       	sbci	r19, 0xFE	; 254
    4256:	f9 01       	movw	r30, r18
    4258:	20 81       	ld	r18, Z
    425a:	31 81       	ldd	r19, Z+1	; 0x01
    425c:	fc 01       	movw	r30, r24
    425e:	31 83       	std	Z+1, r19	; 0x01
    4260:	20 83       	st	Z, r18
    4262:	ce 01       	movw	r24, r28
    4264:	8b 5b       	subi	r24, 0xBB	; 187
    4266:	9e 4f       	sbci	r25, 0xFE	; 254
    4268:	fc 01       	movw	r30, r24
    426a:	80 81       	ld	r24, Z
    426c:	91 81       	ldd	r25, Z+1	; 0x01
    426e:	01 97       	sbiw	r24, 0x01	; 1
    4270:	f1 f7       	brne	.-4      	; 0x426e <__stack+0x316f>
    4272:	9e 01       	movw	r18, r28
    4274:	2b 5b       	subi	r18, 0xBB	; 187
    4276:	3e 4f       	sbci	r19, 0xFE	; 254
    4278:	f9 01       	movw	r30, r18
    427a:	91 83       	std	Z+1, r25	; 0x01
    427c:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F760 T50\n");
    427e:	8b e3       	ldi	r24, 0x3B	; 59
    4280:	92 e0       	ldi	r25, 0x02	; 2
    4282:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    4286:	9e 01       	movw	r18, r28
    4288:	23 56       	subi	r18, 0x63	; 99
    428a:	3f 4f       	sbci	r19, 0xFF	; 255
    428c:	80 e0       	ldi	r24, 0x00	; 0
    428e:	90 e0       	ldi	r25, 0x00	; 0
    4290:	af ea       	ldi	r26, 0xAF	; 175
    4292:	b3 e4       	ldi	r27, 0x43	; 67
    4294:	f9 01       	movw	r30, r18
    4296:	80 83       	st	Z, r24
    4298:	91 83       	std	Z+1, r25	; 0x01
    429a:	a2 83       	std	Z+2, r26	; 0x02
    429c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    429e:	8e 01       	movw	r16, r28
    42a0:	0d 5c       	subi	r16, 0xCD	; 205
    42a2:	1e 4f       	sbci	r17, 0xFE	; 254
    42a4:	ce 01       	movw	r24, r28
    42a6:	83 56       	subi	r24, 0x63	; 99
    42a8:	9f 4f       	sbci	r25, 0xFF	; 255
    42aa:	20 e0       	ldi	r18, 0x00	; 0
    42ac:	30 e0       	ldi	r19, 0x00	; 0
    42ae:	4a e7       	ldi	r20, 0x7A	; 122
    42b0:	55 e4       	ldi	r21, 0x45	; 69
    42b2:	fc 01       	movw	r30, r24
    42b4:	60 81       	ld	r22, Z
    42b6:	71 81       	ldd	r23, Z+1	; 0x01
    42b8:	82 81       	ldd	r24, Z+2	; 0x02
    42ba:	93 81       	ldd	r25, Z+3	; 0x03
    42bc:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    42c0:	dc 01       	movw	r26, r24
    42c2:	cb 01       	movw	r24, r22
    42c4:	f8 01       	movw	r30, r16
    42c6:	80 83       	st	Z, r24
    42c8:	91 83       	std	Z+1, r25	; 0x01
    42ca:	a2 83       	std	Z+2, r26	; 0x02
    42cc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    42ce:	ce 01       	movw	r24, r28
    42d0:	8d 5c       	subi	r24, 0xCD	; 205
    42d2:	9e 4f       	sbci	r25, 0xFE	; 254
    42d4:	20 e0       	ldi	r18, 0x00	; 0
    42d6:	30 e0       	ldi	r19, 0x00	; 0
    42d8:	40 e8       	ldi	r20, 0x80	; 128
    42da:	5f e3       	ldi	r21, 0x3F	; 63
    42dc:	fc 01       	movw	r30, r24
    42de:	60 81       	ld	r22, Z
    42e0:	71 81       	ldd	r23, Z+1	; 0x01
    42e2:	82 81       	ldd	r24, Z+2	; 0x02
    42e4:	93 81       	ldd	r25, Z+3	; 0x03
    42e6:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    42ea:	88 23       	and	r24, r24
    42ec:	4c f4       	brge	.+18     	; 0x4300 <__stack+0x3201>
		__ticks = 1;
    42ee:	ce 01       	movw	r24, r28
    42f0:	89 5c       	subi	r24, 0xC9	; 201
    42f2:	9e 4f       	sbci	r25, 0xFE	; 254
    42f4:	21 e0       	ldi	r18, 0x01	; 1
    42f6:	30 e0       	ldi	r19, 0x00	; 0
    42f8:	fc 01       	movw	r30, r24
    42fa:	31 83       	std	Z+1, r19	; 0x01
    42fc:	20 83       	st	Z, r18
    42fe:	6d c0       	rjmp	.+218    	; 0x43da <__stack+0x32db>
	else if (__tmp > 65535)
    4300:	ce 01       	movw	r24, r28
    4302:	8d 5c       	subi	r24, 0xCD	; 205
    4304:	9e 4f       	sbci	r25, 0xFE	; 254
    4306:	20 e0       	ldi	r18, 0x00	; 0
    4308:	3f ef       	ldi	r19, 0xFF	; 255
    430a:	4f e7       	ldi	r20, 0x7F	; 127
    430c:	57 e4       	ldi	r21, 0x47	; 71
    430e:	fc 01       	movw	r30, r24
    4310:	60 81       	ld	r22, Z
    4312:	71 81       	ldd	r23, Z+1	; 0x01
    4314:	82 81       	ldd	r24, Z+2	; 0x02
    4316:	93 81       	ldd	r25, Z+3	; 0x03
    4318:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    431c:	18 16       	cp	r1, r24
    431e:	0c f0       	brlt	.+2      	; 0x4322 <__stack+0x3223>
    4320:	4a c0       	rjmp	.+148    	; 0x43b6 <__stack+0x32b7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4322:	ce 01       	movw	r24, r28
    4324:	83 56       	subi	r24, 0x63	; 99
    4326:	9f 4f       	sbci	r25, 0xFF	; 255
    4328:	20 e0       	ldi	r18, 0x00	; 0
    432a:	30 e0       	ldi	r19, 0x00	; 0
    432c:	40 e2       	ldi	r20, 0x20	; 32
    432e:	51 e4       	ldi	r21, 0x41	; 65
    4330:	fc 01       	movw	r30, r24
    4332:	60 81       	ld	r22, Z
    4334:	71 81       	ldd	r23, Z+1	; 0x01
    4336:	82 81       	ldd	r24, Z+2	; 0x02
    4338:	93 81       	ldd	r25, Z+3	; 0x03
    433a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    433e:	dc 01       	movw	r26, r24
    4340:	cb 01       	movw	r24, r22
    4342:	8e 01       	movw	r16, r28
    4344:	09 5c       	subi	r16, 0xC9	; 201
    4346:	1e 4f       	sbci	r17, 0xFE	; 254
    4348:	bc 01       	movw	r22, r24
    434a:	cd 01       	movw	r24, r26
    434c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    4350:	dc 01       	movw	r26, r24
    4352:	cb 01       	movw	r24, r22
    4354:	f8 01       	movw	r30, r16
    4356:	91 83       	std	Z+1, r25	; 0x01
    4358:	80 83       	st	Z, r24
    435a:	24 c0       	rjmp	.+72     	; 0x43a4 <__stack+0x32a5>
    435c:	ce 01       	movw	r24, r28
    435e:	87 5c       	subi	r24, 0xC7	; 199
    4360:	9e 4f       	sbci	r25, 0xFE	; 254
    4362:	20 e9       	ldi	r18, 0x90	; 144
    4364:	31 e0       	ldi	r19, 0x01	; 1
    4366:	fc 01       	movw	r30, r24
    4368:	31 83       	std	Z+1, r19	; 0x01
    436a:	20 83       	st	Z, r18
    436c:	ce 01       	movw	r24, r28
    436e:	87 5c       	subi	r24, 0xC7	; 199
    4370:	9e 4f       	sbci	r25, 0xFE	; 254
    4372:	fc 01       	movw	r30, r24
    4374:	80 81       	ld	r24, Z
    4376:	91 81       	ldd	r25, Z+1	; 0x01
    4378:	01 97       	sbiw	r24, 0x01	; 1
    437a:	f1 f7       	brne	.-4      	; 0x4378 <__stack+0x3279>
    437c:	9e 01       	movw	r18, r28
    437e:	27 5c       	subi	r18, 0xC7	; 199
    4380:	3e 4f       	sbci	r19, 0xFE	; 254
    4382:	f9 01       	movw	r30, r18
    4384:	91 83       	std	Z+1, r25	; 0x01
    4386:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4388:	ce 01       	movw	r24, r28
    438a:	89 5c       	subi	r24, 0xC9	; 201
    438c:	9e 4f       	sbci	r25, 0xFE	; 254
    438e:	9e 01       	movw	r18, r28
    4390:	29 5c       	subi	r18, 0xC9	; 201
    4392:	3e 4f       	sbci	r19, 0xFE	; 254
    4394:	f9 01       	movw	r30, r18
    4396:	20 81       	ld	r18, Z
    4398:	31 81       	ldd	r19, Z+1	; 0x01
    439a:	21 50       	subi	r18, 0x01	; 1
    439c:	31 09       	sbc	r19, r1
    439e:	fc 01       	movw	r30, r24
    43a0:	31 83       	std	Z+1, r19	; 0x01
    43a2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    43a4:	ce 01       	movw	r24, r28
    43a6:	89 5c       	subi	r24, 0xC9	; 201
    43a8:	9e 4f       	sbci	r25, 0xFE	; 254
    43aa:	fc 01       	movw	r30, r24
    43ac:	80 81       	ld	r24, Z
    43ae:	91 81       	ldd	r25, Z+1	; 0x01
    43b0:	89 2b       	or	r24, r25
    43b2:	a1 f6       	brne	.-88     	; 0x435c <__stack+0x325d>
    43b4:	2c c0       	rjmp	.+88     	; 0x440e <__stack+0x330f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    43b6:	8e 01       	movw	r16, r28
    43b8:	09 5c       	subi	r16, 0xC9	; 201
    43ba:	1e 4f       	sbci	r17, 0xFE	; 254
    43bc:	ce 01       	movw	r24, r28
    43be:	8d 5c       	subi	r24, 0xCD	; 205
    43c0:	9e 4f       	sbci	r25, 0xFE	; 254
    43c2:	fc 01       	movw	r30, r24
    43c4:	60 81       	ld	r22, Z
    43c6:	71 81       	ldd	r23, Z+1	; 0x01
    43c8:	82 81       	ldd	r24, Z+2	; 0x02
    43ca:	93 81       	ldd	r25, Z+3	; 0x03
    43cc:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    43d0:	dc 01       	movw	r26, r24
    43d2:	cb 01       	movw	r24, r22
    43d4:	f8 01       	movw	r30, r16
    43d6:	91 83       	std	Z+1, r25	; 0x01
    43d8:	80 83       	st	Z, r24
    43da:	ce 01       	movw	r24, r28
    43dc:	85 5c       	subi	r24, 0xC5	; 197
    43de:	9e 4f       	sbci	r25, 0xFE	; 254
    43e0:	9e 01       	movw	r18, r28
    43e2:	29 5c       	subi	r18, 0xC9	; 201
    43e4:	3e 4f       	sbci	r19, 0xFE	; 254
    43e6:	f9 01       	movw	r30, r18
    43e8:	20 81       	ld	r18, Z
    43ea:	31 81       	ldd	r19, Z+1	; 0x01
    43ec:	fc 01       	movw	r30, r24
    43ee:	31 83       	std	Z+1, r19	; 0x01
    43f0:	20 83       	st	Z, r18
    43f2:	ce 01       	movw	r24, r28
    43f4:	85 5c       	subi	r24, 0xC5	; 197
    43f6:	9e 4f       	sbci	r25, 0xFE	; 254
    43f8:	fc 01       	movw	r30, r24
    43fa:	80 81       	ld	r24, Z
    43fc:	91 81       	ldd	r25, Z+1	; 0x01
    43fe:	01 97       	sbiw	r24, 0x01	; 1
    4400:	f1 f7       	brne	.-4      	; 0x43fe <__stack+0x32ff>
    4402:	9e 01       	movw	r18, r28
    4404:	25 5c       	subi	r18, 0xC5	; 197
    4406:	3e 4f       	sbci	r19, 0xFE	; 254
    4408:	f9 01       	movw	r30, r18
    440a:	91 83       	std	Z+1, r25	; 0x01
    440c:	80 83       	st	Z, r24
			_delay_ms(350);
			to_uARM("M2210 F660 T80\n");
    440e:	8b e2       	ldi	r24, 0x2B	; 43
    4410:	92 e0       	ldi	r25, 0x02	; 2
    4412:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    4416:	9e 01       	movw	r18, r28
    4418:	2f 55       	subi	r18, 0x5F	; 95
    441a:	3f 4f       	sbci	r19, 0xFF	; 255
    441c:	80 e0       	ldi	r24, 0x00	; 0
    441e:	90 e0       	ldi	r25, 0x00	; 0
    4420:	a6 e9       	ldi	r26, 0x96	; 150
    4422:	b3 e4       	ldi	r27, 0x43	; 67
    4424:	f9 01       	movw	r30, r18
    4426:	80 83       	st	Z, r24
    4428:	91 83       	std	Z+1, r25	; 0x01
    442a:	a2 83       	std	Z+2, r26	; 0x02
    442c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    442e:	8e 01       	movw	r16, r28
    4430:	07 5d       	subi	r16, 0xD7	; 215
    4432:	1e 4f       	sbci	r17, 0xFE	; 254
    4434:	ce 01       	movw	r24, r28
    4436:	8f 55       	subi	r24, 0x5F	; 95
    4438:	9f 4f       	sbci	r25, 0xFF	; 255
    443a:	20 e0       	ldi	r18, 0x00	; 0
    443c:	30 e0       	ldi	r19, 0x00	; 0
    443e:	4a e7       	ldi	r20, 0x7A	; 122
    4440:	55 e4       	ldi	r21, 0x45	; 69
    4442:	fc 01       	movw	r30, r24
    4444:	60 81       	ld	r22, Z
    4446:	71 81       	ldd	r23, Z+1	; 0x01
    4448:	82 81       	ldd	r24, Z+2	; 0x02
    444a:	93 81       	ldd	r25, Z+3	; 0x03
    444c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    4450:	dc 01       	movw	r26, r24
    4452:	cb 01       	movw	r24, r22
    4454:	f8 01       	movw	r30, r16
    4456:	80 83       	st	Z, r24
    4458:	91 83       	std	Z+1, r25	; 0x01
    445a:	a2 83       	std	Z+2, r26	; 0x02
    445c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    445e:	ce 01       	movw	r24, r28
    4460:	87 5d       	subi	r24, 0xD7	; 215
    4462:	9e 4f       	sbci	r25, 0xFE	; 254
    4464:	20 e0       	ldi	r18, 0x00	; 0
    4466:	30 e0       	ldi	r19, 0x00	; 0
    4468:	40 e8       	ldi	r20, 0x80	; 128
    446a:	5f e3       	ldi	r21, 0x3F	; 63
    446c:	fc 01       	movw	r30, r24
    446e:	60 81       	ld	r22, Z
    4470:	71 81       	ldd	r23, Z+1	; 0x01
    4472:	82 81       	ldd	r24, Z+2	; 0x02
    4474:	93 81       	ldd	r25, Z+3	; 0x03
    4476:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    447a:	88 23       	and	r24, r24
    447c:	4c f4       	brge	.+18     	; 0x4490 <__stack+0x3391>
		__ticks = 1;
    447e:	ce 01       	movw	r24, r28
    4480:	83 5d       	subi	r24, 0xD3	; 211
    4482:	9e 4f       	sbci	r25, 0xFE	; 254
    4484:	21 e0       	ldi	r18, 0x01	; 1
    4486:	30 e0       	ldi	r19, 0x00	; 0
    4488:	fc 01       	movw	r30, r24
    448a:	31 83       	std	Z+1, r19	; 0x01
    448c:	20 83       	st	Z, r18
    448e:	6d c0       	rjmp	.+218    	; 0x456a <__stack+0x346b>
	else if (__tmp > 65535)
    4490:	ce 01       	movw	r24, r28
    4492:	87 5d       	subi	r24, 0xD7	; 215
    4494:	9e 4f       	sbci	r25, 0xFE	; 254
    4496:	20 e0       	ldi	r18, 0x00	; 0
    4498:	3f ef       	ldi	r19, 0xFF	; 255
    449a:	4f e7       	ldi	r20, 0x7F	; 127
    449c:	57 e4       	ldi	r21, 0x47	; 71
    449e:	fc 01       	movw	r30, r24
    44a0:	60 81       	ld	r22, Z
    44a2:	71 81       	ldd	r23, Z+1	; 0x01
    44a4:	82 81       	ldd	r24, Z+2	; 0x02
    44a6:	93 81       	ldd	r25, Z+3	; 0x03
    44a8:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    44ac:	18 16       	cp	r1, r24
    44ae:	0c f0       	brlt	.+2      	; 0x44b2 <__stack+0x33b3>
    44b0:	4a c0       	rjmp	.+148    	; 0x4546 <__stack+0x3447>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    44b2:	ce 01       	movw	r24, r28
    44b4:	8f 55       	subi	r24, 0x5F	; 95
    44b6:	9f 4f       	sbci	r25, 0xFF	; 255
    44b8:	20 e0       	ldi	r18, 0x00	; 0
    44ba:	30 e0       	ldi	r19, 0x00	; 0
    44bc:	40 e2       	ldi	r20, 0x20	; 32
    44be:	51 e4       	ldi	r21, 0x41	; 65
    44c0:	fc 01       	movw	r30, r24
    44c2:	60 81       	ld	r22, Z
    44c4:	71 81       	ldd	r23, Z+1	; 0x01
    44c6:	82 81       	ldd	r24, Z+2	; 0x02
    44c8:	93 81       	ldd	r25, Z+3	; 0x03
    44ca:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    44ce:	dc 01       	movw	r26, r24
    44d0:	cb 01       	movw	r24, r22
    44d2:	8e 01       	movw	r16, r28
    44d4:	03 5d       	subi	r16, 0xD3	; 211
    44d6:	1e 4f       	sbci	r17, 0xFE	; 254
    44d8:	bc 01       	movw	r22, r24
    44da:	cd 01       	movw	r24, r26
    44dc:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    44e0:	dc 01       	movw	r26, r24
    44e2:	cb 01       	movw	r24, r22
    44e4:	f8 01       	movw	r30, r16
    44e6:	91 83       	std	Z+1, r25	; 0x01
    44e8:	80 83       	st	Z, r24
    44ea:	24 c0       	rjmp	.+72     	; 0x4534 <__stack+0x3435>
    44ec:	ce 01       	movw	r24, r28
    44ee:	81 5d       	subi	r24, 0xD1	; 209
    44f0:	9e 4f       	sbci	r25, 0xFE	; 254
    44f2:	20 e9       	ldi	r18, 0x90	; 144
    44f4:	31 e0       	ldi	r19, 0x01	; 1
    44f6:	fc 01       	movw	r30, r24
    44f8:	31 83       	std	Z+1, r19	; 0x01
    44fa:	20 83       	st	Z, r18
    44fc:	ce 01       	movw	r24, r28
    44fe:	81 5d       	subi	r24, 0xD1	; 209
    4500:	9e 4f       	sbci	r25, 0xFE	; 254
    4502:	fc 01       	movw	r30, r24
    4504:	80 81       	ld	r24, Z
    4506:	91 81       	ldd	r25, Z+1	; 0x01
    4508:	01 97       	sbiw	r24, 0x01	; 1
    450a:	f1 f7       	brne	.-4      	; 0x4508 <__stack+0x3409>
    450c:	9e 01       	movw	r18, r28
    450e:	21 5d       	subi	r18, 0xD1	; 209
    4510:	3e 4f       	sbci	r19, 0xFE	; 254
    4512:	f9 01       	movw	r30, r18
    4514:	91 83       	std	Z+1, r25	; 0x01
    4516:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4518:	ce 01       	movw	r24, r28
    451a:	83 5d       	subi	r24, 0xD3	; 211
    451c:	9e 4f       	sbci	r25, 0xFE	; 254
    451e:	9e 01       	movw	r18, r28
    4520:	23 5d       	subi	r18, 0xD3	; 211
    4522:	3e 4f       	sbci	r19, 0xFE	; 254
    4524:	f9 01       	movw	r30, r18
    4526:	20 81       	ld	r18, Z
    4528:	31 81       	ldd	r19, Z+1	; 0x01
    452a:	21 50       	subi	r18, 0x01	; 1
    452c:	31 09       	sbc	r19, r1
    452e:	fc 01       	movw	r30, r24
    4530:	31 83       	std	Z+1, r19	; 0x01
    4532:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4534:	ce 01       	movw	r24, r28
    4536:	83 5d       	subi	r24, 0xD3	; 211
    4538:	9e 4f       	sbci	r25, 0xFE	; 254
    453a:	fc 01       	movw	r30, r24
    453c:	80 81       	ld	r24, Z
    453e:	91 81       	ldd	r25, Z+1	; 0x01
    4540:	89 2b       	or	r24, r25
    4542:	a1 f6       	brne	.-88     	; 0x44ec <__stack+0x33ed>
    4544:	2c c0       	rjmp	.+88     	; 0x459e <__stack+0x349f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4546:	8e 01       	movw	r16, r28
    4548:	03 5d       	subi	r16, 0xD3	; 211
    454a:	1e 4f       	sbci	r17, 0xFE	; 254
    454c:	ce 01       	movw	r24, r28
    454e:	87 5d       	subi	r24, 0xD7	; 215
    4550:	9e 4f       	sbci	r25, 0xFE	; 254
    4552:	fc 01       	movw	r30, r24
    4554:	60 81       	ld	r22, Z
    4556:	71 81       	ldd	r23, Z+1	; 0x01
    4558:	82 81       	ldd	r24, Z+2	; 0x02
    455a:	93 81       	ldd	r25, Z+3	; 0x03
    455c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    4560:	dc 01       	movw	r26, r24
    4562:	cb 01       	movw	r24, r22
    4564:	f8 01       	movw	r30, r16
    4566:	91 83       	std	Z+1, r25	; 0x01
    4568:	80 83       	st	Z, r24
    456a:	ce 01       	movw	r24, r28
    456c:	8f 5c       	subi	r24, 0xCF	; 207
    456e:	9e 4f       	sbci	r25, 0xFE	; 254
    4570:	9e 01       	movw	r18, r28
    4572:	23 5d       	subi	r18, 0xD3	; 211
    4574:	3e 4f       	sbci	r19, 0xFE	; 254
    4576:	f9 01       	movw	r30, r18
    4578:	20 81       	ld	r18, Z
    457a:	31 81       	ldd	r19, Z+1	; 0x01
    457c:	fc 01       	movw	r30, r24
    457e:	31 83       	std	Z+1, r19	; 0x01
    4580:	20 83       	st	Z, r18
    4582:	ce 01       	movw	r24, r28
    4584:	8f 5c       	subi	r24, 0xCF	; 207
    4586:	9e 4f       	sbci	r25, 0xFE	; 254
    4588:	fc 01       	movw	r30, r24
    458a:	80 81       	ld	r24, Z
    458c:	91 81       	ldd	r25, Z+1	; 0x01
    458e:	01 97       	sbiw	r24, 0x01	; 1
    4590:	f1 f7       	brne	.-4      	; 0x458e <__stack+0x348f>
    4592:	9e 01       	movw	r18, r28
    4594:	2f 5c       	subi	r18, 0xCF	; 207
    4596:	3e 4f       	sbci	r19, 0xFE	; 254
    4598:	f9 01       	movw	r30, r18
    459a:	91 83       	std	Z+1, r25	; 0x01
    459c:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F520 T80\n");
    459e:	8c e6       	ldi	r24, 0x6C	; 108
    45a0:	92 e0       	ldi	r25, 0x02	; 2
    45a2:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    45a6:	9e 01       	movw	r18, r28
    45a8:	2b 55       	subi	r18, 0x5B	; 91
    45aa:	3f 4f       	sbci	r19, 0xFF	; 255
    45ac:	80 e0       	ldi	r24, 0x00	; 0
    45ae:	90 e0       	ldi	r25, 0x00	; 0
    45b0:	a6 e1       	ldi	r26, 0x16	; 22
    45b2:	b3 e4       	ldi	r27, 0x43	; 67
    45b4:	f9 01       	movw	r30, r18
    45b6:	80 83       	st	Z, r24
    45b8:	91 83       	std	Z+1, r25	; 0x01
    45ba:	a2 83       	std	Z+2, r26	; 0x02
    45bc:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    45be:	8e 01       	movw	r16, r28
    45c0:	01 5e       	subi	r16, 0xE1	; 225
    45c2:	1e 4f       	sbci	r17, 0xFE	; 254
    45c4:	ce 01       	movw	r24, r28
    45c6:	8b 55       	subi	r24, 0x5B	; 91
    45c8:	9f 4f       	sbci	r25, 0xFF	; 255
    45ca:	20 e0       	ldi	r18, 0x00	; 0
    45cc:	30 e0       	ldi	r19, 0x00	; 0
    45ce:	4a e7       	ldi	r20, 0x7A	; 122
    45d0:	55 e4       	ldi	r21, 0x45	; 69
    45d2:	fc 01       	movw	r30, r24
    45d4:	60 81       	ld	r22, Z
    45d6:	71 81       	ldd	r23, Z+1	; 0x01
    45d8:	82 81       	ldd	r24, Z+2	; 0x02
    45da:	93 81       	ldd	r25, Z+3	; 0x03
    45dc:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    45e0:	dc 01       	movw	r26, r24
    45e2:	cb 01       	movw	r24, r22
    45e4:	f8 01       	movw	r30, r16
    45e6:	80 83       	st	Z, r24
    45e8:	91 83       	std	Z+1, r25	; 0x01
    45ea:	a2 83       	std	Z+2, r26	; 0x02
    45ec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    45ee:	ce 01       	movw	r24, r28
    45f0:	81 5e       	subi	r24, 0xE1	; 225
    45f2:	9e 4f       	sbci	r25, 0xFE	; 254
    45f4:	20 e0       	ldi	r18, 0x00	; 0
    45f6:	30 e0       	ldi	r19, 0x00	; 0
    45f8:	40 e8       	ldi	r20, 0x80	; 128
    45fa:	5f e3       	ldi	r21, 0x3F	; 63
    45fc:	fc 01       	movw	r30, r24
    45fe:	60 81       	ld	r22, Z
    4600:	71 81       	ldd	r23, Z+1	; 0x01
    4602:	82 81       	ldd	r24, Z+2	; 0x02
    4604:	93 81       	ldd	r25, Z+3	; 0x03
    4606:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    460a:	88 23       	and	r24, r24
    460c:	4c f4       	brge	.+18     	; 0x4620 <__stack+0x3521>
		__ticks = 1;
    460e:	ce 01       	movw	r24, r28
    4610:	8d 5d       	subi	r24, 0xDD	; 221
    4612:	9e 4f       	sbci	r25, 0xFE	; 254
    4614:	21 e0       	ldi	r18, 0x01	; 1
    4616:	30 e0       	ldi	r19, 0x00	; 0
    4618:	fc 01       	movw	r30, r24
    461a:	31 83       	std	Z+1, r19	; 0x01
    461c:	20 83       	st	Z, r18
    461e:	6d c0       	rjmp	.+218    	; 0x46fa <__stack+0x35fb>
	else if (__tmp > 65535)
    4620:	ce 01       	movw	r24, r28
    4622:	81 5e       	subi	r24, 0xE1	; 225
    4624:	9e 4f       	sbci	r25, 0xFE	; 254
    4626:	20 e0       	ldi	r18, 0x00	; 0
    4628:	3f ef       	ldi	r19, 0xFF	; 255
    462a:	4f e7       	ldi	r20, 0x7F	; 127
    462c:	57 e4       	ldi	r21, 0x47	; 71
    462e:	fc 01       	movw	r30, r24
    4630:	60 81       	ld	r22, Z
    4632:	71 81       	ldd	r23, Z+1	; 0x01
    4634:	82 81       	ldd	r24, Z+2	; 0x02
    4636:	93 81       	ldd	r25, Z+3	; 0x03
    4638:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    463c:	18 16       	cp	r1, r24
    463e:	0c f0       	brlt	.+2      	; 0x4642 <__stack+0x3543>
    4640:	4a c0       	rjmp	.+148    	; 0x46d6 <__stack+0x35d7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4642:	ce 01       	movw	r24, r28
    4644:	8b 55       	subi	r24, 0x5B	; 91
    4646:	9f 4f       	sbci	r25, 0xFF	; 255
    4648:	20 e0       	ldi	r18, 0x00	; 0
    464a:	30 e0       	ldi	r19, 0x00	; 0
    464c:	40 e2       	ldi	r20, 0x20	; 32
    464e:	51 e4       	ldi	r21, 0x41	; 65
    4650:	fc 01       	movw	r30, r24
    4652:	60 81       	ld	r22, Z
    4654:	71 81       	ldd	r23, Z+1	; 0x01
    4656:	82 81       	ldd	r24, Z+2	; 0x02
    4658:	93 81       	ldd	r25, Z+3	; 0x03
    465a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    465e:	dc 01       	movw	r26, r24
    4660:	cb 01       	movw	r24, r22
    4662:	8e 01       	movw	r16, r28
    4664:	0d 5d       	subi	r16, 0xDD	; 221
    4666:	1e 4f       	sbci	r17, 0xFE	; 254
    4668:	bc 01       	movw	r22, r24
    466a:	cd 01       	movw	r24, r26
    466c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    4670:	dc 01       	movw	r26, r24
    4672:	cb 01       	movw	r24, r22
    4674:	f8 01       	movw	r30, r16
    4676:	91 83       	std	Z+1, r25	; 0x01
    4678:	80 83       	st	Z, r24
    467a:	24 c0       	rjmp	.+72     	; 0x46c4 <__stack+0x35c5>
    467c:	ce 01       	movw	r24, r28
    467e:	8b 5d       	subi	r24, 0xDB	; 219
    4680:	9e 4f       	sbci	r25, 0xFE	; 254
    4682:	20 e9       	ldi	r18, 0x90	; 144
    4684:	31 e0       	ldi	r19, 0x01	; 1
    4686:	fc 01       	movw	r30, r24
    4688:	31 83       	std	Z+1, r19	; 0x01
    468a:	20 83       	st	Z, r18
    468c:	ce 01       	movw	r24, r28
    468e:	8b 5d       	subi	r24, 0xDB	; 219
    4690:	9e 4f       	sbci	r25, 0xFE	; 254
    4692:	fc 01       	movw	r30, r24
    4694:	80 81       	ld	r24, Z
    4696:	91 81       	ldd	r25, Z+1	; 0x01
    4698:	01 97       	sbiw	r24, 0x01	; 1
    469a:	f1 f7       	brne	.-4      	; 0x4698 <__stack+0x3599>
    469c:	9e 01       	movw	r18, r28
    469e:	2b 5d       	subi	r18, 0xDB	; 219
    46a0:	3e 4f       	sbci	r19, 0xFE	; 254
    46a2:	f9 01       	movw	r30, r18
    46a4:	91 83       	std	Z+1, r25	; 0x01
    46a6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    46a8:	ce 01       	movw	r24, r28
    46aa:	8d 5d       	subi	r24, 0xDD	; 221
    46ac:	9e 4f       	sbci	r25, 0xFE	; 254
    46ae:	9e 01       	movw	r18, r28
    46b0:	2d 5d       	subi	r18, 0xDD	; 221
    46b2:	3e 4f       	sbci	r19, 0xFE	; 254
    46b4:	f9 01       	movw	r30, r18
    46b6:	20 81       	ld	r18, Z
    46b8:	31 81       	ldd	r19, Z+1	; 0x01
    46ba:	21 50       	subi	r18, 0x01	; 1
    46bc:	31 09       	sbc	r19, r1
    46be:	fc 01       	movw	r30, r24
    46c0:	31 83       	std	Z+1, r19	; 0x01
    46c2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    46c4:	ce 01       	movw	r24, r28
    46c6:	8d 5d       	subi	r24, 0xDD	; 221
    46c8:	9e 4f       	sbci	r25, 0xFE	; 254
    46ca:	fc 01       	movw	r30, r24
    46cc:	80 81       	ld	r24, Z
    46ce:	91 81       	ldd	r25, Z+1	; 0x01
    46d0:	89 2b       	or	r24, r25
    46d2:	a1 f6       	brne	.-88     	; 0x467c <__stack+0x357d>
    46d4:	2c c0       	rjmp	.+88     	; 0x472e <__stack+0x362f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    46d6:	8e 01       	movw	r16, r28
    46d8:	0d 5d       	subi	r16, 0xDD	; 221
    46da:	1e 4f       	sbci	r17, 0xFE	; 254
    46dc:	ce 01       	movw	r24, r28
    46de:	81 5e       	subi	r24, 0xE1	; 225
    46e0:	9e 4f       	sbci	r25, 0xFE	; 254
    46e2:	fc 01       	movw	r30, r24
    46e4:	60 81       	ld	r22, Z
    46e6:	71 81       	ldd	r23, Z+1	; 0x01
    46e8:	82 81       	ldd	r24, Z+2	; 0x02
    46ea:	93 81       	ldd	r25, Z+3	; 0x03
    46ec:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    46f0:	dc 01       	movw	r26, r24
    46f2:	cb 01       	movw	r24, r22
    46f4:	f8 01       	movw	r30, r16
    46f6:	91 83       	std	Z+1, r25	; 0x01
    46f8:	80 83       	st	Z, r24
    46fa:	ce 01       	movw	r24, r28
    46fc:	89 5d       	subi	r24, 0xD9	; 217
    46fe:	9e 4f       	sbci	r25, 0xFE	; 254
    4700:	9e 01       	movw	r18, r28
    4702:	2d 5d       	subi	r18, 0xDD	; 221
    4704:	3e 4f       	sbci	r19, 0xFE	; 254
    4706:	f9 01       	movw	r30, r18
    4708:	20 81       	ld	r18, Z
    470a:	31 81       	ldd	r19, Z+1	; 0x01
    470c:	fc 01       	movw	r30, r24
    470e:	31 83       	std	Z+1, r19	; 0x01
    4710:	20 83       	st	Z, r18
    4712:	ce 01       	movw	r24, r28
    4714:	89 5d       	subi	r24, 0xD9	; 217
    4716:	9e 4f       	sbci	r25, 0xFE	; 254
    4718:	fc 01       	movw	r30, r24
    471a:	80 81       	ld	r24, Z
    471c:	91 81       	ldd	r25, Z+1	; 0x01
    471e:	01 97       	sbiw	r24, 0x01	; 1
    4720:	f1 f7       	brne	.-4      	; 0x471e <__stack+0x361f>
    4722:	9e 01       	movw	r18, r28
    4724:	29 5d       	subi	r18, 0xD9	; 217
    4726:	3e 4f       	sbci	r19, 0xFE	; 254
    4728:	f9 01       	movw	r30, r18
    472a:	91 83       	std	Z+1, r25	; 0x01
    472c:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F580 T80\n");
    472e:	8c e7       	ldi	r24, 0x7C	; 124
    4730:	92 e0       	ldi	r25, 0x02	; 2
    4732:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    4736:	9e 01       	movw	r18, r28
    4738:	27 55       	subi	r18, 0x57	; 87
    473a:	3f 4f       	sbci	r19, 0xFF	; 255
    473c:	80 e0       	ldi	r24, 0x00	; 0
    473e:	90 e0       	ldi	r25, 0x00	; 0
    4740:	a6 e1       	ldi	r26, 0x16	; 22
    4742:	b3 e4       	ldi	r27, 0x43	; 67
    4744:	f9 01       	movw	r30, r18
    4746:	80 83       	st	Z, r24
    4748:	91 83       	std	Z+1, r25	; 0x01
    474a:	a2 83       	std	Z+2, r26	; 0x02
    474c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    474e:	8e 01       	movw	r16, r28
    4750:	0b 5e       	subi	r16, 0xEB	; 235
    4752:	1e 4f       	sbci	r17, 0xFE	; 254
    4754:	ce 01       	movw	r24, r28
    4756:	87 55       	subi	r24, 0x57	; 87
    4758:	9f 4f       	sbci	r25, 0xFF	; 255
    475a:	20 e0       	ldi	r18, 0x00	; 0
    475c:	30 e0       	ldi	r19, 0x00	; 0
    475e:	4a e7       	ldi	r20, 0x7A	; 122
    4760:	55 e4       	ldi	r21, 0x45	; 69
    4762:	fc 01       	movw	r30, r24
    4764:	60 81       	ld	r22, Z
    4766:	71 81       	ldd	r23, Z+1	; 0x01
    4768:	82 81       	ldd	r24, Z+2	; 0x02
    476a:	93 81       	ldd	r25, Z+3	; 0x03
    476c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    4770:	dc 01       	movw	r26, r24
    4772:	cb 01       	movw	r24, r22
    4774:	f8 01       	movw	r30, r16
    4776:	80 83       	st	Z, r24
    4778:	91 83       	std	Z+1, r25	; 0x01
    477a:	a2 83       	std	Z+2, r26	; 0x02
    477c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    477e:	ce 01       	movw	r24, r28
    4780:	8b 5e       	subi	r24, 0xEB	; 235
    4782:	9e 4f       	sbci	r25, 0xFE	; 254
    4784:	20 e0       	ldi	r18, 0x00	; 0
    4786:	30 e0       	ldi	r19, 0x00	; 0
    4788:	40 e8       	ldi	r20, 0x80	; 128
    478a:	5f e3       	ldi	r21, 0x3F	; 63
    478c:	fc 01       	movw	r30, r24
    478e:	60 81       	ld	r22, Z
    4790:	71 81       	ldd	r23, Z+1	; 0x01
    4792:	82 81       	ldd	r24, Z+2	; 0x02
    4794:	93 81       	ldd	r25, Z+3	; 0x03
    4796:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    479a:	88 23       	and	r24, r24
    479c:	4c f4       	brge	.+18     	; 0x47b0 <__stack+0x36b1>
		__ticks = 1;
    479e:	ce 01       	movw	r24, r28
    47a0:	87 5e       	subi	r24, 0xE7	; 231
    47a2:	9e 4f       	sbci	r25, 0xFE	; 254
    47a4:	21 e0       	ldi	r18, 0x01	; 1
    47a6:	30 e0       	ldi	r19, 0x00	; 0
    47a8:	fc 01       	movw	r30, r24
    47aa:	31 83       	std	Z+1, r19	; 0x01
    47ac:	20 83       	st	Z, r18
    47ae:	6d c0       	rjmp	.+218    	; 0x488a <__stack+0x378b>
	else if (__tmp > 65535)
    47b0:	ce 01       	movw	r24, r28
    47b2:	8b 5e       	subi	r24, 0xEB	; 235
    47b4:	9e 4f       	sbci	r25, 0xFE	; 254
    47b6:	20 e0       	ldi	r18, 0x00	; 0
    47b8:	3f ef       	ldi	r19, 0xFF	; 255
    47ba:	4f e7       	ldi	r20, 0x7F	; 127
    47bc:	57 e4       	ldi	r21, 0x47	; 71
    47be:	fc 01       	movw	r30, r24
    47c0:	60 81       	ld	r22, Z
    47c2:	71 81       	ldd	r23, Z+1	; 0x01
    47c4:	82 81       	ldd	r24, Z+2	; 0x02
    47c6:	93 81       	ldd	r25, Z+3	; 0x03
    47c8:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    47cc:	18 16       	cp	r1, r24
    47ce:	0c f0       	brlt	.+2      	; 0x47d2 <__stack+0x36d3>
    47d0:	4a c0       	rjmp	.+148    	; 0x4866 <__stack+0x3767>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    47d2:	ce 01       	movw	r24, r28
    47d4:	87 55       	subi	r24, 0x57	; 87
    47d6:	9f 4f       	sbci	r25, 0xFF	; 255
    47d8:	20 e0       	ldi	r18, 0x00	; 0
    47da:	30 e0       	ldi	r19, 0x00	; 0
    47dc:	40 e2       	ldi	r20, 0x20	; 32
    47de:	51 e4       	ldi	r21, 0x41	; 65
    47e0:	fc 01       	movw	r30, r24
    47e2:	60 81       	ld	r22, Z
    47e4:	71 81       	ldd	r23, Z+1	; 0x01
    47e6:	82 81       	ldd	r24, Z+2	; 0x02
    47e8:	93 81       	ldd	r25, Z+3	; 0x03
    47ea:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    47ee:	dc 01       	movw	r26, r24
    47f0:	cb 01       	movw	r24, r22
    47f2:	8e 01       	movw	r16, r28
    47f4:	07 5e       	subi	r16, 0xE7	; 231
    47f6:	1e 4f       	sbci	r17, 0xFE	; 254
    47f8:	bc 01       	movw	r22, r24
    47fa:	cd 01       	movw	r24, r26
    47fc:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    4800:	dc 01       	movw	r26, r24
    4802:	cb 01       	movw	r24, r22
    4804:	f8 01       	movw	r30, r16
    4806:	91 83       	std	Z+1, r25	; 0x01
    4808:	80 83       	st	Z, r24
    480a:	24 c0       	rjmp	.+72     	; 0x4854 <__stack+0x3755>
    480c:	ce 01       	movw	r24, r28
    480e:	85 5e       	subi	r24, 0xE5	; 229
    4810:	9e 4f       	sbci	r25, 0xFE	; 254
    4812:	20 e9       	ldi	r18, 0x90	; 144
    4814:	31 e0       	ldi	r19, 0x01	; 1
    4816:	fc 01       	movw	r30, r24
    4818:	31 83       	std	Z+1, r19	; 0x01
    481a:	20 83       	st	Z, r18
    481c:	ce 01       	movw	r24, r28
    481e:	85 5e       	subi	r24, 0xE5	; 229
    4820:	9e 4f       	sbci	r25, 0xFE	; 254
    4822:	fc 01       	movw	r30, r24
    4824:	80 81       	ld	r24, Z
    4826:	91 81       	ldd	r25, Z+1	; 0x01
    4828:	01 97       	sbiw	r24, 0x01	; 1
    482a:	f1 f7       	brne	.-4      	; 0x4828 <__stack+0x3729>
    482c:	9e 01       	movw	r18, r28
    482e:	25 5e       	subi	r18, 0xE5	; 229
    4830:	3e 4f       	sbci	r19, 0xFE	; 254
    4832:	f9 01       	movw	r30, r18
    4834:	91 83       	std	Z+1, r25	; 0x01
    4836:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4838:	ce 01       	movw	r24, r28
    483a:	87 5e       	subi	r24, 0xE7	; 231
    483c:	9e 4f       	sbci	r25, 0xFE	; 254
    483e:	9e 01       	movw	r18, r28
    4840:	27 5e       	subi	r18, 0xE7	; 231
    4842:	3e 4f       	sbci	r19, 0xFE	; 254
    4844:	f9 01       	movw	r30, r18
    4846:	20 81       	ld	r18, Z
    4848:	31 81       	ldd	r19, Z+1	; 0x01
    484a:	21 50       	subi	r18, 0x01	; 1
    484c:	31 09       	sbc	r19, r1
    484e:	fc 01       	movw	r30, r24
    4850:	31 83       	std	Z+1, r19	; 0x01
    4852:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4854:	ce 01       	movw	r24, r28
    4856:	87 5e       	subi	r24, 0xE7	; 231
    4858:	9e 4f       	sbci	r25, 0xFE	; 254
    485a:	fc 01       	movw	r30, r24
    485c:	80 81       	ld	r24, Z
    485e:	91 81       	ldd	r25, Z+1	; 0x01
    4860:	89 2b       	or	r24, r25
    4862:	a1 f6       	brne	.-88     	; 0x480c <__stack+0x370d>
    4864:	2c c0       	rjmp	.+88     	; 0x48be <__stack+0x37bf>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4866:	8e 01       	movw	r16, r28
    4868:	07 5e       	subi	r16, 0xE7	; 231
    486a:	1e 4f       	sbci	r17, 0xFE	; 254
    486c:	ce 01       	movw	r24, r28
    486e:	8b 5e       	subi	r24, 0xEB	; 235
    4870:	9e 4f       	sbci	r25, 0xFE	; 254
    4872:	fc 01       	movw	r30, r24
    4874:	60 81       	ld	r22, Z
    4876:	71 81       	ldd	r23, Z+1	; 0x01
    4878:	82 81       	ldd	r24, Z+2	; 0x02
    487a:	93 81       	ldd	r25, Z+3	; 0x03
    487c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    4880:	dc 01       	movw	r26, r24
    4882:	cb 01       	movw	r24, r22
    4884:	f8 01       	movw	r30, r16
    4886:	91 83       	std	Z+1, r25	; 0x01
    4888:	80 83       	st	Z, r24
    488a:	ce 01       	movw	r24, r28
    488c:	83 5e       	subi	r24, 0xE3	; 227
    488e:	9e 4f       	sbci	r25, 0xFE	; 254
    4890:	9e 01       	movw	r18, r28
    4892:	27 5e       	subi	r18, 0xE7	; 231
    4894:	3e 4f       	sbci	r19, 0xFE	; 254
    4896:	f9 01       	movw	r30, r18
    4898:	20 81       	ld	r18, Z
    489a:	31 81       	ldd	r19, Z+1	; 0x01
    489c:	fc 01       	movw	r30, r24
    489e:	31 83       	std	Z+1, r19	; 0x01
    48a0:	20 83       	st	Z, r18
    48a2:	ce 01       	movw	r24, r28
    48a4:	83 5e       	subi	r24, 0xE3	; 227
    48a6:	9e 4f       	sbci	r25, 0xFE	; 254
    48a8:	fc 01       	movw	r30, r24
    48aa:	80 81       	ld	r24, Z
    48ac:	91 81       	ldd	r25, Z+1	; 0x01
    48ae:	01 97       	sbiw	r24, 0x01	; 1
    48b0:	f1 f7       	brne	.-4      	; 0x48ae <__stack+0x37af>
    48b2:	9e 01       	movw	r18, r28
    48b4:	23 5e       	subi	r18, 0xE3	; 227
    48b6:	3e 4f       	sbci	r19, 0xFE	; 254
    48b8:	f9 01       	movw	r30, r18
    48ba:	91 83       	std	Z+1, r25	; 0x01
    48bc:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F480 T80\n");
    48be:	89 ef       	ldi	r24, 0xF9	; 249
    48c0:	91 e0       	ldi	r25, 0x01	; 1
    48c2:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    48c6:	9e 01       	movw	r18, r28
    48c8:	23 55       	subi	r18, 0x53	; 83
    48ca:	3f 4f       	sbci	r19, 0xFF	; 255
    48cc:	80 e0       	ldi	r24, 0x00	; 0
    48ce:	90 e0       	ldi	r25, 0x00	; 0
    48d0:	aa ef       	ldi	r26, 0xFA	; 250
    48d2:	b3 e4       	ldi	r27, 0x43	; 67
    48d4:	f9 01       	movw	r30, r18
    48d6:	80 83       	st	Z, r24
    48d8:	91 83       	std	Z+1, r25	; 0x01
    48da:	a2 83       	std	Z+2, r26	; 0x02
    48dc:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    48de:	8e 01       	movw	r16, r28
    48e0:	05 5f       	subi	r16, 0xF5	; 245
    48e2:	1e 4f       	sbci	r17, 0xFE	; 254
    48e4:	ce 01       	movw	r24, r28
    48e6:	83 55       	subi	r24, 0x53	; 83
    48e8:	9f 4f       	sbci	r25, 0xFF	; 255
    48ea:	20 e0       	ldi	r18, 0x00	; 0
    48ec:	30 e0       	ldi	r19, 0x00	; 0
    48ee:	4a e7       	ldi	r20, 0x7A	; 122
    48f0:	55 e4       	ldi	r21, 0x45	; 69
    48f2:	fc 01       	movw	r30, r24
    48f4:	60 81       	ld	r22, Z
    48f6:	71 81       	ldd	r23, Z+1	; 0x01
    48f8:	82 81       	ldd	r24, Z+2	; 0x02
    48fa:	93 81       	ldd	r25, Z+3	; 0x03
    48fc:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    4900:	dc 01       	movw	r26, r24
    4902:	cb 01       	movw	r24, r22
    4904:	f8 01       	movw	r30, r16
    4906:	80 83       	st	Z, r24
    4908:	91 83       	std	Z+1, r25	; 0x01
    490a:	a2 83       	std	Z+2, r26	; 0x02
    490c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    490e:	ce 01       	movw	r24, r28
    4910:	85 5f       	subi	r24, 0xF5	; 245
    4912:	9e 4f       	sbci	r25, 0xFE	; 254
    4914:	20 e0       	ldi	r18, 0x00	; 0
    4916:	30 e0       	ldi	r19, 0x00	; 0
    4918:	40 e8       	ldi	r20, 0x80	; 128
    491a:	5f e3       	ldi	r21, 0x3F	; 63
    491c:	fc 01       	movw	r30, r24
    491e:	60 81       	ld	r22, Z
    4920:	71 81       	ldd	r23, Z+1	; 0x01
    4922:	82 81       	ldd	r24, Z+2	; 0x02
    4924:	93 81       	ldd	r25, Z+3	; 0x03
    4926:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    492a:	88 23       	and	r24, r24
    492c:	4c f4       	brge	.+18     	; 0x4940 <__stack+0x3841>
		__ticks = 1;
    492e:	ce 01       	movw	r24, r28
    4930:	81 5f       	subi	r24, 0xF1	; 241
    4932:	9e 4f       	sbci	r25, 0xFE	; 254
    4934:	21 e0       	ldi	r18, 0x01	; 1
    4936:	30 e0       	ldi	r19, 0x00	; 0
    4938:	fc 01       	movw	r30, r24
    493a:	31 83       	std	Z+1, r19	; 0x01
    493c:	20 83       	st	Z, r18
    493e:	6d c0       	rjmp	.+218    	; 0x4a1a <__stack+0x391b>
	else if (__tmp > 65535)
    4940:	ce 01       	movw	r24, r28
    4942:	85 5f       	subi	r24, 0xF5	; 245
    4944:	9e 4f       	sbci	r25, 0xFE	; 254
    4946:	20 e0       	ldi	r18, 0x00	; 0
    4948:	3f ef       	ldi	r19, 0xFF	; 255
    494a:	4f e7       	ldi	r20, 0x7F	; 127
    494c:	57 e4       	ldi	r21, 0x47	; 71
    494e:	fc 01       	movw	r30, r24
    4950:	60 81       	ld	r22, Z
    4952:	71 81       	ldd	r23, Z+1	; 0x01
    4954:	82 81       	ldd	r24, Z+2	; 0x02
    4956:	93 81       	ldd	r25, Z+3	; 0x03
    4958:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    495c:	18 16       	cp	r1, r24
    495e:	0c f0       	brlt	.+2      	; 0x4962 <__stack+0x3863>
    4960:	4a c0       	rjmp	.+148    	; 0x49f6 <__stack+0x38f7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4962:	ce 01       	movw	r24, r28
    4964:	83 55       	subi	r24, 0x53	; 83
    4966:	9f 4f       	sbci	r25, 0xFF	; 255
    4968:	20 e0       	ldi	r18, 0x00	; 0
    496a:	30 e0       	ldi	r19, 0x00	; 0
    496c:	40 e2       	ldi	r20, 0x20	; 32
    496e:	51 e4       	ldi	r21, 0x41	; 65
    4970:	fc 01       	movw	r30, r24
    4972:	60 81       	ld	r22, Z
    4974:	71 81       	ldd	r23, Z+1	; 0x01
    4976:	82 81       	ldd	r24, Z+2	; 0x02
    4978:	93 81       	ldd	r25, Z+3	; 0x03
    497a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    497e:	dc 01       	movw	r26, r24
    4980:	cb 01       	movw	r24, r22
    4982:	8e 01       	movw	r16, r28
    4984:	01 5f       	subi	r16, 0xF1	; 241
    4986:	1e 4f       	sbci	r17, 0xFE	; 254
    4988:	bc 01       	movw	r22, r24
    498a:	cd 01       	movw	r24, r26
    498c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    4990:	dc 01       	movw	r26, r24
    4992:	cb 01       	movw	r24, r22
    4994:	f8 01       	movw	r30, r16
    4996:	91 83       	std	Z+1, r25	; 0x01
    4998:	80 83       	st	Z, r24
    499a:	24 c0       	rjmp	.+72     	; 0x49e4 <__stack+0x38e5>
    499c:	ce 01       	movw	r24, r28
    499e:	8f 5e       	subi	r24, 0xEF	; 239
    49a0:	9e 4f       	sbci	r25, 0xFE	; 254
    49a2:	20 e9       	ldi	r18, 0x90	; 144
    49a4:	31 e0       	ldi	r19, 0x01	; 1
    49a6:	fc 01       	movw	r30, r24
    49a8:	31 83       	std	Z+1, r19	; 0x01
    49aa:	20 83       	st	Z, r18
    49ac:	ce 01       	movw	r24, r28
    49ae:	8f 5e       	subi	r24, 0xEF	; 239
    49b0:	9e 4f       	sbci	r25, 0xFE	; 254
    49b2:	fc 01       	movw	r30, r24
    49b4:	80 81       	ld	r24, Z
    49b6:	91 81       	ldd	r25, Z+1	; 0x01
    49b8:	01 97       	sbiw	r24, 0x01	; 1
    49ba:	f1 f7       	brne	.-4      	; 0x49b8 <__stack+0x38b9>
    49bc:	9e 01       	movw	r18, r28
    49be:	2f 5e       	subi	r18, 0xEF	; 239
    49c0:	3e 4f       	sbci	r19, 0xFE	; 254
    49c2:	f9 01       	movw	r30, r18
    49c4:	91 83       	std	Z+1, r25	; 0x01
    49c6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    49c8:	ce 01       	movw	r24, r28
    49ca:	81 5f       	subi	r24, 0xF1	; 241
    49cc:	9e 4f       	sbci	r25, 0xFE	; 254
    49ce:	9e 01       	movw	r18, r28
    49d0:	21 5f       	subi	r18, 0xF1	; 241
    49d2:	3e 4f       	sbci	r19, 0xFE	; 254
    49d4:	f9 01       	movw	r30, r18
    49d6:	20 81       	ld	r18, Z
    49d8:	31 81       	ldd	r19, Z+1	; 0x01
    49da:	21 50       	subi	r18, 0x01	; 1
    49dc:	31 09       	sbc	r19, r1
    49de:	fc 01       	movw	r30, r24
    49e0:	31 83       	std	Z+1, r19	; 0x01
    49e2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    49e4:	ce 01       	movw	r24, r28
    49e6:	81 5f       	subi	r24, 0xF1	; 241
    49e8:	9e 4f       	sbci	r25, 0xFE	; 254
    49ea:	fc 01       	movw	r30, r24
    49ec:	80 81       	ld	r24, Z
    49ee:	91 81       	ldd	r25, Z+1	; 0x01
    49f0:	89 2b       	or	r24, r25
    49f2:	a1 f6       	brne	.-88     	; 0x499c <__stack+0x389d>
    49f4:	2c c0       	rjmp	.+88     	; 0x4a4e <__stack+0x394f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    49f6:	8e 01       	movw	r16, r28
    49f8:	01 5f       	subi	r16, 0xF1	; 241
    49fa:	1e 4f       	sbci	r17, 0xFE	; 254
    49fc:	ce 01       	movw	r24, r28
    49fe:	85 5f       	subi	r24, 0xF5	; 245
    4a00:	9e 4f       	sbci	r25, 0xFE	; 254
    4a02:	fc 01       	movw	r30, r24
    4a04:	60 81       	ld	r22, Z
    4a06:	71 81       	ldd	r23, Z+1	; 0x01
    4a08:	82 81       	ldd	r24, Z+2	; 0x02
    4a0a:	93 81       	ldd	r25, Z+3	; 0x03
    4a0c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    4a10:	dc 01       	movw	r26, r24
    4a12:	cb 01       	movw	r24, r22
    4a14:	f8 01       	movw	r30, r16
    4a16:	91 83       	std	Z+1, r25	; 0x01
    4a18:	80 83       	st	Z, r24
    4a1a:	ce 01       	movw	r24, r28
    4a1c:	8d 5e       	subi	r24, 0xED	; 237
    4a1e:	9e 4f       	sbci	r25, 0xFE	; 254
    4a20:	9e 01       	movw	r18, r28
    4a22:	21 5f       	subi	r18, 0xF1	; 241
    4a24:	3e 4f       	sbci	r19, 0xFE	; 254
    4a26:	f9 01       	movw	r30, r18
    4a28:	20 81       	ld	r18, Z
    4a2a:	31 81       	ldd	r19, Z+1	; 0x01
    4a2c:	fc 01       	movw	r30, r24
    4a2e:	31 83       	std	Z+1, r19	; 0x01
    4a30:	20 83       	st	Z, r18
    4a32:	ce 01       	movw	r24, r28
    4a34:	8d 5e       	subi	r24, 0xED	; 237
    4a36:	9e 4f       	sbci	r25, 0xFE	; 254
    4a38:	fc 01       	movw	r30, r24
    4a3a:	80 81       	ld	r24, Z
    4a3c:	91 81       	ldd	r25, Z+1	; 0x01
    4a3e:	01 97       	sbiw	r24, 0x01	; 1
    4a40:	f1 f7       	brne	.-4      	; 0x4a3e <__stack+0x393f>
    4a42:	9e 01       	movw	r18, r28
    4a44:	2d 5e       	subi	r18, 0xED	; 237
    4a46:	3e 4f       	sbci	r19, 0xFE	; 254
    4a48:	f9 01       	movw	r30, r18
    4a4a:	91 83       	std	Z+1, r25	; 0x01
    4a4c:	80 83       	st	Z, r24
			_delay_ms(500);

			to_uARM("M2210 F500 T100\n");
    4a4e:	8b e9       	ldi	r24, 0x9B	; 155
    4a50:	92 e0       	ldi	r25, 0x02	; 2
    4a52:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    4a56:	9e 01       	movw	r18, r28
    4a58:	2f 54       	subi	r18, 0x4F	; 79
    4a5a:	3f 4f       	sbci	r19, 0xFF	; 255
    4a5c:	80 e0       	ldi	r24, 0x00	; 0
    4a5e:	90 e0       	ldi	r25, 0x00	; 0
    4a60:	a6 e9       	ldi	r26, 0x96	; 150
    4a62:	b3 e4       	ldi	r27, 0x43	; 67
    4a64:	f9 01       	movw	r30, r18
    4a66:	80 83       	st	Z, r24
    4a68:	91 83       	std	Z+1, r25	; 0x01
    4a6a:	a2 83       	std	Z+2, r26	; 0x02
    4a6c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4a6e:	8e 01       	movw	r16, r28
    4a70:	0f 5f       	subi	r16, 0xFF	; 255
    4a72:	1e 4f       	sbci	r17, 0xFE	; 254
    4a74:	ce 01       	movw	r24, r28
    4a76:	8f 54       	subi	r24, 0x4F	; 79
    4a78:	9f 4f       	sbci	r25, 0xFF	; 255
    4a7a:	20 e0       	ldi	r18, 0x00	; 0
    4a7c:	30 e0       	ldi	r19, 0x00	; 0
    4a7e:	4a e7       	ldi	r20, 0x7A	; 122
    4a80:	55 e4       	ldi	r21, 0x45	; 69
    4a82:	fc 01       	movw	r30, r24
    4a84:	60 81       	ld	r22, Z
    4a86:	71 81       	ldd	r23, Z+1	; 0x01
    4a88:	82 81       	ldd	r24, Z+2	; 0x02
    4a8a:	93 81       	ldd	r25, Z+3	; 0x03
    4a8c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    4a90:	dc 01       	movw	r26, r24
    4a92:	cb 01       	movw	r24, r22
    4a94:	f8 01       	movw	r30, r16
    4a96:	80 83       	st	Z, r24
    4a98:	91 83       	std	Z+1, r25	; 0x01
    4a9a:	a2 83       	std	Z+2, r26	; 0x02
    4a9c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4a9e:	ce 01       	movw	r24, r28
    4aa0:	8f 5f       	subi	r24, 0xFF	; 255
    4aa2:	9e 4f       	sbci	r25, 0xFE	; 254
    4aa4:	20 e0       	ldi	r18, 0x00	; 0
    4aa6:	30 e0       	ldi	r19, 0x00	; 0
    4aa8:	40 e8       	ldi	r20, 0x80	; 128
    4aaa:	5f e3       	ldi	r21, 0x3F	; 63
    4aac:	fc 01       	movw	r30, r24
    4aae:	60 81       	ld	r22, Z
    4ab0:	71 81       	ldd	r23, Z+1	; 0x01
    4ab2:	82 81       	ldd	r24, Z+2	; 0x02
    4ab4:	93 81       	ldd	r25, Z+3	; 0x03
    4ab6:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    4aba:	88 23       	and	r24, r24
    4abc:	4c f4       	brge	.+18     	; 0x4ad0 <__stack+0x39d1>
		__ticks = 1;
    4abe:	ce 01       	movw	r24, r28
    4ac0:	8b 5f       	subi	r24, 0xFB	; 251
    4ac2:	9e 4f       	sbci	r25, 0xFE	; 254
    4ac4:	21 e0       	ldi	r18, 0x01	; 1
    4ac6:	30 e0       	ldi	r19, 0x00	; 0
    4ac8:	fc 01       	movw	r30, r24
    4aca:	31 83       	std	Z+1, r19	; 0x01
    4acc:	20 83       	st	Z, r18
    4ace:	6d c0       	rjmp	.+218    	; 0x4baa <__stack+0x3aab>
	else if (__tmp > 65535)
    4ad0:	ce 01       	movw	r24, r28
    4ad2:	8f 5f       	subi	r24, 0xFF	; 255
    4ad4:	9e 4f       	sbci	r25, 0xFE	; 254
    4ad6:	20 e0       	ldi	r18, 0x00	; 0
    4ad8:	3f ef       	ldi	r19, 0xFF	; 255
    4ada:	4f e7       	ldi	r20, 0x7F	; 127
    4adc:	57 e4       	ldi	r21, 0x47	; 71
    4ade:	fc 01       	movw	r30, r24
    4ae0:	60 81       	ld	r22, Z
    4ae2:	71 81       	ldd	r23, Z+1	; 0x01
    4ae4:	82 81       	ldd	r24, Z+2	; 0x02
    4ae6:	93 81       	ldd	r25, Z+3	; 0x03
    4ae8:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    4aec:	18 16       	cp	r1, r24
    4aee:	0c f0       	brlt	.+2      	; 0x4af2 <__stack+0x39f3>
    4af0:	4a c0       	rjmp	.+148    	; 0x4b86 <__stack+0x3a87>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4af2:	ce 01       	movw	r24, r28
    4af4:	8f 54       	subi	r24, 0x4F	; 79
    4af6:	9f 4f       	sbci	r25, 0xFF	; 255
    4af8:	20 e0       	ldi	r18, 0x00	; 0
    4afa:	30 e0       	ldi	r19, 0x00	; 0
    4afc:	40 e2       	ldi	r20, 0x20	; 32
    4afe:	51 e4       	ldi	r21, 0x41	; 65
    4b00:	fc 01       	movw	r30, r24
    4b02:	60 81       	ld	r22, Z
    4b04:	71 81       	ldd	r23, Z+1	; 0x01
    4b06:	82 81       	ldd	r24, Z+2	; 0x02
    4b08:	93 81       	ldd	r25, Z+3	; 0x03
    4b0a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    4b0e:	dc 01       	movw	r26, r24
    4b10:	cb 01       	movw	r24, r22
    4b12:	8e 01       	movw	r16, r28
    4b14:	0b 5f       	subi	r16, 0xFB	; 251
    4b16:	1e 4f       	sbci	r17, 0xFE	; 254
    4b18:	bc 01       	movw	r22, r24
    4b1a:	cd 01       	movw	r24, r26
    4b1c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    4b20:	dc 01       	movw	r26, r24
    4b22:	cb 01       	movw	r24, r22
    4b24:	f8 01       	movw	r30, r16
    4b26:	91 83       	std	Z+1, r25	; 0x01
    4b28:	80 83       	st	Z, r24
    4b2a:	24 c0       	rjmp	.+72     	; 0x4b74 <__stack+0x3a75>
    4b2c:	ce 01       	movw	r24, r28
    4b2e:	89 5f       	subi	r24, 0xF9	; 249
    4b30:	9e 4f       	sbci	r25, 0xFE	; 254
    4b32:	20 e9       	ldi	r18, 0x90	; 144
    4b34:	31 e0       	ldi	r19, 0x01	; 1
    4b36:	fc 01       	movw	r30, r24
    4b38:	31 83       	std	Z+1, r19	; 0x01
    4b3a:	20 83       	st	Z, r18
    4b3c:	ce 01       	movw	r24, r28
    4b3e:	89 5f       	subi	r24, 0xF9	; 249
    4b40:	9e 4f       	sbci	r25, 0xFE	; 254
    4b42:	fc 01       	movw	r30, r24
    4b44:	80 81       	ld	r24, Z
    4b46:	91 81       	ldd	r25, Z+1	; 0x01
    4b48:	01 97       	sbiw	r24, 0x01	; 1
    4b4a:	f1 f7       	brne	.-4      	; 0x4b48 <__stack+0x3a49>
    4b4c:	9e 01       	movw	r18, r28
    4b4e:	29 5f       	subi	r18, 0xF9	; 249
    4b50:	3e 4f       	sbci	r19, 0xFE	; 254
    4b52:	f9 01       	movw	r30, r18
    4b54:	91 83       	std	Z+1, r25	; 0x01
    4b56:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4b58:	ce 01       	movw	r24, r28
    4b5a:	8b 5f       	subi	r24, 0xFB	; 251
    4b5c:	9e 4f       	sbci	r25, 0xFE	; 254
    4b5e:	9e 01       	movw	r18, r28
    4b60:	2b 5f       	subi	r18, 0xFB	; 251
    4b62:	3e 4f       	sbci	r19, 0xFE	; 254
    4b64:	f9 01       	movw	r30, r18
    4b66:	20 81       	ld	r18, Z
    4b68:	31 81       	ldd	r19, Z+1	; 0x01
    4b6a:	21 50       	subi	r18, 0x01	; 1
    4b6c:	31 09       	sbc	r19, r1
    4b6e:	fc 01       	movw	r30, r24
    4b70:	31 83       	std	Z+1, r19	; 0x01
    4b72:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4b74:	ce 01       	movw	r24, r28
    4b76:	8b 5f       	subi	r24, 0xFB	; 251
    4b78:	9e 4f       	sbci	r25, 0xFE	; 254
    4b7a:	fc 01       	movw	r30, r24
    4b7c:	80 81       	ld	r24, Z
    4b7e:	91 81       	ldd	r25, Z+1	; 0x01
    4b80:	89 2b       	or	r24, r25
    4b82:	a1 f6       	brne	.-88     	; 0x4b2c <__stack+0x3a2d>
    4b84:	2c c0       	rjmp	.+88     	; 0x4bde <__stack+0x3adf>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4b86:	8e 01       	movw	r16, r28
    4b88:	0b 5f       	subi	r16, 0xFB	; 251
    4b8a:	1e 4f       	sbci	r17, 0xFE	; 254
    4b8c:	ce 01       	movw	r24, r28
    4b8e:	8f 5f       	subi	r24, 0xFF	; 255
    4b90:	9e 4f       	sbci	r25, 0xFE	; 254
    4b92:	fc 01       	movw	r30, r24
    4b94:	60 81       	ld	r22, Z
    4b96:	71 81       	ldd	r23, Z+1	; 0x01
    4b98:	82 81       	ldd	r24, Z+2	; 0x02
    4b9a:	93 81       	ldd	r25, Z+3	; 0x03
    4b9c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    4ba0:	dc 01       	movw	r26, r24
    4ba2:	cb 01       	movw	r24, r22
    4ba4:	f8 01       	movw	r30, r16
    4ba6:	91 83       	std	Z+1, r25	; 0x01
    4ba8:	80 83       	st	Z, r24
    4baa:	ce 01       	movw	r24, r28
    4bac:	87 5f       	subi	r24, 0xF7	; 247
    4bae:	9e 4f       	sbci	r25, 0xFE	; 254
    4bb0:	9e 01       	movw	r18, r28
    4bb2:	2b 5f       	subi	r18, 0xFB	; 251
    4bb4:	3e 4f       	sbci	r19, 0xFE	; 254
    4bb6:	f9 01       	movw	r30, r18
    4bb8:	20 81       	ld	r18, Z
    4bba:	31 81       	ldd	r19, Z+1	; 0x01
    4bbc:	fc 01       	movw	r30, r24
    4bbe:	31 83       	std	Z+1, r19	; 0x01
    4bc0:	20 83       	st	Z, r18
    4bc2:	ce 01       	movw	r24, r28
    4bc4:	87 5f       	subi	r24, 0xF7	; 247
    4bc6:	9e 4f       	sbci	r25, 0xFE	; 254
    4bc8:	fc 01       	movw	r30, r24
    4bca:	80 81       	ld	r24, Z
    4bcc:	91 81       	ldd	r25, Z+1	; 0x01
    4bce:	01 97       	sbiw	r24, 0x01	; 1
    4bd0:	f1 f7       	brne	.-4      	; 0x4bce <__stack+0x3acf>
    4bd2:	9e 01       	movw	r18, r28
    4bd4:	27 5f       	subi	r18, 0xF7	; 247
    4bd6:	3e 4f       	sbci	r19, 0xFE	; 254
    4bd8:	f9 01       	movw	r30, r18
    4bda:	91 83       	std	Z+1, r25	; 0x01
    4bdc:	80 83       	st	Z, r24
			_delay_ms(300);

			to_uARM("M2210 F760 T100\n");
    4bde:	8c ea       	ldi	r24, 0xAC	; 172
    4be0:	92 e0       	ldi	r25, 0x02	; 2
    4be2:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    4be6:	9e 01       	movw	r18, r28
    4be8:	2b 54       	subi	r18, 0x4B	; 75
    4bea:	3f 4f       	sbci	r19, 0xFF	; 255
    4bec:	80 e0       	ldi	r24, 0x00	; 0
    4bee:	90 e0       	ldi	r25, 0x00	; 0
    4bf0:	a8 ec       	ldi	r26, 0xC8	; 200
    4bf2:	b2 e4       	ldi	r27, 0x42	; 66
    4bf4:	f9 01       	movw	r30, r18
    4bf6:	80 83       	st	Z, r24
    4bf8:	91 83       	std	Z+1, r25	; 0x01
    4bfa:	a2 83       	std	Z+2, r26	; 0x02
    4bfc:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4bfe:	8e 01       	movw	r16, r28
    4c00:	09 50       	subi	r16, 0x09	; 9
    4c02:	1f 4f       	sbci	r17, 0xFF	; 255
    4c04:	ce 01       	movw	r24, r28
    4c06:	8b 54       	subi	r24, 0x4B	; 75
    4c08:	9f 4f       	sbci	r25, 0xFF	; 255
    4c0a:	20 e0       	ldi	r18, 0x00	; 0
    4c0c:	30 e0       	ldi	r19, 0x00	; 0
    4c0e:	4a e7       	ldi	r20, 0x7A	; 122
    4c10:	55 e4       	ldi	r21, 0x45	; 69
    4c12:	fc 01       	movw	r30, r24
    4c14:	60 81       	ld	r22, Z
    4c16:	71 81       	ldd	r23, Z+1	; 0x01
    4c18:	82 81       	ldd	r24, Z+2	; 0x02
    4c1a:	93 81       	ldd	r25, Z+3	; 0x03
    4c1c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    4c20:	dc 01       	movw	r26, r24
    4c22:	cb 01       	movw	r24, r22
    4c24:	f8 01       	movw	r30, r16
    4c26:	80 83       	st	Z, r24
    4c28:	91 83       	std	Z+1, r25	; 0x01
    4c2a:	a2 83       	std	Z+2, r26	; 0x02
    4c2c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4c2e:	ce 01       	movw	r24, r28
    4c30:	89 50       	subi	r24, 0x09	; 9
    4c32:	9f 4f       	sbci	r25, 0xFF	; 255
    4c34:	20 e0       	ldi	r18, 0x00	; 0
    4c36:	30 e0       	ldi	r19, 0x00	; 0
    4c38:	40 e8       	ldi	r20, 0x80	; 128
    4c3a:	5f e3       	ldi	r21, 0x3F	; 63
    4c3c:	fc 01       	movw	r30, r24
    4c3e:	60 81       	ld	r22, Z
    4c40:	71 81       	ldd	r23, Z+1	; 0x01
    4c42:	82 81       	ldd	r24, Z+2	; 0x02
    4c44:	93 81       	ldd	r25, Z+3	; 0x03
    4c46:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    4c4a:	88 23       	and	r24, r24
    4c4c:	4c f4       	brge	.+18     	; 0x4c60 <__stack+0x3b61>
		__ticks = 1;
    4c4e:	ce 01       	movw	r24, r28
    4c50:	85 50       	subi	r24, 0x05	; 5
    4c52:	9f 4f       	sbci	r25, 0xFF	; 255
    4c54:	21 e0       	ldi	r18, 0x01	; 1
    4c56:	30 e0       	ldi	r19, 0x00	; 0
    4c58:	fc 01       	movw	r30, r24
    4c5a:	31 83       	std	Z+1, r19	; 0x01
    4c5c:	20 83       	st	Z, r18
    4c5e:	6d c0       	rjmp	.+218    	; 0x4d3a <__stack+0x3c3b>
	else if (__tmp > 65535)
    4c60:	ce 01       	movw	r24, r28
    4c62:	89 50       	subi	r24, 0x09	; 9
    4c64:	9f 4f       	sbci	r25, 0xFF	; 255
    4c66:	20 e0       	ldi	r18, 0x00	; 0
    4c68:	3f ef       	ldi	r19, 0xFF	; 255
    4c6a:	4f e7       	ldi	r20, 0x7F	; 127
    4c6c:	57 e4       	ldi	r21, 0x47	; 71
    4c6e:	fc 01       	movw	r30, r24
    4c70:	60 81       	ld	r22, Z
    4c72:	71 81       	ldd	r23, Z+1	; 0x01
    4c74:	82 81       	ldd	r24, Z+2	; 0x02
    4c76:	93 81       	ldd	r25, Z+3	; 0x03
    4c78:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    4c7c:	18 16       	cp	r1, r24
    4c7e:	0c f0       	brlt	.+2      	; 0x4c82 <__stack+0x3b83>
    4c80:	4a c0       	rjmp	.+148    	; 0x4d16 <__stack+0x3c17>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4c82:	ce 01       	movw	r24, r28
    4c84:	8b 54       	subi	r24, 0x4B	; 75
    4c86:	9f 4f       	sbci	r25, 0xFF	; 255
    4c88:	20 e0       	ldi	r18, 0x00	; 0
    4c8a:	30 e0       	ldi	r19, 0x00	; 0
    4c8c:	40 e2       	ldi	r20, 0x20	; 32
    4c8e:	51 e4       	ldi	r21, 0x41	; 65
    4c90:	fc 01       	movw	r30, r24
    4c92:	60 81       	ld	r22, Z
    4c94:	71 81       	ldd	r23, Z+1	; 0x01
    4c96:	82 81       	ldd	r24, Z+2	; 0x02
    4c98:	93 81       	ldd	r25, Z+3	; 0x03
    4c9a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    4c9e:	dc 01       	movw	r26, r24
    4ca0:	cb 01       	movw	r24, r22
    4ca2:	8e 01       	movw	r16, r28
    4ca4:	05 50       	subi	r16, 0x05	; 5
    4ca6:	1f 4f       	sbci	r17, 0xFF	; 255
    4ca8:	bc 01       	movw	r22, r24
    4caa:	cd 01       	movw	r24, r26
    4cac:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    4cb0:	dc 01       	movw	r26, r24
    4cb2:	cb 01       	movw	r24, r22
    4cb4:	f8 01       	movw	r30, r16
    4cb6:	91 83       	std	Z+1, r25	; 0x01
    4cb8:	80 83       	st	Z, r24
    4cba:	24 c0       	rjmp	.+72     	; 0x4d04 <__stack+0x3c05>
    4cbc:	ce 01       	movw	r24, r28
    4cbe:	83 50       	subi	r24, 0x03	; 3
    4cc0:	9f 4f       	sbci	r25, 0xFF	; 255
    4cc2:	20 e9       	ldi	r18, 0x90	; 144
    4cc4:	31 e0       	ldi	r19, 0x01	; 1
    4cc6:	fc 01       	movw	r30, r24
    4cc8:	31 83       	std	Z+1, r19	; 0x01
    4cca:	20 83       	st	Z, r18
    4ccc:	ce 01       	movw	r24, r28
    4cce:	83 50       	subi	r24, 0x03	; 3
    4cd0:	9f 4f       	sbci	r25, 0xFF	; 255
    4cd2:	fc 01       	movw	r30, r24
    4cd4:	80 81       	ld	r24, Z
    4cd6:	91 81       	ldd	r25, Z+1	; 0x01
    4cd8:	01 97       	sbiw	r24, 0x01	; 1
    4cda:	f1 f7       	brne	.-4      	; 0x4cd8 <__stack+0x3bd9>
    4cdc:	9e 01       	movw	r18, r28
    4cde:	23 50       	subi	r18, 0x03	; 3
    4ce0:	3f 4f       	sbci	r19, 0xFF	; 255
    4ce2:	f9 01       	movw	r30, r18
    4ce4:	91 83       	std	Z+1, r25	; 0x01
    4ce6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4ce8:	ce 01       	movw	r24, r28
    4cea:	85 50       	subi	r24, 0x05	; 5
    4cec:	9f 4f       	sbci	r25, 0xFF	; 255
    4cee:	9e 01       	movw	r18, r28
    4cf0:	25 50       	subi	r18, 0x05	; 5
    4cf2:	3f 4f       	sbci	r19, 0xFF	; 255
    4cf4:	f9 01       	movw	r30, r18
    4cf6:	20 81       	ld	r18, Z
    4cf8:	31 81       	ldd	r19, Z+1	; 0x01
    4cfa:	21 50       	subi	r18, 0x01	; 1
    4cfc:	31 09       	sbc	r19, r1
    4cfe:	fc 01       	movw	r30, r24
    4d00:	31 83       	std	Z+1, r19	; 0x01
    4d02:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4d04:	ce 01       	movw	r24, r28
    4d06:	85 50       	subi	r24, 0x05	; 5
    4d08:	9f 4f       	sbci	r25, 0xFF	; 255
    4d0a:	fc 01       	movw	r30, r24
    4d0c:	80 81       	ld	r24, Z
    4d0e:	91 81       	ldd	r25, Z+1	; 0x01
    4d10:	89 2b       	or	r24, r25
    4d12:	a1 f6       	brne	.-88     	; 0x4cbc <__stack+0x3bbd>
    4d14:	2c c0       	rjmp	.+88     	; 0x4d6e <__stack+0x3c6f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4d16:	8e 01       	movw	r16, r28
    4d18:	05 50       	subi	r16, 0x05	; 5
    4d1a:	1f 4f       	sbci	r17, 0xFF	; 255
    4d1c:	ce 01       	movw	r24, r28
    4d1e:	89 50       	subi	r24, 0x09	; 9
    4d20:	9f 4f       	sbci	r25, 0xFF	; 255
    4d22:	fc 01       	movw	r30, r24
    4d24:	60 81       	ld	r22, Z
    4d26:	71 81       	ldd	r23, Z+1	; 0x01
    4d28:	82 81       	ldd	r24, Z+2	; 0x02
    4d2a:	93 81       	ldd	r25, Z+3	; 0x03
    4d2c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    4d30:	dc 01       	movw	r26, r24
    4d32:	cb 01       	movw	r24, r22
    4d34:	f8 01       	movw	r30, r16
    4d36:	91 83       	std	Z+1, r25	; 0x01
    4d38:	80 83       	st	Z, r24
    4d3a:	ce 01       	movw	r24, r28
    4d3c:	81 50       	subi	r24, 0x01	; 1
    4d3e:	9f 4f       	sbci	r25, 0xFF	; 255
    4d40:	9e 01       	movw	r18, r28
    4d42:	25 50       	subi	r18, 0x05	; 5
    4d44:	3f 4f       	sbci	r19, 0xFF	; 255
    4d46:	f9 01       	movw	r30, r18
    4d48:	20 81       	ld	r18, Z
    4d4a:	31 81       	ldd	r19, Z+1	; 0x01
    4d4c:	fc 01       	movw	r30, r24
    4d4e:	31 83       	std	Z+1, r19	; 0x01
    4d50:	20 83       	st	Z, r18
    4d52:	ce 01       	movw	r24, r28
    4d54:	81 50       	subi	r24, 0x01	; 1
    4d56:	9f 4f       	sbci	r25, 0xFF	; 255
    4d58:	fc 01       	movw	r30, r24
    4d5a:	80 81       	ld	r24, Z
    4d5c:	91 81       	ldd	r25, Z+1	; 0x01
    4d5e:	01 97       	sbiw	r24, 0x01	; 1
    4d60:	f1 f7       	brne	.-4      	; 0x4d5e <__stack+0x3c5f>
    4d62:	9e 01       	movw	r18, r28
    4d64:	21 50       	subi	r18, 0x01	; 1
    4d66:	3f 4f       	sbci	r19, 0xFF	; 255
    4d68:	f9 01       	movw	r30, r18
    4d6a:	91 83       	std	Z+1, r25	; 0x01
    4d6c:	80 83       	st	Z, r24
			_delay_ms(100);
			to_uARM("M2210 F720 T100\n");
    4d6e:	8d eb       	ldi	r24, 0xBD	; 189
    4d70:	92 e0       	ldi	r25, 0x02	; 2
    4d72:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    4d76:	9e 01       	movw	r18, r28
    4d78:	27 54       	subi	r18, 0x47	; 71
    4d7a:	3f 4f       	sbci	r19, 0xFF	; 255
    4d7c:	80 e0       	ldi	r24, 0x00	; 0
    4d7e:	90 e0       	ldi	r25, 0x00	; 0
    4d80:	a6 e1       	ldi	r26, 0x16	; 22
    4d82:	b3 e4       	ldi	r27, 0x43	; 67
    4d84:	f9 01       	movw	r30, r18
    4d86:	80 83       	st	Z, r24
    4d88:	91 83       	std	Z+1, r25	; 0x01
    4d8a:	a2 83       	std	Z+2, r26	; 0x02
    4d8c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4d8e:	8e 01       	movw	r16, r28
    4d90:	03 51       	subi	r16, 0x13	; 19
    4d92:	1f 4f       	sbci	r17, 0xFF	; 255
    4d94:	ce 01       	movw	r24, r28
    4d96:	87 54       	subi	r24, 0x47	; 71
    4d98:	9f 4f       	sbci	r25, 0xFF	; 255
    4d9a:	20 e0       	ldi	r18, 0x00	; 0
    4d9c:	30 e0       	ldi	r19, 0x00	; 0
    4d9e:	4a e7       	ldi	r20, 0x7A	; 122
    4da0:	55 e4       	ldi	r21, 0x45	; 69
    4da2:	fc 01       	movw	r30, r24
    4da4:	60 81       	ld	r22, Z
    4da6:	71 81       	ldd	r23, Z+1	; 0x01
    4da8:	82 81       	ldd	r24, Z+2	; 0x02
    4daa:	93 81       	ldd	r25, Z+3	; 0x03
    4dac:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    4db0:	dc 01       	movw	r26, r24
    4db2:	cb 01       	movw	r24, r22
    4db4:	f8 01       	movw	r30, r16
    4db6:	80 83       	st	Z, r24
    4db8:	91 83       	std	Z+1, r25	; 0x01
    4dba:	a2 83       	std	Z+2, r26	; 0x02
    4dbc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4dbe:	ce 01       	movw	r24, r28
    4dc0:	83 51       	subi	r24, 0x13	; 19
    4dc2:	9f 4f       	sbci	r25, 0xFF	; 255
    4dc4:	20 e0       	ldi	r18, 0x00	; 0
    4dc6:	30 e0       	ldi	r19, 0x00	; 0
    4dc8:	40 e8       	ldi	r20, 0x80	; 128
    4dca:	5f e3       	ldi	r21, 0x3F	; 63
    4dcc:	fc 01       	movw	r30, r24
    4dce:	60 81       	ld	r22, Z
    4dd0:	71 81       	ldd	r23, Z+1	; 0x01
    4dd2:	82 81       	ldd	r24, Z+2	; 0x02
    4dd4:	93 81       	ldd	r25, Z+3	; 0x03
    4dd6:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    4dda:	88 23       	and	r24, r24
    4ddc:	4c f4       	brge	.+18     	; 0x4df0 <__stack+0x3cf1>
		__ticks = 1;
    4dde:	ce 01       	movw	r24, r28
    4de0:	8f 50       	subi	r24, 0x0F	; 15
    4de2:	9f 4f       	sbci	r25, 0xFF	; 255
    4de4:	21 e0       	ldi	r18, 0x01	; 1
    4de6:	30 e0       	ldi	r19, 0x00	; 0
    4de8:	fc 01       	movw	r30, r24
    4dea:	31 83       	std	Z+1, r19	; 0x01
    4dec:	20 83       	st	Z, r18
    4dee:	6d c0       	rjmp	.+218    	; 0x4eca <__stack+0x3dcb>
	else if (__tmp > 65535)
    4df0:	ce 01       	movw	r24, r28
    4df2:	83 51       	subi	r24, 0x13	; 19
    4df4:	9f 4f       	sbci	r25, 0xFF	; 255
    4df6:	20 e0       	ldi	r18, 0x00	; 0
    4df8:	3f ef       	ldi	r19, 0xFF	; 255
    4dfa:	4f e7       	ldi	r20, 0x7F	; 127
    4dfc:	57 e4       	ldi	r21, 0x47	; 71
    4dfe:	fc 01       	movw	r30, r24
    4e00:	60 81       	ld	r22, Z
    4e02:	71 81       	ldd	r23, Z+1	; 0x01
    4e04:	82 81       	ldd	r24, Z+2	; 0x02
    4e06:	93 81       	ldd	r25, Z+3	; 0x03
    4e08:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    4e0c:	18 16       	cp	r1, r24
    4e0e:	0c f0       	brlt	.+2      	; 0x4e12 <__stack+0x3d13>
    4e10:	4a c0       	rjmp	.+148    	; 0x4ea6 <__stack+0x3da7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4e12:	ce 01       	movw	r24, r28
    4e14:	87 54       	subi	r24, 0x47	; 71
    4e16:	9f 4f       	sbci	r25, 0xFF	; 255
    4e18:	20 e0       	ldi	r18, 0x00	; 0
    4e1a:	30 e0       	ldi	r19, 0x00	; 0
    4e1c:	40 e2       	ldi	r20, 0x20	; 32
    4e1e:	51 e4       	ldi	r21, 0x41	; 65
    4e20:	fc 01       	movw	r30, r24
    4e22:	60 81       	ld	r22, Z
    4e24:	71 81       	ldd	r23, Z+1	; 0x01
    4e26:	82 81       	ldd	r24, Z+2	; 0x02
    4e28:	93 81       	ldd	r25, Z+3	; 0x03
    4e2a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    4e2e:	dc 01       	movw	r26, r24
    4e30:	cb 01       	movw	r24, r22
    4e32:	8e 01       	movw	r16, r28
    4e34:	0f 50       	subi	r16, 0x0F	; 15
    4e36:	1f 4f       	sbci	r17, 0xFF	; 255
    4e38:	bc 01       	movw	r22, r24
    4e3a:	cd 01       	movw	r24, r26
    4e3c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    4e40:	dc 01       	movw	r26, r24
    4e42:	cb 01       	movw	r24, r22
    4e44:	f8 01       	movw	r30, r16
    4e46:	91 83       	std	Z+1, r25	; 0x01
    4e48:	80 83       	st	Z, r24
    4e4a:	24 c0       	rjmp	.+72     	; 0x4e94 <__stack+0x3d95>
    4e4c:	ce 01       	movw	r24, r28
    4e4e:	8d 50       	subi	r24, 0x0D	; 13
    4e50:	9f 4f       	sbci	r25, 0xFF	; 255
    4e52:	20 e9       	ldi	r18, 0x90	; 144
    4e54:	31 e0       	ldi	r19, 0x01	; 1
    4e56:	fc 01       	movw	r30, r24
    4e58:	31 83       	std	Z+1, r19	; 0x01
    4e5a:	20 83       	st	Z, r18
    4e5c:	ce 01       	movw	r24, r28
    4e5e:	8d 50       	subi	r24, 0x0D	; 13
    4e60:	9f 4f       	sbci	r25, 0xFF	; 255
    4e62:	fc 01       	movw	r30, r24
    4e64:	80 81       	ld	r24, Z
    4e66:	91 81       	ldd	r25, Z+1	; 0x01
    4e68:	01 97       	sbiw	r24, 0x01	; 1
    4e6a:	f1 f7       	brne	.-4      	; 0x4e68 <__stack+0x3d69>
    4e6c:	9e 01       	movw	r18, r28
    4e6e:	2d 50       	subi	r18, 0x0D	; 13
    4e70:	3f 4f       	sbci	r19, 0xFF	; 255
    4e72:	f9 01       	movw	r30, r18
    4e74:	91 83       	std	Z+1, r25	; 0x01
    4e76:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4e78:	ce 01       	movw	r24, r28
    4e7a:	8f 50       	subi	r24, 0x0F	; 15
    4e7c:	9f 4f       	sbci	r25, 0xFF	; 255
    4e7e:	9e 01       	movw	r18, r28
    4e80:	2f 50       	subi	r18, 0x0F	; 15
    4e82:	3f 4f       	sbci	r19, 0xFF	; 255
    4e84:	f9 01       	movw	r30, r18
    4e86:	20 81       	ld	r18, Z
    4e88:	31 81       	ldd	r19, Z+1	; 0x01
    4e8a:	21 50       	subi	r18, 0x01	; 1
    4e8c:	31 09       	sbc	r19, r1
    4e8e:	fc 01       	movw	r30, r24
    4e90:	31 83       	std	Z+1, r19	; 0x01
    4e92:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4e94:	ce 01       	movw	r24, r28
    4e96:	8f 50       	subi	r24, 0x0F	; 15
    4e98:	9f 4f       	sbci	r25, 0xFF	; 255
    4e9a:	fc 01       	movw	r30, r24
    4e9c:	80 81       	ld	r24, Z
    4e9e:	91 81       	ldd	r25, Z+1	; 0x01
    4ea0:	89 2b       	or	r24, r25
    4ea2:	a1 f6       	brne	.-88     	; 0x4e4c <__stack+0x3d4d>
    4ea4:	2c c0       	rjmp	.+88     	; 0x4efe <__stack+0x3dff>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ea6:	8e 01       	movw	r16, r28
    4ea8:	0f 50       	subi	r16, 0x0F	; 15
    4eaa:	1f 4f       	sbci	r17, 0xFF	; 255
    4eac:	ce 01       	movw	r24, r28
    4eae:	83 51       	subi	r24, 0x13	; 19
    4eb0:	9f 4f       	sbci	r25, 0xFF	; 255
    4eb2:	fc 01       	movw	r30, r24
    4eb4:	60 81       	ld	r22, Z
    4eb6:	71 81       	ldd	r23, Z+1	; 0x01
    4eb8:	82 81       	ldd	r24, Z+2	; 0x02
    4eba:	93 81       	ldd	r25, Z+3	; 0x03
    4ebc:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    4ec0:	dc 01       	movw	r26, r24
    4ec2:	cb 01       	movw	r24, r22
    4ec4:	f8 01       	movw	r30, r16
    4ec6:	91 83       	std	Z+1, r25	; 0x01
    4ec8:	80 83       	st	Z, r24
    4eca:	ce 01       	movw	r24, r28
    4ecc:	8b 50       	subi	r24, 0x0B	; 11
    4ece:	9f 4f       	sbci	r25, 0xFF	; 255
    4ed0:	9e 01       	movw	r18, r28
    4ed2:	2f 50       	subi	r18, 0x0F	; 15
    4ed4:	3f 4f       	sbci	r19, 0xFF	; 255
    4ed6:	f9 01       	movw	r30, r18
    4ed8:	20 81       	ld	r18, Z
    4eda:	31 81       	ldd	r19, Z+1	; 0x01
    4edc:	fc 01       	movw	r30, r24
    4ede:	31 83       	std	Z+1, r19	; 0x01
    4ee0:	20 83       	st	Z, r18
    4ee2:	ce 01       	movw	r24, r28
    4ee4:	8b 50       	subi	r24, 0x0B	; 11
    4ee6:	9f 4f       	sbci	r25, 0xFF	; 255
    4ee8:	fc 01       	movw	r30, r24
    4eea:	80 81       	ld	r24, Z
    4eec:	91 81       	ldd	r25, Z+1	; 0x01
    4eee:	01 97       	sbiw	r24, 0x01	; 1
    4ef0:	f1 f7       	brne	.-4      	; 0x4eee <__stack+0x3def>
    4ef2:	9e 01       	movw	r18, r28
    4ef4:	2b 50       	subi	r18, 0x0B	; 11
    4ef6:	3f 4f       	sbci	r19, 0xFF	; 255
    4ef8:	f9 01       	movw	r30, r18
    4efa:	91 83       	std	Z+1, r25	; 0x01
    4efc:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F680 T100\n");
    4efe:	8e ec       	ldi	r24, 0xCE	; 206
    4f00:	92 e0       	ldi	r25, 0x02	; 2
    4f02:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    4f06:	9e 01       	movw	r18, r28
    4f08:	23 54       	subi	r18, 0x43	; 67
    4f0a:	3f 4f       	sbci	r19, 0xFF	; 255
    4f0c:	80 e0       	ldi	r24, 0x00	; 0
    4f0e:	90 e0       	ldi	r25, 0x00	; 0
    4f10:	a6 e1       	ldi	r26, 0x16	; 22
    4f12:	b3 e4       	ldi	r27, 0x43	; 67
    4f14:	f9 01       	movw	r30, r18
    4f16:	80 83       	st	Z, r24
    4f18:	91 83       	std	Z+1, r25	; 0x01
    4f1a:	a2 83       	std	Z+2, r26	; 0x02
    4f1c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4f1e:	8e 01       	movw	r16, r28
    4f20:	0d 51       	subi	r16, 0x1D	; 29
    4f22:	1f 4f       	sbci	r17, 0xFF	; 255
    4f24:	ce 01       	movw	r24, r28
    4f26:	83 54       	subi	r24, 0x43	; 67
    4f28:	9f 4f       	sbci	r25, 0xFF	; 255
    4f2a:	20 e0       	ldi	r18, 0x00	; 0
    4f2c:	30 e0       	ldi	r19, 0x00	; 0
    4f2e:	4a e7       	ldi	r20, 0x7A	; 122
    4f30:	55 e4       	ldi	r21, 0x45	; 69
    4f32:	fc 01       	movw	r30, r24
    4f34:	60 81       	ld	r22, Z
    4f36:	71 81       	ldd	r23, Z+1	; 0x01
    4f38:	82 81       	ldd	r24, Z+2	; 0x02
    4f3a:	93 81       	ldd	r25, Z+3	; 0x03
    4f3c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    4f40:	dc 01       	movw	r26, r24
    4f42:	cb 01       	movw	r24, r22
    4f44:	f8 01       	movw	r30, r16
    4f46:	80 83       	st	Z, r24
    4f48:	91 83       	std	Z+1, r25	; 0x01
    4f4a:	a2 83       	std	Z+2, r26	; 0x02
    4f4c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4f4e:	ce 01       	movw	r24, r28
    4f50:	8d 51       	subi	r24, 0x1D	; 29
    4f52:	9f 4f       	sbci	r25, 0xFF	; 255
    4f54:	20 e0       	ldi	r18, 0x00	; 0
    4f56:	30 e0       	ldi	r19, 0x00	; 0
    4f58:	40 e8       	ldi	r20, 0x80	; 128
    4f5a:	5f e3       	ldi	r21, 0x3F	; 63
    4f5c:	fc 01       	movw	r30, r24
    4f5e:	60 81       	ld	r22, Z
    4f60:	71 81       	ldd	r23, Z+1	; 0x01
    4f62:	82 81       	ldd	r24, Z+2	; 0x02
    4f64:	93 81       	ldd	r25, Z+3	; 0x03
    4f66:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    4f6a:	88 23       	and	r24, r24
    4f6c:	4c f4       	brge	.+18     	; 0x4f80 <__stack+0x3e81>
		__ticks = 1;
    4f6e:	ce 01       	movw	r24, r28
    4f70:	89 51       	subi	r24, 0x19	; 25
    4f72:	9f 4f       	sbci	r25, 0xFF	; 255
    4f74:	21 e0       	ldi	r18, 0x01	; 1
    4f76:	30 e0       	ldi	r19, 0x00	; 0
    4f78:	fc 01       	movw	r30, r24
    4f7a:	31 83       	std	Z+1, r19	; 0x01
    4f7c:	20 83       	st	Z, r18
    4f7e:	6d c0       	rjmp	.+218    	; 0x505a <__stack+0x3f5b>
	else if (__tmp > 65535)
    4f80:	ce 01       	movw	r24, r28
    4f82:	8d 51       	subi	r24, 0x1D	; 29
    4f84:	9f 4f       	sbci	r25, 0xFF	; 255
    4f86:	20 e0       	ldi	r18, 0x00	; 0
    4f88:	3f ef       	ldi	r19, 0xFF	; 255
    4f8a:	4f e7       	ldi	r20, 0x7F	; 127
    4f8c:	57 e4       	ldi	r21, 0x47	; 71
    4f8e:	fc 01       	movw	r30, r24
    4f90:	60 81       	ld	r22, Z
    4f92:	71 81       	ldd	r23, Z+1	; 0x01
    4f94:	82 81       	ldd	r24, Z+2	; 0x02
    4f96:	93 81       	ldd	r25, Z+3	; 0x03
    4f98:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    4f9c:	18 16       	cp	r1, r24
    4f9e:	0c f0       	brlt	.+2      	; 0x4fa2 <__stack+0x3ea3>
    4fa0:	4a c0       	rjmp	.+148    	; 0x5036 <__stack+0x3f37>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4fa2:	ce 01       	movw	r24, r28
    4fa4:	83 54       	subi	r24, 0x43	; 67
    4fa6:	9f 4f       	sbci	r25, 0xFF	; 255
    4fa8:	20 e0       	ldi	r18, 0x00	; 0
    4faa:	30 e0       	ldi	r19, 0x00	; 0
    4fac:	40 e2       	ldi	r20, 0x20	; 32
    4fae:	51 e4       	ldi	r21, 0x41	; 65
    4fb0:	fc 01       	movw	r30, r24
    4fb2:	60 81       	ld	r22, Z
    4fb4:	71 81       	ldd	r23, Z+1	; 0x01
    4fb6:	82 81       	ldd	r24, Z+2	; 0x02
    4fb8:	93 81       	ldd	r25, Z+3	; 0x03
    4fba:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    4fbe:	dc 01       	movw	r26, r24
    4fc0:	cb 01       	movw	r24, r22
    4fc2:	8e 01       	movw	r16, r28
    4fc4:	09 51       	subi	r16, 0x19	; 25
    4fc6:	1f 4f       	sbci	r17, 0xFF	; 255
    4fc8:	bc 01       	movw	r22, r24
    4fca:	cd 01       	movw	r24, r26
    4fcc:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    4fd0:	dc 01       	movw	r26, r24
    4fd2:	cb 01       	movw	r24, r22
    4fd4:	f8 01       	movw	r30, r16
    4fd6:	91 83       	std	Z+1, r25	; 0x01
    4fd8:	80 83       	st	Z, r24
    4fda:	24 c0       	rjmp	.+72     	; 0x5024 <__stack+0x3f25>
    4fdc:	ce 01       	movw	r24, r28
    4fde:	87 51       	subi	r24, 0x17	; 23
    4fe0:	9f 4f       	sbci	r25, 0xFF	; 255
    4fe2:	20 e9       	ldi	r18, 0x90	; 144
    4fe4:	31 e0       	ldi	r19, 0x01	; 1
    4fe6:	fc 01       	movw	r30, r24
    4fe8:	31 83       	std	Z+1, r19	; 0x01
    4fea:	20 83       	st	Z, r18
    4fec:	ce 01       	movw	r24, r28
    4fee:	87 51       	subi	r24, 0x17	; 23
    4ff0:	9f 4f       	sbci	r25, 0xFF	; 255
    4ff2:	fc 01       	movw	r30, r24
    4ff4:	80 81       	ld	r24, Z
    4ff6:	91 81       	ldd	r25, Z+1	; 0x01
    4ff8:	01 97       	sbiw	r24, 0x01	; 1
    4ffa:	f1 f7       	brne	.-4      	; 0x4ff8 <__stack+0x3ef9>
    4ffc:	9e 01       	movw	r18, r28
    4ffe:	27 51       	subi	r18, 0x17	; 23
    5000:	3f 4f       	sbci	r19, 0xFF	; 255
    5002:	f9 01       	movw	r30, r18
    5004:	91 83       	std	Z+1, r25	; 0x01
    5006:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5008:	ce 01       	movw	r24, r28
    500a:	89 51       	subi	r24, 0x19	; 25
    500c:	9f 4f       	sbci	r25, 0xFF	; 255
    500e:	9e 01       	movw	r18, r28
    5010:	29 51       	subi	r18, 0x19	; 25
    5012:	3f 4f       	sbci	r19, 0xFF	; 255
    5014:	f9 01       	movw	r30, r18
    5016:	20 81       	ld	r18, Z
    5018:	31 81       	ldd	r19, Z+1	; 0x01
    501a:	21 50       	subi	r18, 0x01	; 1
    501c:	31 09       	sbc	r19, r1
    501e:	fc 01       	movw	r30, r24
    5020:	31 83       	std	Z+1, r19	; 0x01
    5022:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5024:	ce 01       	movw	r24, r28
    5026:	89 51       	subi	r24, 0x19	; 25
    5028:	9f 4f       	sbci	r25, 0xFF	; 255
    502a:	fc 01       	movw	r30, r24
    502c:	80 81       	ld	r24, Z
    502e:	91 81       	ldd	r25, Z+1	; 0x01
    5030:	89 2b       	or	r24, r25
    5032:	a1 f6       	brne	.-88     	; 0x4fdc <__stack+0x3edd>
    5034:	2c c0       	rjmp	.+88     	; 0x508e <__stack+0x3f8f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5036:	8e 01       	movw	r16, r28
    5038:	09 51       	subi	r16, 0x19	; 25
    503a:	1f 4f       	sbci	r17, 0xFF	; 255
    503c:	ce 01       	movw	r24, r28
    503e:	8d 51       	subi	r24, 0x1D	; 29
    5040:	9f 4f       	sbci	r25, 0xFF	; 255
    5042:	fc 01       	movw	r30, r24
    5044:	60 81       	ld	r22, Z
    5046:	71 81       	ldd	r23, Z+1	; 0x01
    5048:	82 81       	ldd	r24, Z+2	; 0x02
    504a:	93 81       	ldd	r25, Z+3	; 0x03
    504c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    5050:	dc 01       	movw	r26, r24
    5052:	cb 01       	movw	r24, r22
    5054:	f8 01       	movw	r30, r16
    5056:	91 83       	std	Z+1, r25	; 0x01
    5058:	80 83       	st	Z, r24
    505a:	ce 01       	movw	r24, r28
    505c:	85 51       	subi	r24, 0x15	; 21
    505e:	9f 4f       	sbci	r25, 0xFF	; 255
    5060:	9e 01       	movw	r18, r28
    5062:	29 51       	subi	r18, 0x19	; 25
    5064:	3f 4f       	sbci	r19, 0xFF	; 255
    5066:	f9 01       	movw	r30, r18
    5068:	20 81       	ld	r18, Z
    506a:	31 81       	ldd	r19, Z+1	; 0x01
    506c:	fc 01       	movw	r30, r24
    506e:	31 83       	std	Z+1, r19	; 0x01
    5070:	20 83       	st	Z, r18
    5072:	ce 01       	movw	r24, r28
    5074:	85 51       	subi	r24, 0x15	; 21
    5076:	9f 4f       	sbci	r25, 0xFF	; 255
    5078:	fc 01       	movw	r30, r24
    507a:	80 81       	ld	r24, Z
    507c:	91 81       	ldd	r25, Z+1	; 0x01
    507e:	01 97       	sbiw	r24, 0x01	; 1
    5080:	f1 f7       	brne	.-4      	; 0x507e <__stack+0x3f7f>
    5082:	9e 01       	movw	r18, r28
    5084:	25 51       	subi	r18, 0x15	; 21
    5086:	3f 4f       	sbci	r19, 0xFF	; 255
    5088:	f9 01       	movw	r30, r18
    508a:	91 83       	std	Z+1, r25	; 0x01
    508c:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F620 T150\n");
    508e:	8f ed       	ldi	r24, 0xDF	; 223
    5090:	92 e0       	ldi	r25, 0x02	; 2
    5092:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    5096:	9e 01       	movw	r18, r28
    5098:	2b 52       	subi	r18, 0x2B	; 43
    509a:	3f 4f       	sbci	r19, 0xFF	; 255
    509c:	80 e0       	ldi	r24, 0x00	; 0
    509e:	90 e0       	ldi	r25, 0x00	; 0
    50a0:	a6 e9       	ldi	r26, 0x96	; 150
    50a2:	b3 e4       	ldi	r27, 0x43	; 67
    50a4:	f9 01       	movw	r30, r18
    50a6:	80 83       	st	Z, r24
    50a8:	91 83       	std	Z+1, r25	; 0x01
    50aa:	a2 83       	std	Z+2, r26	; 0x02
    50ac:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    50ae:	8e 01       	movw	r16, r28
    50b0:	07 52       	subi	r16, 0x27	; 39
    50b2:	1f 4f       	sbci	r17, 0xFF	; 255
    50b4:	ce 01       	movw	r24, r28
    50b6:	8b 52       	subi	r24, 0x2B	; 43
    50b8:	9f 4f       	sbci	r25, 0xFF	; 255
    50ba:	20 e0       	ldi	r18, 0x00	; 0
    50bc:	30 e0       	ldi	r19, 0x00	; 0
    50be:	4a e7       	ldi	r20, 0x7A	; 122
    50c0:	55 e4       	ldi	r21, 0x45	; 69
    50c2:	fc 01       	movw	r30, r24
    50c4:	60 81       	ld	r22, Z
    50c6:	71 81       	ldd	r23, Z+1	; 0x01
    50c8:	82 81       	ldd	r24, Z+2	; 0x02
    50ca:	93 81       	ldd	r25, Z+3	; 0x03
    50cc:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    50d0:	dc 01       	movw	r26, r24
    50d2:	cb 01       	movw	r24, r22
    50d4:	f8 01       	movw	r30, r16
    50d6:	80 83       	st	Z, r24
    50d8:	91 83       	std	Z+1, r25	; 0x01
    50da:	a2 83       	std	Z+2, r26	; 0x02
    50dc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    50de:	ce 01       	movw	r24, r28
    50e0:	87 52       	subi	r24, 0x27	; 39
    50e2:	9f 4f       	sbci	r25, 0xFF	; 255
    50e4:	20 e0       	ldi	r18, 0x00	; 0
    50e6:	30 e0       	ldi	r19, 0x00	; 0
    50e8:	40 e8       	ldi	r20, 0x80	; 128
    50ea:	5f e3       	ldi	r21, 0x3F	; 63
    50ec:	fc 01       	movw	r30, r24
    50ee:	60 81       	ld	r22, Z
    50f0:	71 81       	ldd	r23, Z+1	; 0x01
    50f2:	82 81       	ldd	r24, Z+2	; 0x02
    50f4:	93 81       	ldd	r25, Z+3	; 0x03
    50f6:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    50fa:	88 23       	and	r24, r24
    50fc:	4c f4       	brge	.+18     	; 0x5110 <__stack+0x4011>
		__ticks = 1;
    50fe:	ce 01       	movw	r24, r28
    5100:	83 52       	subi	r24, 0x23	; 35
    5102:	9f 4f       	sbci	r25, 0xFF	; 255
    5104:	21 e0       	ldi	r18, 0x01	; 1
    5106:	30 e0       	ldi	r19, 0x00	; 0
    5108:	fc 01       	movw	r30, r24
    510a:	31 83       	std	Z+1, r19	; 0x01
    510c:	20 83       	st	Z, r18
    510e:	6d c0       	rjmp	.+218    	; 0x51ea <__stack+0x40eb>
	else if (__tmp > 65535)
    5110:	ce 01       	movw	r24, r28
    5112:	87 52       	subi	r24, 0x27	; 39
    5114:	9f 4f       	sbci	r25, 0xFF	; 255
    5116:	20 e0       	ldi	r18, 0x00	; 0
    5118:	3f ef       	ldi	r19, 0xFF	; 255
    511a:	4f e7       	ldi	r20, 0x7F	; 127
    511c:	57 e4       	ldi	r21, 0x47	; 71
    511e:	fc 01       	movw	r30, r24
    5120:	60 81       	ld	r22, Z
    5122:	71 81       	ldd	r23, Z+1	; 0x01
    5124:	82 81       	ldd	r24, Z+2	; 0x02
    5126:	93 81       	ldd	r25, Z+3	; 0x03
    5128:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    512c:	18 16       	cp	r1, r24
    512e:	0c f0       	brlt	.+2      	; 0x5132 <__stack+0x4033>
    5130:	4a c0       	rjmp	.+148    	; 0x51c6 <__stack+0x40c7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5132:	ce 01       	movw	r24, r28
    5134:	8b 52       	subi	r24, 0x2B	; 43
    5136:	9f 4f       	sbci	r25, 0xFF	; 255
    5138:	20 e0       	ldi	r18, 0x00	; 0
    513a:	30 e0       	ldi	r19, 0x00	; 0
    513c:	40 e2       	ldi	r20, 0x20	; 32
    513e:	51 e4       	ldi	r21, 0x41	; 65
    5140:	fc 01       	movw	r30, r24
    5142:	60 81       	ld	r22, Z
    5144:	71 81       	ldd	r23, Z+1	; 0x01
    5146:	82 81       	ldd	r24, Z+2	; 0x02
    5148:	93 81       	ldd	r25, Z+3	; 0x03
    514a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    514e:	dc 01       	movw	r26, r24
    5150:	cb 01       	movw	r24, r22
    5152:	8e 01       	movw	r16, r28
    5154:	03 52       	subi	r16, 0x23	; 35
    5156:	1f 4f       	sbci	r17, 0xFF	; 255
    5158:	bc 01       	movw	r22, r24
    515a:	cd 01       	movw	r24, r26
    515c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    5160:	dc 01       	movw	r26, r24
    5162:	cb 01       	movw	r24, r22
    5164:	f8 01       	movw	r30, r16
    5166:	91 83       	std	Z+1, r25	; 0x01
    5168:	80 83       	st	Z, r24
    516a:	24 c0       	rjmp	.+72     	; 0x51b4 <__stack+0x40b5>
    516c:	ce 01       	movw	r24, r28
    516e:	81 52       	subi	r24, 0x21	; 33
    5170:	9f 4f       	sbci	r25, 0xFF	; 255
    5172:	20 e9       	ldi	r18, 0x90	; 144
    5174:	31 e0       	ldi	r19, 0x01	; 1
    5176:	fc 01       	movw	r30, r24
    5178:	31 83       	std	Z+1, r19	; 0x01
    517a:	20 83       	st	Z, r18
    517c:	ce 01       	movw	r24, r28
    517e:	81 52       	subi	r24, 0x21	; 33
    5180:	9f 4f       	sbci	r25, 0xFF	; 255
    5182:	fc 01       	movw	r30, r24
    5184:	80 81       	ld	r24, Z
    5186:	91 81       	ldd	r25, Z+1	; 0x01
    5188:	01 97       	sbiw	r24, 0x01	; 1
    518a:	f1 f7       	brne	.-4      	; 0x5188 <__stack+0x4089>
    518c:	9e 01       	movw	r18, r28
    518e:	21 52       	subi	r18, 0x21	; 33
    5190:	3f 4f       	sbci	r19, 0xFF	; 255
    5192:	f9 01       	movw	r30, r18
    5194:	91 83       	std	Z+1, r25	; 0x01
    5196:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5198:	ce 01       	movw	r24, r28
    519a:	83 52       	subi	r24, 0x23	; 35
    519c:	9f 4f       	sbci	r25, 0xFF	; 255
    519e:	9e 01       	movw	r18, r28
    51a0:	23 52       	subi	r18, 0x23	; 35
    51a2:	3f 4f       	sbci	r19, 0xFF	; 255
    51a4:	f9 01       	movw	r30, r18
    51a6:	20 81       	ld	r18, Z
    51a8:	31 81       	ldd	r19, Z+1	; 0x01
    51aa:	21 50       	subi	r18, 0x01	; 1
    51ac:	31 09       	sbc	r19, r1
    51ae:	fc 01       	movw	r30, r24
    51b0:	31 83       	std	Z+1, r19	; 0x01
    51b2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    51b4:	ce 01       	movw	r24, r28
    51b6:	83 52       	subi	r24, 0x23	; 35
    51b8:	9f 4f       	sbci	r25, 0xFF	; 255
    51ba:	fc 01       	movw	r30, r24
    51bc:	80 81       	ld	r24, Z
    51be:	91 81       	ldd	r25, Z+1	; 0x01
    51c0:	89 2b       	or	r24, r25
    51c2:	a1 f6       	brne	.-88     	; 0x516c <__stack+0x406d>
    51c4:	2c c0       	rjmp	.+88     	; 0x521e <__stack+0x411f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    51c6:	8e 01       	movw	r16, r28
    51c8:	03 52       	subi	r16, 0x23	; 35
    51ca:	1f 4f       	sbci	r17, 0xFF	; 255
    51cc:	ce 01       	movw	r24, r28
    51ce:	87 52       	subi	r24, 0x27	; 39
    51d0:	9f 4f       	sbci	r25, 0xFF	; 255
    51d2:	fc 01       	movw	r30, r24
    51d4:	60 81       	ld	r22, Z
    51d6:	71 81       	ldd	r23, Z+1	; 0x01
    51d8:	82 81       	ldd	r24, Z+2	; 0x02
    51da:	93 81       	ldd	r25, Z+3	; 0x03
    51dc:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    51e0:	dc 01       	movw	r26, r24
    51e2:	cb 01       	movw	r24, r22
    51e4:	f8 01       	movw	r30, r16
    51e6:	91 83       	std	Z+1, r25	; 0x01
    51e8:	80 83       	st	Z, r24
    51ea:	ce 01       	movw	r24, r28
    51ec:	8f 51       	subi	r24, 0x1F	; 31
    51ee:	9f 4f       	sbci	r25, 0xFF	; 255
    51f0:	9e 01       	movw	r18, r28
    51f2:	23 52       	subi	r18, 0x23	; 35
    51f4:	3f 4f       	sbci	r19, 0xFF	; 255
    51f6:	f9 01       	movw	r30, r18
    51f8:	20 81       	ld	r18, Z
    51fa:	31 81       	ldd	r19, Z+1	; 0x01
    51fc:	fc 01       	movw	r30, r24
    51fe:	31 83       	std	Z+1, r19	; 0x01
    5200:	20 83       	st	Z, r18
    5202:	ce 01       	movw	r24, r28
    5204:	8f 51       	subi	r24, 0x1F	; 31
    5206:	9f 4f       	sbci	r25, 0xFF	; 255
    5208:	fc 01       	movw	r30, r24
    520a:	80 81       	ld	r24, Z
    520c:	91 81       	ldd	r25, Z+1	; 0x01
    520e:	01 97       	sbiw	r24, 0x01	; 1
    5210:	f1 f7       	brne	.-4      	; 0x520e <__stack+0x410f>
    5212:	9e 01       	movw	r18, r28
    5214:	2f 51       	subi	r18, 0x1F	; 31
    5216:	3f 4f       	sbci	r19, 0xFF	; 255
    5218:	f9 01       	movw	r30, r18
    521a:	91 83       	std	Z+1, r25	; 0x01
    521c:	80 83       	st	Z, r24
			//_delay_ms(150);
			//to_uARM("M2210 F430 T100\n");
			//_delay_ms(150);
		}
		
		if (taster&0x08)
    521e:	88 85       	ldd	r24, Y+8	; 0x08
    5220:	88 2f       	mov	r24, r24
    5222:	90 e0       	ldi	r25, 0x00	; 0
    5224:	88 70       	andi	r24, 0x08	; 8
    5226:	99 27       	eor	r25, r25
    5228:	89 2b       	or	r24, r25
    522a:	09 f4       	brne	.+2      	; 0x522e <__stack+0x412f>
    522c:	9e c1       	rjmp	.+828    	; 0x556a <__stack+0x446b>
		{
			send_to_uArm("G0 X200 Y0 Z150 F1000\n");			//ausgansgpkt	(200 0 150)
    522e:	80 ef       	ldi	r24, 0xF0	; 240
    5230:	92 e0       	ldi	r25, 0x02	; 2
    5232:	0e 94 85 03 	call	0x70a	; 0x70a <send_to_uArm>
			while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    5236:	04 c0       	rjmp	.+8      	; 0x5240 <__stack+0x4141>
			{
				to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
    5238:	80 e0       	ldi	r24, 0x00	; 0
    523a:	91 e0       	ldi	r25, 0x01	; 1
    523c:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
		}
		
		if (taster&0x08)
		{
			send_to_uArm("G0 X200 Y0 Z150 F1000\n");			//ausgansgpkt	(200 0 150)
			while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    5240:	80 91 87 03 	lds	r24, 0x0387	; 0x800387 <uart_string1+0x4>
    5244:	81 33       	cpi	r24, 0x31	; 49
    5246:	c1 f3       	breq	.-16     	; 0x5238 <__stack+0x4139>
			{
				to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
			}
			//to_uARM("M2210 F2000 T200\n");
			if (DIP_Switch&0x01)
    5248:	80 91 7e 03 	lds	r24, 0x037E	; 0x80037e <__data_end>
    524c:	88 2f       	mov	r24, r24
    524e:	90 e0       	ldi	r25, 0x00	; 0
    5250:	81 70       	andi	r24, 0x01	; 1
    5252:	99 27       	eor	r25, r25
    5254:	89 2b       	or	r24, r25
    5256:	09 f4       	brne	.+2      	; 0x525a <__stack+0x415b>
    5258:	88 c1       	rjmp	.+784    	; 0x556a <__stack+0x446b>
			{
				to_uARM("M2210 F500 T200\n");
    525a:	8e e5       	ldi	r24, 0x5E	; 94
    525c:	91 e0       	ldi	r25, 0x01	; 1
    525e:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    5262:	9e 01       	movw	r18, r28
    5264:	2f 52       	subi	r18, 0x2F	; 47
    5266:	3f 4f       	sbci	r19, 0xFF	; 255
    5268:	80 e0       	ldi	r24, 0x00	; 0
    526a:	90 e0       	ldi	r25, 0x00	; 0
    526c:	a8 e4       	ldi	r26, 0x48	; 72
    526e:	b3 e4       	ldi	r27, 0x43	; 67
    5270:	f9 01       	movw	r30, r18
    5272:	80 83       	st	Z, r24
    5274:	91 83       	std	Z+1, r25	; 0x01
    5276:	a2 83       	std	Z+2, r26	; 0x02
    5278:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    527a:	8e 01       	movw	r16, r28
    527c:	01 55       	subi	r16, 0x51	; 81
    527e:	1d 4f       	sbci	r17, 0xFD	; 253
    5280:	ce 01       	movw	r24, r28
    5282:	8f 52       	subi	r24, 0x2F	; 47
    5284:	9f 4f       	sbci	r25, 0xFF	; 255
    5286:	20 e0       	ldi	r18, 0x00	; 0
    5288:	30 e0       	ldi	r19, 0x00	; 0
    528a:	4a e7       	ldi	r20, 0x7A	; 122
    528c:	55 e4       	ldi	r21, 0x45	; 69
    528e:	fc 01       	movw	r30, r24
    5290:	60 81       	ld	r22, Z
    5292:	71 81       	ldd	r23, Z+1	; 0x01
    5294:	82 81       	ldd	r24, Z+2	; 0x02
    5296:	93 81       	ldd	r25, Z+3	; 0x03
    5298:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    529c:	dc 01       	movw	r26, r24
    529e:	cb 01       	movw	r24, r22
    52a0:	f8 01       	movw	r30, r16
    52a2:	80 83       	st	Z, r24
    52a4:	91 83       	std	Z+1, r25	; 0x01
    52a6:	a2 83       	std	Z+2, r26	; 0x02
    52a8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    52aa:	ce 01       	movw	r24, r28
    52ac:	81 55       	subi	r24, 0x51	; 81
    52ae:	9d 4f       	sbci	r25, 0xFD	; 253
    52b0:	20 e0       	ldi	r18, 0x00	; 0
    52b2:	30 e0       	ldi	r19, 0x00	; 0
    52b4:	40 e8       	ldi	r20, 0x80	; 128
    52b6:	5f e3       	ldi	r21, 0x3F	; 63
    52b8:	fc 01       	movw	r30, r24
    52ba:	60 81       	ld	r22, Z
    52bc:	71 81       	ldd	r23, Z+1	; 0x01
    52be:	82 81       	ldd	r24, Z+2	; 0x02
    52c0:	93 81       	ldd	r25, Z+3	; 0x03
    52c2:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    52c6:	88 23       	and	r24, r24
    52c8:	4c f4       	brge	.+18     	; 0x52dc <__stack+0x41dd>
		__ticks = 1;
    52ca:	ce 01       	movw	r24, r28
    52cc:	8d 54       	subi	r24, 0x4D	; 77
    52ce:	9d 4f       	sbci	r25, 0xFD	; 253
    52d0:	21 e0       	ldi	r18, 0x01	; 1
    52d2:	30 e0       	ldi	r19, 0x00	; 0
    52d4:	fc 01       	movw	r30, r24
    52d6:	31 83       	std	Z+1, r19	; 0x01
    52d8:	20 83       	st	Z, r18
    52da:	6d c0       	rjmp	.+218    	; 0x53b6 <__stack+0x42b7>
	else if (__tmp > 65535)
    52dc:	ce 01       	movw	r24, r28
    52de:	81 55       	subi	r24, 0x51	; 81
    52e0:	9d 4f       	sbci	r25, 0xFD	; 253
    52e2:	20 e0       	ldi	r18, 0x00	; 0
    52e4:	3f ef       	ldi	r19, 0xFF	; 255
    52e6:	4f e7       	ldi	r20, 0x7F	; 127
    52e8:	57 e4       	ldi	r21, 0x47	; 71
    52ea:	fc 01       	movw	r30, r24
    52ec:	60 81       	ld	r22, Z
    52ee:	71 81       	ldd	r23, Z+1	; 0x01
    52f0:	82 81       	ldd	r24, Z+2	; 0x02
    52f2:	93 81       	ldd	r25, Z+3	; 0x03
    52f4:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    52f8:	18 16       	cp	r1, r24
    52fa:	0c f0       	brlt	.+2      	; 0x52fe <__stack+0x41ff>
    52fc:	4a c0       	rjmp	.+148    	; 0x5392 <__stack+0x4293>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    52fe:	ce 01       	movw	r24, r28
    5300:	8f 52       	subi	r24, 0x2F	; 47
    5302:	9f 4f       	sbci	r25, 0xFF	; 255
    5304:	20 e0       	ldi	r18, 0x00	; 0
    5306:	30 e0       	ldi	r19, 0x00	; 0
    5308:	40 e2       	ldi	r20, 0x20	; 32
    530a:	51 e4       	ldi	r21, 0x41	; 65
    530c:	fc 01       	movw	r30, r24
    530e:	60 81       	ld	r22, Z
    5310:	71 81       	ldd	r23, Z+1	; 0x01
    5312:	82 81       	ldd	r24, Z+2	; 0x02
    5314:	93 81       	ldd	r25, Z+3	; 0x03
    5316:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    531a:	dc 01       	movw	r26, r24
    531c:	cb 01       	movw	r24, r22
    531e:	8e 01       	movw	r16, r28
    5320:	0d 54       	subi	r16, 0x4D	; 77
    5322:	1d 4f       	sbci	r17, 0xFD	; 253
    5324:	bc 01       	movw	r22, r24
    5326:	cd 01       	movw	r24, r26
    5328:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    532c:	dc 01       	movw	r26, r24
    532e:	cb 01       	movw	r24, r22
    5330:	f8 01       	movw	r30, r16
    5332:	91 83       	std	Z+1, r25	; 0x01
    5334:	80 83       	st	Z, r24
    5336:	24 c0       	rjmp	.+72     	; 0x5380 <__stack+0x4281>
    5338:	ce 01       	movw	r24, r28
    533a:	8b 54       	subi	r24, 0x4B	; 75
    533c:	9d 4f       	sbci	r25, 0xFD	; 253
    533e:	20 e9       	ldi	r18, 0x90	; 144
    5340:	31 e0       	ldi	r19, 0x01	; 1
    5342:	fc 01       	movw	r30, r24
    5344:	31 83       	std	Z+1, r19	; 0x01
    5346:	20 83       	st	Z, r18
    5348:	ce 01       	movw	r24, r28
    534a:	8b 54       	subi	r24, 0x4B	; 75
    534c:	9d 4f       	sbci	r25, 0xFD	; 253
    534e:	fc 01       	movw	r30, r24
    5350:	80 81       	ld	r24, Z
    5352:	91 81       	ldd	r25, Z+1	; 0x01
    5354:	01 97       	sbiw	r24, 0x01	; 1
    5356:	f1 f7       	brne	.-4      	; 0x5354 <__stack+0x4255>
    5358:	9e 01       	movw	r18, r28
    535a:	2b 54       	subi	r18, 0x4B	; 75
    535c:	3d 4f       	sbci	r19, 0xFD	; 253
    535e:	f9 01       	movw	r30, r18
    5360:	91 83       	std	Z+1, r25	; 0x01
    5362:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5364:	ce 01       	movw	r24, r28
    5366:	8d 54       	subi	r24, 0x4D	; 77
    5368:	9d 4f       	sbci	r25, 0xFD	; 253
    536a:	9e 01       	movw	r18, r28
    536c:	2d 54       	subi	r18, 0x4D	; 77
    536e:	3d 4f       	sbci	r19, 0xFD	; 253
    5370:	f9 01       	movw	r30, r18
    5372:	20 81       	ld	r18, Z
    5374:	31 81       	ldd	r19, Z+1	; 0x01
    5376:	21 50       	subi	r18, 0x01	; 1
    5378:	31 09       	sbc	r19, r1
    537a:	fc 01       	movw	r30, r24
    537c:	31 83       	std	Z+1, r19	; 0x01
    537e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5380:	ce 01       	movw	r24, r28
    5382:	8d 54       	subi	r24, 0x4D	; 77
    5384:	9d 4f       	sbci	r25, 0xFD	; 253
    5386:	fc 01       	movw	r30, r24
    5388:	80 81       	ld	r24, Z
    538a:	91 81       	ldd	r25, Z+1	; 0x01
    538c:	89 2b       	or	r24, r25
    538e:	a1 f6       	brne	.-88     	; 0x5338 <__stack+0x4239>
    5390:	2c c0       	rjmp	.+88     	; 0x53ea <__stack+0x42eb>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5392:	8e 01       	movw	r16, r28
    5394:	0d 54       	subi	r16, 0x4D	; 77
    5396:	1d 4f       	sbci	r17, 0xFD	; 253
    5398:	ce 01       	movw	r24, r28
    539a:	81 55       	subi	r24, 0x51	; 81
    539c:	9d 4f       	sbci	r25, 0xFD	; 253
    539e:	fc 01       	movw	r30, r24
    53a0:	60 81       	ld	r22, Z
    53a2:	71 81       	ldd	r23, Z+1	; 0x01
    53a4:	82 81       	ldd	r24, Z+2	; 0x02
    53a6:	93 81       	ldd	r25, Z+3	; 0x03
    53a8:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    53ac:	dc 01       	movw	r26, r24
    53ae:	cb 01       	movw	r24, r22
    53b0:	f8 01       	movw	r30, r16
    53b2:	91 83       	std	Z+1, r25	; 0x01
    53b4:	80 83       	st	Z, r24
    53b6:	ce 01       	movw	r24, r28
    53b8:	89 54       	subi	r24, 0x49	; 73
    53ba:	9d 4f       	sbci	r25, 0xFD	; 253
    53bc:	9e 01       	movw	r18, r28
    53be:	2d 54       	subi	r18, 0x4D	; 77
    53c0:	3d 4f       	sbci	r19, 0xFD	; 253
    53c2:	f9 01       	movw	r30, r18
    53c4:	20 81       	ld	r18, Z
    53c6:	31 81       	ldd	r19, Z+1	; 0x01
    53c8:	fc 01       	movw	r30, r24
    53ca:	31 83       	std	Z+1, r19	; 0x01
    53cc:	20 83       	st	Z, r18
    53ce:	ce 01       	movw	r24, r28
    53d0:	89 54       	subi	r24, 0x49	; 73
    53d2:	9d 4f       	sbci	r25, 0xFD	; 253
    53d4:	fc 01       	movw	r30, r24
    53d6:	80 81       	ld	r24, Z
    53d8:	91 81       	ldd	r25, Z+1	; 0x01
    53da:	01 97       	sbiw	r24, 0x01	; 1
    53dc:	f1 f7       	brne	.-4      	; 0x53da <__stack+0x42db>
    53de:	9e 01       	movw	r18, r28
    53e0:	29 54       	subi	r18, 0x49	; 73
    53e2:	3d 4f       	sbci	r19, 0xFD	; 253
    53e4:	f9 01       	movw	r30, r18
    53e6:	91 83       	std	Z+1, r25	; 0x01
    53e8:	80 83       	st	Z, r24
				_delay_ms(200);
				to_uARM("M2210 F1000 T500\n");
    53ea:	8f e6       	ldi	r24, 0x6F	; 111
    53ec:	91 e0       	ldi	r25, 0x01	; 1
    53ee:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    53f2:	80 e0       	ldi	r24, 0x00	; 0
    53f4:	90 e0       	ldi	r25, 0x00	; 0
    53f6:	aa ef       	ldi	r26, 0xFA	; 250
    53f8:	b3 e4       	ldi	r27, 0x43	; 67
    53fa:	89 87       	std	Y+9, r24	; 0x09
    53fc:	9a 87       	std	Y+10, r25	; 0x0a
    53fe:	ab 87       	std	Y+11, r26	; 0x0b
    5400:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    5402:	8e 01       	movw	r16, r28
    5404:	0b 55       	subi	r16, 0x5B	; 91
    5406:	1d 4f       	sbci	r17, 0xFD	; 253
    5408:	20 e0       	ldi	r18, 0x00	; 0
    540a:	30 e0       	ldi	r19, 0x00	; 0
    540c:	4a e7       	ldi	r20, 0x7A	; 122
    540e:	55 e4       	ldi	r21, 0x45	; 69
    5410:	69 85       	ldd	r22, Y+9	; 0x09
    5412:	7a 85       	ldd	r23, Y+10	; 0x0a
    5414:	8b 85       	ldd	r24, Y+11	; 0x0b
    5416:	9c 85       	ldd	r25, Y+12	; 0x0c
    5418:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    541c:	dc 01       	movw	r26, r24
    541e:	cb 01       	movw	r24, r22
    5420:	f8 01       	movw	r30, r16
    5422:	80 83       	st	Z, r24
    5424:	91 83       	std	Z+1, r25	; 0x01
    5426:	a2 83       	std	Z+2, r26	; 0x02
    5428:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    542a:	ce 01       	movw	r24, r28
    542c:	8b 55       	subi	r24, 0x5B	; 91
    542e:	9d 4f       	sbci	r25, 0xFD	; 253
    5430:	20 e0       	ldi	r18, 0x00	; 0
    5432:	30 e0       	ldi	r19, 0x00	; 0
    5434:	40 e8       	ldi	r20, 0x80	; 128
    5436:	5f e3       	ldi	r21, 0x3F	; 63
    5438:	fc 01       	movw	r30, r24
    543a:	60 81       	ld	r22, Z
    543c:	71 81       	ldd	r23, Z+1	; 0x01
    543e:	82 81       	ldd	r24, Z+2	; 0x02
    5440:	93 81       	ldd	r25, Z+3	; 0x03
    5442:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    5446:	88 23       	and	r24, r24
    5448:	4c f4       	brge	.+18     	; 0x545c <__stack+0x435d>
		__ticks = 1;
    544a:	ce 01       	movw	r24, r28
    544c:	87 55       	subi	r24, 0x57	; 87
    544e:	9d 4f       	sbci	r25, 0xFD	; 253
    5450:	21 e0       	ldi	r18, 0x01	; 1
    5452:	30 e0       	ldi	r19, 0x00	; 0
    5454:	fc 01       	movw	r30, r24
    5456:	31 83       	std	Z+1, r19	; 0x01
    5458:	20 83       	st	Z, r18
    545a:	69 c0       	rjmp	.+210    	; 0x552e <__stack+0x442f>
	else if (__tmp > 65535)
    545c:	ce 01       	movw	r24, r28
    545e:	8b 55       	subi	r24, 0x5B	; 91
    5460:	9d 4f       	sbci	r25, 0xFD	; 253
    5462:	20 e0       	ldi	r18, 0x00	; 0
    5464:	3f ef       	ldi	r19, 0xFF	; 255
    5466:	4f e7       	ldi	r20, 0x7F	; 127
    5468:	57 e4       	ldi	r21, 0x47	; 71
    546a:	fc 01       	movw	r30, r24
    546c:	60 81       	ld	r22, Z
    546e:	71 81       	ldd	r23, Z+1	; 0x01
    5470:	82 81       	ldd	r24, Z+2	; 0x02
    5472:	93 81       	ldd	r25, Z+3	; 0x03
    5474:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    5478:	18 16       	cp	r1, r24
    547a:	0c f0       	brlt	.+2      	; 0x547e <__stack+0x437f>
    547c:	46 c0       	rjmp	.+140    	; 0x550a <__stack+0x440b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    547e:	20 e0       	ldi	r18, 0x00	; 0
    5480:	30 e0       	ldi	r19, 0x00	; 0
    5482:	40 e2       	ldi	r20, 0x20	; 32
    5484:	51 e4       	ldi	r21, 0x41	; 65
    5486:	69 85       	ldd	r22, Y+9	; 0x09
    5488:	7a 85       	ldd	r23, Y+10	; 0x0a
    548a:	8b 85       	ldd	r24, Y+11	; 0x0b
    548c:	9c 85       	ldd	r25, Y+12	; 0x0c
    548e:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    5492:	dc 01       	movw	r26, r24
    5494:	cb 01       	movw	r24, r22
    5496:	8e 01       	movw	r16, r28
    5498:	07 55       	subi	r16, 0x57	; 87
    549a:	1d 4f       	sbci	r17, 0xFD	; 253
    549c:	bc 01       	movw	r22, r24
    549e:	cd 01       	movw	r24, r26
    54a0:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    54a4:	dc 01       	movw	r26, r24
    54a6:	cb 01       	movw	r24, r22
    54a8:	f8 01       	movw	r30, r16
    54aa:	91 83       	std	Z+1, r25	; 0x01
    54ac:	80 83       	st	Z, r24
    54ae:	24 c0       	rjmp	.+72     	; 0x54f8 <__stack+0x43f9>
    54b0:	ce 01       	movw	r24, r28
    54b2:	85 55       	subi	r24, 0x55	; 85
    54b4:	9d 4f       	sbci	r25, 0xFD	; 253
    54b6:	20 e9       	ldi	r18, 0x90	; 144
    54b8:	31 e0       	ldi	r19, 0x01	; 1
    54ba:	fc 01       	movw	r30, r24
    54bc:	31 83       	std	Z+1, r19	; 0x01
    54be:	20 83       	st	Z, r18
    54c0:	ce 01       	movw	r24, r28
    54c2:	85 55       	subi	r24, 0x55	; 85
    54c4:	9d 4f       	sbci	r25, 0xFD	; 253
    54c6:	fc 01       	movw	r30, r24
    54c8:	80 81       	ld	r24, Z
    54ca:	91 81       	ldd	r25, Z+1	; 0x01
    54cc:	01 97       	sbiw	r24, 0x01	; 1
    54ce:	f1 f7       	brne	.-4      	; 0x54cc <__stack+0x43cd>
    54d0:	9e 01       	movw	r18, r28
    54d2:	25 55       	subi	r18, 0x55	; 85
    54d4:	3d 4f       	sbci	r19, 0xFD	; 253
    54d6:	f9 01       	movw	r30, r18
    54d8:	91 83       	std	Z+1, r25	; 0x01
    54da:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    54dc:	ce 01       	movw	r24, r28
    54de:	87 55       	subi	r24, 0x57	; 87
    54e0:	9d 4f       	sbci	r25, 0xFD	; 253
    54e2:	9e 01       	movw	r18, r28
    54e4:	27 55       	subi	r18, 0x57	; 87
    54e6:	3d 4f       	sbci	r19, 0xFD	; 253
    54e8:	f9 01       	movw	r30, r18
    54ea:	20 81       	ld	r18, Z
    54ec:	31 81       	ldd	r19, Z+1	; 0x01
    54ee:	21 50       	subi	r18, 0x01	; 1
    54f0:	31 09       	sbc	r19, r1
    54f2:	fc 01       	movw	r30, r24
    54f4:	31 83       	std	Z+1, r19	; 0x01
    54f6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    54f8:	ce 01       	movw	r24, r28
    54fa:	87 55       	subi	r24, 0x57	; 87
    54fc:	9d 4f       	sbci	r25, 0xFD	; 253
    54fe:	fc 01       	movw	r30, r24
    5500:	80 81       	ld	r24, Z
    5502:	91 81       	ldd	r25, Z+1	; 0x01
    5504:	89 2b       	or	r24, r25
    5506:	a1 f6       	brne	.-88     	; 0x54b0 <__stack+0x43b1>
    5508:	2c c0       	rjmp	.+88     	; 0x5562 <__stack+0x4463>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    550a:	8e 01       	movw	r16, r28
    550c:	07 55       	subi	r16, 0x57	; 87
    550e:	1d 4f       	sbci	r17, 0xFD	; 253
    5510:	ce 01       	movw	r24, r28
    5512:	8b 55       	subi	r24, 0x5B	; 91
    5514:	9d 4f       	sbci	r25, 0xFD	; 253
    5516:	fc 01       	movw	r30, r24
    5518:	60 81       	ld	r22, Z
    551a:	71 81       	ldd	r23, Z+1	; 0x01
    551c:	82 81       	ldd	r24, Z+2	; 0x02
    551e:	93 81       	ldd	r25, Z+3	; 0x03
    5520:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    5524:	dc 01       	movw	r26, r24
    5526:	cb 01       	movw	r24, r22
    5528:	f8 01       	movw	r30, r16
    552a:	91 83       	std	Z+1, r25	; 0x01
    552c:	80 83       	st	Z, r24
    552e:	ce 01       	movw	r24, r28
    5530:	83 55       	subi	r24, 0x53	; 83
    5532:	9d 4f       	sbci	r25, 0xFD	; 253
    5534:	9e 01       	movw	r18, r28
    5536:	27 55       	subi	r18, 0x57	; 87
    5538:	3d 4f       	sbci	r19, 0xFD	; 253
    553a:	f9 01       	movw	r30, r18
    553c:	20 81       	ld	r18, Z
    553e:	31 81       	ldd	r19, Z+1	; 0x01
    5540:	fc 01       	movw	r30, r24
    5542:	31 83       	std	Z+1, r19	; 0x01
    5544:	20 83       	st	Z, r18
    5546:	ce 01       	movw	r24, r28
    5548:	83 55       	subi	r24, 0x53	; 83
    554a:	9d 4f       	sbci	r25, 0xFD	; 253
    554c:	fc 01       	movw	r30, r24
    554e:	80 81       	ld	r24, Z
    5550:	91 81       	ldd	r25, Z+1	; 0x01
    5552:	01 97       	sbiw	r24, 0x01	; 1
    5554:	f1 f7       	brne	.-4      	; 0x5552 <__stack+0x4453>
    5556:	9e 01       	movw	r18, r28
    5558:	23 55       	subi	r18, 0x53	; 83
    555a:	3d 4f       	sbci	r19, 0xFD	; 253
    555c:	f9 01       	movw	r30, r18
    555e:	91 83       	std	Z+1, r25	; 0x01
    5560:	80 83       	st	Z, r24
				_delay_ms(500);
				to_uARM("M2210 F2000 T500\n");
    5562:	81 e8       	ldi	r24, 0x81	; 129
    5564:	91 e0       	ldi	r25, 0x01	; 1
    5566:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
			}
		}
		if (uart_str_complete!=0)
    556a:	80 91 7f 03 	lds	r24, 0x037F	; 0x80037f <uart_str_complete>
    556e:	88 23       	and	r24, r24
    5570:	11 f4       	brne	.+4      	; 0x5576 <__stack+0x4477>
    5572:	0c 94 97 05 	jmp	0xb2e	; 0xb2e <main+0x62>
		{
			routine_done=0;
    5576:	1f 82       	std	Y+7, r1	; 0x07
			uart_str_complete=0;
    5578:	10 92 7f 03 	sts	0x037F, r1	; 0x80037f <uart_str_complete>
			send_Byte_0('1');	
    557c:	81 e3       	ldi	r24, 0x31	; 49
    557e:	0e 94 29 03 	call	0x652	; 0x652 <send_Byte_0>
			for (counter=0;counter<=data_bytes_recieved;counter++)
    5582:	1e 82       	std	Y+6, r1	; 0x06
    5584:	53 c2       	rjmp	.+1190   	; 0x5a2c <__stack+0x492d>
			{
				switch (final_data[counter])//final data decoding
    5586:	8e 81       	ldd	r24, Y+6	; 0x06
    5588:	88 2f       	mov	r24, r24
    558a:	90 e0       	ldi	r25, 0x00	; 0
    558c:	8f 51       	subi	r24, 0x1F	; 31
    558e:	9c 4f       	sbci	r25, 0xFC	; 252
    5590:	fc 01       	movw	r30, r24
    5592:	80 81       	ld	r24, Z
    5594:	88 2f       	mov	r24, r24
    5596:	90 e0       	ldi	r25, 0x00	; 0
    5598:	88 35       	cpi	r24, 0x58	; 88
    559a:	91 05       	cpc	r25, r1
    559c:	49 f0       	breq	.+18     	; 0x55b0 <__stack+0x44b1>
    559e:	89 35       	cpi	r24, 0x59	; 89
    55a0:	91 05       	cpc	r25, r1
    55a2:	09 f4       	brne	.+2      	; 0x55a6 <__stack+0x44a7>
    55a4:	20 c1       	rjmp	.+576    	; 0x57e6 <__stack+0x46e7>
    55a6:	8f 34       	cpi	r24, 0x4F	; 79
    55a8:	91 05       	cpc	r25, r1
    55aa:	09 f4       	brne	.+2      	; 0x55ae <__stack+0x44af>
    55ac:	37 c2       	rjmp	.+1134   	; 0x5a1c <__stack+0x491d>
    55ae:	3b c2       	rjmp	.+1142   	; 0x5a26 <__stack+0x4927>
				{
					case 'X':
						recieved_Y=(final_data[counter+1]-48)*1000+(final_data[counter+2]-48)*100+(final_data[counter+3]-48)*10+final_data[counter+4]-48;
    55b0:	8e 81       	ldd	r24, Y+6	; 0x06
    55b2:	88 2f       	mov	r24, r24
    55b4:	90 e0       	ldi	r25, 0x00	; 0
    55b6:	01 96       	adiw	r24, 0x01	; 1
    55b8:	8f 51       	subi	r24, 0x1F	; 31
    55ba:	9c 4f       	sbci	r25, 0xFC	; 252
    55bc:	fc 01       	movw	r30, r24
    55be:	80 81       	ld	r24, Z
    55c0:	88 2f       	mov	r24, r24
    55c2:	90 e0       	ldi	r25, 0x00	; 0
    55c4:	ac 01       	movw	r20, r24
    55c6:	40 53       	subi	r20, 0x30	; 48
    55c8:	51 09       	sbc	r21, r1
    55ca:	88 ee       	ldi	r24, 0xE8	; 232
    55cc:	93 e0       	ldi	r25, 0x03	; 3
    55ce:	48 9f       	mul	r20, r24
    55d0:	90 01       	movw	r18, r0
    55d2:	49 9f       	mul	r20, r25
    55d4:	30 0d       	add	r19, r0
    55d6:	58 9f       	mul	r21, r24
    55d8:	30 0d       	add	r19, r0
    55da:	11 24       	eor	r1, r1
    55dc:	8e 81       	ldd	r24, Y+6	; 0x06
    55de:	88 2f       	mov	r24, r24
    55e0:	90 e0       	ldi	r25, 0x00	; 0
    55e2:	02 96       	adiw	r24, 0x02	; 2
    55e4:	8f 51       	subi	r24, 0x1F	; 31
    55e6:	9c 4f       	sbci	r25, 0xFC	; 252
    55e8:	fc 01       	movw	r30, r24
    55ea:	80 81       	ld	r24, Z
    55ec:	88 2f       	mov	r24, r24
    55ee:	90 e0       	ldi	r25, 0x00	; 0
    55f0:	ac 01       	movw	r20, r24
    55f2:	40 53       	subi	r20, 0x30	; 48
    55f4:	51 09       	sbc	r21, r1
    55f6:	64 e6       	ldi	r22, 0x64	; 100
    55f8:	64 9f       	mul	r22, r20
    55fa:	c0 01       	movw	r24, r0
    55fc:	65 9f       	mul	r22, r21
    55fe:	90 0d       	add	r25, r0
    5600:	11 24       	eor	r1, r1
    5602:	28 0f       	add	r18, r24
    5604:	39 1f       	adc	r19, r25
    5606:	8e 81       	ldd	r24, Y+6	; 0x06
    5608:	88 2f       	mov	r24, r24
    560a:	90 e0       	ldi	r25, 0x00	; 0
    560c:	03 96       	adiw	r24, 0x03	; 3
    560e:	8f 51       	subi	r24, 0x1F	; 31
    5610:	9c 4f       	sbci	r25, 0xFC	; 252
    5612:	fc 01       	movw	r30, r24
    5614:	80 81       	ld	r24, Z
    5616:	88 2f       	mov	r24, r24
    5618:	90 e0       	ldi	r25, 0x00	; 0
    561a:	c0 97       	sbiw	r24, 0x30	; 48
    561c:	88 0f       	add	r24, r24
    561e:	99 1f       	adc	r25, r25
    5620:	ac 01       	movw	r20, r24
    5622:	44 0f       	add	r20, r20
    5624:	55 1f       	adc	r21, r21
    5626:	44 0f       	add	r20, r20
    5628:	55 1f       	adc	r21, r21
    562a:	84 0f       	add	r24, r20
    562c:	95 1f       	adc	r25, r21
    562e:	28 0f       	add	r18, r24
    5630:	39 1f       	adc	r19, r25
    5632:	8e 81       	ldd	r24, Y+6	; 0x06
    5634:	88 2f       	mov	r24, r24
    5636:	90 e0       	ldi	r25, 0x00	; 0
    5638:	04 96       	adiw	r24, 0x04	; 4
    563a:	8f 51       	subi	r24, 0x1F	; 31
    563c:	9c 4f       	sbci	r25, 0xFC	; 252
    563e:	fc 01       	movw	r30, r24
    5640:	80 81       	ld	r24, Z
    5642:	88 2f       	mov	r24, r24
    5644:	90 e0       	ldi	r25, 0x00	; 0
    5646:	82 0f       	add	r24, r18
    5648:	93 1f       	adc	r25, r19
    564a:	c0 97       	sbiw	r24, 0x30	; 48
    564c:	9c 83       	std	Y+4, r25	; 0x04
    564e:	8b 83       	std	Y+3, r24	; 0x03
						send_Byte_0('1');
    5650:	81 e3       	ldi	r24, 0x31	; 49
    5652:	0e 94 29 03 	call	0x652	; 0x652 <send_Byte_0>
    5656:	9e 01       	movw	r18, r28
    5658:	23 53       	subi	r18, 0x33	; 51
    565a:	3f 4f       	sbci	r19, 0xFF	; 255
    565c:	80 e0       	ldi	r24, 0x00	; 0
    565e:	90 e0       	ldi	r25, 0x00	; 0
    5660:	a0 e0       	ldi	r26, 0x00	; 0
    5662:	b0 e4       	ldi	r27, 0x40	; 64
    5664:	f9 01       	movw	r30, r18
    5666:	80 83       	st	Z, r24
    5668:	91 83       	std	Z+1, r25	; 0x01
    566a:	a2 83       	std	Z+2, r26	; 0x02
    566c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    566e:	8e 01       	movw	r16, r28
    5670:	07 54       	subi	r16, 0x47	; 71
    5672:	1d 4f       	sbci	r17, 0xFD	; 253
    5674:	ce 01       	movw	r24, r28
    5676:	83 53       	subi	r24, 0x33	; 51
    5678:	9f 4f       	sbci	r25, 0xFF	; 255
    567a:	20 e0       	ldi	r18, 0x00	; 0
    567c:	30 e0       	ldi	r19, 0x00	; 0
    567e:	4a e7       	ldi	r20, 0x7A	; 122
    5680:	55 e4       	ldi	r21, 0x45	; 69
    5682:	fc 01       	movw	r30, r24
    5684:	60 81       	ld	r22, Z
    5686:	71 81       	ldd	r23, Z+1	; 0x01
    5688:	82 81       	ldd	r24, Z+2	; 0x02
    568a:	93 81       	ldd	r25, Z+3	; 0x03
    568c:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    5690:	dc 01       	movw	r26, r24
    5692:	cb 01       	movw	r24, r22
    5694:	f8 01       	movw	r30, r16
    5696:	80 83       	st	Z, r24
    5698:	91 83       	std	Z+1, r25	; 0x01
    569a:	a2 83       	std	Z+2, r26	; 0x02
    569c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    569e:	ce 01       	movw	r24, r28
    56a0:	87 54       	subi	r24, 0x47	; 71
    56a2:	9d 4f       	sbci	r25, 0xFD	; 253
    56a4:	20 e0       	ldi	r18, 0x00	; 0
    56a6:	30 e0       	ldi	r19, 0x00	; 0
    56a8:	40 e8       	ldi	r20, 0x80	; 128
    56aa:	5f e3       	ldi	r21, 0x3F	; 63
    56ac:	fc 01       	movw	r30, r24
    56ae:	60 81       	ld	r22, Z
    56b0:	71 81       	ldd	r23, Z+1	; 0x01
    56b2:	82 81       	ldd	r24, Z+2	; 0x02
    56b4:	93 81       	ldd	r25, Z+3	; 0x03
    56b6:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    56ba:	88 23       	and	r24, r24
    56bc:	4c f4       	brge	.+18     	; 0x56d0 <__stack+0x45d1>
		__ticks = 1;
    56be:	ce 01       	movw	r24, r28
    56c0:	83 54       	subi	r24, 0x43	; 67
    56c2:	9d 4f       	sbci	r25, 0xFD	; 253
    56c4:	21 e0       	ldi	r18, 0x01	; 1
    56c6:	30 e0       	ldi	r19, 0x00	; 0
    56c8:	fc 01       	movw	r30, r24
    56ca:	31 83       	std	Z+1, r19	; 0x01
    56cc:	20 83       	st	Z, r18
    56ce:	6d c0       	rjmp	.+218    	; 0x57aa <__stack+0x46ab>
	else if (__tmp > 65535)
    56d0:	ce 01       	movw	r24, r28
    56d2:	87 54       	subi	r24, 0x47	; 71
    56d4:	9d 4f       	sbci	r25, 0xFD	; 253
    56d6:	20 e0       	ldi	r18, 0x00	; 0
    56d8:	3f ef       	ldi	r19, 0xFF	; 255
    56da:	4f e7       	ldi	r20, 0x7F	; 127
    56dc:	57 e4       	ldi	r21, 0x47	; 71
    56de:	fc 01       	movw	r30, r24
    56e0:	60 81       	ld	r22, Z
    56e2:	71 81       	ldd	r23, Z+1	; 0x01
    56e4:	82 81       	ldd	r24, Z+2	; 0x02
    56e6:	93 81       	ldd	r25, Z+3	; 0x03
    56e8:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    56ec:	18 16       	cp	r1, r24
    56ee:	0c f0       	brlt	.+2      	; 0x56f2 <__stack+0x45f3>
    56f0:	4a c0       	rjmp	.+148    	; 0x5786 <__stack+0x4687>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    56f2:	ce 01       	movw	r24, r28
    56f4:	83 53       	subi	r24, 0x33	; 51
    56f6:	9f 4f       	sbci	r25, 0xFF	; 255
    56f8:	20 e0       	ldi	r18, 0x00	; 0
    56fa:	30 e0       	ldi	r19, 0x00	; 0
    56fc:	40 e2       	ldi	r20, 0x20	; 32
    56fe:	51 e4       	ldi	r21, 0x41	; 65
    5700:	fc 01       	movw	r30, r24
    5702:	60 81       	ld	r22, Z
    5704:	71 81       	ldd	r23, Z+1	; 0x01
    5706:	82 81       	ldd	r24, Z+2	; 0x02
    5708:	93 81       	ldd	r25, Z+3	; 0x03
    570a:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    570e:	dc 01       	movw	r26, r24
    5710:	cb 01       	movw	r24, r22
    5712:	8e 01       	movw	r16, r28
    5714:	03 54       	subi	r16, 0x43	; 67
    5716:	1d 4f       	sbci	r17, 0xFD	; 253
    5718:	bc 01       	movw	r22, r24
    571a:	cd 01       	movw	r24, r26
    571c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    5720:	dc 01       	movw	r26, r24
    5722:	cb 01       	movw	r24, r22
    5724:	f8 01       	movw	r30, r16
    5726:	91 83       	std	Z+1, r25	; 0x01
    5728:	80 83       	st	Z, r24
    572a:	24 c0       	rjmp	.+72     	; 0x5774 <__stack+0x4675>
    572c:	ce 01       	movw	r24, r28
    572e:	81 54       	subi	r24, 0x41	; 65
    5730:	9d 4f       	sbci	r25, 0xFD	; 253
    5732:	20 e9       	ldi	r18, 0x90	; 144
    5734:	31 e0       	ldi	r19, 0x01	; 1
    5736:	fc 01       	movw	r30, r24
    5738:	31 83       	std	Z+1, r19	; 0x01
    573a:	20 83       	st	Z, r18
    573c:	ce 01       	movw	r24, r28
    573e:	81 54       	subi	r24, 0x41	; 65
    5740:	9d 4f       	sbci	r25, 0xFD	; 253
    5742:	fc 01       	movw	r30, r24
    5744:	80 81       	ld	r24, Z
    5746:	91 81       	ldd	r25, Z+1	; 0x01
    5748:	01 97       	sbiw	r24, 0x01	; 1
    574a:	f1 f7       	brne	.-4      	; 0x5748 <__stack+0x4649>
    574c:	9e 01       	movw	r18, r28
    574e:	21 54       	subi	r18, 0x41	; 65
    5750:	3d 4f       	sbci	r19, 0xFD	; 253
    5752:	f9 01       	movw	r30, r18
    5754:	91 83       	std	Z+1, r25	; 0x01
    5756:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5758:	ce 01       	movw	r24, r28
    575a:	83 54       	subi	r24, 0x43	; 67
    575c:	9d 4f       	sbci	r25, 0xFD	; 253
    575e:	9e 01       	movw	r18, r28
    5760:	23 54       	subi	r18, 0x43	; 67
    5762:	3d 4f       	sbci	r19, 0xFD	; 253
    5764:	f9 01       	movw	r30, r18
    5766:	20 81       	ld	r18, Z
    5768:	31 81       	ldd	r19, Z+1	; 0x01
    576a:	21 50       	subi	r18, 0x01	; 1
    576c:	31 09       	sbc	r19, r1
    576e:	fc 01       	movw	r30, r24
    5770:	31 83       	std	Z+1, r19	; 0x01
    5772:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5774:	ce 01       	movw	r24, r28
    5776:	83 54       	subi	r24, 0x43	; 67
    5778:	9d 4f       	sbci	r25, 0xFD	; 253
    577a:	fc 01       	movw	r30, r24
    577c:	80 81       	ld	r24, Z
    577e:	91 81       	ldd	r25, Z+1	; 0x01
    5780:	89 2b       	or	r24, r25
    5782:	a1 f6       	brne	.-88     	; 0x572c <__stack+0x462d>
    5784:	2c c0       	rjmp	.+88     	; 0x57de <__stack+0x46df>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5786:	8e 01       	movw	r16, r28
    5788:	03 54       	subi	r16, 0x43	; 67
    578a:	1d 4f       	sbci	r17, 0xFD	; 253
    578c:	ce 01       	movw	r24, r28
    578e:	87 54       	subi	r24, 0x47	; 71
    5790:	9d 4f       	sbci	r25, 0xFD	; 253
    5792:	fc 01       	movw	r30, r24
    5794:	60 81       	ld	r22, Z
    5796:	71 81       	ldd	r23, Z+1	; 0x01
    5798:	82 81       	ldd	r24, Z+2	; 0x02
    579a:	93 81       	ldd	r25, Z+3	; 0x03
    579c:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    57a0:	dc 01       	movw	r26, r24
    57a2:	cb 01       	movw	r24, r22
    57a4:	f8 01       	movw	r30, r16
    57a6:	91 83       	std	Z+1, r25	; 0x01
    57a8:	80 83       	st	Z, r24
    57aa:	ce 01       	movw	r24, r28
    57ac:	8f 53       	subi	r24, 0x3F	; 63
    57ae:	9d 4f       	sbci	r25, 0xFD	; 253
    57b0:	9e 01       	movw	r18, r28
    57b2:	23 54       	subi	r18, 0x43	; 67
    57b4:	3d 4f       	sbci	r19, 0xFD	; 253
    57b6:	f9 01       	movw	r30, r18
    57b8:	20 81       	ld	r18, Z
    57ba:	31 81       	ldd	r19, Z+1	; 0x01
    57bc:	fc 01       	movw	r30, r24
    57be:	31 83       	std	Z+1, r19	; 0x01
    57c0:	20 83       	st	Z, r18
    57c2:	ce 01       	movw	r24, r28
    57c4:	8f 53       	subi	r24, 0x3F	; 63
    57c6:	9d 4f       	sbci	r25, 0xFD	; 253
    57c8:	fc 01       	movw	r30, r24
    57ca:	80 81       	ld	r24, Z
    57cc:	91 81       	ldd	r25, Z+1	; 0x01
    57ce:	01 97       	sbiw	r24, 0x01	; 1
    57d0:	f1 f7       	brne	.-4      	; 0x57ce <__stack+0x46cf>
    57d2:	9e 01       	movw	r18, r28
    57d4:	2f 53       	subi	r18, 0x3F	; 63
    57d6:	3d 4f       	sbci	r19, 0xFD	; 253
    57d8:	f9 01       	movw	r30, r18
    57da:	91 83       	std	Z+1, r25	; 0x01
    57dc:	80 83       	st	Z, r24
						_delay_ms(2);
						check++;
    57de:	8d 81       	ldd	r24, Y+5	; 0x05
    57e0:	8f 5f       	subi	r24, 0xFF	; 255
    57e2:	8d 83       	std	Y+5, r24	; 0x05
					break;
    57e4:	20 c1       	rjmp	.+576    	; 0x5a26 <__stack+0x4927>
				
					case 'Y':
						recieved_X=(final_data[counter+1]-48)*1000+(final_data[counter+2]-48)*100+(final_data[counter+3]-48)*10+final_data[counter+4]-48;
    57e6:	8e 81       	ldd	r24, Y+6	; 0x06
    57e8:	88 2f       	mov	r24, r24
    57ea:	90 e0       	ldi	r25, 0x00	; 0
    57ec:	01 96       	adiw	r24, 0x01	; 1
    57ee:	8f 51       	subi	r24, 0x1F	; 31
    57f0:	9c 4f       	sbci	r25, 0xFC	; 252
    57f2:	fc 01       	movw	r30, r24
    57f4:	80 81       	ld	r24, Z
    57f6:	88 2f       	mov	r24, r24
    57f8:	90 e0       	ldi	r25, 0x00	; 0
    57fa:	ac 01       	movw	r20, r24
    57fc:	40 53       	subi	r20, 0x30	; 48
    57fe:	51 09       	sbc	r21, r1
    5800:	88 ee       	ldi	r24, 0xE8	; 232
    5802:	93 e0       	ldi	r25, 0x03	; 3
    5804:	48 9f       	mul	r20, r24
    5806:	90 01       	movw	r18, r0
    5808:	49 9f       	mul	r20, r25
    580a:	30 0d       	add	r19, r0
    580c:	58 9f       	mul	r21, r24
    580e:	30 0d       	add	r19, r0
    5810:	11 24       	eor	r1, r1
    5812:	8e 81       	ldd	r24, Y+6	; 0x06
    5814:	88 2f       	mov	r24, r24
    5816:	90 e0       	ldi	r25, 0x00	; 0
    5818:	02 96       	adiw	r24, 0x02	; 2
    581a:	8f 51       	subi	r24, 0x1F	; 31
    581c:	9c 4f       	sbci	r25, 0xFC	; 252
    581e:	fc 01       	movw	r30, r24
    5820:	80 81       	ld	r24, Z
    5822:	88 2f       	mov	r24, r24
    5824:	90 e0       	ldi	r25, 0x00	; 0
    5826:	ac 01       	movw	r20, r24
    5828:	40 53       	subi	r20, 0x30	; 48
    582a:	51 09       	sbc	r21, r1
    582c:	64 e6       	ldi	r22, 0x64	; 100
    582e:	64 9f       	mul	r22, r20
    5830:	c0 01       	movw	r24, r0
    5832:	65 9f       	mul	r22, r21
    5834:	90 0d       	add	r25, r0
    5836:	11 24       	eor	r1, r1
    5838:	28 0f       	add	r18, r24
    583a:	39 1f       	adc	r19, r25
    583c:	8e 81       	ldd	r24, Y+6	; 0x06
    583e:	88 2f       	mov	r24, r24
    5840:	90 e0       	ldi	r25, 0x00	; 0
    5842:	03 96       	adiw	r24, 0x03	; 3
    5844:	8f 51       	subi	r24, 0x1F	; 31
    5846:	9c 4f       	sbci	r25, 0xFC	; 252
    5848:	fc 01       	movw	r30, r24
    584a:	80 81       	ld	r24, Z
    584c:	88 2f       	mov	r24, r24
    584e:	90 e0       	ldi	r25, 0x00	; 0
    5850:	c0 97       	sbiw	r24, 0x30	; 48
    5852:	88 0f       	add	r24, r24
    5854:	99 1f       	adc	r25, r25
    5856:	ac 01       	movw	r20, r24
    5858:	44 0f       	add	r20, r20
    585a:	55 1f       	adc	r21, r21
    585c:	44 0f       	add	r20, r20
    585e:	55 1f       	adc	r21, r21
    5860:	84 0f       	add	r24, r20
    5862:	95 1f       	adc	r25, r21
    5864:	28 0f       	add	r18, r24
    5866:	39 1f       	adc	r19, r25
    5868:	8e 81       	ldd	r24, Y+6	; 0x06
    586a:	88 2f       	mov	r24, r24
    586c:	90 e0       	ldi	r25, 0x00	; 0
    586e:	04 96       	adiw	r24, 0x04	; 4
    5870:	8f 51       	subi	r24, 0x1F	; 31
    5872:	9c 4f       	sbci	r25, 0xFC	; 252
    5874:	fc 01       	movw	r30, r24
    5876:	80 81       	ld	r24, Z
    5878:	88 2f       	mov	r24, r24
    587a:	90 e0       	ldi	r25, 0x00	; 0
    587c:	82 0f       	add	r24, r18
    587e:	93 1f       	adc	r25, r19
    5880:	c0 97       	sbiw	r24, 0x30	; 48
    5882:	9a 83       	std	Y+2, r25	; 0x02
    5884:	89 83       	std	Y+1, r24	; 0x01
						send_Byte_0('1');
    5886:	81 e3       	ldi	r24, 0x31	; 49
    5888:	0e 94 29 03 	call	0x652	; 0x652 <send_Byte_0>
    588c:	9e 01       	movw	r18, r28
    588e:	2f 53       	subi	r18, 0x3F	; 63
    5890:	3f 4f       	sbci	r19, 0xFF	; 255
    5892:	80 e0       	ldi	r24, 0x00	; 0
    5894:	90 e0       	ldi	r25, 0x00	; 0
    5896:	a0 e0       	ldi	r26, 0x00	; 0
    5898:	b0 e4       	ldi	r27, 0x40	; 64
    589a:	f9 01       	movw	r30, r18
    589c:	80 83       	st	Z, r24
    589e:	91 83       	std	Z+1, r25	; 0x01
    58a0:	a2 83       	std	Z+2, r26	; 0x02
    58a2:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    58a4:	8e 01       	movw	r16, r28
    58a6:	0d 53       	subi	r16, 0x3D	; 61
    58a8:	1d 4f       	sbci	r17, 0xFD	; 253
    58aa:	ce 01       	movw	r24, r28
    58ac:	8f 53       	subi	r24, 0x3F	; 63
    58ae:	9f 4f       	sbci	r25, 0xFF	; 255
    58b0:	20 e0       	ldi	r18, 0x00	; 0
    58b2:	30 e0       	ldi	r19, 0x00	; 0
    58b4:	4a e7       	ldi	r20, 0x7A	; 122
    58b6:	55 e4       	ldi	r21, 0x45	; 69
    58b8:	fc 01       	movw	r30, r24
    58ba:	60 81       	ld	r22, Z
    58bc:	71 81       	ldd	r23, Z+1	; 0x01
    58be:	82 81       	ldd	r24, Z+2	; 0x02
    58c0:	93 81       	ldd	r25, Z+3	; 0x03
    58c2:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    58c6:	dc 01       	movw	r26, r24
    58c8:	cb 01       	movw	r24, r22
    58ca:	f8 01       	movw	r30, r16
    58cc:	80 83       	st	Z, r24
    58ce:	91 83       	std	Z+1, r25	; 0x01
    58d0:	a2 83       	std	Z+2, r26	; 0x02
    58d2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    58d4:	ce 01       	movw	r24, r28
    58d6:	8d 53       	subi	r24, 0x3D	; 61
    58d8:	9d 4f       	sbci	r25, 0xFD	; 253
    58da:	20 e0       	ldi	r18, 0x00	; 0
    58dc:	30 e0       	ldi	r19, 0x00	; 0
    58de:	40 e8       	ldi	r20, 0x80	; 128
    58e0:	5f e3       	ldi	r21, 0x3F	; 63
    58e2:	fc 01       	movw	r30, r24
    58e4:	60 81       	ld	r22, Z
    58e6:	71 81       	ldd	r23, Z+1	; 0x01
    58e8:	82 81       	ldd	r24, Z+2	; 0x02
    58ea:	93 81       	ldd	r25, Z+3	; 0x03
    58ec:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    58f0:	88 23       	and	r24, r24
    58f2:	4c f4       	brge	.+18     	; 0x5906 <__stack+0x4807>
		__ticks = 1;
    58f4:	ce 01       	movw	r24, r28
    58f6:	89 53       	subi	r24, 0x39	; 57
    58f8:	9d 4f       	sbci	r25, 0xFD	; 253
    58fa:	21 e0       	ldi	r18, 0x01	; 1
    58fc:	30 e0       	ldi	r19, 0x00	; 0
    58fe:	fc 01       	movw	r30, r24
    5900:	31 83       	std	Z+1, r19	; 0x01
    5902:	20 83       	st	Z, r18
    5904:	6d c0       	rjmp	.+218    	; 0x59e0 <__stack+0x48e1>
	else if (__tmp > 65535)
    5906:	ce 01       	movw	r24, r28
    5908:	8d 53       	subi	r24, 0x3D	; 61
    590a:	9d 4f       	sbci	r25, 0xFD	; 253
    590c:	20 e0       	ldi	r18, 0x00	; 0
    590e:	3f ef       	ldi	r19, 0xFF	; 255
    5910:	4f e7       	ldi	r20, 0x7F	; 127
    5912:	57 e4       	ldi	r21, 0x47	; 71
    5914:	fc 01       	movw	r30, r24
    5916:	60 81       	ld	r22, Z
    5918:	71 81       	ldd	r23, Z+1	; 0x01
    591a:	82 81       	ldd	r24, Z+2	; 0x02
    591c:	93 81       	ldd	r25, Z+3	; 0x03
    591e:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    5922:	18 16       	cp	r1, r24
    5924:	0c f0       	brlt	.+2      	; 0x5928 <__stack+0x4829>
    5926:	4a c0       	rjmp	.+148    	; 0x59bc <__stack+0x48bd>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5928:	ce 01       	movw	r24, r28
    592a:	8f 53       	subi	r24, 0x3F	; 63
    592c:	9f 4f       	sbci	r25, 0xFF	; 255
    592e:	20 e0       	ldi	r18, 0x00	; 0
    5930:	30 e0       	ldi	r19, 0x00	; 0
    5932:	40 e2       	ldi	r20, 0x20	; 32
    5934:	51 e4       	ldi	r21, 0x41	; 65
    5936:	fc 01       	movw	r30, r24
    5938:	60 81       	ld	r22, Z
    593a:	71 81       	ldd	r23, Z+1	; 0x01
    593c:	82 81       	ldd	r24, Z+2	; 0x02
    593e:	93 81       	ldd	r25, Z+3	; 0x03
    5940:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    5944:	dc 01       	movw	r26, r24
    5946:	cb 01       	movw	r24, r22
    5948:	8e 01       	movw	r16, r28
    594a:	09 53       	subi	r16, 0x39	; 57
    594c:	1d 4f       	sbci	r17, 0xFD	; 253
    594e:	bc 01       	movw	r22, r24
    5950:	cd 01       	movw	r24, r26
    5952:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    5956:	dc 01       	movw	r26, r24
    5958:	cb 01       	movw	r24, r22
    595a:	f8 01       	movw	r30, r16
    595c:	91 83       	std	Z+1, r25	; 0x01
    595e:	80 83       	st	Z, r24
    5960:	24 c0       	rjmp	.+72     	; 0x59aa <__stack+0x48ab>
    5962:	ce 01       	movw	r24, r28
    5964:	87 53       	subi	r24, 0x37	; 55
    5966:	9d 4f       	sbci	r25, 0xFD	; 253
    5968:	20 e9       	ldi	r18, 0x90	; 144
    596a:	31 e0       	ldi	r19, 0x01	; 1
    596c:	fc 01       	movw	r30, r24
    596e:	31 83       	std	Z+1, r19	; 0x01
    5970:	20 83       	st	Z, r18
    5972:	ce 01       	movw	r24, r28
    5974:	87 53       	subi	r24, 0x37	; 55
    5976:	9d 4f       	sbci	r25, 0xFD	; 253
    5978:	fc 01       	movw	r30, r24
    597a:	80 81       	ld	r24, Z
    597c:	91 81       	ldd	r25, Z+1	; 0x01
    597e:	01 97       	sbiw	r24, 0x01	; 1
    5980:	f1 f7       	brne	.-4      	; 0x597e <__stack+0x487f>
    5982:	9e 01       	movw	r18, r28
    5984:	27 53       	subi	r18, 0x37	; 55
    5986:	3d 4f       	sbci	r19, 0xFD	; 253
    5988:	f9 01       	movw	r30, r18
    598a:	91 83       	std	Z+1, r25	; 0x01
    598c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    598e:	ce 01       	movw	r24, r28
    5990:	89 53       	subi	r24, 0x39	; 57
    5992:	9d 4f       	sbci	r25, 0xFD	; 253
    5994:	9e 01       	movw	r18, r28
    5996:	29 53       	subi	r18, 0x39	; 57
    5998:	3d 4f       	sbci	r19, 0xFD	; 253
    599a:	f9 01       	movw	r30, r18
    599c:	20 81       	ld	r18, Z
    599e:	31 81       	ldd	r19, Z+1	; 0x01
    59a0:	21 50       	subi	r18, 0x01	; 1
    59a2:	31 09       	sbc	r19, r1
    59a4:	fc 01       	movw	r30, r24
    59a6:	31 83       	std	Z+1, r19	; 0x01
    59a8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    59aa:	ce 01       	movw	r24, r28
    59ac:	89 53       	subi	r24, 0x39	; 57
    59ae:	9d 4f       	sbci	r25, 0xFD	; 253
    59b0:	fc 01       	movw	r30, r24
    59b2:	80 81       	ld	r24, Z
    59b4:	91 81       	ldd	r25, Z+1	; 0x01
    59b6:	89 2b       	or	r24, r25
    59b8:	a1 f6       	brne	.-88     	; 0x5962 <__stack+0x4863>
    59ba:	2c c0       	rjmp	.+88     	; 0x5a14 <__stack+0x4915>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    59bc:	8e 01       	movw	r16, r28
    59be:	09 53       	subi	r16, 0x39	; 57
    59c0:	1d 4f       	sbci	r17, 0xFD	; 253
    59c2:	ce 01       	movw	r24, r28
    59c4:	8d 53       	subi	r24, 0x3D	; 61
    59c6:	9d 4f       	sbci	r25, 0xFD	; 253
    59c8:	fc 01       	movw	r30, r24
    59ca:	60 81       	ld	r22, Z
    59cc:	71 81       	ldd	r23, Z+1	; 0x01
    59ce:	82 81       	ldd	r24, Z+2	; 0x02
    59d0:	93 81       	ldd	r25, Z+3	; 0x03
    59d2:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    59d6:	dc 01       	movw	r26, r24
    59d8:	cb 01       	movw	r24, r22
    59da:	f8 01       	movw	r30, r16
    59dc:	91 83       	std	Z+1, r25	; 0x01
    59de:	80 83       	st	Z, r24
    59e0:	ce 01       	movw	r24, r28
    59e2:	85 53       	subi	r24, 0x35	; 53
    59e4:	9d 4f       	sbci	r25, 0xFD	; 253
    59e6:	9e 01       	movw	r18, r28
    59e8:	29 53       	subi	r18, 0x39	; 57
    59ea:	3d 4f       	sbci	r19, 0xFD	; 253
    59ec:	f9 01       	movw	r30, r18
    59ee:	20 81       	ld	r18, Z
    59f0:	31 81       	ldd	r19, Z+1	; 0x01
    59f2:	fc 01       	movw	r30, r24
    59f4:	31 83       	std	Z+1, r19	; 0x01
    59f6:	20 83       	st	Z, r18
    59f8:	ce 01       	movw	r24, r28
    59fa:	85 53       	subi	r24, 0x35	; 53
    59fc:	9d 4f       	sbci	r25, 0xFD	; 253
    59fe:	fc 01       	movw	r30, r24
    5a00:	80 81       	ld	r24, Z
    5a02:	91 81       	ldd	r25, Z+1	; 0x01
    5a04:	01 97       	sbiw	r24, 0x01	; 1
    5a06:	f1 f7       	brne	.-4      	; 0x5a04 <__stack+0x4905>
    5a08:	9e 01       	movw	r18, r28
    5a0a:	25 53       	subi	r18, 0x35	; 53
    5a0c:	3d 4f       	sbci	r19, 0xFD	; 253
    5a0e:	f9 01       	movw	r30, r18
    5a10:	91 83       	std	Z+1, r25	; 0x01
    5a12:	80 83       	st	Z, r24
						_delay_ms(2);
						check++;
    5a14:	8d 81       	ldd	r24, Y+5	; 0x05
    5a16:	8f 5f       	subi	r24, 0xFF	; 255
    5a18:	8d 83       	std	Y+5, r24	; 0x05
					break;
    5a1a:	05 c0       	rjmp	.+10     	; 0x5a26 <__stack+0x4927>
						
					case 'O':
					routine_done=1;
    5a1c:	81 e0       	ldi	r24, 0x01	; 1
    5a1e:	8f 83       	std	Y+7, r24	; 0x07
					check++;	
    5a20:	8d 81       	ldd	r24, Y+5	; 0x05
    5a22:	8f 5f       	subi	r24, 0xFF	; 255
    5a24:	8d 83       	std	Y+5, r24	; 0x05
		if (uart_str_complete!=0)
		{
			routine_done=0;
			uart_str_complete=0;
			send_Byte_0('1');	
			for (counter=0;counter<=data_bytes_recieved;counter++)
    5a26:	8e 81       	ldd	r24, Y+6	; 0x06
    5a28:	8f 5f       	subi	r24, 0xFF	; 255
    5a2a:	8e 83       	std	Y+6, r24	; 0x06
    5a2c:	80 91 81 03 	lds	r24, 0x0381	; 0x800381 <data_bytes_recieved>
    5a30:	9e 81       	ldd	r25, Y+6	; 0x06
    5a32:	89 17       	cp	r24, r25
    5a34:	08 f0       	brcs	.+2      	; 0x5a38 <__stack+0x4939>
    5a36:	a7 cd       	rjmp	.-1202   	; 0x5586 <__stack+0x4487>
					case 'O':
					routine_done=1;
					check++;	
				}
			}
			data_bytes_recieved=0;
    5a38:	10 92 81 03 	sts	0x0381, r1	; 0x800381 <data_bytes_recieved>
			if ((check==0)||(check>2))
    5a3c:	8d 81       	ldd	r24, Y+5	; 0x05
    5a3e:	88 23       	and	r24, r24
    5a40:	19 f0       	breq	.+6      	; 0x5a48 <__stack+0x4949>
    5a42:	8d 81       	ldd	r24, Y+5	; 0x05
    5a44:	83 30       	cpi	r24, 0x03	; 3
    5a46:	20 f0       	brcs	.+8      	; 0x5a50 <__stack+0x4951>
			{
				send_Byte_0('0');
    5a48:	80 e3       	ldi	r24, 0x30	; 48
    5a4a:	0e 94 29 03 	call	0x652	; 0x652 <send_Byte_0>
    5a4e:	01 c0       	rjmp	.+2      	; 0x5a52 <__stack+0x4953>
			}
			else
			{
				check=0;
    5a50:	1d 82       	std	Y+5, r1	; 0x05
			}
			if (routine_done>=1)
    5a52:	8f 81       	ldd	r24, Y+7	; 0x07
    5a54:	88 23       	and	r24, r24
    5a56:	09 f4       	brne	.+2      	; 0x5a5a <__stack+0x495b>
    5a58:	ae c1       	rjmp	.+860    	; 0x5db6 <__stack+0x4cb7>
			{
				send_to_uArm("G0 X200 Y0 Z150 F1000\n");
    5a5a:	80 ef       	ldi	r24, 0xF0	; 240
    5a5c:	92 e0       	ldi	r25, 0x02	; 2
    5a5e:	0e 94 85 03 	call	0x70a	; 0x70a <send_to_uArm>
				routine_done=0;
    5a62:	1f 82       	std	Y+7, r1	; 0x07
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    5a64:	04 c0       	rjmp	.+8      	; 0x5a6e <__stack+0x496f>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
    5a66:	80 e0       	ldi	r24, 0x00	; 0
    5a68:	91 e0       	ldi	r25, 0x01	; 1
    5a6a:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
			}
			if (routine_done>=1)
			{
				send_to_uArm("G0 X200 Y0 Z150 F1000\n");
				routine_done=0;
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    5a6e:	80 91 87 03 	lds	r24, 0x0387	; 0x800387 <uart_string1+0x4>
    5a72:	81 33       	cpi	r24, 0x31	; 49
    5a74:	c1 f3       	breq	.-16     	; 0x5a66 <__stack+0x4967>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
				}
				if (DIP_Switch&0x01)
    5a76:	80 91 7e 03 	lds	r24, 0x037E	; 0x80037e <__data_end>
    5a7a:	88 2f       	mov	r24, r24
    5a7c:	90 e0       	ldi	r25, 0x00	; 0
    5a7e:	81 70       	andi	r24, 0x01	; 1
    5a80:	99 27       	eor	r25, r25
    5a82:	89 2b       	or	r24, r25
    5a84:	11 f4       	brne	.+4      	; 0x5a8a <__stack+0x498b>
    5a86:	0c 94 97 05 	jmp	0xb2e	; 0xb2e <main+0x62>
				{
					to_uARM("M2210 F500 T200\n");
    5a8a:	8e e5       	ldi	r24, 0x5E	; 94
    5a8c:	91 e0       	ldi	r25, 0x01	; 1
    5a8e:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    5a92:	9e 01       	movw	r18, r28
    5a94:	27 53       	subi	r18, 0x37	; 55
    5a96:	3f 4f       	sbci	r19, 0xFF	; 255
    5a98:	80 e0       	ldi	r24, 0x00	; 0
    5a9a:	90 e0       	ldi	r25, 0x00	; 0
    5a9c:	a8 e4       	ldi	r26, 0x48	; 72
    5a9e:	b3 e4       	ldi	r27, 0x43	; 67
    5aa0:	f9 01       	movw	r30, r18
    5aa2:	80 83       	st	Z, r24
    5aa4:	91 83       	std	Z+1, r25	; 0x01
    5aa6:	a2 83       	std	Z+2, r26	; 0x02
    5aa8:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    5aaa:	8e 01       	movw	r16, r28
    5aac:	09 52       	subi	r16, 0x29	; 41
    5aae:	1d 4f       	sbci	r17, 0xFD	; 253
    5ab0:	ce 01       	movw	r24, r28
    5ab2:	87 53       	subi	r24, 0x37	; 55
    5ab4:	9f 4f       	sbci	r25, 0xFF	; 255
    5ab6:	20 e0       	ldi	r18, 0x00	; 0
    5ab8:	30 e0       	ldi	r19, 0x00	; 0
    5aba:	4a e7       	ldi	r20, 0x7A	; 122
    5abc:	55 e4       	ldi	r21, 0x45	; 69
    5abe:	fc 01       	movw	r30, r24
    5ac0:	60 81       	ld	r22, Z
    5ac2:	71 81       	ldd	r23, Z+1	; 0x01
    5ac4:	82 81       	ldd	r24, Z+2	; 0x02
    5ac6:	93 81       	ldd	r25, Z+3	; 0x03
    5ac8:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    5acc:	dc 01       	movw	r26, r24
    5ace:	cb 01       	movw	r24, r22
    5ad0:	f8 01       	movw	r30, r16
    5ad2:	80 83       	st	Z, r24
    5ad4:	91 83       	std	Z+1, r25	; 0x01
    5ad6:	a2 83       	std	Z+2, r26	; 0x02
    5ad8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5ada:	ce 01       	movw	r24, r28
    5adc:	89 52       	subi	r24, 0x29	; 41
    5ade:	9d 4f       	sbci	r25, 0xFD	; 253
    5ae0:	20 e0       	ldi	r18, 0x00	; 0
    5ae2:	30 e0       	ldi	r19, 0x00	; 0
    5ae4:	40 e8       	ldi	r20, 0x80	; 128
    5ae6:	5f e3       	ldi	r21, 0x3F	; 63
    5ae8:	fc 01       	movw	r30, r24
    5aea:	60 81       	ld	r22, Z
    5aec:	71 81       	ldd	r23, Z+1	; 0x01
    5aee:	82 81       	ldd	r24, Z+2	; 0x02
    5af0:	93 81       	ldd	r25, Z+3	; 0x03
    5af2:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    5af6:	88 23       	and	r24, r24
    5af8:	4c f4       	brge	.+18     	; 0x5b0c <__stack+0x4a0d>
		__ticks = 1;
    5afa:	ce 01       	movw	r24, r28
    5afc:	85 52       	subi	r24, 0x25	; 37
    5afe:	9d 4f       	sbci	r25, 0xFD	; 253
    5b00:	21 e0       	ldi	r18, 0x01	; 1
    5b02:	30 e0       	ldi	r19, 0x00	; 0
    5b04:	fc 01       	movw	r30, r24
    5b06:	31 83       	std	Z+1, r19	; 0x01
    5b08:	20 83       	st	Z, r18
    5b0a:	6d c0       	rjmp	.+218    	; 0x5be6 <__stack+0x4ae7>
	else if (__tmp > 65535)
    5b0c:	ce 01       	movw	r24, r28
    5b0e:	89 52       	subi	r24, 0x29	; 41
    5b10:	9d 4f       	sbci	r25, 0xFD	; 253
    5b12:	20 e0       	ldi	r18, 0x00	; 0
    5b14:	3f ef       	ldi	r19, 0xFF	; 255
    5b16:	4f e7       	ldi	r20, 0x7F	; 127
    5b18:	57 e4       	ldi	r21, 0x47	; 71
    5b1a:	fc 01       	movw	r30, r24
    5b1c:	60 81       	ld	r22, Z
    5b1e:	71 81       	ldd	r23, Z+1	; 0x01
    5b20:	82 81       	ldd	r24, Z+2	; 0x02
    5b22:	93 81       	ldd	r25, Z+3	; 0x03
    5b24:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    5b28:	18 16       	cp	r1, r24
    5b2a:	0c f0       	brlt	.+2      	; 0x5b2e <__stack+0x4a2f>
    5b2c:	4a c0       	rjmp	.+148    	; 0x5bc2 <__stack+0x4ac3>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5b2e:	ce 01       	movw	r24, r28
    5b30:	87 53       	subi	r24, 0x37	; 55
    5b32:	9f 4f       	sbci	r25, 0xFF	; 255
    5b34:	20 e0       	ldi	r18, 0x00	; 0
    5b36:	30 e0       	ldi	r19, 0x00	; 0
    5b38:	40 e2       	ldi	r20, 0x20	; 32
    5b3a:	51 e4       	ldi	r21, 0x41	; 65
    5b3c:	fc 01       	movw	r30, r24
    5b3e:	60 81       	ld	r22, Z
    5b40:	71 81       	ldd	r23, Z+1	; 0x01
    5b42:	82 81       	ldd	r24, Z+2	; 0x02
    5b44:	93 81       	ldd	r25, Z+3	; 0x03
    5b46:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    5b4a:	dc 01       	movw	r26, r24
    5b4c:	cb 01       	movw	r24, r22
    5b4e:	8e 01       	movw	r16, r28
    5b50:	05 52       	subi	r16, 0x25	; 37
    5b52:	1d 4f       	sbci	r17, 0xFD	; 253
    5b54:	bc 01       	movw	r22, r24
    5b56:	cd 01       	movw	r24, r26
    5b58:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    5b5c:	dc 01       	movw	r26, r24
    5b5e:	cb 01       	movw	r24, r22
    5b60:	f8 01       	movw	r30, r16
    5b62:	91 83       	std	Z+1, r25	; 0x01
    5b64:	80 83       	st	Z, r24
    5b66:	24 c0       	rjmp	.+72     	; 0x5bb0 <__stack+0x4ab1>
    5b68:	ce 01       	movw	r24, r28
    5b6a:	83 52       	subi	r24, 0x23	; 35
    5b6c:	9d 4f       	sbci	r25, 0xFD	; 253
    5b6e:	20 e9       	ldi	r18, 0x90	; 144
    5b70:	31 e0       	ldi	r19, 0x01	; 1
    5b72:	fc 01       	movw	r30, r24
    5b74:	31 83       	std	Z+1, r19	; 0x01
    5b76:	20 83       	st	Z, r18
    5b78:	ce 01       	movw	r24, r28
    5b7a:	83 52       	subi	r24, 0x23	; 35
    5b7c:	9d 4f       	sbci	r25, 0xFD	; 253
    5b7e:	fc 01       	movw	r30, r24
    5b80:	80 81       	ld	r24, Z
    5b82:	91 81       	ldd	r25, Z+1	; 0x01
    5b84:	01 97       	sbiw	r24, 0x01	; 1
    5b86:	f1 f7       	brne	.-4      	; 0x5b84 <__stack+0x4a85>
    5b88:	9e 01       	movw	r18, r28
    5b8a:	23 52       	subi	r18, 0x23	; 35
    5b8c:	3d 4f       	sbci	r19, 0xFD	; 253
    5b8e:	f9 01       	movw	r30, r18
    5b90:	91 83       	std	Z+1, r25	; 0x01
    5b92:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5b94:	ce 01       	movw	r24, r28
    5b96:	85 52       	subi	r24, 0x25	; 37
    5b98:	9d 4f       	sbci	r25, 0xFD	; 253
    5b9a:	9e 01       	movw	r18, r28
    5b9c:	25 52       	subi	r18, 0x25	; 37
    5b9e:	3d 4f       	sbci	r19, 0xFD	; 253
    5ba0:	f9 01       	movw	r30, r18
    5ba2:	20 81       	ld	r18, Z
    5ba4:	31 81       	ldd	r19, Z+1	; 0x01
    5ba6:	21 50       	subi	r18, 0x01	; 1
    5ba8:	31 09       	sbc	r19, r1
    5baa:	fc 01       	movw	r30, r24
    5bac:	31 83       	std	Z+1, r19	; 0x01
    5bae:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5bb0:	ce 01       	movw	r24, r28
    5bb2:	85 52       	subi	r24, 0x25	; 37
    5bb4:	9d 4f       	sbci	r25, 0xFD	; 253
    5bb6:	fc 01       	movw	r30, r24
    5bb8:	80 81       	ld	r24, Z
    5bba:	91 81       	ldd	r25, Z+1	; 0x01
    5bbc:	89 2b       	or	r24, r25
    5bbe:	a1 f6       	brne	.-88     	; 0x5b68 <__stack+0x4a69>
    5bc0:	2c c0       	rjmp	.+88     	; 0x5c1a <__stack+0x4b1b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5bc2:	8e 01       	movw	r16, r28
    5bc4:	05 52       	subi	r16, 0x25	; 37
    5bc6:	1d 4f       	sbci	r17, 0xFD	; 253
    5bc8:	ce 01       	movw	r24, r28
    5bca:	89 52       	subi	r24, 0x29	; 41
    5bcc:	9d 4f       	sbci	r25, 0xFD	; 253
    5bce:	fc 01       	movw	r30, r24
    5bd0:	60 81       	ld	r22, Z
    5bd2:	71 81       	ldd	r23, Z+1	; 0x01
    5bd4:	82 81       	ldd	r24, Z+2	; 0x02
    5bd6:	93 81       	ldd	r25, Z+3	; 0x03
    5bd8:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    5bdc:	dc 01       	movw	r26, r24
    5bde:	cb 01       	movw	r24, r22
    5be0:	f8 01       	movw	r30, r16
    5be2:	91 83       	std	Z+1, r25	; 0x01
    5be4:	80 83       	st	Z, r24
    5be6:	ce 01       	movw	r24, r28
    5be8:	81 52       	subi	r24, 0x21	; 33
    5bea:	9d 4f       	sbci	r25, 0xFD	; 253
    5bec:	9e 01       	movw	r18, r28
    5bee:	25 52       	subi	r18, 0x25	; 37
    5bf0:	3d 4f       	sbci	r19, 0xFD	; 253
    5bf2:	f9 01       	movw	r30, r18
    5bf4:	20 81       	ld	r18, Z
    5bf6:	31 81       	ldd	r19, Z+1	; 0x01
    5bf8:	fc 01       	movw	r30, r24
    5bfa:	31 83       	std	Z+1, r19	; 0x01
    5bfc:	20 83       	st	Z, r18
    5bfe:	ce 01       	movw	r24, r28
    5c00:	81 52       	subi	r24, 0x21	; 33
    5c02:	9d 4f       	sbci	r25, 0xFD	; 253
    5c04:	fc 01       	movw	r30, r24
    5c06:	80 81       	ld	r24, Z
    5c08:	91 81       	ldd	r25, Z+1	; 0x01
    5c0a:	01 97       	sbiw	r24, 0x01	; 1
    5c0c:	f1 f7       	brne	.-4      	; 0x5c0a <__stack+0x4b0b>
    5c0e:	9e 01       	movw	r18, r28
    5c10:	21 52       	subi	r18, 0x21	; 33
    5c12:	3d 4f       	sbci	r19, 0xFD	; 253
    5c14:	f9 01       	movw	r30, r18
    5c16:	91 83       	std	Z+1, r25	; 0x01
    5c18:	80 83       	st	Z, r24
					_delay_ms(200);
					to_uARM("M2210 F1000 T500\n");
    5c1a:	8f e6       	ldi	r24, 0x6F	; 111
    5c1c:	91 e0       	ldi	r25, 0x01	; 1
    5c1e:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    5c22:	9e 01       	movw	r18, r28
    5c24:	2b 53       	subi	r18, 0x3B	; 59
    5c26:	3f 4f       	sbci	r19, 0xFF	; 255
    5c28:	80 e0       	ldi	r24, 0x00	; 0
    5c2a:	90 e0       	ldi	r25, 0x00	; 0
    5c2c:	aa ef       	ldi	r26, 0xFA	; 250
    5c2e:	b3 e4       	ldi	r27, 0x43	; 67
    5c30:	f9 01       	movw	r30, r18
    5c32:	80 83       	st	Z, r24
    5c34:	91 83       	std	Z+1, r25	; 0x01
    5c36:	a2 83       	std	Z+2, r26	; 0x02
    5c38:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    5c3a:	8e 01       	movw	r16, r28
    5c3c:	03 53       	subi	r16, 0x33	; 51
    5c3e:	1d 4f       	sbci	r17, 0xFD	; 253
    5c40:	ce 01       	movw	r24, r28
    5c42:	8b 53       	subi	r24, 0x3B	; 59
    5c44:	9f 4f       	sbci	r25, 0xFF	; 255
    5c46:	20 e0       	ldi	r18, 0x00	; 0
    5c48:	30 e0       	ldi	r19, 0x00	; 0
    5c4a:	4a e7       	ldi	r20, 0x7A	; 122
    5c4c:	55 e4       	ldi	r21, 0x45	; 69
    5c4e:	fc 01       	movw	r30, r24
    5c50:	60 81       	ld	r22, Z
    5c52:	71 81       	ldd	r23, Z+1	; 0x01
    5c54:	82 81       	ldd	r24, Z+2	; 0x02
    5c56:	93 81       	ldd	r25, Z+3	; 0x03
    5c58:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    5c5c:	dc 01       	movw	r26, r24
    5c5e:	cb 01       	movw	r24, r22
    5c60:	f8 01       	movw	r30, r16
    5c62:	80 83       	st	Z, r24
    5c64:	91 83       	std	Z+1, r25	; 0x01
    5c66:	a2 83       	std	Z+2, r26	; 0x02
    5c68:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5c6a:	ce 01       	movw	r24, r28
    5c6c:	83 53       	subi	r24, 0x33	; 51
    5c6e:	9d 4f       	sbci	r25, 0xFD	; 253
    5c70:	20 e0       	ldi	r18, 0x00	; 0
    5c72:	30 e0       	ldi	r19, 0x00	; 0
    5c74:	40 e8       	ldi	r20, 0x80	; 128
    5c76:	5f e3       	ldi	r21, 0x3F	; 63
    5c78:	fc 01       	movw	r30, r24
    5c7a:	60 81       	ld	r22, Z
    5c7c:	71 81       	ldd	r23, Z+1	; 0x01
    5c7e:	82 81       	ldd	r24, Z+2	; 0x02
    5c80:	93 81       	ldd	r25, Z+3	; 0x03
    5c82:	0e 94 c3 32 	call	0x6586	; 0x6586 <__cmpsf2>
    5c86:	88 23       	and	r24, r24
    5c88:	4c f4       	brge	.+18     	; 0x5c9c <__stack+0x4b9d>
		__ticks = 1;
    5c8a:	ce 01       	movw	r24, r28
    5c8c:	8f 52       	subi	r24, 0x2F	; 47
    5c8e:	9d 4f       	sbci	r25, 0xFD	; 253
    5c90:	21 e0       	ldi	r18, 0x01	; 1
    5c92:	30 e0       	ldi	r19, 0x00	; 0
    5c94:	fc 01       	movw	r30, r24
    5c96:	31 83       	std	Z+1, r19	; 0x01
    5c98:	20 83       	st	Z, r18
    5c9a:	6d c0       	rjmp	.+218    	; 0x5d76 <__stack+0x4c77>
	else if (__tmp > 65535)
    5c9c:	ce 01       	movw	r24, r28
    5c9e:	83 53       	subi	r24, 0x33	; 51
    5ca0:	9d 4f       	sbci	r25, 0xFD	; 253
    5ca2:	20 e0       	ldi	r18, 0x00	; 0
    5ca4:	3f ef       	ldi	r19, 0xFF	; 255
    5ca6:	4f e7       	ldi	r20, 0x7F	; 127
    5ca8:	57 e4       	ldi	r21, 0x47	; 71
    5caa:	fc 01       	movw	r30, r24
    5cac:	60 81       	ld	r22, Z
    5cae:	71 81       	ldd	r23, Z+1	; 0x01
    5cb0:	82 81       	ldd	r24, Z+2	; 0x02
    5cb2:	93 81       	ldd	r25, Z+3	; 0x03
    5cb4:	0e 94 de 33 	call	0x67bc	; 0x67bc <__gesf2>
    5cb8:	18 16       	cp	r1, r24
    5cba:	0c f0       	brlt	.+2      	; 0x5cbe <__stack+0x4bbf>
    5cbc:	4a c0       	rjmp	.+148    	; 0x5d52 <__stack+0x4c53>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5cbe:	ce 01       	movw	r24, r28
    5cc0:	8b 53       	subi	r24, 0x3B	; 59
    5cc2:	9f 4f       	sbci	r25, 0xFF	; 255
    5cc4:	20 e0       	ldi	r18, 0x00	; 0
    5cc6:	30 e0       	ldi	r19, 0x00	; 0
    5cc8:	40 e2       	ldi	r20, 0x20	; 32
    5cca:	51 e4       	ldi	r21, 0x41	; 65
    5ccc:	fc 01       	movw	r30, r24
    5cce:	60 81       	ld	r22, Z
    5cd0:	71 81       	ldd	r23, Z+1	; 0x01
    5cd2:	82 81       	ldd	r24, Z+2	; 0x02
    5cd4:	93 81       	ldd	r25, Z+3	; 0x03
    5cd6:	0e 94 e3 33 	call	0x67c6	; 0x67c6 <__mulsf3>
    5cda:	dc 01       	movw	r26, r24
    5cdc:	cb 01       	movw	r24, r22
    5cde:	8e 01       	movw	r16, r28
    5ce0:	0f 52       	subi	r16, 0x2F	; 47
    5ce2:	1d 4f       	sbci	r17, 0xFD	; 253
    5ce4:	bc 01       	movw	r22, r24
    5ce6:	cd 01       	movw	r24, r26
    5ce8:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    5cec:	dc 01       	movw	r26, r24
    5cee:	cb 01       	movw	r24, r22
    5cf0:	f8 01       	movw	r30, r16
    5cf2:	91 83       	std	Z+1, r25	; 0x01
    5cf4:	80 83       	st	Z, r24
    5cf6:	24 c0       	rjmp	.+72     	; 0x5d40 <__stack+0x4c41>
    5cf8:	ce 01       	movw	r24, r28
    5cfa:	8d 52       	subi	r24, 0x2D	; 45
    5cfc:	9d 4f       	sbci	r25, 0xFD	; 253
    5cfe:	20 e9       	ldi	r18, 0x90	; 144
    5d00:	31 e0       	ldi	r19, 0x01	; 1
    5d02:	fc 01       	movw	r30, r24
    5d04:	31 83       	std	Z+1, r19	; 0x01
    5d06:	20 83       	st	Z, r18
    5d08:	ce 01       	movw	r24, r28
    5d0a:	8d 52       	subi	r24, 0x2D	; 45
    5d0c:	9d 4f       	sbci	r25, 0xFD	; 253
    5d0e:	fc 01       	movw	r30, r24
    5d10:	80 81       	ld	r24, Z
    5d12:	91 81       	ldd	r25, Z+1	; 0x01
    5d14:	01 97       	sbiw	r24, 0x01	; 1
    5d16:	f1 f7       	brne	.-4      	; 0x5d14 <__stack+0x4c15>
    5d18:	9e 01       	movw	r18, r28
    5d1a:	2d 52       	subi	r18, 0x2D	; 45
    5d1c:	3d 4f       	sbci	r19, 0xFD	; 253
    5d1e:	f9 01       	movw	r30, r18
    5d20:	91 83       	std	Z+1, r25	; 0x01
    5d22:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5d24:	ce 01       	movw	r24, r28
    5d26:	8f 52       	subi	r24, 0x2F	; 47
    5d28:	9d 4f       	sbci	r25, 0xFD	; 253
    5d2a:	9e 01       	movw	r18, r28
    5d2c:	2f 52       	subi	r18, 0x2F	; 47
    5d2e:	3d 4f       	sbci	r19, 0xFD	; 253
    5d30:	f9 01       	movw	r30, r18
    5d32:	20 81       	ld	r18, Z
    5d34:	31 81       	ldd	r19, Z+1	; 0x01
    5d36:	21 50       	subi	r18, 0x01	; 1
    5d38:	31 09       	sbc	r19, r1
    5d3a:	fc 01       	movw	r30, r24
    5d3c:	31 83       	std	Z+1, r19	; 0x01
    5d3e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5d40:	ce 01       	movw	r24, r28
    5d42:	8f 52       	subi	r24, 0x2F	; 47
    5d44:	9d 4f       	sbci	r25, 0xFD	; 253
    5d46:	fc 01       	movw	r30, r24
    5d48:	80 81       	ld	r24, Z
    5d4a:	91 81       	ldd	r25, Z+1	; 0x01
    5d4c:	89 2b       	or	r24, r25
    5d4e:	a1 f6       	brne	.-88     	; 0x5cf8 <__stack+0x4bf9>
    5d50:	2c c0       	rjmp	.+88     	; 0x5daa <__stack+0x4cab>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5d52:	8e 01       	movw	r16, r28
    5d54:	0f 52       	subi	r16, 0x2F	; 47
    5d56:	1d 4f       	sbci	r17, 0xFD	; 253
    5d58:	ce 01       	movw	r24, r28
    5d5a:	83 53       	subi	r24, 0x33	; 51
    5d5c:	9d 4f       	sbci	r25, 0xFD	; 253
    5d5e:	fc 01       	movw	r30, r24
    5d60:	60 81       	ld	r22, Z
    5d62:	71 81       	ldd	r23, Z+1	; 0x01
    5d64:	82 81       	ldd	r24, Z+2	; 0x02
    5d66:	93 81       	ldd	r25, Z+3	; 0x03
    5d68:	0e 94 3a 33 	call	0x6674	; 0x6674 <__fixunssfsi>
    5d6c:	dc 01       	movw	r26, r24
    5d6e:	cb 01       	movw	r24, r22
    5d70:	f8 01       	movw	r30, r16
    5d72:	91 83       	std	Z+1, r25	; 0x01
    5d74:	80 83       	st	Z, r24
    5d76:	ce 01       	movw	r24, r28
    5d78:	8b 52       	subi	r24, 0x2B	; 43
    5d7a:	9d 4f       	sbci	r25, 0xFD	; 253
    5d7c:	9e 01       	movw	r18, r28
    5d7e:	2f 52       	subi	r18, 0x2F	; 47
    5d80:	3d 4f       	sbci	r19, 0xFD	; 253
    5d82:	f9 01       	movw	r30, r18
    5d84:	20 81       	ld	r18, Z
    5d86:	31 81       	ldd	r19, Z+1	; 0x01
    5d88:	fc 01       	movw	r30, r24
    5d8a:	31 83       	std	Z+1, r19	; 0x01
    5d8c:	20 83       	st	Z, r18
    5d8e:	ce 01       	movw	r24, r28
    5d90:	8b 52       	subi	r24, 0x2B	; 43
    5d92:	9d 4f       	sbci	r25, 0xFD	; 253
    5d94:	fc 01       	movw	r30, r24
    5d96:	80 81       	ld	r24, Z
    5d98:	91 81       	ldd	r25, Z+1	; 0x01
    5d9a:	01 97       	sbiw	r24, 0x01	; 1
    5d9c:	f1 f7       	brne	.-4      	; 0x5d9a <__stack+0x4c9b>
    5d9e:	9e 01       	movw	r18, r28
    5da0:	2b 52       	subi	r18, 0x2B	; 43
    5da2:	3d 4f       	sbci	r19, 0xFD	; 253
    5da4:	f9 01       	movw	r30, r18
    5da6:	91 83       	std	Z+1, r25	; 0x01
    5da8:	80 83       	st	Z, r24
					_delay_ms(500);
					to_uARM("M2210 F2000 T500\n");
    5daa:	81 e8       	ldi	r24, 0x81	; 129
    5dac:	91 e0       	ldi	r25, 0x01	; 1
    5dae:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
    5db2:	0c 94 97 05 	jmp	0xb2e	; 0xb2e <main+0x62>
				}
			}
			else
			{
				if (DIP_Switch&0x80)
    5db6:	80 91 7e 03 	lds	r24, 0x037E	; 0x80037e <__data_end>
    5dba:	88 23       	and	r24, r24
    5dbc:	f4 f4       	brge	.+60     	; 0x5dfa <__stack+0x4cfb>
				{
					write_zahl(2,10,recieved_X,4,0,0);
    5dbe:	89 81       	ldd	r24, Y+1	; 0x01
    5dc0:	9a 81       	ldd	r25, Y+2	; 0x02
    5dc2:	09 2e       	mov	r0, r25
    5dc4:	00 0c       	add	r0, r0
    5dc6:	aa 0b       	sbc	r26, r26
    5dc8:	bb 0b       	sbc	r27, r27
    5dca:	c1 2c       	mov	r12, r1
    5dcc:	e1 2c       	mov	r14, r1
    5dce:	04 e0       	ldi	r16, 0x04	; 4
    5dd0:	9c 01       	movw	r18, r24
    5dd2:	ad 01       	movw	r20, r26
    5dd4:	6a e0       	ldi	r22, 0x0A	; 10
    5dd6:	82 e0       	ldi	r24, 0x02	; 2
    5dd8:	0e 94 05 31 	call	0x620a	; 0x620a <write_zahl>
					write_zahl(3,10,recieved_Y,4,0,0);
    5ddc:	8b 81       	ldd	r24, Y+3	; 0x03
    5dde:	9c 81       	ldd	r25, Y+4	; 0x04
    5de0:	09 2e       	mov	r0, r25
    5de2:	00 0c       	add	r0, r0
    5de4:	aa 0b       	sbc	r26, r26
    5de6:	bb 0b       	sbc	r27, r27
    5de8:	c1 2c       	mov	r12, r1
    5dea:	e1 2c       	mov	r14, r1
    5dec:	04 e0       	ldi	r16, 0x04	; 4
    5dee:	9c 01       	movw	r18, r24
    5df0:	ad 01       	movw	r20, r26
    5df2:	6a e0       	ldi	r22, 0x0A	; 10
    5df4:	83 e0       	ldi	r24, 0x03	; 3
    5df6:	0e 94 05 31 	call	0x620a	; 0x620a <write_zahl>
				}	
				//Grid anpassung
				recieved_X-=384;
    5dfa:	89 81       	ldd	r24, Y+1	; 0x01
    5dfc:	9a 81       	ldd	r25, Y+2	; 0x02
    5dfe:	80 58       	subi	r24, 0x80	; 128
    5e00:	91 40       	sbci	r25, 0x01	; 1
    5e02:	9a 83       	std	Y+2, r25	; 0x02
    5e04:	89 83       	std	Y+1, r24	; 0x01
				recieved_Y-=512;				
    5e06:	8b 81       	ldd	r24, Y+3	; 0x03
    5e08:	9c 81       	ldd	r25, Y+4	; 0x04
    5e0a:	92 50       	subi	r25, 0x02	; 2
    5e0c:	9c 83       	std	Y+4, r25	; 0x04
    5e0e:	8b 83       	std	Y+3, r24	; 0x03
				recieved_X=((recieved_X/5)*-1)+200;
    5e10:	89 81       	ldd	r24, Y+1	; 0x01
    5e12:	9a 81       	ldd	r25, Y+2	; 0x02
    5e14:	25 e0       	ldi	r18, 0x05	; 5
    5e16:	30 e0       	ldi	r19, 0x00	; 0
    5e18:	b9 01       	movw	r22, r18
    5e1a:	0e 94 50 34 	call	0x68a0	; 0x68a0 <__divmodhi4>
    5e1e:	cb 01       	movw	r24, r22
    5e20:	9c 01       	movw	r18, r24
    5e22:	88 ec       	ldi	r24, 0xC8	; 200
    5e24:	90 e0       	ldi	r25, 0x00	; 0
    5e26:	82 1b       	sub	r24, r18
    5e28:	93 0b       	sbc	r25, r19
    5e2a:	9a 83       	std	Y+2, r25	; 0x02
    5e2c:	89 83       	std	Y+1, r24	; 0x01
				recieved_Y=(recieved_Y/5)*-1;	
    5e2e:	8b 81       	ldd	r24, Y+3	; 0x03
    5e30:	9c 81       	ldd	r25, Y+4	; 0x04
    5e32:	25 e0       	ldi	r18, 0x05	; 5
    5e34:	30 e0       	ldi	r19, 0x00	; 0
    5e36:	b9 01       	movw	r22, r18
    5e38:	0e 94 50 34 	call	0x68a0	; 0x68a0 <__divmodhi4>
    5e3c:	cb 01       	movw	r24, r22
    5e3e:	91 95       	neg	r25
    5e40:	81 95       	neg	r24
    5e42:	91 09       	sbc	r25, r1
    5e44:	9c 83       	std	Y+4, r25	; 0x04
    5e46:	8b 83       	std	Y+3, r24	; 0x03
				////////////////
							
				snprintf(buffer,30,"G0 X%d Y%d Z-20 F6000\n",recieved_X,recieved_Y);
    5e48:	8c 81       	ldd	r24, Y+4	; 0x04
    5e4a:	8f 93       	push	r24
    5e4c:	8b 81       	ldd	r24, Y+3	; 0x03
    5e4e:	8f 93       	push	r24
    5e50:	8a 81       	ldd	r24, Y+2	; 0x02
    5e52:	8f 93       	push	r24
    5e54:	89 81       	ldd	r24, Y+1	; 0x01
    5e56:	8f 93       	push	r24
    5e58:	87 e0       	ldi	r24, 0x07	; 7
    5e5a:	93 e0       	ldi	r25, 0x03	; 3
    5e5c:	89 2f       	mov	r24, r25
    5e5e:	8f 93       	push	r24
    5e60:	87 e0       	ldi	r24, 0x07	; 7
    5e62:	93 e0       	ldi	r25, 0x03	; 3
    5e64:	8f 93       	push	r24
    5e66:	1f 92       	push	r1
    5e68:	8e e1       	ldi	r24, 0x1E	; 30
    5e6a:	8f 93       	push	r24
    5e6c:	ce 01       	movw	r24, r28
    5e6e:	8f 51       	subi	r24, 0x1F	; 31
    5e70:	9d 4f       	sbci	r25, 0xFD	; 253
    5e72:	29 2f       	mov	r18, r25
    5e74:	2f 93       	push	r18
    5e76:	8f 93       	push	r24
    5e78:	0e 94 9a 34 	call	0x6934	; 0x6934 <snprintf>
    5e7c:	8d b7       	in	r24, 0x3d	; 61
    5e7e:	9e b7       	in	r25, 0x3e	; 62
    5e80:	0a 96       	adiw	r24, 0x0a	; 10
    5e82:	0f b6       	in	r0, 0x3f	; 63
    5e84:	f8 94       	cli
    5e86:	de bf       	out	0x3e, r29	; 62
    5e88:	0f be       	out	0x3f, r0	; 63
    5e8a:	cd bf       	out	0x3d, r28	; 61
				if (DIP_Switch&0x80)
    5e8c:	80 91 7e 03 	lds	r24, 0x037E	; 0x80037e <__data_end>
    5e90:	88 23       	and	r24, r24
    5e92:	f4 f4       	brge	.+60     	; 0x5ed0 <__stack+0x4dd1>
				{
					write_zahl(2,0,recieved_X,4,0,0);
    5e94:	89 81       	ldd	r24, Y+1	; 0x01
    5e96:	9a 81       	ldd	r25, Y+2	; 0x02
    5e98:	09 2e       	mov	r0, r25
    5e9a:	00 0c       	add	r0, r0
    5e9c:	aa 0b       	sbc	r26, r26
    5e9e:	bb 0b       	sbc	r27, r27
    5ea0:	c1 2c       	mov	r12, r1
    5ea2:	e1 2c       	mov	r14, r1
    5ea4:	04 e0       	ldi	r16, 0x04	; 4
    5ea6:	9c 01       	movw	r18, r24
    5ea8:	ad 01       	movw	r20, r26
    5eaa:	60 e0       	ldi	r22, 0x00	; 0
    5eac:	82 e0       	ldi	r24, 0x02	; 2
    5eae:	0e 94 05 31 	call	0x620a	; 0x620a <write_zahl>
					write_zahl(3,0,recieved_Y,4,0,0);
    5eb2:	8b 81       	ldd	r24, Y+3	; 0x03
    5eb4:	9c 81       	ldd	r25, Y+4	; 0x04
    5eb6:	09 2e       	mov	r0, r25
    5eb8:	00 0c       	add	r0, r0
    5eba:	aa 0b       	sbc	r26, r26
    5ebc:	bb 0b       	sbc	r27, r27
    5ebe:	c1 2c       	mov	r12, r1
    5ec0:	e1 2c       	mov	r14, r1
    5ec2:	04 e0       	ldi	r16, 0x04	; 4
    5ec4:	9c 01       	movw	r18, r24
    5ec6:	ad 01       	movw	r20, r26
    5ec8:	60 e0       	ldi	r22, 0x00	; 0
    5eca:	83 e0       	ldi	r24, 0x03	; 3
    5ecc:	0e 94 05 31 	call	0x620a	; 0x620a <write_zahl>
				}
				send_to_uArm(buffer);
    5ed0:	ce 01       	movw	r24, r28
    5ed2:	8f 51       	subi	r24, 0x1F	; 31
    5ed4:	9d 4f       	sbci	r25, 0xFD	; 253
    5ed6:	0e 94 85 03 	call	0x70a	; 0x70a <send_to_uArm>
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    5eda:	0b c0       	rjmp	.+22     	; 0x5ef2 <__stack+0x4df3>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
    5edc:	80 e0       	ldi	r24, 0x00	; 0
    5ede:	91 e0       	ldi	r25, 0x01	; 1
    5ee0:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
					ws2812_sendarray(array,LED_AMOUNT);
    5ee4:	ce 01       	movw	r24, r28
    5ee6:	8f 59       	subi	r24, 0x9F	; 159
    5ee8:	9c 4f       	sbci	r25, 0xFC	; 252
    5eea:	6a e0       	ldi	r22, 0x0A	; 10
    5eec:	70 e0       	ldi	r23, 0x00	; 0
    5eee:	0e 94 99 01 	call	0x332	; 0x332 <ws2812_sendarray>
				{
					write_zahl(2,0,recieved_X,4,0,0);
					write_zahl(3,0,recieved_Y,4,0,0);
				}
				send_to_uArm(buffer);
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    5ef2:	80 91 87 03 	lds	r24, 0x0387	; 0x800387 <uart_string1+0x4>
    5ef6:	81 33       	cpi	r24, 0x31	; 49
    5ef8:	89 f3       	breq	.-30     	; 0x5edc <__stack+0x4ddd>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
					ws2812_sendarray(array,LED_AMOUNT);
					
				}
				if (DIP_Switch&0x01)
    5efa:	80 91 7e 03 	lds	r24, 0x037E	; 0x80037e <__data_end>
    5efe:	88 2f       	mov	r24, r24
    5f00:	90 e0       	ldi	r25, 0x00	; 0
    5f02:	81 70       	andi	r24, 0x01	; 1
    5f04:	99 27       	eor	r25, r25
    5f06:	89 2b       	or	r24, r25
    5f08:	21 f0       	breq	.+8      	; 0x5f12 <__stack+0x4e13>
				{
					to_uARM("M2210 F2000 T200\n");
    5f0a:	8e e1       	ldi	r24, 0x1E	; 30
    5f0c:	93 e0       	ldi	r25, 0x03	; 3
    5f0e:	0e 94 5f 03 	call	0x6be	; 0x6be <to_uARM>
				}
				send_Byte_0('1');
    5f12:	81 e3       	ldi	r24, 0x31	; 49
    5f14:	0e 94 29 03 	call	0x652	; 0x652 <send_Byte_0>
			}	
		}
	} //end while(1)
    5f18:	0c 94 97 05 	jmp	0xb2e	; 0xb2e <main+0x62>

00005f1c <init_Timer0_1ms_int>:
    5f1c:	cf 93       	push	r28
    5f1e:	df 93       	push	r29
    5f20:	cd b7       	in	r28, 0x3d	; 61
    5f22:	de b7       	in	r29, 0x3e	; 62
    5f24:	84 e4       	ldi	r24, 0x44	; 68
    5f26:	90 e0       	ldi	r25, 0x00	; 0
    5f28:	24 e4       	ldi	r18, 0x44	; 68
    5f2a:	30 e0       	ldi	r19, 0x00	; 0
    5f2c:	f9 01       	movw	r30, r18
    5f2e:	20 81       	ld	r18, Z
    5f30:	22 60       	ori	r18, 0x02	; 2
    5f32:	fc 01       	movw	r30, r24
    5f34:	20 83       	st	Z, r18
    5f36:	85 e4       	ldi	r24, 0x45	; 69
    5f38:	90 e0       	ldi	r25, 0x00	; 0
    5f3a:	25 e4       	ldi	r18, 0x45	; 69
    5f3c:	30 e0       	ldi	r19, 0x00	; 0
    5f3e:	f9 01       	movw	r30, r18
    5f40:	20 81       	ld	r18, Z
    5f42:	23 60       	ori	r18, 0x03	; 3
    5f44:	fc 01       	movw	r30, r24
    5f46:	20 83       	st	Z, r18
    5f48:	87 e4       	ldi	r24, 0x47	; 71
    5f4a:	90 e0       	ldi	r25, 0x00	; 0
    5f4c:	29 ef       	ldi	r18, 0xF9	; 249
    5f4e:	fc 01       	movw	r30, r24
    5f50:	20 83       	st	Z, r18
    5f52:	8e e6       	ldi	r24, 0x6E	; 110
    5f54:	90 e0       	ldi	r25, 0x00	; 0
    5f56:	2e e6       	ldi	r18, 0x6E	; 110
    5f58:	30 e0       	ldi	r19, 0x00	; 0
    5f5a:	f9 01       	movw	r30, r18
    5f5c:	20 81       	ld	r18, Z
    5f5e:	22 60       	ori	r18, 0x02	; 2
    5f60:	fc 01       	movw	r30, r24
    5f62:	20 83       	st	Z, r18
    5f64:	00 00       	nop
    5f66:	df 91       	pop	r29
    5f68:	cf 91       	pop	r28
    5f6a:	08 95       	ret

00005f6c <__vector_16>:
    5f6c:	1f 92       	push	r1
    5f6e:	0f 92       	push	r0
    5f70:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    5f74:	0f 92       	push	r0
    5f76:	11 24       	eor	r1, r1
    5f78:	2f 93       	push	r18
    5f7a:	3f 93       	push	r19
    5f7c:	4f 93       	push	r20
    5f7e:	5f 93       	push	r21
    5f80:	6f 93       	push	r22
    5f82:	7f 93       	push	r23
    5f84:	8f 93       	push	r24
    5f86:	9f 93       	push	r25
    5f88:	af 93       	push	r26
    5f8a:	bf 93       	push	r27
    5f8c:	ef 93       	push	r30
    5f8e:	ff 93       	push	r31
    5f90:	cf 93       	push	r28
    5f92:	df 93       	push	r29
    5f94:	cd b7       	in	r28, 0x3d	; 61
    5f96:	de b7       	in	r29, 0x3e	; 62
    5f98:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <tick_1ms>
    5f9c:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <tick_1ms+0x1>
    5fa0:	a0 91 bc 03 	lds	r26, 0x03BC	; 0x8003bc <tick_1ms+0x2>
    5fa4:	b0 91 bd 03 	lds	r27, 0x03BD	; 0x8003bd <tick_1ms+0x3>
    5fa8:	01 96       	adiw	r24, 0x01	; 1
    5faa:	a1 1d       	adc	r26, r1
    5fac:	b1 1d       	adc	r27, r1
    5fae:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <tick_1ms>
    5fb2:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <tick_1ms+0x1>
    5fb6:	a0 93 bc 03 	sts	0x03BC, r26	; 0x8003bc <tick_1ms+0x2>
    5fba:	b0 93 bd 03 	sts	0x03BD, r27	; 0x8003bd <tick_1ms+0x3>
    5fbe:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <tick_1ms>
    5fc2:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <tick_1ms+0x1>
    5fc6:	a0 91 bc 03 	lds	r26, 0x03BC	; 0x8003bc <tick_1ms+0x2>
    5fca:	b0 91 bd 03 	lds	r27, 0x03BD	; 0x8003bd <tick_1ms+0x3>
    5fce:	28 ee       	ldi	r18, 0xE8	; 232
    5fd0:	33 e0       	ldi	r19, 0x03	; 3
    5fd2:	40 e0       	ldi	r20, 0x00	; 0
    5fd4:	50 e0       	ldi	r21, 0x00	; 0
    5fd6:	bc 01       	movw	r22, r24
    5fd8:	cd 01       	movw	r24, r26
    5fda:	0e 94 64 34 	call	0x68c8	; 0x68c8 <__udivmodsi4>
    5fde:	dc 01       	movw	r26, r24
    5fe0:	cb 01       	movw	r24, r22
    5fe2:	89 2b       	or	r24, r25
    5fe4:	8a 2b       	or	r24, r26
    5fe6:	8b 2b       	or	r24, r27
    5fe8:	99 f4       	brne	.+38     	; 0x6010 <__vector_16+0xa4>
    5fea:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <tick_1s>
    5fee:	90 91 bf 03 	lds	r25, 0x03BF	; 0x8003bf <tick_1s+0x1>
    5ff2:	a0 91 c0 03 	lds	r26, 0x03C0	; 0x8003c0 <tick_1s+0x2>
    5ff6:	b0 91 c1 03 	lds	r27, 0x03C1	; 0x8003c1 <tick_1s+0x3>
    5ffa:	01 96       	adiw	r24, 0x01	; 1
    5ffc:	a1 1d       	adc	r26, r1
    5ffe:	b1 1d       	adc	r27, r1
    6000:	80 93 be 03 	sts	0x03BE, r24	; 0x8003be <tick_1s>
    6004:	90 93 bf 03 	sts	0x03BF, r25	; 0x8003bf <tick_1s+0x1>
    6008:	a0 93 c0 03 	sts	0x03C0, r26	; 0x8003c0 <tick_1s+0x2>
    600c:	b0 93 c1 03 	sts	0x03C1, r27	; 0x8003c1 <tick_1s+0x3>
    6010:	80 91 b6 03 	lds	r24, 0x03B6	; 0x8003b6 <tick_1ms_cnt>
    6014:	90 91 b7 03 	lds	r25, 0x03B7	; 0x8003b7 <tick_1ms_cnt+0x1>
    6018:	a0 91 b8 03 	lds	r26, 0x03B8	; 0x8003b8 <tick_1ms_cnt+0x2>
    601c:	b0 91 b9 03 	lds	r27, 0x03B9	; 0x8003b9 <tick_1ms_cnt+0x3>
    6020:	89 2b       	or	r24, r25
    6022:	8a 2b       	or	r24, r26
    6024:	8b 2b       	or	r24, r27
    6026:	99 f0       	breq	.+38     	; 0x604e <__vector_16+0xe2>
    6028:	80 91 b6 03 	lds	r24, 0x03B6	; 0x8003b6 <tick_1ms_cnt>
    602c:	90 91 b7 03 	lds	r25, 0x03B7	; 0x8003b7 <tick_1ms_cnt+0x1>
    6030:	a0 91 b8 03 	lds	r26, 0x03B8	; 0x8003b8 <tick_1ms_cnt+0x2>
    6034:	b0 91 b9 03 	lds	r27, 0x03B9	; 0x8003b9 <tick_1ms_cnt+0x3>
    6038:	01 97       	sbiw	r24, 0x01	; 1
    603a:	a1 09       	sbc	r26, r1
    603c:	b1 09       	sbc	r27, r1
    603e:	80 93 b6 03 	sts	0x03B6, r24	; 0x8003b6 <tick_1ms_cnt>
    6042:	90 93 b7 03 	sts	0x03B7, r25	; 0x8003b7 <tick_1ms_cnt+0x1>
    6046:	a0 93 b8 03 	sts	0x03B8, r26	; 0x8003b8 <tick_1ms_cnt+0x2>
    604a:	b0 93 b9 03 	sts	0x03B9, r27	; 0x8003b9 <tick_1ms_cnt+0x3>
    604e:	00 00       	nop
    6050:	df 91       	pop	r29
    6052:	cf 91       	pop	r28
    6054:	ff 91       	pop	r31
    6056:	ef 91       	pop	r30
    6058:	bf 91       	pop	r27
    605a:	af 91       	pop	r26
    605c:	9f 91       	pop	r25
    605e:	8f 91       	pop	r24
    6060:	7f 91       	pop	r23
    6062:	6f 91       	pop	r22
    6064:	5f 91       	pop	r21
    6066:	4f 91       	pop	r20
    6068:	3f 91       	pop	r19
    606a:	2f 91       	pop	r18
    606c:	0f 90       	pop	r0
    606e:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    6072:	0f 90       	pop	r0
    6074:	1f 90       	pop	r1
    6076:	18 95       	reti

00006078 <wait_1ms>:
    6078:	cf 93       	push	r28
    607a:	df 93       	push	r29
    607c:	00 d0       	rcall	.+0      	; 0x607e <wait_1ms+0x6>
    607e:	00 d0       	rcall	.+0      	; 0x6080 <wait_1ms+0x8>
    6080:	cd b7       	in	r28, 0x3d	; 61
    6082:	de b7       	in	r29, 0x3e	; 62
    6084:	69 83       	std	Y+1, r22	; 0x01
    6086:	7a 83       	std	Y+2, r23	; 0x02
    6088:	8b 83       	std	Y+3, r24	; 0x03
    608a:	9c 83       	std	Y+4, r25	; 0x04
    608c:	89 81       	ldd	r24, Y+1	; 0x01
    608e:	9a 81       	ldd	r25, Y+2	; 0x02
    6090:	ab 81       	ldd	r26, Y+3	; 0x03
    6092:	bc 81       	ldd	r27, Y+4	; 0x04
    6094:	89 2b       	or	r24, r25
    6096:	8a 2b       	or	r24, r26
    6098:	8b 2b       	or	r24, r27
    609a:	69 f0       	breq	.+26     	; 0x60b6 <wait_1ms+0x3e>
    609c:	89 81       	ldd	r24, Y+1	; 0x01
    609e:	9a 81       	ldd	r25, Y+2	; 0x02
    60a0:	ab 81       	ldd	r26, Y+3	; 0x03
    60a2:	bc 81       	ldd	r27, Y+4	; 0x04
    60a4:	80 93 b6 03 	sts	0x03B6, r24	; 0x8003b6 <tick_1ms_cnt>
    60a8:	90 93 b7 03 	sts	0x03B7, r25	; 0x8003b7 <tick_1ms_cnt+0x1>
    60ac:	a0 93 b8 03 	sts	0x03B8, r26	; 0x8003b8 <tick_1ms_cnt+0x2>
    60b0:	b0 93 b9 03 	sts	0x03B9, r27	; 0x8003b9 <tick_1ms_cnt+0x3>
    60b4:	0c c0       	rjmp	.+24     	; 0x60ce <wait_1ms+0x56>
    60b6:	81 e0       	ldi	r24, 0x01	; 1
    60b8:	90 e0       	ldi	r25, 0x00	; 0
    60ba:	a0 e0       	ldi	r26, 0x00	; 0
    60bc:	b0 e0       	ldi	r27, 0x00	; 0
    60be:	80 93 b6 03 	sts	0x03B6, r24	; 0x8003b6 <tick_1ms_cnt>
    60c2:	90 93 b7 03 	sts	0x03B7, r25	; 0x8003b7 <tick_1ms_cnt+0x1>
    60c6:	a0 93 b8 03 	sts	0x03B8, r26	; 0x8003b8 <tick_1ms_cnt+0x2>
    60ca:	b0 93 b9 03 	sts	0x03B9, r27	; 0x8003b9 <tick_1ms_cnt+0x3>
    60ce:	00 00       	nop
    60d0:	80 91 b6 03 	lds	r24, 0x03B6	; 0x8003b6 <tick_1ms_cnt>
    60d4:	90 91 b7 03 	lds	r25, 0x03B7	; 0x8003b7 <tick_1ms_cnt+0x1>
    60d8:	a0 91 b8 03 	lds	r26, 0x03B8	; 0x8003b8 <tick_1ms_cnt+0x2>
    60dc:	b0 91 b9 03 	lds	r27, 0x03B9	; 0x8003b9 <tick_1ms_cnt+0x3>
    60e0:	89 2b       	or	r24, r25
    60e2:	8a 2b       	or	r24, r26
    60e4:	8b 2b       	or	r24, r27
    60e6:	a1 f7       	brne	.-24     	; 0x60d0 <wait_1ms+0x58>
    60e8:	00 00       	nop
    60ea:	0f 90       	pop	r0
    60ec:	0f 90       	pop	r0
    60ee:	0f 90       	pop	r0
    60f0:	0f 90       	pop	r0
    60f2:	df 91       	pop	r29
    60f4:	cf 91       	pop	r28
    60f6:	08 95       	ret

000060f8 <delay_nop>:
    60f8:	cf 93       	push	r28
    60fa:	df 93       	push	r29
    60fc:	00 d0       	rcall	.+0      	; 0x60fe <delay_nop+0x6>
    60fe:	cd b7       	in	r28, 0x3d	; 61
    6100:	de b7       	in	r29, 0x3e	; 62
    6102:	8a 83       	std	Y+2, r24	; 0x02
    6104:	19 82       	std	Y+1, r1	; 0x01
    6106:	04 c0       	rjmp	.+8      	; 0x6110 <delay_nop+0x18>
    6108:	00 00       	nop
    610a:	89 81       	ldd	r24, Y+1	; 0x01
    610c:	8f 5f       	subi	r24, 0xFF	; 255
    610e:	89 83       	std	Y+1, r24	; 0x01
    6110:	99 81       	ldd	r25, Y+1	; 0x01
    6112:	8a 81       	ldd	r24, Y+2	; 0x02
    6114:	98 17       	cp	r25, r24
    6116:	c0 f3       	brcs	.-16     	; 0x6108 <delay_nop+0x10>
    6118:	00 00       	nop
    611a:	0f 90       	pop	r0
    611c:	0f 90       	pop	r0
    611e:	df 91       	pop	r29
    6120:	cf 91       	pop	r28
    6122:	08 95       	ret

00006124 <write_lcd_f>:
    6124:	91 e0       	ldi	r25, 0x01	; 1
    6126:	90 93 c2 03 	sts	0x03C2, r25	; 0x8003c2 <write_RGB_LCD_activ>
    612a:	40 9a       	sbi	0x08, 0	; 8
    612c:	41 98       	cbi	0x08, 1	; 8
    612e:	41 98       	cbi	0x08, 1	; 8
    6130:	41 9a       	sbi	0x08, 1	; 8
    6132:	41 9a       	sbi	0x08, 1	; 8
    6134:	41 98       	cbi	0x08, 1	; 8
    6136:	41 98       	cbi	0x08, 1	; 8
    6138:	41 9a       	sbi	0x08, 1	; 8
    613a:	41 9a       	sbi	0x08, 1	; 8
    613c:	41 98       	cbi	0x08, 1	; 8
    613e:	41 98       	cbi	0x08, 1	; 8
    6140:	41 9a       	sbi	0x08, 1	; 8
    6142:	41 9a       	sbi	0x08, 1	; 8
    6144:	41 98       	cbi	0x08, 1	; 8
    6146:	41 98       	cbi	0x08, 1	; 8
    6148:	41 9a       	sbi	0x08, 1	; 8
    614a:	41 9a       	sbi	0x08, 1	; 8
    614c:	41 98       	cbi	0x08, 1	; 8
    614e:	41 98       	cbi	0x08, 1	; 8
    6150:	41 9a       	sbi	0x08, 1	; 8
    6152:	40 98       	cbi	0x08, 0	; 8
    6154:	41 98       	cbi	0x08, 1	; 8
    6156:	41 98       	cbi	0x08, 1	; 8
    6158:	41 9a       	sbi	0x08, 1	; 8
    615a:	83 34       	cpi	r24, 0x43	; 67
    615c:	a9 f1       	breq	.+106    	; 0x61c8 <write_lcd_f+0xa4>
    615e:	40 9a       	sbi	0x08, 0	; 8
    6160:	41 98       	cbi	0x08, 1	; 8
    6162:	41 98       	cbi	0x08, 1	; 8
    6164:	41 9a       	sbi	0x08, 1	; 8
    6166:	40 98       	cbi	0x08, 0	; 8
    6168:	41 98       	cbi	0x08, 1	; 8
    616a:	41 98       	cbi	0x08, 1	; 8
    616c:	41 9a       	sbi	0x08, 1	; 8
    616e:	84 e0       	ldi	r24, 0x04	; 4
    6170:	41 98       	cbi	0x08, 1	; 8
    6172:	60 ff       	sbrs	r22, 0
    6174:	27 c0       	rjmp	.+78     	; 0x61c4 <write_lcd_f+0xa0>
    6176:	40 9a       	sbi	0x08, 0	; 8
    6178:	66 95       	lsr	r22
    617a:	41 98       	cbi	0x08, 1	; 8
    617c:	41 9a       	sbi	0x08, 1	; 8
    617e:	81 50       	subi	r24, 0x01	; 1
    6180:	b9 f7       	brne	.-18     	; 0x6170 <write_lcd_f+0x4c>
    6182:	40 98       	cbi	0x08, 0	; 8
    6184:	84 e0       	ldi	r24, 0x04	; 4
    6186:	41 98       	cbi	0x08, 1	; 8
    6188:	41 98       	cbi	0x08, 1	; 8
    618a:	41 9a       	sbi	0x08, 1	; 8
    618c:	81 50       	subi	r24, 0x01	; 1
    618e:	d9 f7       	brne	.-10     	; 0x6186 <write_lcd_f+0x62>
    6190:	84 e0       	ldi	r24, 0x04	; 4
    6192:	41 98       	cbi	0x08, 1	; 8
    6194:	60 ff       	sbrs	r22, 0
    6196:	14 c0       	rjmp	.+40     	; 0x61c0 <write_lcd_f+0x9c>
    6198:	40 9a       	sbi	0x08, 0	; 8
    619a:	66 95       	lsr	r22
    619c:	41 98       	cbi	0x08, 1	; 8
    619e:	41 9a       	sbi	0x08, 1	; 8
    61a0:	81 50       	subi	r24, 0x01	; 1
    61a2:	b9 f7       	brne	.-18     	; 0x6192 <write_lcd_f+0x6e>
    61a4:	40 98       	cbi	0x08, 0	; 8
    61a6:	84 e0       	ldi	r24, 0x04	; 4
    61a8:	41 98       	cbi	0x08, 1	; 8
    61aa:	41 98       	cbi	0x08, 1	; 8
    61ac:	41 9a       	sbi	0x08, 1	; 8
    61ae:	81 50       	subi	r24, 0x01	; 1
    61b0:	d9 f7       	brne	.-10     	; 0x61a8 <write_lcd_f+0x84>
    61b2:	84 e1       	ldi	r24, 0x14	; 20
    61b4:	40 9a       	sbi	0x08, 0	; 8
    61b6:	81 50       	subi	r24, 0x01	; 1
    61b8:	e9 f7       	brne	.-6      	; 0x61b4 <write_lcd_f+0x90>
    61ba:	10 92 c2 03 	sts	0x03C2, r1	; 0x8003c2 <write_RGB_LCD_activ>
    61be:	08 95       	ret
    61c0:	40 98       	cbi	0x08, 0	; 8
    61c2:	eb cf       	rjmp	.-42     	; 0x619a <write_lcd_f+0x76>
    61c4:	40 98       	cbi	0x08, 0	; 8
    61c6:	d8 cf       	rjmp	.-80     	; 0x6178 <write_lcd_f+0x54>
    61c8:	40 98       	cbi	0x08, 0	; 8
    61ca:	ca cf       	rjmp	.-108    	; 0x6160 <write_lcd_f+0x3c>

000061cc <write_text_ram>:
    61cc:	0f 93       	push	r16
    61ce:	1f 93       	push	r17
    61d0:	df 93       	push	r29
    61d2:	8a 01       	movw	r16, r20
    61d4:	90 e2       	ldi	r25, 0x20	; 32
    61d6:	89 9f       	mul	r24, r25
    61d8:	60 0d       	add	r22, r0
    61da:	11 24       	eor	r1, r1
    61dc:	60 68       	ori	r22, 0x80	; 128
    61de:	83 e4       	ldi	r24, 0x43	; 67
    61e0:	0e 94 92 30 	call	0x6124	; 0x6124 <write_lcd_f>
    61e4:	f8 01       	movw	r30, r16
    61e6:	60 81       	ld	r22, Z
    61e8:	66 23       	and	r22, r22
    61ea:	59 f0       	breq	.+22     	; 0x6202 <write_text_ram+0x36>
    61ec:	d0 e0       	ldi	r29, 0x00	; 0
    61ee:	df 5f       	subi	r29, 0xFF	; 255
    61f0:	84 e4       	ldi	r24, 0x44	; 68
    61f2:	0e 94 92 30 	call	0x6124	; 0x6124 <write_lcd_f>
    61f6:	f8 01       	movw	r30, r16
    61f8:	ed 0f       	add	r30, r29
    61fa:	f1 1d       	adc	r31, r1
    61fc:	60 81       	ld	r22, Z
    61fe:	61 11       	cpse	r22, r1
    6200:	f6 cf       	rjmp	.-20     	; 0x61ee <write_text_ram+0x22>
    6202:	df 91       	pop	r29
    6204:	1f 91       	pop	r17
    6206:	0f 91       	pop	r16
    6208:	08 95       	ret

0000620a <write_zahl>:
    620a:	2f 92       	push	r2
    620c:	3f 92       	push	r3
    620e:	4f 92       	push	r4
    6210:	5f 92       	push	r5
    6212:	6f 92       	push	r6
    6214:	7f 92       	push	r7
    6216:	8f 92       	push	r8
    6218:	9f 92       	push	r9
    621a:	af 92       	push	r10
    621c:	bf 92       	push	r11
    621e:	cf 92       	push	r12
    6220:	df 92       	push	r13
    6222:	ef 92       	push	r14
    6224:	ff 92       	push	r15
    6226:	0f 93       	push	r16
    6228:	1f 93       	push	r17
    622a:	cf 93       	push	r28
    622c:	df 93       	push	r29
    622e:	cd b7       	in	r28, 0x3d	; 61
    6230:	de b7       	in	r29, 0x3e	; 62
    6232:	63 97       	sbiw	r28, 0x13	; 19
    6234:	0f b6       	in	r0, 0x3f	; 63
    6236:	f8 94       	cli
    6238:	de bf       	out	0x3e, r29	; 62
    623a:	0f be       	out	0x3f, r0	; 63
    623c:	cd bf       	out	0x3d, r28	; 61
    623e:	8a 8b       	std	Y+18, r24	; 0x12
    6240:	6b 8b       	std	Y+19, r22	; 0x13
    6242:	29 01       	movw	r4, r18
    6244:	3a 01       	movw	r6, r20
    6246:	c8 8a       	std	Y+16, r12	; 0x10
    6248:	04 36       	cpi	r16, 0x64	; 100
    624a:	08 f4       	brcc	.+2      	; 0x624e <write_zahl+0x44>
    624c:	bd c0       	rjmp	.+378    	; 0x63c8 <write_zahl+0x1be>
    624e:	04 56       	subi	r16, 0x64	; 100
    6250:	19 8a       	std	Y+17, r1	; 0x11
    6252:	0b 30       	cpi	r16, 0x0B	; 11
    6254:	08 f0       	brcs	.+2      	; 0x6258 <write_zahl+0x4e>
    6256:	0a e0       	ldi	r16, 0x0A	; 10
    6258:	ef 86       	std	Y+15, r14	; 0x0f
    625a:	88 89       	ldd	r24, Y+16	; 0x10
    625c:	8e 15       	cp	r24, r14
    625e:	08 f4       	brcc	.+2      	; 0x6262 <write_zahl+0x58>
    6260:	8f 87       	std	Y+15, r24	; 0x0f
    6262:	20 2e       	mov	r2, r16
    6264:	31 2c       	mov	r3, r1
    6266:	c1 01       	movw	r24, r2
    6268:	ef 85       	ldd	r30, Y+15	; 0x0f
    626a:	8e 0f       	add	r24, r30
    626c:	91 1d       	adc	r25, r1
    626e:	0b 97       	sbiw	r24, 0x0b	; 11
    6270:	1c f0       	brlt	.+6      	; 0x6278 <write_zahl+0x6e>
    6272:	8a e0       	ldi	r24, 0x0A	; 10
    6274:	80 1b       	sub	r24, r16
    6276:	8f 87       	std	Y+15, r24	; 0x0f
    6278:	c3 01       	movw	r24, r6
    627a:	b2 01       	movw	r22, r4
    627c:	2a e0       	ldi	r18, 0x0A	; 10
    627e:	30 e0       	ldi	r19, 0x00	; 0
    6280:	40 e0       	ldi	r20, 0x00	; 0
    6282:	50 e0       	ldi	r21, 0x00	; 0
    6284:	0e 94 64 34 	call	0x68c8	; 0x68c8 <__udivmodsi4>
    6288:	60 5d       	subi	r22, 0xD0	; 208
    628a:	6c 87       	std	Y+12, r22	; 0x0c
    628c:	1a e0       	ldi	r17, 0x0A	; 10
    628e:	3a e0       	ldi	r19, 0x0A	; 10
    6290:	c3 2e       	mov	r12, r19
    6292:	d1 2c       	mov	r13, r1
    6294:	e1 2c       	mov	r14, r1
    6296:	f1 2c       	mov	r15, r1
    6298:	4a e0       	ldi	r20, 0x0A	; 10
    629a:	84 2e       	mov	r8, r20
    629c:	91 2c       	mov	r9, r1
    629e:	a1 2c       	mov	r10, r1
    62a0:	b1 2c       	mov	r11, r1
    62a2:	81 e0       	ldi	r24, 0x01	; 1
    62a4:	90 e0       	ldi	r25, 0x00	; 0
    62a6:	8c 0f       	add	r24, r28
    62a8:	9d 1f       	adc	r25, r29
    62aa:	81 0f       	add	r24, r17
    62ac:	91 1d       	adc	r25, r1
    62ae:	9e 87       	std	Y+14, r25	; 0x0e
    62b0:	8d 87       	std	Y+13, r24	; 0x0d
    62b2:	c3 01       	movw	r24, r6
    62b4:	b2 01       	movw	r22, r4
    62b6:	a7 01       	movw	r20, r14
    62b8:	96 01       	movw	r18, r12
    62ba:	0e 94 64 34 	call	0x68c8	; 0x68c8 <__udivmodsi4>
    62be:	ca 01       	movw	r24, r20
    62c0:	b9 01       	movw	r22, r18
    62c2:	a5 01       	movw	r20, r10
    62c4:	94 01       	movw	r18, r8
    62c6:	0e 94 64 34 	call	0x68c8	; 0x68c8 <__udivmodsi4>
    62ca:	60 5d       	subi	r22, 0xD0	; 208
    62cc:	ed 85       	ldd	r30, Y+13	; 0x0d
    62ce:	fe 85       	ldd	r31, Y+14	; 0x0e
    62d0:	60 83       	st	Z, r22
    62d2:	cc 0c       	add	r12, r12
    62d4:	dd 1c       	adc	r13, r13
    62d6:	ee 1c       	adc	r14, r14
    62d8:	ff 1c       	adc	r15, r15
    62da:	d7 01       	movw	r26, r14
    62dc:	c6 01       	movw	r24, r12
    62de:	88 0f       	add	r24, r24
    62e0:	99 1f       	adc	r25, r25
    62e2:	aa 1f       	adc	r26, r26
    62e4:	bb 1f       	adc	r27, r27
    62e6:	88 0f       	add	r24, r24
    62e8:	99 1f       	adc	r25, r25
    62ea:	aa 1f       	adc	r26, r26
    62ec:	bb 1f       	adc	r27, r27
    62ee:	c8 0e       	add	r12, r24
    62f0:	d9 1e       	adc	r13, r25
    62f2:	ea 1e       	adc	r14, r26
    62f4:	fb 1e       	adc	r15, r27
    62f6:	11 50       	subi	r17, 0x01	; 1
    62f8:	a0 f6       	brcc	.-88     	; 0x62a2 <write_zahl+0x98>
    62fa:	2c e0       	ldi	r18, 0x0C	; 12
    62fc:	f8 89       	ldd	r31, Y+16	; 0x10
    62fe:	2f 1b       	sub	r18, r31
    6300:	82 2f       	mov	r24, r18
    6302:	80 1b       	sub	r24, r16
    6304:	00 23       	and	r16, r16
    6306:	09 f4       	brne	.+2      	; 0x630a <write_zahl+0x100>
    6308:	85 c0       	rjmp	.+266    	; 0x6414 <write_zahl+0x20a>
    630a:	fe 01       	movw	r30, r28
    630c:	31 96       	adiw	r30, 0x01	; 1
    630e:	a1 e0       	ldi	r26, 0x01	; 1
    6310:	b0 e0       	ldi	r27, 0x00	; 0
    6312:	ac 0f       	add	r26, r28
    6314:	bd 1f       	adc	r27, r29
    6316:	a8 0f       	add	r26, r24
    6318:	b1 1d       	adc	r27, r1
    631a:	9c 91       	ld	r25, X
    631c:	91 93       	st	Z+, r25
    631e:	8f 5f       	subi	r24, 0xFF	; 255
    6320:	28 13       	cpse	r18, r24
    6322:	f5 cf       	rjmp	.-22     	; 0x630e <write_zahl+0x104>
    6324:	8f 85       	ldd	r24, Y+15	; 0x0f
    6326:	81 11       	cpse	r24, r1
    6328:	52 c0       	rjmp	.+164    	; 0x63ce <write_zahl+0x1c4>
    632a:	f1 01       	movw	r30, r2
    632c:	81 e0       	ldi	r24, 0x01	; 1
    632e:	90 e0       	ldi	r25, 0x00	; 0
    6330:	8c 0f       	add	r24, r28
    6332:	9d 1f       	adc	r25, r29
    6334:	e8 0f       	add	r30, r24
    6336:	f9 1f       	adc	r31, r25
    6338:	10 82       	st	Z, r1
    633a:	99 89       	ldd	r25, Y+17	; 0x11
    633c:	99 23       	and	r25, r25
    633e:	21 f1       	breq	.+72     	; 0x6388 <write_zahl+0x17e>
    6340:	89 81       	ldd	r24, Y+1	; 0x01
    6342:	80 33       	cpi	r24, 0x30	; 48
    6344:	09 f5       	brne	.+66     	; 0x6388 <write_zahl+0x17e>
    6346:	a1 01       	movw	r20, r2
    6348:	41 50       	subi	r20, 0x01	; 1
    634a:	51 09       	sbc	r21, r1
    634c:	14 16       	cp	r1, r20
    634e:	15 06       	cpc	r1, r21
    6350:	dc f4       	brge	.+54     	; 0x6388 <write_zahl+0x17e>
    6352:	80 e0       	ldi	r24, 0x00	; 0
    6354:	90 e0       	ldi	r25, 0x00	; 0
    6356:	20 e0       	ldi	r18, 0x00	; 0
    6358:	60 e2       	ldi	r22, 0x20	; 32
    635a:	03 c0       	rjmp	.+6      	; 0x6362 <write_zahl+0x158>
    635c:	84 17       	cp	r24, r20
    635e:	95 07       	cpc	r25, r21
    6360:	9c f4       	brge	.+38     	; 0x6388 <write_zahl+0x17e>
    6362:	2f 5f       	subi	r18, 0xFF	; 255
    6364:	e1 e0       	ldi	r30, 0x01	; 1
    6366:	f0 e0       	ldi	r31, 0x00	; 0
    6368:	ec 0f       	add	r30, r28
    636a:	fd 1f       	adc	r31, r29
    636c:	e8 0f       	add	r30, r24
    636e:	f9 1f       	adc	r31, r25
    6370:	60 83       	st	Z, r22
    6372:	82 2f       	mov	r24, r18
    6374:	90 e0       	ldi	r25, 0x00	; 0
    6376:	e1 e0       	ldi	r30, 0x01	; 1
    6378:	f0 e0       	ldi	r31, 0x00	; 0
    637a:	ec 0f       	add	r30, r28
    637c:	fd 1f       	adc	r31, r29
    637e:	e8 0f       	add	r30, r24
    6380:	f9 1f       	adc	r31, r25
    6382:	30 81       	ld	r19, Z
    6384:	30 33       	cpi	r19, 0x30	; 48
    6386:	51 f3       	breq	.-44     	; 0x635c <write_zahl+0x152>
    6388:	ae 01       	movw	r20, r28
    638a:	4f 5f       	subi	r20, 0xFF	; 255
    638c:	5f 4f       	sbci	r21, 0xFF	; 255
    638e:	6b 89       	ldd	r22, Y+19	; 0x13
    6390:	8a 89       	ldd	r24, Y+18	; 0x12
    6392:	0e 94 e6 30 	call	0x61cc	; 0x61cc <write_text_ram>
    6396:	63 96       	adiw	r28, 0x13	; 19
    6398:	0f b6       	in	r0, 0x3f	; 63
    639a:	f8 94       	cli
    639c:	de bf       	out	0x3e, r29	; 62
    639e:	0f be       	out	0x3f, r0	; 63
    63a0:	cd bf       	out	0x3d, r28	; 61
    63a2:	df 91       	pop	r29
    63a4:	cf 91       	pop	r28
    63a6:	1f 91       	pop	r17
    63a8:	0f 91       	pop	r16
    63aa:	ff 90       	pop	r15
    63ac:	ef 90       	pop	r14
    63ae:	df 90       	pop	r13
    63b0:	cf 90       	pop	r12
    63b2:	bf 90       	pop	r11
    63b4:	af 90       	pop	r10
    63b6:	9f 90       	pop	r9
    63b8:	8f 90       	pop	r8
    63ba:	7f 90       	pop	r7
    63bc:	6f 90       	pop	r6
    63be:	5f 90       	pop	r5
    63c0:	4f 90       	pop	r4
    63c2:	3f 90       	pop	r3
    63c4:	2f 90       	pop	r2
    63c6:	08 95       	ret
    63c8:	21 e0       	ldi	r18, 0x01	; 1
    63ca:	29 8b       	std	Y+17, r18	; 0x11
    63cc:	42 cf       	rjmp	.-380    	; 0x6252 <write_zahl+0x48>
    63ce:	0f 5f       	subi	r16, 0xFF	; 255
    63d0:	8e e2       	ldi	r24, 0x2E	; 46
    63d2:	e1 e0       	ldi	r30, 0x01	; 1
    63d4:	f0 e0       	ldi	r31, 0x00	; 0
    63d6:	ec 0f       	add	r30, r28
    63d8:	fd 1f       	adc	r31, r29
    63da:	e2 0d       	add	r30, r2
    63dc:	f3 1d       	adc	r31, r3
    63de:	80 83       	st	Z, r24
    63e0:	e0 2f       	mov	r30, r16
    63e2:	20 1b       	sub	r18, r16
    63e4:	82 2f       	mov	r24, r18
    63e6:	8e 0f       	add	r24, r30
    63e8:	a1 e0       	ldi	r26, 0x01	; 1
    63ea:	b0 e0       	ldi	r27, 0x00	; 0
    63ec:	ac 0f       	add	r26, r28
    63ee:	bd 1f       	adc	r27, r29
    63f0:	a8 0f       	add	r26, r24
    63f2:	b1 1d       	adc	r27, r1
    63f4:	8c 91       	ld	r24, X
    63f6:	a1 e0       	ldi	r26, 0x01	; 1
    63f8:	b0 e0       	ldi	r27, 0x00	; 0
    63fa:	ac 0f       	add	r26, r28
    63fc:	bd 1f       	adc	r27, r29
    63fe:	ae 0f       	add	r26, r30
    6400:	b1 1d       	adc	r27, r1
    6402:	8c 93       	st	X, r24
    6404:	ef 5f       	subi	r30, 0xFF	; 255
    6406:	8e 2f       	mov	r24, r30
    6408:	80 1b       	sub	r24, r16
    640a:	9f 85       	ldd	r25, Y+15	; 0x0f
    640c:	89 17       	cp	r24, r25
    640e:	50 f3       	brcs	.-44     	; 0x63e4 <write_zahl+0x1da>
    6410:	f0 e0       	ldi	r31, 0x00	; 0
    6412:	8c cf       	rjmp	.-232    	; 0x632c <write_zahl+0x122>
    6414:	ef 85       	ldd	r30, Y+15	; 0x0f
    6416:	ee 23       	and	r30, r30
    6418:	21 f0       	breq	.+8      	; 0x6422 <write_zahl+0x218>
    641a:	8e e2       	ldi	r24, 0x2E	; 46
    641c:	89 83       	std	Y+1, r24	; 0x01
    641e:	01 e0       	ldi	r16, 0x01	; 1
    6420:	df cf       	rjmp	.-66     	; 0x63e0 <write_zahl+0x1d6>
    6422:	e0 e0       	ldi	r30, 0x00	; 0
    6424:	f0 e0       	ldi	r31, 0x00	; 0
    6426:	82 cf       	rjmp	.-252    	; 0x632c <write_zahl+0x122>

00006428 <lcd_init>:
    6428:	df 93       	push	r29
    642a:	38 9a       	sbi	0x07, 0	; 7
    642c:	39 9a       	sbi	0x07, 1	; 7
    642e:	d2 e3       	ldi	r29, 0x32	; 50
    6430:	88 e7       	ldi	r24, 0x78	; 120
    6432:	0e 94 7c 30 	call	0x60f8	; 0x60f8 <delay_nop>
    6436:	d1 50       	subi	r29, 0x01	; 1
    6438:	d9 f7       	brne	.-10     	; 0x6430 <lcd_init+0x8>
    643a:	64 e3       	ldi	r22, 0x34	; 52
    643c:	83 e4       	ldi	r24, 0x43	; 67
    643e:	0e 94 92 30 	call	0x6124	; 0x6124 <write_lcd_f>
    6442:	64 e3       	ldi	r22, 0x34	; 52
    6444:	83 e4       	ldi	r24, 0x43	; 67
    6446:	0e 94 92 30 	call	0x6124	; 0x6124 <write_lcd_f>
    644a:	69 e0       	ldi	r22, 0x09	; 9
    644c:	83 e4       	ldi	r24, 0x43	; 67
    644e:	0e 94 92 30 	call	0x6124	; 0x6124 <write_lcd_f>
    6452:	60 e3       	ldi	r22, 0x30	; 48
    6454:	83 e4       	ldi	r24, 0x43	; 67
    6456:	0e 94 92 30 	call	0x6124	; 0x6124 <write_lcd_f>
    645a:	6c e0       	ldi	r22, 0x0C	; 12
    645c:	83 e4       	ldi	r24, 0x43	; 67
    645e:	0e 94 92 30 	call	0x6124	; 0x6124 <write_lcd_f>
    6462:	61 e0       	ldi	r22, 0x01	; 1
    6464:	83 e4       	ldi	r24, 0x43	; 67
    6466:	0e 94 92 30 	call	0x6124	; 0x6124 <write_lcd_f>
    646a:	d8 e0       	ldi	r29, 0x08	; 8
    646c:	88 e7       	ldi	r24, 0x78	; 120
    646e:	0e 94 7c 30 	call	0x60f8	; 0x60f8 <delay_nop>
    6472:	d1 50       	subi	r29, 0x01	; 1
    6474:	d9 f7       	brne	.-10     	; 0x646c <lcd_init+0x44>
    6476:	67 e0       	ldi	r22, 0x07	; 7
    6478:	83 e4       	ldi	r24, 0x43	; 67
    647a:	0e 94 92 30 	call	0x6124	; 0x6124 <write_lcd_f>
    647e:	df 91       	pop	r29
    6480:	0c 94 8e 2f 	jmp	0x5f1c	; 0x5f1c <init_Timer0_1ms_int>

00006484 <clear_lcd>:
    6484:	df 93       	push	r29
    6486:	61 e0       	ldi	r22, 0x01	; 1
    6488:	83 e4       	ldi	r24, 0x43	; 67
    648a:	0e 94 92 30 	call	0x6124	; 0x6124 <write_lcd_f>
    648e:	d8 e0       	ldi	r29, 0x08	; 8
    6490:	88 e7       	ldi	r24, 0x78	; 120
    6492:	0e 94 7c 30 	call	0x60f8	; 0x60f8 <delay_nop>
    6496:	d1 50       	subi	r29, 0x01	; 1
    6498:	d9 f7       	brne	.-10     	; 0x6490 <clear_lcd+0xc>
    649a:	df 91       	pop	r29
    649c:	08 95       	ret

0000649e <LED_Show>:
    649e:	cf 93       	push	r28
    64a0:	df 93       	push	r29
    64a2:	1f 92       	push	r1
    64a4:	cd b7       	in	r28, 0x3d	; 61
    64a6:	de b7       	in	r29, 0x3e	; 62
    64a8:	85 e2       	ldi	r24, 0x25	; 37
    64aa:	90 e0       	ldi	r25, 0x00	; 0
    64ac:	21 e0       	ldi	r18, 0x01	; 1
    64ae:	fc 01       	movw	r30, r24
    64b0:	20 83       	st	Z, r18
    64b2:	19 82       	std	Y+1, r1	; 0x01
    64b4:	17 c0       	rjmp	.+46     	; 0x64e4 <LED_Show+0x46>
    64b6:	62 e3       	ldi	r22, 0x32	; 50
    64b8:	70 e0       	ldi	r23, 0x00	; 0
    64ba:	80 e0       	ldi	r24, 0x00	; 0
    64bc:	90 e0       	ldi	r25, 0x00	; 0
    64be:	0e 94 3c 30 	call	0x6078	; 0x6078 <wait_1ms>
    64c2:	85 e2       	ldi	r24, 0x25	; 37
    64c4:	90 e0       	ldi	r25, 0x00	; 0
    64c6:	29 81       	ldd	r18, Y+1	; 0x01
    64c8:	42 2f       	mov	r20, r18
    64ca:	50 e0       	ldi	r21, 0x00	; 0
    64cc:	21 e0       	ldi	r18, 0x01	; 1
    64ce:	30 e0       	ldi	r19, 0x00	; 0
    64d0:	02 c0       	rjmp	.+4      	; 0x64d6 <LED_Show+0x38>
    64d2:	22 0f       	add	r18, r18
    64d4:	33 1f       	adc	r19, r19
    64d6:	4a 95       	dec	r20
    64d8:	e2 f7       	brpl	.-8      	; 0x64d2 <LED_Show+0x34>
    64da:	fc 01       	movw	r30, r24
    64dc:	20 83       	st	Z, r18
    64de:	89 81       	ldd	r24, Y+1	; 0x01
    64e0:	8f 5f       	subi	r24, 0xFF	; 255
    64e2:	89 83       	std	Y+1, r24	; 0x01
    64e4:	89 81       	ldd	r24, Y+1	; 0x01
    64e6:	88 30       	cpi	r24, 0x08	; 8
    64e8:	30 f3       	brcs	.-52     	; 0x64b6 <LED_Show+0x18>
    64ea:	85 e2       	ldi	r24, 0x25	; 37
    64ec:	90 e0       	ldi	r25, 0x00	; 0
    64ee:	20 e8       	ldi	r18, 0x80	; 128
    64f0:	fc 01       	movw	r30, r24
    64f2:	20 83       	st	Z, r18
    64f4:	19 82       	std	Y+1, r1	; 0x01
    64f6:	17 c0       	rjmp	.+46     	; 0x6526 <LED_Show+0x88>
    64f8:	62 e3       	ldi	r22, 0x32	; 50
    64fa:	70 e0       	ldi	r23, 0x00	; 0
    64fc:	80 e0       	ldi	r24, 0x00	; 0
    64fe:	90 e0       	ldi	r25, 0x00	; 0
    6500:	0e 94 3c 30 	call	0x6078	; 0x6078 <wait_1ms>
    6504:	85 e2       	ldi	r24, 0x25	; 37
    6506:	90 e0       	ldi	r25, 0x00	; 0
    6508:	29 81       	ldd	r18, Y+1	; 0x01
    650a:	42 2f       	mov	r20, r18
    650c:	50 e0       	ldi	r21, 0x00	; 0
    650e:	20 e8       	ldi	r18, 0x80	; 128
    6510:	30 e0       	ldi	r19, 0x00	; 0
    6512:	02 c0       	rjmp	.+4      	; 0x6518 <LED_Show+0x7a>
    6514:	35 95       	asr	r19
    6516:	27 95       	ror	r18
    6518:	4a 95       	dec	r20
    651a:	e2 f7       	brpl	.-8      	; 0x6514 <LED_Show+0x76>
    651c:	fc 01       	movw	r30, r24
    651e:	20 83       	st	Z, r18
    6520:	89 81       	ldd	r24, Y+1	; 0x01
    6522:	8f 5f       	subi	r24, 0xFF	; 255
    6524:	89 83       	std	Y+1, r24	; 0x01
    6526:	89 81       	ldd	r24, Y+1	; 0x01
    6528:	88 30       	cpi	r24, 0x08	; 8
    652a:	30 f3       	brcs	.-52     	; 0x64f8 <LED_Show+0x5a>
    652c:	64 e6       	ldi	r22, 0x64	; 100
    652e:	70 e0       	ldi	r23, 0x00	; 0
    6530:	80 e0       	ldi	r24, 0x00	; 0
    6532:	90 e0       	ldi	r25, 0x00	; 0
    6534:	0e 94 3c 30 	call	0x6078	; 0x6078 <wait_1ms>
    6538:	85 e2       	ldi	r24, 0x25	; 37
    653a:	90 e0       	ldi	r25, 0x00	; 0
    653c:	fc 01       	movw	r30, r24
    653e:	10 82       	st	Z, r1
    6540:	00 00       	nop
    6542:	0f 90       	pop	r0
    6544:	df 91       	pop	r29
    6546:	cf 91       	pop	r28
    6548:	08 95       	ret

0000654a <init_BT_CAR_V2_0>:
    654a:	cf 93       	push	r28
    654c:	df 93       	push	r29
    654e:	cd b7       	in	r28, 0x3d	; 61
    6550:	de b7       	in	r29, 0x3e	; 62
    6552:	81 e2       	ldi	r24, 0x21	; 33
    6554:	90 e0       	ldi	r25, 0x00	; 0
    6556:	20 e6       	ldi	r18, 0x60	; 96
    6558:	fc 01       	movw	r30, r24
    655a:	20 83       	st	Z, r18
    655c:	84 e2       	ldi	r24, 0x24	; 36
    655e:	90 e0       	ldi	r25, 0x00	; 0
    6560:	2f ef       	ldi	r18, 0xFF	; 255
    6562:	fc 01       	movw	r30, r24
    6564:	20 83       	st	Z, r18
    6566:	8a e2       	ldi	r24, 0x2A	; 42
    6568:	90 e0       	ldi	r25, 0x00	; 0
    656a:	2c ef       	ldi	r18, 0xFC	; 252
    656c:	fc 01       	movw	r30, r24
    656e:	20 83       	st	Z, r18
    6570:	78 94       	sei
    6572:	0e 94 14 32 	call	0x6428	; 0x6428 <lcd_init>
    6576:	0e 94 42 32 	call	0x6484	; 0x6484 <clear_lcd>
    657a:	0e 94 4f 32 	call	0x649e	; 0x649e <LED_Show>
    657e:	00 00       	nop
    6580:	df 91       	pop	r29
    6582:	cf 91       	pop	r28
    6584:	08 95       	ret

00006586 <__cmpsf2>:
    6586:	0e 94 69 33 	call	0x66d2	; 0x66d2 <__fp_cmp>
    658a:	08 f4       	brcc	.+2      	; 0x658e <__cmpsf2+0x8>
    658c:	81 e0       	ldi	r24, 0x01	; 1
    658e:	08 95       	ret

00006590 <__divsf3>:
    6590:	0e 94 dc 32 	call	0x65b8	; 0x65b8 <__divsf3x>
    6594:	0c 94 a4 33 	jmp	0x6748	; 0x6748 <__fp_round>
    6598:	0e 94 9d 33 	call	0x673a	; 0x673a <__fp_pscB>
    659c:	58 f0       	brcs	.+22     	; 0x65b4 <__divsf3+0x24>
    659e:	0e 94 96 33 	call	0x672c	; 0x672c <__fp_pscA>
    65a2:	40 f0       	brcs	.+16     	; 0x65b4 <__divsf3+0x24>
    65a4:	29 f4       	brne	.+10     	; 0x65b0 <__divsf3+0x20>
    65a6:	5f 3f       	cpi	r21, 0xFF	; 255
    65a8:	29 f0       	breq	.+10     	; 0x65b4 <__divsf3+0x24>
    65aa:	0c 94 8d 33 	jmp	0x671a	; 0x671a <__fp_inf>
    65ae:	51 11       	cpse	r21, r1
    65b0:	0c 94 d8 33 	jmp	0x67b0	; 0x67b0 <__fp_szero>
    65b4:	0c 94 93 33 	jmp	0x6726	; 0x6726 <__fp_nan>

000065b8 <__divsf3x>:
    65b8:	0e 94 b5 33 	call	0x676a	; 0x676a <__fp_split3>
    65bc:	68 f3       	brcs	.-38     	; 0x6598 <__divsf3+0x8>

000065be <__divsf3_pse>:
    65be:	99 23       	and	r25, r25
    65c0:	b1 f3       	breq	.-20     	; 0x65ae <__divsf3+0x1e>
    65c2:	55 23       	and	r21, r21
    65c4:	91 f3       	breq	.-28     	; 0x65aa <__divsf3+0x1a>
    65c6:	95 1b       	sub	r25, r21
    65c8:	55 0b       	sbc	r21, r21
    65ca:	bb 27       	eor	r27, r27
    65cc:	aa 27       	eor	r26, r26
    65ce:	62 17       	cp	r22, r18
    65d0:	73 07       	cpc	r23, r19
    65d2:	84 07       	cpc	r24, r20
    65d4:	38 f0       	brcs	.+14     	; 0x65e4 <__divsf3_pse+0x26>
    65d6:	9f 5f       	subi	r25, 0xFF	; 255
    65d8:	5f 4f       	sbci	r21, 0xFF	; 255
    65da:	22 0f       	add	r18, r18
    65dc:	33 1f       	adc	r19, r19
    65de:	44 1f       	adc	r20, r20
    65e0:	aa 1f       	adc	r26, r26
    65e2:	a9 f3       	breq	.-22     	; 0x65ce <__divsf3_pse+0x10>
    65e4:	35 d0       	rcall	.+106    	; 0x6650 <__divsf3_pse+0x92>
    65e6:	0e 2e       	mov	r0, r30
    65e8:	3a f0       	brmi	.+14     	; 0x65f8 <__divsf3_pse+0x3a>
    65ea:	e0 e8       	ldi	r30, 0x80	; 128
    65ec:	32 d0       	rcall	.+100    	; 0x6652 <__divsf3_pse+0x94>
    65ee:	91 50       	subi	r25, 0x01	; 1
    65f0:	50 40       	sbci	r21, 0x00	; 0
    65f2:	e6 95       	lsr	r30
    65f4:	00 1c       	adc	r0, r0
    65f6:	ca f7       	brpl	.-14     	; 0x65ea <__divsf3_pse+0x2c>
    65f8:	2b d0       	rcall	.+86     	; 0x6650 <__divsf3_pse+0x92>
    65fa:	fe 2f       	mov	r31, r30
    65fc:	29 d0       	rcall	.+82     	; 0x6650 <__divsf3_pse+0x92>
    65fe:	66 0f       	add	r22, r22
    6600:	77 1f       	adc	r23, r23
    6602:	88 1f       	adc	r24, r24
    6604:	bb 1f       	adc	r27, r27
    6606:	26 17       	cp	r18, r22
    6608:	37 07       	cpc	r19, r23
    660a:	48 07       	cpc	r20, r24
    660c:	ab 07       	cpc	r26, r27
    660e:	b0 e8       	ldi	r27, 0x80	; 128
    6610:	09 f0       	breq	.+2      	; 0x6614 <__divsf3_pse+0x56>
    6612:	bb 0b       	sbc	r27, r27
    6614:	80 2d       	mov	r24, r0
    6616:	bf 01       	movw	r22, r30
    6618:	ff 27       	eor	r31, r31
    661a:	93 58       	subi	r25, 0x83	; 131
    661c:	5f 4f       	sbci	r21, 0xFF	; 255
    661e:	3a f0       	brmi	.+14     	; 0x662e <__divsf3_pse+0x70>
    6620:	9e 3f       	cpi	r25, 0xFE	; 254
    6622:	51 05       	cpc	r21, r1
    6624:	78 f0       	brcs	.+30     	; 0x6644 <__divsf3_pse+0x86>
    6626:	0c 94 8d 33 	jmp	0x671a	; 0x671a <__fp_inf>
    662a:	0c 94 d8 33 	jmp	0x67b0	; 0x67b0 <__fp_szero>
    662e:	5f 3f       	cpi	r21, 0xFF	; 255
    6630:	e4 f3       	brlt	.-8      	; 0x662a <__divsf3_pse+0x6c>
    6632:	98 3e       	cpi	r25, 0xE8	; 232
    6634:	d4 f3       	brlt	.-12     	; 0x662a <__divsf3_pse+0x6c>
    6636:	86 95       	lsr	r24
    6638:	77 95       	ror	r23
    663a:	67 95       	ror	r22
    663c:	b7 95       	ror	r27
    663e:	f7 95       	ror	r31
    6640:	9f 5f       	subi	r25, 0xFF	; 255
    6642:	c9 f7       	brne	.-14     	; 0x6636 <__divsf3_pse+0x78>
    6644:	88 0f       	add	r24, r24
    6646:	91 1d       	adc	r25, r1
    6648:	96 95       	lsr	r25
    664a:	87 95       	ror	r24
    664c:	97 f9       	bld	r25, 7
    664e:	08 95       	ret
    6650:	e1 e0       	ldi	r30, 0x01	; 1
    6652:	66 0f       	add	r22, r22
    6654:	77 1f       	adc	r23, r23
    6656:	88 1f       	adc	r24, r24
    6658:	bb 1f       	adc	r27, r27
    665a:	62 17       	cp	r22, r18
    665c:	73 07       	cpc	r23, r19
    665e:	84 07       	cpc	r24, r20
    6660:	ba 07       	cpc	r27, r26
    6662:	20 f0       	brcs	.+8      	; 0x666c <__divsf3_pse+0xae>
    6664:	62 1b       	sub	r22, r18
    6666:	73 0b       	sbc	r23, r19
    6668:	84 0b       	sbc	r24, r20
    666a:	ba 0b       	sbc	r27, r26
    666c:	ee 1f       	adc	r30, r30
    666e:	88 f7       	brcc	.-30     	; 0x6652 <__divsf3_pse+0x94>
    6670:	e0 95       	com	r30
    6672:	08 95       	ret

00006674 <__fixunssfsi>:
    6674:	0e 94 bd 33 	call	0x677a	; 0x677a <__fp_splitA>
    6678:	88 f0       	brcs	.+34     	; 0x669c <__fixunssfsi+0x28>
    667a:	9f 57       	subi	r25, 0x7F	; 127
    667c:	98 f0       	brcs	.+38     	; 0x66a4 <__fixunssfsi+0x30>
    667e:	b9 2f       	mov	r27, r25
    6680:	99 27       	eor	r25, r25
    6682:	b7 51       	subi	r27, 0x17	; 23
    6684:	b0 f0       	brcs	.+44     	; 0x66b2 <__fixunssfsi+0x3e>
    6686:	e1 f0       	breq	.+56     	; 0x66c0 <__fixunssfsi+0x4c>
    6688:	66 0f       	add	r22, r22
    668a:	77 1f       	adc	r23, r23
    668c:	88 1f       	adc	r24, r24
    668e:	99 1f       	adc	r25, r25
    6690:	1a f0       	brmi	.+6      	; 0x6698 <__fixunssfsi+0x24>
    6692:	ba 95       	dec	r27
    6694:	c9 f7       	brne	.-14     	; 0x6688 <__fixunssfsi+0x14>
    6696:	14 c0       	rjmp	.+40     	; 0x66c0 <__fixunssfsi+0x4c>
    6698:	b1 30       	cpi	r27, 0x01	; 1
    669a:	91 f0       	breq	.+36     	; 0x66c0 <__fixunssfsi+0x4c>
    669c:	0e 94 d7 33 	call	0x67ae	; 0x67ae <__fp_zero>
    66a0:	b1 e0       	ldi	r27, 0x01	; 1
    66a2:	08 95       	ret
    66a4:	0c 94 d7 33 	jmp	0x67ae	; 0x67ae <__fp_zero>
    66a8:	67 2f       	mov	r22, r23
    66aa:	78 2f       	mov	r23, r24
    66ac:	88 27       	eor	r24, r24
    66ae:	b8 5f       	subi	r27, 0xF8	; 248
    66b0:	39 f0       	breq	.+14     	; 0x66c0 <__fixunssfsi+0x4c>
    66b2:	b9 3f       	cpi	r27, 0xF9	; 249
    66b4:	cc f3       	brlt	.-14     	; 0x66a8 <__fixunssfsi+0x34>
    66b6:	86 95       	lsr	r24
    66b8:	77 95       	ror	r23
    66ba:	67 95       	ror	r22
    66bc:	b3 95       	inc	r27
    66be:	d9 f7       	brne	.-10     	; 0x66b6 <__fixunssfsi+0x42>
    66c0:	3e f4       	brtc	.+14     	; 0x66d0 <__fixunssfsi+0x5c>
    66c2:	90 95       	com	r25
    66c4:	80 95       	com	r24
    66c6:	70 95       	com	r23
    66c8:	61 95       	neg	r22
    66ca:	7f 4f       	sbci	r23, 0xFF	; 255
    66cc:	8f 4f       	sbci	r24, 0xFF	; 255
    66ce:	9f 4f       	sbci	r25, 0xFF	; 255
    66d0:	08 95       	ret

000066d2 <__fp_cmp>:
    66d2:	99 0f       	add	r25, r25
    66d4:	00 08       	sbc	r0, r0
    66d6:	55 0f       	add	r21, r21
    66d8:	aa 0b       	sbc	r26, r26
    66da:	e0 e8       	ldi	r30, 0x80	; 128
    66dc:	fe ef       	ldi	r31, 0xFE	; 254
    66de:	16 16       	cp	r1, r22
    66e0:	17 06       	cpc	r1, r23
    66e2:	e8 07       	cpc	r30, r24
    66e4:	f9 07       	cpc	r31, r25
    66e6:	c0 f0       	brcs	.+48     	; 0x6718 <__fp_cmp+0x46>
    66e8:	12 16       	cp	r1, r18
    66ea:	13 06       	cpc	r1, r19
    66ec:	e4 07       	cpc	r30, r20
    66ee:	f5 07       	cpc	r31, r21
    66f0:	98 f0       	brcs	.+38     	; 0x6718 <__fp_cmp+0x46>
    66f2:	62 1b       	sub	r22, r18
    66f4:	73 0b       	sbc	r23, r19
    66f6:	84 0b       	sbc	r24, r20
    66f8:	95 0b       	sbc	r25, r21
    66fa:	39 f4       	brne	.+14     	; 0x670a <__fp_cmp+0x38>
    66fc:	0a 26       	eor	r0, r26
    66fe:	61 f0       	breq	.+24     	; 0x6718 <__fp_cmp+0x46>
    6700:	23 2b       	or	r18, r19
    6702:	24 2b       	or	r18, r20
    6704:	25 2b       	or	r18, r21
    6706:	21 f4       	brne	.+8      	; 0x6710 <__fp_cmp+0x3e>
    6708:	08 95       	ret
    670a:	0a 26       	eor	r0, r26
    670c:	09 f4       	brne	.+2      	; 0x6710 <__fp_cmp+0x3e>
    670e:	a1 40       	sbci	r26, 0x01	; 1
    6710:	a6 95       	lsr	r26
    6712:	8f ef       	ldi	r24, 0xFF	; 255
    6714:	81 1d       	adc	r24, r1
    6716:	81 1d       	adc	r24, r1
    6718:	08 95       	ret

0000671a <__fp_inf>:
    671a:	97 f9       	bld	r25, 7
    671c:	9f 67       	ori	r25, 0x7F	; 127
    671e:	80 e8       	ldi	r24, 0x80	; 128
    6720:	70 e0       	ldi	r23, 0x00	; 0
    6722:	60 e0       	ldi	r22, 0x00	; 0
    6724:	08 95       	ret

00006726 <__fp_nan>:
    6726:	9f ef       	ldi	r25, 0xFF	; 255
    6728:	80 ec       	ldi	r24, 0xC0	; 192
    672a:	08 95       	ret

0000672c <__fp_pscA>:
    672c:	00 24       	eor	r0, r0
    672e:	0a 94       	dec	r0
    6730:	16 16       	cp	r1, r22
    6732:	17 06       	cpc	r1, r23
    6734:	18 06       	cpc	r1, r24
    6736:	09 06       	cpc	r0, r25
    6738:	08 95       	ret

0000673a <__fp_pscB>:
    673a:	00 24       	eor	r0, r0
    673c:	0a 94       	dec	r0
    673e:	12 16       	cp	r1, r18
    6740:	13 06       	cpc	r1, r19
    6742:	14 06       	cpc	r1, r20
    6744:	05 06       	cpc	r0, r21
    6746:	08 95       	ret

00006748 <__fp_round>:
    6748:	09 2e       	mov	r0, r25
    674a:	03 94       	inc	r0
    674c:	00 0c       	add	r0, r0
    674e:	11 f4       	brne	.+4      	; 0x6754 <__fp_round+0xc>
    6750:	88 23       	and	r24, r24
    6752:	52 f0       	brmi	.+20     	; 0x6768 <__fp_round+0x20>
    6754:	bb 0f       	add	r27, r27
    6756:	40 f4       	brcc	.+16     	; 0x6768 <__fp_round+0x20>
    6758:	bf 2b       	or	r27, r31
    675a:	11 f4       	brne	.+4      	; 0x6760 <__fp_round+0x18>
    675c:	60 ff       	sbrs	r22, 0
    675e:	04 c0       	rjmp	.+8      	; 0x6768 <__fp_round+0x20>
    6760:	6f 5f       	subi	r22, 0xFF	; 255
    6762:	7f 4f       	sbci	r23, 0xFF	; 255
    6764:	8f 4f       	sbci	r24, 0xFF	; 255
    6766:	9f 4f       	sbci	r25, 0xFF	; 255
    6768:	08 95       	ret

0000676a <__fp_split3>:
    676a:	57 fd       	sbrc	r21, 7
    676c:	90 58       	subi	r25, 0x80	; 128
    676e:	44 0f       	add	r20, r20
    6770:	55 1f       	adc	r21, r21
    6772:	59 f0       	breq	.+22     	; 0x678a <__fp_splitA+0x10>
    6774:	5f 3f       	cpi	r21, 0xFF	; 255
    6776:	71 f0       	breq	.+28     	; 0x6794 <__fp_splitA+0x1a>
    6778:	47 95       	ror	r20

0000677a <__fp_splitA>:
    677a:	88 0f       	add	r24, r24
    677c:	97 fb       	bst	r25, 7
    677e:	99 1f       	adc	r25, r25
    6780:	61 f0       	breq	.+24     	; 0x679a <__fp_splitA+0x20>
    6782:	9f 3f       	cpi	r25, 0xFF	; 255
    6784:	79 f0       	breq	.+30     	; 0x67a4 <__fp_splitA+0x2a>
    6786:	87 95       	ror	r24
    6788:	08 95       	ret
    678a:	12 16       	cp	r1, r18
    678c:	13 06       	cpc	r1, r19
    678e:	14 06       	cpc	r1, r20
    6790:	55 1f       	adc	r21, r21
    6792:	f2 cf       	rjmp	.-28     	; 0x6778 <__fp_split3+0xe>
    6794:	46 95       	lsr	r20
    6796:	f1 df       	rcall	.-30     	; 0x677a <__fp_splitA>
    6798:	08 c0       	rjmp	.+16     	; 0x67aa <__fp_splitA+0x30>
    679a:	16 16       	cp	r1, r22
    679c:	17 06       	cpc	r1, r23
    679e:	18 06       	cpc	r1, r24
    67a0:	99 1f       	adc	r25, r25
    67a2:	f1 cf       	rjmp	.-30     	; 0x6786 <__fp_splitA+0xc>
    67a4:	86 95       	lsr	r24
    67a6:	71 05       	cpc	r23, r1
    67a8:	61 05       	cpc	r22, r1
    67aa:	08 94       	sec
    67ac:	08 95       	ret

000067ae <__fp_zero>:
    67ae:	e8 94       	clt

000067b0 <__fp_szero>:
    67b0:	bb 27       	eor	r27, r27
    67b2:	66 27       	eor	r22, r22
    67b4:	77 27       	eor	r23, r23
    67b6:	cb 01       	movw	r24, r22
    67b8:	97 f9       	bld	r25, 7
    67ba:	08 95       	ret

000067bc <__gesf2>:
    67bc:	0e 94 69 33 	call	0x66d2	; 0x66d2 <__fp_cmp>
    67c0:	08 f4       	brcc	.+2      	; 0x67c4 <__gesf2+0x8>
    67c2:	8f ef       	ldi	r24, 0xFF	; 255
    67c4:	08 95       	ret

000067c6 <__mulsf3>:
    67c6:	0e 94 f6 33 	call	0x67ec	; 0x67ec <__mulsf3x>
    67ca:	0c 94 a4 33 	jmp	0x6748	; 0x6748 <__fp_round>
    67ce:	0e 94 96 33 	call	0x672c	; 0x672c <__fp_pscA>
    67d2:	38 f0       	brcs	.+14     	; 0x67e2 <__mulsf3+0x1c>
    67d4:	0e 94 9d 33 	call	0x673a	; 0x673a <__fp_pscB>
    67d8:	20 f0       	brcs	.+8      	; 0x67e2 <__mulsf3+0x1c>
    67da:	95 23       	and	r25, r21
    67dc:	11 f0       	breq	.+4      	; 0x67e2 <__mulsf3+0x1c>
    67de:	0c 94 8d 33 	jmp	0x671a	; 0x671a <__fp_inf>
    67e2:	0c 94 93 33 	jmp	0x6726	; 0x6726 <__fp_nan>
    67e6:	11 24       	eor	r1, r1
    67e8:	0c 94 d8 33 	jmp	0x67b0	; 0x67b0 <__fp_szero>

000067ec <__mulsf3x>:
    67ec:	0e 94 b5 33 	call	0x676a	; 0x676a <__fp_split3>
    67f0:	70 f3       	brcs	.-36     	; 0x67ce <__mulsf3+0x8>

000067f2 <__mulsf3_pse>:
    67f2:	95 9f       	mul	r25, r21
    67f4:	c1 f3       	breq	.-16     	; 0x67e6 <__mulsf3+0x20>
    67f6:	95 0f       	add	r25, r21
    67f8:	50 e0       	ldi	r21, 0x00	; 0
    67fa:	55 1f       	adc	r21, r21
    67fc:	62 9f       	mul	r22, r18
    67fe:	f0 01       	movw	r30, r0
    6800:	72 9f       	mul	r23, r18
    6802:	bb 27       	eor	r27, r27
    6804:	f0 0d       	add	r31, r0
    6806:	b1 1d       	adc	r27, r1
    6808:	63 9f       	mul	r22, r19
    680a:	aa 27       	eor	r26, r26
    680c:	f0 0d       	add	r31, r0
    680e:	b1 1d       	adc	r27, r1
    6810:	aa 1f       	adc	r26, r26
    6812:	64 9f       	mul	r22, r20
    6814:	66 27       	eor	r22, r22
    6816:	b0 0d       	add	r27, r0
    6818:	a1 1d       	adc	r26, r1
    681a:	66 1f       	adc	r22, r22
    681c:	82 9f       	mul	r24, r18
    681e:	22 27       	eor	r18, r18
    6820:	b0 0d       	add	r27, r0
    6822:	a1 1d       	adc	r26, r1
    6824:	62 1f       	adc	r22, r18
    6826:	73 9f       	mul	r23, r19
    6828:	b0 0d       	add	r27, r0
    682a:	a1 1d       	adc	r26, r1
    682c:	62 1f       	adc	r22, r18
    682e:	83 9f       	mul	r24, r19
    6830:	a0 0d       	add	r26, r0
    6832:	61 1d       	adc	r22, r1
    6834:	22 1f       	adc	r18, r18
    6836:	74 9f       	mul	r23, r20
    6838:	33 27       	eor	r19, r19
    683a:	a0 0d       	add	r26, r0
    683c:	61 1d       	adc	r22, r1
    683e:	23 1f       	adc	r18, r19
    6840:	84 9f       	mul	r24, r20
    6842:	60 0d       	add	r22, r0
    6844:	21 1d       	adc	r18, r1
    6846:	82 2f       	mov	r24, r18
    6848:	76 2f       	mov	r23, r22
    684a:	6a 2f       	mov	r22, r26
    684c:	11 24       	eor	r1, r1
    684e:	9f 57       	subi	r25, 0x7F	; 127
    6850:	50 40       	sbci	r21, 0x00	; 0
    6852:	9a f0       	brmi	.+38     	; 0x687a <__mulsf3_pse+0x88>
    6854:	f1 f0       	breq	.+60     	; 0x6892 <__mulsf3_pse+0xa0>
    6856:	88 23       	and	r24, r24
    6858:	4a f0       	brmi	.+18     	; 0x686c <__mulsf3_pse+0x7a>
    685a:	ee 0f       	add	r30, r30
    685c:	ff 1f       	adc	r31, r31
    685e:	bb 1f       	adc	r27, r27
    6860:	66 1f       	adc	r22, r22
    6862:	77 1f       	adc	r23, r23
    6864:	88 1f       	adc	r24, r24
    6866:	91 50       	subi	r25, 0x01	; 1
    6868:	50 40       	sbci	r21, 0x00	; 0
    686a:	a9 f7       	brne	.-22     	; 0x6856 <__mulsf3_pse+0x64>
    686c:	9e 3f       	cpi	r25, 0xFE	; 254
    686e:	51 05       	cpc	r21, r1
    6870:	80 f0       	brcs	.+32     	; 0x6892 <__mulsf3_pse+0xa0>
    6872:	0c 94 8d 33 	jmp	0x671a	; 0x671a <__fp_inf>
    6876:	0c 94 d8 33 	jmp	0x67b0	; 0x67b0 <__fp_szero>
    687a:	5f 3f       	cpi	r21, 0xFF	; 255
    687c:	e4 f3       	brlt	.-8      	; 0x6876 <__mulsf3_pse+0x84>
    687e:	98 3e       	cpi	r25, 0xE8	; 232
    6880:	d4 f3       	brlt	.-12     	; 0x6876 <__mulsf3_pse+0x84>
    6882:	86 95       	lsr	r24
    6884:	77 95       	ror	r23
    6886:	67 95       	ror	r22
    6888:	b7 95       	ror	r27
    688a:	f7 95       	ror	r31
    688c:	e7 95       	ror	r30
    688e:	9f 5f       	subi	r25, 0xFF	; 255
    6890:	c1 f7       	brne	.-16     	; 0x6882 <__mulsf3_pse+0x90>
    6892:	fe 2b       	or	r31, r30
    6894:	88 0f       	add	r24, r24
    6896:	91 1d       	adc	r25, r1
    6898:	96 95       	lsr	r25
    689a:	87 95       	ror	r24
    689c:	97 f9       	bld	r25, 7
    689e:	08 95       	ret

000068a0 <__divmodhi4>:
    68a0:	97 fb       	bst	r25, 7
    68a2:	07 2e       	mov	r0, r23
    68a4:	16 f4       	brtc	.+4      	; 0x68aa <__divmodhi4+0xa>
    68a6:	00 94       	com	r0
    68a8:	07 d0       	rcall	.+14     	; 0x68b8 <__divmodhi4_neg1>
    68aa:	77 fd       	sbrc	r23, 7
    68ac:	09 d0       	rcall	.+18     	; 0x68c0 <__divmodhi4_neg2>
    68ae:	0e 94 86 34 	call	0x690c	; 0x690c <__udivmodhi4>
    68b2:	07 fc       	sbrc	r0, 7
    68b4:	05 d0       	rcall	.+10     	; 0x68c0 <__divmodhi4_neg2>
    68b6:	3e f4       	brtc	.+14     	; 0x68c6 <__divmodhi4_exit>

000068b8 <__divmodhi4_neg1>:
    68b8:	90 95       	com	r25
    68ba:	81 95       	neg	r24
    68bc:	9f 4f       	sbci	r25, 0xFF	; 255
    68be:	08 95       	ret

000068c0 <__divmodhi4_neg2>:
    68c0:	70 95       	com	r23
    68c2:	61 95       	neg	r22
    68c4:	7f 4f       	sbci	r23, 0xFF	; 255

000068c6 <__divmodhi4_exit>:
    68c6:	08 95       	ret

000068c8 <__udivmodsi4>:
    68c8:	a1 e2       	ldi	r26, 0x21	; 33
    68ca:	1a 2e       	mov	r1, r26
    68cc:	aa 1b       	sub	r26, r26
    68ce:	bb 1b       	sub	r27, r27
    68d0:	fd 01       	movw	r30, r26
    68d2:	0d c0       	rjmp	.+26     	; 0x68ee <__udivmodsi4_ep>

000068d4 <__udivmodsi4_loop>:
    68d4:	aa 1f       	adc	r26, r26
    68d6:	bb 1f       	adc	r27, r27
    68d8:	ee 1f       	adc	r30, r30
    68da:	ff 1f       	adc	r31, r31
    68dc:	a2 17       	cp	r26, r18
    68de:	b3 07       	cpc	r27, r19
    68e0:	e4 07       	cpc	r30, r20
    68e2:	f5 07       	cpc	r31, r21
    68e4:	20 f0       	brcs	.+8      	; 0x68ee <__udivmodsi4_ep>
    68e6:	a2 1b       	sub	r26, r18
    68e8:	b3 0b       	sbc	r27, r19
    68ea:	e4 0b       	sbc	r30, r20
    68ec:	f5 0b       	sbc	r31, r21

000068ee <__udivmodsi4_ep>:
    68ee:	66 1f       	adc	r22, r22
    68f0:	77 1f       	adc	r23, r23
    68f2:	88 1f       	adc	r24, r24
    68f4:	99 1f       	adc	r25, r25
    68f6:	1a 94       	dec	r1
    68f8:	69 f7       	brne	.-38     	; 0x68d4 <__udivmodsi4_loop>
    68fa:	60 95       	com	r22
    68fc:	70 95       	com	r23
    68fe:	80 95       	com	r24
    6900:	90 95       	com	r25
    6902:	9b 01       	movw	r18, r22
    6904:	ac 01       	movw	r20, r24
    6906:	bd 01       	movw	r22, r26
    6908:	cf 01       	movw	r24, r30
    690a:	08 95       	ret

0000690c <__udivmodhi4>:
    690c:	aa 1b       	sub	r26, r26
    690e:	bb 1b       	sub	r27, r27
    6910:	51 e1       	ldi	r21, 0x11	; 17
    6912:	07 c0       	rjmp	.+14     	; 0x6922 <__udivmodhi4_ep>

00006914 <__udivmodhi4_loop>:
    6914:	aa 1f       	adc	r26, r26
    6916:	bb 1f       	adc	r27, r27
    6918:	a6 17       	cp	r26, r22
    691a:	b7 07       	cpc	r27, r23
    691c:	10 f0       	brcs	.+4      	; 0x6922 <__udivmodhi4_ep>
    691e:	a6 1b       	sub	r26, r22
    6920:	b7 0b       	sbc	r27, r23

00006922 <__udivmodhi4_ep>:
    6922:	88 1f       	adc	r24, r24
    6924:	99 1f       	adc	r25, r25
    6926:	5a 95       	dec	r21
    6928:	a9 f7       	brne	.-22     	; 0x6914 <__udivmodhi4_loop>
    692a:	80 95       	com	r24
    692c:	90 95       	com	r25
    692e:	bc 01       	movw	r22, r24
    6930:	cd 01       	movw	r24, r26
    6932:	08 95       	ret

00006934 <snprintf>:
    6934:	ae e0       	ldi	r26, 0x0E	; 14
    6936:	b0 e0       	ldi	r27, 0x00	; 0
    6938:	e0 ea       	ldi	r30, 0xA0	; 160
    693a:	f4 e3       	ldi	r31, 0x34	; 52
    693c:	0c 94 69 37 	jmp	0x6ed2	; 0x6ed2 <__prologue_saves__+0x1c>
    6940:	0d 89       	ldd	r16, Y+21	; 0x15
    6942:	1e 89       	ldd	r17, Y+22	; 0x16
    6944:	8f 89       	ldd	r24, Y+23	; 0x17
    6946:	98 8d       	ldd	r25, Y+24	; 0x18
    6948:	26 e0       	ldi	r18, 0x06	; 6
    694a:	2c 83       	std	Y+4, r18	; 0x04
    694c:	1a 83       	std	Y+2, r17	; 0x02
    694e:	09 83       	std	Y+1, r16	; 0x01
    6950:	97 ff       	sbrs	r25, 7
    6952:	02 c0       	rjmp	.+4      	; 0x6958 <snprintf+0x24>
    6954:	80 e0       	ldi	r24, 0x00	; 0
    6956:	90 e8       	ldi	r25, 0x80	; 128
    6958:	01 97       	sbiw	r24, 0x01	; 1
    695a:	9e 83       	std	Y+6, r25	; 0x06
    695c:	8d 83       	std	Y+5, r24	; 0x05
    695e:	ae 01       	movw	r20, r28
    6960:	45 5e       	subi	r20, 0xE5	; 229
    6962:	5f 4f       	sbci	r21, 0xFF	; 255
    6964:	69 8d       	ldd	r22, Y+25	; 0x19
    6966:	7a 8d       	ldd	r23, Y+26	; 0x1a
    6968:	ce 01       	movw	r24, r28
    696a:	01 96       	adiw	r24, 0x01	; 1
    696c:	0e 94 ca 34 	call	0x6994	; 0x6994 <vfprintf>
    6970:	4d 81       	ldd	r20, Y+5	; 0x05
    6972:	5e 81       	ldd	r21, Y+6	; 0x06
    6974:	57 fd       	sbrc	r21, 7
    6976:	0a c0       	rjmp	.+20     	; 0x698c <snprintf+0x58>
    6978:	2f 81       	ldd	r18, Y+7	; 0x07
    697a:	38 85       	ldd	r19, Y+8	; 0x08
    697c:	42 17       	cp	r20, r18
    697e:	53 07       	cpc	r21, r19
    6980:	0c f4       	brge	.+2      	; 0x6984 <snprintf+0x50>
    6982:	9a 01       	movw	r18, r20
    6984:	f8 01       	movw	r30, r16
    6986:	e2 0f       	add	r30, r18
    6988:	f3 1f       	adc	r31, r19
    698a:	10 82       	st	Z, r1
    698c:	2e 96       	adiw	r28, 0x0e	; 14
    698e:	e4 e0       	ldi	r30, 0x04	; 4
    6990:	0c 94 85 37 	jmp	0x6f0a	; 0x6f0a <__epilogue_restores__+0x1c>

00006994 <vfprintf>:
    6994:	ab e0       	ldi	r26, 0x0B	; 11
    6996:	b0 e0       	ldi	r27, 0x00	; 0
    6998:	e0 ed       	ldi	r30, 0xD0	; 208
    699a:	f4 e3       	ldi	r31, 0x34	; 52
    699c:	0c 94 5b 37 	jmp	0x6eb6	; 0x6eb6 <__prologue_saves__>
    69a0:	6c 01       	movw	r12, r24
    69a2:	7b 01       	movw	r14, r22
    69a4:	8a 01       	movw	r16, r20
    69a6:	fc 01       	movw	r30, r24
    69a8:	17 82       	std	Z+7, r1	; 0x07
    69aa:	16 82       	std	Z+6, r1	; 0x06
    69ac:	83 81       	ldd	r24, Z+3	; 0x03
    69ae:	81 ff       	sbrs	r24, 1
    69b0:	cc c1       	rjmp	.+920    	; 0x6d4a <vfprintf+0x3b6>
    69b2:	ce 01       	movw	r24, r28
    69b4:	01 96       	adiw	r24, 0x01	; 1
    69b6:	3c 01       	movw	r6, r24
    69b8:	f6 01       	movw	r30, r12
    69ba:	93 81       	ldd	r25, Z+3	; 0x03
    69bc:	f7 01       	movw	r30, r14
    69be:	93 fd       	sbrc	r25, 3
    69c0:	85 91       	lpm	r24, Z+
    69c2:	93 ff       	sbrs	r25, 3
    69c4:	81 91       	ld	r24, Z+
    69c6:	7f 01       	movw	r14, r30
    69c8:	88 23       	and	r24, r24
    69ca:	09 f4       	brne	.+2      	; 0x69ce <vfprintf+0x3a>
    69cc:	ba c1       	rjmp	.+884    	; 0x6d42 <vfprintf+0x3ae>
    69ce:	85 32       	cpi	r24, 0x25	; 37
    69d0:	39 f4       	brne	.+14     	; 0x69e0 <vfprintf+0x4c>
    69d2:	93 fd       	sbrc	r25, 3
    69d4:	85 91       	lpm	r24, Z+
    69d6:	93 ff       	sbrs	r25, 3
    69d8:	81 91       	ld	r24, Z+
    69da:	7f 01       	movw	r14, r30
    69dc:	85 32       	cpi	r24, 0x25	; 37
    69de:	29 f4       	brne	.+10     	; 0x69ea <vfprintf+0x56>
    69e0:	b6 01       	movw	r22, r12
    69e2:	90 e0       	ldi	r25, 0x00	; 0
    69e4:	0e 94 c1 36 	call	0x6d82	; 0x6d82 <fputc>
    69e8:	e7 cf       	rjmp	.-50     	; 0x69b8 <vfprintf+0x24>
    69ea:	91 2c       	mov	r9, r1
    69ec:	21 2c       	mov	r2, r1
    69ee:	31 2c       	mov	r3, r1
    69f0:	ff e1       	ldi	r31, 0x1F	; 31
    69f2:	f3 15       	cp	r31, r3
    69f4:	d8 f0       	brcs	.+54     	; 0x6a2c <vfprintf+0x98>
    69f6:	8b 32       	cpi	r24, 0x2B	; 43
    69f8:	79 f0       	breq	.+30     	; 0x6a18 <vfprintf+0x84>
    69fa:	38 f4       	brcc	.+14     	; 0x6a0a <vfprintf+0x76>
    69fc:	80 32       	cpi	r24, 0x20	; 32
    69fe:	79 f0       	breq	.+30     	; 0x6a1e <vfprintf+0x8a>
    6a00:	83 32       	cpi	r24, 0x23	; 35
    6a02:	a1 f4       	brne	.+40     	; 0x6a2c <vfprintf+0x98>
    6a04:	23 2d       	mov	r18, r3
    6a06:	20 61       	ori	r18, 0x10	; 16
    6a08:	1d c0       	rjmp	.+58     	; 0x6a44 <vfprintf+0xb0>
    6a0a:	8d 32       	cpi	r24, 0x2D	; 45
    6a0c:	61 f0       	breq	.+24     	; 0x6a26 <vfprintf+0x92>
    6a0e:	80 33       	cpi	r24, 0x30	; 48
    6a10:	69 f4       	brne	.+26     	; 0x6a2c <vfprintf+0x98>
    6a12:	23 2d       	mov	r18, r3
    6a14:	21 60       	ori	r18, 0x01	; 1
    6a16:	16 c0       	rjmp	.+44     	; 0x6a44 <vfprintf+0xb0>
    6a18:	83 2d       	mov	r24, r3
    6a1a:	82 60       	ori	r24, 0x02	; 2
    6a1c:	38 2e       	mov	r3, r24
    6a1e:	e3 2d       	mov	r30, r3
    6a20:	e4 60       	ori	r30, 0x04	; 4
    6a22:	3e 2e       	mov	r3, r30
    6a24:	2a c0       	rjmp	.+84     	; 0x6a7a <vfprintf+0xe6>
    6a26:	f3 2d       	mov	r31, r3
    6a28:	f8 60       	ori	r31, 0x08	; 8
    6a2a:	1d c0       	rjmp	.+58     	; 0x6a66 <vfprintf+0xd2>
    6a2c:	37 fc       	sbrc	r3, 7
    6a2e:	2d c0       	rjmp	.+90     	; 0x6a8a <vfprintf+0xf6>
    6a30:	20 ed       	ldi	r18, 0xD0	; 208
    6a32:	28 0f       	add	r18, r24
    6a34:	2a 30       	cpi	r18, 0x0A	; 10
    6a36:	40 f0       	brcs	.+16     	; 0x6a48 <vfprintf+0xb4>
    6a38:	8e 32       	cpi	r24, 0x2E	; 46
    6a3a:	b9 f4       	brne	.+46     	; 0x6a6a <vfprintf+0xd6>
    6a3c:	36 fc       	sbrc	r3, 6
    6a3e:	81 c1       	rjmp	.+770    	; 0x6d42 <vfprintf+0x3ae>
    6a40:	23 2d       	mov	r18, r3
    6a42:	20 64       	ori	r18, 0x40	; 64
    6a44:	32 2e       	mov	r3, r18
    6a46:	19 c0       	rjmp	.+50     	; 0x6a7a <vfprintf+0xe6>
    6a48:	36 fe       	sbrs	r3, 6
    6a4a:	06 c0       	rjmp	.+12     	; 0x6a58 <vfprintf+0xc4>
    6a4c:	8a e0       	ldi	r24, 0x0A	; 10
    6a4e:	98 9e       	mul	r9, r24
    6a50:	20 0d       	add	r18, r0
    6a52:	11 24       	eor	r1, r1
    6a54:	92 2e       	mov	r9, r18
    6a56:	11 c0       	rjmp	.+34     	; 0x6a7a <vfprintf+0xe6>
    6a58:	ea e0       	ldi	r30, 0x0A	; 10
    6a5a:	2e 9e       	mul	r2, r30
    6a5c:	20 0d       	add	r18, r0
    6a5e:	11 24       	eor	r1, r1
    6a60:	22 2e       	mov	r2, r18
    6a62:	f3 2d       	mov	r31, r3
    6a64:	f0 62       	ori	r31, 0x20	; 32
    6a66:	3f 2e       	mov	r3, r31
    6a68:	08 c0       	rjmp	.+16     	; 0x6a7a <vfprintf+0xe6>
    6a6a:	8c 36       	cpi	r24, 0x6C	; 108
    6a6c:	21 f4       	brne	.+8      	; 0x6a76 <vfprintf+0xe2>
    6a6e:	83 2d       	mov	r24, r3
    6a70:	80 68       	ori	r24, 0x80	; 128
    6a72:	38 2e       	mov	r3, r24
    6a74:	02 c0       	rjmp	.+4      	; 0x6a7a <vfprintf+0xe6>
    6a76:	88 36       	cpi	r24, 0x68	; 104
    6a78:	41 f4       	brne	.+16     	; 0x6a8a <vfprintf+0xf6>
    6a7a:	f7 01       	movw	r30, r14
    6a7c:	93 fd       	sbrc	r25, 3
    6a7e:	85 91       	lpm	r24, Z+
    6a80:	93 ff       	sbrs	r25, 3
    6a82:	81 91       	ld	r24, Z+
    6a84:	7f 01       	movw	r14, r30
    6a86:	81 11       	cpse	r24, r1
    6a88:	b3 cf       	rjmp	.-154    	; 0x69f0 <vfprintf+0x5c>
    6a8a:	98 2f       	mov	r25, r24
    6a8c:	9f 7d       	andi	r25, 0xDF	; 223
    6a8e:	95 54       	subi	r25, 0x45	; 69
    6a90:	93 30       	cpi	r25, 0x03	; 3
    6a92:	28 f4       	brcc	.+10     	; 0x6a9e <vfprintf+0x10a>
    6a94:	0c 5f       	subi	r16, 0xFC	; 252
    6a96:	1f 4f       	sbci	r17, 0xFF	; 255
    6a98:	9f e3       	ldi	r25, 0x3F	; 63
    6a9a:	99 83       	std	Y+1, r25	; 0x01
    6a9c:	0d c0       	rjmp	.+26     	; 0x6ab8 <vfprintf+0x124>
    6a9e:	83 36       	cpi	r24, 0x63	; 99
    6aa0:	31 f0       	breq	.+12     	; 0x6aae <vfprintf+0x11a>
    6aa2:	83 37       	cpi	r24, 0x73	; 115
    6aa4:	71 f0       	breq	.+28     	; 0x6ac2 <vfprintf+0x12e>
    6aa6:	83 35       	cpi	r24, 0x53	; 83
    6aa8:	09 f0       	breq	.+2      	; 0x6aac <vfprintf+0x118>
    6aaa:	59 c0       	rjmp	.+178    	; 0x6b5e <vfprintf+0x1ca>
    6aac:	21 c0       	rjmp	.+66     	; 0x6af0 <vfprintf+0x15c>
    6aae:	f8 01       	movw	r30, r16
    6ab0:	80 81       	ld	r24, Z
    6ab2:	89 83       	std	Y+1, r24	; 0x01
    6ab4:	0e 5f       	subi	r16, 0xFE	; 254
    6ab6:	1f 4f       	sbci	r17, 0xFF	; 255
    6ab8:	88 24       	eor	r8, r8
    6aba:	83 94       	inc	r8
    6abc:	91 2c       	mov	r9, r1
    6abe:	53 01       	movw	r10, r6
    6ac0:	13 c0       	rjmp	.+38     	; 0x6ae8 <vfprintf+0x154>
    6ac2:	28 01       	movw	r4, r16
    6ac4:	f2 e0       	ldi	r31, 0x02	; 2
    6ac6:	4f 0e       	add	r4, r31
    6ac8:	51 1c       	adc	r5, r1
    6aca:	f8 01       	movw	r30, r16
    6acc:	a0 80       	ld	r10, Z
    6ace:	b1 80       	ldd	r11, Z+1	; 0x01
    6ad0:	36 fe       	sbrs	r3, 6
    6ad2:	03 c0       	rjmp	.+6      	; 0x6ada <vfprintf+0x146>
    6ad4:	69 2d       	mov	r22, r9
    6ad6:	70 e0       	ldi	r23, 0x00	; 0
    6ad8:	02 c0       	rjmp	.+4      	; 0x6ade <vfprintf+0x14a>
    6ada:	6f ef       	ldi	r22, 0xFF	; 255
    6adc:	7f ef       	ldi	r23, 0xFF	; 255
    6ade:	c5 01       	movw	r24, r10
    6ae0:	0e 94 b6 36 	call	0x6d6c	; 0x6d6c <strnlen>
    6ae4:	4c 01       	movw	r8, r24
    6ae6:	82 01       	movw	r16, r4
    6ae8:	f3 2d       	mov	r31, r3
    6aea:	ff 77       	andi	r31, 0x7F	; 127
    6aec:	3f 2e       	mov	r3, r31
    6aee:	16 c0       	rjmp	.+44     	; 0x6b1c <vfprintf+0x188>
    6af0:	28 01       	movw	r4, r16
    6af2:	22 e0       	ldi	r18, 0x02	; 2
    6af4:	42 0e       	add	r4, r18
    6af6:	51 1c       	adc	r5, r1
    6af8:	f8 01       	movw	r30, r16
    6afa:	a0 80       	ld	r10, Z
    6afc:	b1 80       	ldd	r11, Z+1	; 0x01
    6afe:	36 fe       	sbrs	r3, 6
    6b00:	03 c0       	rjmp	.+6      	; 0x6b08 <vfprintf+0x174>
    6b02:	69 2d       	mov	r22, r9
    6b04:	70 e0       	ldi	r23, 0x00	; 0
    6b06:	02 c0       	rjmp	.+4      	; 0x6b0c <vfprintf+0x178>
    6b08:	6f ef       	ldi	r22, 0xFF	; 255
    6b0a:	7f ef       	ldi	r23, 0xFF	; 255
    6b0c:	c5 01       	movw	r24, r10
    6b0e:	0e 94 ab 36 	call	0x6d56	; 0x6d56 <strnlen_P>
    6b12:	4c 01       	movw	r8, r24
    6b14:	f3 2d       	mov	r31, r3
    6b16:	f0 68       	ori	r31, 0x80	; 128
    6b18:	3f 2e       	mov	r3, r31
    6b1a:	82 01       	movw	r16, r4
    6b1c:	33 fc       	sbrc	r3, 3
    6b1e:	1b c0       	rjmp	.+54     	; 0x6b56 <vfprintf+0x1c2>
    6b20:	82 2d       	mov	r24, r2
    6b22:	90 e0       	ldi	r25, 0x00	; 0
    6b24:	88 16       	cp	r8, r24
    6b26:	99 06       	cpc	r9, r25
    6b28:	b0 f4       	brcc	.+44     	; 0x6b56 <vfprintf+0x1c2>
    6b2a:	b6 01       	movw	r22, r12
    6b2c:	80 e2       	ldi	r24, 0x20	; 32
    6b2e:	90 e0       	ldi	r25, 0x00	; 0
    6b30:	0e 94 c1 36 	call	0x6d82	; 0x6d82 <fputc>
    6b34:	2a 94       	dec	r2
    6b36:	f4 cf       	rjmp	.-24     	; 0x6b20 <vfprintf+0x18c>
    6b38:	f5 01       	movw	r30, r10
    6b3a:	37 fc       	sbrc	r3, 7
    6b3c:	85 91       	lpm	r24, Z+
    6b3e:	37 fe       	sbrs	r3, 7
    6b40:	81 91       	ld	r24, Z+
    6b42:	5f 01       	movw	r10, r30
    6b44:	b6 01       	movw	r22, r12
    6b46:	90 e0       	ldi	r25, 0x00	; 0
    6b48:	0e 94 c1 36 	call	0x6d82	; 0x6d82 <fputc>
    6b4c:	21 10       	cpse	r2, r1
    6b4e:	2a 94       	dec	r2
    6b50:	21 e0       	ldi	r18, 0x01	; 1
    6b52:	82 1a       	sub	r8, r18
    6b54:	91 08       	sbc	r9, r1
    6b56:	81 14       	cp	r8, r1
    6b58:	91 04       	cpc	r9, r1
    6b5a:	71 f7       	brne	.-36     	; 0x6b38 <vfprintf+0x1a4>
    6b5c:	e8 c0       	rjmp	.+464    	; 0x6d2e <vfprintf+0x39a>
    6b5e:	84 36       	cpi	r24, 0x64	; 100
    6b60:	11 f0       	breq	.+4      	; 0x6b66 <vfprintf+0x1d2>
    6b62:	89 36       	cpi	r24, 0x69	; 105
    6b64:	41 f5       	brne	.+80     	; 0x6bb6 <vfprintf+0x222>
    6b66:	f8 01       	movw	r30, r16
    6b68:	37 fe       	sbrs	r3, 7
    6b6a:	07 c0       	rjmp	.+14     	; 0x6b7a <vfprintf+0x1e6>
    6b6c:	60 81       	ld	r22, Z
    6b6e:	71 81       	ldd	r23, Z+1	; 0x01
    6b70:	82 81       	ldd	r24, Z+2	; 0x02
    6b72:	93 81       	ldd	r25, Z+3	; 0x03
    6b74:	0c 5f       	subi	r16, 0xFC	; 252
    6b76:	1f 4f       	sbci	r17, 0xFF	; 255
    6b78:	08 c0       	rjmp	.+16     	; 0x6b8a <vfprintf+0x1f6>
    6b7a:	60 81       	ld	r22, Z
    6b7c:	71 81       	ldd	r23, Z+1	; 0x01
    6b7e:	07 2e       	mov	r0, r23
    6b80:	00 0c       	add	r0, r0
    6b82:	88 0b       	sbc	r24, r24
    6b84:	99 0b       	sbc	r25, r25
    6b86:	0e 5f       	subi	r16, 0xFE	; 254
    6b88:	1f 4f       	sbci	r17, 0xFF	; 255
    6b8a:	f3 2d       	mov	r31, r3
    6b8c:	ff 76       	andi	r31, 0x6F	; 111
    6b8e:	3f 2e       	mov	r3, r31
    6b90:	97 ff       	sbrs	r25, 7
    6b92:	09 c0       	rjmp	.+18     	; 0x6ba6 <vfprintf+0x212>
    6b94:	90 95       	com	r25
    6b96:	80 95       	com	r24
    6b98:	70 95       	com	r23
    6b9a:	61 95       	neg	r22
    6b9c:	7f 4f       	sbci	r23, 0xFF	; 255
    6b9e:	8f 4f       	sbci	r24, 0xFF	; 255
    6ba0:	9f 4f       	sbci	r25, 0xFF	; 255
    6ba2:	f0 68       	ori	r31, 0x80	; 128
    6ba4:	3f 2e       	mov	r3, r31
    6ba6:	2a e0       	ldi	r18, 0x0A	; 10
    6ba8:	30 e0       	ldi	r19, 0x00	; 0
    6baa:	a3 01       	movw	r20, r6
    6bac:	0e 94 fd 36 	call	0x6dfa	; 0x6dfa <__ultoa_invert>
    6bb0:	88 2e       	mov	r8, r24
    6bb2:	86 18       	sub	r8, r6
    6bb4:	45 c0       	rjmp	.+138    	; 0x6c40 <vfprintf+0x2ac>
    6bb6:	85 37       	cpi	r24, 0x75	; 117
    6bb8:	31 f4       	brne	.+12     	; 0x6bc6 <vfprintf+0x232>
    6bba:	23 2d       	mov	r18, r3
    6bbc:	2f 7e       	andi	r18, 0xEF	; 239
    6bbe:	b2 2e       	mov	r11, r18
    6bc0:	2a e0       	ldi	r18, 0x0A	; 10
    6bc2:	30 e0       	ldi	r19, 0x00	; 0
    6bc4:	25 c0       	rjmp	.+74     	; 0x6c10 <vfprintf+0x27c>
    6bc6:	93 2d       	mov	r25, r3
    6bc8:	99 7f       	andi	r25, 0xF9	; 249
    6bca:	b9 2e       	mov	r11, r25
    6bcc:	8f 36       	cpi	r24, 0x6F	; 111
    6bce:	c1 f0       	breq	.+48     	; 0x6c00 <vfprintf+0x26c>
    6bd0:	18 f4       	brcc	.+6      	; 0x6bd8 <vfprintf+0x244>
    6bd2:	88 35       	cpi	r24, 0x58	; 88
    6bd4:	79 f0       	breq	.+30     	; 0x6bf4 <vfprintf+0x260>
    6bd6:	b5 c0       	rjmp	.+362    	; 0x6d42 <vfprintf+0x3ae>
    6bd8:	80 37       	cpi	r24, 0x70	; 112
    6bda:	19 f0       	breq	.+6      	; 0x6be2 <vfprintf+0x24e>
    6bdc:	88 37       	cpi	r24, 0x78	; 120
    6bde:	21 f0       	breq	.+8      	; 0x6be8 <vfprintf+0x254>
    6be0:	b0 c0       	rjmp	.+352    	; 0x6d42 <vfprintf+0x3ae>
    6be2:	e9 2f       	mov	r30, r25
    6be4:	e0 61       	ori	r30, 0x10	; 16
    6be6:	be 2e       	mov	r11, r30
    6be8:	b4 fe       	sbrs	r11, 4
    6bea:	0d c0       	rjmp	.+26     	; 0x6c06 <vfprintf+0x272>
    6bec:	fb 2d       	mov	r31, r11
    6bee:	f4 60       	ori	r31, 0x04	; 4
    6bf0:	bf 2e       	mov	r11, r31
    6bf2:	09 c0       	rjmp	.+18     	; 0x6c06 <vfprintf+0x272>
    6bf4:	34 fe       	sbrs	r3, 4
    6bf6:	0a c0       	rjmp	.+20     	; 0x6c0c <vfprintf+0x278>
    6bf8:	29 2f       	mov	r18, r25
    6bfa:	26 60       	ori	r18, 0x06	; 6
    6bfc:	b2 2e       	mov	r11, r18
    6bfe:	06 c0       	rjmp	.+12     	; 0x6c0c <vfprintf+0x278>
    6c00:	28 e0       	ldi	r18, 0x08	; 8
    6c02:	30 e0       	ldi	r19, 0x00	; 0
    6c04:	05 c0       	rjmp	.+10     	; 0x6c10 <vfprintf+0x27c>
    6c06:	20 e1       	ldi	r18, 0x10	; 16
    6c08:	30 e0       	ldi	r19, 0x00	; 0
    6c0a:	02 c0       	rjmp	.+4      	; 0x6c10 <vfprintf+0x27c>
    6c0c:	20 e1       	ldi	r18, 0x10	; 16
    6c0e:	32 e0       	ldi	r19, 0x02	; 2
    6c10:	f8 01       	movw	r30, r16
    6c12:	b7 fe       	sbrs	r11, 7
    6c14:	07 c0       	rjmp	.+14     	; 0x6c24 <vfprintf+0x290>
    6c16:	60 81       	ld	r22, Z
    6c18:	71 81       	ldd	r23, Z+1	; 0x01
    6c1a:	82 81       	ldd	r24, Z+2	; 0x02
    6c1c:	93 81       	ldd	r25, Z+3	; 0x03
    6c1e:	0c 5f       	subi	r16, 0xFC	; 252
    6c20:	1f 4f       	sbci	r17, 0xFF	; 255
    6c22:	06 c0       	rjmp	.+12     	; 0x6c30 <vfprintf+0x29c>
    6c24:	60 81       	ld	r22, Z
    6c26:	71 81       	ldd	r23, Z+1	; 0x01
    6c28:	80 e0       	ldi	r24, 0x00	; 0
    6c2a:	90 e0       	ldi	r25, 0x00	; 0
    6c2c:	0e 5f       	subi	r16, 0xFE	; 254
    6c2e:	1f 4f       	sbci	r17, 0xFF	; 255
    6c30:	a3 01       	movw	r20, r6
    6c32:	0e 94 fd 36 	call	0x6dfa	; 0x6dfa <__ultoa_invert>
    6c36:	88 2e       	mov	r8, r24
    6c38:	86 18       	sub	r8, r6
    6c3a:	fb 2d       	mov	r31, r11
    6c3c:	ff 77       	andi	r31, 0x7F	; 127
    6c3e:	3f 2e       	mov	r3, r31
    6c40:	36 fe       	sbrs	r3, 6
    6c42:	0d c0       	rjmp	.+26     	; 0x6c5e <vfprintf+0x2ca>
    6c44:	23 2d       	mov	r18, r3
    6c46:	2e 7f       	andi	r18, 0xFE	; 254
    6c48:	a2 2e       	mov	r10, r18
    6c4a:	89 14       	cp	r8, r9
    6c4c:	58 f4       	brcc	.+22     	; 0x6c64 <vfprintf+0x2d0>
    6c4e:	34 fe       	sbrs	r3, 4
    6c50:	0b c0       	rjmp	.+22     	; 0x6c68 <vfprintf+0x2d4>
    6c52:	32 fc       	sbrc	r3, 2
    6c54:	09 c0       	rjmp	.+18     	; 0x6c68 <vfprintf+0x2d4>
    6c56:	83 2d       	mov	r24, r3
    6c58:	8e 7e       	andi	r24, 0xEE	; 238
    6c5a:	a8 2e       	mov	r10, r24
    6c5c:	05 c0       	rjmp	.+10     	; 0x6c68 <vfprintf+0x2d4>
    6c5e:	b8 2c       	mov	r11, r8
    6c60:	a3 2c       	mov	r10, r3
    6c62:	03 c0       	rjmp	.+6      	; 0x6c6a <vfprintf+0x2d6>
    6c64:	b8 2c       	mov	r11, r8
    6c66:	01 c0       	rjmp	.+2      	; 0x6c6a <vfprintf+0x2d6>
    6c68:	b9 2c       	mov	r11, r9
    6c6a:	a4 fe       	sbrs	r10, 4
    6c6c:	0f c0       	rjmp	.+30     	; 0x6c8c <vfprintf+0x2f8>
    6c6e:	fe 01       	movw	r30, r28
    6c70:	e8 0d       	add	r30, r8
    6c72:	f1 1d       	adc	r31, r1
    6c74:	80 81       	ld	r24, Z
    6c76:	80 33       	cpi	r24, 0x30	; 48
    6c78:	21 f4       	brne	.+8      	; 0x6c82 <vfprintf+0x2ee>
    6c7a:	9a 2d       	mov	r25, r10
    6c7c:	99 7e       	andi	r25, 0xE9	; 233
    6c7e:	a9 2e       	mov	r10, r25
    6c80:	09 c0       	rjmp	.+18     	; 0x6c94 <vfprintf+0x300>
    6c82:	a2 fe       	sbrs	r10, 2
    6c84:	06 c0       	rjmp	.+12     	; 0x6c92 <vfprintf+0x2fe>
    6c86:	b3 94       	inc	r11
    6c88:	b3 94       	inc	r11
    6c8a:	04 c0       	rjmp	.+8      	; 0x6c94 <vfprintf+0x300>
    6c8c:	8a 2d       	mov	r24, r10
    6c8e:	86 78       	andi	r24, 0x86	; 134
    6c90:	09 f0       	breq	.+2      	; 0x6c94 <vfprintf+0x300>
    6c92:	b3 94       	inc	r11
    6c94:	a3 fc       	sbrc	r10, 3
    6c96:	11 c0       	rjmp	.+34     	; 0x6cba <vfprintf+0x326>
    6c98:	a0 fe       	sbrs	r10, 0
    6c9a:	06 c0       	rjmp	.+12     	; 0x6ca8 <vfprintf+0x314>
    6c9c:	b2 14       	cp	r11, r2
    6c9e:	88 f4       	brcc	.+34     	; 0x6cc2 <vfprintf+0x32e>
    6ca0:	28 0c       	add	r2, r8
    6ca2:	92 2c       	mov	r9, r2
    6ca4:	9b 18       	sub	r9, r11
    6ca6:	0e c0       	rjmp	.+28     	; 0x6cc4 <vfprintf+0x330>
    6ca8:	b2 14       	cp	r11, r2
    6caa:	60 f4       	brcc	.+24     	; 0x6cc4 <vfprintf+0x330>
    6cac:	b6 01       	movw	r22, r12
    6cae:	80 e2       	ldi	r24, 0x20	; 32
    6cb0:	90 e0       	ldi	r25, 0x00	; 0
    6cb2:	0e 94 c1 36 	call	0x6d82	; 0x6d82 <fputc>
    6cb6:	b3 94       	inc	r11
    6cb8:	f7 cf       	rjmp	.-18     	; 0x6ca8 <vfprintf+0x314>
    6cba:	b2 14       	cp	r11, r2
    6cbc:	18 f4       	brcc	.+6      	; 0x6cc4 <vfprintf+0x330>
    6cbe:	2b 18       	sub	r2, r11
    6cc0:	02 c0       	rjmp	.+4      	; 0x6cc6 <vfprintf+0x332>
    6cc2:	98 2c       	mov	r9, r8
    6cc4:	21 2c       	mov	r2, r1
    6cc6:	a4 fe       	sbrs	r10, 4
    6cc8:	10 c0       	rjmp	.+32     	; 0x6cea <vfprintf+0x356>
    6cca:	b6 01       	movw	r22, r12
    6ccc:	80 e3       	ldi	r24, 0x30	; 48
    6cce:	90 e0       	ldi	r25, 0x00	; 0
    6cd0:	0e 94 c1 36 	call	0x6d82	; 0x6d82 <fputc>
    6cd4:	a2 fe       	sbrs	r10, 2
    6cd6:	17 c0       	rjmp	.+46     	; 0x6d06 <vfprintf+0x372>
    6cd8:	a1 fc       	sbrc	r10, 1
    6cda:	03 c0       	rjmp	.+6      	; 0x6ce2 <vfprintf+0x34e>
    6cdc:	88 e7       	ldi	r24, 0x78	; 120
    6cde:	90 e0       	ldi	r25, 0x00	; 0
    6ce0:	02 c0       	rjmp	.+4      	; 0x6ce6 <vfprintf+0x352>
    6ce2:	88 e5       	ldi	r24, 0x58	; 88
    6ce4:	90 e0       	ldi	r25, 0x00	; 0
    6ce6:	b6 01       	movw	r22, r12
    6ce8:	0c c0       	rjmp	.+24     	; 0x6d02 <vfprintf+0x36e>
    6cea:	8a 2d       	mov	r24, r10
    6cec:	86 78       	andi	r24, 0x86	; 134
    6cee:	59 f0       	breq	.+22     	; 0x6d06 <vfprintf+0x372>
    6cf0:	a1 fe       	sbrs	r10, 1
    6cf2:	02 c0       	rjmp	.+4      	; 0x6cf8 <vfprintf+0x364>
    6cf4:	8b e2       	ldi	r24, 0x2B	; 43
    6cf6:	01 c0       	rjmp	.+2      	; 0x6cfa <vfprintf+0x366>
    6cf8:	80 e2       	ldi	r24, 0x20	; 32
    6cfa:	a7 fc       	sbrc	r10, 7
    6cfc:	8d e2       	ldi	r24, 0x2D	; 45
    6cfe:	b6 01       	movw	r22, r12
    6d00:	90 e0       	ldi	r25, 0x00	; 0
    6d02:	0e 94 c1 36 	call	0x6d82	; 0x6d82 <fputc>
    6d06:	89 14       	cp	r8, r9
    6d08:	38 f4       	brcc	.+14     	; 0x6d18 <vfprintf+0x384>
    6d0a:	b6 01       	movw	r22, r12
    6d0c:	80 e3       	ldi	r24, 0x30	; 48
    6d0e:	90 e0       	ldi	r25, 0x00	; 0
    6d10:	0e 94 c1 36 	call	0x6d82	; 0x6d82 <fputc>
    6d14:	9a 94       	dec	r9
    6d16:	f7 cf       	rjmp	.-18     	; 0x6d06 <vfprintf+0x372>
    6d18:	8a 94       	dec	r8
    6d1a:	f3 01       	movw	r30, r6
    6d1c:	e8 0d       	add	r30, r8
    6d1e:	f1 1d       	adc	r31, r1
    6d20:	80 81       	ld	r24, Z
    6d22:	b6 01       	movw	r22, r12
    6d24:	90 e0       	ldi	r25, 0x00	; 0
    6d26:	0e 94 c1 36 	call	0x6d82	; 0x6d82 <fputc>
    6d2a:	81 10       	cpse	r8, r1
    6d2c:	f5 cf       	rjmp	.-22     	; 0x6d18 <vfprintf+0x384>
    6d2e:	22 20       	and	r2, r2
    6d30:	09 f4       	brne	.+2      	; 0x6d34 <vfprintf+0x3a0>
    6d32:	42 ce       	rjmp	.-892    	; 0x69b8 <vfprintf+0x24>
    6d34:	b6 01       	movw	r22, r12
    6d36:	80 e2       	ldi	r24, 0x20	; 32
    6d38:	90 e0       	ldi	r25, 0x00	; 0
    6d3a:	0e 94 c1 36 	call	0x6d82	; 0x6d82 <fputc>
    6d3e:	2a 94       	dec	r2
    6d40:	f6 cf       	rjmp	.-20     	; 0x6d2e <vfprintf+0x39a>
    6d42:	f6 01       	movw	r30, r12
    6d44:	86 81       	ldd	r24, Z+6	; 0x06
    6d46:	97 81       	ldd	r25, Z+7	; 0x07
    6d48:	02 c0       	rjmp	.+4      	; 0x6d4e <vfprintf+0x3ba>
    6d4a:	8f ef       	ldi	r24, 0xFF	; 255
    6d4c:	9f ef       	ldi	r25, 0xFF	; 255
    6d4e:	2b 96       	adiw	r28, 0x0b	; 11
    6d50:	e2 e1       	ldi	r30, 0x12	; 18
    6d52:	0c 94 77 37 	jmp	0x6eee	; 0x6eee <__epilogue_restores__>

00006d56 <strnlen_P>:
    6d56:	fc 01       	movw	r30, r24
    6d58:	05 90       	lpm	r0, Z+
    6d5a:	61 50       	subi	r22, 0x01	; 1
    6d5c:	70 40       	sbci	r23, 0x00	; 0
    6d5e:	01 10       	cpse	r0, r1
    6d60:	d8 f7       	brcc	.-10     	; 0x6d58 <strnlen_P+0x2>
    6d62:	80 95       	com	r24
    6d64:	90 95       	com	r25
    6d66:	8e 0f       	add	r24, r30
    6d68:	9f 1f       	adc	r25, r31
    6d6a:	08 95       	ret

00006d6c <strnlen>:
    6d6c:	fc 01       	movw	r30, r24
    6d6e:	61 50       	subi	r22, 0x01	; 1
    6d70:	70 40       	sbci	r23, 0x00	; 0
    6d72:	01 90       	ld	r0, Z+
    6d74:	01 10       	cpse	r0, r1
    6d76:	d8 f7       	brcc	.-10     	; 0x6d6e <strnlen+0x2>
    6d78:	80 95       	com	r24
    6d7a:	90 95       	com	r25
    6d7c:	8e 0f       	add	r24, r30
    6d7e:	9f 1f       	adc	r25, r31
    6d80:	08 95       	ret

00006d82 <fputc>:
    6d82:	0f 93       	push	r16
    6d84:	1f 93       	push	r17
    6d86:	cf 93       	push	r28
    6d88:	df 93       	push	r29
    6d8a:	fb 01       	movw	r30, r22
    6d8c:	23 81       	ldd	r18, Z+3	; 0x03
    6d8e:	21 fd       	sbrc	r18, 1
    6d90:	03 c0       	rjmp	.+6      	; 0x6d98 <fputc+0x16>
    6d92:	8f ef       	ldi	r24, 0xFF	; 255
    6d94:	9f ef       	ldi	r25, 0xFF	; 255
    6d96:	2c c0       	rjmp	.+88     	; 0x6df0 <fputc+0x6e>
    6d98:	22 ff       	sbrs	r18, 2
    6d9a:	16 c0       	rjmp	.+44     	; 0x6dc8 <fputc+0x46>
    6d9c:	46 81       	ldd	r20, Z+6	; 0x06
    6d9e:	57 81       	ldd	r21, Z+7	; 0x07
    6da0:	24 81       	ldd	r18, Z+4	; 0x04
    6da2:	35 81       	ldd	r19, Z+5	; 0x05
    6da4:	42 17       	cp	r20, r18
    6da6:	53 07       	cpc	r21, r19
    6da8:	44 f4       	brge	.+16     	; 0x6dba <fputc+0x38>
    6daa:	a0 81       	ld	r26, Z
    6dac:	b1 81       	ldd	r27, Z+1	; 0x01
    6dae:	9d 01       	movw	r18, r26
    6db0:	2f 5f       	subi	r18, 0xFF	; 255
    6db2:	3f 4f       	sbci	r19, 0xFF	; 255
    6db4:	31 83       	std	Z+1, r19	; 0x01
    6db6:	20 83       	st	Z, r18
    6db8:	8c 93       	st	X, r24
    6dba:	26 81       	ldd	r18, Z+6	; 0x06
    6dbc:	37 81       	ldd	r19, Z+7	; 0x07
    6dbe:	2f 5f       	subi	r18, 0xFF	; 255
    6dc0:	3f 4f       	sbci	r19, 0xFF	; 255
    6dc2:	37 83       	std	Z+7, r19	; 0x07
    6dc4:	26 83       	std	Z+6, r18	; 0x06
    6dc6:	14 c0       	rjmp	.+40     	; 0x6df0 <fputc+0x6e>
    6dc8:	8b 01       	movw	r16, r22
    6dca:	ec 01       	movw	r28, r24
    6dcc:	fb 01       	movw	r30, r22
    6dce:	00 84       	ldd	r0, Z+8	; 0x08
    6dd0:	f1 85       	ldd	r31, Z+9	; 0x09
    6dd2:	e0 2d       	mov	r30, r0
    6dd4:	09 95       	icall
    6dd6:	89 2b       	or	r24, r25
    6dd8:	e1 f6       	brne	.-72     	; 0x6d92 <fputc+0x10>
    6dda:	d8 01       	movw	r26, r16
    6ddc:	16 96       	adiw	r26, 0x06	; 6
    6dde:	8d 91       	ld	r24, X+
    6de0:	9c 91       	ld	r25, X
    6de2:	17 97       	sbiw	r26, 0x07	; 7
    6de4:	01 96       	adiw	r24, 0x01	; 1
    6de6:	17 96       	adiw	r26, 0x07	; 7
    6de8:	9c 93       	st	X, r25
    6dea:	8e 93       	st	-X, r24
    6dec:	16 97       	sbiw	r26, 0x06	; 6
    6dee:	ce 01       	movw	r24, r28
    6df0:	df 91       	pop	r29
    6df2:	cf 91       	pop	r28
    6df4:	1f 91       	pop	r17
    6df6:	0f 91       	pop	r16
    6df8:	08 95       	ret

00006dfa <__ultoa_invert>:
    6dfa:	fa 01       	movw	r30, r20
    6dfc:	aa 27       	eor	r26, r26
    6dfe:	28 30       	cpi	r18, 0x08	; 8
    6e00:	51 f1       	breq	.+84     	; 0x6e56 <__ultoa_invert+0x5c>
    6e02:	20 31       	cpi	r18, 0x10	; 16
    6e04:	81 f1       	breq	.+96     	; 0x6e66 <__ultoa_invert+0x6c>
    6e06:	e8 94       	clt
    6e08:	6f 93       	push	r22
    6e0a:	6e 7f       	andi	r22, 0xFE	; 254
    6e0c:	6e 5f       	subi	r22, 0xFE	; 254
    6e0e:	7f 4f       	sbci	r23, 0xFF	; 255
    6e10:	8f 4f       	sbci	r24, 0xFF	; 255
    6e12:	9f 4f       	sbci	r25, 0xFF	; 255
    6e14:	af 4f       	sbci	r26, 0xFF	; 255
    6e16:	b1 e0       	ldi	r27, 0x01	; 1
    6e18:	3e d0       	rcall	.+124    	; 0x6e96 <__ultoa_invert+0x9c>
    6e1a:	b4 e0       	ldi	r27, 0x04	; 4
    6e1c:	3c d0       	rcall	.+120    	; 0x6e96 <__ultoa_invert+0x9c>
    6e1e:	67 0f       	add	r22, r23
    6e20:	78 1f       	adc	r23, r24
    6e22:	89 1f       	adc	r24, r25
    6e24:	9a 1f       	adc	r25, r26
    6e26:	a1 1d       	adc	r26, r1
    6e28:	68 0f       	add	r22, r24
    6e2a:	79 1f       	adc	r23, r25
    6e2c:	8a 1f       	adc	r24, r26
    6e2e:	91 1d       	adc	r25, r1
    6e30:	a1 1d       	adc	r26, r1
    6e32:	6a 0f       	add	r22, r26
    6e34:	71 1d       	adc	r23, r1
    6e36:	81 1d       	adc	r24, r1
    6e38:	91 1d       	adc	r25, r1
    6e3a:	a1 1d       	adc	r26, r1
    6e3c:	20 d0       	rcall	.+64     	; 0x6e7e <__ultoa_invert+0x84>
    6e3e:	09 f4       	brne	.+2      	; 0x6e42 <__ultoa_invert+0x48>
    6e40:	68 94       	set
    6e42:	3f 91       	pop	r19
    6e44:	2a e0       	ldi	r18, 0x0A	; 10
    6e46:	26 9f       	mul	r18, r22
    6e48:	11 24       	eor	r1, r1
    6e4a:	30 19       	sub	r19, r0
    6e4c:	30 5d       	subi	r19, 0xD0	; 208
    6e4e:	31 93       	st	Z+, r19
    6e50:	de f6       	brtc	.-74     	; 0x6e08 <__ultoa_invert+0xe>
    6e52:	cf 01       	movw	r24, r30
    6e54:	08 95       	ret
    6e56:	46 2f       	mov	r20, r22
    6e58:	47 70       	andi	r20, 0x07	; 7
    6e5a:	40 5d       	subi	r20, 0xD0	; 208
    6e5c:	41 93       	st	Z+, r20
    6e5e:	b3 e0       	ldi	r27, 0x03	; 3
    6e60:	0f d0       	rcall	.+30     	; 0x6e80 <__ultoa_invert+0x86>
    6e62:	c9 f7       	brne	.-14     	; 0x6e56 <__ultoa_invert+0x5c>
    6e64:	f6 cf       	rjmp	.-20     	; 0x6e52 <__ultoa_invert+0x58>
    6e66:	46 2f       	mov	r20, r22
    6e68:	4f 70       	andi	r20, 0x0F	; 15
    6e6a:	40 5d       	subi	r20, 0xD0	; 208
    6e6c:	4a 33       	cpi	r20, 0x3A	; 58
    6e6e:	18 f0       	brcs	.+6      	; 0x6e76 <__ultoa_invert+0x7c>
    6e70:	49 5d       	subi	r20, 0xD9	; 217
    6e72:	31 fd       	sbrc	r19, 1
    6e74:	40 52       	subi	r20, 0x20	; 32
    6e76:	41 93       	st	Z+, r20
    6e78:	02 d0       	rcall	.+4      	; 0x6e7e <__ultoa_invert+0x84>
    6e7a:	a9 f7       	brne	.-22     	; 0x6e66 <__ultoa_invert+0x6c>
    6e7c:	ea cf       	rjmp	.-44     	; 0x6e52 <__ultoa_invert+0x58>
    6e7e:	b4 e0       	ldi	r27, 0x04	; 4
    6e80:	a6 95       	lsr	r26
    6e82:	97 95       	ror	r25
    6e84:	87 95       	ror	r24
    6e86:	77 95       	ror	r23
    6e88:	67 95       	ror	r22
    6e8a:	ba 95       	dec	r27
    6e8c:	c9 f7       	brne	.-14     	; 0x6e80 <__ultoa_invert+0x86>
    6e8e:	00 97       	sbiw	r24, 0x00	; 0
    6e90:	61 05       	cpc	r22, r1
    6e92:	71 05       	cpc	r23, r1
    6e94:	08 95       	ret
    6e96:	9b 01       	movw	r18, r22
    6e98:	ac 01       	movw	r20, r24
    6e9a:	0a 2e       	mov	r0, r26
    6e9c:	06 94       	lsr	r0
    6e9e:	57 95       	ror	r21
    6ea0:	47 95       	ror	r20
    6ea2:	37 95       	ror	r19
    6ea4:	27 95       	ror	r18
    6ea6:	ba 95       	dec	r27
    6ea8:	c9 f7       	brne	.-14     	; 0x6e9c <__ultoa_invert+0xa2>
    6eaa:	62 0f       	add	r22, r18
    6eac:	73 1f       	adc	r23, r19
    6eae:	84 1f       	adc	r24, r20
    6eb0:	95 1f       	adc	r25, r21
    6eb2:	a0 1d       	adc	r26, r0
    6eb4:	08 95       	ret

00006eb6 <__prologue_saves__>:
    6eb6:	2f 92       	push	r2
    6eb8:	3f 92       	push	r3
    6eba:	4f 92       	push	r4
    6ebc:	5f 92       	push	r5
    6ebe:	6f 92       	push	r6
    6ec0:	7f 92       	push	r7
    6ec2:	8f 92       	push	r8
    6ec4:	9f 92       	push	r9
    6ec6:	af 92       	push	r10
    6ec8:	bf 92       	push	r11
    6eca:	cf 92       	push	r12
    6ecc:	df 92       	push	r13
    6ece:	ef 92       	push	r14
    6ed0:	ff 92       	push	r15
    6ed2:	0f 93       	push	r16
    6ed4:	1f 93       	push	r17
    6ed6:	cf 93       	push	r28
    6ed8:	df 93       	push	r29
    6eda:	cd b7       	in	r28, 0x3d	; 61
    6edc:	de b7       	in	r29, 0x3e	; 62
    6ede:	ca 1b       	sub	r28, r26
    6ee0:	db 0b       	sbc	r29, r27
    6ee2:	0f b6       	in	r0, 0x3f	; 63
    6ee4:	f8 94       	cli
    6ee6:	de bf       	out	0x3e, r29	; 62
    6ee8:	0f be       	out	0x3f, r0	; 63
    6eea:	cd bf       	out	0x3d, r28	; 61
    6eec:	09 94       	ijmp

00006eee <__epilogue_restores__>:
    6eee:	2a 88       	ldd	r2, Y+18	; 0x12
    6ef0:	39 88       	ldd	r3, Y+17	; 0x11
    6ef2:	48 88       	ldd	r4, Y+16	; 0x10
    6ef4:	5f 84       	ldd	r5, Y+15	; 0x0f
    6ef6:	6e 84       	ldd	r6, Y+14	; 0x0e
    6ef8:	7d 84       	ldd	r7, Y+13	; 0x0d
    6efa:	8c 84       	ldd	r8, Y+12	; 0x0c
    6efc:	9b 84       	ldd	r9, Y+11	; 0x0b
    6efe:	aa 84       	ldd	r10, Y+10	; 0x0a
    6f00:	b9 84       	ldd	r11, Y+9	; 0x09
    6f02:	c8 84       	ldd	r12, Y+8	; 0x08
    6f04:	df 80       	ldd	r13, Y+7	; 0x07
    6f06:	ee 80       	ldd	r14, Y+6	; 0x06
    6f08:	fd 80       	ldd	r15, Y+5	; 0x05
    6f0a:	0c 81       	ldd	r16, Y+4	; 0x04
    6f0c:	1b 81       	ldd	r17, Y+3	; 0x03
    6f0e:	aa 81       	ldd	r26, Y+2	; 0x02
    6f10:	b9 81       	ldd	r27, Y+1	; 0x01
    6f12:	ce 0f       	add	r28, r30
    6f14:	d1 1d       	adc	r29, r1
    6f16:	0f b6       	in	r0, 0x3f	; 63
    6f18:	f8 94       	cli
    6f1a:	de bf       	out	0x3e, r29	; 62
    6f1c:	0f be       	out	0x3f, r0	; 63
    6f1e:	cd bf       	out	0x3d, r28	; 61
    6f20:	ed 01       	movw	r28, r26
    6f22:	08 95       	ret

00006f24 <_exit>:
    6f24:	f8 94       	cli

00006f26 <__stop_program>:
    6f26:	ff cf       	rjmp	.-2      	; 0x6f26 <__stop_program>
