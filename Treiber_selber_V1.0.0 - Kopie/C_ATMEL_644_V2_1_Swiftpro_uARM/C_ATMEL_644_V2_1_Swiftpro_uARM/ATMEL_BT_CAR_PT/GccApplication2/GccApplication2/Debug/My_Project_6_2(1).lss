
My_Project_6_2(1).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000027e  00800100  00006aca  00006b5e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00006aca  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000a4  0080037e  0080037e  00006ddc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00006ddc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00006e38  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  00006e78  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002ad0  00000000  00000000  00006fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b08  00000000  00000000  00009a90  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000021f2  00000000  00000000  0000a598  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000514  00000000  00000000  0000c78c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000094c  00000000  00000000  0000cca0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a7f  00000000  00000000  0000d5ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  0000e06b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 f9 2d 	jmp	0x5bf2	; 0x5bf2 <__vector_16>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 cb 01 	jmp	0x396	; 0x396 <__vector_20>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      70:	0c 94 26 02 	jmp	0x44c	; 0x44c <__vector_28>
      74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d0 e1       	ldi	r29, 0x10	; 16
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	13 e0       	ldi	r17, 0x03	; 3
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	ea ec       	ldi	r30, 0xCA	; 202
      90:	fa e6       	ldi	r31, 0x6A	; 106
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	ae 37       	cpi	r26, 0x7E	; 126
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	24 e0       	ldi	r18, 0x04	; 4
      a0:	ae e7       	ldi	r26, 0x7E	; 126
      a2:	b3 e0       	ldi	r27, 0x03	; 3
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	a2 32       	cpi	r26, 0x22	; 34
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 8e 03 	call	0x71c	; 0x71c <main>
      b2:	0c 94 63 35 	jmp	0x6ac6	; 0x6ac6 <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <get_DIP_Switch>:
	}
	if ((x>300)&&(x<700)&&(y<700)&&(y>300))
	{
		return 0;
	}
}
      ba:	cf 93       	push	r28
      bc:	df 93       	push	r29
      be:	00 d0       	rcall	.+0      	; 0xc0 <get_DIP_Switch+0x6>
      c0:	1f 92       	push	r1
      c2:	cd b7       	in	r28, 0x3d	; 61
      c4:	de b7       	in	r29, 0x3e	; 62
      c6:	19 82       	std	Y+1, r1	; 0x01
      c8:	82 e2       	ldi	r24, 0x22	; 34
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	22 e2       	ldi	r18, 0x22	; 34
      ce:	30 e0       	ldi	r19, 0x00	; 0
      d0:	f9 01       	movw	r30, r18
      d2:	20 81       	ld	r18, Z
      d4:	20 62       	ori	r18, 0x20	; 32
      d6:	fc 01       	movw	r30, r24
      d8:	20 83       	st	Z, r18
      da:	82 e2       	ldi	r24, 0x22	; 34
      dc:	90 e0       	ldi	r25, 0x00	; 0
      de:	22 e2       	ldi	r18, 0x22	; 34
      e0:	30 e0       	ldi	r19, 0x00	; 0
      e2:	f9 01       	movw	r30, r18
      e4:	20 81       	ld	r18, Z
      e6:	2f 7d       	andi	r18, 0xDF	; 223
      e8:	fc 01       	movw	r30, r24
      ea:	20 83       	st	Z, r18
      ec:	82 e2       	ldi	r24, 0x22	; 34
      ee:	90 e0       	ldi	r25, 0x00	; 0
      f0:	22 e2       	ldi	r18, 0x22	; 34
      f2:	30 e0       	ldi	r19, 0x00	; 0
      f4:	f9 01       	movw	r30, r18
      f6:	20 81       	ld	r18, Z
      f8:	20 62       	ori	r18, 0x20	; 32
      fa:	fc 01       	movw	r30, r24
      fc:	20 83       	st	Z, r18
      fe:	87 e0       	ldi	r24, 0x07	; 7
     100:	90 e0       	ldi	r25, 0x00	; 0
     102:	9b 83       	std	Y+3, r25	; 0x03
     104:	8a 83       	std	Y+2, r24	; 0x02
     106:	30 c0       	rjmp	.+96     	; 0x168 <get_DIP_Switch+0xae>
     108:	80 e2       	ldi	r24, 0x20	; 32
     10a:	90 e0       	ldi	r25, 0x00	; 0
     10c:	fc 01       	movw	r30, r24
     10e:	80 81       	ld	r24, Z
     110:	88 2f       	mov	r24, r24
     112:	90 e0       	ldi	r25, 0x00	; 0
     114:	80 78       	andi	r24, 0x80	; 128
     116:	99 27       	eor	r25, r25
     118:	47 e0       	ldi	r20, 0x07	; 7
     11a:	50 e0       	ldi	r21, 0x00	; 0
     11c:	2a 81       	ldd	r18, Y+2	; 0x02
     11e:	3b 81       	ldd	r19, Y+3	; 0x03
     120:	ba 01       	movw	r22, r20
     122:	62 1b       	sub	r22, r18
     124:	73 0b       	sbc	r23, r19
     126:	9b 01       	movw	r18, r22
     128:	02 c0       	rjmp	.+4      	; 0x12e <get_DIP_Switch+0x74>
     12a:	95 95       	asr	r25
     12c:	87 95       	ror	r24
     12e:	2a 95       	dec	r18
     130:	e2 f7       	brpl	.-8      	; 0x12a <get_DIP_Switch+0x70>
     132:	98 2f       	mov	r25, r24
     134:	89 81       	ldd	r24, Y+1	; 0x01
     136:	89 2b       	or	r24, r25
     138:	89 83       	std	Y+1, r24	; 0x01
     13a:	82 e2       	ldi	r24, 0x22	; 34
     13c:	90 e0       	ldi	r25, 0x00	; 0
     13e:	22 e2       	ldi	r18, 0x22	; 34
     140:	30 e0       	ldi	r19, 0x00	; 0
     142:	f9 01       	movw	r30, r18
     144:	20 81       	ld	r18, Z
     146:	2f 7b       	andi	r18, 0xBF	; 191
     148:	fc 01       	movw	r30, r24
     14a:	20 83       	st	Z, r18
     14c:	82 e2       	ldi	r24, 0x22	; 34
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	22 e2       	ldi	r18, 0x22	; 34
     152:	30 e0       	ldi	r19, 0x00	; 0
     154:	f9 01       	movw	r30, r18
     156:	20 81       	ld	r18, Z
     158:	20 64       	ori	r18, 0x40	; 64
     15a:	fc 01       	movw	r30, r24
     15c:	20 83       	st	Z, r18
     15e:	8a 81       	ldd	r24, Y+2	; 0x02
     160:	9b 81       	ldd	r25, Y+3	; 0x03
     162:	01 97       	sbiw	r24, 0x01	; 1
     164:	9b 83       	std	Y+3, r25	; 0x03
     166:	8a 83       	std	Y+2, r24	; 0x02
     168:	8a 81       	ldd	r24, Y+2	; 0x02
     16a:	9b 81       	ldd	r25, Y+3	; 0x03
     16c:	99 23       	and	r25, r25
     16e:	64 f6       	brge	.-104    	; 0x108 <get_DIP_Switch+0x4e>
     170:	89 81       	ldd	r24, Y+1	; 0x01
     172:	0f 90       	pop	r0
     174:	0f 90       	pop	r0
     176:	0f 90       	pop	r0
     178:	df 91       	pop	r29
     17a:	cf 91       	pop	r28
     17c:	08 95       	ret

0000017e <get_LCD_Taster>:
     17e:	cf 93       	push	r28
     180:	df 93       	push	r29
     182:	1f 92       	push	r1
     184:	cd b7       	in	r28, 0x3d	; 61
     186:	de b7       	in	r29, 0x3e	; 62
     188:	85 e2       	ldi	r24, 0x25	; 37
     18a:	90 e0       	ldi	r25, 0x00	; 0
     18c:	25 e2       	ldi	r18, 0x25	; 37
     18e:	30 e0       	ldi	r19, 0x00	; 0
     190:	f9 01       	movw	r30, r18
     192:	20 81       	ld	r18, Z
     194:	20 7f       	andi	r18, 0xF0	; 240
     196:	fc 01       	movw	r30, r24
     198:	20 83       	st	Z, r18
     19a:	84 e2       	ldi	r24, 0x24	; 36
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	20 ef       	ldi	r18, 0xF0	; 240
     1a0:	fc 01       	movw	r30, r24
     1a2:	20 83       	st	Z, r18
	...
     1b8:	83 e2       	ldi	r24, 0x23	; 35
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	fc 01       	movw	r30, r24
     1be:	80 81       	ld	r24, Z
     1c0:	8f 70       	andi	r24, 0x0F	; 15
     1c2:	89 83       	std	Y+1, r24	; 0x01
     1c4:	84 e2       	ldi	r24, 0x24	; 36
     1c6:	90 e0       	ldi	r25, 0x00	; 0
     1c8:	2f ef       	ldi	r18, 0xFF	; 255
     1ca:	fc 01       	movw	r30, r24
     1cc:	20 83       	st	Z, r18
     1ce:	89 81       	ldd	r24, Y+1	; 0x01
     1d0:	0f 90       	pop	r0
     1d2:	df 91       	pop	r29
     1d4:	cf 91       	pop	r28
     1d6:	08 95       	ret

000001d8 <init_ADC>:
     1d8:	cf 93       	push	r28
     1da:	df 93       	push	r29
     1dc:	cd b7       	in	r28, 0x3d	; 61
     1de:	de b7       	in	r29, 0x3e	; 62
     1e0:	8a e7       	ldi	r24, 0x7A	; 122
     1e2:	90 e0       	ldi	r25, 0x00	; 0
     1e4:	2a e7       	ldi	r18, 0x7A	; 122
     1e6:	30 e0       	ldi	r19, 0x00	; 0
     1e8:	f9 01       	movw	r30, r18
     1ea:	20 81       	ld	r18, Z
     1ec:	20 68       	ori	r18, 0x80	; 128
     1ee:	fc 01       	movw	r30, r24
     1f0:	20 83       	st	Z, r18
     1f2:	8c e7       	ldi	r24, 0x7C	; 124
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	2c e7       	ldi	r18, 0x7C	; 124
     1f8:	30 e0       	ldi	r19, 0x00	; 0
     1fa:	f9 01       	movw	r30, r18
     1fc:	20 81       	ld	r18, Z
     1fe:	20 64       	ori	r18, 0x40	; 64
     200:	fc 01       	movw	r30, r24
     202:	20 83       	st	Z, r18
     204:	8a e7       	ldi	r24, 0x7A	; 122
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	2a e7       	ldi	r18, 0x7A	; 122
     20a:	30 e0       	ldi	r19, 0x00	; 0
     20c:	f9 01       	movw	r30, r18
     20e:	20 81       	ld	r18, Z
     210:	27 60       	ori	r18, 0x07	; 7
     212:	fc 01       	movw	r30, r24
     214:	20 83       	st	Z, r18
     216:	00 00       	nop
     218:	df 91       	pop	r29
     21a:	cf 91       	pop	r28
     21c:	08 95       	ret

0000021e <init_UART0>:
     21e:	cf 93       	push	r28
     220:	df 93       	push	r29
     222:	cd b7       	in	r28, 0x3d	; 61
     224:	de b7       	in	r29, 0x3e	; 62
     226:	84 ec       	ldi	r24, 0xC4	; 196
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	20 e1       	ldi	r18, 0x10	; 16
     22c:	30 e0       	ldi	r19, 0x00	; 0
     22e:	fc 01       	movw	r30, r24
     230:	31 83       	std	Z+1, r19	; 0x01
     232:	20 83       	st	Z, r18
     234:	80 ec       	ldi	r24, 0xC0	; 192
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	20 ec       	ldi	r18, 0xC0	; 192
     23a:	30 e0       	ldi	r19, 0x00	; 0
     23c:	f9 01       	movw	r30, r18
     23e:	20 81       	ld	r18, Z
     240:	22 60       	ori	r18, 0x02	; 2
     242:	fc 01       	movw	r30, r24
     244:	20 83       	st	Z, r18
     246:	81 ec       	ldi	r24, 0xC1	; 193
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	21 ec       	ldi	r18, 0xC1	; 193
     24c:	30 e0       	ldi	r19, 0x00	; 0
     24e:	f9 01       	movw	r30, r18
     250:	20 81       	ld	r18, Z
     252:	28 69       	ori	r18, 0x98	; 152
     254:	fc 01       	movw	r30, r24
     256:	20 83       	st	Z, r18
     258:	00 00       	nop
     25a:	df 91       	pop	r29
     25c:	cf 91       	pop	r28
     25e:	08 95       	ret

00000260 <init_UART1>:
     260:	cf 93       	push	r28
     262:	df 93       	push	r29
     264:	cd b7       	in	r28, 0x3d	; 61
     266:	de b7       	in	r29, 0x3e	; 62
     268:	8c ec       	ldi	r24, 0xCC	; 204
     26a:	90 e0       	ldi	r25, 0x00	; 0
     26c:	20 e1       	ldi	r18, 0x10	; 16
     26e:	30 e0       	ldi	r19, 0x00	; 0
     270:	fc 01       	movw	r30, r24
     272:	31 83       	std	Z+1, r19	; 0x01
     274:	20 83       	st	Z, r18
     276:	88 ec       	ldi	r24, 0xC8	; 200
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	28 ec       	ldi	r18, 0xC8	; 200
     27c:	30 e0       	ldi	r19, 0x00	; 0
     27e:	f9 01       	movw	r30, r18
     280:	20 81       	ld	r18, Z
     282:	22 60       	ori	r18, 0x02	; 2
     284:	fc 01       	movw	r30, r24
     286:	20 83       	st	Z, r18
     288:	89 ec       	ldi	r24, 0xC9	; 201
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	29 ec       	ldi	r18, 0xC9	; 201
     28e:	30 e0       	ldi	r19, 0x00	; 0
     290:	f9 01       	movw	r30, r18
     292:	20 81       	ld	r18, Z
     294:	28 69       	ori	r18, 0x98	; 152
     296:	fc 01       	movw	r30, r24
     298:	20 83       	st	Z, r18
     29a:	00 00       	nop
     29c:	df 91       	pop	r29
     29e:	cf 91       	pop	r28
     2a0:	08 95       	ret

000002a2 <send_Byte_0>:
     2a2:	cf 93       	push	r28
     2a4:	df 93       	push	r29
     2a6:	1f 92       	push	r1
     2a8:	cd b7       	in	r28, 0x3d	; 61
     2aa:	de b7       	in	r29, 0x3e	; 62
     2ac:	89 83       	std	Y+1, r24	; 0x01
     2ae:	00 00       	nop
     2b0:	80 ec       	ldi	r24, 0xC0	; 192
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	fc 01       	movw	r30, r24
     2b6:	80 81       	ld	r24, Z
     2b8:	88 2f       	mov	r24, r24
     2ba:	90 e0       	ldi	r25, 0x00	; 0
     2bc:	80 72       	andi	r24, 0x20	; 32
     2be:	99 27       	eor	r25, r25
     2c0:	89 2b       	or	r24, r25
     2c2:	b1 f3       	breq	.-20     	; 0x2b0 <send_Byte_0+0xe>
     2c4:	86 ec       	ldi	r24, 0xC6	; 198
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	29 81       	ldd	r18, Y+1	; 0x01
     2ca:	fc 01       	movw	r30, r24
     2cc:	20 83       	st	Z, r18
     2ce:	00 00       	nop
     2d0:	0f 90       	pop	r0
     2d2:	df 91       	pop	r29
     2d4:	cf 91       	pop	r28
     2d6:	08 95       	ret

000002d8 <send_Byte_1>:
     2d8:	cf 93       	push	r28
     2da:	df 93       	push	r29
     2dc:	1f 92       	push	r1
     2de:	cd b7       	in	r28, 0x3d	; 61
     2e0:	de b7       	in	r29, 0x3e	; 62
     2e2:	89 83       	std	Y+1, r24	; 0x01
     2e4:	00 00       	nop
     2e6:	88 ec       	ldi	r24, 0xC8	; 200
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	fc 01       	movw	r30, r24
     2ec:	80 81       	ld	r24, Z
     2ee:	88 2f       	mov	r24, r24
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	80 72       	andi	r24, 0x20	; 32
     2f4:	99 27       	eor	r25, r25
     2f6:	89 2b       	or	r24, r25
     2f8:	b1 f3       	breq	.-20     	; 0x2e6 <send_Byte_1+0xe>
     2fa:	8e ec       	ldi	r24, 0xCE	; 206
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	29 81       	ldd	r18, Y+1	; 0x01
     300:	fc 01       	movw	r30, r24
     302:	20 83       	st	Z, r18
     304:	00 00       	nop
     306:	0f 90       	pop	r0
     308:	df 91       	pop	r29
     30a:	cf 91       	pop	r28
     30c:	08 95       	ret

0000030e <to_uARM>:
     30e:	cf 93       	push	r28
     310:	df 93       	push	r29
     312:	00 d0       	rcall	.+0      	; 0x314 <to_uARM+0x6>
     314:	cd b7       	in	r28, 0x3d	; 61
     316:	de b7       	in	r29, 0x3e	; 62
     318:	9a 83       	std	Y+2, r25	; 0x02
     31a:	89 83       	std	Y+1, r24	; 0x01
     31c:	0b c0       	rjmp	.+22     	; 0x334 <to_uARM+0x26>
     31e:	89 81       	ldd	r24, Y+1	; 0x01
     320:	9a 81       	ldd	r25, Y+2	; 0x02
     322:	fc 01       	movw	r30, r24
     324:	80 81       	ld	r24, Z
     326:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <send_Byte_1>
     32a:	89 81       	ldd	r24, Y+1	; 0x01
     32c:	9a 81       	ldd	r25, Y+2	; 0x02
     32e:	01 96       	adiw	r24, 0x01	; 1
     330:	9a 83       	std	Y+2, r25	; 0x02
     332:	89 83       	std	Y+1, r24	; 0x01
     334:	89 81       	ldd	r24, Y+1	; 0x01
     336:	9a 81       	ldd	r25, Y+2	; 0x02
     338:	fc 01       	movw	r30, r24
     33a:	80 81       	ld	r24, Z
     33c:	88 23       	and	r24, r24
     33e:	79 f7       	brne	.-34     	; 0x31e <to_uARM+0x10>
     340:	10 92 80 03 	sts	0x0380, r1	; 0x800380 <uart_str_complete1>
     344:	00 00       	nop
     346:	80 91 80 03 	lds	r24, 0x0380	; 0x800380 <uart_str_complete1>
     34a:	88 23       	and	r24, r24
     34c:	e1 f3       	breq	.-8      	; 0x346 <to_uARM+0x38>
     34e:	00 00       	nop
     350:	0f 90       	pop	r0
     352:	0f 90       	pop	r0
     354:	df 91       	pop	r29
     356:	cf 91       	pop	r28
     358:	08 95       	ret

0000035a <send_to_uArm>:
     35a:	cf 93       	push	r28
     35c:	df 93       	push	r29
     35e:	00 d0       	rcall	.+0      	; 0x360 <send_to_uArm+0x6>
     360:	cd b7       	in	r28, 0x3d	; 61
     362:	de b7       	in	r29, 0x3e	; 62
     364:	9a 83       	std	Y+2, r25	; 0x02
     366:	89 83       	std	Y+1, r24	; 0x01
     368:	89 81       	ldd	r24, Y+1	; 0x01
     36a:	9a 81       	ldd	r25, Y+2	; 0x02
     36c:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     370:	80 e0       	ldi	r24, 0x00	; 0
     372:	91 e0       	ldi	r25, 0x01	; 1
     374:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     378:	04 c0       	rjmp	.+8      	; 0x382 <send_to_uArm+0x28>
     37a:	80 e0       	ldi	r24, 0x00	; 0
     37c:	91 e0       	ldi	r25, 0x01	; 1
     37e:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     382:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <uart_string1+0x4>
     386:	81 33       	cpi	r24, 0x31	; 49
     388:	c1 f3       	breq	.-16     	; 0x37a <send_to_uArm+0x20>
     38a:	00 00       	nop
     38c:	0f 90       	pop	r0
     38e:	0f 90       	pop	r0
     390:	df 91       	pop	r29
     392:	cf 91       	pop	r28
     394:	08 95       	ret

00000396 <__vector_20>:
     396:	1f 92       	push	r1
     398:	0f 92       	push	r0
     39a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     39e:	0f 92       	push	r0
     3a0:	11 24       	eor	r1, r1
     3a2:	2f 93       	push	r18
     3a4:	3f 93       	push	r19
     3a6:	8f 93       	push	r24
     3a8:	9f 93       	push	r25
     3aa:	ef 93       	push	r30
     3ac:	ff 93       	push	r31
     3ae:	cf 93       	push	r28
     3b0:	df 93       	push	r29
     3b2:	00 d0       	rcall	.+0      	; 0x3b4 <__vector_20+0x1e>
     3b4:	1f 92       	push	r1
     3b6:	cd b7       	in	r28, 0x3d	; 61
     3b8:	de b7       	in	r29, 0x3e	; 62
     3ba:	1a 82       	std	Y+2, r1	; 0x02
     3bc:	86 ec       	ldi	r24, 0xC6	; 198
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	fc 01       	movw	r30, r24
     3c2:	80 81       	ld	r24, Z
     3c4:	8b 83       	std	Y+3, r24	; 0x03
     3c6:	8b 81       	ldd	r24, Y+3	; 0x03
     3c8:	8a 30       	cpi	r24, 0x0A	; 10
     3ca:	99 f0       	breq	.+38     	; 0x3f2 <__vector_20+0x5c>
     3cc:	80 91 82 03 	lds	r24, 0x0382	; 0x800382 <uart_str_count1>
     3d0:	82 33       	cpi	r24, 0x32	; 50
     3d2:	78 f4       	brcc	.+30     	; 0x3f2 <__vector_20+0x5c>
     3d4:	80 91 81 03 	lds	r24, 0x0381	; 0x800381 <data_bytes_recieved>
     3d8:	88 2f       	mov	r24, r24
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	8a 5f       	subi	r24, 0xFA	; 250
     3de:	9b 4f       	sbci	r25, 0xFB	; 251
     3e0:	2b 81       	ldd	r18, Y+3	; 0x03
     3e2:	fc 01       	movw	r30, r24
     3e4:	20 83       	st	Z, r18
     3e6:	80 91 81 03 	lds	r24, 0x0381	; 0x800381 <data_bytes_recieved>
     3ea:	8f 5f       	subi	r24, 0xFF	; 255
     3ec:	80 93 81 03 	sts	0x0381, r24	; 0x800381 <data_bytes_recieved>
     3f0:	1b c0       	rjmp	.+54     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     3f2:	19 82       	std	Y+1, r1	; 0x01
     3f4:	11 c0       	rjmp	.+34     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     3f6:	89 81       	ldd	r24, Y+1	; 0x01
     3f8:	88 2f       	mov	r24, r24
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	29 81       	ldd	r18, Y+1	; 0x01
     3fe:	22 2f       	mov	r18, r18
     400:	30 e0       	ldi	r19, 0x00	; 0
     402:	2a 5f       	subi	r18, 0xFA	; 250
     404:	3b 4f       	sbci	r19, 0xFB	; 251
     406:	f9 01       	movw	r30, r18
     408:	20 81       	ld	r18, Z
     40a:	8c 5e       	subi	r24, 0xEC	; 236
     40c:	9b 4f       	sbci	r25, 0xFB	; 251
     40e:	fc 01       	movw	r30, r24
     410:	20 83       	st	Z, r18
     412:	89 81       	ldd	r24, Y+1	; 0x01
     414:	8f 5f       	subi	r24, 0xFF	; 255
     416:	89 83       	std	Y+1, r24	; 0x01
     418:	80 91 81 03 	lds	r24, 0x0381	; 0x800381 <data_bytes_recieved>
     41c:	99 81       	ldd	r25, Y+1	; 0x01
     41e:	89 17       	cp	r24, r25
     420:	50 f7       	brcc	.-44     	; 0x3f6 <__vector_20+0x60>
     422:	81 e0       	ldi	r24, 0x01	; 1
     424:	80 93 7f 03 	sts	0x037F, r24	; 0x80037f <uart_str_complete>
     428:	00 00       	nop
     42a:	0f 90       	pop	r0
     42c:	0f 90       	pop	r0
     42e:	0f 90       	pop	r0
     430:	df 91       	pop	r29
     432:	cf 91       	pop	r28
     434:	ff 91       	pop	r31
     436:	ef 91       	pop	r30
     438:	9f 91       	pop	r25
     43a:	8f 91       	pop	r24
     43c:	3f 91       	pop	r19
     43e:	2f 91       	pop	r18
     440:	0f 90       	pop	r0
     442:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     446:	0f 90       	pop	r0
     448:	1f 90       	pop	r1
     44a:	18 95       	reti

0000044c <__vector_28>:
     44c:	1f 92       	push	r1
     44e:	0f 92       	push	r0
     450:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     454:	0f 92       	push	r0
     456:	11 24       	eor	r1, r1
     458:	2f 93       	push	r18
     45a:	8f 93       	push	r24
     45c:	9f 93       	push	r25
     45e:	ef 93       	push	r30
     460:	ff 93       	push	r31
     462:	cf 93       	push	r28
     464:	df 93       	push	r29
     466:	1f 92       	push	r1
     468:	cd b7       	in	r28, 0x3d	; 61
     46a:	de b7       	in	r29, 0x3e	; 62
     46c:	8e ec       	ldi	r24, 0xCE	; 206
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	fc 01       	movw	r30, r24
     472:	80 81       	ld	r24, Z
     474:	89 83       	std	Y+1, r24	; 0x01
     476:	80 91 80 03 	lds	r24, 0x0380	; 0x800380 <uart_str_complete1>
     47a:	88 23       	and	r24, r24
     47c:	31 f5       	brne	.+76     	; 0x4ca <__vector_28+0x7e>
     47e:	89 81       	ldd	r24, Y+1	; 0x01
     480:	8a 30       	cpi	r24, 0x0A	; 10
     482:	b1 f0       	breq	.+44     	; 0x4b0 <__vector_28+0x64>
     484:	89 81       	ldd	r24, Y+1	; 0x01
     486:	8d 30       	cpi	r24, 0x0D	; 13
     488:	99 f0       	breq	.+38     	; 0x4b0 <__vector_28+0x64>
     48a:	80 91 82 03 	lds	r24, 0x0382	; 0x800382 <uart_str_count1>
     48e:	82 33       	cpi	r24, 0x32	; 50
     490:	78 f4       	brcc	.+30     	; 0x4b0 <__vector_28+0x64>
     492:	80 91 82 03 	lds	r24, 0x0382	; 0x800382 <uart_str_count1>
     496:	88 2f       	mov	r24, r24
     498:	90 e0       	ldi	r25, 0x00	; 0
     49a:	8a 54       	subi	r24, 0x4A	; 74
     49c:	9c 4f       	sbci	r25, 0xFC	; 252
     49e:	29 81       	ldd	r18, Y+1	; 0x01
     4a0:	fc 01       	movw	r30, r24
     4a2:	20 83       	st	Z, r18
     4a4:	80 91 82 03 	lds	r24, 0x0382	; 0x800382 <uart_str_count1>
     4a8:	8f 5f       	subi	r24, 0xFF	; 255
     4aa:	80 93 82 03 	sts	0x0382, r24	; 0x800382 <uart_str_count1>
     4ae:	0d c0       	rjmp	.+26     	; 0x4ca <__vector_28+0x7e>
     4b0:	80 91 82 03 	lds	r24, 0x0382	; 0x800382 <uart_str_count1>
     4b4:	88 2f       	mov	r24, r24
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	8a 54       	subi	r24, 0x4A	; 74
     4ba:	9c 4f       	sbci	r25, 0xFC	; 252
     4bc:	fc 01       	movw	r30, r24
     4be:	10 82       	st	Z, r1
     4c0:	10 92 82 03 	sts	0x0382, r1	; 0x800382 <uart_str_count1>
     4c4:	81 e0       	ldi	r24, 0x01	; 1
     4c6:	80 93 80 03 	sts	0x0380, r24	; 0x800380 <uart_str_complete1>
     4ca:	00 00       	nop
     4cc:	0f 90       	pop	r0
     4ce:	df 91       	pop	r29
     4d0:	cf 91       	pop	r28
     4d2:	ff 91       	pop	r31
     4d4:	ef 91       	pop	r30
     4d6:	9f 91       	pop	r25
     4d8:	8f 91       	pop	r24
     4da:	2f 91       	pop	r18
     4dc:	0f 90       	pop	r0
     4de:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     4e2:	0f 90       	pop	r0
     4e4:	1f 90       	pop	r1
     4e6:	18 95       	reti

000004e8 <start_up_routine>:

void start_up_routine ()
{
     4e8:	cf 93       	push	r28
     4ea:	df 93       	push	r29
     4ec:	cd b7       	in	r28, 0x3d	; 61
     4ee:	de b7       	in	r29, 0x3e	; 62
     4f0:	6c 97       	sbiw	r28, 0x1c	; 28
     4f2:	0f b6       	in	r0, 0x3f	; 63
     4f4:	f8 94       	cli
     4f6:	de bf       	out	0x3e, r29	; 62
     4f8:	0f be       	out	0x3f, r0	; 63
     4fa:	cd bf       	out	0x3d, r28	; 61
	init_BT_CAR_V2_0();			// Das Board wird hier initialisiert
     4fc:	0e 94 e8 30 	call	0x61d0	; 0x61d0 <init_BT_CAR_V2_0>
	wait_1ms(1000);
     500:	68 ee       	ldi	r22, 0xE8	; 232
     502:	73 e0       	ldi	r23, 0x03	; 3
     504:	80 e0       	ldi	r24, 0x00	; 0
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	0e 94 7f 2e 	call	0x5cfe	; 0x5cfe <wait_1ms>
	init_ADC();
     50c:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <init_ADC>
	init_UART0();
     510:	0e 94 0f 01 	call	0x21e	; 0x21e <init_UART0>
	init_UART1();
     514:	0e 94 30 01 	call	0x260	; 0x260 <init_UART1>
	wait_1ms(1000);
     518:	68 ee       	ldi	r22, 0xE8	; 232
     51a:	73 e0       	ldi	r23, 0x03	; 3
     51c:	80 e0       	ldi	r24, 0x00	; 0
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	0e 94 7f 2e 	call	0x5cfe	; 0x5cfe <wait_1ms>
	//while (final_data[0]!='D')
	//{
	//	to_pc('R');
	//}
	
	to_uARM("M2210 F500 T200\n");
     524:	8e e5       	ldi	r24, 0x5E	; 94
     526:	91 e0       	ldi	r25, 0x01	; 1
     528:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     52c:	80 e0       	ldi	r24, 0x00	; 0
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	a8 e4       	ldi	r26, 0x48	; 72
     532:	b3 e4       	ldi	r27, 0x43	; 67
     534:	89 83       	std	Y+1, r24	; 0x01
     536:	9a 83       	std	Y+2, r25	; 0x02
     538:	ab 83       	std	Y+3, r26	; 0x03
     53a:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     53c:	20 e0       	ldi	r18, 0x00	; 0
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	4a e7       	ldi	r20, 0x7A	; 122
     542:	55 e4       	ldi	r21, 0x45	; 69
     544:	69 81       	ldd	r22, Y+1	; 0x01
     546:	7a 81       	ldd	r23, Y+2	; 0x02
     548:	8b 81       	ldd	r24, Y+3	; 0x03
     54a:	9c 81       	ldd	r25, Y+4	; 0x04
     54c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
     550:	dc 01       	movw	r26, r24
     552:	cb 01       	movw	r24, r22
     554:	8b 8b       	std	Y+19, r24	; 0x13
     556:	9c 8b       	std	Y+20, r25	; 0x14
     558:	ad 8b       	std	Y+21, r26	; 0x15
     55a:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     55c:	20 e0       	ldi	r18, 0x00	; 0
     55e:	30 e0       	ldi	r19, 0x00	; 0
     560:	40 e8       	ldi	r20, 0x80	; 128
     562:	5f e3       	ldi	r21, 0x3F	; 63
     564:	6b 89       	ldd	r22, Y+19	; 0x13
     566:	7c 89       	ldd	r23, Y+20	; 0x14
     568:	8d 89       	ldd	r24, Y+21	; 0x15
     56a:	9e 89       	ldd	r25, Y+22	; 0x16
     56c:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
     570:	88 23       	and	r24, r24
     572:	2c f4       	brge	.+10     	; 0x57e <start_up_routine+0x96>
		__ticks = 1;
     574:	81 e0       	ldi	r24, 0x01	; 1
     576:	90 e0       	ldi	r25, 0x00	; 0
     578:	98 8f       	std	Y+24, r25	; 0x18
     57a:	8f 8b       	std	Y+23, r24	; 0x17
     57c:	3f c0       	rjmp	.+126    	; 0x5fc <start_up_routine+0x114>
	else if (__tmp > 65535)
     57e:	20 e0       	ldi	r18, 0x00	; 0
     580:	3f ef       	ldi	r19, 0xFF	; 255
     582:	4f e7       	ldi	r20, 0x7F	; 127
     584:	57 e4       	ldi	r21, 0x47	; 71
     586:	6b 89       	ldd	r22, Y+19	; 0x13
     588:	7c 89       	ldd	r23, Y+20	; 0x14
     58a:	8d 89       	ldd	r24, Y+21	; 0x15
     58c:	9e 89       	ldd	r25, Y+22	; 0x16
     58e:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
     592:	18 16       	cp	r1, r24
     594:	4c f5       	brge	.+82     	; 0x5e8 <start_up_routine+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     596:	20 e0       	ldi	r18, 0x00	; 0
     598:	30 e0       	ldi	r19, 0x00	; 0
     59a:	40 e2       	ldi	r20, 0x20	; 32
     59c:	51 e4       	ldi	r21, 0x41	; 65
     59e:	69 81       	ldd	r22, Y+1	; 0x01
     5a0:	7a 81       	ldd	r23, Y+2	; 0x02
     5a2:	8b 81       	ldd	r24, Y+3	; 0x03
     5a4:	9c 81       	ldd	r25, Y+4	; 0x04
     5a6:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
     5aa:	dc 01       	movw	r26, r24
     5ac:	cb 01       	movw	r24, r22
     5ae:	bc 01       	movw	r22, r24
     5b0:	cd 01       	movw	r24, r26
     5b2:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
     5b6:	dc 01       	movw	r26, r24
     5b8:	cb 01       	movw	r24, r22
     5ba:	98 8f       	std	Y+24, r25	; 0x18
     5bc:	8f 8b       	std	Y+23, r24	; 0x17
     5be:	0f c0       	rjmp	.+30     	; 0x5de <start_up_routine+0xf6>
     5c0:	80 e9       	ldi	r24, 0x90	; 144
     5c2:	91 e0       	ldi	r25, 0x01	; 1
     5c4:	9a 8f       	std	Y+26, r25	; 0x1a
     5c6:	89 8f       	std	Y+25, r24	; 0x19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     5c8:	89 8d       	ldd	r24, Y+25	; 0x19
     5ca:	9a 8d       	ldd	r25, Y+26	; 0x1a
     5cc:	01 97       	sbiw	r24, 0x01	; 1
     5ce:	f1 f7       	brne	.-4      	; 0x5cc <start_up_routine+0xe4>
     5d0:	9a 8f       	std	Y+26, r25	; 0x1a
     5d2:	89 8f       	std	Y+25, r24	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     5d4:	8f 89       	ldd	r24, Y+23	; 0x17
     5d6:	98 8d       	ldd	r25, Y+24	; 0x18
     5d8:	01 97       	sbiw	r24, 0x01	; 1
     5da:	98 8f       	std	Y+24, r25	; 0x18
     5dc:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     5de:	8f 89       	ldd	r24, Y+23	; 0x17
     5e0:	98 8d       	ldd	r25, Y+24	; 0x18
     5e2:	89 2b       	or	r24, r25
     5e4:	69 f7       	brne	.-38     	; 0x5c0 <start_up_routine+0xd8>
     5e6:	14 c0       	rjmp	.+40     	; 0x610 <start_up_routine+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     5e8:	6b 89       	ldd	r22, Y+19	; 0x13
     5ea:	7c 89       	ldd	r23, Y+20	; 0x14
     5ec:	8d 89       	ldd	r24, Y+21	; 0x15
     5ee:	9e 89       	ldd	r25, Y+22	; 0x16
     5f0:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
     5f4:	dc 01       	movw	r26, r24
     5f6:	cb 01       	movw	r24, r22
     5f8:	98 8f       	std	Y+24, r25	; 0x18
     5fa:	8f 8b       	std	Y+23, r24	; 0x17
     5fc:	8f 89       	ldd	r24, Y+23	; 0x17
     5fe:	98 8d       	ldd	r25, Y+24	; 0x18
     600:	9c 8f       	std	Y+28, r25	; 0x1c
     602:	8b 8f       	std	Y+27, r24	; 0x1b
     604:	8b 8d       	ldd	r24, Y+27	; 0x1b
     606:	9c 8d       	ldd	r25, Y+28	; 0x1c
     608:	01 97       	sbiw	r24, 0x01	; 1
     60a:	f1 f7       	brne	.-4      	; 0x608 <start_up_routine+0x120>
     60c:	9c 8f       	std	Y+28, r25	; 0x1c
     60e:	8b 8f       	std	Y+27, r24	; 0x1b
	_delay_ms(200);
	to_uARM("M2210 F1000 T500\n");
     610:	8f e6       	ldi	r24, 0x6F	; 111
     612:	91 e0       	ldi	r25, 0x01	; 1
     614:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     618:	80 e0       	ldi	r24, 0x00	; 0
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	aa ef       	ldi	r26, 0xFA	; 250
     61e:	b3 e4       	ldi	r27, 0x43	; 67
     620:	8d 83       	std	Y+5, r24	; 0x05
     622:	9e 83       	std	Y+6, r25	; 0x06
     624:	af 83       	std	Y+7, r26	; 0x07
     626:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     628:	20 e0       	ldi	r18, 0x00	; 0
     62a:	30 e0       	ldi	r19, 0x00	; 0
     62c:	4a e7       	ldi	r20, 0x7A	; 122
     62e:	55 e4       	ldi	r21, 0x45	; 69
     630:	6d 81       	ldd	r22, Y+5	; 0x05
     632:	7e 81       	ldd	r23, Y+6	; 0x06
     634:	8f 81       	ldd	r24, Y+7	; 0x07
     636:	98 85       	ldd	r25, Y+8	; 0x08
     638:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
     63c:	dc 01       	movw	r26, r24
     63e:	cb 01       	movw	r24, r22
     640:	89 87       	std	Y+9, r24	; 0x09
     642:	9a 87       	std	Y+10, r25	; 0x0a
     644:	ab 87       	std	Y+11, r26	; 0x0b
     646:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     648:	20 e0       	ldi	r18, 0x00	; 0
     64a:	30 e0       	ldi	r19, 0x00	; 0
     64c:	40 e8       	ldi	r20, 0x80	; 128
     64e:	5f e3       	ldi	r21, 0x3F	; 63
     650:	69 85       	ldd	r22, Y+9	; 0x09
     652:	7a 85       	ldd	r23, Y+10	; 0x0a
     654:	8b 85       	ldd	r24, Y+11	; 0x0b
     656:	9c 85       	ldd	r25, Y+12	; 0x0c
     658:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
     65c:	88 23       	and	r24, r24
     65e:	2c f4       	brge	.+10     	; 0x66a <start_up_routine+0x182>
		__ticks = 1;
     660:	81 e0       	ldi	r24, 0x01	; 1
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	9e 87       	std	Y+14, r25	; 0x0e
     666:	8d 87       	std	Y+13, r24	; 0x0d
     668:	3f c0       	rjmp	.+126    	; 0x6e8 <start_up_routine+0x200>
	else if (__tmp > 65535)
     66a:	20 e0       	ldi	r18, 0x00	; 0
     66c:	3f ef       	ldi	r19, 0xFF	; 255
     66e:	4f e7       	ldi	r20, 0x7F	; 127
     670:	57 e4       	ldi	r21, 0x47	; 71
     672:	69 85       	ldd	r22, Y+9	; 0x09
     674:	7a 85       	ldd	r23, Y+10	; 0x0a
     676:	8b 85       	ldd	r24, Y+11	; 0x0b
     678:	9c 85       	ldd	r25, Y+12	; 0x0c
     67a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
     67e:	18 16       	cp	r1, r24
     680:	4c f5       	brge	.+82     	; 0x6d4 <start_up_routine+0x1ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     682:	20 e0       	ldi	r18, 0x00	; 0
     684:	30 e0       	ldi	r19, 0x00	; 0
     686:	40 e2       	ldi	r20, 0x20	; 32
     688:	51 e4       	ldi	r21, 0x41	; 65
     68a:	6d 81       	ldd	r22, Y+5	; 0x05
     68c:	7e 81       	ldd	r23, Y+6	; 0x06
     68e:	8f 81       	ldd	r24, Y+7	; 0x07
     690:	98 85       	ldd	r25, Y+8	; 0x08
     692:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
     696:	dc 01       	movw	r26, r24
     698:	cb 01       	movw	r24, r22
     69a:	bc 01       	movw	r22, r24
     69c:	cd 01       	movw	r24, r26
     69e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
     6a2:	dc 01       	movw	r26, r24
     6a4:	cb 01       	movw	r24, r22
     6a6:	9e 87       	std	Y+14, r25	; 0x0e
     6a8:	8d 87       	std	Y+13, r24	; 0x0d
     6aa:	0f c0       	rjmp	.+30     	; 0x6ca <start_up_routine+0x1e2>
     6ac:	80 e9       	ldi	r24, 0x90	; 144
     6ae:	91 e0       	ldi	r25, 0x01	; 1
     6b0:	98 8b       	std	Y+16, r25	; 0x10
     6b2:	8f 87       	std	Y+15, r24	; 0x0f
     6b4:	8f 85       	ldd	r24, Y+15	; 0x0f
     6b6:	98 89       	ldd	r25, Y+16	; 0x10
     6b8:	01 97       	sbiw	r24, 0x01	; 1
     6ba:	f1 f7       	brne	.-4      	; 0x6b8 <start_up_routine+0x1d0>
     6bc:	98 8b       	std	Y+16, r25	; 0x10
     6be:	8f 87       	std	Y+15, r24	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6c0:	8d 85       	ldd	r24, Y+13	; 0x0d
     6c2:	9e 85       	ldd	r25, Y+14	; 0x0e
     6c4:	01 97       	sbiw	r24, 0x01	; 1
     6c6:	9e 87       	std	Y+14, r25	; 0x0e
     6c8:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6ca:	8d 85       	ldd	r24, Y+13	; 0x0d
     6cc:	9e 85       	ldd	r25, Y+14	; 0x0e
     6ce:	89 2b       	or	r24, r25
     6d0:	69 f7       	brne	.-38     	; 0x6ac <start_up_routine+0x1c4>
     6d2:	14 c0       	rjmp	.+40     	; 0x6fc <start_up_routine+0x214>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     6d4:	69 85       	ldd	r22, Y+9	; 0x09
     6d6:	7a 85       	ldd	r23, Y+10	; 0x0a
     6d8:	8b 85       	ldd	r24, Y+11	; 0x0b
     6da:	9c 85       	ldd	r25, Y+12	; 0x0c
     6dc:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
     6e0:	dc 01       	movw	r26, r24
     6e2:	cb 01       	movw	r24, r22
     6e4:	9e 87       	std	Y+14, r25	; 0x0e
     6e6:	8d 87       	std	Y+13, r24	; 0x0d
     6e8:	8d 85       	ldd	r24, Y+13	; 0x0d
     6ea:	9e 85       	ldd	r25, Y+14	; 0x0e
     6ec:	9a 8b       	std	Y+18, r25	; 0x12
     6ee:	89 8b       	std	Y+17, r24	; 0x11
     6f0:	89 89       	ldd	r24, Y+17	; 0x11
     6f2:	9a 89       	ldd	r25, Y+18	; 0x12
     6f4:	01 97       	sbiw	r24, 0x01	; 1
     6f6:	f1 f7       	brne	.-4      	; 0x6f4 <start_up_routine+0x20c>
     6f8:	9a 8b       	std	Y+18, r25	; 0x12
     6fa:	89 8b       	std	Y+17, r24	; 0x11
	_delay_ms(500);
	to_uARM("M2210 F2000 T500\n");
     6fc:	81 e8       	ldi	r24, 0x81	; 129
     6fe:	91 e0       	ldi	r25, 0x01	; 1
     700:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
	clear_lcd();
     704:	0e 94 85 30 	call	0x610a	; 0x610a <clear_lcd>
}
     708:	00 00       	nop
     70a:	6c 96       	adiw	r28, 0x1c	; 28
     70c:	0f b6       	in	r0, 0x3f	; 63
     70e:	f8 94       	cli
     710:	de bf       	out	0x3e, r29	; 62
     712:	0f be       	out	0x3f, r0	; 63
     714:	cd bf       	out	0x3d, r28	; 61
     716:	df 91       	pop	r29
     718:	cf 91       	pop	r28
     71a:	08 95       	ret

0000071c <main>:

int main (void)
{
     71c:	cf 92       	push	r12
     71e:	ef 92       	push	r14
     720:	0f 93       	push	r16
     722:	1f 93       	push	r17
     724:	cf 93       	push	r28
     726:	df 93       	push	r29
     728:	cd b7       	in	r28, 0x3d	; 61
     72a:	de b7       	in	r29, 0x3e	; 62
     72c:	c0 56       	subi	r28, 0x60	; 96
     72e:	d3 40       	sbci	r29, 0x03	; 3
     730:	0f b6       	in	r0, 0x3f	; 63
     732:	f8 94       	cli
     734:	de bf       	out	0x3e, r29	; 62
     736:	0f be       	out	0x3f, r0	; 63
     738:	cd bf       	out	0x3d, r28	; 61
	start_up_routine();
     73a:	0e 94 74 02 	call	0x4e8	; 0x4e8 <start_up_routine>
	unsigned char taster;
	//unsigned char direction;
	int recieved_X; 
	int recieved_Y;
	unsigned char buffer [30];
	unsigned char check=0;
     73e:	1d 82       	std	Y+5, r1	; 0x05
	unsigned char counter=0;
     740:	1e 82       	std	Y+6, r1	; 0x06
	unsigned char routine_done=0;
     742:	1f 82       	std	Y+7, r1	; 0x07
	unsigned int sound[14]={262,277,294,311,330,349,370,392,415,440,466,494,523,0};
     744:	ce 01       	movw	r24, r28
     746:	81 50       	subi	r24, 0x01	; 1
     748:	9d 4f       	sbci	r25, 0xFD	; 253
     74a:	2c e1       	ldi	r18, 0x1C	; 28
     74c:	e0 e3       	ldi	r30, 0x30	; 48
     74e:	f3 e0       	ldi	r31, 0x03	; 3
     750:	dc 01       	movw	r26, r24
     752:	01 90       	ld	r0, Z+
     754:	0d 92       	st	X+, r0
     756:	2a 95       	dec	r18
     758:	e1 f7       	brne	.-8      	; 0x752 <main+0x36>
	unsigned char music[50]={0,0,2,2,0,0,5,5,4,4,4,4,0,0,2,2,0,0,7,7,5,5,5,5,0,0,12,12,9,9,5,5,4,4,2,2,10,10,9,9,5,5,7,7,5,5,5,5,5,5};
     75a:	ce 01       	movw	r24, r28
     75c:	85 5e       	subi	r24, 0xE5	; 229
     75e:	9c 4f       	sbci	r25, 0xFC	; 252
     760:	22 e3       	ldi	r18, 0x32	; 50
     762:	ec e4       	ldi	r30, 0x4C	; 76
     764:	f3 e0       	ldi	r31, 0x03	; 3
     766:	dc 01       	movw	r26, r24
     768:	01 90       	ld	r0, Z+
     76a:	0d 92       	st	X+, r0
     76c:	2a 95       	dec	r18
     76e:	e1 f7       	brne	.-8      	; 0x768 <main+0x4c>
	unsigned int tone;
	
	while(1)
	{
	//	direction=get_direction();
		taster = get_LCD_Taster();
     770:	0e 94 bf 00 	call	0x17e	; 0x17e <get_LCD_Taster>
     774:	88 87       	std	Y+8, r24	; 0x08
		DIP_Switch=get_DIP_Switch();
     776:	0e 94 5d 00 	call	0xba	; 0xba <get_DIP_Switch>
     77a:	80 93 7e 03 	sts	0x037E, r24	; 0x80037e <__data_end>
		if ((DIP_Switch&0x01)&&(taster&0x01))
     77e:	80 91 7e 03 	lds	r24, 0x037E	; 0x80037e <__data_end>
     782:	88 2f       	mov	r24, r24
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	81 70       	andi	r24, 0x01	; 1
     788:	99 27       	eor	r25, r25
     78a:	89 2b       	or	r24, r25
     78c:	11 f4       	brne	.+4      	; 0x792 <main+0x76>
     78e:	0c 94 30 27 	jmp	0x4e60	; 0x4e60 <__stack+0x3d61>
     792:	88 85       	ldd	r24, Y+8	; 0x08
     794:	88 2f       	mov	r24, r24
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	81 70       	andi	r24, 0x01	; 1
     79a:	99 27       	eor	r25, r25
     79c:	89 2b       	or	r24, r25
     79e:	11 f4       	brne	.+4      	; 0x7a4 <main+0x88>
     7a0:	0c 94 30 27 	jmp	0x4e60	; 0x4e60 <__stack+0x3d61>
		{
			to_uARM("M2210 F660 T100\n");
     7a4:	83 e9       	ldi	r24, 0x93	; 147
     7a6:	91 e0       	ldi	r25, 0x01	; 1
     7a8:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     7ac:	80 e0       	ldi	r24, 0x00	; 0
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	a6 e1       	ldi	r26, 0x16	; 22
     7b2:	b3 e4       	ldi	r27, 0x43	; 67
     7b4:	8d 87       	std	Y+13, r24	; 0x0d
     7b6:	9e 87       	std	Y+14, r25	; 0x0e
     7b8:	af 87       	std	Y+15, r26	; 0x0f
     7ba:	b8 8b       	std	Y+16, r27	; 0x10

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     7bc:	8e 01       	movw	r16, r28
     7be:	05 56       	subi	r16, 0x65	; 101
     7c0:	1d 4f       	sbci	r17, 0xFD	; 253
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	4a e7       	ldi	r20, 0x7A	; 122
     7c8:	55 e4       	ldi	r21, 0x45	; 69
     7ca:	6d 85       	ldd	r22, Y+13	; 0x0d
     7cc:	7e 85       	ldd	r23, Y+14	; 0x0e
     7ce:	8f 85       	ldd	r24, Y+15	; 0x0f
     7d0:	98 89       	ldd	r25, Y+16	; 0x10
     7d2:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
     7d6:	dc 01       	movw	r26, r24
     7d8:	cb 01       	movw	r24, r22
     7da:	f8 01       	movw	r30, r16
     7dc:	80 83       	st	Z, r24
     7de:	91 83       	std	Z+1, r25	; 0x01
     7e0:	a2 83       	std	Z+2, r26	; 0x02
     7e2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     7e4:	ce 01       	movw	r24, r28
     7e6:	85 56       	subi	r24, 0x65	; 101
     7e8:	9d 4f       	sbci	r25, 0xFD	; 253
     7ea:	20 e0       	ldi	r18, 0x00	; 0
     7ec:	30 e0       	ldi	r19, 0x00	; 0
     7ee:	40 e8       	ldi	r20, 0x80	; 128
     7f0:	5f e3       	ldi	r21, 0x3F	; 63
     7f2:	fc 01       	movw	r30, r24
     7f4:	60 81       	ld	r22, Z
     7f6:	71 81       	ldd	r23, Z+1	; 0x01
     7f8:	82 81       	ldd	r24, Z+2	; 0x02
     7fa:	93 81       	ldd	r25, Z+3	; 0x03
     7fc:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
     800:	88 23       	and	r24, r24
     802:	4c f4       	brge	.+18     	; 0x816 <main+0xfa>
		__ticks = 1;
     804:	ce 01       	movw	r24, r28
     806:	81 56       	subi	r24, 0x61	; 97
     808:	9d 4f       	sbci	r25, 0xFD	; 253
     80a:	21 e0       	ldi	r18, 0x01	; 1
     80c:	30 e0       	ldi	r19, 0x00	; 0
     80e:	fc 01       	movw	r30, r24
     810:	31 83       	std	Z+1, r19	; 0x01
     812:	20 83       	st	Z, r18
     814:	69 c0       	rjmp	.+210    	; 0x8e8 <main+0x1cc>
	else if (__tmp > 65535)
     816:	ce 01       	movw	r24, r28
     818:	85 56       	subi	r24, 0x65	; 101
     81a:	9d 4f       	sbci	r25, 0xFD	; 253
     81c:	20 e0       	ldi	r18, 0x00	; 0
     81e:	3f ef       	ldi	r19, 0xFF	; 255
     820:	4f e7       	ldi	r20, 0x7F	; 127
     822:	57 e4       	ldi	r21, 0x47	; 71
     824:	fc 01       	movw	r30, r24
     826:	60 81       	ld	r22, Z
     828:	71 81       	ldd	r23, Z+1	; 0x01
     82a:	82 81       	ldd	r24, Z+2	; 0x02
     82c:	93 81       	ldd	r25, Z+3	; 0x03
     82e:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
     832:	18 16       	cp	r1, r24
     834:	0c f0       	brlt	.+2      	; 0x838 <main+0x11c>
     836:	46 c0       	rjmp	.+140    	; 0x8c4 <main+0x1a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     838:	20 e0       	ldi	r18, 0x00	; 0
     83a:	30 e0       	ldi	r19, 0x00	; 0
     83c:	40 e2       	ldi	r20, 0x20	; 32
     83e:	51 e4       	ldi	r21, 0x41	; 65
     840:	6d 85       	ldd	r22, Y+13	; 0x0d
     842:	7e 85       	ldd	r23, Y+14	; 0x0e
     844:	8f 85       	ldd	r24, Y+15	; 0x0f
     846:	98 89       	ldd	r25, Y+16	; 0x10
     848:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
     84c:	dc 01       	movw	r26, r24
     84e:	cb 01       	movw	r24, r22
     850:	8e 01       	movw	r16, r28
     852:	01 56       	subi	r16, 0x61	; 97
     854:	1d 4f       	sbci	r17, 0xFD	; 253
     856:	bc 01       	movw	r22, r24
     858:	cd 01       	movw	r24, r26
     85a:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
     85e:	dc 01       	movw	r26, r24
     860:	cb 01       	movw	r24, r22
     862:	f8 01       	movw	r30, r16
     864:	91 83       	std	Z+1, r25	; 0x01
     866:	80 83       	st	Z, r24
     868:	24 c0       	rjmp	.+72     	; 0x8b2 <main+0x196>
     86a:	ce 01       	movw	r24, r28
     86c:	8f 55       	subi	r24, 0x5F	; 95
     86e:	9d 4f       	sbci	r25, 0xFD	; 253
     870:	20 e9       	ldi	r18, 0x90	; 144
     872:	31 e0       	ldi	r19, 0x01	; 1
     874:	fc 01       	movw	r30, r24
     876:	31 83       	std	Z+1, r19	; 0x01
     878:	20 83       	st	Z, r18
     87a:	ce 01       	movw	r24, r28
     87c:	8f 55       	subi	r24, 0x5F	; 95
     87e:	9d 4f       	sbci	r25, 0xFD	; 253
     880:	fc 01       	movw	r30, r24
     882:	80 81       	ld	r24, Z
     884:	91 81       	ldd	r25, Z+1	; 0x01
     886:	01 97       	sbiw	r24, 0x01	; 1
     888:	f1 f7       	brne	.-4      	; 0x886 <main+0x16a>
     88a:	9e 01       	movw	r18, r28
     88c:	2f 55       	subi	r18, 0x5F	; 95
     88e:	3d 4f       	sbci	r19, 0xFD	; 253
     890:	f9 01       	movw	r30, r18
     892:	91 83       	std	Z+1, r25	; 0x01
     894:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     896:	ce 01       	movw	r24, r28
     898:	81 56       	subi	r24, 0x61	; 97
     89a:	9d 4f       	sbci	r25, 0xFD	; 253
     89c:	9e 01       	movw	r18, r28
     89e:	21 56       	subi	r18, 0x61	; 97
     8a0:	3d 4f       	sbci	r19, 0xFD	; 253
     8a2:	f9 01       	movw	r30, r18
     8a4:	20 81       	ld	r18, Z
     8a6:	31 81       	ldd	r19, Z+1	; 0x01
     8a8:	21 50       	subi	r18, 0x01	; 1
     8aa:	31 09       	sbc	r19, r1
     8ac:	fc 01       	movw	r30, r24
     8ae:	31 83       	std	Z+1, r19	; 0x01
     8b0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8b2:	ce 01       	movw	r24, r28
     8b4:	81 56       	subi	r24, 0x61	; 97
     8b6:	9d 4f       	sbci	r25, 0xFD	; 253
     8b8:	fc 01       	movw	r30, r24
     8ba:	80 81       	ld	r24, Z
     8bc:	91 81       	ldd	r25, Z+1	; 0x01
     8be:	89 2b       	or	r24, r25
     8c0:	a1 f6       	brne	.-88     	; 0x86a <main+0x14e>
     8c2:	2c c0       	rjmp	.+88     	; 0x91c <main+0x200>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     8c4:	8e 01       	movw	r16, r28
     8c6:	01 56       	subi	r16, 0x61	; 97
     8c8:	1d 4f       	sbci	r17, 0xFD	; 253
     8ca:	ce 01       	movw	r24, r28
     8cc:	85 56       	subi	r24, 0x65	; 101
     8ce:	9d 4f       	sbci	r25, 0xFD	; 253
     8d0:	fc 01       	movw	r30, r24
     8d2:	60 81       	ld	r22, Z
     8d4:	71 81       	ldd	r23, Z+1	; 0x01
     8d6:	82 81       	ldd	r24, Z+2	; 0x02
     8d8:	93 81       	ldd	r25, Z+3	; 0x03
     8da:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
     8de:	dc 01       	movw	r26, r24
     8e0:	cb 01       	movw	r24, r22
     8e2:	f8 01       	movw	r30, r16
     8e4:	91 83       	std	Z+1, r25	; 0x01
     8e6:	80 83       	st	Z, r24
     8e8:	ce 01       	movw	r24, r28
     8ea:	8d 55       	subi	r24, 0x5D	; 93
     8ec:	9d 4f       	sbci	r25, 0xFD	; 253
     8ee:	9e 01       	movw	r18, r28
     8f0:	21 56       	subi	r18, 0x61	; 97
     8f2:	3d 4f       	sbci	r19, 0xFD	; 253
     8f4:	f9 01       	movw	r30, r18
     8f6:	20 81       	ld	r18, Z
     8f8:	31 81       	ldd	r19, Z+1	; 0x01
     8fa:	fc 01       	movw	r30, r24
     8fc:	31 83       	std	Z+1, r19	; 0x01
     8fe:	20 83       	st	Z, r18
     900:	ce 01       	movw	r24, r28
     902:	8d 55       	subi	r24, 0x5D	; 93
     904:	9d 4f       	sbci	r25, 0xFD	; 253
     906:	fc 01       	movw	r30, r24
     908:	80 81       	ld	r24, Z
     90a:	91 81       	ldd	r25, Z+1	; 0x01
     90c:	01 97       	sbiw	r24, 0x01	; 1
     90e:	f1 f7       	brne	.-4      	; 0x90c <main+0x1f0>
     910:	9e 01       	movw	r18, r28
     912:	2d 55       	subi	r18, 0x5D	; 93
     914:	3d 4f       	sbci	r19, 0xFD	; 253
     916:	f9 01       	movw	r30, r18
     918:	91 83       	std	Z+1, r25	; 0x01
     91a:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F660 T100\n");
     91c:	83 e9       	ldi	r24, 0x93	; 147
     91e:	91 e0       	ldi	r25, 0x01	; 1
     920:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     924:	80 e0       	ldi	r24, 0x00	; 0
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a6 e9       	ldi	r26, 0x96	; 150
     92a:	b3 e4       	ldi	r27, 0x43	; 67
     92c:	89 8b       	std	Y+17, r24	; 0x11
     92e:	9a 8b       	std	Y+18, r25	; 0x12
     930:	ab 8b       	std	Y+19, r26	; 0x13
     932:	bc 8b       	std	Y+20, r27	; 0x14

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     934:	8e 01       	movw	r16, r28
     936:	0f 56       	subi	r16, 0x6F	; 111
     938:	1d 4f       	sbci	r17, 0xFD	; 253
     93a:	20 e0       	ldi	r18, 0x00	; 0
     93c:	30 e0       	ldi	r19, 0x00	; 0
     93e:	4a e7       	ldi	r20, 0x7A	; 122
     940:	55 e4       	ldi	r21, 0x45	; 69
     942:	69 89       	ldd	r22, Y+17	; 0x11
     944:	7a 89       	ldd	r23, Y+18	; 0x12
     946:	8b 89       	ldd	r24, Y+19	; 0x13
     948:	9c 89       	ldd	r25, Y+20	; 0x14
     94a:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
     94e:	dc 01       	movw	r26, r24
     950:	cb 01       	movw	r24, r22
     952:	f8 01       	movw	r30, r16
     954:	80 83       	st	Z, r24
     956:	91 83       	std	Z+1, r25	; 0x01
     958:	a2 83       	std	Z+2, r26	; 0x02
     95a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     95c:	ce 01       	movw	r24, r28
     95e:	8f 56       	subi	r24, 0x6F	; 111
     960:	9d 4f       	sbci	r25, 0xFD	; 253
     962:	20 e0       	ldi	r18, 0x00	; 0
     964:	30 e0       	ldi	r19, 0x00	; 0
     966:	40 e8       	ldi	r20, 0x80	; 128
     968:	5f e3       	ldi	r21, 0x3F	; 63
     96a:	fc 01       	movw	r30, r24
     96c:	60 81       	ld	r22, Z
     96e:	71 81       	ldd	r23, Z+1	; 0x01
     970:	82 81       	ldd	r24, Z+2	; 0x02
     972:	93 81       	ldd	r25, Z+3	; 0x03
     974:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
     978:	88 23       	and	r24, r24
     97a:	4c f4       	brge	.+18     	; 0x98e <main+0x272>
		__ticks = 1;
     97c:	ce 01       	movw	r24, r28
     97e:	8b 56       	subi	r24, 0x6B	; 107
     980:	9d 4f       	sbci	r25, 0xFD	; 253
     982:	21 e0       	ldi	r18, 0x01	; 1
     984:	30 e0       	ldi	r19, 0x00	; 0
     986:	fc 01       	movw	r30, r24
     988:	31 83       	std	Z+1, r19	; 0x01
     98a:	20 83       	st	Z, r18
     98c:	69 c0       	rjmp	.+210    	; 0xa60 <main+0x344>
	else if (__tmp > 65535)
     98e:	ce 01       	movw	r24, r28
     990:	8f 56       	subi	r24, 0x6F	; 111
     992:	9d 4f       	sbci	r25, 0xFD	; 253
     994:	20 e0       	ldi	r18, 0x00	; 0
     996:	3f ef       	ldi	r19, 0xFF	; 255
     998:	4f e7       	ldi	r20, 0x7F	; 127
     99a:	57 e4       	ldi	r21, 0x47	; 71
     99c:	fc 01       	movw	r30, r24
     99e:	60 81       	ld	r22, Z
     9a0:	71 81       	ldd	r23, Z+1	; 0x01
     9a2:	82 81       	ldd	r24, Z+2	; 0x02
     9a4:	93 81       	ldd	r25, Z+3	; 0x03
     9a6:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
     9aa:	18 16       	cp	r1, r24
     9ac:	0c f0       	brlt	.+2      	; 0x9b0 <main+0x294>
     9ae:	46 c0       	rjmp	.+140    	; 0xa3c <main+0x320>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     9b0:	20 e0       	ldi	r18, 0x00	; 0
     9b2:	30 e0       	ldi	r19, 0x00	; 0
     9b4:	40 e2       	ldi	r20, 0x20	; 32
     9b6:	51 e4       	ldi	r21, 0x41	; 65
     9b8:	69 89       	ldd	r22, Y+17	; 0x11
     9ba:	7a 89       	ldd	r23, Y+18	; 0x12
     9bc:	8b 89       	ldd	r24, Y+19	; 0x13
     9be:	9c 89       	ldd	r25, Y+20	; 0x14
     9c0:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
     9c4:	dc 01       	movw	r26, r24
     9c6:	cb 01       	movw	r24, r22
     9c8:	8e 01       	movw	r16, r28
     9ca:	0b 56       	subi	r16, 0x6B	; 107
     9cc:	1d 4f       	sbci	r17, 0xFD	; 253
     9ce:	bc 01       	movw	r22, r24
     9d0:	cd 01       	movw	r24, r26
     9d2:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
     9d6:	dc 01       	movw	r26, r24
     9d8:	cb 01       	movw	r24, r22
     9da:	f8 01       	movw	r30, r16
     9dc:	91 83       	std	Z+1, r25	; 0x01
     9de:	80 83       	st	Z, r24
     9e0:	24 c0       	rjmp	.+72     	; 0xa2a <main+0x30e>
     9e2:	ce 01       	movw	r24, r28
     9e4:	89 56       	subi	r24, 0x69	; 105
     9e6:	9d 4f       	sbci	r25, 0xFD	; 253
     9e8:	20 e9       	ldi	r18, 0x90	; 144
     9ea:	31 e0       	ldi	r19, 0x01	; 1
     9ec:	fc 01       	movw	r30, r24
     9ee:	31 83       	std	Z+1, r19	; 0x01
     9f0:	20 83       	st	Z, r18
     9f2:	ce 01       	movw	r24, r28
     9f4:	89 56       	subi	r24, 0x69	; 105
     9f6:	9d 4f       	sbci	r25, 0xFD	; 253
     9f8:	fc 01       	movw	r30, r24
     9fa:	80 81       	ld	r24, Z
     9fc:	91 81       	ldd	r25, Z+1	; 0x01
     9fe:	01 97       	sbiw	r24, 0x01	; 1
     a00:	f1 f7       	brne	.-4      	; 0x9fe <main+0x2e2>
     a02:	9e 01       	movw	r18, r28
     a04:	29 56       	subi	r18, 0x69	; 105
     a06:	3d 4f       	sbci	r19, 0xFD	; 253
     a08:	f9 01       	movw	r30, r18
     a0a:	91 83       	std	Z+1, r25	; 0x01
     a0c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a0e:	ce 01       	movw	r24, r28
     a10:	8b 56       	subi	r24, 0x6B	; 107
     a12:	9d 4f       	sbci	r25, 0xFD	; 253
     a14:	9e 01       	movw	r18, r28
     a16:	2b 56       	subi	r18, 0x6B	; 107
     a18:	3d 4f       	sbci	r19, 0xFD	; 253
     a1a:	f9 01       	movw	r30, r18
     a1c:	20 81       	ld	r18, Z
     a1e:	31 81       	ldd	r19, Z+1	; 0x01
     a20:	21 50       	subi	r18, 0x01	; 1
     a22:	31 09       	sbc	r19, r1
     a24:	fc 01       	movw	r30, r24
     a26:	31 83       	std	Z+1, r19	; 0x01
     a28:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a2a:	ce 01       	movw	r24, r28
     a2c:	8b 56       	subi	r24, 0x6B	; 107
     a2e:	9d 4f       	sbci	r25, 0xFD	; 253
     a30:	fc 01       	movw	r30, r24
     a32:	80 81       	ld	r24, Z
     a34:	91 81       	ldd	r25, Z+1	; 0x01
     a36:	89 2b       	or	r24, r25
     a38:	a1 f6       	brne	.-88     	; 0x9e2 <main+0x2c6>
     a3a:	2c c0       	rjmp	.+88     	; 0xa94 <main+0x378>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a3c:	8e 01       	movw	r16, r28
     a3e:	0b 56       	subi	r16, 0x6B	; 107
     a40:	1d 4f       	sbci	r17, 0xFD	; 253
     a42:	ce 01       	movw	r24, r28
     a44:	8f 56       	subi	r24, 0x6F	; 111
     a46:	9d 4f       	sbci	r25, 0xFD	; 253
     a48:	fc 01       	movw	r30, r24
     a4a:	60 81       	ld	r22, Z
     a4c:	71 81       	ldd	r23, Z+1	; 0x01
     a4e:	82 81       	ldd	r24, Z+2	; 0x02
     a50:	93 81       	ldd	r25, Z+3	; 0x03
     a52:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
     a56:	dc 01       	movw	r26, r24
     a58:	cb 01       	movw	r24, r22
     a5a:	f8 01       	movw	r30, r16
     a5c:	91 83       	std	Z+1, r25	; 0x01
     a5e:	80 83       	st	Z, r24
     a60:	ce 01       	movw	r24, r28
     a62:	87 56       	subi	r24, 0x67	; 103
     a64:	9d 4f       	sbci	r25, 0xFD	; 253
     a66:	9e 01       	movw	r18, r28
     a68:	2b 56       	subi	r18, 0x6B	; 107
     a6a:	3d 4f       	sbci	r19, 0xFD	; 253
     a6c:	f9 01       	movw	r30, r18
     a6e:	20 81       	ld	r18, Z
     a70:	31 81       	ldd	r19, Z+1	; 0x01
     a72:	fc 01       	movw	r30, r24
     a74:	31 83       	std	Z+1, r19	; 0x01
     a76:	20 83       	st	Z, r18
     a78:	ce 01       	movw	r24, r28
     a7a:	87 56       	subi	r24, 0x67	; 103
     a7c:	9d 4f       	sbci	r25, 0xFD	; 253
     a7e:	fc 01       	movw	r30, r24
     a80:	80 81       	ld	r24, Z
     a82:	91 81       	ldd	r25, Z+1	; 0x01
     a84:	01 97       	sbiw	r24, 0x01	; 1
     a86:	f1 f7       	brne	.-4      	; 0xa84 <main+0x368>
     a88:	9e 01       	movw	r18, r28
     a8a:	27 56       	subi	r18, 0x67	; 103
     a8c:	3d 4f       	sbci	r19, 0xFD	; 253
     a8e:	f9 01       	movw	r30, r18
     a90:	91 83       	std	Z+1, r25	; 0x01
     a92:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F660 T100\n");
     a94:	83 e9       	ldi	r24, 0x93	; 147
     a96:	91 e0       	ldi	r25, 0x01	; 1
     a98:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     a9c:	80 e0       	ldi	r24, 0x00	; 0
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	a6 e9       	ldi	r26, 0x96	; 150
     aa2:	b3 e4       	ldi	r27, 0x43	; 67
     aa4:	8d 8b       	std	Y+21, r24	; 0x15
     aa6:	9e 8b       	std	Y+22, r25	; 0x16
     aa8:	af 8b       	std	Y+23, r26	; 0x17
     aaa:	b8 8f       	std	Y+24, r27	; 0x18

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     aac:	8e 01       	movw	r16, r28
     aae:	09 57       	subi	r16, 0x79	; 121
     ab0:	1d 4f       	sbci	r17, 0xFD	; 253
     ab2:	20 e0       	ldi	r18, 0x00	; 0
     ab4:	30 e0       	ldi	r19, 0x00	; 0
     ab6:	4a e7       	ldi	r20, 0x7A	; 122
     ab8:	55 e4       	ldi	r21, 0x45	; 69
     aba:	6d 89       	ldd	r22, Y+21	; 0x15
     abc:	7e 89       	ldd	r23, Y+22	; 0x16
     abe:	8f 89       	ldd	r24, Y+23	; 0x17
     ac0:	98 8d       	ldd	r25, Y+24	; 0x18
     ac2:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
     ac6:	dc 01       	movw	r26, r24
     ac8:	cb 01       	movw	r24, r22
     aca:	f8 01       	movw	r30, r16
     acc:	80 83       	st	Z, r24
     ace:	91 83       	std	Z+1, r25	; 0x01
     ad0:	a2 83       	std	Z+2, r26	; 0x02
     ad2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     ad4:	ce 01       	movw	r24, r28
     ad6:	89 57       	subi	r24, 0x79	; 121
     ad8:	9d 4f       	sbci	r25, 0xFD	; 253
     ada:	20 e0       	ldi	r18, 0x00	; 0
     adc:	30 e0       	ldi	r19, 0x00	; 0
     ade:	40 e8       	ldi	r20, 0x80	; 128
     ae0:	5f e3       	ldi	r21, 0x3F	; 63
     ae2:	fc 01       	movw	r30, r24
     ae4:	60 81       	ld	r22, Z
     ae6:	71 81       	ldd	r23, Z+1	; 0x01
     ae8:	82 81       	ldd	r24, Z+2	; 0x02
     aea:	93 81       	ldd	r25, Z+3	; 0x03
     aec:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
     af0:	88 23       	and	r24, r24
     af2:	4c f4       	brge	.+18     	; 0xb06 <main+0x3ea>
		__ticks = 1;
     af4:	ce 01       	movw	r24, r28
     af6:	85 57       	subi	r24, 0x75	; 117
     af8:	9d 4f       	sbci	r25, 0xFD	; 253
     afa:	21 e0       	ldi	r18, 0x01	; 1
     afc:	30 e0       	ldi	r19, 0x00	; 0
     afe:	fc 01       	movw	r30, r24
     b00:	31 83       	std	Z+1, r19	; 0x01
     b02:	20 83       	st	Z, r18
     b04:	69 c0       	rjmp	.+210    	; 0xbd8 <main+0x4bc>
	else if (__tmp > 65535)
     b06:	ce 01       	movw	r24, r28
     b08:	89 57       	subi	r24, 0x79	; 121
     b0a:	9d 4f       	sbci	r25, 0xFD	; 253
     b0c:	20 e0       	ldi	r18, 0x00	; 0
     b0e:	3f ef       	ldi	r19, 0xFF	; 255
     b10:	4f e7       	ldi	r20, 0x7F	; 127
     b12:	57 e4       	ldi	r21, 0x47	; 71
     b14:	fc 01       	movw	r30, r24
     b16:	60 81       	ld	r22, Z
     b18:	71 81       	ldd	r23, Z+1	; 0x01
     b1a:	82 81       	ldd	r24, Z+2	; 0x02
     b1c:	93 81       	ldd	r25, Z+3	; 0x03
     b1e:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
     b22:	18 16       	cp	r1, r24
     b24:	0c f0       	brlt	.+2      	; 0xb28 <main+0x40c>
     b26:	46 c0       	rjmp	.+140    	; 0xbb4 <main+0x498>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b28:	20 e0       	ldi	r18, 0x00	; 0
     b2a:	30 e0       	ldi	r19, 0x00	; 0
     b2c:	40 e2       	ldi	r20, 0x20	; 32
     b2e:	51 e4       	ldi	r21, 0x41	; 65
     b30:	6d 89       	ldd	r22, Y+21	; 0x15
     b32:	7e 89       	ldd	r23, Y+22	; 0x16
     b34:	8f 89       	ldd	r24, Y+23	; 0x17
     b36:	98 8d       	ldd	r25, Y+24	; 0x18
     b38:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
     b3c:	dc 01       	movw	r26, r24
     b3e:	cb 01       	movw	r24, r22
     b40:	8e 01       	movw	r16, r28
     b42:	05 57       	subi	r16, 0x75	; 117
     b44:	1d 4f       	sbci	r17, 0xFD	; 253
     b46:	bc 01       	movw	r22, r24
     b48:	cd 01       	movw	r24, r26
     b4a:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
     b4e:	dc 01       	movw	r26, r24
     b50:	cb 01       	movw	r24, r22
     b52:	f8 01       	movw	r30, r16
     b54:	91 83       	std	Z+1, r25	; 0x01
     b56:	80 83       	st	Z, r24
     b58:	24 c0       	rjmp	.+72     	; 0xba2 <main+0x486>
     b5a:	ce 01       	movw	r24, r28
     b5c:	83 57       	subi	r24, 0x73	; 115
     b5e:	9d 4f       	sbci	r25, 0xFD	; 253
     b60:	20 e9       	ldi	r18, 0x90	; 144
     b62:	31 e0       	ldi	r19, 0x01	; 1
     b64:	fc 01       	movw	r30, r24
     b66:	31 83       	std	Z+1, r19	; 0x01
     b68:	20 83       	st	Z, r18
     b6a:	ce 01       	movw	r24, r28
     b6c:	83 57       	subi	r24, 0x73	; 115
     b6e:	9d 4f       	sbci	r25, 0xFD	; 253
     b70:	fc 01       	movw	r30, r24
     b72:	80 81       	ld	r24, Z
     b74:	91 81       	ldd	r25, Z+1	; 0x01
     b76:	01 97       	sbiw	r24, 0x01	; 1
     b78:	f1 f7       	brne	.-4      	; 0xb76 <main+0x45a>
     b7a:	9e 01       	movw	r18, r28
     b7c:	23 57       	subi	r18, 0x73	; 115
     b7e:	3d 4f       	sbci	r19, 0xFD	; 253
     b80:	f9 01       	movw	r30, r18
     b82:	91 83       	std	Z+1, r25	; 0x01
     b84:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b86:	ce 01       	movw	r24, r28
     b88:	85 57       	subi	r24, 0x75	; 117
     b8a:	9d 4f       	sbci	r25, 0xFD	; 253
     b8c:	9e 01       	movw	r18, r28
     b8e:	25 57       	subi	r18, 0x75	; 117
     b90:	3d 4f       	sbci	r19, 0xFD	; 253
     b92:	f9 01       	movw	r30, r18
     b94:	20 81       	ld	r18, Z
     b96:	31 81       	ldd	r19, Z+1	; 0x01
     b98:	21 50       	subi	r18, 0x01	; 1
     b9a:	31 09       	sbc	r19, r1
     b9c:	fc 01       	movw	r30, r24
     b9e:	31 83       	std	Z+1, r19	; 0x01
     ba0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ba2:	ce 01       	movw	r24, r28
     ba4:	85 57       	subi	r24, 0x75	; 117
     ba6:	9d 4f       	sbci	r25, 0xFD	; 253
     ba8:	fc 01       	movw	r30, r24
     baa:	80 81       	ld	r24, Z
     bac:	91 81       	ldd	r25, Z+1	; 0x01
     bae:	89 2b       	or	r24, r25
     bb0:	a1 f6       	brne	.-88     	; 0xb5a <main+0x43e>
     bb2:	2c c0       	rjmp	.+88     	; 0xc0c <main+0x4f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     bb4:	8e 01       	movw	r16, r28
     bb6:	05 57       	subi	r16, 0x75	; 117
     bb8:	1d 4f       	sbci	r17, 0xFD	; 253
     bba:	ce 01       	movw	r24, r28
     bbc:	89 57       	subi	r24, 0x79	; 121
     bbe:	9d 4f       	sbci	r25, 0xFD	; 253
     bc0:	fc 01       	movw	r30, r24
     bc2:	60 81       	ld	r22, Z
     bc4:	71 81       	ldd	r23, Z+1	; 0x01
     bc6:	82 81       	ldd	r24, Z+2	; 0x02
     bc8:	93 81       	ldd	r25, Z+3	; 0x03
     bca:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
     bce:	dc 01       	movw	r26, r24
     bd0:	cb 01       	movw	r24, r22
     bd2:	f8 01       	movw	r30, r16
     bd4:	91 83       	std	Z+1, r25	; 0x01
     bd6:	80 83       	st	Z, r24
     bd8:	ce 01       	movw	r24, r28
     bda:	81 57       	subi	r24, 0x71	; 113
     bdc:	9d 4f       	sbci	r25, 0xFD	; 253
     bde:	9e 01       	movw	r18, r28
     be0:	25 57       	subi	r18, 0x75	; 117
     be2:	3d 4f       	sbci	r19, 0xFD	; 253
     be4:	f9 01       	movw	r30, r18
     be6:	20 81       	ld	r18, Z
     be8:	31 81       	ldd	r19, Z+1	; 0x01
     bea:	fc 01       	movw	r30, r24
     bec:	31 83       	std	Z+1, r19	; 0x01
     bee:	20 83       	st	Z, r18
     bf0:	ce 01       	movw	r24, r28
     bf2:	81 57       	subi	r24, 0x71	; 113
     bf4:	9d 4f       	sbci	r25, 0xFD	; 253
     bf6:	fc 01       	movw	r30, r24
     bf8:	80 81       	ld	r24, Z
     bfa:	91 81       	ldd	r25, Z+1	; 0x01
     bfc:	01 97       	sbiw	r24, 0x01	; 1
     bfe:	f1 f7       	brne	.-4      	; 0xbfc <main+0x4e0>
     c00:	9e 01       	movw	r18, r28
     c02:	21 57       	subi	r18, 0x71	; 113
     c04:	3d 4f       	sbci	r19, 0xFD	; 253
     c06:	f9 01       	movw	r30, r18
     c08:	91 83       	std	Z+1, r25	; 0x01
     c0a:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F510 T100\n");
     c0c:	84 ea       	ldi	r24, 0xA4	; 164
     c0e:	91 e0       	ldi	r25, 0x01	; 1
     c10:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     c14:	80 e0       	ldi	r24, 0x00	; 0
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	a8 ec       	ldi	r26, 0xC8	; 200
     c1a:	b2 e4       	ldi	r27, 0x42	; 66
     c1c:	89 8f       	std	Y+25, r24	; 0x19
     c1e:	9a 8f       	std	Y+26, r25	; 0x1a
     c20:	ab 8f       	std	Y+27, r26	; 0x1b
     c22:	bc 8f       	std	Y+28, r27	; 0x1c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     c24:	8e 01       	movw	r16, r28
     c26:	03 58       	subi	r16, 0x83	; 131
     c28:	1d 4f       	sbci	r17, 0xFD	; 253
     c2a:	20 e0       	ldi	r18, 0x00	; 0
     c2c:	30 e0       	ldi	r19, 0x00	; 0
     c2e:	4a e7       	ldi	r20, 0x7A	; 122
     c30:	55 e4       	ldi	r21, 0x45	; 69
     c32:	69 8d       	ldd	r22, Y+25	; 0x19
     c34:	7a 8d       	ldd	r23, Y+26	; 0x1a
     c36:	8b 8d       	ldd	r24, Y+27	; 0x1b
     c38:	9c 8d       	ldd	r25, Y+28	; 0x1c
     c3a:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
     c3e:	dc 01       	movw	r26, r24
     c40:	cb 01       	movw	r24, r22
     c42:	f8 01       	movw	r30, r16
     c44:	80 83       	st	Z, r24
     c46:	91 83       	std	Z+1, r25	; 0x01
     c48:	a2 83       	std	Z+2, r26	; 0x02
     c4a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     c4c:	ce 01       	movw	r24, r28
     c4e:	83 58       	subi	r24, 0x83	; 131
     c50:	9d 4f       	sbci	r25, 0xFD	; 253
     c52:	20 e0       	ldi	r18, 0x00	; 0
     c54:	30 e0       	ldi	r19, 0x00	; 0
     c56:	40 e8       	ldi	r20, 0x80	; 128
     c58:	5f e3       	ldi	r21, 0x3F	; 63
     c5a:	fc 01       	movw	r30, r24
     c5c:	60 81       	ld	r22, Z
     c5e:	71 81       	ldd	r23, Z+1	; 0x01
     c60:	82 81       	ldd	r24, Z+2	; 0x02
     c62:	93 81       	ldd	r25, Z+3	; 0x03
     c64:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
     c68:	88 23       	and	r24, r24
     c6a:	4c f4       	brge	.+18     	; 0xc7e <main+0x562>
		__ticks = 1;
     c6c:	ce 01       	movw	r24, r28
     c6e:	8f 57       	subi	r24, 0x7F	; 127
     c70:	9d 4f       	sbci	r25, 0xFD	; 253
     c72:	21 e0       	ldi	r18, 0x01	; 1
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	fc 01       	movw	r30, r24
     c78:	31 83       	std	Z+1, r19	; 0x01
     c7a:	20 83       	st	Z, r18
     c7c:	69 c0       	rjmp	.+210    	; 0xd50 <main+0x634>
	else if (__tmp > 65535)
     c7e:	ce 01       	movw	r24, r28
     c80:	83 58       	subi	r24, 0x83	; 131
     c82:	9d 4f       	sbci	r25, 0xFD	; 253
     c84:	20 e0       	ldi	r18, 0x00	; 0
     c86:	3f ef       	ldi	r19, 0xFF	; 255
     c88:	4f e7       	ldi	r20, 0x7F	; 127
     c8a:	57 e4       	ldi	r21, 0x47	; 71
     c8c:	fc 01       	movw	r30, r24
     c8e:	60 81       	ld	r22, Z
     c90:	71 81       	ldd	r23, Z+1	; 0x01
     c92:	82 81       	ldd	r24, Z+2	; 0x02
     c94:	93 81       	ldd	r25, Z+3	; 0x03
     c96:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
     c9a:	18 16       	cp	r1, r24
     c9c:	0c f0       	brlt	.+2      	; 0xca0 <main+0x584>
     c9e:	46 c0       	rjmp	.+140    	; 0xd2c <main+0x610>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ca0:	20 e0       	ldi	r18, 0x00	; 0
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	40 e2       	ldi	r20, 0x20	; 32
     ca6:	51 e4       	ldi	r21, 0x41	; 65
     ca8:	69 8d       	ldd	r22, Y+25	; 0x19
     caa:	7a 8d       	ldd	r23, Y+26	; 0x1a
     cac:	8b 8d       	ldd	r24, Y+27	; 0x1b
     cae:	9c 8d       	ldd	r25, Y+28	; 0x1c
     cb0:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
     cb4:	dc 01       	movw	r26, r24
     cb6:	cb 01       	movw	r24, r22
     cb8:	8e 01       	movw	r16, r28
     cba:	0f 57       	subi	r16, 0x7F	; 127
     cbc:	1d 4f       	sbci	r17, 0xFD	; 253
     cbe:	bc 01       	movw	r22, r24
     cc0:	cd 01       	movw	r24, r26
     cc2:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
     cc6:	dc 01       	movw	r26, r24
     cc8:	cb 01       	movw	r24, r22
     cca:	f8 01       	movw	r30, r16
     ccc:	91 83       	std	Z+1, r25	; 0x01
     cce:	80 83       	st	Z, r24
     cd0:	24 c0       	rjmp	.+72     	; 0xd1a <main+0x5fe>
     cd2:	ce 01       	movw	r24, r28
     cd4:	8d 57       	subi	r24, 0x7D	; 125
     cd6:	9d 4f       	sbci	r25, 0xFD	; 253
     cd8:	20 e9       	ldi	r18, 0x90	; 144
     cda:	31 e0       	ldi	r19, 0x01	; 1
     cdc:	fc 01       	movw	r30, r24
     cde:	31 83       	std	Z+1, r19	; 0x01
     ce0:	20 83       	st	Z, r18
     ce2:	ce 01       	movw	r24, r28
     ce4:	8d 57       	subi	r24, 0x7D	; 125
     ce6:	9d 4f       	sbci	r25, 0xFD	; 253
     ce8:	fc 01       	movw	r30, r24
     cea:	80 81       	ld	r24, Z
     cec:	91 81       	ldd	r25, Z+1	; 0x01
     cee:	01 97       	sbiw	r24, 0x01	; 1
     cf0:	f1 f7       	brne	.-4      	; 0xcee <main+0x5d2>
     cf2:	9e 01       	movw	r18, r28
     cf4:	2d 57       	subi	r18, 0x7D	; 125
     cf6:	3d 4f       	sbci	r19, 0xFD	; 253
     cf8:	f9 01       	movw	r30, r18
     cfa:	91 83       	std	Z+1, r25	; 0x01
     cfc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     cfe:	ce 01       	movw	r24, r28
     d00:	8f 57       	subi	r24, 0x7F	; 127
     d02:	9d 4f       	sbci	r25, 0xFD	; 253
     d04:	9e 01       	movw	r18, r28
     d06:	2f 57       	subi	r18, 0x7F	; 127
     d08:	3d 4f       	sbci	r19, 0xFD	; 253
     d0a:	f9 01       	movw	r30, r18
     d0c:	20 81       	ld	r18, Z
     d0e:	31 81       	ldd	r19, Z+1	; 0x01
     d10:	21 50       	subi	r18, 0x01	; 1
     d12:	31 09       	sbc	r19, r1
     d14:	fc 01       	movw	r30, r24
     d16:	31 83       	std	Z+1, r19	; 0x01
     d18:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d1a:	ce 01       	movw	r24, r28
     d1c:	8f 57       	subi	r24, 0x7F	; 127
     d1e:	9d 4f       	sbci	r25, 0xFD	; 253
     d20:	fc 01       	movw	r30, r24
     d22:	80 81       	ld	r24, Z
     d24:	91 81       	ldd	r25, Z+1	; 0x01
     d26:	89 2b       	or	r24, r25
     d28:	a1 f6       	brne	.-88     	; 0xcd2 <main+0x5b6>
     d2a:	2c c0       	rjmp	.+88     	; 0xd84 <main+0x668>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d2c:	8e 01       	movw	r16, r28
     d2e:	0f 57       	subi	r16, 0x7F	; 127
     d30:	1d 4f       	sbci	r17, 0xFD	; 253
     d32:	ce 01       	movw	r24, r28
     d34:	83 58       	subi	r24, 0x83	; 131
     d36:	9d 4f       	sbci	r25, 0xFD	; 253
     d38:	fc 01       	movw	r30, r24
     d3a:	60 81       	ld	r22, Z
     d3c:	71 81       	ldd	r23, Z+1	; 0x01
     d3e:	82 81       	ldd	r24, Z+2	; 0x02
     d40:	93 81       	ldd	r25, Z+3	; 0x03
     d42:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
     d46:	dc 01       	movw	r26, r24
     d48:	cb 01       	movw	r24, r22
     d4a:	f8 01       	movw	r30, r16
     d4c:	91 83       	std	Z+1, r25	; 0x01
     d4e:	80 83       	st	Z, r24
     d50:	ce 01       	movw	r24, r28
     d52:	8b 57       	subi	r24, 0x7B	; 123
     d54:	9d 4f       	sbci	r25, 0xFD	; 253
     d56:	9e 01       	movw	r18, r28
     d58:	2f 57       	subi	r18, 0x7F	; 127
     d5a:	3d 4f       	sbci	r19, 0xFD	; 253
     d5c:	f9 01       	movw	r30, r18
     d5e:	20 81       	ld	r18, Z
     d60:	31 81       	ldd	r19, Z+1	; 0x01
     d62:	fc 01       	movw	r30, r24
     d64:	31 83       	std	Z+1, r19	; 0x01
     d66:	20 83       	st	Z, r18
     d68:	ce 01       	movw	r24, r28
     d6a:	8b 57       	subi	r24, 0x7B	; 123
     d6c:	9d 4f       	sbci	r25, 0xFD	; 253
     d6e:	fc 01       	movw	r30, r24
     d70:	80 81       	ld	r24, Z
     d72:	91 81       	ldd	r25, Z+1	; 0x01
     d74:	01 97       	sbiw	r24, 0x01	; 1
     d76:	f1 f7       	brne	.-4      	; 0xd74 <main+0x658>
     d78:	9e 01       	movw	r18, r28
     d7a:	2b 57       	subi	r18, 0x7B	; 123
     d7c:	3d 4f       	sbci	r19, 0xFD	; 253
     d7e:	f9 01       	movw	r30, r18
     d80:	91 83       	std	Z+1, r25	; 0x01
     d82:	80 83       	st	Z, r24
			_delay_ms(100);
			to_uARM("M2210 F660 T100\n");
     d84:	83 e9       	ldi	r24, 0x93	; 147
     d86:	91 e0       	ldi	r25, 0x01	; 1
     d88:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     d8c:	80 e0       	ldi	r24, 0x00	; 0
     d8e:	90 e0       	ldi	r25, 0x00	; 0
     d90:	a6 e9       	ldi	r26, 0x96	; 150
     d92:	b3 e4       	ldi	r27, 0x43	; 67
     d94:	8d 8f       	std	Y+29, r24	; 0x1d
     d96:	9e 8f       	std	Y+30, r25	; 0x1e
     d98:	af 8f       	std	Y+31, r26	; 0x1f
     d9a:	b8 a3       	std	Y+32, r27	; 0x20

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     d9c:	8e 01       	movw	r16, r28
     d9e:	0d 58       	subi	r16, 0x8D	; 141
     da0:	1d 4f       	sbci	r17, 0xFD	; 253
     da2:	20 e0       	ldi	r18, 0x00	; 0
     da4:	30 e0       	ldi	r19, 0x00	; 0
     da6:	4a e7       	ldi	r20, 0x7A	; 122
     da8:	55 e4       	ldi	r21, 0x45	; 69
     daa:	6d 8d       	ldd	r22, Y+29	; 0x1d
     dac:	7e 8d       	ldd	r23, Y+30	; 0x1e
     dae:	8f 8d       	ldd	r24, Y+31	; 0x1f
     db0:	98 a1       	ldd	r25, Y+32	; 0x20
     db2:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
     db6:	dc 01       	movw	r26, r24
     db8:	cb 01       	movw	r24, r22
     dba:	f8 01       	movw	r30, r16
     dbc:	80 83       	st	Z, r24
     dbe:	91 83       	std	Z+1, r25	; 0x01
     dc0:	a2 83       	std	Z+2, r26	; 0x02
     dc2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     dc4:	ce 01       	movw	r24, r28
     dc6:	8d 58       	subi	r24, 0x8D	; 141
     dc8:	9d 4f       	sbci	r25, 0xFD	; 253
     dca:	20 e0       	ldi	r18, 0x00	; 0
     dcc:	30 e0       	ldi	r19, 0x00	; 0
     dce:	40 e8       	ldi	r20, 0x80	; 128
     dd0:	5f e3       	ldi	r21, 0x3F	; 63
     dd2:	fc 01       	movw	r30, r24
     dd4:	60 81       	ld	r22, Z
     dd6:	71 81       	ldd	r23, Z+1	; 0x01
     dd8:	82 81       	ldd	r24, Z+2	; 0x02
     dda:	93 81       	ldd	r25, Z+3	; 0x03
     ddc:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
     de0:	88 23       	and	r24, r24
     de2:	4c f4       	brge	.+18     	; 0xdf6 <main+0x6da>
		__ticks = 1;
     de4:	ce 01       	movw	r24, r28
     de6:	89 58       	subi	r24, 0x89	; 137
     de8:	9d 4f       	sbci	r25, 0xFD	; 253
     dea:	21 e0       	ldi	r18, 0x01	; 1
     dec:	30 e0       	ldi	r19, 0x00	; 0
     dee:	fc 01       	movw	r30, r24
     df0:	31 83       	std	Z+1, r19	; 0x01
     df2:	20 83       	st	Z, r18
     df4:	69 c0       	rjmp	.+210    	; 0xec8 <main+0x7ac>
	else if (__tmp > 65535)
     df6:	ce 01       	movw	r24, r28
     df8:	8d 58       	subi	r24, 0x8D	; 141
     dfa:	9d 4f       	sbci	r25, 0xFD	; 253
     dfc:	20 e0       	ldi	r18, 0x00	; 0
     dfe:	3f ef       	ldi	r19, 0xFF	; 255
     e00:	4f e7       	ldi	r20, 0x7F	; 127
     e02:	57 e4       	ldi	r21, 0x47	; 71
     e04:	fc 01       	movw	r30, r24
     e06:	60 81       	ld	r22, Z
     e08:	71 81       	ldd	r23, Z+1	; 0x01
     e0a:	82 81       	ldd	r24, Z+2	; 0x02
     e0c:	93 81       	ldd	r25, Z+3	; 0x03
     e0e:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
     e12:	18 16       	cp	r1, r24
     e14:	0c f0       	brlt	.+2      	; 0xe18 <main+0x6fc>
     e16:	46 c0       	rjmp	.+140    	; 0xea4 <main+0x788>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e18:	20 e0       	ldi	r18, 0x00	; 0
     e1a:	30 e0       	ldi	r19, 0x00	; 0
     e1c:	40 e2       	ldi	r20, 0x20	; 32
     e1e:	51 e4       	ldi	r21, 0x41	; 65
     e20:	6d 8d       	ldd	r22, Y+29	; 0x1d
     e22:	7e 8d       	ldd	r23, Y+30	; 0x1e
     e24:	8f 8d       	ldd	r24, Y+31	; 0x1f
     e26:	98 a1       	ldd	r25, Y+32	; 0x20
     e28:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
     e2c:	dc 01       	movw	r26, r24
     e2e:	cb 01       	movw	r24, r22
     e30:	8e 01       	movw	r16, r28
     e32:	09 58       	subi	r16, 0x89	; 137
     e34:	1d 4f       	sbci	r17, 0xFD	; 253
     e36:	bc 01       	movw	r22, r24
     e38:	cd 01       	movw	r24, r26
     e3a:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
     e3e:	dc 01       	movw	r26, r24
     e40:	cb 01       	movw	r24, r22
     e42:	f8 01       	movw	r30, r16
     e44:	91 83       	std	Z+1, r25	; 0x01
     e46:	80 83       	st	Z, r24
     e48:	24 c0       	rjmp	.+72     	; 0xe92 <main+0x776>
     e4a:	ce 01       	movw	r24, r28
     e4c:	87 58       	subi	r24, 0x87	; 135
     e4e:	9d 4f       	sbci	r25, 0xFD	; 253
     e50:	20 e9       	ldi	r18, 0x90	; 144
     e52:	31 e0       	ldi	r19, 0x01	; 1
     e54:	fc 01       	movw	r30, r24
     e56:	31 83       	std	Z+1, r19	; 0x01
     e58:	20 83       	st	Z, r18
     e5a:	ce 01       	movw	r24, r28
     e5c:	87 58       	subi	r24, 0x87	; 135
     e5e:	9d 4f       	sbci	r25, 0xFD	; 253
     e60:	fc 01       	movw	r30, r24
     e62:	80 81       	ld	r24, Z
     e64:	91 81       	ldd	r25, Z+1	; 0x01
     e66:	01 97       	sbiw	r24, 0x01	; 1
     e68:	f1 f7       	brne	.-4      	; 0xe66 <main+0x74a>
     e6a:	9e 01       	movw	r18, r28
     e6c:	27 58       	subi	r18, 0x87	; 135
     e6e:	3d 4f       	sbci	r19, 0xFD	; 253
     e70:	f9 01       	movw	r30, r18
     e72:	91 83       	std	Z+1, r25	; 0x01
     e74:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e76:	ce 01       	movw	r24, r28
     e78:	89 58       	subi	r24, 0x89	; 137
     e7a:	9d 4f       	sbci	r25, 0xFD	; 253
     e7c:	9e 01       	movw	r18, r28
     e7e:	29 58       	subi	r18, 0x89	; 137
     e80:	3d 4f       	sbci	r19, 0xFD	; 253
     e82:	f9 01       	movw	r30, r18
     e84:	20 81       	ld	r18, Z
     e86:	31 81       	ldd	r19, Z+1	; 0x01
     e88:	21 50       	subi	r18, 0x01	; 1
     e8a:	31 09       	sbc	r19, r1
     e8c:	fc 01       	movw	r30, r24
     e8e:	31 83       	std	Z+1, r19	; 0x01
     e90:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e92:	ce 01       	movw	r24, r28
     e94:	89 58       	subi	r24, 0x89	; 137
     e96:	9d 4f       	sbci	r25, 0xFD	; 253
     e98:	fc 01       	movw	r30, r24
     e9a:	80 81       	ld	r24, Z
     e9c:	91 81       	ldd	r25, Z+1	; 0x01
     e9e:	89 2b       	or	r24, r25
     ea0:	a1 f6       	brne	.-88     	; 0xe4a <main+0x72e>
     ea2:	2c c0       	rjmp	.+88     	; 0xefc <main+0x7e0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ea4:	8e 01       	movw	r16, r28
     ea6:	09 58       	subi	r16, 0x89	; 137
     ea8:	1d 4f       	sbci	r17, 0xFD	; 253
     eaa:	ce 01       	movw	r24, r28
     eac:	8d 58       	subi	r24, 0x8D	; 141
     eae:	9d 4f       	sbci	r25, 0xFD	; 253
     eb0:	fc 01       	movw	r30, r24
     eb2:	60 81       	ld	r22, Z
     eb4:	71 81       	ldd	r23, Z+1	; 0x01
     eb6:	82 81       	ldd	r24, Z+2	; 0x02
     eb8:	93 81       	ldd	r25, Z+3	; 0x03
     eba:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
     ebe:	dc 01       	movw	r26, r24
     ec0:	cb 01       	movw	r24, r22
     ec2:	f8 01       	movw	r30, r16
     ec4:	91 83       	std	Z+1, r25	; 0x01
     ec6:	80 83       	st	Z, r24
     ec8:	ce 01       	movw	r24, r28
     eca:	85 58       	subi	r24, 0x85	; 133
     ecc:	9d 4f       	sbci	r25, 0xFD	; 253
     ece:	9e 01       	movw	r18, r28
     ed0:	29 58       	subi	r18, 0x89	; 137
     ed2:	3d 4f       	sbci	r19, 0xFD	; 253
     ed4:	f9 01       	movw	r30, r18
     ed6:	20 81       	ld	r18, Z
     ed8:	31 81       	ldd	r19, Z+1	; 0x01
     eda:	fc 01       	movw	r30, r24
     edc:	31 83       	std	Z+1, r19	; 0x01
     ede:	20 83       	st	Z, r18
     ee0:	ce 01       	movw	r24, r28
     ee2:	85 58       	subi	r24, 0x85	; 133
     ee4:	9d 4f       	sbci	r25, 0xFD	; 253
     ee6:	fc 01       	movw	r30, r24
     ee8:	80 81       	ld	r24, Z
     eea:	91 81       	ldd	r25, Z+1	; 0x01
     eec:	01 97       	sbiw	r24, 0x01	; 1
     eee:	f1 f7       	brne	.-4      	; 0xeec <main+0x7d0>
     ef0:	9e 01       	movw	r18, r28
     ef2:	25 58       	subi	r18, 0x85	; 133
     ef4:	3d 4f       	sbci	r19, 0xFD	; 253
     ef6:	f9 01       	movw	r30, r18
     ef8:	91 83       	std	Z+1, r25	; 0x01
     efa:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F770 T100\n");
     efc:	85 eb       	ldi	r24, 0xB5	; 181
     efe:	91 e0       	ldi	r25, 0x01	; 1
     f00:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     f04:	80 e0       	ldi	r24, 0x00	; 0
     f06:	90 e8       	ldi	r25, 0x80	; 128
     f08:	a9 e0       	ldi	r26, 0x09	; 9
     f0a:	b4 e4       	ldi	r27, 0x44	; 68
     f0c:	89 a3       	std	Y+33, r24	; 0x21
     f0e:	9a a3       	std	Y+34, r25	; 0x22
     f10:	ab a3       	std	Y+35, r26	; 0x23
     f12:	bc a3       	std	Y+36, r27	; 0x24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     f14:	8e 01       	movw	r16, r28
     f16:	07 59       	subi	r16, 0x97	; 151
     f18:	1d 4f       	sbci	r17, 0xFD	; 253
     f1a:	20 e0       	ldi	r18, 0x00	; 0
     f1c:	30 e0       	ldi	r19, 0x00	; 0
     f1e:	4a e7       	ldi	r20, 0x7A	; 122
     f20:	55 e4       	ldi	r21, 0x45	; 69
     f22:	69 a1       	ldd	r22, Y+33	; 0x21
     f24:	7a a1       	ldd	r23, Y+34	; 0x22
     f26:	8b a1       	ldd	r24, Y+35	; 0x23
     f28:	9c a1       	ldd	r25, Y+36	; 0x24
     f2a:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
     f2e:	dc 01       	movw	r26, r24
     f30:	cb 01       	movw	r24, r22
     f32:	f8 01       	movw	r30, r16
     f34:	80 83       	st	Z, r24
     f36:	91 83       	std	Z+1, r25	; 0x01
     f38:	a2 83       	std	Z+2, r26	; 0x02
     f3a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     f3c:	ce 01       	movw	r24, r28
     f3e:	87 59       	subi	r24, 0x97	; 151
     f40:	9d 4f       	sbci	r25, 0xFD	; 253
     f42:	20 e0       	ldi	r18, 0x00	; 0
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	40 e8       	ldi	r20, 0x80	; 128
     f48:	5f e3       	ldi	r21, 0x3F	; 63
     f4a:	fc 01       	movw	r30, r24
     f4c:	60 81       	ld	r22, Z
     f4e:	71 81       	ldd	r23, Z+1	; 0x01
     f50:	82 81       	ldd	r24, Z+2	; 0x02
     f52:	93 81       	ldd	r25, Z+3	; 0x03
     f54:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
     f58:	88 23       	and	r24, r24
     f5a:	4c f4       	brge	.+18     	; 0xf6e <main+0x852>
		__ticks = 1;
     f5c:	ce 01       	movw	r24, r28
     f5e:	83 59       	subi	r24, 0x93	; 147
     f60:	9d 4f       	sbci	r25, 0xFD	; 253
     f62:	21 e0       	ldi	r18, 0x01	; 1
     f64:	30 e0       	ldi	r19, 0x00	; 0
     f66:	fc 01       	movw	r30, r24
     f68:	31 83       	std	Z+1, r19	; 0x01
     f6a:	20 83       	st	Z, r18
     f6c:	69 c0       	rjmp	.+210    	; 0x1040 <main+0x924>
	else if (__tmp > 65535)
     f6e:	ce 01       	movw	r24, r28
     f70:	87 59       	subi	r24, 0x97	; 151
     f72:	9d 4f       	sbci	r25, 0xFD	; 253
     f74:	20 e0       	ldi	r18, 0x00	; 0
     f76:	3f ef       	ldi	r19, 0xFF	; 255
     f78:	4f e7       	ldi	r20, 0x7F	; 127
     f7a:	57 e4       	ldi	r21, 0x47	; 71
     f7c:	fc 01       	movw	r30, r24
     f7e:	60 81       	ld	r22, Z
     f80:	71 81       	ldd	r23, Z+1	; 0x01
     f82:	82 81       	ldd	r24, Z+2	; 0x02
     f84:	93 81       	ldd	r25, Z+3	; 0x03
     f86:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
     f8a:	18 16       	cp	r1, r24
     f8c:	0c f0       	brlt	.+2      	; 0xf90 <main+0x874>
     f8e:	46 c0       	rjmp	.+140    	; 0x101c <main+0x900>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f90:	20 e0       	ldi	r18, 0x00	; 0
     f92:	30 e0       	ldi	r19, 0x00	; 0
     f94:	40 e2       	ldi	r20, 0x20	; 32
     f96:	51 e4       	ldi	r21, 0x41	; 65
     f98:	69 a1       	ldd	r22, Y+33	; 0x21
     f9a:	7a a1       	ldd	r23, Y+34	; 0x22
     f9c:	8b a1       	ldd	r24, Y+35	; 0x23
     f9e:	9c a1       	ldd	r25, Y+36	; 0x24
     fa0:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
     fa4:	dc 01       	movw	r26, r24
     fa6:	cb 01       	movw	r24, r22
     fa8:	8e 01       	movw	r16, r28
     faa:	03 59       	subi	r16, 0x93	; 147
     fac:	1d 4f       	sbci	r17, 0xFD	; 253
     fae:	bc 01       	movw	r22, r24
     fb0:	cd 01       	movw	r24, r26
     fb2:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
     fb6:	dc 01       	movw	r26, r24
     fb8:	cb 01       	movw	r24, r22
     fba:	f8 01       	movw	r30, r16
     fbc:	91 83       	std	Z+1, r25	; 0x01
     fbe:	80 83       	st	Z, r24
     fc0:	24 c0       	rjmp	.+72     	; 0x100a <main+0x8ee>
     fc2:	ce 01       	movw	r24, r28
     fc4:	81 59       	subi	r24, 0x91	; 145
     fc6:	9d 4f       	sbci	r25, 0xFD	; 253
     fc8:	20 e9       	ldi	r18, 0x90	; 144
     fca:	31 e0       	ldi	r19, 0x01	; 1
     fcc:	fc 01       	movw	r30, r24
     fce:	31 83       	std	Z+1, r19	; 0x01
     fd0:	20 83       	st	Z, r18
     fd2:	ce 01       	movw	r24, r28
     fd4:	81 59       	subi	r24, 0x91	; 145
     fd6:	9d 4f       	sbci	r25, 0xFD	; 253
     fd8:	fc 01       	movw	r30, r24
     fda:	80 81       	ld	r24, Z
     fdc:	91 81       	ldd	r25, Z+1	; 0x01
     fde:	01 97       	sbiw	r24, 0x01	; 1
     fe0:	f1 f7       	brne	.-4      	; 0xfde <main+0x8c2>
     fe2:	9e 01       	movw	r18, r28
     fe4:	21 59       	subi	r18, 0x91	; 145
     fe6:	3d 4f       	sbci	r19, 0xFD	; 253
     fe8:	f9 01       	movw	r30, r18
     fea:	91 83       	std	Z+1, r25	; 0x01
     fec:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fee:	ce 01       	movw	r24, r28
     ff0:	83 59       	subi	r24, 0x93	; 147
     ff2:	9d 4f       	sbci	r25, 0xFD	; 253
     ff4:	9e 01       	movw	r18, r28
     ff6:	23 59       	subi	r18, 0x93	; 147
     ff8:	3d 4f       	sbci	r19, 0xFD	; 253
     ffa:	f9 01       	movw	r30, r18
     ffc:	20 81       	ld	r18, Z
     ffe:	31 81       	ldd	r19, Z+1	; 0x01
    1000:	21 50       	subi	r18, 0x01	; 1
    1002:	31 09       	sbc	r19, r1
    1004:	fc 01       	movw	r30, r24
    1006:	31 83       	std	Z+1, r19	; 0x01
    1008:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    100a:	ce 01       	movw	r24, r28
    100c:	83 59       	subi	r24, 0x93	; 147
    100e:	9d 4f       	sbci	r25, 0xFD	; 253
    1010:	fc 01       	movw	r30, r24
    1012:	80 81       	ld	r24, Z
    1014:	91 81       	ldd	r25, Z+1	; 0x01
    1016:	89 2b       	or	r24, r25
    1018:	a1 f6       	brne	.-88     	; 0xfc2 <main+0x8a6>
    101a:	2c c0       	rjmp	.+88     	; 0x1074 <main+0x958>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    101c:	8e 01       	movw	r16, r28
    101e:	03 59       	subi	r16, 0x93	; 147
    1020:	1d 4f       	sbci	r17, 0xFD	; 253
    1022:	ce 01       	movw	r24, r28
    1024:	87 59       	subi	r24, 0x97	; 151
    1026:	9d 4f       	sbci	r25, 0xFD	; 253
    1028:	fc 01       	movw	r30, r24
    102a:	60 81       	ld	r22, Z
    102c:	71 81       	ldd	r23, Z+1	; 0x01
    102e:	82 81       	ldd	r24, Z+2	; 0x02
    1030:	93 81       	ldd	r25, Z+3	; 0x03
    1032:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    1036:	dc 01       	movw	r26, r24
    1038:	cb 01       	movw	r24, r22
    103a:	f8 01       	movw	r30, r16
    103c:	91 83       	std	Z+1, r25	; 0x01
    103e:	80 83       	st	Z, r24
    1040:	ce 01       	movw	r24, r28
    1042:	8f 58       	subi	r24, 0x8F	; 143
    1044:	9d 4f       	sbci	r25, 0xFD	; 253
    1046:	9e 01       	movw	r18, r28
    1048:	23 59       	subi	r18, 0x93	; 147
    104a:	3d 4f       	sbci	r19, 0xFD	; 253
    104c:	f9 01       	movw	r30, r18
    104e:	20 81       	ld	r18, Z
    1050:	31 81       	ldd	r19, Z+1	; 0x01
    1052:	fc 01       	movw	r30, r24
    1054:	31 83       	std	Z+1, r19	; 0x01
    1056:	20 83       	st	Z, r18
    1058:	ce 01       	movw	r24, r28
    105a:	8f 58       	subi	r24, 0x8F	; 143
    105c:	9d 4f       	sbci	r25, 0xFD	; 253
    105e:	fc 01       	movw	r30, r24
    1060:	80 81       	ld	r24, Z
    1062:	91 81       	ldd	r25, Z+1	; 0x01
    1064:	01 97       	sbiw	r24, 0x01	; 1
    1066:	f1 f7       	brne	.-4      	; 0x1064 <main+0x948>
    1068:	9e 01       	movw	r18, r28
    106a:	2f 58       	subi	r18, 0x8F	; 143
    106c:	3d 4f       	sbci	r19, 0xFD	; 253
    106e:	f9 01       	movw	r30, r18
    1070:	91 83       	std	Z+1, r25	; 0x01
    1072:	80 83       	st	Z, r24
			_delay_ms(550);
			to_uARM("M2210 F380 T100\n");
    1074:	86 ec       	ldi	r24, 0xC6	; 198
    1076:	91 e0       	ldi	r25, 0x01	; 1
    1078:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    107c:	80 e0       	ldi	r24, 0x00	; 0
    107e:	90 ec       	ldi	r25, 0xC0	; 192
    1080:	af e0       	ldi	r26, 0x0F	; 15
    1082:	b4 e4       	ldi	r27, 0x44	; 68
    1084:	8d a3       	std	Y+37, r24	; 0x25
    1086:	9e a3       	std	Y+38, r25	; 0x26
    1088:	af a3       	std	Y+39, r26	; 0x27
    108a:	b8 a7       	std	Y+40, r27	; 0x28

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    108c:	8e 01       	movw	r16, r28
    108e:	01 5a       	subi	r16, 0xA1	; 161
    1090:	1d 4f       	sbci	r17, 0xFD	; 253
    1092:	20 e0       	ldi	r18, 0x00	; 0
    1094:	30 e0       	ldi	r19, 0x00	; 0
    1096:	4a e7       	ldi	r20, 0x7A	; 122
    1098:	55 e4       	ldi	r21, 0x45	; 69
    109a:	6d a1       	ldd	r22, Y+37	; 0x25
    109c:	7e a1       	ldd	r23, Y+38	; 0x26
    109e:	8f a1       	ldd	r24, Y+39	; 0x27
    10a0:	98 a5       	ldd	r25, Y+40	; 0x28
    10a2:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    10a6:	dc 01       	movw	r26, r24
    10a8:	cb 01       	movw	r24, r22
    10aa:	f8 01       	movw	r30, r16
    10ac:	80 83       	st	Z, r24
    10ae:	91 83       	std	Z+1, r25	; 0x01
    10b0:	a2 83       	std	Z+2, r26	; 0x02
    10b2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    10b4:	ce 01       	movw	r24, r28
    10b6:	81 5a       	subi	r24, 0xA1	; 161
    10b8:	9d 4f       	sbci	r25, 0xFD	; 253
    10ba:	20 e0       	ldi	r18, 0x00	; 0
    10bc:	30 e0       	ldi	r19, 0x00	; 0
    10be:	40 e8       	ldi	r20, 0x80	; 128
    10c0:	5f e3       	ldi	r21, 0x3F	; 63
    10c2:	fc 01       	movw	r30, r24
    10c4:	60 81       	ld	r22, Z
    10c6:	71 81       	ldd	r23, Z+1	; 0x01
    10c8:	82 81       	ldd	r24, Z+2	; 0x02
    10ca:	93 81       	ldd	r25, Z+3	; 0x03
    10cc:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    10d0:	88 23       	and	r24, r24
    10d2:	4c f4       	brge	.+18     	; 0x10e6 <main+0x9ca>
		__ticks = 1;
    10d4:	ce 01       	movw	r24, r28
    10d6:	8d 59       	subi	r24, 0x9D	; 157
    10d8:	9d 4f       	sbci	r25, 0xFD	; 253
    10da:	21 e0       	ldi	r18, 0x01	; 1
    10dc:	30 e0       	ldi	r19, 0x00	; 0
    10de:	fc 01       	movw	r30, r24
    10e0:	31 83       	std	Z+1, r19	; 0x01
    10e2:	20 83       	st	Z, r18
    10e4:	69 c0       	rjmp	.+210    	; 0x11b8 <__stack+0xb9>
	else if (__tmp > 65535)
    10e6:	ce 01       	movw	r24, r28
    10e8:	81 5a       	subi	r24, 0xA1	; 161
    10ea:	9d 4f       	sbci	r25, 0xFD	; 253
    10ec:	20 e0       	ldi	r18, 0x00	; 0
    10ee:	3f ef       	ldi	r19, 0xFF	; 255
    10f0:	4f e7       	ldi	r20, 0x7F	; 127
    10f2:	57 e4       	ldi	r21, 0x47	; 71
    10f4:	fc 01       	movw	r30, r24
    10f6:	60 81       	ld	r22, Z
    10f8:	71 81       	ldd	r23, Z+1	; 0x01
    10fa:	82 81       	ldd	r24, Z+2	; 0x02
    10fc:	93 81       	ldd	r25, Z+3	; 0x03
    10fe:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    1102:	18 16       	cp	r1, r24
    1104:	0c f0       	brlt	.+2      	; 0x1108 <__stack+0x9>
    1106:	46 c0       	rjmp	.+140    	; 0x1194 <__stack+0x95>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1108:	20 e0       	ldi	r18, 0x00	; 0
    110a:	30 e0       	ldi	r19, 0x00	; 0
    110c:	40 e2       	ldi	r20, 0x20	; 32
    110e:	51 e4       	ldi	r21, 0x41	; 65
    1110:	6d a1       	ldd	r22, Y+37	; 0x25
    1112:	7e a1       	ldd	r23, Y+38	; 0x26
    1114:	8f a1       	ldd	r24, Y+39	; 0x27
    1116:	98 a5       	ldd	r25, Y+40	; 0x28
    1118:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    111c:	dc 01       	movw	r26, r24
    111e:	cb 01       	movw	r24, r22
    1120:	8e 01       	movw	r16, r28
    1122:	0d 59       	subi	r16, 0x9D	; 157
    1124:	1d 4f       	sbci	r17, 0xFD	; 253
    1126:	bc 01       	movw	r22, r24
    1128:	cd 01       	movw	r24, r26
    112a:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    112e:	dc 01       	movw	r26, r24
    1130:	cb 01       	movw	r24, r22
    1132:	f8 01       	movw	r30, r16
    1134:	91 83       	std	Z+1, r25	; 0x01
    1136:	80 83       	st	Z, r24
    1138:	24 c0       	rjmp	.+72     	; 0x1182 <__stack+0x83>
    113a:	ce 01       	movw	r24, r28
    113c:	8b 59       	subi	r24, 0x9B	; 155
    113e:	9d 4f       	sbci	r25, 0xFD	; 253
    1140:	20 e9       	ldi	r18, 0x90	; 144
    1142:	31 e0       	ldi	r19, 0x01	; 1
    1144:	fc 01       	movw	r30, r24
    1146:	31 83       	std	Z+1, r19	; 0x01
    1148:	20 83       	st	Z, r18
    114a:	ce 01       	movw	r24, r28
    114c:	8b 59       	subi	r24, 0x9B	; 155
    114e:	9d 4f       	sbci	r25, 0xFD	; 253
    1150:	fc 01       	movw	r30, r24
    1152:	80 81       	ld	r24, Z
    1154:	91 81       	ldd	r25, Z+1	; 0x01
    1156:	01 97       	sbiw	r24, 0x01	; 1
    1158:	f1 f7       	brne	.-4      	; 0x1156 <__stack+0x57>
    115a:	9e 01       	movw	r18, r28
    115c:	2b 59       	subi	r18, 0x9B	; 155
    115e:	3d 4f       	sbci	r19, 0xFD	; 253
    1160:	f9 01       	movw	r30, r18
    1162:	91 83       	std	Z+1, r25	; 0x01
    1164:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1166:	ce 01       	movw	r24, r28
    1168:	8d 59       	subi	r24, 0x9D	; 157
    116a:	9d 4f       	sbci	r25, 0xFD	; 253
    116c:	9e 01       	movw	r18, r28
    116e:	2d 59       	subi	r18, 0x9D	; 157
    1170:	3d 4f       	sbci	r19, 0xFD	; 253
    1172:	f9 01       	movw	r30, r18
    1174:	20 81       	ld	r18, Z
    1176:	31 81       	ldd	r19, Z+1	; 0x01
    1178:	21 50       	subi	r18, 0x01	; 1
    117a:	31 09       	sbc	r19, r1
    117c:	fc 01       	movw	r30, r24
    117e:	31 83       	std	Z+1, r19	; 0x01
    1180:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1182:	ce 01       	movw	r24, r28
    1184:	8d 59       	subi	r24, 0x9D	; 157
    1186:	9d 4f       	sbci	r25, 0xFD	; 253
    1188:	fc 01       	movw	r30, r24
    118a:	80 81       	ld	r24, Z
    118c:	91 81       	ldd	r25, Z+1	; 0x01
    118e:	89 2b       	or	r24, r25
    1190:	a1 f6       	brne	.-88     	; 0x113a <__stack+0x3b>
    1192:	2c c0       	rjmp	.+88     	; 0x11ec <__stack+0xed>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1194:	8e 01       	movw	r16, r28
    1196:	0d 59       	subi	r16, 0x9D	; 157
    1198:	1d 4f       	sbci	r17, 0xFD	; 253
    119a:	ce 01       	movw	r24, r28
    119c:	81 5a       	subi	r24, 0xA1	; 161
    119e:	9d 4f       	sbci	r25, 0xFD	; 253
    11a0:	fc 01       	movw	r30, r24
    11a2:	60 81       	ld	r22, Z
    11a4:	71 81       	ldd	r23, Z+1	; 0x01
    11a6:	82 81       	ldd	r24, Z+2	; 0x02
    11a8:	93 81       	ldd	r25, Z+3	; 0x03
    11aa:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    11ae:	dc 01       	movw	r26, r24
    11b0:	cb 01       	movw	r24, r22
    11b2:	f8 01       	movw	r30, r16
    11b4:	91 83       	std	Z+1, r25	; 0x01
    11b6:	80 83       	st	Z, r24
    11b8:	ce 01       	movw	r24, r28
    11ba:	89 59       	subi	r24, 0x99	; 153
    11bc:	9d 4f       	sbci	r25, 0xFD	; 253
    11be:	9e 01       	movw	r18, r28
    11c0:	2d 59       	subi	r18, 0x9D	; 157
    11c2:	3d 4f       	sbci	r19, 0xFD	; 253
    11c4:	f9 01       	movw	r30, r18
    11c6:	20 81       	ld	r18, Z
    11c8:	31 81       	ldd	r19, Z+1	; 0x01
    11ca:	fc 01       	movw	r30, r24
    11cc:	31 83       	std	Z+1, r19	; 0x01
    11ce:	20 83       	st	Z, r18
    11d0:	ce 01       	movw	r24, r28
    11d2:	89 59       	subi	r24, 0x99	; 153
    11d4:	9d 4f       	sbci	r25, 0xFD	; 253
    11d6:	fc 01       	movw	r30, r24
    11d8:	80 81       	ld	r24, Z
    11da:	91 81       	ldd	r25, Z+1	; 0x01
    11dc:	01 97       	sbiw	r24, 0x01	; 1
    11de:	f1 f7       	brne	.-4      	; 0x11dc <__stack+0xdd>
    11e0:	9e 01       	movw	r18, r28
    11e2:	29 59       	subi	r18, 0x99	; 153
    11e4:	3d 4f       	sbci	r19, 0xFD	; 253
    11e6:	f9 01       	movw	r30, r18
    11e8:	91 83       	std	Z+1, r25	; 0x01
    11ea:	80 83       	st	Z, r24
			_delay_ms(575);
			
			
			to_uARM("M2210 F510 T100\n");
    11ec:	84 ea       	ldi	r24, 0xA4	; 164
    11ee:	91 e0       	ldi	r25, 0x01	; 1
    11f0:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    11f4:	80 e0       	ldi	r24, 0x00	; 0
    11f6:	90 e0       	ldi	r25, 0x00	; 0
    11f8:	a1 ee       	ldi	r26, 0xE1	; 225
    11fa:	b3 e4       	ldi	r27, 0x43	; 67
    11fc:	89 a7       	std	Y+41, r24	; 0x29
    11fe:	9a a7       	std	Y+42, r25	; 0x2a
    1200:	ab a7       	std	Y+43, r26	; 0x2b
    1202:	bc a7       	std	Y+44, r27	; 0x2c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1204:	8e 01       	movw	r16, r28
    1206:	0b 5a       	subi	r16, 0xAB	; 171
    1208:	1d 4f       	sbci	r17, 0xFD	; 253
    120a:	20 e0       	ldi	r18, 0x00	; 0
    120c:	30 e0       	ldi	r19, 0x00	; 0
    120e:	4a e7       	ldi	r20, 0x7A	; 122
    1210:	55 e4       	ldi	r21, 0x45	; 69
    1212:	69 a5       	ldd	r22, Y+41	; 0x29
    1214:	7a a5       	ldd	r23, Y+42	; 0x2a
    1216:	8b a5       	ldd	r24, Y+43	; 0x2b
    1218:	9c a5       	ldd	r25, Y+44	; 0x2c
    121a:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    121e:	dc 01       	movw	r26, r24
    1220:	cb 01       	movw	r24, r22
    1222:	f8 01       	movw	r30, r16
    1224:	80 83       	st	Z, r24
    1226:	91 83       	std	Z+1, r25	; 0x01
    1228:	a2 83       	std	Z+2, r26	; 0x02
    122a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    122c:	ce 01       	movw	r24, r28
    122e:	8b 5a       	subi	r24, 0xAB	; 171
    1230:	9d 4f       	sbci	r25, 0xFD	; 253
    1232:	20 e0       	ldi	r18, 0x00	; 0
    1234:	30 e0       	ldi	r19, 0x00	; 0
    1236:	40 e8       	ldi	r20, 0x80	; 128
    1238:	5f e3       	ldi	r21, 0x3F	; 63
    123a:	fc 01       	movw	r30, r24
    123c:	60 81       	ld	r22, Z
    123e:	71 81       	ldd	r23, Z+1	; 0x01
    1240:	82 81       	ldd	r24, Z+2	; 0x02
    1242:	93 81       	ldd	r25, Z+3	; 0x03
    1244:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    1248:	88 23       	and	r24, r24
    124a:	4c f4       	brge	.+18     	; 0x125e <__stack+0x15f>
		__ticks = 1;
    124c:	ce 01       	movw	r24, r28
    124e:	87 5a       	subi	r24, 0xA7	; 167
    1250:	9d 4f       	sbci	r25, 0xFD	; 253
    1252:	21 e0       	ldi	r18, 0x01	; 1
    1254:	30 e0       	ldi	r19, 0x00	; 0
    1256:	fc 01       	movw	r30, r24
    1258:	31 83       	std	Z+1, r19	; 0x01
    125a:	20 83       	st	Z, r18
    125c:	69 c0       	rjmp	.+210    	; 0x1330 <__stack+0x231>
	else if (__tmp > 65535)
    125e:	ce 01       	movw	r24, r28
    1260:	8b 5a       	subi	r24, 0xAB	; 171
    1262:	9d 4f       	sbci	r25, 0xFD	; 253
    1264:	20 e0       	ldi	r18, 0x00	; 0
    1266:	3f ef       	ldi	r19, 0xFF	; 255
    1268:	4f e7       	ldi	r20, 0x7F	; 127
    126a:	57 e4       	ldi	r21, 0x47	; 71
    126c:	fc 01       	movw	r30, r24
    126e:	60 81       	ld	r22, Z
    1270:	71 81       	ldd	r23, Z+1	; 0x01
    1272:	82 81       	ldd	r24, Z+2	; 0x02
    1274:	93 81       	ldd	r25, Z+3	; 0x03
    1276:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    127a:	18 16       	cp	r1, r24
    127c:	0c f0       	brlt	.+2      	; 0x1280 <__stack+0x181>
    127e:	46 c0       	rjmp	.+140    	; 0x130c <__stack+0x20d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1280:	20 e0       	ldi	r18, 0x00	; 0
    1282:	30 e0       	ldi	r19, 0x00	; 0
    1284:	40 e2       	ldi	r20, 0x20	; 32
    1286:	51 e4       	ldi	r21, 0x41	; 65
    1288:	69 a5       	ldd	r22, Y+41	; 0x29
    128a:	7a a5       	ldd	r23, Y+42	; 0x2a
    128c:	8b a5       	ldd	r24, Y+43	; 0x2b
    128e:	9c a5       	ldd	r25, Y+44	; 0x2c
    1290:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    1294:	dc 01       	movw	r26, r24
    1296:	cb 01       	movw	r24, r22
    1298:	8e 01       	movw	r16, r28
    129a:	07 5a       	subi	r16, 0xA7	; 167
    129c:	1d 4f       	sbci	r17, 0xFD	; 253
    129e:	bc 01       	movw	r22, r24
    12a0:	cd 01       	movw	r24, r26
    12a2:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    12a6:	dc 01       	movw	r26, r24
    12a8:	cb 01       	movw	r24, r22
    12aa:	f8 01       	movw	r30, r16
    12ac:	91 83       	std	Z+1, r25	; 0x01
    12ae:	80 83       	st	Z, r24
    12b0:	24 c0       	rjmp	.+72     	; 0x12fa <__stack+0x1fb>
    12b2:	ce 01       	movw	r24, r28
    12b4:	85 5a       	subi	r24, 0xA5	; 165
    12b6:	9d 4f       	sbci	r25, 0xFD	; 253
    12b8:	20 e9       	ldi	r18, 0x90	; 144
    12ba:	31 e0       	ldi	r19, 0x01	; 1
    12bc:	fc 01       	movw	r30, r24
    12be:	31 83       	std	Z+1, r19	; 0x01
    12c0:	20 83       	st	Z, r18
    12c2:	ce 01       	movw	r24, r28
    12c4:	85 5a       	subi	r24, 0xA5	; 165
    12c6:	9d 4f       	sbci	r25, 0xFD	; 253
    12c8:	fc 01       	movw	r30, r24
    12ca:	80 81       	ld	r24, Z
    12cc:	91 81       	ldd	r25, Z+1	; 0x01
    12ce:	01 97       	sbiw	r24, 0x01	; 1
    12d0:	f1 f7       	brne	.-4      	; 0x12ce <__stack+0x1cf>
    12d2:	9e 01       	movw	r18, r28
    12d4:	25 5a       	subi	r18, 0xA5	; 165
    12d6:	3d 4f       	sbci	r19, 0xFD	; 253
    12d8:	f9 01       	movw	r30, r18
    12da:	91 83       	std	Z+1, r25	; 0x01
    12dc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12de:	ce 01       	movw	r24, r28
    12e0:	87 5a       	subi	r24, 0xA7	; 167
    12e2:	9d 4f       	sbci	r25, 0xFD	; 253
    12e4:	9e 01       	movw	r18, r28
    12e6:	27 5a       	subi	r18, 0xA7	; 167
    12e8:	3d 4f       	sbci	r19, 0xFD	; 253
    12ea:	f9 01       	movw	r30, r18
    12ec:	20 81       	ld	r18, Z
    12ee:	31 81       	ldd	r19, Z+1	; 0x01
    12f0:	21 50       	subi	r18, 0x01	; 1
    12f2:	31 09       	sbc	r19, r1
    12f4:	fc 01       	movw	r30, r24
    12f6:	31 83       	std	Z+1, r19	; 0x01
    12f8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12fa:	ce 01       	movw	r24, r28
    12fc:	87 5a       	subi	r24, 0xA7	; 167
    12fe:	9d 4f       	sbci	r25, 0xFD	; 253
    1300:	fc 01       	movw	r30, r24
    1302:	80 81       	ld	r24, Z
    1304:	91 81       	ldd	r25, Z+1	; 0x01
    1306:	89 2b       	or	r24, r25
    1308:	a1 f6       	brne	.-88     	; 0x12b2 <__stack+0x1b3>
    130a:	2c c0       	rjmp	.+88     	; 0x1364 <__stack+0x265>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    130c:	8e 01       	movw	r16, r28
    130e:	07 5a       	subi	r16, 0xA7	; 167
    1310:	1d 4f       	sbci	r17, 0xFD	; 253
    1312:	ce 01       	movw	r24, r28
    1314:	8b 5a       	subi	r24, 0xAB	; 171
    1316:	9d 4f       	sbci	r25, 0xFD	; 253
    1318:	fc 01       	movw	r30, r24
    131a:	60 81       	ld	r22, Z
    131c:	71 81       	ldd	r23, Z+1	; 0x01
    131e:	82 81       	ldd	r24, Z+2	; 0x02
    1320:	93 81       	ldd	r25, Z+3	; 0x03
    1322:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    1326:	dc 01       	movw	r26, r24
    1328:	cb 01       	movw	r24, r22
    132a:	f8 01       	movw	r30, r16
    132c:	91 83       	std	Z+1, r25	; 0x01
    132e:	80 83       	st	Z, r24
    1330:	ce 01       	movw	r24, r28
    1332:	83 5a       	subi	r24, 0xA3	; 163
    1334:	9d 4f       	sbci	r25, 0xFD	; 253
    1336:	9e 01       	movw	r18, r28
    1338:	27 5a       	subi	r18, 0xA7	; 167
    133a:	3d 4f       	sbci	r19, 0xFD	; 253
    133c:	f9 01       	movw	r30, r18
    133e:	20 81       	ld	r18, Z
    1340:	31 81       	ldd	r19, Z+1	; 0x01
    1342:	fc 01       	movw	r30, r24
    1344:	31 83       	std	Z+1, r19	; 0x01
    1346:	20 83       	st	Z, r18
    1348:	ce 01       	movw	r24, r28
    134a:	83 5a       	subi	r24, 0xA3	; 163
    134c:	9d 4f       	sbci	r25, 0xFD	; 253
    134e:	fc 01       	movw	r30, r24
    1350:	80 81       	ld	r24, Z
    1352:	91 81       	ldd	r25, Z+1	; 0x01
    1354:	01 97       	sbiw	r24, 0x01	; 1
    1356:	f1 f7       	brne	.-4      	; 0x1354 <__stack+0x255>
    1358:	9e 01       	movw	r18, r28
    135a:	23 5a       	subi	r18, 0xA3	; 163
    135c:	3d 4f       	sbci	r19, 0xFD	; 253
    135e:	f9 01       	movw	r30, r18
    1360:	91 83       	std	Z+1, r25	; 0x01
    1362:	80 83       	st	Z, r24
			_delay_ms(450);
			to_uARM("M2210 F380 T100\n");
    1364:	86 ec       	ldi	r24, 0xC6	; 198
    1366:	91 e0       	ldi	r25, 0x01	; 1
    1368:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    136c:	80 e0       	ldi	r24, 0x00	; 0
    136e:	90 e0       	ldi	r25, 0x00	; 0
    1370:	a8 ec       	ldi	r26, 0xC8	; 200
    1372:	b3 e4       	ldi	r27, 0x43	; 67
    1374:	8d a7       	std	Y+45, r24	; 0x2d
    1376:	9e a7       	std	Y+46, r25	; 0x2e
    1378:	af a7       	std	Y+47, r26	; 0x2f
    137a:	b8 ab       	std	Y+48, r27	; 0x30

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    137c:	8e 01       	movw	r16, r28
    137e:	05 5b       	subi	r16, 0xB5	; 181
    1380:	1d 4f       	sbci	r17, 0xFD	; 253
    1382:	20 e0       	ldi	r18, 0x00	; 0
    1384:	30 e0       	ldi	r19, 0x00	; 0
    1386:	4a e7       	ldi	r20, 0x7A	; 122
    1388:	55 e4       	ldi	r21, 0x45	; 69
    138a:	6d a5       	ldd	r22, Y+45	; 0x2d
    138c:	7e a5       	ldd	r23, Y+46	; 0x2e
    138e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1390:	98 a9       	ldd	r25, Y+48	; 0x30
    1392:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    1396:	dc 01       	movw	r26, r24
    1398:	cb 01       	movw	r24, r22
    139a:	f8 01       	movw	r30, r16
    139c:	80 83       	st	Z, r24
    139e:	91 83       	std	Z+1, r25	; 0x01
    13a0:	a2 83       	std	Z+2, r26	; 0x02
    13a2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    13a4:	ce 01       	movw	r24, r28
    13a6:	85 5b       	subi	r24, 0xB5	; 181
    13a8:	9d 4f       	sbci	r25, 0xFD	; 253
    13aa:	20 e0       	ldi	r18, 0x00	; 0
    13ac:	30 e0       	ldi	r19, 0x00	; 0
    13ae:	40 e8       	ldi	r20, 0x80	; 128
    13b0:	5f e3       	ldi	r21, 0x3F	; 63
    13b2:	fc 01       	movw	r30, r24
    13b4:	60 81       	ld	r22, Z
    13b6:	71 81       	ldd	r23, Z+1	; 0x01
    13b8:	82 81       	ldd	r24, Z+2	; 0x02
    13ba:	93 81       	ldd	r25, Z+3	; 0x03
    13bc:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    13c0:	88 23       	and	r24, r24
    13c2:	4c f4       	brge	.+18     	; 0x13d6 <__stack+0x2d7>
		__ticks = 1;
    13c4:	ce 01       	movw	r24, r28
    13c6:	81 5b       	subi	r24, 0xB1	; 177
    13c8:	9d 4f       	sbci	r25, 0xFD	; 253
    13ca:	21 e0       	ldi	r18, 0x01	; 1
    13cc:	30 e0       	ldi	r19, 0x00	; 0
    13ce:	fc 01       	movw	r30, r24
    13d0:	31 83       	std	Z+1, r19	; 0x01
    13d2:	20 83       	st	Z, r18
    13d4:	69 c0       	rjmp	.+210    	; 0x14a8 <__stack+0x3a9>
	else if (__tmp > 65535)
    13d6:	ce 01       	movw	r24, r28
    13d8:	85 5b       	subi	r24, 0xB5	; 181
    13da:	9d 4f       	sbci	r25, 0xFD	; 253
    13dc:	20 e0       	ldi	r18, 0x00	; 0
    13de:	3f ef       	ldi	r19, 0xFF	; 255
    13e0:	4f e7       	ldi	r20, 0x7F	; 127
    13e2:	57 e4       	ldi	r21, 0x47	; 71
    13e4:	fc 01       	movw	r30, r24
    13e6:	60 81       	ld	r22, Z
    13e8:	71 81       	ldd	r23, Z+1	; 0x01
    13ea:	82 81       	ldd	r24, Z+2	; 0x02
    13ec:	93 81       	ldd	r25, Z+3	; 0x03
    13ee:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    13f2:	18 16       	cp	r1, r24
    13f4:	0c f0       	brlt	.+2      	; 0x13f8 <__stack+0x2f9>
    13f6:	46 c0       	rjmp	.+140    	; 0x1484 <__stack+0x385>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13f8:	20 e0       	ldi	r18, 0x00	; 0
    13fa:	30 e0       	ldi	r19, 0x00	; 0
    13fc:	40 e2       	ldi	r20, 0x20	; 32
    13fe:	51 e4       	ldi	r21, 0x41	; 65
    1400:	6d a5       	ldd	r22, Y+45	; 0x2d
    1402:	7e a5       	ldd	r23, Y+46	; 0x2e
    1404:	8f a5       	ldd	r24, Y+47	; 0x2f
    1406:	98 a9       	ldd	r25, Y+48	; 0x30
    1408:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    140c:	dc 01       	movw	r26, r24
    140e:	cb 01       	movw	r24, r22
    1410:	8e 01       	movw	r16, r28
    1412:	01 5b       	subi	r16, 0xB1	; 177
    1414:	1d 4f       	sbci	r17, 0xFD	; 253
    1416:	bc 01       	movw	r22, r24
    1418:	cd 01       	movw	r24, r26
    141a:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    141e:	dc 01       	movw	r26, r24
    1420:	cb 01       	movw	r24, r22
    1422:	f8 01       	movw	r30, r16
    1424:	91 83       	std	Z+1, r25	; 0x01
    1426:	80 83       	st	Z, r24
    1428:	24 c0       	rjmp	.+72     	; 0x1472 <__stack+0x373>
    142a:	ce 01       	movw	r24, r28
    142c:	8f 5a       	subi	r24, 0xAF	; 175
    142e:	9d 4f       	sbci	r25, 0xFD	; 253
    1430:	20 e9       	ldi	r18, 0x90	; 144
    1432:	31 e0       	ldi	r19, 0x01	; 1
    1434:	fc 01       	movw	r30, r24
    1436:	31 83       	std	Z+1, r19	; 0x01
    1438:	20 83       	st	Z, r18
    143a:	ce 01       	movw	r24, r28
    143c:	8f 5a       	subi	r24, 0xAF	; 175
    143e:	9d 4f       	sbci	r25, 0xFD	; 253
    1440:	fc 01       	movw	r30, r24
    1442:	80 81       	ld	r24, Z
    1444:	91 81       	ldd	r25, Z+1	; 0x01
    1446:	01 97       	sbiw	r24, 0x01	; 1
    1448:	f1 f7       	brne	.-4      	; 0x1446 <__stack+0x347>
    144a:	9e 01       	movw	r18, r28
    144c:	2f 5a       	subi	r18, 0xAF	; 175
    144e:	3d 4f       	sbci	r19, 0xFD	; 253
    1450:	f9 01       	movw	r30, r18
    1452:	91 83       	std	Z+1, r25	; 0x01
    1454:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1456:	ce 01       	movw	r24, r28
    1458:	81 5b       	subi	r24, 0xB1	; 177
    145a:	9d 4f       	sbci	r25, 0xFD	; 253
    145c:	9e 01       	movw	r18, r28
    145e:	21 5b       	subi	r18, 0xB1	; 177
    1460:	3d 4f       	sbci	r19, 0xFD	; 253
    1462:	f9 01       	movw	r30, r18
    1464:	20 81       	ld	r18, Z
    1466:	31 81       	ldd	r19, Z+1	; 0x01
    1468:	21 50       	subi	r18, 0x01	; 1
    146a:	31 09       	sbc	r19, r1
    146c:	fc 01       	movw	r30, r24
    146e:	31 83       	std	Z+1, r19	; 0x01
    1470:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1472:	ce 01       	movw	r24, r28
    1474:	81 5b       	subi	r24, 0xB1	; 177
    1476:	9d 4f       	sbci	r25, 0xFD	; 253
    1478:	fc 01       	movw	r30, r24
    147a:	80 81       	ld	r24, Z
    147c:	91 81       	ldd	r25, Z+1	; 0x01
    147e:	89 2b       	or	r24, r25
    1480:	a1 f6       	brne	.-88     	; 0x142a <__stack+0x32b>
    1482:	2c c0       	rjmp	.+88     	; 0x14dc <__stack+0x3dd>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1484:	8e 01       	movw	r16, r28
    1486:	01 5b       	subi	r16, 0xB1	; 177
    1488:	1d 4f       	sbci	r17, 0xFD	; 253
    148a:	ce 01       	movw	r24, r28
    148c:	85 5b       	subi	r24, 0xB5	; 181
    148e:	9d 4f       	sbci	r25, 0xFD	; 253
    1490:	fc 01       	movw	r30, r24
    1492:	60 81       	ld	r22, Z
    1494:	71 81       	ldd	r23, Z+1	; 0x01
    1496:	82 81       	ldd	r24, Z+2	; 0x02
    1498:	93 81       	ldd	r25, Z+3	; 0x03
    149a:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    149e:	dc 01       	movw	r26, r24
    14a0:	cb 01       	movw	r24, r22
    14a2:	f8 01       	movw	r30, r16
    14a4:	91 83       	std	Z+1, r25	; 0x01
    14a6:	80 83       	st	Z, r24
    14a8:	ce 01       	movw	r24, r28
    14aa:	8d 5a       	subi	r24, 0xAD	; 173
    14ac:	9d 4f       	sbci	r25, 0xFD	; 253
    14ae:	9e 01       	movw	r18, r28
    14b0:	21 5b       	subi	r18, 0xB1	; 177
    14b2:	3d 4f       	sbci	r19, 0xFD	; 253
    14b4:	f9 01       	movw	r30, r18
    14b6:	20 81       	ld	r18, Z
    14b8:	31 81       	ldd	r19, Z+1	; 0x01
    14ba:	fc 01       	movw	r30, r24
    14bc:	31 83       	std	Z+1, r19	; 0x01
    14be:	20 83       	st	Z, r18
    14c0:	ce 01       	movw	r24, r28
    14c2:	8d 5a       	subi	r24, 0xAD	; 173
    14c4:	9d 4f       	sbci	r25, 0xFD	; 253
    14c6:	fc 01       	movw	r30, r24
    14c8:	80 81       	ld	r24, Z
    14ca:	91 81       	ldd	r25, Z+1	; 0x01
    14cc:	01 97       	sbiw	r24, 0x01	; 1
    14ce:	f1 f7       	brne	.-4      	; 0x14cc <__stack+0x3cd>
    14d0:	9e 01       	movw	r18, r28
    14d2:	2d 5a       	subi	r18, 0xAD	; 173
    14d4:	3d 4f       	sbci	r19, 0xFD	; 253
    14d6:	f9 01       	movw	r30, r18
    14d8:	91 83       	std	Z+1, r25	; 0x01
    14da:	80 83       	st	Z, r24
			_delay_ms(400);
			to_uARM("M2210 F320 T100\n");
    14dc:	87 ed       	ldi	r24, 0xD7	; 215
    14de:	91 e0       	ldi	r25, 0x01	; 1
    14e0:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    14e4:	80 e0       	ldi	r24, 0x00	; 0
    14e6:	90 e0       	ldi	r25, 0x00	; 0
    14e8:	aa ef       	ldi	r26, 0xFA	; 250
    14ea:	b3 e4       	ldi	r27, 0x43	; 67
    14ec:	89 ab       	std	Y+49, r24	; 0x31
    14ee:	9a ab       	std	Y+50, r25	; 0x32
    14f0:	ab ab       	std	Y+51, r26	; 0x33
    14f2:	bc ab       	std	Y+52, r27	; 0x34

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    14f4:	8e 01       	movw	r16, r28
    14f6:	0f 5b       	subi	r16, 0xBF	; 191
    14f8:	1d 4f       	sbci	r17, 0xFD	; 253
    14fa:	20 e0       	ldi	r18, 0x00	; 0
    14fc:	30 e0       	ldi	r19, 0x00	; 0
    14fe:	4a e7       	ldi	r20, 0x7A	; 122
    1500:	55 e4       	ldi	r21, 0x45	; 69
    1502:	69 a9       	ldd	r22, Y+49	; 0x31
    1504:	7a a9       	ldd	r23, Y+50	; 0x32
    1506:	8b a9       	ldd	r24, Y+51	; 0x33
    1508:	9c a9       	ldd	r25, Y+52	; 0x34
    150a:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    150e:	dc 01       	movw	r26, r24
    1510:	cb 01       	movw	r24, r22
    1512:	f8 01       	movw	r30, r16
    1514:	80 83       	st	Z, r24
    1516:	91 83       	std	Z+1, r25	; 0x01
    1518:	a2 83       	std	Z+2, r26	; 0x02
    151a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    151c:	ce 01       	movw	r24, r28
    151e:	8f 5b       	subi	r24, 0xBF	; 191
    1520:	9d 4f       	sbci	r25, 0xFD	; 253
    1522:	20 e0       	ldi	r18, 0x00	; 0
    1524:	30 e0       	ldi	r19, 0x00	; 0
    1526:	40 e8       	ldi	r20, 0x80	; 128
    1528:	5f e3       	ldi	r21, 0x3F	; 63
    152a:	fc 01       	movw	r30, r24
    152c:	60 81       	ld	r22, Z
    152e:	71 81       	ldd	r23, Z+1	; 0x01
    1530:	82 81       	ldd	r24, Z+2	; 0x02
    1532:	93 81       	ldd	r25, Z+3	; 0x03
    1534:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    1538:	88 23       	and	r24, r24
    153a:	4c f4       	brge	.+18     	; 0x154e <__stack+0x44f>
		__ticks = 1;
    153c:	ce 01       	movw	r24, r28
    153e:	8b 5b       	subi	r24, 0xBB	; 187
    1540:	9d 4f       	sbci	r25, 0xFD	; 253
    1542:	21 e0       	ldi	r18, 0x01	; 1
    1544:	30 e0       	ldi	r19, 0x00	; 0
    1546:	fc 01       	movw	r30, r24
    1548:	31 83       	std	Z+1, r19	; 0x01
    154a:	20 83       	st	Z, r18
    154c:	69 c0       	rjmp	.+210    	; 0x1620 <__stack+0x521>
	else if (__tmp > 65535)
    154e:	ce 01       	movw	r24, r28
    1550:	8f 5b       	subi	r24, 0xBF	; 191
    1552:	9d 4f       	sbci	r25, 0xFD	; 253
    1554:	20 e0       	ldi	r18, 0x00	; 0
    1556:	3f ef       	ldi	r19, 0xFF	; 255
    1558:	4f e7       	ldi	r20, 0x7F	; 127
    155a:	57 e4       	ldi	r21, 0x47	; 71
    155c:	fc 01       	movw	r30, r24
    155e:	60 81       	ld	r22, Z
    1560:	71 81       	ldd	r23, Z+1	; 0x01
    1562:	82 81       	ldd	r24, Z+2	; 0x02
    1564:	93 81       	ldd	r25, Z+3	; 0x03
    1566:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    156a:	18 16       	cp	r1, r24
    156c:	0c f0       	brlt	.+2      	; 0x1570 <__stack+0x471>
    156e:	46 c0       	rjmp	.+140    	; 0x15fc <__stack+0x4fd>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1570:	20 e0       	ldi	r18, 0x00	; 0
    1572:	30 e0       	ldi	r19, 0x00	; 0
    1574:	40 e2       	ldi	r20, 0x20	; 32
    1576:	51 e4       	ldi	r21, 0x41	; 65
    1578:	69 a9       	ldd	r22, Y+49	; 0x31
    157a:	7a a9       	ldd	r23, Y+50	; 0x32
    157c:	8b a9       	ldd	r24, Y+51	; 0x33
    157e:	9c a9       	ldd	r25, Y+52	; 0x34
    1580:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    1584:	dc 01       	movw	r26, r24
    1586:	cb 01       	movw	r24, r22
    1588:	8e 01       	movw	r16, r28
    158a:	0b 5b       	subi	r16, 0xBB	; 187
    158c:	1d 4f       	sbci	r17, 0xFD	; 253
    158e:	bc 01       	movw	r22, r24
    1590:	cd 01       	movw	r24, r26
    1592:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    1596:	dc 01       	movw	r26, r24
    1598:	cb 01       	movw	r24, r22
    159a:	f8 01       	movw	r30, r16
    159c:	91 83       	std	Z+1, r25	; 0x01
    159e:	80 83       	st	Z, r24
    15a0:	24 c0       	rjmp	.+72     	; 0x15ea <__stack+0x4eb>
    15a2:	ce 01       	movw	r24, r28
    15a4:	89 5b       	subi	r24, 0xB9	; 185
    15a6:	9d 4f       	sbci	r25, 0xFD	; 253
    15a8:	20 e9       	ldi	r18, 0x90	; 144
    15aa:	31 e0       	ldi	r19, 0x01	; 1
    15ac:	fc 01       	movw	r30, r24
    15ae:	31 83       	std	Z+1, r19	; 0x01
    15b0:	20 83       	st	Z, r18
    15b2:	ce 01       	movw	r24, r28
    15b4:	89 5b       	subi	r24, 0xB9	; 185
    15b6:	9d 4f       	sbci	r25, 0xFD	; 253
    15b8:	fc 01       	movw	r30, r24
    15ba:	80 81       	ld	r24, Z
    15bc:	91 81       	ldd	r25, Z+1	; 0x01
    15be:	01 97       	sbiw	r24, 0x01	; 1
    15c0:	f1 f7       	brne	.-4      	; 0x15be <__stack+0x4bf>
    15c2:	9e 01       	movw	r18, r28
    15c4:	29 5b       	subi	r18, 0xB9	; 185
    15c6:	3d 4f       	sbci	r19, 0xFD	; 253
    15c8:	f9 01       	movw	r30, r18
    15ca:	91 83       	std	Z+1, r25	; 0x01
    15cc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15ce:	ce 01       	movw	r24, r28
    15d0:	8b 5b       	subi	r24, 0xBB	; 187
    15d2:	9d 4f       	sbci	r25, 0xFD	; 253
    15d4:	9e 01       	movw	r18, r28
    15d6:	2b 5b       	subi	r18, 0xBB	; 187
    15d8:	3d 4f       	sbci	r19, 0xFD	; 253
    15da:	f9 01       	movw	r30, r18
    15dc:	20 81       	ld	r18, Z
    15de:	31 81       	ldd	r19, Z+1	; 0x01
    15e0:	21 50       	subi	r18, 0x01	; 1
    15e2:	31 09       	sbc	r19, r1
    15e4:	fc 01       	movw	r30, r24
    15e6:	31 83       	std	Z+1, r19	; 0x01
    15e8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15ea:	ce 01       	movw	r24, r28
    15ec:	8b 5b       	subi	r24, 0xBB	; 187
    15ee:	9d 4f       	sbci	r25, 0xFD	; 253
    15f0:	fc 01       	movw	r30, r24
    15f2:	80 81       	ld	r24, Z
    15f4:	91 81       	ldd	r25, Z+1	; 0x01
    15f6:	89 2b       	or	r24, r25
    15f8:	a1 f6       	brne	.-88     	; 0x15a2 <__stack+0x4a3>
    15fa:	2c c0       	rjmp	.+88     	; 0x1654 <__stack+0x555>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15fc:	8e 01       	movw	r16, r28
    15fe:	0b 5b       	subi	r16, 0xBB	; 187
    1600:	1d 4f       	sbci	r17, 0xFD	; 253
    1602:	ce 01       	movw	r24, r28
    1604:	8f 5b       	subi	r24, 0xBF	; 191
    1606:	9d 4f       	sbci	r25, 0xFD	; 253
    1608:	fc 01       	movw	r30, r24
    160a:	60 81       	ld	r22, Z
    160c:	71 81       	ldd	r23, Z+1	; 0x01
    160e:	82 81       	ldd	r24, Z+2	; 0x02
    1610:	93 81       	ldd	r25, Z+3	; 0x03
    1612:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    1616:	dc 01       	movw	r26, r24
    1618:	cb 01       	movw	r24, r22
    161a:	f8 01       	movw	r30, r16
    161c:	91 83       	std	Z+1, r25	; 0x01
    161e:	80 83       	st	Z, r24
    1620:	ce 01       	movw	r24, r28
    1622:	87 5b       	subi	r24, 0xB7	; 183
    1624:	9d 4f       	sbci	r25, 0xFD	; 253
    1626:	9e 01       	movw	r18, r28
    1628:	2b 5b       	subi	r18, 0xBB	; 187
    162a:	3d 4f       	sbci	r19, 0xFD	; 253
    162c:	f9 01       	movw	r30, r18
    162e:	20 81       	ld	r18, Z
    1630:	31 81       	ldd	r19, Z+1	; 0x01
    1632:	fc 01       	movw	r30, r24
    1634:	31 83       	std	Z+1, r19	; 0x01
    1636:	20 83       	st	Z, r18
    1638:	ce 01       	movw	r24, r28
    163a:	87 5b       	subi	r24, 0xB7	; 183
    163c:	9d 4f       	sbci	r25, 0xFD	; 253
    163e:	fc 01       	movw	r30, r24
    1640:	80 81       	ld	r24, Z
    1642:	91 81       	ldd	r25, Z+1	; 0x01
    1644:	01 97       	sbiw	r24, 0x01	; 1
    1646:	f1 f7       	brne	.-4      	; 0x1644 <__stack+0x545>
    1648:	9e 01       	movw	r18, r28
    164a:	27 5b       	subi	r18, 0xB7	; 183
    164c:	3d 4f       	sbci	r19, 0xFD	; 253
    164e:	f9 01       	movw	r30, r18
    1650:	91 83       	std	Z+1, r25	; 0x01
    1652:	80 83       	st	Z, r24
			_delay_ms(500);
			to_uARM("M2210 F440 T100\n");
    1654:	88 ee       	ldi	r24, 0xE8	; 232
    1656:	91 e0       	ldi	r25, 0x01	; 1
    1658:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    165c:	80 e0       	ldi	r24, 0x00	; 0
    165e:	90 e0       	ldi	r25, 0x00	; 0
    1660:	a6 e9       	ldi	r26, 0x96	; 150
    1662:	b3 e4       	ldi	r27, 0x43	; 67
    1664:	8d ab       	std	Y+53, r24	; 0x35
    1666:	9e ab       	std	Y+54, r25	; 0x36
    1668:	af ab       	std	Y+55, r26	; 0x37
    166a:	b8 af       	std	Y+56, r27	; 0x38

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    166c:	8e 01       	movw	r16, r28
    166e:	09 5c       	subi	r16, 0xC9	; 201
    1670:	1d 4f       	sbci	r17, 0xFD	; 253
    1672:	20 e0       	ldi	r18, 0x00	; 0
    1674:	30 e0       	ldi	r19, 0x00	; 0
    1676:	4a e7       	ldi	r20, 0x7A	; 122
    1678:	55 e4       	ldi	r21, 0x45	; 69
    167a:	6d a9       	ldd	r22, Y+53	; 0x35
    167c:	7e a9       	ldd	r23, Y+54	; 0x36
    167e:	8f a9       	ldd	r24, Y+55	; 0x37
    1680:	98 ad       	ldd	r25, Y+56	; 0x38
    1682:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    1686:	dc 01       	movw	r26, r24
    1688:	cb 01       	movw	r24, r22
    168a:	f8 01       	movw	r30, r16
    168c:	80 83       	st	Z, r24
    168e:	91 83       	std	Z+1, r25	; 0x01
    1690:	a2 83       	std	Z+2, r26	; 0x02
    1692:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1694:	ce 01       	movw	r24, r28
    1696:	89 5c       	subi	r24, 0xC9	; 201
    1698:	9d 4f       	sbci	r25, 0xFD	; 253
    169a:	20 e0       	ldi	r18, 0x00	; 0
    169c:	30 e0       	ldi	r19, 0x00	; 0
    169e:	40 e8       	ldi	r20, 0x80	; 128
    16a0:	5f e3       	ldi	r21, 0x3F	; 63
    16a2:	fc 01       	movw	r30, r24
    16a4:	60 81       	ld	r22, Z
    16a6:	71 81       	ldd	r23, Z+1	; 0x01
    16a8:	82 81       	ldd	r24, Z+2	; 0x02
    16aa:	93 81       	ldd	r25, Z+3	; 0x03
    16ac:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    16b0:	88 23       	and	r24, r24
    16b2:	4c f4       	brge	.+18     	; 0x16c6 <__stack+0x5c7>
		__ticks = 1;
    16b4:	ce 01       	movw	r24, r28
    16b6:	85 5c       	subi	r24, 0xC5	; 197
    16b8:	9d 4f       	sbci	r25, 0xFD	; 253
    16ba:	21 e0       	ldi	r18, 0x01	; 1
    16bc:	30 e0       	ldi	r19, 0x00	; 0
    16be:	fc 01       	movw	r30, r24
    16c0:	31 83       	std	Z+1, r19	; 0x01
    16c2:	20 83       	st	Z, r18
    16c4:	69 c0       	rjmp	.+210    	; 0x1798 <__stack+0x699>
	else if (__tmp > 65535)
    16c6:	ce 01       	movw	r24, r28
    16c8:	89 5c       	subi	r24, 0xC9	; 201
    16ca:	9d 4f       	sbci	r25, 0xFD	; 253
    16cc:	20 e0       	ldi	r18, 0x00	; 0
    16ce:	3f ef       	ldi	r19, 0xFF	; 255
    16d0:	4f e7       	ldi	r20, 0x7F	; 127
    16d2:	57 e4       	ldi	r21, 0x47	; 71
    16d4:	fc 01       	movw	r30, r24
    16d6:	60 81       	ld	r22, Z
    16d8:	71 81       	ldd	r23, Z+1	; 0x01
    16da:	82 81       	ldd	r24, Z+2	; 0x02
    16dc:	93 81       	ldd	r25, Z+3	; 0x03
    16de:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    16e2:	18 16       	cp	r1, r24
    16e4:	0c f0       	brlt	.+2      	; 0x16e8 <__stack+0x5e9>
    16e6:	46 c0       	rjmp	.+140    	; 0x1774 <__stack+0x675>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16e8:	20 e0       	ldi	r18, 0x00	; 0
    16ea:	30 e0       	ldi	r19, 0x00	; 0
    16ec:	40 e2       	ldi	r20, 0x20	; 32
    16ee:	51 e4       	ldi	r21, 0x41	; 65
    16f0:	6d a9       	ldd	r22, Y+53	; 0x35
    16f2:	7e a9       	ldd	r23, Y+54	; 0x36
    16f4:	8f a9       	ldd	r24, Y+55	; 0x37
    16f6:	98 ad       	ldd	r25, Y+56	; 0x38
    16f8:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    16fc:	dc 01       	movw	r26, r24
    16fe:	cb 01       	movw	r24, r22
    1700:	8e 01       	movw	r16, r28
    1702:	05 5c       	subi	r16, 0xC5	; 197
    1704:	1d 4f       	sbci	r17, 0xFD	; 253
    1706:	bc 01       	movw	r22, r24
    1708:	cd 01       	movw	r24, r26
    170a:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    170e:	dc 01       	movw	r26, r24
    1710:	cb 01       	movw	r24, r22
    1712:	f8 01       	movw	r30, r16
    1714:	91 83       	std	Z+1, r25	; 0x01
    1716:	80 83       	st	Z, r24
    1718:	24 c0       	rjmp	.+72     	; 0x1762 <__stack+0x663>
    171a:	ce 01       	movw	r24, r28
    171c:	83 5c       	subi	r24, 0xC3	; 195
    171e:	9d 4f       	sbci	r25, 0xFD	; 253
    1720:	20 e9       	ldi	r18, 0x90	; 144
    1722:	31 e0       	ldi	r19, 0x01	; 1
    1724:	fc 01       	movw	r30, r24
    1726:	31 83       	std	Z+1, r19	; 0x01
    1728:	20 83       	st	Z, r18
    172a:	ce 01       	movw	r24, r28
    172c:	83 5c       	subi	r24, 0xC3	; 195
    172e:	9d 4f       	sbci	r25, 0xFD	; 253
    1730:	fc 01       	movw	r30, r24
    1732:	80 81       	ld	r24, Z
    1734:	91 81       	ldd	r25, Z+1	; 0x01
    1736:	01 97       	sbiw	r24, 0x01	; 1
    1738:	f1 f7       	brne	.-4      	; 0x1736 <__stack+0x637>
    173a:	9e 01       	movw	r18, r28
    173c:	23 5c       	subi	r18, 0xC3	; 195
    173e:	3d 4f       	sbci	r19, 0xFD	; 253
    1740:	f9 01       	movw	r30, r18
    1742:	91 83       	std	Z+1, r25	; 0x01
    1744:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1746:	ce 01       	movw	r24, r28
    1748:	85 5c       	subi	r24, 0xC5	; 197
    174a:	9d 4f       	sbci	r25, 0xFD	; 253
    174c:	9e 01       	movw	r18, r28
    174e:	25 5c       	subi	r18, 0xC5	; 197
    1750:	3d 4f       	sbci	r19, 0xFD	; 253
    1752:	f9 01       	movw	r30, r18
    1754:	20 81       	ld	r18, Z
    1756:	31 81       	ldd	r19, Z+1	; 0x01
    1758:	21 50       	subi	r18, 0x01	; 1
    175a:	31 09       	sbc	r19, r1
    175c:	fc 01       	movw	r30, r24
    175e:	31 83       	std	Z+1, r19	; 0x01
    1760:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1762:	ce 01       	movw	r24, r28
    1764:	85 5c       	subi	r24, 0xC5	; 197
    1766:	9d 4f       	sbci	r25, 0xFD	; 253
    1768:	fc 01       	movw	r30, r24
    176a:	80 81       	ld	r24, Z
    176c:	91 81       	ldd	r25, Z+1	; 0x01
    176e:	89 2b       	or	r24, r25
    1770:	a1 f6       	brne	.-88     	; 0x171a <__stack+0x61b>
    1772:	2c c0       	rjmp	.+88     	; 0x17cc <__stack+0x6cd>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1774:	8e 01       	movw	r16, r28
    1776:	05 5c       	subi	r16, 0xC5	; 197
    1778:	1d 4f       	sbci	r17, 0xFD	; 253
    177a:	ce 01       	movw	r24, r28
    177c:	89 5c       	subi	r24, 0xC9	; 201
    177e:	9d 4f       	sbci	r25, 0xFD	; 253
    1780:	fc 01       	movw	r30, r24
    1782:	60 81       	ld	r22, Z
    1784:	71 81       	ldd	r23, Z+1	; 0x01
    1786:	82 81       	ldd	r24, Z+2	; 0x02
    1788:	93 81       	ldd	r25, Z+3	; 0x03
    178a:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    178e:	dc 01       	movw	r26, r24
    1790:	cb 01       	movw	r24, r22
    1792:	f8 01       	movw	r30, r16
    1794:	91 83       	std	Z+1, r25	; 0x01
    1796:	80 83       	st	Z, r24
    1798:	ce 01       	movw	r24, r28
    179a:	81 5c       	subi	r24, 0xC1	; 193
    179c:	9d 4f       	sbci	r25, 0xFD	; 253
    179e:	9e 01       	movw	r18, r28
    17a0:	25 5c       	subi	r18, 0xC5	; 197
    17a2:	3d 4f       	sbci	r19, 0xFD	; 253
    17a4:	f9 01       	movw	r30, r18
    17a6:	20 81       	ld	r18, Z
    17a8:	31 81       	ldd	r19, Z+1	; 0x01
    17aa:	fc 01       	movw	r30, r24
    17ac:	31 83       	std	Z+1, r19	; 0x01
    17ae:	20 83       	st	Z, r18
    17b0:	ce 01       	movw	r24, r28
    17b2:	81 5c       	subi	r24, 0xC1	; 193
    17b4:	9d 4f       	sbci	r25, 0xFD	; 253
    17b6:	fc 01       	movw	r30, r24
    17b8:	80 81       	ld	r24, Z
    17ba:	91 81       	ldd	r25, Z+1	; 0x01
    17bc:	01 97       	sbiw	r24, 0x01	; 1
    17be:	f1 f7       	brne	.-4      	; 0x17bc <__stack+0x6bd>
    17c0:	9e 01       	movw	r18, r28
    17c2:	21 5c       	subi	r18, 0xC1	; 193
    17c4:	3d 4f       	sbci	r19, 0xFD	; 253
    17c6:	f9 01       	movw	r30, r18
    17c8:	91 83       	std	Z+1, r25	; 0x01
    17ca:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F480 T80\n");
    17cc:	89 ef       	ldi	r24, 0xF9	; 249
    17ce:	91 e0       	ldi	r25, 0x01	; 1
    17d0:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    17d4:	80 e0       	ldi	r24, 0x00	; 0
    17d6:	90 e0       	ldi	r25, 0x00	; 0
    17d8:	a5 ea       	ldi	r26, 0xA5	; 165
    17da:	b3 e4       	ldi	r27, 0x43	; 67
    17dc:	89 af       	std	Y+57, r24	; 0x39
    17de:	9a af       	std	Y+58, r25	; 0x3a
    17e0:	ab af       	std	Y+59, r26	; 0x3b
    17e2:	bc af       	std	Y+60, r27	; 0x3c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    17e4:	8e 01       	movw	r16, r28
    17e6:	03 5d       	subi	r16, 0xD3	; 211
    17e8:	1d 4f       	sbci	r17, 0xFD	; 253
    17ea:	20 e0       	ldi	r18, 0x00	; 0
    17ec:	30 e0       	ldi	r19, 0x00	; 0
    17ee:	4a e7       	ldi	r20, 0x7A	; 122
    17f0:	55 e4       	ldi	r21, 0x45	; 69
    17f2:	69 ad       	ldd	r22, Y+57	; 0x39
    17f4:	7a ad       	ldd	r23, Y+58	; 0x3a
    17f6:	8b ad       	ldd	r24, Y+59	; 0x3b
    17f8:	9c ad       	ldd	r25, Y+60	; 0x3c
    17fa:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    17fe:	dc 01       	movw	r26, r24
    1800:	cb 01       	movw	r24, r22
    1802:	f8 01       	movw	r30, r16
    1804:	80 83       	st	Z, r24
    1806:	91 83       	std	Z+1, r25	; 0x01
    1808:	a2 83       	std	Z+2, r26	; 0x02
    180a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    180c:	ce 01       	movw	r24, r28
    180e:	83 5d       	subi	r24, 0xD3	; 211
    1810:	9d 4f       	sbci	r25, 0xFD	; 253
    1812:	20 e0       	ldi	r18, 0x00	; 0
    1814:	30 e0       	ldi	r19, 0x00	; 0
    1816:	40 e8       	ldi	r20, 0x80	; 128
    1818:	5f e3       	ldi	r21, 0x3F	; 63
    181a:	fc 01       	movw	r30, r24
    181c:	60 81       	ld	r22, Z
    181e:	71 81       	ldd	r23, Z+1	; 0x01
    1820:	82 81       	ldd	r24, Z+2	; 0x02
    1822:	93 81       	ldd	r25, Z+3	; 0x03
    1824:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    1828:	88 23       	and	r24, r24
    182a:	4c f4       	brge	.+18     	; 0x183e <__stack+0x73f>
		__ticks = 1;
    182c:	ce 01       	movw	r24, r28
    182e:	8f 5c       	subi	r24, 0xCF	; 207
    1830:	9d 4f       	sbci	r25, 0xFD	; 253
    1832:	21 e0       	ldi	r18, 0x01	; 1
    1834:	30 e0       	ldi	r19, 0x00	; 0
    1836:	fc 01       	movw	r30, r24
    1838:	31 83       	std	Z+1, r19	; 0x01
    183a:	20 83       	st	Z, r18
    183c:	69 c0       	rjmp	.+210    	; 0x1910 <__stack+0x811>
	else if (__tmp > 65535)
    183e:	ce 01       	movw	r24, r28
    1840:	83 5d       	subi	r24, 0xD3	; 211
    1842:	9d 4f       	sbci	r25, 0xFD	; 253
    1844:	20 e0       	ldi	r18, 0x00	; 0
    1846:	3f ef       	ldi	r19, 0xFF	; 255
    1848:	4f e7       	ldi	r20, 0x7F	; 127
    184a:	57 e4       	ldi	r21, 0x47	; 71
    184c:	fc 01       	movw	r30, r24
    184e:	60 81       	ld	r22, Z
    1850:	71 81       	ldd	r23, Z+1	; 0x01
    1852:	82 81       	ldd	r24, Z+2	; 0x02
    1854:	93 81       	ldd	r25, Z+3	; 0x03
    1856:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    185a:	18 16       	cp	r1, r24
    185c:	0c f0       	brlt	.+2      	; 0x1860 <__stack+0x761>
    185e:	46 c0       	rjmp	.+140    	; 0x18ec <__stack+0x7ed>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1860:	20 e0       	ldi	r18, 0x00	; 0
    1862:	30 e0       	ldi	r19, 0x00	; 0
    1864:	40 e2       	ldi	r20, 0x20	; 32
    1866:	51 e4       	ldi	r21, 0x41	; 65
    1868:	69 ad       	ldd	r22, Y+57	; 0x39
    186a:	7a ad       	ldd	r23, Y+58	; 0x3a
    186c:	8b ad       	ldd	r24, Y+59	; 0x3b
    186e:	9c ad       	ldd	r25, Y+60	; 0x3c
    1870:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    1874:	dc 01       	movw	r26, r24
    1876:	cb 01       	movw	r24, r22
    1878:	8e 01       	movw	r16, r28
    187a:	0f 5c       	subi	r16, 0xCF	; 207
    187c:	1d 4f       	sbci	r17, 0xFD	; 253
    187e:	bc 01       	movw	r22, r24
    1880:	cd 01       	movw	r24, r26
    1882:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    1886:	dc 01       	movw	r26, r24
    1888:	cb 01       	movw	r24, r22
    188a:	f8 01       	movw	r30, r16
    188c:	91 83       	std	Z+1, r25	; 0x01
    188e:	80 83       	st	Z, r24
    1890:	24 c0       	rjmp	.+72     	; 0x18da <__stack+0x7db>
    1892:	ce 01       	movw	r24, r28
    1894:	8d 5c       	subi	r24, 0xCD	; 205
    1896:	9d 4f       	sbci	r25, 0xFD	; 253
    1898:	20 e9       	ldi	r18, 0x90	; 144
    189a:	31 e0       	ldi	r19, 0x01	; 1
    189c:	fc 01       	movw	r30, r24
    189e:	31 83       	std	Z+1, r19	; 0x01
    18a0:	20 83       	st	Z, r18
    18a2:	ce 01       	movw	r24, r28
    18a4:	8d 5c       	subi	r24, 0xCD	; 205
    18a6:	9d 4f       	sbci	r25, 0xFD	; 253
    18a8:	fc 01       	movw	r30, r24
    18aa:	80 81       	ld	r24, Z
    18ac:	91 81       	ldd	r25, Z+1	; 0x01
    18ae:	01 97       	sbiw	r24, 0x01	; 1
    18b0:	f1 f7       	brne	.-4      	; 0x18ae <__stack+0x7af>
    18b2:	9e 01       	movw	r18, r28
    18b4:	2d 5c       	subi	r18, 0xCD	; 205
    18b6:	3d 4f       	sbci	r19, 0xFD	; 253
    18b8:	f9 01       	movw	r30, r18
    18ba:	91 83       	std	Z+1, r25	; 0x01
    18bc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18be:	ce 01       	movw	r24, r28
    18c0:	8f 5c       	subi	r24, 0xCF	; 207
    18c2:	9d 4f       	sbci	r25, 0xFD	; 253
    18c4:	9e 01       	movw	r18, r28
    18c6:	2f 5c       	subi	r18, 0xCF	; 207
    18c8:	3d 4f       	sbci	r19, 0xFD	; 253
    18ca:	f9 01       	movw	r30, r18
    18cc:	20 81       	ld	r18, Z
    18ce:	31 81       	ldd	r19, Z+1	; 0x01
    18d0:	21 50       	subi	r18, 0x01	; 1
    18d2:	31 09       	sbc	r19, r1
    18d4:	fc 01       	movw	r30, r24
    18d6:	31 83       	std	Z+1, r19	; 0x01
    18d8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18da:	ce 01       	movw	r24, r28
    18dc:	8f 5c       	subi	r24, 0xCF	; 207
    18de:	9d 4f       	sbci	r25, 0xFD	; 253
    18e0:	fc 01       	movw	r30, r24
    18e2:	80 81       	ld	r24, Z
    18e4:	91 81       	ldd	r25, Z+1	; 0x01
    18e6:	89 2b       	or	r24, r25
    18e8:	a1 f6       	brne	.-88     	; 0x1892 <__stack+0x793>
    18ea:	2c c0       	rjmp	.+88     	; 0x1944 <__stack+0x845>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18ec:	8e 01       	movw	r16, r28
    18ee:	0f 5c       	subi	r16, 0xCF	; 207
    18f0:	1d 4f       	sbci	r17, 0xFD	; 253
    18f2:	ce 01       	movw	r24, r28
    18f4:	83 5d       	subi	r24, 0xD3	; 211
    18f6:	9d 4f       	sbci	r25, 0xFD	; 253
    18f8:	fc 01       	movw	r30, r24
    18fa:	60 81       	ld	r22, Z
    18fc:	71 81       	ldd	r23, Z+1	; 0x01
    18fe:	82 81       	ldd	r24, Z+2	; 0x02
    1900:	93 81       	ldd	r25, Z+3	; 0x03
    1902:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    1906:	dc 01       	movw	r26, r24
    1908:	cb 01       	movw	r24, r22
    190a:	f8 01       	movw	r30, r16
    190c:	91 83       	std	Z+1, r25	; 0x01
    190e:	80 83       	st	Z, r24
    1910:	ce 01       	movw	r24, r28
    1912:	8b 5c       	subi	r24, 0xCB	; 203
    1914:	9d 4f       	sbci	r25, 0xFD	; 253
    1916:	9e 01       	movw	r18, r28
    1918:	2f 5c       	subi	r18, 0xCF	; 207
    191a:	3d 4f       	sbci	r19, 0xFD	; 253
    191c:	f9 01       	movw	r30, r18
    191e:	20 81       	ld	r18, Z
    1920:	31 81       	ldd	r19, Z+1	; 0x01
    1922:	fc 01       	movw	r30, r24
    1924:	31 83       	std	Z+1, r19	; 0x01
    1926:	20 83       	st	Z, r18
    1928:	ce 01       	movw	r24, r28
    192a:	8b 5c       	subi	r24, 0xCB	; 203
    192c:	9d 4f       	sbci	r25, 0xFD	; 253
    192e:	fc 01       	movw	r30, r24
    1930:	80 81       	ld	r24, Z
    1932:	91 81       	ldd	r25, Z+1	; 0x01
    1934:	01 97       	sbiw	r24, 0x01	; 1
    1936:	f1 f7       	brne	.-4      	; 0x1934 <__stack+0x835>
    1938:	9e 01       	movw	r18, r28
    193a:	2b 5c       	subi	r18, 0xCB	; 203
    193c:	3d 4f       	sbci	r19, 0xFD	; 253
    193e:	f9 01       	movw	r30, r18
    1940:	91 83       	std	Z+1, r25	; 0x01
    1942:	80 83       	st	Z, r24
			_delay_ms(330);
			to_uARM("M2210 F450 T100\n");
    1944:	89 e0       	ldi	r24, 0x09	; 9
    1946:	92 e0       	ldi	r25, 0x02	; 2
    1948:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    194c:	80 e0       	ldi	r24, 0x00	; 0
    194e:	90 e0       	ldi	r25, 0x00	; 0
    1950:	a6 e1       	ldi	r26, 0x16	; 22
    1952:	b3 e4       	ldi	r27, 0x43	; 67
    1954:	9e 01       	movw	r18, r28
    1956:	23 5c       	subi	r18, 0xC3	; 195
    1958:	3f 4f       	sbci	r19, 0xFF	; 255
    195a:	f9 01       	movw	r30, r18
    195c:	80 83       	st	Z, r24
    195e:	91 83       	std	Z+1, r25	; 0x01
    1960:	a2 83       	std	Z+2, r26	; 0x02
    1962:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1964:	8e 01       	movw	r16, r28
    1966:	0d 5d       	subi	r16, 0xDD	; 221
    1968:	1d 4f       	sbci	r17, 0xFD	; 253
    196a:	20 e0       	ldi	r18, 0x00	; 0
    196c:	30 e0       	ldi	r19, 0x00	; 0
    196e:	4a e7       	ldi	r20, 0x7A	; 122
    1970:	55 e4       	ldi	r21, 0x45	; 69
    1972:	ce 01       	movw	r24, r28
    1974:	cd 96       	adiw	r24, 0x3d	; 61
    1976:	fc 01       	movw	r30, r24
    1978:	60 81       	ld	r22, Z
    197a:	71 81       	ldd	r23, Z+1	; 0x01
    197c:	82 81       	ldd	r24, Z+2	; 0x02
    197e:	93 81       	ldd	r25, Z+3	; 0x03
    1980:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    1984:	dc 01       	movw	r26, r24
    1986:	cb 01       	movw	r24, r22
    1988:	f8 01       	movw	r30, r16
    198a:	80 83       	st	Z, r24
    198c:	91 83       	std	Z+1, r25	; 0x01
    198e:	a2 83       	std	Z+2, r26	; 0x02
    1990:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1992:	ce 01       	movw	r24, r28
    1994:	8d 5d       	subi	r24, 0xDD	; 221
    1996:	9d 4f       	sbci	r25, 0xFD	; 253
    1998:	20 e0       	ldi	r18, 0x00	; 0
    199a:	30 e0       	ldi	r19, 0x00	; 0
    199c:	40 e8       	ldi	r20, 0x80	; 128
    199e:	5f e3       	ldi	r21, 0x3F	; 63
    19a0:	fc 01       	movw	r30, r24
    19a2:	60 81       	ld	r22, Z
    19a4:	71 81       	ldd	r23, Z+1	; 0x01
    19a6:	82 81       	ldd	r24, Z+2	; 0x02
    19a8:	93 81       	ldd	r25, Z+3	; 0x03
    19aa:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    19ae:	88 23       	and	r24, r24
    19b0:	4c f4       	brge	.+18     	; 0x19c4 <__stack+0x8c5>
		__ticks = 1;
    19b2:	ce 01       	movw	r24, r28
    19b4:	89 5d       	subi	r24, 0xD9	; 217
    19b6:	9d 4f       	sbci	r25, 0xFD	; 253
    19b8:	21 e0       	ldi	r18, 0x01	; 1
    19ba:	30 e0       	ldi	r19, 0x00	; 0
    19bc:	fc 01       	movw	r30, r24
    19be:	31 83       	std	Z+1, r19	; 0x01
    19c0:	20 83       	st	Z, r18
    19c2:	6c c0       	rjmp	.+216    	; 0x1a9c <__stack+0x99d>
	else if (__tmp > 65535)
    19c4:	ce 01       	movw	r24, r28
    19c6:	8d 5d       	subi	r24, 0xDD	; 221
    19c8:	9d 4f       	sbci	r25, 0xFD	; 253
    19ca:	20 e0       	ldi	r18, 0x00	; 0
    19cc:	3f ef       	ldi	r19, 0xFF	; 255
    19ce:	4f e7       	ldi	r20, 0x7F	; 127
    19d0:	57 e4       	ldi	r21, 0x47	; 71
    19d2:	fc 01       	movw	r30, r24
    19d4:	60 81       	ld	r22, Z
    19d6:	71 81       	ldd	r23, Z+1	; 0x01
    19d8:	82 81       	ldd	r24, Z+2	; 0x02
    19da:	93 81       	ldd	r25, Z+3	; 0x03
    19dc:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    19e0:	18 16       	cp	r1, r24
    19e2:	0c f0       	brlt	.+2      	; 0x19e6 <__stack+0x8e7>
    19e4:	49 c0       	rjmp	.+146    	; 0x1a78 <__stack+0x979>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19e6:	20 e0       	ldi	r18, 0x00	; 0
    19e8:	30 e0       	ldi	r19, 0x00	; 0
    19ea:	40 e2       	ldi	r20, 0x20	; 32
    19ec:	51 e4       	ldi	r21, 0x41	; 65
    19ee:	ce 01       	movw	r24, r28
    19f0:	cd 96       	adiw	r24, 0x3d	; 61
    19f2:	fc 01       	movw	r30, r24
    19f4:	60 81       	ld	r22, Z
    19f6:	71 81       	ldd	r23, Z+1	; 0x01
    19f8:	82 81       	ldd	r24, Z+2	; 0x02
    19fa:	93 81       	ldd	r25, Z+3	; 0x03
    19fc:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    1a00:	dc 01       	movw	r26, r24
    1a02:	cb 01       	movw	r24, r22
    1a04:	8e 01       	movw	r16, r28
    1a06:	09 5d       	subi	r16, 0xD9	; 217
    1a08:	1d 4f       	sbci	r17, 0xFD	; 253
    1a0a:	bc 01       	movw	r22, r24
    1a0c:	cd 01       	movw	r24, r26
    1a0e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    1a12:	dc 01       	movw	r26, r24
    1a14:	cb 01       	movw	r24, r22
    1a16:	f8 01       	movw	r30, r16
    1a18:	91 83       	std	Z+1, r25	; 0x01
    1a1a:	80 83       	st	Z, r24
    1a1c:	24 c0       	rjmp	.+72     	; 0x1a66 <__stack+0x967>
    1a1e:	ce 01       	movw	r24, r28
    1a20:	87 5d       	subi	r24, 0xD7	; 215
    1a22:	9d 4f       	sbci	r25, 0xFD	; 253
    1a24:	20 e9       	ldi	r18, 0x90	; 144
    1a26:	31 e0       	ldi	r19, 0x01	; 1
    1a28:	fc 01       	movw	r30, r24
    1a2a:	31 83       	std	Z+1, r19	; 0x01
    1a2c:	20 83       	st	Z, r18
    1a2e:	ce 01       	movw	r24, r28
    1a30:	87 5d       	subi	r24, 0xD7	; 215
    1a32:	9d 4f       	sbci	r25, 0xFD	; 253
    1a34:	fc 01       	movw	r30, r24
    1a36:	80 81       	ld	r24, Z
    1a38:	91 81       	ldd	r25, Z+1	; 0x01
    1a3a:	01 97       	sbiw	r24, 0x01	; 1
    1a3c:	f1 f7       	brne	.-4      	; 0x1a3a <__stack+0x93b>
    1a3e:	9e 01       	movw	r18, r28
    1a40:	27 5d       	subi	r18, 0xD7	; 215
    1a42:	3d 4f       	sbci	r19, 0xFD	; 253
    1a44:	f9 01       	movw	r30, r18
    1a46:	91 83       	std	Z+1, r25	; 0x01
    1a48:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a4a:	ce 01       	movw	r24, r28
    1a4c:	89 5d       	subi	r24, 0xD9	; 217
    1a4e:	9d 4f       	sbci	r25, 0xFD	; 253
    1a50:	9e 01       	movw	r18, r28
    1a52:	29 5d       	subi	r18, 0xD9	; 217
    1a54:	3d 4f       	sbci	r19, 0xFD	; 253
    1a56:	f9 01       	movw	r30, r18
    1a58:	20 81       	ld	r18, Z
    1a5a:	31 81       	ldd	r19, Z+1	; 0x01
    1a5c:	21 50       	subi	r18, 0x01	; 1
    1a5e:	31 09       	sbc	r19, r1
    1a60:	fc 01       	movw	r30, r24
    1a62:	31 83       	std	Z+1, r19	; 0x01
    1a64:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a66:	ce 01       	movw	r24, r28
    1a68:	89 5d       	subi	r24, 0xD9	; 217
    1a6a:	9d 4f       	sbci	r25, 0xFD	; 253
    1a6c:	fc 01       	movw	r30, r24
    1a6e:	80 81       	ld	r24, Z
    1a70:	91 81       	ldd	r25, Z+1	; 0x01
    1a72:	89 2b       	or	r24, r25
    1a74:	a1 f6       	brne	.-88     	; 0x1a1e <__stack+0x91f>
    1a76:	2c c0       	rjmp	.+88     	; 0x1ad0 <__stack+0x9d1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a78:	8e 01       	movw	r16, r28
    1a7a:	09 5d       	subi	r16, 0xD9	; 217
    1a7c:	1d 4f       	sbci	r17, 0xFD	; 253
    1a7e:	ce 01       	movw	r24, r28
    1a80:	8d 5d       	subi	r24, 0xDD	; 221
    1a82:	9d 4f       	sbci	r25, 0xFD	; 253
    1a84:	fc 01       	movw	r30, r24
    1a86:	60 81       	ld	r22, Z
    1a88:	71 81       	ldd	r23, Z+1	; 0x01
    1a8a:	82 81       	ldd	r24, Z+2	; 0x02
    1a8c:	93 81       	ldd	r25, Z+3	; 0x03
    1a8e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    1a92:	dc 01       	movw	r26, r24
    1a94:	cb 01       	movw	r24, r22
    1a96:	f8 01       	movw	r30, r16
    1a98:	91 83       	std	Z+1, r25	; 0x01
    1a9a:	80 83       	st	Z, r24
    1a9c:	ce 01       	movw	r24, r28
    1a9e:	85 5d       	subi	r24, 0xD5	; 213
    1aa0:	9d 4f       	sbci	r25, 0xFD	; 253
    1aa2:	9e 01       	movw	r18, r28
    1aa4:	29 5d       	subi	r18, 0xD9	; 217
    1aa6:	3d 4f       	sbci	r19, 0xFD	; 253
    1aa8:	f9 01       	movw	r30, r18
    1aaa:	20 81       	ld	r18, Z
    1aac:	31 81       	ldd	r19, Z+1	; 0x01
    1aae:	fc 01       	movw	r30, r24
    1ab0:	31 83       	std	Z+1, r19	; 0x01
    1ab2:	20 83       	st	Z, r18
    1ab4:	ce 01       	movw	r24, r28
    1ab6:	85 5d       	subi	r24, 0xD5	; 213
    1ab8:	9d 4f       	sbci	r25, 0xFD	; 253
    1aba:	fc 01       	movw	r30, r24
    1abc:	80 81       	ld	r24, Z
    1abe:	91 81       	ldd	r25, Z+1	; 0x01
    1ac0:	01 97       	sbiw	r24, 0x01	; 1
    1ac2:	f1 f7       	brne	.-4      	; 0x1ac0 <__stack+0x9c1>
    1ac4:	9e 01       	movw	r18, r28
    1ac6:	25 5d       	subi	r18, 0xD5	; 213
    1ac8:	3d 4f       	sbci	r19, 0xFD	; 253
    1aca:	f9 01       	movw	r30, r18
    1acc:	91 83       	std	Z+1, r25	; 0x01
    1ace:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F430 T100\n");
    1ad0:	8a e1       	ldi	r24, 0x1A	; 26
    1ad2:	92 e0       	ldi	r25, 0x02	; 2
    1ad4:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    1ad8:	9e 01       	movw	r18, r28
    1ada:	2f 5b       	subi	r18, 0xBF	; 191
    1adc:	3f 4f       	sbci	r19, 0xFF	; 255
    1ade:	80 e0       	ldi	r24, 0x00	; 0
    1ae0:	90 e0       	ldi	r25, 0x00	; 0
    1ae2:	a6 e9       	ldi	r26, 0x96	; 150
    1ae4:	b3 e4       	ldi	r27, 0x43	; 67
    1ae6:	f9 01       	movw	r30, r18
    1ae8:	80 83       	st	Z, r24
    1aea:	91 83       	std	Z+1, r25	; 0x01
    1aec:	a2 83       	std	Z+2, r26	; 0x02
    1aee:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1af0:	8e 01       	movw	r16, r28
    1af2:	07 5e       	subi	r16, 0xE7	; 231
    1af4:	1d 4f       	sbci	r17, 0xFD	; 253
    1af6:	ce 01       	movw	r24, r28
    1af8:	8f 5b       	subi	r24, 0xBF	; 191
    1afa:	9f 4f       	sbci	r25, 0xFF	; 255
    1afc:	20 e0       	ldi	r18, 0x00	; 0
    1afe:	30 e0       	ldi	r19, 0x00	; 0
    1b00:	4a e7       	ldi	r20, 0x7A	; 122
    1b02:	55 e4       	ldi	r21, 0x45	; 69
    1b04:	fc 01       	movw	r30, r24
    1b06:	60 81       	ld	r22, Z
    1b08:	71 81       	ldd	r23, Z+1	; 0x01
    1b0a:	82 81       	ldd	r24, Z+2	; 0x02
    1b0c:	93 81       	ldd	r25, Z+3	; 0x03
    1b0e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    1b12:	dc 01       	movw	r26, r24
    1b14:	cb 01       	movw	r24, r22
    1b16:	f8 01       	movw	r30, r16
    1b18:	80 83       	st	Z, r24
    1b1a:	91 83       	std	Z+1, r25	; 0x01
    1b1c:	a2 83       	std	Z+2, r26	; 0x02
    1b1e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b20:	ce 01       	movw	r24, r28
    1b22:	87 5e       	subi	r24, 0xE7	; 231
    1b24:	9d 4f       	sbci	r25, 0xFD	; 253
    1b26:	20 e0       	ldi	r18, 0x00	; 0
    1b28:	30 e0       	ldi	r19, 0x00	; 0
    1b2a:	40 e8       	ldi	r20, 0x80	; 128
    1b2c:	5f e3       	ldi	r21, 0x3F	; 63
    1b2e:	fc 01       	movw	r30, r24
    1b30:	60 81       	ld	r22, Z
    1b32:	71 81       	ldd	r23, Z+1	; 0x01
    1b34:	82 81       	ldd	r24, Z+2	; 0x02
    1b36:	93 81       	ldd	r25, Z+3	; 0x03
    1b38:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    1b3c:	88 23       	and	r24, r24
    1b3e:	4c f4       	brge	.+18     	; 0x1b52 <__stack+0xa53>
		__ticks = 1;
    1b40:	ce 01       	movw	r24, r28
    1b42:	83 5e       	subi	r24, 0xE3	; 227
    1b44:	9d 4f       	sbci	r25, 0xFD	; 253
    1b46:	21 e0       	ldi	r18, 0x01	; 1
    1b48:	30 e0       	ldi	r19, 0x00	; 0
    1b4a:	fc 01       	movw	r30, r24
    1b4c:	31 83       	std	Z+1, r19	; 0x01
    1b4e:	20 83       	st	Z, r18
    1b50:	6d c0       	rjmp	.+218    	; 0x1c2c <__stack+0xb2d>
	else if (__tmp > 65535)
    1b52:	ce 01       	movw	r24, r28
    1b54:	87 5e       	subi	r24, 0xE7	; 231
    1b56:	9d 4f       	sbci	r25, 0xFD	; 253
    1b58:	20 e0       	ldi	r18, 0x00	; 0
    1b5a:	3f ef       	ldi	r19, 0xFF	; 255
    1b5c:	4f e7       	ldi	r20, 0x7F	; 127
    1b5e:	57 e4       	ldi	r21, 0x47	; 71
    1b60:	fc 01       	movw	r30, r24
    1b62:	60 81       	ld	r22, Z
    1b64:	71 81       	ldd	r23, Z+1	; 0x01
    1b66:	82 81       	ldd	r24, Z+2	; 0x02
    1b68:	93 81       	ldd	r25, Z+3	; 0x03
    1b6a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    1b6e:	18 16       	cp	r1, r24
    1b70:	0c f0       	brlt	.+2      	; 0x1b74 <__stack+0xa75>
    1b72:	4a c0       	rjmp	.+148    	; 0x1c08 <__stack+0xb09>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b74:	ce 01       	movw	r24, r28
    1b76:	8f 5b       	subi	r24, 0xBF	; 191
    1b78:	9f 4f       	sbci	r25, 0xFF	; 255
    1b7a:	20 e0       	ldi	r18, 0x00	; 0
    1b7c:	30 e0       	ldi	r19, 0x00	; 0
    1b7e:	40 e2       	ldi	r20, 0x20	; 32
    1b80:	51 e4       	ldi	r21, 0x41	; 65
    1b82:	fc 01       	movw	r30, r24
    1b84:	60 81       	ld	r22, Z
    1b86:	71 81       	ldd	r23, Z+1	; 0x01
    1b88:	82 81       	ldd	r24, Z+2	; 0x02
    1b8a:	93 81       	ldd	r25, Z+3	; 0x03
    1b8c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    1b90:	dc 01       	movw	r26, r24
    1b92:	cb 01       	movw	r24, r22
    1b94:	8e 01       	movw	r16, r28
    1b96:	03 5e       	subi	r16, 0xE3	; 227
    1b98:	1d 4f       	sbci	r17, 0xFD	; 253
    1b9a:	bc 01       	movw	r22, r24
    1b9c:	cd 01       	movw	r24, r26
    1b9e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    1ba2:	dc 01       	movw	r26, r24
    1ba4:	cb 01       	movw	r24, r22
    1ba6:	f8 01       	movw	r30, r16
    1ba8:	91 83       	std	Z+1, r25	; 0x01
    1baa:	80 83       	st	Z, r24
    1bac:	24 c0       	rjmp	.+72     	; 0x1bf6 <__stack+0xaf7>
    1bae:	ce 01       	movw	r24, r28
    1bb0:	81 5e       	subi	r24, 0xE1	; 225
    1bb2:	9d 4f       	sbci	r25, 0xFD	; 253
    1bb4:	20 e9       	ldi	r18, 0x90	; 144
    1bb6:	31 e0       	ldi	r19, 0x01	; 1
    1bb8:	fc 01       	movw	r30, r24
    1bba:	31 83       	std	Z+1, r19	; 0x01
    1bbc:	20 83       	st	Z, r18
    1bbe:	ce 01       	movw	r24, r28
    1bc0:	81 5e       	subi	r24, 0xE1	; 225
    1bc2:	9d 4f       	sbci	r25, 0xFD	; 253
    1bc4:	fc 01       	movw	r30, r24
    1bc6:	80 81       	ld	r24, Z
    1bc8:	91 81       	ldd	r25, Z+1	; 0x01
    1bca:	01 97       	sbiw	r24, 0x01	; 1
    1bcc:	f1 f7       	brne	.-4      	; 0x1bca <__stack+0xacb>
    1bce:	9e 01       	movw	r18, r28
    1bd0:	21 5e       	subi	r18, 0xE1	; 225
    1bd2:	3d 4f       	sbci	r19, 0xFD	; 253
    1bd4:	f9 01       	movw	r30, r18
    1bd6:	91 83       	std	Z+1, r25	; 0x01
    1bd8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bda:	ce 01       	movw	r24, r28
    1bdc:	83 5e       	subi	r24, 0xE3	; 227
    1bde:	9d 4f       	sbci	r25, 0xFD	; 253
    1be0:	9e 01       	movw	r18, r28
    1be2:	23 5e       	subi	r18, 0xE3	; 227
    1be4:	3d 4f       	sbci	r19, 0xFD	; 253
    1be6:	f9 01       	movw	r30, r18
    1be8:	20 81       	ld	r18, Z
    1bea:	31 81       	ldd	r19, Z+1	; 0x01
    1bec:	21 50       	subi	r18, 0x01	; 1
    1bee:	31 09       	sbc	r19, r1
    1bf0:	fc 01       	movw	r30, r24
    1bf2:	31 83       	std	Z+1, r19	; 0x01
    1bf4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bf6:	ce 01       	movw	r24, r28
    1bf8:	83 5e       	subi	r24, 0xE3	; 227
    1bfa:	9d 4f       	sbci	r25, 0xFD	; 253
    1bfc:	fc 01       	movw	r30, r24
    1bfe:	80 81       	ld	r24, Z
    1c00:	91 81       	ldd	r25, Z+1	; 0x01
    1c02:	89 2b       	or	r24, r25
    1c04:	a1 f6       	brne	.-88     	; 0x1bae <__stack+0xaaf>
    1c06:	2c c0       	rjmp	.+88     	; 0x1c60 <__stack+0xb61>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c08:	8e 01       	movw	r16, r28
    1c0a:	03 5e       	subi	r16, 0xE3	; 227
    1c0c:	1d 4f       	sbci	r17, 0xFD	; 253
    1c0e:	ce 01       	movw	r24, r28
    1c10:	87 5e       	subi	r24, 0xE7	; 231
    1c12:	9d 4f       	sbci	r25, 0xFD	; 253
    1c14:	fc 01       	movw	r30, r24
    1c16:	60 81       	ld	r22, Z
    1c18:	71 81       	ldd	r23, Z+1	; 0x01
    1c1a:	82 81       	ldd	r24, Z+2	; 0x02
    1c1c:	93 81       	ldd	r25, Z+3	; 0x03
    1c1e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    1c22:	dc 01       	movw	r26, r24
    1c24:	cb 01       	movw	r24, r22
    1c26:	f8 01       	movw	r30, r16
    1c28:	91 83       	std	Z+1, r25	; 0x01
    1c2a:	80 83       	st	Z, r24
    1c2c:	ce 01       	movw	r24, r28
    1c2e:	8f 5d       	subi	r24, 0xDF	; 223
    1c30:	9d 4f       	sbci	r25, 0xFD	; 253
    1c32:	9e 01       	movw	r18, r28
    1c34:	23 5e       	subi	r18, 0xE3	; 227
    1c36:	3d 4f       	sbci	r19, 0xFD	; 253
    1c38:	f9 01       	movw	r30, r18
    1c3a:	20 81       	ld	r18, Z
    1c3c:	31 81       	ldd	r19, Z+1	; 0x01
    1c3e:	fc 01       	movw	r30, r24
    1c40:	31 83       	std	Z+1, r19	; 0x01
    1c42:	20 83       	st	Z, r18
    1c44:	ce 01       	movw	r24, r28
    1c46:	8f 5d       	subi	r24, 0xDF	; 223
    1c48:	9d 4f       	sbci	r25, 0xFD	; 253
    1c4a:	fc 01       	movw	r30, r24
    1c4c:	80 81       	ld	r24, Z
    1c4e:	91 81       	ldd	r25, Z+1	; 0x01
    1c50:	01 97       	sbiw	r24, 0x01	; 1
    1c52:	f1 f7       	brne	.-4      	; 0x1c50 <__stack+0xb51>
    1c54:	9e 01       	movw	r18, r28
    1c56:	2f 5d       	subi	r18, 0xDF	; 223
    1c58:	3d 4f       	sbci	r19, 0xFD	; 253
    1c5a:	f9 01       	movw	r30, r18
    1c5c:	91 83       	std	Z+1, r25	; 0x01
    1c5e:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F380 T100\n");
    1c60:	86 ec       	ldi	r24, 0xC6	; 198
    1c62:	91 e0       	ldi	r25, 0x01	; 1
    1c64:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    1c68:	9e 01       	movw	r18, r28
    1c6a:	2b 5b       	subi	r18, 0xBB	; 187
    1c6c:	3f 4f       	sbci	r19, 0xFF	; 255
    1c6e:	80 e0       	ldi	r24, 0x00	; 0
    1c70:	90 e0       	ldi	r25, 0x00	; 0
    1c72:	a8 e4       	ldi	r26, 0x48	; 72
    1c74:	b3 e4       	ldi	r27, 0x43	; 67
    1c76:	f9 01       	movw	r30, r18
    1c78:	80 83       	st	Z, r24
    1c7a:	91 83       	std	Z+1, r25	; 0x01
    1c7c:	a2 83       	std	Z+2, r26	; 0x02
    1c7e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1c80:	8e 01       	movw	r16, r28
    1c82:	01 5f       	subi	r16, 0xF1	; 241
    1c84:	1d 4f       	sbci	r17, 0xFD	; 253
    1c86:	ce 01       	movw	r24, r28
    1c88:	8b 5b       	subi	r24, 0xBB	; 187
    1c8a:	9f 4f       	sbci	r25, 0xFF	; 255
    1c8c:	20 e0       	ldi	r18, 0x00	; 0
    1c8e:	30 e0       	ldi	r19, 0x00	; 0
    1c90:	4a e7       	ldi	r20, 0x7A	; 122
    1c92:	55 e4       	ldi	r21, 0x45	; 69
    1c94:	fc 01       	movw	r30, r24
    1c96:	60 81       	ld	r22, Z
    1c98:	71 81       	ldd	r23, Z+1	; 0x01
    1c9a:	82 81       	ldd	r24, Z+2	; 0x02
    1c9c:	93 81       	ldd	r25, Z+3	; 0x03
    1c9e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    1ca2:	dc 01       	movw	r26, r24
    1ca4:	cb 01       	movw	r24, r22
    1ca6:	f8 01       	movw	r30, r16
    1ca8:	80 83       	st	Z, r24
    1caa:	91 83       	std	Z+1, r25	; 0x01
    1cac:	a2 83       	std	Z+2, r26	; 0x02
    1cae:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1cb0:	ce 01       	movw	r24, r28
    1cb2:	81 5f       	subi	r24, 0xF1	; 241
    1cb4:	9d 4f       	sbci	r25, 0xFD	; 253
    1cb6:	20 e0       	ldi	r18, 0x00	; 0
    1cb8:	30 e0       	ldi	r19, 0x00	; 0
    1cba:	40 e8       	ldi	r20, 0x80	; 128
    1cbc:	5f e3       	ldi	r21, 0x3F	; 63
    1cbe:	fc 01       	movw	r30, r24
    1cc0:	60 81       	ld	r22, Z
    1cc2:	71 81       	ldd	r23, Z+1	; 0x01
    1cc4:	82 81       	ldd	r24, Z+2	; 0x02
    1cc6:	93 81       	ldd	r25, Z+3	; 0x03
    1cc8:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    1ccc:	88 23       	and	r24, r24
    1cce:	4c f4       	brge	.+18     	; 0x1ce2 <__stack+0xbe3>
		__ticks = 1;
    1cd0:	ce 01       	movw	r24, r28
    1cd2:	8d 5e       	subi	r24, 0xED	; 237
    1cd4:	9d 4f       	sbci	r25, 0xFD	; 253
    1cd6:	21 e0       	ldi	r18, 0x01	; 1
    1cd8:	30 e0       	ldi	r19, 0x00	; 0
    1cda:	fc 01       	movw	r30, r24
    1cdc:	31 83       	std	Z+1, r19	; 0x01
    1cde:	20 83       	st	Z, r18
    1ce0:	6d c0       	rjmp	.+218    	; 0x1dbc <__stack+0xcbd>
	else if (__tmp > 65535)
    1ce2:	ce 01       	movw	r24, r28
    1ce4:	81 5f       	subi	r24, 0xF1	; 241
    1ce6:	9d 4f       	sbci	r25, 0xFD	; 253
    1ce8:	20 e0       	ldi	r18, 0x00	; 0
    1cea:	3f ef       	ldi	r19, 0xFF	; 255
    1cec:	4f e7       	ldi	r20, 0x7F	; 127
    1cee:	57 e4       	ldi	r21, 0x47	; 71
    1cf0:	fc 01       	movw	r30, r24
    1cf2:	60 81       	ld	r22, Z
    1cf4:	71 81       	ldd	r23, Z+1	; 0x01
    1cf6:	82 81       	ldd	r24, Z+2	; 0x02
    1cf8:	93 81       	ldd	r25, Z+3	; 0x03
    1cfa:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    1cfe:	18 16       	cp	r1, r24
    1d00:	0c f0       	brlt	.+2      	; 0x1d04 <__stack+0xc05>
    1d02:	4a c0       	rjmp	.+148    	; 0x1d98 <__stack+0xc99>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d04:	ce 01       	movw	r24, r28
    1d06:	8b 5b       	subi	r24, 0xBB	; 187
    1d08:	9f 4f       	sbci	r25, 0xFF	; 255
    1d0a:	20 e0       	ldi	r18, 0x00	; 0
    1d0c:	30 e0       	ldi	r19, 0x00	; 0
    1d0e:	40 e2       	ldi	r20, 0x20	; 32
    1d10:	51 e4       	ldi	r21, 0x41	; 65
    1d12:	fc 01       	movw	r30, r24
    1d14:	60 81       	ld	r22, Z
    1d16:	71 81       	ldd	r23, Z+1	; 0x01
    1d18:	82 81       	ldd	r24, Z+2	; 0x02
    1d1a:	93 81       	ldd	r25, Z+3	; 0x03
    1d1c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    1d20:	dc 01       	movw	r26, r24
    1d22:	cb 01       	movw	r24, r22
    1d24:	8e 01       	movw	r16, r28
    1d26:	0d 5e       	subi	r16, 0xED	; 237
    1d28:	1d 4f       	sbci	r17, 0xFD	; 253
    1d2a:	bc 01       	movw	r22, r24
    1d2c:	cd 01       	movw	r24, r26
    1d2e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    1d32:	dc 01       	movw	r26, r24
    1d34:	cb 01       	movw	r24, r22
    1d36:	f8 01       	movw	r30, r16
    1d38:	91 83       	std	Z+1, r25	; 0x01
    1d3a:	80 83       	st	Z, r24
    1d3c:	24 c0       	rjmp	.+72     	; 0x1d86 <__stack+0xc87>
    1d3e:	ce 01       	movw	r24, r28
    1d40:	8b 5e       	subi	r24, 0xEB	; 235
    1d42:	9d 4f       	sbci	r25, 0xFD	; 253
    1d44:	20 e9       	ldi	r18, 0x90	; 144
    1d46:	31 e0       	ldi	r19, 0x01	; 1
    1d48:	fc 01       	movw	r30, r24
    1d4a:	31 83       	std	Z+1, r19	; 0x01
    1d4c:	20 83       	st	Z, r18
    1d4e:	ce 01       	movw	r24, r28
    1d50:	8b 5e       	subi	r24, 0xEB	; 235
    1d52:	9d 4f       	sbci	r25, 0xFD	; 253
    1d54:	fc 01       	movw	r30, r24
    1d56:	80 81       	ld	r24, Z
    1d58:	91 81       	ldd	r25, Z+1	; 0x01
    1d5a:	01 97       	sbiw	r24, 0x01	; 1
    1d5c:	f1 f7       	brne	.-4      	; 0x1d5a <__stack+0xc5b>
    1d5e:	9e 01       	movw	r18, r28
    1d60:	2b 5e       	subi	r18, 0xEB	; 235
    1d62:	3d 4f       	sbci	r19, 0xFD	; 253
    1d64:	f9 01       	movw	r30, r18
    1d66:	91 83       	std	Z+1, r25	; 0x01
    1d68:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d6a:	ce 01       	movw	r24, r28
    1d6c:	8d 5e       	subi	r24, 0xED	; 237
    1d6e:	9d 4f       	sbci	r25, 0xFD	; 253
    1d70:	9e 01       	movw	r18, r28
    1d72:	2d 5e       	subi	r18, 0xED	; 237
    1d74:	3d 4f       	sbci	r19, 0xFD	; 253
    1d76:	f9 01       	movw	r30, r18
    1d78:	20 81       	ld	r18, Z
    1d7a:	31 81       	ldd	r19, Z+1	; 0x01
    1d7c:	21 50       	subi	r18, 0x01	; 1
    1d7e:	31 09       	sbc	r19, r1
    1d80:	fc 01       	movw	r30, r24
    1d82:	31 83       	std	Z+1, r19	; 0x01
    1d84:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d86:	ce 01       	movw	r24, r28
    1d88:	8d 5e       	subi	r24, 0xED	; 237
    1d8a:	9d 4f       	sbci	r25, 0xFD	; 253
    1d8c:	fc 01       	movw	r30, r24
    1d8e:	80 81       	ld	r24, Z
    1d90:	91 81       	ldd	r25, Z+1	; 0x01
    1d92:	89 2b       	or	r24, r25
    1d94:	a1 f6       	brne	.-88     	; 0x1d3e <__stack+0xc3f>
    1d96:	2c c0       	rjmp	.+88     	; 0x1df0 <__stack+0xcf1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d98:	8e 01       	movw	r16, r28
    1d9a:	0d 5e       	subi	r16, 0xED	; 237
    1d9c:	1d 4f       	sbci	r17, 0xFD	; 253
    1d9e:	ce 01       	movw	r24, r28
    1da0:	81 5f       	subi	r24, 0xF1	; 241
    1da2:	9d 4f       	sbci	r25, 0xFD	; 253
    1da4:	fc 01       	movw	r30, r24
    1da6:	60 81       	ld	r22, Z
    1da8:	71 81       	ldd	r23, Z+1	; 0x01
    1daa:	82 81       	ldd	r24, Z+2	; 0x02
    1dac:	93 81       	ldd	r25, Z+3	; 0x03
    1dae:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    1db2:	dc 01       	movw	r26, r24
    1db4:	cb 01       	movw	r24, r22
    1db6:	f8 01       	movw	r30, r16
    1db8:	91 83       	std	Z+1, r25	; 0x01
    1dba:	80 83       	st	Z, r24
    1dbc:	ce 01       	movw	r24, r28
    1dbe:	89 5e       	subi	r24, 0xE9	; 233
    1dc0:	9d 4f       	sbci	r25, 0xFD	; 253
    1dc2:	9e 01       	movw	r18, r28
    1dc4:	2d 5e       	subi	r18, 0xED	; 237
    1dc6:	3d 4f       	sbci	r19, 0xFD	; 253
    1dc8:	f9 01       	movw	r30, r18
    1dca:	20 81       	ld	r18, Z
    1dcc:	31 81       	ldd	r19, Z+1	; 0x01
    1dce:	fc 01       	movw	r30, r24
    1dd0:	31 83       	std	Z+1, r19	; 0x01
    1dd2:	20 83       	st	Z, r18
    1dd4:	ce 01       	movw	r24, r28
    1dd6:	89 5e       	subi	r24, 0xE9	; 233
    1dd8:	9d 4f       	sbci	r25, 0xFD	; 253
    1dda:	fc 01       	movw	r30, r24
    1ddc:	80 81       	ld	r24, Z
    1dde:	91 81       	ldd	r25, Z+1	; 0x01
    1de0:	01 97       	sbiw	r24, 0x01	; 1
    1de2:	f1 f7       	brne	.-4      	; 0x1de0 <__stack+0xce1>
    1de4:	9e 01       	movw	r18, r28
    1de6:	29 5e       	subi	r18, 0xE9	; 233
    1de8:	3d 4f       	sbci	r19, 0xFD	; 253
    1dea:	f9 01       	movw	r30, r18
    1dec:	91 83       	std	Z+1, r25	; 0x01
    1dee:	80 83       	st	Z, r24
			_delay_ms(200);
			to_uARM("M2210 F660 T80\n");
    1df0:	8b e2       	ldi	r24, 0x2B	; 43
    1df2:	92 e0       	ldi	r25, 0x02	; 2
    1df4:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    1df8:	9e 01       	movw	r18, r28
    1dfa:	27 5b       	subi	r18, 0xB7	; 183
    1dfc:	3f 4f       	sbci	r19, 0xFF	; 255
    1dfe:	80 e0       	ldi	r24, 0x00	; 0
    1e00:	90 e0       	ldi	r25, 0x00	; 0
    1e02:	a8 e4       	ldi	r26, 0x48	; 72
    1e04:	b3 e4       	ldi	r27, 0x43	; 67
    1e06:	f9 01       	movw	r30, r18
    1e08:	80 83       	st	Z, r24
    1e0a:	91 83       	std	Z+1, r25	; 0x01
    1e0c:	a2 83       	std	Z+2, r26	; 0x02
    1e0e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1e10:	8e 01       	movw	r16, r28
    1e12:	0b 5f       	subi	r16, 0xFB	; 251
    1e14:	1d 4f       	sbci	r17, 0xFD	; 253
    1e16:	ce 01       	movw	r24, r28
    1e18:	87 5b       	subi	r24, 0xB7	; 183
    1e1a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e1c:	20 e0       	ldi	r18, 0x00	; 0
    1e1e:	30 e0       	ldi	r19, 0x00	; 0
    1e20:	4a e7       	ldi	r20, 0x7A	; 122
    1e22:	55 e4       	ldi	r21, 0x45	; 69
    1e24:	fc 01       	movw	r30, r24
    1e26:	60 81       	ld	r22, Z
    1e28:	71 81       	ldd	r23, Z+1	; 0x01
    1e2a:	82 81       	ldd	r24, Z+2	; 0x02
    1e2c:	93 81       	ldd	r25, Z+3	; 0x03
    1e2e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    1e32:	dc 01       	movw	r26, r24
    1e34:	cb 01       	movw	r24, r22
    1e36:	f8 01       	movw	r30, r16
    1e38:	80 83       	st	Z, r24
    1e3a:	91 83       	std	Z+1, r25	; 0x01
    1e3c:	a2 83       	std	Z+2, r26	; 0x02
    1e3e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e40:	ce 01       	movw	r24, r28
    1e42:	8b 5f       	subi	r24, 0xFB	; 251
    1e44:	9d 4f       	sbci	r25, 0xFD	; 253
    1e46:	20 e0       	ldi	r18, 0x00	; 0
    1e48:	30 e0       	ldi	r19, 0x00	; 0
    1e4a:	40 e8       	ldi	r20, 0x80	; 128
    1e4c:	5f e3       	ldi	r21, 0x3F	; 63
    1e4e:	fc 01       	movw	r30, r24
    1e50:	60 81       	ld	r22, Z
    1e52:	71 81       	ldd	r23, Z+1	; 0x01
    1e54:	82 81       	ldd	r24, Z+2	; 0x02
    1e56:	93 81       	ldd	r25, Z+3	; 0x03
    1e58:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    1e5c:	88 23       	and	r24, r24
    1e5e:	4c f4       	brge	.+18     	; 0x1e72 <__stack+0xd73>
		__ticks = 1;
    1e60:	ce 01       	movw	r24, r28
    1e62:	87 5f       	subi	r24, 0xF7	; 247
    1e64:	9d 4f       	sbci	r25, 0xFD	; 253
    1e66:	21 e0       	ldi	r18, 0x01	; 1
    1e68:	30 e0       	ldi	r19, 0x00	; 0
    1e6a:	fc 01       	movw	r30, r24
    1e6c:	31 83       	std	Z+1, r19	; 0x01
    1e6e:	20 83       	st	Z, r18
    1e70:	6d c0       	rjmp	.+218    	; 0x1f4c <__stack+0xe4d>
	else if (__tmp > 65535)
    1e72:	ce 01       	movw	r24, r28
    1e74:	8b 5f       	subi	r24, 0xFB	; 251
    1e76:	9d 4f       	sbci	r25, 0xFD	; 253
    1e78:	20 e0       	ldi	r18, 0x00	; 0
    1e7a:	3f ef       	ldi	r19, 0xFF	; 255
    1e7c:	4f e7       	ldi	r20, 0x7F	; 127
    1e7e:	57 e4       	ldi	r21, 0x47	; 71
    1e80:	fc 01       	movw	r30, r24
    1e82:	60 81       	ld	r22, Z
    1e84:	71 81       	ldd	r23, Z+1	; 0x01
    1e86:	82 81       	ldd	r24, Z+2	; 0x02
    1e88:	93 81       	ldd	r25, Z+3	; 0x03
    1e8a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    1e8e:	18 16       	cp	r1, r24
    1e90:	0c f0       	brlt	.+2      	; 0x1e94 <__stack+0xd95>
    1e92:	4a c0       	rjmp	.+148    	; 0x1f28 <__stack+0xe29>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e94:	ce 01       	movw	r24, r28
    1e96:	87 5b       	subi	r24, 0xB7	; 183
    1e98:	9f 4f       	sbci	r25, 0xFF	; 255
    1e9a:	20 e0       	ldi	r18, 0x00	; 0
    1e9c:	30 e0       	ldi	r19, 0x00	; 0
    1e9e:	40 e2       	ldi	r20, 0x20	; 32
    1ea0:	51 e4       	ldi	r21, 0x41	; 65
    1ea2:	fc 01       	movw	r30, r24
    1ea4:	60 81       	ld	r22, Z
    1ea6:	71 81       	ldd	r23, Z+1	; 0x01
    1ea8:	82 81       	ldd	r24, Z+2	; 0x02
    1eaa:	93 81       	ldd	r25, Z+3	; 0x03
    1eac:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    1eb0:	dc 01       	movw	r26, r24
    1eb2:	cb 01       	movw	r24, r22
    1eb4:	8e 01       	movw	r16, r28
    1eb6:	07 5f       	subi	r16, 0xF7	; 247
    1eb8:	1d 4f       	sbci	r17, 0xFD	; 253
    1eba:	bc 01       	movw	r22, r24
    1ebc:	cd 01       	movw	r24, r26
    1ebe:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    1ec2:	dc 01       	movw	r26, r24
    1ec4:	cb 01       	movw	r24, r22
    1ec6:	f8 01       	movw	r30, r16
    1ec8:	91 83       	std	Z+1, r25	; 0x01
    1eca:	80 83       	st	Z, r24
    1ecc:	24 c0       	rjmp	.+72     	; 0x1f16 <__stack+0xe17>
    1ece:	ce 01       	movw	r24, r28
    1ed0:	85 5f       	subi	r24, 0xF5	; 245
    1ed2:	9d 4f       	sbci	r25, 0xFD	; 253
    1ed4:	20 e9       	ldi	r18, 0x90	; 144
    1ed6:	31 e0       	ldi	r19, 0x01	; 1
    1ed8:	fc 01       	movw	r30, r24
    1eda:	31 83       	std	Z+1, r19	; 0x01
    1edc:	20 83       	st	Z, r18
    1ede:	ce 01       	movw	r24, r28
    1ee0:	85 5f       	subi	r24, 0xF5	; 245
    1ee2:	9d 4f       	sbci	r25, 0xFD	; 253
    1ee4:	fc 01       	movw	r30, r24
    1ee6:	80 81       	ld	r24, Z
    1ee8:	91 81       	ldd	r25, Z+1	; 0x01
    1eea:	01 97       	sbiw	r24, 0x01	; 1
    1eec:	f1 f7       	brne	.-4      	; 0x1eea <__stack+0xdeb>
    1eee:	9e 01       	movw	r18, r28
    1ef0:	25 5f       	subi	r18, 0xF5	; 245
    1ef2:	3d 4f       	sbci	r19, 0xFD	; 253
    1ef4:	f9 01       	movw	r30, r18
    1ef6:	91 83       	std	Z+1, r25	; 0x01
    1ef8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1efa:	ce 01       	movw	r24, r28
    1efc:	87 5f       	subi	r24, 0xF7	; 247
    1efe:	9d 4f       	sbci	r25, 0xFD	; 253
    1f00:	9e 01       	movw	r18, r28
    1f02:	27 5f       	subi	r18, 0xF7	; 247
    1f04:	3d 4f       	sbci	r19, 0xFD	; 253
    1f06:	f9 01       	movw	r30, r18
    1f08:	20 81       	ld	r18, Z
    1f0a:	31 81       	ldd	r19, Z+1	; 0x01
    1f0c:	21 50       	subi	r18, 0x01	; 1
    1f0e:	31 09       	sbc	r19, r1
    1f10:	fc 01       	movw	r30, r24
    1f12:	31 83       	std	Z+1, r19	; 0x01
    1f14:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f16:	ce 01       	movw	r24, r28
    1f18:	87 5f       	subi	r24, 0xF7	; 247
    1f1a:	9d 4f       	sbci	r25, 0xFD	; 253
    1f1c:	fc 01       	movw	r30, r24
    1f1e:	80 81       	ld	r24, Z
    1f20:	91 81       	ldd	r25, Z+1	; 0x01
    1f22:	89 2b       	or	r24, r25
    1f24:	a1 f6       	brne	.-88     	; 0x1ece <__stack+0xdcf>
    1f26:	2c c0       	rjmp	.+88     	; 0x1f80 <__stack+0xe81>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f28:	8e 01       	movw	r16, r28
    1f2a:	07 5f       	subi	r16, 0xF7	; 247
    1f2c:	1d 4f       	sbci	r17, 0xFD	; 253
    1f2e:	ce 01       	movw	r24, r28
    1f30:	8b 5f       	subi	r24, 0xFB	; 251
    1f32:	9d 4f       	sbci	r25, 0xFD	; 253
    1f34:	fc 01       	movw	r30, r24
    1f36:	60 81       	ld	r22, Z
    1f38:	71 81       	ldd	r23, Z+1	; 0x01
    1f3a:	82 81       	ldd	r24, Z+2	; 0x02
    1f3c:	93 81       	ldd	r25, Z+3	; 0x03
    1f3e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    1f42:	dc 01       	movw	r26, r24
    1f44:	cb 01       	movw	r24, r22
    1f46:	f8 01       	movw	r30, r16
    1f48:	91 83       	std	Z+1, r25	; 0x01
    1f4a:	80 83       	st	Z, r24
    1f4c:	ce 01       	movw	r24, r28
    1f4e:	83 5f       	subi	r24, 0xF3	; 243
    1f50:	9d 4f       	sbci	r25, 0xFD	; 253
    1f52:	9e 01       	movw	r18, r28
    1f54:	27 5f       	subi	r18, 0xF7	; 247
    1f56:	3d 4f       	sbci	r19, 0xFD	; 253
    1f58:	f9 01       	movw	r30, r18
    1f5a:	20 81       	ld	r18, Z
    1f5c:	31 81       	ldd	r19, Z+1	; 0x01
    1f5e:	fc 01       	movw	r30, r24
    1f60:	31 83       	std	Z+1, r19	; 0x01
    1f62:	20 83       	st	Z, r18
    1f64:	ce 01       	movw	r24, r28
    1f66:	83 5f       	subi	r24, 0xF3	; 243
    1f68:	9d 4f       	sbci	r25, 0xFD	; 253
    1f6a:	fc 01       	movw	r30, r24
    1f6c:	80 81       	ld	r24, Z
    1f6e:	91 81       	ldd	r25, Z+1	; 0x01
    1f70:	01 97       	sbiw	r24, 0x01	; 1
    1f72:	f1 f7       	brne	.-4      	; 0x1f70 <__stack+0xe71>
    1f74:	9e 01       	movw	r18, r28
    1f76:	23 5f       	subi	r18, 0xF3	; 243
    1f78:	3d 4f       	sbci	r19, 0xFD	; 253
    1f7a:	f9 01       	movw	r30, r18
    1f7c:	91 83       	std	Z+1, r25	; 0x01
    1f7e:	80 83       	st	Z, r24
			_delay_ms(200);
			to_uARM("M2210 F760 T50\n");
    1f80:	8b e3       	ldi	r24, 0x3B	; 59
    1f82:	92 e0       	ldi	r25, 0x02	; 2
    1f84:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    1f88:	9e 01       	movw	r18, r28
    1f8a:	23 5b       	subi	r18, 0xB3	; 179
    1f8c:	3f 4f       	sbci	r19, 0xFF	; 255
    1f8e:	80 e0       	ldi	r24, 0x00	; 0
    1f90:	90 e0       	ldi	r25, 0x00	; 0
    1f92:	a6 e1       	ldi	r26, 0x16	; 22
    1f94:	b3 e4       	ldi	r27, 0x43	; 67
    1f96:	f9 01       	movw	r30, r18
    1f98:	80 83       	st	Z, r24
    1f9a:	91 83       	std	Z+1, r25	; 0x01
    1f9c:	a2 83       	std	Z+2, r26	; 0x02
    1f9e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1fa0:	8e 01       	movw	r16, r28
    1fa2:	05 50       	subi	r16, 0x05	; 5
    1fa4:	1e 4f       	sbci	r17, 0xFE	; 254
    1fa6:	ce 01       	movw	r24, r28
    1fa8:	83 5b       	subi	r24, 0xB3	; 179
    1faa:	9f 4f       	sbci	r25, 0xFF	; 255
    1fac:	20 e0       	ldi	r18, 0x00	; 0
    1fae:	30 e0       	ldi	r19, 0x00	; 0
    1fb0:	4a e7       	ldi	r20, 0x7A	; 122
    1fb2:	55 e4       	ldi	r21, 0x45	; 69
    1fb4:	fc 01       	movw	r30, r24
    1fb6:	60 81       	ld	r22, Z
    1fb8:	71 81       	ldd	r23, Z+1	; 0x01
    1fba:	82 81       	ldd	r24, Z+2	; 0x02
    1fbc:	93 81       	ldd	r25, Z+3	; 0x03
    1fbe:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    1fc2:	dc 01       	movw	r26, r24
    1fc4:	cb 01       	movw	r24, r22
    1fc6:	f8 01       	movw	r30, r16
    1fc8:	80 83       	st	Z, r24
    1fca:	91 83       	std	Z+1, r25	; 0x01
    1fcc:	a2 83       	std	Z+2, r26	; 0x02
    1fce:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1fd0:	ce 01       	movw	r24, r28
    1fd2:	85 50       	subi	r24, 0x05	; 5
    1fd4:	9e 4f       	sbci	r25, 0xFE	; 254
    1fd6:	20 e0       	ldi	r18, 0x00	; 0
    1fd8:	30 e0       	ldi	r19, 0x00	; 0
    1fda:	40 e8       	ldi	r20, 0x80	; 128
    1fdc:	5f e3       	ldi	r21, 0x3F	; 63
    1fde:	fc 01       	movw	r30, r24
    1fe0:	60 81       	ld	r22, Z
    1fe2:	71 81       	ldd	r23, Z+1	; 0x01
    1fe4:	82 81       	ldd	r24, Z+2	; 0x02
    1fe6:	93 81       	ldd	r25, Z+3	; 0x03
    1fe8:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    1fec:	88 23       	and	r24, r24
    1fee:	4c f4       	brge	.+18     	; 0x2002 <__stack+0xf03>
		__ticks = 1;
    1ff0:	ce 01       	movw	r24, r28
    1ff2:	81 50       	subi	r24, 0x01	; 1
    1ff4:	9e 4f       	sbci	r25, 0xFE	; 254
    1ff6:	21 e0       	ldi	r18, 0x01	; 1
    1ff8:	30 e0       	ldi	r19, 0x00	; 0
    1ffa:	fc 01       	movw	r30, r24
    1ffc:	31 83       	std	Z+1, r19	; 0x01
    1ffe:	20 83       	st	Z, r18
    2000:	6d c0       	rjmp	.+218    	; 0x20dc <__stack+0xfdd>
	else if (__tmp > 65535)
    2002:	ce 01       	movw	r24, r28
    2004:	85 50       	subi	r24, 0x05	; 5
    2006:	9e 4f       	sbci	r25, 0xFE	; 254
    2008:	20 e0       	ldi	r18, 0x00	; 0
    200a:	3f ef       	ldi	r19, 0xFF	; 255
    200c:	4f e7       	ldi	r20, 0x7F	; 127
    200e:	57 e4       	ldi	r21, 0x47	; 71
    2010:	fc 01       	movw	r30, r24
    2012:	60 81       	ld	r22, Z
    2014:	71 81       	ldd	r23, Z+1	; 0x01
    2016:	82 81       	ldd	r24, Z+2	; 0x02
    2018:	93 81       	ldd	r25, Z+3	; 0x03
    201a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    201e:	18 16       	cp	r1, r24
    2020:	0c f0       	brlt	.+2      	; 0x2024 <__stack+0xf25>
    2022:	4a c0       	rjmp	.+148    	; 0x20b8 <__stack+0xfb9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2024:	ce 01       	movw	r24, r28
    2026:	83 5b       	subi	r24, 0xB3	; 179
    2028:	9f 4f       	sbci	r25, 0xFF	; 255
    202a:	20 e0       	ldi	r18, 0x00	; 0
    202c:	30 e0       	ldi	r19, 0x00	; 0
    202e:	40 e2       	ldi	r20, 0x20	; 32
    2030:	51 e4       	ldi	r21, 0x41	; 65
    2032:	fc 01       	movw	r30, r24
    2034:	60 81       	ld	r22, Z
    2036:	71 81       	ldd	r23, Z+1	; 0x01
    2038:	82 81       	ldd	r24, Z+2	; 0x02
    203a:	93 81       	ldd	r25, Z+3	; 0x03
    203c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    2040:	dc 01       	movw	r26, r24
    2042:	cb 01       	movw	r24, r22
    2044:	8e 01       	movw	r16, r28
    2046:	01 50       	subi	r16, 0x01	; 1
    2048:	1e 4f       	sbci	r17, 0xFE	; 254
    204a:	bc 01       	movw	r22, r24
    204c:	cd 01       	movw	r24, r26
    204e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    2052:	dc 01       	movw	r26, r24
    2054:	cb 01       	movw	r24, r22
    2056:	f8 01       	movw	r30, r16
    2058:	91 83       	std	Z+1, r25	; 0x01
    205a:	80 83       	st	Z, r24
    205c:	24 c0       	rjmp	.+72     	; 0x20a6 <__stack+0xfa7>
    205e:	ce 01       	movw	r24, r28
    2060:	8f 5f       	subi	r24, 0xFF	; 255
    2062:	9d 4f       	sbci	r25, 0xFD	; 253
    2064:	20 e9       	ldi	r18, 0x90	; 144
    2066:	31 e0       	ldi	r19, 0x01	; 1
    2068:	fc 01       	movw	r30, r24
    206a:	31 83       	std	Z+1, r19	; 0x01
    206c:	20 83       	st	Z, r18
    206e:	ce 01       	movw	r24, r28
    2070:	8f 5f       	subi	r24, 0xFF	; 255
    2072:	9d 4f       	sbci	r25, 0xFD	; 253
    2074:	fc 01       	movw	r30, r24
    2076:	80 81       	ld	r24, Z
    2078:	91 81       	ldd	r25, Z+1	; 0x01
    207a:	01 97       	sbiw	r24, 0x01	; 1
    207c:	f1 f7       	brne	.-4      	; 0x207a <__stack+0xf7b>
    207e:	9e 01       	movw	r18, r28
    2080:	2f 5f       	subi	r18, 0xFF	; 255
    2082:	3d 4f       	sbci	r19, 0xFD	; 253
    2084:	f9 01       	movw	r30, r18
    2086:	91 83       	std	Z+1, r25	; 0x01
    2088:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    208a:	ce 01       	movw	r24, r28
    208c:	81 50       	subi	r24, 0x01	; 1
    208e:	9e 4f       	sbci	r25, 0xFE	; 254
    2090:	9e 01       	movw	r18, r28
    2092:	21 50       	subi	r18, 0x01	; 1
    2094:	3e 4f       	sbci	r19, 0xFE	; 254
    2096:	f9 01       	movw	r30, r18
    2098:	20 81       	ld	r18, Z
    209a:	31 81       	ldd	r19, Z+1	; 0x01
    209c:	21 50       	subi	r18, 0x01	; 1
    209e:	31 09       	sbc	r19, r1
    20a0:	fc 01       	movw	r30, r24
    20a2:	31 83       	std	Z+1, r19	; 0x01
    20a4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20a6:	ce 01       	movw	r24, r28
    20a8:	81 50       	subi	r24, 0x01	; 1
    20aa:	9e 4f       	sbci	r25, 0xFE	; 254
    20ac:	fc 01       	movw	r30, r24
    20ae:	80 81       	ld	r24, Z
    20b0:	91 81       	ldd	r25, Z+1	; 0x01
    20b2:	89 2b       	or	r24, r25
    20b4:	a1 f6       	brne	.-88     	; 0x205e <__stack+0xf5f>
    20b6:	2c c0       	rjmp	.+88     	; 0x2110 <__stack+0x1011>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20b8:	8e 01       	movw	r16, r28
    20ba:	01 50       	subi	r16, 0x01	; 1
    20bc:	1e 4f       	sbci	r17, 0xFE	; 254
    20be:	ce 01       	movw	r24, r28
    20c0:	85 50       	subi	r24, 0x05	; 5
    20c2:	9e 4f       	sbci	r25, 0xFE	; 254
    20c4:	fc 01       	movw	r30, r24
    20c6:	60 81       	ld	r22, Z
    20c8:	71 81       	ldd	r23, Z+1	; 0x01
    20ca:	82 81       	ldd	r24, Z+2	; 0x02
    20cc:	93 81       	ldd	r25, Z+3	; 0x03
    20ce:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    20d2:	dc 01       	movw	r26, r24
    20d4:	cb 01       	movw	r24, r22
    20d6:	f8 01       	movw	r30, r16
    20d8:	91 83       	std	Z+1, r25	; 0x01
    20da:	80 83       	st	Z, r24
    20dc:	ce 01       	movw	r24, r28
    20de:	8d 5f       	subi	r24, 0xFD	; 253
    20e0:	9d 4f       	sbci	r25, 0xFD	; 253
    20e2:	9e 01       	movw	r18, r28
    20e4:	21 50       	subi	r18, 0x01	; 1
    20e6:	3e 4f       	sbci	r19, 0xFE	; 254
    20e8:	f9 01       	movw	r30, r18
    20ea:	20 81       	ld	r18, Z
    20ec:	31 81       	ldd	r19, Z+1	; 0x01
    20ee:	fc 01       	movw	r30, r24
    20f0:	31 83       	std	Z+1, r19	; 0x01
    20f2:	20 83       	st	Z, r18
    20f4:	ce 01       	movw	r24, r28
    20f6:	8d 5f       	subi	r24, 0xFD	; 253
    20f8:	9d 4f       	sbci	r25, 0xFD	; 253
    20fa:	fc 01       	movw	r30, r24
    20fc:	80 81       	ld	r24, Z
    20fe:	91 81       	ldd	r25, Z+1	; 0x01
    2100:	01 97       	sbiw	r24, 0x01	; 1
    2102:	f1 f7       	brne	.-4      	; 0x2100 <__stack+0x1001>
    2104:	9e 01       	movw	r18, r28
    2106:	2d 5f       	subi	r18, 0xFD	; 253
    2108:	3d 4f       	sbci	r19, 0xFD	; 253
    210a:	f9 01       	movw	r30, r18
    210c:	91 83       	std	Z+1, r25	; 0x01
    210e:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F860 T100\n");
    2110:	8b e4       	ldi	r24, 0x4B	; 75
    2112:	92 e0       	ldi	r25, 0x02	; 2
    2114:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    2118:	9e 01       	movw	r18, r28
    211a:	2f 5a       	subi	r18, 0xAF	; 175
    211c:	3f 4f       	sbci	r19, 0xFF	; 255
    211e:	80 e0       	ldi	r24, 0x00	; 0
    2120:	90 e0       	ldi	r25, 0x00	; 0
    2122:	a6 e9       	ldi	r26, 0x96	; 150
    2124:	b3 e4       	ldi	r27, 0x43	; 67
    2126:	f9 01       	movw	r30, r18
    2128:	80 83       	st	Z, r24
    212a:	91 83       	std	Z+1, r25	; 0x01
    212c:	a2 83       	std	Z+2, r26	; 0x02
    212e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2130:	8e 01       	movw	r16, r28
    2132:	0f 50       	subi	r16, 0x0F	; 15
    2134:	1e 4f       	sbci	r17, 0xFE	; 254
    2136:	ce 01       	movw	r24, r28
    2138:	8f 5a       	subi	r24, 0xAF	; 175
    213a:	9f 4f       	sbci	r25, 0xFF	; 255
    213c:	20 e0       	ldi	r18, 0x00	; 0
    213e:	30 e0       	ldi	r19, 0x00	; 0
    2140:	4a e7       	ldi	r20, 0x7A	; 122
    2142:	55 e4       	ldi	r21, 0x45	; 69
    2144:	fc 01       	movw	r30, r24
    2146:	60 81       	ld	r22, Z
    2148:	71 81       	ldd	r23, Z+1	; 0x01
    214a:	82 81       	ldd	r24, Z+2	; 0x02
    214c:	93 81       	ldd	r25, Z+3	; 0x03
    214e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    2152:	dc 01       	movw	r26, r24
    2154:	cb 01       	movw	r24, r22
    2156:	f8 01       	movw	r30, r16
    2158:	80 83       	st	Z, r24
    215a:	91 83       	std	Z+1, r25	; 0x01
    215c:	a2 83       	std	Z+2, r26	; 0x02
    215e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2160:	ce 01       	movw	r24, r28
    2162:	8f 50       	subi	r24, 0x0F	; 15
    2164:	9e 4f       	sbci	r25, 0xFE	; 254
    2166:	20 e0       	ldi	r18, 0x00	; 0
    2168:	30 e0       	ldi	r19, 0x00	; 0
    216a:	40 e8       	ldi	r20, 0x80	; 128
    216c:	5f e3       	ldi	r21, 0x3F	; 63
    216e:	fc 01       	movw	r30, r24
    2170:	60 81       	ld	r22, Z
    2172:	71 81       	ldd	r23, Z+1	; 0x01
    2174:	82 81       	ldd	r24, Z+2	; 0x02
    2176:	93 81       	ldd	r25, Z+3	; 0x03
    2178:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    217c:	88 23       	and	r24, r24
    217e:	4c f4       	brge	.+18     	; 0x2192 <__stack+0x1093>
		__ticks = 1;
    2180:	ce 01       	movw	r24, r28
    2182:	8b 50       	subi	r24, 0x0B	; 11
    2184:	9e 4f       	sbci	r25, 0xFE	; 254
    2186:	21 e0       	ldi	r18, 0x01	; 1
    2188:	30 e0       	ldi	r19, 0x00	; 0
    218a:	fc 01       	movw	r30, r24
    218c:	31 83       	std	Z+1, r19	; 0x01
    218e:	20 83       	st	Z, r18
    2190:	6d c0       	rjmp	.+218    	; 0x226c <__stack+0x116d>
	else if (__tmp > 65535)
    2192:	ce 01       	movw	r24, r28
    2194:	8f 50       	subi	r24, 0x0F	; 15
    2196:	9e 4f       	sbci	r25, 0xFE	; 254
    2198:	20 e0       	ldi	r18, 0x00	; 0
    219a:	3f ef       	ldi	r19, 0xFF	; 255
    219c:	4f e7       	ldi	r20, 0x7F	; 127
    219e:	57 e4       	ldi	r21, 0x47	; 71
    21a0:	fc 01       	movw	r30, r24
    21a2:	60 81       	ld	r22, Z
    21a4:	71 81       	ldd	r23, Z+1	; 0x01
    21a6:	82 81       	ldd	r24, Z+2	; 0x02
    21a8:	93 81       	ldd	r25, Z+3	; 0x03
    21aa:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    21ae:	18 16       	cp	r1, r24
    21b0:	0c f0       	brlt	.+2      	; 0x21b4 <__stack+0x10b5>
    21b2:	4a c0       	rjmp	.+148    	; 0x2248 <__stack+0x1149>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21b4:	ce 01       	movw	r24, r28
    21b6:	8f 5a       	subi	r24, 0xAF	; 175
    21b8:	9f 4f       	sbci	r25, 0xFF	; 255
    21ba:	20 e0       	ldi	r18, 0x00	; 0
    21bc:	30 e0       	ldi	r19, 0x00	; 0
    21be:	40 e2       	ldi	r20, 0x20	; 32
    21c0:	51 e4       	ldi	r21, 0x41	; 65
    21c2:	fc 01       	movw	r30, r24
    21c4:	60 81       	ld	r22, Z
    21c6:	71 81       	ldd	r23, Z+1	; 0x01
    21c8:	82 81       	ldd	r24, Z+2	; 0x02
    21ca:	93 81       	ldd	r25, Z+3	; 0x03
    21cc:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    21d0:	dc 01       	movw	r26, r24
    21d2:	cb 01       	movw	r24, r22
    21d4:	8e 01       	movw	r16, r28
    21d6:	0b 50       	subi	r16, 0x0B	; 11
    21d8:	1e 4f       	sbci	r17, 0xFE	; 254
    21da:	bc 01       	movw	r22, r24
    21dc:	cd 01       	movw	r24, r26
    21de:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    21e2:	dc 01       	movw	r26, r24
    21e4:	cb 01       	movw	r24, r22
    21e6:	f8 01       	movw	r30, r16
    21e8:	91 83       	std	Z+1, r25	; 0x01
    21ea:	80 83       	st	Z, r24
    21ec:	24 c0       	rjmp	.+72     	; 0x2236 <__stack+0x1137>
    21ee:	ce 01       	movw	r24, r28
    21f0:	89 50       	subi	r24, 0x09	; 9
    21f2:	9e 4f       	sbci	r25, 0xFE	; 254
    21f4:	20 e9       	ldi	r18, 0x90	; 144
    21f6:	31 e0       	ldi	r19, 0x01	; 1
    21f8:	fc 01       	movw	r30, r24
    21fa:	31 83       	std	Z+1, r19	; 0x01
    21fc:	20 83       	st	Z, r18
    21fe:	ce 01       	movw	r24, r28
    2200:	89 50       	subi	r24, 0x09	; 9
    2202:	9e 4f       	sbci	r25, 0xFE	; 254
    2204:	fc 01       	movw	r30, r24
    2206:	80 81       	ld	r24, Z
    2208:	91 81       	ldd	r25, Z+1	; 0x01
    220a:	01 97       	sbiw	r24, 0x01	; 1
    220c:	f1 f7       	brne	.-4      	; 0x220a <__stack+0x110b>
    220e:	9e 01       	movw	r18, r28
    2210:	29 50       	subi	r18, 0x09	; 9
    2212:	3e 4f       	sbci	r19, 0xFE	; 254
    2214:	f9 01       	movw	r30, r18
    2216:	91 83       	std	Z+1, r25	; 0x01
    2218:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    221a:	ce 01       	movw	r24, r28
    221c:	8b 50       	subi	r24, 0x0B	; 11
    221e:	9e 4f       	sbci	r25, 0xFE	; 254
    2220:	9e 01       	movw	r18, r28
    2222:	2b 50       	subi	r18, 0x0B	; 11
    2224:	3e 4f       	sbci	r19, 0xFE	; 254
    2226:	f9 01       	movw	r30, r18
    2228:	20 81       	ld	r18, Z
    222a:	31 81       	ldd	r19, Z+1	; 0x01
    222c:	21 50       	subi	r18, 0x01	; 1
    222e:	31 09       	sbc	r19, r1
    2230:	fc 01       	movw	r30, r24
    2232:	31 83       	std	Z+1, r19	; 0x01
    2234:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2236:	ce 01       	movw	r24, r28
    2238:	8b 50       	subi	r24, 0x0B	; 11
    223a:	9e 4f       	sbci	r25, 0xFE	; 254
    223c:	fc 01       	movw	r30, r24
    223e:	80 81       	ld	r24, Z
    2240:	91 81       	ldd	r25, Z+1	; 0x01
    2242:	89 2b       	or	r24, r25
    2244:	a1 f6       	brne	.-88     	; 0x21ee <__stack+0x10ef>
    2246:	2c c0       	rjmp	.+88     	; 0x22a0 <__stack+0x11a1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2248:	8e 01       	movw	r16, r28
    224a:	0b 50       	subi	r16, 0x0B	; 11
    224c:	1e 4f       	sbci	r17, 0xFE	; 254
    224e:	ce 01       	movw	r24, r28
    2250:	8f 50       	subi	r24, 0x0F	; 15
    2252:	9e 4f       	sbci	r25, 0xFE	; 254
    2254:	fc 01       	movw	r30, r24
    2256:	60 81       	ld	r22, Z
    2258:	71 81       	ldd	r23, Z+1	; 0x01
    225a:	82 81       	ldd	r24, Z+2	; 0x02
    225c:	93 81       	ldd	r25, Z+3	; 0x03
    225e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    2262:	dc 01       	movw	r26, r24
    2264:	cb 01       	movw	r24, r22
    2266:	f8 01       	movw	r30, r16
    2268:	91 83       	std	Z+1, r25	; 0x01
    226a:	80 83       	st	Z, r24
    226c:	ce 01       	movw	r24, r28
    226e:	87 50       	subi	r24, 0x07	; 7
    2270:	9e 4f       	sbci	r25, 0xFE	; 254
    2272:	9e 01       	movw	r18, r28
    2274:	2b 50       	subi	r18, 0x0B	; 11
    2276:	3e 4f       	sbci	r19, 0xFE	; 254
    2278:	f9 01       	movw	r30, r18
    227a:	20 81       	ld	r18, Z
    227c:	31 81       	ldd	r19, Z+1	; 0x01
    227e:	fc 01       	movw	r30, r24
    2280:	31 83       	std	Z+1, r19	; 0x01
    2282:	20 83       	st	Z, r18
    2284:	ce 01       	movw	r24, r28
    2286:	87 50       	subi	r24, 0x07	; 7
    2288:	9e 4f       	sbci	r25, 0xFE	; 254
    228a:	fc 01       	movw	r30, r24
    228c:	80 81       	ld	r24, Z
    228e:	91 81       	ldd	r25, Z+1	; 0x01
    2290:	01 97       	sbiw	r24, 0x01	; 1
    2292:	f1 f7       	brne	.-4      	; 0x2290 <__stack+0x1191>
    2294:	9e 01       	movw	r18, r28
    2296:	27 50       	subi	r18, 0x07	; 7
    2298:	3e 4f       	sbci	r19, 0xFE	; 254
    229a:	f9 01       	movw	r30, r18
    229c:	91 83       	std	Z+1, r25	; 0x01
    229e:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F700 T80\n");
    22a0:	8c e5       	ldi	r24, 0x5C	; 92
    22a2:	92 e0       	ldi	r25, 0x02	; 2
    22a4:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    22a8:	9e 01       	movw	r18, r28
    22aa:	2b 5a       	subi	r18, 0xAB	; 171
    22ac:	3f 4f       	sbci	r19, 0xFF	; 255
    22ae:	80 e0       	ldi	r24, 0x00	; 0
    22b0:	90 e0       	ldi	r25, 0x00	; 0
    22b2:	a6 e1       	ldi	r26, 0x16	; 22
    22b4:	b3 e4       	ldi	r27, 0x43	; 67
    22b6:	f9 01       	movw	r30, r18
    22b8:	80 83       	st	Z, r24
    22ba:	91 83       	std	Z+1, r25	; 0x01
    22bc:	a2 83       	std	Z+2, r26	; 0x02
    22be:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    22c0:	8e 01       	movw	r16, r28
    22c2:	09 51       	subi	r16, 0x19	; 25
    22c4:	1e 4f       	sbci	r17, 0xFE	; 254
    22c6:	ce 01       	movw	r24, r28
    22c8:	8b 5a       	subi	r24, 0xAB	; 171
    22ca:	9f 4f       	sbci	r25, 0xFF	; 255
    22cc:	20 e0       	ldi	r18, 0x00	; 0
    22ce:	30 e0       	ldi	r19, 0x00	; 0
    22d0:	4a e7       	ldi	r20, 0x7A	; 122
    22d2:	55 e4       	ldi	r21, 0x45	; 69
    22d4:	fc 01       	movw	r30, r24
    22d6:	60 81       	ld	r22, Z
    22d8:	71 81       	ldd	r23, Z+1	; 0x01
    22da:	82 81       	ldd	r24, Z+2	; 0x02
    22dc:	93 81       	ldd	r25, Z+3	; 0x03
    22de:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    22e2:	dc 01       	movw	r26, r24
    22e4:	cb 01       	movw	r24, r22
    22e6:	f8 01       	movw	r30, r16
    22e8:	80 83       	st	Z, r24
    22ea:	91 83       	std	Z+1, r25	; 0x01
    22ec:	a2 83       	std	Z+2, r26	; 0x02
    22ee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    22f0:	ce 01       	movw	r24, r28
    22f2:	89 51       	subi	r24, 0x19	; 25
    22f4:	9e 4f       	sbci	r25, 0xFE	; 254
    22f6:	20 e0       	ldi	r18, 0x00	; 0
    22f8:	30 e0       	ldi	r19, 0x00	; 0
    22fa:	40 e8       	ldi	r20, 0x80	; 128
    22fc:	5f e3       	ldi	r21, 0x3F	; 63
    22fe:	fc 01       	movw	r30, r24
    2300:	60 81       	ld	r22, Z
    2302:	71 81       	ldd	r23, Z+1	; 0x01
    2304:	82 81       	ldd	r24, Z+2	; 0x02
    2306:	93 81       	ldd	r25, Z+3	; 0x03
    2308:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    230c:	88 23       	and	r24, r24
    230e:	4c f4       	brge	.+18     	; 0x2322 <__stack+0x1223>
		__ticks = 1;
    2310:	ce 01       	movw	r24, r28
    2312:	85 51       	subi	r24, 0x15	; 21
    2314:	9e 4f       	sbci	r25, 0xFE	; 254
    2316:	21 e0       	ldi	r18, 0x01	; 1
    2318:	30 e0       	ldi	r19, 0x00	; 0
    231a:	fc 01       	movw	r30, r24
    231c:	31 83       	std	Z+1, r19	; 0x01
    231e:	20 83       	st	Z, r18
    2320:	6d c0       	rjmp	.+218    	; 0x23fc <__stack+0x12fd>
	else if (__tmp > 65535)
    2322:	ce 01       	movw	r24, r28
    2324:	89 51       	subi	r24, 0x19	; 25
    2326:	9e 4f       	sbci	r25, 0xFE	; 254
    2328:	20 e0       	ldi	r18, 0x00	; 0
    232a:	3f ef       	ldi	r19, 0xFF	; 255
    232c:	4f e7       	ldi	r20, 0x7F	; 127
    232e:	57 e4       	ldi	r21, 0x47	; 71
    2330:	fc 01       	movw	r30, r24
    2332:	60 81       	ld	r22, Z
    2334:	71 81       	ldd	r23, Z+1	; 0x01
    2336:	82 81       	ldd	r24, Z+2	; 0x02
    2338:	93 81       	ldd	r25, Z+3	; 0x03
    233a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    233e:	18 16       	cp	r1, r24
    2340:	0c f0       	brlt	.+2      	; 0x2344 <__stack+0x1245>
    2342:	4a c0       	rjmp	.+148    	; 0x23d8 <__stack+0x12d9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2344:	ce 01       	movw	r24, r28
    2346:	8b 5a       	subi	r24, 0xAB	; 171
    2348:	9f 4f       	sbci	r25, 0xFF	; 255
    234a:	20 e0       	ldi	r18, 0x00	; 0
    234c:	30 e0       	ldi	r19, 0x00	; 0
    234e:	40 e2       	ldi	r20, 0x20	; 32
    2350:	51 e4       	ldi	r21, 0x41	; 65
    2352:	fc 01       	movw	r30, r24
    2354:	60 81       	ld	r22, Z
    2356:	71 81       	ldd	r23, Z+1	; 0x01
    2358:	82 81       	ldd	r24, Z+2	; 0x02
    235a:	93 81       	ldd	r25, Z+3	; 0x03
    235c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    2360:	dc 01       	movw	r26, r24
    2362:	cb 01       	movw	r24, r22
    2364:	8e 01       	movw	r16, r28
    2366:	05 51       	subi	r16, 0x15	; 21
    2368:	1e 4f       	sbci	r17, 0xFE	; 254
    236a:	bc 01       	movw	r22, r24
    236c:	cd 01       	movw	r24, r26
    236e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    2372:	dc 01       	movw	r26, r24
    2374:	cb 01       	movw	r24, r22
    2376:	f8 01       	movw	r30, r16
    2378:	91 83       	std	Z+1, r25	; 0x01
    237a:	80 83       	st	Z, r24
    237c:	24 c0       	rjmp	.+72     	; 0x23c6 <__stack+0x12c7>
    237e:	ce 01       	movw	r24, r28
    2380:	83 51       	subi	r24, 0x13	; 19
    2382:	9e 4f       	sbci	r25, 0xFE	; 254
    2384:	20 e9       	ldi	r18, 0x90	; 144
    2386:	31 e0       	ldi	r19, 0x01	; 1
    2388:	fc 01       	movw	r30, r24
    238a:	31 83       	std	Z+1, r19	; 0x01
    238c:	20 83       	st	Z, r18
    238e:	ce 01       	movw	r24, r28
    2390:	83 51       	subi	r24, 0x13	; 19
    2392:	9e 4f       	sbci	r25, 0xFE	; 254
    2394:	fc 01       	movw	r30, r24
    2396:	80 81       	ld	r24, Z
    2398:	91 81       	ldd	r25, Z+1	; 0x01
    239a:	01 97       	sbiw	r24, 0x01	; 1
    239c:	f1 f7       	brne	.-4      	; 0x239a <__stack+0x129b>
    239e:	9e 01       	movw	r18, r28
    23a0:	23 51       	subi	r18, 0x13	; 19
    23a2:	3e 4f       	sbci	r19, 0xFE	; 254
    23a4:	f9 01       	movw	r30, r18
    23a6:	91 83       	std	Z+1, r25	; 0x01
    23a8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23aa:	ce 01       	movw	r24, r28
    23ac:	85 51       	subi	r24, 0x15	; 21
    23ae:	9e 4f       	sbci	r25, 0xFE	; 254
    23b0:	9e 01       	movw	r18, r28
    23b2:	25 51       	subi	r18, 0x15	; 21
    23b4:	3e 4f       	sbci	r19, 0xFE	; 254
    23b6:	f9 01       	movw	r30, r18
    23b8:	20 81       	ld	r18, Z
    23ba:	31 81       	ldd	r19, Z+1	; 0x01
    23bc:	21 50       	subi	r18, 0x01	; 1
    23be:	31 09       	sbc	r19, r1
    23c0:	fc 01       	movw	r30, r24
    23c2:	31 83       	std	Z+1, r19	; 0x01
    23c4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23c6:	ce 01       	movw	r24, r28
    23c8:	85 51       	subi	r24, 0x15	; 21
    23ca:	9e 4f       	sbci	r25, 0xFE	; 254
    23cc:	fc 01       	movw	r30, r24
    23ce:	80 81       	ld	r24, Z
    23d0:	91 81       	ldd	r25, Z+1	; 0x01
    23d2:	89 2b       	or	r24, r25
    23d4:	a1 f6       	brne	.-88     	; 0x237e <__stack+0x127f>
    23d6:	2c c0       	rjmp	.+88     	; 0x2430 <__stack+0x1331>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23d8:	8e 01       	movw	r16, r28
    23da:	05 51       	subi	r16, 0x15	; 21
    23dc:	1e 4f       	sbci	r17, 0xFE	; 254
    23de:	ce 01       	movw	r24, r28
    23e0:	89 51       	subi	r24, 0x19	; 25
    23e2:	9e 4f       	sbci	r25, 0xFE	; 254
    23e4:	fc 01       	movw	r30, r24
    23e6:	60 81       	ld	r22, Z
    23e8:	71 81       	ldd	r23, Z+1	; 0x01
    23ea:	82 81       	ldd	r24, Z+2	; 0x02
    23ec:	93 81       	ldd	r25, Z+3	; 0x03
    23ee:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    23f2:	dc 01       	movw	r26, r24
    23f4:	cb 01       	movw	r24, r22
    23f6:	f8 01       	movw	r30, r16
    23f8:	91 83       	std	Z+1, r25	; 0x01
    23fa:	80 83       	st	Z, r24
    23fc:	ce 01       	movw	r24, r28
    23fe:	81 51       	subi	r24, 0x11	; 17
    2400:	9e 4f       	sbci	r25, 0xFE	; 254
    2402:	9e 01       	movw	r18, r28
    2404:	25 51       	subi	r18, 0x15	; 21
    2406:	3e 4f       	sbci	r19, 0xFE	; 254
    2408:	f9 01       	movw	r30, r18
    240a:	20 81       	ld	r18, Z
    240c:	31 81       	ldd	r19, Z+1	; 0x01
    240e:	fc 01       	movw	r30, r24
    2410:	31 83       	std	Z+1, r19	; 0x01
    2412:	20 83       	st	Z, r18
    2414:	ce 01       	movw	r24, r28
    2416:	81 51       	subi	r24, 0x11	; 17
    2418:	9e 4f       	sbci	r25, 0xFE	; 254
    241a:	fc 01       	movw	r30, r24
    241c:	80 81       	ld	r24, Z
    241e:	91 81       	ldd	r25, Z+1	; 0x01
    2420:	01 97       	sbiw	r24, 0x01	; 1
    2422:	f1 f7       	brne	.-4      	; 0x2420 <__stack+0x1321>
    2424:	9e 01       	movw	r18, r28
    2426:	21 51       	subi	r18, 0x11	; 17
    2428:	3e 4f       	sbci	r19, 0xFE	; 254
    242a:	f9 01       	movw	r30, r18
    242c:	91 83       	std	Z+1, r25	; 0x01
    242e:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F760 T50\n");
    2430:	8b e3       	ldi	r24, 0x3B	; 59
    2432:	92 e0       	ldi	r25, 0x02	; 2
    2434:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    2438:	9e 01       	movw	r18, r28
    243a:	27 5a       	subi	r18, 0xA7	; 167
    243c:	3f 4f       	sbci	r19, 0xFF	; 255
    243e:	80 e0       	ldi	r24, 0x00	; 0
    2440:	90 e0       	ldi	r25, 0x00	; 0
    2442:	af ea       	ldi	r26, 0xAF	; 175
    2444:	b3 e4       	ldi	r27, 0x43	; 67
    2446:	f9 01       	movw	r30, r18
    2448:	80 83       	st	Z, r24
    244a:	91 83       	std	Z+1, r25	; 0x01
    244c:	a2 83       	std	Z+2, r26	; 0x02
    244e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2450:	8e 01       	movw	r16, r28
    2452:	03 52       	subi	r16, 0x23	; 35
    2454:	1e 4f       	sbci	r17, 0xFE	; 254
    2456:	ce 01       	movw	r24, r28
    2458:	87 5a       	subi	r24, 0xA7	; 167
    245a:	9f 4f       	sbci	r25, 0xFF	; 255
    245c:	20 e0       	ldi	r18, 0x00	; 0
    245e:	30 e0       	ldi	r19, 0x00	; 0
    2460:	4a e7       	ldi	r20, 0x7A	; 122
    2462:	55 e4       	ldi	r21, 0x45	; 69
    2464:	fc 01       	movw	r30, r24
    2466:	60 81       	ld	r22, Z
    2468:	71 81       	ldd	r23, Z+1	; 0x01
    246a:	82 81       	ldd	r24, Z+2	; 0x02
    246c:	93 81       	ldd	r25, Z+3	; 0x03
    246e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    2472:	dc 01       	movw	r26, r24
    2474:	cb 01       	movw	r24, r22
    2476:	f8 01       	movw	r30, r16
    2478:	80 83       	st	Z, r24
    247a:	91 83       	std	Z+1, r25	; 0x01
    247c:	a2 83       	std	Z+2, r26	; 0x02
    247e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2480:	ce 01       	movw	r24, r28
    2482:	83 52       	subi	r24, 0x23	; 35
    2484:	9e 4f       	sbci	r25, 0xFE	; 254
    2486:	20 e0       	ldi	r18, 0x00	; 0
    2488:	30 e0       	ldi	r19, 0x00	; 0
    248a:	40 e8       	ldi	r20, 0x80	; 128
    248c:	5f e3       	ldi	r21, 0x3F	; 63
    248e:	fc 01       	movw	r30, r24
    2490:	60 81       	ld	r22, Z
    2492:	71 81       	ldd	r23, Z+1	; 0x01
    2494:	82 81       	ldd	r24, Z+2	; 0x02
    2496:	93 81       	ldd	r25, Z+3	; 0x03
    2498:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    249c:	88 23       	and	r24, r24
    249e:	4c f4       	brge	.+18     	; 0x24b2 <__stack+0x13b3>
		__ticks = 1;
    24a0:	ce 01       	movw	r24, r28
    24a2:	8f 51       	subi	r24, 0x1F	; 31
    24a4:	9e 4f       	sbci	r25, 0xFE	; 254
    24a6:	21 e0       	ldi	r18, 0x01	; 1
    24a8:	30 e0       	ldi	r19, 0x00	; 0
    24aa:	fc 01       	movw	r30, r24
    24ac:	31 83       	std	Z+1, r19	; 0x01
    24ae:	20 83       	st	Z, r18
    24b0:	6d c0       	rjmp	.+218    	; 0x258c <__stack+0x148d>
	else if (__tmp > 65535)
    24b2:	ce 01       	movw	r24, r28
    24b4:	83 52       	subi	r24, 0x23	; 35
    24b6:	9e 4f       	sbci	r25, 0xFE	; 254
    24b8:	20 e0       	ldi	r18, 0x00	; 0
    24ba:	3f ef       	ldi	r19, 0xFF	; 255
    24bc:	4f e7       	ldi	r20, 0x7F	; 127
    24be:	57 e4       	ldi	r21, 0x47	; 71
    24c0:	fc 01       	movw	r30, r24
    24c2:	60 81       	ld	r22, Z
    24c4:	71 81       	ldd	r23, Z+1	; 0x01
    24c6:	82 81       	ldd	r24, Z+2	; 0x02
    24c8:	93 81       	ldd	r25, Z+3	; 0x03
    24ca:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    24ce:	18 16       	cp	r1, r24
    24d0:	0c f0       	brlt	.+2      	; 0x24d4 <__stack+0x13d5>
    24d2:	4a c0       	rjmp	.+148    	; 0x2568 <__stack+0x1469>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24d4:	ce 01       	movw	r24, r28
    24d6:	87 5a       	subi	r24, 0xA7	; 167
    24d8:	9f 4f       	sbci	r25, 0xFF	; 255
    24da:	20 e0       	ldi	r18, 0x00	; 0
    24dc:	30 e0       	ldi	r19, 0x00	; 0
    24de:	40 e2       	ldi	r20, 0x20	; 32
    24e0:	51 e4       	ldi	r21, 0x41	; 65
    24e2:	fc 01       	movw	r30, r24
    24e4:	60 81       	ld	r22, Z
    24e6:	71 81       	ldd	r23, Z+1	; 0x01
    24e8:	82 81       	ldd	r24, Z+2	; 0x02
    24ea:	93 81       	ldd	r25, Z+3	; 0x03
    24ec:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    24f0:	dc 01       	movw	r26, r24
    24f2:	cb 01       	movw	r24, r22
    24f4:	8e 01       	movw	r16, r28
    24f6:	0f 51       	subi	r16, 0x1F	; 31
    24f8:	1e 4f       	sbci	r17, 0xFE	; 254
    24fa:	bc 01       	movw	r22, r24
    24fc:	cd 01       	movw	r24, r26
    24fe:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    2502:	dc 01       	movw	r26, r24
    2504:	cb 01       	movw	r24, r22
    2506:	f8 01       	movw	r30, r16
    2508:	91 83       	std	Z+1, r25	; 0x01
    250a:	80 83       	st	Z, r24
    250c:	24 c0       	rjmp	.+72     	; 0x2556 <__stack+0x1457>
    250e:	ce 01       	movw	r24, r28
    2510:	8d 51       	subi	r24, 0x1D	; 29
    2512:	9e 4f       	sbci	r25, 0xFE	; 254
    2514:	20 e9       	ldi	r18, 0x90	; 144
    2516:	31 e0       	ldi	r19, 0x01	; 1
    2518:	fc 01       	movw	r30, r24
    251a:	31 83       	std	Z+1, r19	; 0x01
    251c:	20 83       	st	Z, r18
    251e:	ce 01       	movw	r24, r28
    2520:	8d 51       	subi	r24, 0x1D	; 29
    2522:	9e 4f       	sbci	r25, 0xFE	; 254
    2524:	fc 01       	movw	r30, r24
    2526:	80 81       	ld	r24, Z
    2528:	91 81       	ldd	r25, Z+1	; 0x01
    252a:	01 97       	sbiw	r24, 0x01	; 1
    252c:	f1 f7       	brne	.-4      	; 0x252a <__stack+0x142b>
    252e:	9e 01       	movw	r18, r28
    2530:	2d 51       	subi	r18, 0x1D	; 29
    2532:	3e 4f       	sbci	r19, 0xFE	; 254
    2534:	f9 01       	movw	r30, r18
    2536:	91 83       	std	Z+1, r25	; 0x01
    2538:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    253a:	ce 01       	movw	r24, r28
    253c:	8f 51       	subi	r24, 0x1F	; 31
    253e:	9e 4f       	sbci	r25, 0xFE	; 254
    2540:	9e 01       	movw	r18, r28
    2542:	2f 51       	subi	r18, 0x1F	; 31
    2544:	3e 4f       	sbci	r19, 0xFE	; 254
    2546:	f9 01       	movw	r30, r18
    2548:	20 81       	ld	r18, Z
    254a:	31 81       	ldd	r19, Z+1	; 0x01
    254c:	21 50       	subi	r18, 0x01	; 1
    254e:	31 09       	sbc	r19, r1
    2550:	fc 01       	movw	r30, r24
    2552:	31 83       	std	Z+1, r19	; 0x01
    2554:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2556:	ce 01       	movw	r24, r28
    2558:	8f 51       	subi	r24, 0x1F	; 31
    255a:	9e 4f       	sbci	r25, 0xFE	; 254
    255c:	fc 01       	movw	r30, r24
    255e:	80 81       	ld	r24, Z
    2560:	91 81       	ldd	r25, Z+1	; 0x01
    2562:	89 2b       	or	r24, r25
    2564:	a1 f6       	brne	.-88     	; 0x250e <__stack+0x140f>
    2566:	2c c0       	rjmp	.+88     	; 0x25c0 <__stack+0x14c1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2568:	8e 01       	movw	r16, r28
    256a:	0f 51       	subi	r16, 0x1F	; 31
    256c:	1e 4f       	sbci	r17, 0xFE	; 254
    256e:	ce 01       	movw	r24, r28
    2570:	83 52       	subi	r24, 0x23	; 35
    2572:	9e 4f       	sbci	r25, 0xFE	; 254
    2574:	fc 01       	movw	r30, r24
    2576:	60 81       	ld	r22, Z
    2578:	71 81       	ldd	r23, Z+1	; 0x01
    257a:	82 81       	ldd	r24, Z+2	; 0x02
    257c:	93 81       	ldd	r25, Z+3	; 0x03
    257e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    2582:	dc 01       	movw	r26, r24
    2584:	cb 01       	movw	r24, r22
    2586:	f8 01       	movw	r30, r16
    2588:	91 83       	std	Z+1, r25	; 0x01
    258a:	80 83       	st	Z, r24
    258c:	ce 01       	movw	r24, r28
    258e:	8b 51       	subi	r24, 0x1B	; 27
    2590:	9e 4f       	sbci	r25, 0xFE	; 254
    2592:	9e 01       	movw	r18, r28
    2594:	2f 51       	subi	r18, 0x1F	; 31
    2596:	3e 4f       	sbci	r19, 0xFE	; 254
    2598:	f9 01       	movw	r30, r18
    259a:	20 81       	ld	r18, Z
    259c:	31 81       	ldd	r19, Z+1	; 0x01
    259e:	fc 01       	movw	r30, r24
    25a0:	31 83       	std	Z+1, r19	; 0x01
    25a2:	20 83       	st	Z, r18
    25a4:	ce 01       	movw	r24, r28
    25a6:	8b 51       	subi	r24, 0x1B	; 27
    25a8:	9e 4f       	sbci	r25, 0xFE	; 254
    25aa:	fc 01       	movw	r30, r24
    25ac:	80 81       	ld	r24, Z
    25ae:	91 81       	ldd	r25, Z+1	; 0x01
    25b0:	01 97       	sbiw	r24, 0x01	; 1
    25b2:	f1 f7       	brne	.-4      	; 0x25b0 <__stack+0x14b1>
    25b4:	9e 01       	movw	r18, r28
    25b6:	2b 51       	subi	r18, 0x1B	; 27
    25b8:	3e 4f       	sbci	r19, 0xFE	; 254
    25ba:	f9 01       	movw	r30, r18
    25bc:	91 83       	std	Z+1, r25	; 0x01
    25be:	80 83       	st	Z, r24
			_delay_ms(350);
			to_uARM("M2210 F660 T80\n");
    25c0:	8b e2       	ldi	r24, 0x2B	; 43
    25c2:	92 e0       	ldi	r25, 0x02	; 2
    25c4:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    25c8:	9e 01       	movw	r18, r28
    25ca:	23 5a       	subi	r18, 0xA3	; 163
    25cc:	3f 4f       	sbci	r19, 0xFF	; 255
    25ce:	80 e0       	ldi	r24, 0x00	; 0
    25d0:	90 e0       	ldi	r25, 0x00	; 0
    25d2:	a6 e9       	ldi	r26, 0x96	; 150
    25d4:	b3 e4       	ldi	r27, 0x43	; 67
    25d6:	f9 01       	movw	r30, r18
    25d8:	80 83       	st	Z, r24
    25da:	91 83       	std	Z+1, r25	; 0x01
    25dc:	a2 83       	std	Z+2, r26	; 0x02
    25de:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    25e0:	8e 01       	movw	r16, r28
    25e2:	0d 52       	subi	r16, 0x2D	; 45
    25e4:	1e 4f       	sbci	r17, 0xFE	; 254
    25e6:	ce 01       	movw	r24, r28
    25e8:	83 5a       	subi	r24, 0xA3	; 163
    25ea:	9f 4f       	sbci	r25, 0xFF	; 255
    25ec:	20 e0       	ldi	r18, 0x00	; 0
    25ee:	30 e0       	ldi	r19, 0x00	; 0
    25f0:	4a e7       	ldi	r20, 0x7A	; 122
    25f2:	55 e4       	ldi	r21, 0x45	; 69
    25f4:	fc 01       	movw	r30, r24
    25f6:	60 81       	ld	r22, Z
    25f8:	71 81       	ldd	r23, Z+1	; 0x01
    25fa:	82 81       	ldd	r24, Z+2	; 0x02
    25fc:	93 81       	ldd	r25, Z+3	; 0x03
    25fe:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    2602:	dc 01       	movw	r26, r24
    2604:	cb 01       	movw	r24, r22
    2606:	f8 01       	movw	r30, r16
    2608:	80 83       	st	Z, r24
    260a:	91 83       	std	Z+1, r25	; 0x01
    260c:	a2 83       	std	Z+2, r26	; 0x02
    260e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2610:	ce 01       	movw	r24, r28
    2612:	8d 52       	subi	r24, 0x2D	; 45
    2614:	9e 4f       	sbci	r25, 0xFE	; 254
    2616:	20 e0       	ldi	r18, 0x00	; 0
    2618:	30 e0       	ldi	r19, 0x00	; 0
    261a:	40 e8       	ldi	r20, 0x80	; 128
    261c:	5f e3       	ldi	r21, 0x3F	; 63
    261e:	fc 01       	movw	r30, r24
    2620:	60 81       	ld	r22, Z
    2622:	71 81       	ldd	r23, Z+1	; 0x01
    2624:	82 81       	ldd	r24, Z+2	; 0x02
    2626:	93 81       	ldd	r25, Z+3	; 0x03
    2628:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    262c:	88 23       	and	r24, r24
    262e:	4c f4       	brge	.+18     	; 0x2642 <__stack+0x1543>
		__ticks = 1;
    2630:	ce 01       	movw	r24, r28
    2632:	89 52       	subi	r24, 0x29	; 41
    2634:	9e 4f       	sbci	r25, 0xFE	; 254
    2636:	21 e0       	ldi	r18, 0x01	; 1
    2638:	30 e0       	ldi	r19, 0x00	; 0
    263a:	fc 01       	movw	r30, r24
    263c:	31 83       	std	Z+1, r19	; 0x01
    263e:	20 83       	st	Z, r18
    2640:	6d c0       	rjmp	.+218    	; 0x271c <__stack+0x161d>
	else if (__tmp > 65535)
    2642:	ce 01       	movw	r24, r28
    2644:	8d 52       	subi	r24, 0x2D	; 45
    2646:	9e 4f       	sbci	r25, 0xFE	; 254
    2648:	20 e0       	ldi	r18, 0x00	; 0
    264a:	3f ef       	ldi	r19, 0xFF	; 255
    264c:	4f e7       	ldi	r20, 0x7F	; 127
    264e:	57 e4       	ldi	r21, 0x47	; 71
    2650:	fc 01       	movw	r30, r24
    2652:	60 81       	ld	r22, Z
    2654:	71 81       	ldd	r23, Z+1	; 0x01
    2656:	82 81       	ldd	r24, Z+2	; 0x02
    2658:	93 81       	ldd	r25, Z+3	; 0x03
    265a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    265e:	18 16       	cp	r1, r24
    2660:	0c f0       	brlt	.+2      	; 0x2664 <__stack+0x1565>
    2662:	4a c0       	rjmp	.+148    	; 0x26f8 <__stack+0x15f9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2664:	ce 01       	movw	r24, r28
    2666:	83 5a       	subi	r24, 0xA3	; 163
    2668:	9f 4f       	sbci	r25, 0xFF	; 255
    266a:	20 e0       	ldi	r18, 0x00	; 0
    266c:	30 e0       	ldi	r19, 0x00	; 0
    266e:	40 e2       	ldi	r20, 0x20	; 32
    2670:	51 e4       	ldi	r21, 0x41	; 65
    2672:	fc 01       	movw	r30, r24
    2674:	60 81       	ld	r22, Z
    2676:	71 81       	ldd	r23, Z+1	; 0x01
    2678:	82 81       	ldd	r24, Z+2	; 0x02
    267a:	93 81       	ldd	r25, Z+3	; 0x03
    267c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    2680:	dc 01       	movw	r26, r24
    2682:	cb 01       	movw	r24, r22
    2684:	8e 01       	movw	r16, r28
    2686:	09 52       	subi	r16, 0x29	; 41
    2688:	1e 4f       	sbci	r17, 0xFE	; 254
    268a:	bc 01       	movw	r22, r24
    268c:	cd 01       	movw	r24, r26
    268e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    2692:	dc 01       	movw	r26, r24
    2694:	cb 01       	movw	r24, r22
    2696:	f8 01       	movw	r30, r16
    2698:	91 83       	std	Z+1, r25	; 0x01
    269a:	80 83       	st	Z, r24
    269c:	24 c0       	rjmp	.+72     	; 0x26e6 <__stack+0x15e7>
    269e:	ce 01       	movw	r24, r28
    26a0:	87 52       	subi	r24, 0x27	; 39
    26a2:	9e 4f       	sbci	r25, 0xFE	; 254
    26a4:	20 e9       	ldi	r18, 0x90	; 144
    26a6:	31 e0       	ldi	r19, 0x01	; 1
    26a8:	fc 01       	movw	r30, r24
    26aa:	31 83       	std	Z+1, r19	; 0x01
    26ac:	20 83       	st	Z, r18
    26ae:	ce 01       	movw	r24, r28
    26b0:	87 52       	subi	r24, 0x27	; 39
    26b2:	9e 4f       	sbci	r25, 0xFE	; 254
    26b4:	fc 01       	movw	r30, r24
    26b6:	80 81       	ld	r24, Z
    26b8:	91 81       	ldd	r25, Z+1	; 0x01
    26ba:	01 97       	sbiw	r24, 0x01	; 1
    26bc:	f1 f7       	brne	.-4      	; 0x26ba <__stack+0x15bb>
    26be:	9e 01       	movw	r18, r28
    26c0:	27 52       	subi	r18, 0x27	; 39
    26c2:	3e 4f       	sbci	r19, 0xFE	; 254
    26c4:	f9 01       	movw	r30, r18
    26c6:	91 83       	std	Z+1, r25	; 0x01
    26c8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26ca:	ce 01       	movw	r24, r28
    26cc:	89 52       	subi	r24, 0x29	; 41
    26ce:	9e 4f       	sbci	r25, 0xFE	; 254
    26d0:	9e 01       	movw	r18, r28
    26d2:	29 52       	subi	r18, 0x29	; 41
    26d4:	3e 4f       	sbci	r19, 0xFE	; 254
    26d6:	f9 01       	movw	r30, r18
    26d8:	20 81       	ld	r18, Z
    26da:	31 81       	ldd	r19, Z+1	; 0x01
    26dc:	21 50       	subi	r18, 0x01	; 1
    26de:	31 09       	sbc	r19, r1
    26e0:	fc 01       	movw	r30, r24
    26e2:	31 83       	std	Z+1, r19	; 0x01
    26e4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26e6:	ce 01       	movw	r24, r28
    26e8:	89 52       	subi	r24, 0x29	; 41
    26ea:	9e 4f       	sbci	r25, 0xFE	; 254
    26ec:	fc 01       	movw	r30, r24
    26ee:	80 81       	ld	r24, Z
    26f0:	91 81       	ldd	r25, Z+1	; 0x01
    26f2:	89 2b       	or	r24, r25
    26f4:	a1 f6       	brne	.-88     	; 0x269e <__stack+0x159f>
    26f6:	2c c0       	rjmp	.+88     	; 0x2750 <__stack+0x1651>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26f8:	8e 01       	movw	r16, r28
    26fa:	09 52       	subi	r16, 0x29	; 41
    26fc:	1e 4f       	sbci	r17, 0xFE	; 254
    26fe:	ce 01       	movw	r24, r28
    2700:	8d 52       	subi	r24, 0x2D	; 45
    2702:	9e 4f       	sbci	r25, 0xFE	; 254
    2704:	fc 01       	movw	r30, r24
    2706:	60 81       	ld	r22, Z
    2708:	71 81       	ldd	r23, Z+1	; 0x01
    270a:	82 81       	ldd	r24, Z+2	; 0x02
    270c:	93 81       	ldd	r25, Z+3	; 0x03
    270e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    2712:	dc 01       	movw	r26, r24
    2714:	cb 01       	movw	r24, r22
    2716:	f8 01       	movw	r30, r16
    2718:	91 83       	std	Z+1, r25	; 0x01
    271a:	80 83       	st	Z, r24
    271c:	ce 01       	movw	r24, r28
    271e:	85 52       	subi	r24, 0x25	; 37
    2720:	9e 4f       	sbci	r25, 0xFE	; 254
    2722:	9e 01       	movw	r18, r28
    2724:	29 52       	subi	r18, 0x29	; 41
    2726:	3e 4f       	sbci	r19, 0xFE	; 254
    2728:	f9 01       	movw	r30, r18
    272a:	20 81       	ld	r18, Z
    272c:	31 81       	ldd	r19, Z+1	; 0x01
    272e:	fc 01       	movw	r30, r24
    2730:	31 83       	std	Z+1, r19	; 0x01
    2732:	20 83       	st	Z, r18
    2734:	ce 01       	movw	r24, r28
    2736:	85 52       	subi	r24, 0x25	; 37
    2738:	9e 4f       	sbci	r25, 0xFE	; 254
    273a:	fc 01       	movw	r30, r24
    273c:	80 81       	ld	r24, Z
    273e:	91 81       	ldd	r25, Z+1	; 0x01
    2740:	01 97       	sbiw	r24, 0x01	; 1
    2742:	f1 f7       	brne	.-4      	; 0x2740 <__stack+0x1641>
    2744:	9e 01       	movw	r18, r28
    2746:	25 52       	subi	r18, 0x25	; 37
    2748:	3e 4f       	sbci	r19, 0xFE	; 254
    274a:	f9 01       	movw	r30, r18
    274c:	91 83       	std	Z+1, r25	; 0x01
    274e:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F520 T80\n");
    2750:	8c e6       	ldi	r24, 0x6C	; 108
    2752:	92 e0       	ldi	r25, 0x02	; 2
    2754:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    2758:	9e 01       	movw	r18, r28
    275a:	2f 59       	subi	r18, 0x9F	; 159
    275c:	3f 4f       	sbci	r19, 0xFF	; 255
    275e:	80 e0       	ldi	r24, 0x00	; 0
    2760:	90 e0       	ldi	r25, 0x00	; 0
    2762:	a6 e1       	ldi	r26, 0x16	; 22
    2764:	b3 e4       	ldi	r27, 0x43	; 67
    2766:	f9 01       	movw	r30, r18
    2768:	80 83       	st	Z, r24
    276a:	91 83       	std	Z+1, r25	; 0x01
    276c:	a2 83       	std	Z+2, r26	; 0x02
    276e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2770:	8e 01       	movw	r16, r28
    2772:	07 53       	subi	r16, 0x37	; 55
    2774:	1e 4f       	sbci	r17, 0xFE	; 254
    2776:	ce 01       	movw	r24, r28
    2778:	8f 59       	subi	r24, 0x9F	; 159
    277a:	9f 4f       	sbci	r25, 0xFF	; 255
    277c:	20 e0       	ldi	r18, 0x00	; 0
    277e:	30 e0       	ldi	r19, 0x00	; 0
    2780:	4a e7       	ldi	r20, 0x7A	; 122
    2782:	55 e4       	ldi	r21, 0x45	; 69
    2784:	fc 01       	movw	r30, r24
    2786:	60 81       	ld	r22, Z
    2788:	71 81       	ldd	r23, Z+1	; 0x01
    278a:	82 81       	ldd	r24, Z+2	; 0x02
    278c:	93 81       	ldd	r25, Z+3	; 0x03
    278e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    2792:	dc 01       	movw	r26, r24
    2794:	cb 01       	movw	r24, r22
    2796:	f8 01       	movw	r30, r16
    2798:	80 83       	st	Z, r24
    279a:	91 83       	std	Z+1, r25	; 0x01
    279c:	a2 83       	std	Z+2, r26	; 0x02
    279e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    27a0:	ce 01       	movw	r24, r28
    27a2:	87 53       	subi	r24, 0x37	; 55
    27a4:	9e 4f       	sbci	r25, 0xFE	; 254
    27a6:	20 e0       	ldi	r18, 0x00	; 0
    27a8:	30 e0       	ldi	r19, 0x00	; 0
    27aa:	40 e8       	ldi	r20, 0x80	; 128
    27ac:	5f e3       	ldi	r21, 0x3F	; 63
    27ae:	fc 01       	movw	r30, r24
    27b0:	60 81       	ld	r22, Z
    27b2:	71 81       	ldd	r23, Z+1	; 0x01
    27b4:	82 81       	ldd	r24, Z+2	; 0x02
    27b6:	93 81       	ldd	r25, Z+3	; 0x03
    27b8:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    27bc:	88 23       	and	r24, r24
    27be:	4c f4       	brge	.+18     	; 0x27d2 <__stack+0x16d3>
		__ticks = 1;
    27c0:	ce 01       	movw	r24, r28
    27c2:	83 53       	subi	r24, 0x33	; 51
    27c4:	9e 4f       	sbci	r25, 0xFE	; 254
    27c6:	21 e0       	ldi	r18, 0x01	; 1
    27c8:	30 e0       	ldi	r19, 0x00	; 0
    27ca:	fc 01       	movw	r30, r24
    27cc:	31 83       	std	Z+1, r19	; 0x01
    27ce:	20 83       	st	Z, r18
    27d0:	6d c0       	rjmp	.+218    	; 0x28ac <__stack+0x17ad>
	else if (__tmp > 65535)
    27d2:	ce 01       	movw	r24, r28
    27d4:	87 53       	subi	r24, 0x37	; 55
    27d6:	9e 4f       	sbci	r25, 0xFE	; 254
    27d8:	20 e0       	ldi	r18, 0x00	; 0
    27da:	3f ef       	ldi	r19, 0xFF	; 255
    27dc:	4f e7       	ldi	r20, 0x7F	; 127
    27de:	57 e4       	ldi	r21, 0x47	; 71
    27e0:	fc 01       	movw	r30, r24
    27e2:	60 81       	ld	r22, Z
    27e4:	71 81       	ldd	r23, Z+1	; 0x01
    27e6:	82 81       	ldd	r24, Z+2	; 0x02
    27e8:	93 81       	ldd	r25, Z+3	; 0x03
    27ea:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    27ee:	18 16       	cp	r1, r24
    27f0:	0c f0       	brlt	.+2      	; 0x27f4 <__stack+0x16f5>
    27f2:	4a c0       	rjmp	.+148    	; 0x2888 <__stack+0x1789>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27f4:	ce 01       	movw	r24, r28
    27f6:	8f 59       	subi	r24, 0x9F	; 159
    27f8:	9f 4f       	sbci	r25, 0xFF	; 255
    27fa:	20 e0       	ldi	r18, 0x00	; 0
    27fc:	30 e0       	ldi	r19, 0x00	; 0
    27fe:	40 e2       	ldi	r20, 0x20	; 32
    2800:	51 e4       	ldi	r21, 0x41	; 65
    2802:	fc 01       	movw	r30, r24
    2804:	60 81       	ld	r22, Z
    2806:	71 81       	ldd	r23, Z+1	; 0x01
    2808:	82 81       	ldd	r24, Z+2	; 0x02
    280a:	93 81       	ldd	r25, Z+3	; 0x03
    280c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    2810:	dc 01       	movw	r26, r24
    2812:	cb 01       	movw	r24, r22
    2814:	8e 01       	movw	r16, r28
    2816:	03 53       	subi	r16, 0x33	; 51
    2818:	1e 4f       	sbci	r17, 0xFE	; 254
    281a:	bc 01       	movw	r22, r24
    281c:	cd 01       	movw	r24, r26
    281e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    2822:	dc 01       	movw	r26, r24
    2824:	cb 01       	movw	r24, r22
    2826:	f8 01       	movw	r30, r16
    2828:	91 83       	std	Z+1, r25	; 0x01
    282a:	80 83       	st	Z, r24
    282c:	24 c0       	rjmp	.+72     	; 0x2876 <__stack+0x1777>
    282e:	ce 01       	movw	r24, r28
    2830:	81 53       	subi	r24, 0x31	; 49
    2832:	9e 4f       	sbci	r25, 0xFE	; 254
    2834:	20 e9       	ldi	r18, 0x90	; 144
    2836:	31 e0       	ldi	r19, 0x01	; 1
    2838:	fc 01       	movw	r30, r24
    283a:	31 83       	std	Z+1, r19	; 0x01
    283c:	20 83       	st	Z, r18
    283e:	ce 01       	movw	r24, r28
    2840:	81 53       	subi	r24, 0x31	; 49
    2842:	9e 4f       	sbci	r25, 0xFE	; 254
    2844:	fc 01       	movw	r30, r24
    2846:	80 81       	ld	r24, Z
    2848:	91 81       	ldd	r25, Z+1	; 0x01
    284a:	01 97       	sbiw	r24, 0x01	; 1
    284c:	f1 f7       	brne	.-4      	; 0x284a <__stack+0x174b>
    284e:	9e 01       	movw	r18, r28
    2850:	21 53       	subi	r18, 0x31	; 49
    2852:	3e 4f       	sbci	r19, 0xFE	; 254
    2854:	f9 01       	movw	r30, r18
    2856:	91 83       	std	Z+1, r25	; 0x01
    2858:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    285a:	ce 01       	movw	r24, r28
    285c:	83 53       	subi	r24, 0x33	; 51
    285e:	9e 4f       	sbci	r25, 0xFE	; 254
    2860:	9e 01       	movw	r18, r28
    2862:	23 53       	subi	r18, 0x33	; 51
    2864:	3e 4f       	sbci	r19, 0xFE	; 254
    2866:	f9 01       	movw	r30, r18
    2868:	20 81       	ld	r18, Z
    286a:	31 81       	ldd	r19, Z+1	; 0x01
    286c:	21 50       	subi	r18, 0x01	; 1
    286e:	31 09       	sbc	r19, r1
    2870:	fc 01       	movw	r30, r24
    2872:	31 83       	std	Z+1, r19	; 0x01
    2874:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2876:	ce 01       	movw	r24, r28
    2878:	83 53       	subi	r24, 0x33	; 51
    287a:	9e 4f       	sbci	r25, 0xFE	; 254
    287c:	fc 01       	movw	r30, r24
    287e:	80 81       	ld	r24, Z
    2880:	91 81       	ldd	r25, Z+1	; 0x01
    2882:	89 2b       	or	r24, r25
    2884:	a1 f6       	brne	.-88     	; 0x282e <__stack+0x172f>
    2886:	2c c0       	rjmp	.+88     	; 0x28e0 <__stack+0x17e1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2888:	8e 01       	movw	r16, r28
    288a:	03 53       	subi	r16, 0x33	; 51
    288c:	1e 4f       	sbci	r17, 0xFE	; 254
    288e:	ce 01       	movw	r24, r28
    2890:	87 53       	subi	r24, 0x37	; 55
    2892:	9e 4f       	sbci	r25, 0xFE	; 254
    2894:	fc 01       	movw	r30, r24
    2896:	60 81       	ld	r22, Z
    2898:	71 81       	ldd	r23, Z+1	; 0x01
    289a:	82 81       	ldd	r24, Z+2	; 0x02
    289c:	93 81       	ldd	r25, Z+3	; 0x03
    289e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    28a2:	dc 01       	movw	r26, r24
    28a4:	cb 01       	movw	r24, r22
    28a6:	f8 01       	movw	r30, r16
    28a8:	91 83       	std	Z+1, r25	; 0x01
    28aa:	80 83       	st	Z, r24
    28ac:	ce 01       	movw	r24, r28
    28ae:	8f 52       	subi	r24, 0x2F	; 47
    28b0:	9e 4f       	sbci	r25, 0xFE	; 254
    28b2:	9e 01       	movw	r18, r28
    28b4:	23 53       	subi	r18, 0x33	; 51
    28b6:	3e 4f       	sbci	r19, 0xFE	; 254
    28b8:	f9 01       	movw	r30, r18
    28ba:	20 81       	ld	r18, Z
    28bc:	31 81       	ldd	r19, Z+1	; 0x01
    28be:	fc 01       	movw	r30, r24
    28c0:	31 83       	std	Z+1, r19	; 0x01
    28c2:	20 83       	st	Z, r18
    28c4:	ce 01       	movw	r24, r28
    28c6:	8f 52       	subi	r24, 0x2F	; 47
    28c8:	9e 4f       	sbci	r25, 0xFE	; 254
    28ca:	fc 01       	movw	r30, r24
    28cc:	80 81       	ld	r24, Z
    28ce:	91 81       	ldd	r25, Z+1	; 0x01
    28d0:	01 97       	sbiw	r24, 0x01	; 1
    28d2:	f1 f7       	brne	.-4      	; 0x28d0 <__stack+0x17d1>
    28d4:	9e 01       	movw	r18, r28
    28d6:	2f 52       	subi	r18, 0x2F	; 47
    28d8:	3e 4f       	sbci	r19, 0xFE	; 254
    28da:	f9 01       	movw	r30, r18
    28dc:	91 83       	std	Z+1, r25	; 0x01
    28de:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F580 T80\n");
    28e0:	8c e7       	ldi	r24, 0x7C	; 124
    28e2:	92 e0       	ldi	r25, 0x02	; 2
    28e4:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    28e8:	9e 01       	movw	r18, r28
    28ea:	2b 59       	subi	r18, 0x9B	; 155
    28ec:	3f 4f       	sbci	r19, 0xFF	; 255
    28ee:	80 e0       	ldi	r24, 0x00	; 0
    28f0:	90 e0       	ldi	r25, 0x00	; 0
    28f2:	a6 e1       	ldi	r26, 0x16	; 22
    28f4:	b3 e4       	ldi	r27, 0x43	; 67
    28f6:	f9 01       	movw	r30, r18
    28f8:	80 83       	st	Z, r24
    28fa:	91 83       	std	Z+1, r25	; 0x01
    28fc:	a2 83       	std	Z+2, r26	; 0x02
    28fe:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2900:	8e 01       	movw	r16, r28
    2902:	01 54       	subi	r16, 0x41	; 65
    2904:	1e 4f       	sbci	r17, 0xFE	; 254
    2906:	ce 01       	movw	r24, r28
    2908:	8b 59       	subi	r24, 0x9B	; 155
    290a:	9f 4f       	sbci	r25, 0xFF	; 255
    290c:	20 e0       	ldi	r18, 0x00	; 0
    290e:	30 e0       	ldi	r19, 0x00	; 0
    2910:	4a e7       	ldi	r20, 0x7A	; 122
    2912:	55 e4       	ldi	r21, 0x45	; 69
    2914:	fc 01       	movw	r30, r24
    2916:	60 81       	ld	r22, Z
    2918:	71 81       	ldd	r23, Z+1	; 0x01
    291a:	82 81       	ldd	r24, Z+2	; 0x02
    291c:	93 81       	ldd	r25, Z+3	; 0x03
    291e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    2922:	dc 01       	movw	r26, r24
    2924:	cb 01       	movw	r24, r22
    2926:	f8 01       	movw	r30, r16
    2928:	80 83       	st	Z, r24
    292a:	91 83       	std	Z+1, r25	; 0x01
    292c:	a2 83       	std	Z+2, r26	; 0x02
    292e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2930:	ce 01       	movw	r24, r28
    2932:	81 54       	subi	r24, 0x41	; 65
    2934:	9e 4f       	sbci	r25, 0xFE	; 254
    2936:	20 e0       	ldi	r18, 0x00	; 0
    2938:	30 e0       	ldi	r19, 0x00	; 0
    293a:	40 e8       	ldi	r20, 0x80	; 128
    293c:	5f e3       	ldi	r21, 0x3F	; 63
    293e:	fc 01       	movw	r30, r24
    2940:	60 81       	ld	r22, Z
    2942:	71 81       	ldd	r23, Z+1	; 0x01
    2944:	82 81       	ldd	r24, Z+2	; 0x02
    2946:	93 81       	ldd	r25, Z+3	; 0x03
    2948:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    294c:	88 23       	and	r24, r24
    294e:	4c f4       	brge	.+18     	; 0x2962 <__stack+0x1863>
		__ticks = 1;
    2950:	ce 01       	movw	r24, r28
    2952:	8d 53       	subi	r24, 0x3D	; 61
    2954:	9e 4f       	sbci	r25, 0xFE	; 254
    2956:	21 e0       	ldi	r18, 0x01	; 1
    2958:	30 e0       	ldi	r19, 0x00	; 0
    295a:	fc 01       	movw	r30, r24
    295c:	31 83       	std	Z+1, r19	; 0x01
    295e:	20 83       	st	Z, r18
    2960:	6d c0       	rjmp	.+218    	; 0x2a3c <__stack+0x193d>
	else if (__tmp > 65535)
    2962:	ce 01       	movw	r24, r28
    2964:	81 54       	subi	r24, 0x41	; 65
    2966:	9e 4f       	sbci	r25, 0xFE	; 254
    2968:	20 e0       	ldi	r18, 0x00	; 0
    296a:	3f ef       	ldi	r19, 0xFF	; 255
    296c:	4f e7       	ldi	r20, 0x7F	; 127
    296e:	57 e4       	ldi	r21, 0x47	; 71
    2970:	fc 01       	movw	r30, r24
    2972:	60 81       	ld	r22, Z
    2974:	71 81       	ldd	r23, Z+1	; 0x01
    2976:	82 81       	ldd	r24, Z+2	; 0x02
    2978:	93 81       	ldd	r25, Z+3	; 0x03
    297a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    297e:	18 16       	cp	r1, r24
    2980:	0c f0       	brlt	.+2      	; 0x2984 <__stack+0x1885>
    2982:	4a c0       	rjmp	.+148    	; 0x2a18 <__stack+0x1919>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2984:	ce 01       	movw	r24, r28
    2986:	8b 59       	subi	r24, 0x9B	; 155
    2988:	9f 4f       	sbci	r25, 0xFF	; 255
    298a:	20 e0       	ldi	r18, 0x00	; 0
    298c:	30 e0       	ldi	r19, 0x00	; 0
    298e:	40 e2       	ldi	r20, 0x20	; 32
    2990:	51 e4       	ldi	r21, 0x41	; 65
    2992:	fc 01       	movw	r30, r24
    2994:	60 81       	ld	r22, Z
    2996:	71 81       	ldd	r23, Z+1	; 0x01
    2998:	82 81       	ldd	r24, Z+2	; 0x02
    299a:	93 81       	ldd	r25, Z+3	; 0x03
    299c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    29a0:	dc 01       	movw	r26, r24
    29a2:	cb 01       	movw	r24, r22
    29a4:	8e 01       	movw	r16, r28
    29a6:	0d 53       	subi	r16, 0x3D	; 61
    29a8:	1e 4f       	sbci	r17, 0xFE	; 254
    29aa:	bc 01       	movw	r22, r24
    29ac:	cd 01       	movw	r24, r26
    29ae:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    29b2:	dc 01       	movw	r26, r24
    29b4:	cb 01       	movw	r24, r22
    29b6:	f8 01       	movw	r30, r16
    29b8:	91 83       	std	Z+1, r25	; 0x01
    29ba:	80 83       	st	Z, r24
    29bc:	24 c0       	rjmp	.+72     	; 0x2a06 <__stack+0x1907>
    29be:	ce 01       	movw	r24, r28
    29c0:	8b 53       	subi	r24, 0x3B	; 59
    29c2:	9e 4f       	sbci	r25, 0xFE	; 254
    29c4:	20 e9       	ldi	r18, 0x90	; 144
    29c6:	31 e0       	ldi	r19, 0x01	; 1
    29c8:	fc 01       	movw	r30, r24
    29ca:	31 83       	std	Z+1, r19	; 0x01
    29cc:	20 83       	st	Z, r18
    29ce:	ce 01       	movw	r24, r28
    29d0:	8b 53       	subi	r24, 0x3B	; 59
    29d2:	9e 4f       	sbci	r25, 0xFE	; 254
    29d4:	fc 01       	movw	r30, r24
    29d6:	80 81       	ld	r24, Z
    29d8:	91 81       	ldd	r25, Z+1	; 0x01
    29da:	01 97       	sbiw	r24, 0x01	; 1
    29dc:	f1 f7       	brne	.-4      	; 0x29da <__stack+0x18db>
    29de:	9e 01       	movw	r18, r28
    29e0:	2b 53       	subi	r18, 0x3B	; 59
    29e2:	3e 4f       	sbci	r19, 0xFE	; 254
    29e4:	f9 01       	movw	r30, r18
    29e6:	91 83       	std	Z+1, r25	; 0x01
    29e8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29ea:	ce 01       	movw	r24, r28
    29ec:	8d 53       	subi	r24, 0x3D	; 61
    29ee:	9e 4f       	sbci	r25, 0xFE	; 254
    29f0:	9e 01       	movw	r18, r28
    29f2:	2d 53       	subi	r18, 0x3D	; 61
    29f4:	3e 4f       	sbci	r19, 0xFE	; 254
    29f6:	f9 01       	movw	r30, r18
    29f8:	20 81       	ld	r18, Z
    29fa:	31 81       	ldd	r19, Z+1	; 0x01
    29fc:	21 50       	subi	r18, 0x01	; 1
    29fe:	31 09       	sbc	r19, r1
    2a00:	fc 01       	movw	r30, r24
    2a02:	31 83       	std	Z+1, r19	; 0x01
    2a04:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a06:	ce 01       	movw	r24, r28
    2a08:	8d 53       	subi	r24, 0x3D	; 61
    2a0a:	9e 4f       	sbci	r25, 0xFE	; 254
    2a0c:	fc 01       	movw	r30, r24
    2a0e:	80 81       	ld	r24, Z
    2a10:	91 81       	ldd	r25, Z+1	; 0x01
    2a12:	89 2b       	or	r24, r25
    2a14:	a1 f6       	brne	.-88     	; 0x29be <__stack+0x18bf>
    2a16:	2c c0       	rjmp	.+88     	; 0x2a70 <__stack+0x1971>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a18:	8e 01       	movw	r16, r28
    2a1a:	0d 53       	subi	r16, 0x3D	; 61
    2a1c:	1e 4f       	sbci	r17, 0xFE	; 254
    2a1e:	ce 01       	movw	r24, r28
    2a20:	81 54       	subi	r24, 0x41	; 65
    2a22:	9e 4f       	sbci	r25, 0xFE	; 254
    2a24:	fc 01       	movw	r30, r24
    2a26:	60 81       	ld	r22, Z
    2a28:	71 81       	ldd	r23, Z+1	; 0x01
    2a2a:	82 81       	ldd	r24, Z+2	; 0x02
    2a2c:	93 81       	ldd	r25, Z+3	; 0x03
    2a2e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    2a32:	dc 01       	movw	r26, r24
    2a34:	cb 01       	movw	r24, r22
    2a36:	f8 01       	movw	r30, r16
    2a38:	91 83       	std	Z+1, r25	; 0x01
    2a3a:	80 83       	st	Z, r24
    2a3c:	ce 01       	movw	r24, r28
    2a3e:	89 53       	subi	r24, 0x39	; 57
    2a40:	9e 4f       	sbci	r25, 0xFE	; 254
    2a42:	9e 01       	movw	r18, r28
    2a44:	2d 53       	subi	r18, 0x3D	; 61
    2a46:	3e 4f       	sbci	r19, 0xFE	; 254
    2a48:	f9 01       	movw	r30, r18
    2a4a:	20 81       	ld	r18, Z
    2a4c:	31 81       	ldd	r19, Z+1	; 0x01
    2a4e:	fc 01       	movw	r30, r24
    2a50:	31 83       	std	Z+1, r19	; 0x01
    2a52:	20 83       	st	Z, r18
    2a54:	ce 01       	movw	r24, r28
    2a56:	89 53       	subi	r24, 0x39	; 57
    2a58:	9e 4f       	sbci	r25, 0xFE	; 254
    2a5a:	fc 01       	movw	r30, r24
    2a5c:	80 81       	ld	r24, Z
    2a5e:	91 81       	ldd	r25, Z+1	; 0x01
    2a60:	01 97       	sbiw	r24, 0x01	; 1
    2a62:	f1 f7       	brne	.-4      	; 0x2a60 <__stack+0x1961>
    2a64:	9e 01       	movw	r18, r28
    2a66:	29 53       	subi	r18, 0x39	; 57
    2a68:	3e 4f       	sbci	r19, 0xFE	; 254
    2a6a:	f9 01       	movw	r30, r18
    2a6c:	91 83       	std	Z+1, r25	; 0x01
    2a6e:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F480 T80\n");
    2a70:	89 ef       	ldi	r24, 0xF9	; 249
    2a72:	91 e0       	ldi	r25, 0x01	; 1
    2a74:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    2a78:	9e 01       	movw	r18, r28
    2a7a:	27 59       	subi	r18, 0x97	; 151
    2a7c:	3f 4f       	sbci	r19, 0xFF	; 255
    2a7e:	80 e0       	ldi	r24, 0x00	; 0
    2a80:	90 e0       	ldi	r25, 0x00	; 0
    2a82:	aa ef       	ldi	r26, 0xFA	; 250
    2a84:	b3 e4       	ldi	r27, 0x43	; 67
    2a86:	f9 01       	movw	r30, r18
    2a88:	80 83       	st	Z, r24
    2a8a:	91 83       	std	Z+1, r25	; 0x01
    2a8c:	a2 83       	std	Z+2, r26	; 0x02
    2a8e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2a90:	8e 01       	movw	r16, r28
    2a92:	0b 54       	subi	r16, 0x4B	; 75
    2a94:	1e 4f       	sbci	r17, 0xFE	; 254
    2a96:	ce 01       	movw	r24, r28
    2a98:	87 59       	subi	r24, 0x97	; 151
    2a9a:	9f 4f       	sbci	r25, 0xFF	; 255
    2a9c:	20 e0       	ldi	r18, 0x00	; 0
    2a9e:	30 e0       	ldi	r19, 0x00	; 0
    2aa0:	4a e7       	ldi	r20, 0x7A	; 122
    2aa2:	55 e4       	ldi	r21, 0x45	; 69
    2aa4:	fc 01       	movw	r30, r24
    2aa6:	60 81       	ld	r22, Z
    2aa8:	71 81       	ldd	r23, Z+1	; 0x01
    2aaa:	82 81       	ldd	r24, Z+2	; 0x02
    2aac:	93 81       	ldd	r25, Z+3	; 0x03
    2aae:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    2ab2:	dc 01       	movw	r26, r24
    2ab4:	cb 01       	movw	r24, r22
    2ab6:	f8 01       	movw	r30, r16
    2ab8:	80 83       	st	Z, r24
    2aba:	91 83       	std	Z+1, r25	; 0x01
    2abc:	a2 83       	std	Z+2, r26	; 0x02
    2abe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2ac0:	ce 01       	movw	r24, r28
    2ac2:	8b 54       	subi	r24, 0x4B	; 75
    2ac4:	9e 4f       	sbci	r25, 0xFE	; 254
    2ac6:	20 e0       	ldi	r18, 0x00	; 0
    2ac8:	30 e0       	ldi	r19, 0x00	; 0
    2aca:	40 e8       	ldi	r20, 0x80	; 128
    2acc:	5f e3       	ldi	r21, 0x3F	; 63
    2ace:	fc 01       	movw	r30, r24
    2ad0:	60 81       	ld	r22, Z
    2ad2:	71 81       	ldd	r23, Z+1	; 0x01
    2ad4:	82 81       	ldd	r24, Z+2	; 0x02
    2ad6:	93 81       	ldd	r25, Z+3	; 0x03
    2ad8:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    2adc:	88 23       	and	r24, r24
    2ade:	4c f4       	brge	.+18     	; 0x2af2 <__stack+0x19f3>
		__ticks = 1;
    2ae0:	ce 01       	movw	r24, r28
    2ae2:	87 54       	subi	r24, 0x47	; 71
    2ae4:	9e 4f       	sbci	r25, 0xFE	; 254
    2ae6:	21 e0       	ldi	r18, 0x01	; 1
    2ae8:	30 e0       	ldi	r19, 0x00	; 0
    2aea:	fc 01       	movw	r30, r24
    2aec:	31 83       	std	Z+1, r19	; 0x01
    2aee:	20 83       	st	Z, r18
    2af0:	6d c0       	rjmp	.+218    	; 0x2bcc <__stack+0x1acd>
	else if (__tmp > 65535)
    2af2:	ce 01       	movw	r24, r28
    2af4:	8b 54       	subi	r24, 0x4B	; 75
    2af6:	9e 4f       	sbci	r25, 0xFE	; 254
    2af8:	20 e0       	ldi	r18, 0x00	; 0
    2afa:	3f ef       	ldi	r19, 0xFF	; 255
    2afc:	4f e7       	ldi	r20, 0x7F	; 127
    2afe:	57 e4       	ldi	r21, 0x47	; 71
    2b00:	fc 01       	movw	r30, r24
    2b02:	60 81       	ld	r22, Z
    2b04:	71 81       	ldd	r23, Z+1	; 0x01
    2b06:	82 81       	ldd	r24, Z+2	; 0x02
    2b08:	93 81       	ldd	r25, Z+3	; 0x03
    2b0a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    2b0e:	18 16       	cp	r1, r24
    2b10:	0c f0       	brlt	.+2      	; 0x2b14 <__stack+0x1a15>
    2b12:	4a c0       	rjmp	.+148    	; 0x2ba8 <__stack+0x1aa9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b14:	ce 01       	movw	r24, r28
    2b16:	87 59       	subi	r24, 0x97	; 151
    2b18:	9f 4f       	sbci	r25, 0xFF	; 255
    2b1a:	20 e0       	ldi	r18, 0x00	; 0
    2b1c:	30 e0       	ldi	r19, 0x00	; 0
    2b1e:	40 e2       	ldi	r20, 0x20	; 32
    2b20:	51 e4       	ldi	r21, 0x41	; 65
    2b22:	fc 01       	movw	r30, r24
    2b24:	60 81       	ld	r22, Z
    2b26:	71 81       	ldd	r23, Z+1	; 0x01
    2b28:	82 81       	ldd	r24, Z+2	; 0x02
    2b2a:	93 81       	ldd	r25, Z+3	; 0x03
    2b2c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    2b30:	dc 01       	movw	r26, r24
    2b32:	cb 01       	movw	r24, r22
    2b34:	8e 01       	movw	r16, r28
    2b36:	07 54       	subi	r16, 0x47	; 71
    2b38:	1e 4f       	sbci	r17, 0xFE	; 254
    2b3a:	bc 01       	movw	r22, r24
    2b3c:	cd 01       	movw	r24, r26
    2b3e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    2b42:	dc 01       	movw	r26, r24
    2b44:	cb 01       	movw	r24, r22
    2b46:	f8 01       	movw	r30, r16
    2b48:	91 83       	std	Z+1, r25	; 0x01
    2b4a:	80 83       	st	Z, r24
    2b4c:	24 c0       	rjmp	.+72     	; 0x2b96 <__stack+0x1a97>
    2b4e:	ce 01       	movw	r24, r28
    2b50:	85 54       	subi	r24, 0x45	; 69
    2b52:	9e 4f       	sbci	r25, 0xFE	; 254
    2b54:	20 e9       	ldi	r18, 0x90	; 144
    2b56:	31 e0       	ldi	r19, 0x01	; 1
    2b58:	fc 01       	movw	r30, r24
    2b5a:	31 83       	std	Z+1, r19	; 0x01
    2b5c:	20 83       	st	Z, r18
    2b5e:	ce 01       	movw	r24, r28
    2b60:	85 54       	subi	r24, 0x45	; 69
    2b62:	9e 4f       	sbci	r25, 0xFE	; 254
    2b64:	fc 01       	movw	r30, r24
    2b66:	80 81       	ld	r24, Z
    2b68:	91 81       	ldd	r25, Z+1	; 0x01
    2b6a:	01 97       	sbiw	r24, 0x01	; 1
    2b6c:	f1 f7       	brne	.-4      	; 0x2b6a <__stack+0x1a6b>
    2b6e:	9e 01       	movw	r18, r28
    2b70:	25 54       	subi	r18, 0x45	; 69
    2b72:	3e 4f       	sbci	r19, 0xFE	; 254
    2b74:	f9 01       	movw	r30, r18
    2b76:	91 83       	std	Z+1, r25	; 0x01
    2b78:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b7a:	ce 01       	movw	r24, r28
    2b7c:	87 54       	subi	r24, 0x47	; 71
    2b7e:	9e 4f       	sbci	r25, 0xFE	; 254
    2b80:	9e 01       	movw	r18, r28
    2b82:	27 54       	subi	r18, 0x47	; 71
    2b84:	3e 4f       	sbci	r19, 0xFE	; 254
    2b86:	f9 01       	movw	r30, r18
    2b88:	20 81       	ld	r18, Z
    2b8a:	31 81       	ldd	r19, Z+1	; 0x01
    2b8c:	21 50       	subi	r18, 0x01	; 1
    2b8e:	31 09       	sbc	r19, r1
    2b90:	fc 01       	movw	r30, r24
    2b92:	31 83       	std	Z+1, r19	; 0x01
    2b94:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b96:	ce 01       	movw	r24, r28
    2b98:	87 54       	subi	r24, 0x47	; 71
    2b9a:	9e 4f       	sbci	r25, 0xFE	; 254
    2b9c:	fc 01       	movw	r30, r24
    2b9e:	80 81       	ld	r24, Z
    2ba0:	91 81       	ldd	r25, Z+1	; 0x01
    2ba2:	89 2b       	or	r24, r25
    2ba4:	a1 f6       	brne	.-88     	; 0x2b4e <__stack+0x1a4f>
    2ba6:	2c c0       	rjmp	.+88     	; 0x2c00 <__stack+0x1b01>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ba8:	8e 01       	movw	r16, r28
    2baa:	07 54       	subi	r16, 0x47	; 71
    2bac:	1e 4f       	sbci	r17, 0xFE	; 254
    2bae:	ce 01       	movw	r24, r28
    2bb0:	8b 54       	subi	r24, 0x4B	; 75
    2bb2:	9e 4f       	sbci	r25, 0xFE	; 254
    2bb4:	fc 01       	movw	r30, r24
    2bb6:	60 81       	ld	r22, Z
    2bb8:	71 81       	ldd	r23, Z+1	; 0x01
    2bba:	82 81       	ldd	r24, Z+2	; 0x02
    2bbc:	93 81       	ldd	r25, Z+3	; 0x03
    2bbe:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    2bc2:	dc 01       	movw	r26, r24
    2bc4:	cb 01       	movw	r24, r22
    2bc6:	f8 01       	movw	r30, r16
    2bc8:	91 83       	std	Z+1, r25	; 0x01
    2bca:	80 83       	st	Z, r24
    2bcc:	ce 01       	movw	r24, r28
    2bce:	83 54       	subi	r24, 0x43	; 67
    2bd0:	9e 4f       	sbci	r25, 0xFE	; 254
    2bd2:	9e 01       	movw	r18, r28
    2bd4:	27 54       	subi	r18, 0x47	; 71
    2bd6:	3e 4f       	sbci	r19, 0xFE	; 254
    2bd8:	f9 01       	movw	r30, r18
    2bda:	20 81       	ld	r18, Z
    2bdc:	31 81       	ldd	r19, Z+1	; 0x01
    2bde:	fc 01       	movw	r30, r24
    2be0:	31 83       	std	Z+1, r19	; 0x01
    2be2:	20 83       	st	Z, r18
    2be4:	ce 01       	movw	r24, r28
    2be6:	83 54       	subi	r24, 0x43	; 67
    2be8:	9e 4f       	sbci	r25, 0xFE	; 254
    2bea:	fc 01       	movw	r30, r24
    2bec:	80 81       	ld	r24, Z
    2bee:	91 81       	ldd	r25, Z+1	; 0x01
    2bf0:	01 97       	sbiw	r24, 0x01	; 1
    2bf2:	f1 f7       	brne	.-4      	; 0x2bf0 <__stack+0x1af1>
    2bf4:	9e 01       	movw	r18, r28
    2bf6:	23 54       	subi	r18, 0x43	; 67
    2bf8:	3e 4f       	sbci	r19, 0xFE	; 254
    2bfa:	f9 01       	movw	r30, r18
    2bfc:	91 83       	std	Z+1, r25	; 0x01
    2bfe:	80 83       	st	Z, r24
			_delay_ms(500);
			
			to_uARM("M2210 F510 T100\n");
    2c00:	84 ea       	ldi	r24, 0xA4	; 164
    2c02:	91 e0       	ldi	r25, 0x01	; 1
    2c04:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    2c08:	9e 01       	movw	r18, r28
    2c0a:	23 59       	subi	r18, 0x93	; 147
    2c0c:	3f 4f       	sbci	r19, 0xFF	; 255
    2c0e:	80 e0       	ldi	r24, 0x00	; 0
    2c10:	90 e0       	ldi	r25, 0x00	; 0
    2c12:	a1 ee       	ldi	r26, 0xE1	; 225
    2c14:	b3 e4       	ldi	r27, 0x43	; 67
    2c16:	f9 01       	movw	r30, r18
    2c18:	80 83       	st	Z, r24
    2c1a:	91 83       	std	Z+1, r25	; 0x01
    2c1c:	a2 83       	std	Z+2, r26	; 0x02
    2c1e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2c20:	8e 01       	movw	r16, r28
    2c22:	05 55       	subi	r16, 0x55	; 85
    2c24:	1e 4f       	sbci	r17, 0xFE	; 254
    2c26:	ce 01       	movw	r24, r28
    2c28:	83 59       	subi	r24, 0x93	; 147
    2c2a:	9f 4f       	sbci	r25, 0xFF	; 255
    2c2c:	20 e0       	ldi	r18, 0x00	; 0
    2c2e:	30 e0       	ldi	r19, 0x00	; 0
    2c30:	4a e7       	ldi	r20, 0x7A	; 122
    2c32:	55 e4       	ldi	r21, 0x45	; 69
    2c34:	fc 01       	movw	r30, r24
    2c36:	60 81       	ld	r22, Z
    2c38:	71 81       	ldd	r23, Z+1	; 0x01
    2c3a:	82 81       	ldd	r24, Z+2	; 0x02
    2c3c:	93 81       	ldd	r25, Z+3	; 0x03
    2c3e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    2c42:	dc 01       	movw	r26, r24
    2c44:	cb 01       	movw	r24, r22
    2c46:	f8 01       	movw	r30, r16
    2c48:	80 83       	st	Z, r24
    2c4a:	91 83       	std	Z+1, r25	; 0x01
    2c4c:	a2 83       	std	Z+2, r26	; 0x02
    2c4e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2c50:	ce 01       	movw	r24, r28
    2c52:	85 55       	subi	r24, 0x55	; 85
    2c54:	9e 4f       	sbci	r25, 0xFE	; 254
    2c56:	20 e0       	ldi	r18, 0x00	; 0
    2c58:	30 e0       	ldi	r19, 0x00	; 0
    2c5a:	40 e8       	ldi	r20, 0x80	; 128
    2c5c:	5f e3       	ldi	r21, 0x3F	; 63
    2c5e:	fc 01       	movw	r30, r24
    2c60:	60 81       	ld	r22, Z
    2c62:	71 81       	ldd	r23, Z+1	; 0x01
    2c64:	82 81       	ldd	r24, Z+2	; 0x02
    2c66:	93 81       	ldd	r25, Z+3	; 0x03
    2c68:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    2c6c:	88 23       	and	r24, r24
    2c6e:	4c f4       	brge	.+18     	; 0x2c82 <__stack+0x1b83>
		__ticks = 1;
    2c70:	ce 01       	movw	r24, r28
    2c72:	81 55       	subi	r24, 0x51	; 81
    2c74:	9e 4f       	sbci	r25, 0xFE	; 254
    2c76:	21 e0       	ldi	r18, 0x01	; 1
    2c78:	30 e0       	ldi	r19, 0x00	; 0
    2c7a:	fc 01       	movw	r30, r24
    2c7c:	31 83       	std	Z+1, r19	; 0x01
    2c7e:	20 83       	st	Z, r18
    2c80:	6d c0       	rjmp	.+218    	; 0x2d5c <__stack+0x1c5d>
	else if (__tmp > 65535)
    2c82:	ce 01       	movw	r24, r28
    2c84:	85 55       	subi	r24, 0x55	; 85
    2c86:	9e 4f       	sbci	r25, 0xFE	; 254
    2c88:	20 e0       	ldi	r18, 0x00	; 0
    2c8a:	3f ef       	ldi	r19, 0xFF	; 255
    2c8c:	4f e7       	ldi	r20, 0x7F	; 127
    2c8e:	57 e4       	ldi	r21, 0x47	; 71
    2c90:	fc 01       	movw	r30, r24
    2c92:	60 81       	ld	r22, Z
    2c94:	71 81       	ldd	r23, Z+1	; 0x01
    2c96:	82 81       	ldd	r24, Z+2	; 0x02
    2c98:	93 81       	ldd	r25, Z+3	; 0x03
    2c9a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    2c9e:	18 16       	cp	r1, r24
    2ca0:	0c f0       	brlt	.+2      	; 0x2ca4 <__stack+0x1ba5>
    2ca2:	4a c0       	rjmp	.+148    	; 0x2d38 <__stack+0x1c39>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ca4:	ce 01       	movw	r24, r28
    2ca6:	83 59       	subi	r24, 0x93	; 147
    2ca8:	9f 4f       	sbci	r25, 0xFF	; 255
    2caa:	20 e0       	ldi	r18, 0x00	; 0
    2cac:	30 e0       	ldi	r19, 0x00	; 0
    2cae:	40 e2       	ldi	r20, 0x20	; 32
    2cb0:	51 e4       	ldi	r21, 0x41	; 65
    2cb2:	fc 01       	movw	r30, r24
    2cb4:	60 81       	ld	r22, Z
    2cb6:	71 81       	ldd	r23, Z+1	; 0x01
    2cb8:	82 81       	ldd	r24, Z+2	; 0x02
    2cba:	93 81       	ldd	r25, Z+3	; 0x03
    2cbc:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    2cc0:	dc 01       	movw	r26, r24
    2cc2:	cb 01       	movw	r24, r22
    2cc4:	8e 01       	movw	r16, r28
    2cc6:	01 55       	subi	r16, 0x51	; 81
    2cc8:	1e 4f       	sbci	r17, 0xFE	; 254
    2cca:	bc 01       	movw	r22, r24
    2ccc:	cd 01       	movw	r24, r26
    2cce:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    2cd2:	dc 01       	movw	r26, r24
    2cd4:	cb 01       	movw	r24, r22
    2cd6:	f8 01       	movw	r30, r16
    2cd8:	91 83       	std	Z+1, r25	; 0x01
    2cda:	80 83       	st	Z, r24
    2cdc:	24 c0       	rjmp	.+72     	; 0x2d26 <__stack+0x1c27>
    2cde:	ce 01       	movw	r24, r28
    2ce0:	8f 54       	subi	r24, 0x4F	; 79
    2ce2:	9e 4f       	sbci	r25, 0xFE	; 254
    2ce4:	20 e9       	ldi	r18, 0x90	; 144
    2ce6:	31 e0       	ldi	r19, 0x01	; 1
    2ce8:	fc 01       	movw	r30, r24
    2cea:	31 83       	std	Z+1, r19	; 0x01
    2cec:	20 83       	st	Z, r18
    2cee:	ce 01       	movw	r24, r28
    2cf0:	8f 54       	subi	r24, 0x4F	; 79
    2cf2:	9e 4f       	sbci	r25, 0xFE	; 254
    2cf4:	fc 01       	movw	r30, r24
    2cf6:	80 81       	ld	r24, Z
    2cf8:	91 81       	ldd	r25, Z+1	; 0x01
    2cfa:	01 97       	sbiw	r24, 0x01	; 1
    2cfc:	f1 f7       	brne	.-4      	; 0x2cfa <__stack+0x1bfb>
    2cfe:	9e 01       	movw	r18, r28
    2d00:	2f 54       	subi	r18, 0x4F	; 79
    2d02:	3e 4f       	sbci	r19, 0xFE	; 254
    2d04:	f9 01       	movw	r30, r18
    2d06:	91 83       	std	Z+1, r25	; 0x01
    2d08:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d0a:	ce 01       	movw	r24, r28
    2d0c:	81 55       	subi	r24, 0x51	; 81
    2d0e:	9e 4f       	sbci	r25, 0xFE	; 254
    2d10:	9e 01       	movw	r18, r28
    2d12:	21 55       	subi	r18, 0x51	; 81
    2d14:	3e 4f       	sbci	r19, 0xFE	; 254
    2d16:	f9 01       	movw	r30, r18
    2d18:	20 81       	ld	r18, Z
    2d1a:	31 81       	ldd	r19, Z+1	; 0x01
    2d1c:	21 50       	subi	r18, 0x01	; 1
    2d1e:	31 09       	sbc	r19, r1
    2d20:	fc 01       	movw	r30, r24
    2d22:	31 83       	std	Z+1, r19	; 0x01
    2d24:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d26:	ce 01       	movw	r24, r28
    2d28:	81 55       	subi	r24, 0x51	; 81
    2d2a:	9e 4f       	sbci	r25, 0xFE	; 254
    2d2c:	fc 01       	movw	r30, r24
    2d2e:	80 81       	ld	r24, Z
    2d30:	91 81       	ldd	r25, Z+1	; 0x01
    2d32:	89 2b       	or	r24, r25
    2d34:	a1 f6       	brne	.-88     	; 0x2cde <__stack+0x1bdf>
    2d36:	2c c0       	rjmp	.+88     	; 0x2d90 <__stack+0x1c91>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d38:	8e 01       	movw	r16, r28
    2d3a:	01 55       	subi	r16, 0x51	; 81
    2d3c:	1e 4f       	sbci	r17, 0xFE	; 254
    2d3e:	ce 01       	movw	r24, r28
    2d40:	85 55       	subi	r24, 0x55	; 85
    2d42:	9e 4f       	sbci	r25, 0xFE	; 254
    2d44:	fc 01       	movw	r30, r24
    2d46:	60 81       	ld	r22, Z
    2d48:	71 81       	ldd	r23, Z+1	; 0x01
    2d4a:	82 81       	ldd	r24, Z+2	; 0x02
    2d4c:	93 81       	ldd	r25, Z+3	; 0x03
    2d4e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    2d52:	dc 01       	movw	r26, r24
    2d54:	cb 01       	movw	r24, r22
    2d56:	f8 01       	movw	r30, r16
    2d58:	91 83       	std	Z+1, r25	; 0x01
    2d5a:	80 83       	st	Z, r24
    2d5c:	ce 01       	movw	r24, r28
    2d5e:	8d 54       	subi	r24, 0x4D	; 77
    2d60:	9e 4f       	sbci	r25, 0xFE	; 254
    2d62:	9e 01       	movw	r18, r28
    2d64:	21 55       	subi	r18, 0x51	; 81
    2d66:	3e 4f       	sbci	r19, 0xFE	; 254
    2d68:	f9 01       	movw	r30, r18
    2d6a:	20 81       	ld	r18, Z
    2d6c:	31 81       	ldd	r19, Z+1	; 0x01
    2d6e:	fc 01       	movw	r30, r24
    2d70:	31 83       	std	Z+1, r19	; 0x01
    2d72:	20 83       	st	Z, r18
    2d74:	ce 01       	movw	r24, r28
    2d76:	8d 54       	subi	r24, 0x4D	; 77
    2d78:	9e 4f       	sbci	r25, 0xFE	; 254
    2d7a:	fc 01       	movw	r30, r24
    2d7c:	80 81       	ld	r24, Z
    2d7e:	91 81       	ldd	r25, Z+1	; 0x01
    2d80:	01 97       	sbiw	r24, 0x01	; 1
    2d82:	f1 f7       	brne	.-4      	; 0x2d80 <__stack+0x1c81>
    2d84:	9e 01       	movw	r18, r28
    2d86:	2d 54       	subi	r18, 0x4D	; 77
    2d88:	3e 4f       	sbci	r19, 0xFE	; 254
    2d8a:	f9 01       	movw	r30, r18
    2d8c:	91 83       	std	Z+1, r25	; 0x01
    2d8e:	80 83       	st	Z, r24
			_delay_ms(450);
			to_uARM("M2210 F380 T100\n");
    2d90:	86 ec       	ldi	r24, 0xC6	; 198
    2d92:	91 e0       	ldi	r25, 0x01	; 1
    2d94:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    2d98:	9e 01       	movw	r18, r28
    2d9a:	2f 58       	subi	r18, 0x8F	; 143
    2d9c:	3f 4f       	sbci	r19, 0xFF	; 255
    2d9e:	80 e0       	ldi	r24, 0x00	; 0
    2da0:	90 e0       	ldi	r25, 0x00	; 0
    2da2:	a8 ec       	ldi	r26, 0xC8	; 200
    2da4:	b3 e4       	ldi	r27, 0x43	; 67
    2da6:	f9 01       	movw	r30, r18
    2da8:	80 83       	st	Z, r24
    2daa:	91 83       	std	Z+1, r25	; 0x01
    2dac:	a2 83       	std	Z+2, r26	; 0x02
    2dae:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2db0:	8e 01       	movw	r16, r28
    2db2:	0f 55       	subi	r16, 0x5F	; 95
    2db4:	1e 4f       	sbci	r17, 0xFE	; 254
    2db6:	ce 01       	movw	r24, r28
    2db8:	8f 58       	subi	r24, 0x8F	; 143
    2dba:	9f 4f       	sbci	r25, 0xFF	; 255
    2dbc:	20 e0       	ldi	r18, 0x00	; 0
    2dbe:	30 e0       	ldi	r19, 0x00	; 0
    2dc0:	4a e7       	ldi	r20, 0x7A	; 122
    2dc2:	55 e4       	ldi	r21, 0x45	; 69
    2dc4:	fc 01       	movw	r30, r24
    2dc6:	60 81       	ld	r22, Z
    2dc8:	71 81       	ldd	r23, Z+1	; 0x01
    2dca:	82 81       	ldd	r24, Z+2	; 0x02
    2dcc:	93 81       	ldd	r25, Z+3	; 0x03
    2dce:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    2dd2:	dc 01       	movw	r26, r24
    2dd4:	cb 01       	movw	r24, r22
    2dd6:	f8 01       	movw	r30, r16
    2dd8:	80 83       	st	Z, r24
    2dda:	91 83       	std	Z+1, r25	; 0x01
    2ddc:	a2 83       	std	Z+2, r26	; 0x02
    2dde:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2de0:	ce 01       	movw	r24, r28
    2de2:	8f 55       	subi	r24, 0x5F	; 95
    2de4:	9e 4f       	sbci	r25, 0xFE	; 254
    2de6:	20 e0       	ldi	r18, 0x00	; 0
    2de8:	30 e0       	ldi	r19, 0x00	; 0
    2dea:	40 e8       	ldi	r20, 0x80	; 128
    2dec:	5f e3       	ldi	r21, 0x3F	; 63
    2dee:	fc 01       	movw	r30, r24
    2df0:	60 81       	ld	r22, Z
    2df2:	71 81       	ldd	r23, Z+1	; 0x01
    2df4:	82 81       	ldd	r24, Z+2	; 0x02
    2df6:	93 81       	ldd	r25, Z+3	; 0x03
    2df8:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    2dfc:	88 23       	and	r24, r24
    2dfe:	4c f4       	brge	.+18     	; 0x2e12 <__stack+0x1d13>
		__ticks = 1;
    2e00:	ce 01       	movw	r24, r28
    2e02:	8b 55       	subi	r24, 0x5B	; 91
    2e04:	9e 4f       	sbci	r25, 0xFE	; 254
    2e06:	21 e0       	ldi	r18, 0x01	; 1
    2e08:	30 e0       	ldi	r19, 0x00	; 0
    2e0a:	fc 01       	movw	r30, r24
    2e0c:	31 83       	std	Z+1, r19	; 0x01
    2e0e:	20 83       	st	Z, r18
    2e10:	6d c0       	rjmp	.+218    	; 0x2eec <__stack+0x1ded>
	else if (__tmp > 65535)
    2e12:	ce 01       	movw	r24, r28
    2e14:	8f 55       	subi	r24, 0x5F	; 95
    2e16:	9e 4f       	sbci	r25, 0xFE	; 254
    2e18:	20 e0       	ldi	r18, 0x00	; 0
    2e1a:	3f ef       	ldi	r19, 0xFF	; 255
    2e1c:	4f e7       	ldi	r20, 0x7F	; 127
    2e1e:	57 e4       	ldi	r21, 0x47	; 71
    2e20:	fc 01       	movw	r30, r24
    2e22:	60 81       	ld	r22, Z
    2e24:	71 81       	ldd	r23, Z+1	; 0x01
    2e26:	82 81       	ldd	r24, Z+2	; 0x02
    2e28:	93 81       	ldd	r25, Z+3	; 0x03
    2e2a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    2e2e:	18 16       	cp	r1, r24
    2e30:	0c f0       	brlt	.+2      	; 0x2e34 <__stack+0x1d35>
    2e32:	4a c0       	rjmp	.+148    	; 0x2ec8 <__stack+0x1dc9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e34:	ce 01       	movw	r24, r28
    2e36:	8f 58       	subi	r24, 0x8F	; 143
    2e38:	9f 4f       	sbci	r25, 0xFF	; 255
    2e3a:	20 e0       	ldi	r18, 0x00	; 0
    2e3c:	30 e0       	ldi	r19, 0x00	; 0
    2e3e:	40 e2       	ldi	r20, 0x20	; 32
    2e40:	51 e4       	ldi	r21, 0x41	; 65
    2e42:	fc 01       	movw	r30, r24
    2e44:	60 81       	ld	r22, Z
    2e46:	71 81       	ldd	r23, Z+1	; 0x01
    2e48:	82 81       	ldd	r24, Z+2	; 0x02
    2e4a:	93 81       	ldd	r25, Z+3	; 0x03
    2e4c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    2e50:	dc 01       	movw	r26, r24
    2e52:	cb 01       	movw	r24, r22
    2e54:	8e 01       	movw	r16, r28
    2e56:	0b 55       	subi	r16, 0x5B	; 91
    2e58:	1e 4f       	sbci	r17, 0xFE	; 254
    2e5a:	bc 01       	movw	r22, r24
    2e5c:	cd 01       	movw	r24, r26
    2e5e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    2e62:	dc 01       	movw	r26, r24
    2e64:	cb 01       	movw	r24, r22
    2e66:	f8 01       	movw	r30, r16
    2e68:	91 83       	std	Z+1, r25	; 0x01
    2e6a:	80 83       	st	Z, r24
    2e6c:	24 c0       	rjmp	.+72     	; 0x2eb6 <__stack+0x1db7>
    2e6e:	ce 01       	movw	r24, r28
    2e70:	89 55       	subi	r24, 0x59	; 89
    2e72:	9e 4f       	sbci	r25, 0xFE	; 254
    2e74:	20 e9       	ldi	r18, 0x90	; 144
    2e76:	31 e0       	ldi	r19, 0x01	; 1
    2e78:	fc 01       	movw	r30, r24
    2e7a:	31 83       	std	Z+1, r19	; 0x01
    2e7c:	20 83       	st	Z, r18
    2e7e:	ce 01       	movw	r24, r28
    2e80:	89 55       	subi	r24, 0x59	; 89
    2e82:	9e 4f       	sbci	r25, 0xFE	; 254
    2e84:	fc 01       	movw	r30, r24
    2e86:	80 81       	ld	r24, Z
    2e88:	91 81       	ldd	r25, Z+1	; 0x01
    2e8a:	01 97       	sbiw	r24, 0x01	; 1
    2e8c:	f1 f7       	brne	.-4      	; 0x2e8a <__stack+0x1d8b>
    2e8e:	9e 01       	movw	r18, r28
    2e90:	29 55       	subi	r18, 0x59	; 89
    2e92:	3e 4f       	sbci	r19, 0xFE	; 254
    2e94:	f9 01       	movw	r30, r18
    2e96:	91 83       	std	Z+1, r25	; 0x01
    2e98:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e9a:	ce 01       	movw	r24, r28
    2e9c:	8b 55       	subi	r24, 0x5B	; 91
    2e9e:	9e 4f       	sbci	r25, 0xFE	; 254
    2ea0:	9e 01       	movw	r18, r28
    2ea2:	2b 55       	subi	r18, 0x5B	; 91
    2ea4:	3e 4f       	sbci	r19, 0xFE	; 254
    2ea6:	f9 01       	movw	r30, r18
    2ea8:	20 81       	ld	r18, Z
    2eaa:	31 81       	ldd	r19, Z+1	; 0x01
    2eac:	21 50       	subi	r18, 0x01	; 1
    2eae:	31 09       	sbc	r19, r1
    2eb0:	fc 01       	movw	r30, r24
    2eb2:	31 83       	std	Z+1, r19	; 0x01
    2eb4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2eb6:	ce 01       	movw	r24, r28
    2eb8:	8b 55       	subi	r24, 0x5B	; 91
    2eba:	9e 4f       	sbci	r25, 0xFE	; 254
    2ebc:	fc 01       	movw	r30, r24
    2ebe:	80 81       	ld	r24, Z
    2ec0:	91 81       	ldd	r25, Z+1	; 0x01
    2ec2:	89 2b       	or	r24, r25
    2ec4:	a1 f6       	brne	.-88     	; 0x2e6e <__stack+0x1d6f>
    2ec6:	2c c0       	rjmp	.+88     	; 0x2f20 <__stack+0x1e21>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ec8:	8e 01       	movw	r16, r28
    2eca:	0b 55       	subi	r16, 0x5B	; 91
    2ecc:	1e 4f       	sbci	r17, 0xFE	; 254
    2ece:	ce 01       	movw	r24, r28
    2ed0:	8f 55       	subi	r24, 0x5F	; 95
    2ed2:	9e 4f       	sbci	r25, 0xFE	; 254
    2ed4:	fc 01       	movw	r30, r24
    2ed6:	60 81       	ld	r22, Z
    2ed8:	71 81       	ldd	r23, Z+1	; 0x01
    2eda:	82 81       	ldd	r24, Z+2	; 0x02
    2edc:	93 81       	ldd	r25, Z+3	; 0x03
    2ede:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    2ee2:	dc 01       	movw	r26, r24
    2ee4:	cb 01       	movw	r24, r22
    2ee6:	f8 01       	movw	r30, r16
    2ee8:	91 83       	std	Z+1, r25	; 0x01
    2eea:	80 83       	st	Z, r24
    2eec:	ce 01       	movw	r24, r28
    2eee:	87 55       	subi	r24, 0x57	; 87
    2ef0:	9e 4f       	sbci	r25, 0xFE	; 254
    2ef2:	9e 01       	movw	r18, r28
    2ef4:	2b 55       	subi	r18, 0x5B	; 91
    2ef6:	3e 4f       	sbci	r19, 0xFE	; 254
    2ef8:	f9 01       	movw	r30, r18
    2efa:	20 81       	ld	r18, Z
    2efc:	31 81       	ldd	r19, Z+1	; 0x01
    2efe:	fc 01       	movw	r30, r24
    2f00:	31 83       	std	Z+1, r19	; 0x01
    2f02:	20 83       	st	Z, r18
    2f04:	ce 01       	movw	r24, r28
    2f06:	87 55       	subi	r24, 0x57	; 87
    2f08:	9e 4f       	sbci	r25, 0xFE	; 254
    2f0a:	fc 01       	movw	r30, r24
    2f0c:	80 81       	ld	r24, Z
    2f0e:	91 81       	ldd	r25, Z+1	; 0x01
    2f10:	01 97       	sbiw	r24, 0x01	; 1
    2f12:	f1 f7       	brne	.-4      	; 0x2f10 <__stack+0x1e11>
    2f14:	9e 01       	movw	r18, r28
    2f16:	27 55       	subi	r18, 0x57	; 87
    2f18:	3e 4f       	sbci	r19, 0xFE	; 254
    2f1a:	f9 01       	movw	r30, r18
    2f1c:	91 83       	std	Z+1, r25	; 0x01
    2f1e:	80 83       	st	Z, r24
			_delay_ms(400);
			to_uARM("M2210 F320 T100\n");
    2f20:	87 ed       	ldi	r24, 0xD7	; 215
    2f22:	91 e0       	ldi	r25, 0x01	; 1
    2f24:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    2f28:	9e 01       	movw	r18, r28
    2f2a:	2b 58       	subi	r18, 0x8B	; 139
    2f2c:	3f 4f       	sbci	r19, 0xFF	; 255
    2f2e:	80 e0       	ldi	r24, 0x00	; 0
    2f30:	90 e0       	ldi	r25, 0x00	; 0
    2f32:	aa ef       	ldi	r26, 0xFA	; 250
    2f34:	b3 e4       	ldi	r27, 0x43	; 67
    2f36:	f9 01       	movw	r30, r18
    2f38:	80 83       	st	Z, r24
    2f3a:	91 83       	std	Z+1, r25	; 0x01
    2f3c:	a2 83       	std	Z+2, r26	; 0x02
    2f3e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2f40:	8e 01       	movw	r16, r28
    2f42:	09 56       	subi	r16, 0x69	; 105
    2f44:	1e 4f       	sbci	r17, 0xFE	; 254
    2f46:	ce 01       	movw	r24, r28
    2f48:	8b 58       	subi	r24, 0x8B	; 139
    2f4a:	9f 4f       	sbci	r25, 0xFF	; 255
    2f4c:	20 e0       	ldi	r18, 0x00	; 0
    2f4e:	30 e0       	ldi	r19, 0x00	; 0
    2f50:	4a e7       	ldi	r20, 0x7A	; 122
    2f52:	55 e4       	ldi	r21, 0x45	; 69
    2f54:	fc 01       	movw	r30, r24
    2f56:	60 81       	ld	r22, Z
    2f58:	71 81       	ldd	r23, Z+1	; 0x01
    2f5a:	82 81       	ldd	r24, Z+2	; 0x02
    2f5c:	93 81       	ldd	r25, Z+3	; 0x03
    2f5e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    2f62:	dc 01       	movw	r26, r24
    2f64:	cb 01       	movw	r24, r22
    2f66:	f8 01       	movw	r30, r16
    2f68:	80 83       	st	Z, r24
    2f6a:	91 83       	std	Z+1, r25	; 0x01
    2f6c:	a2 83       	std	Z+2, r26	; 0x02
    2f6e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2f70:	ce 01       	movw	r24, r28
    2f72:	89 56       	subi	r24, 0x69	; 105
    2f74:	9e 4f       	sbci	r25, 0xFE	; 254
    2f76:	20 e0       	ldi	r18, 0x00	; 0
    2f78:	30 e0       	ldi	r19, 0x00	; 0
    2f7a:	40 e8       	ldi	r20, 0x80	; 128
    2f7c:	5f e3       	ldi	r21, 0x3F	; 63
    2f7e:	fc 01       	movw	r30, r24
    2f80:	60 81       	ld	r22, Z
    2f82:	71 81       	ldd	r23, Z+1	; 0x01
    2f84:	82 81       	ldd	r24, Z+2	; 0x02
    2f86:	93 81       	ldd	r25, Z+3	; 0x03
    2f88:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    2f8c:	88 23       	and	r24, r24
    2f8e:	4c f4       	brge	.+18     	; 0x2fa2 <__stack+0x1ea3>
		__ticks = 1;
    2f90:	ce 01       	movw	r24, r28
    2f92:	85 56       	subi	r24, 0x65	; 101
    2f94:	9e 4f       	sbci	r25, 0xFE	; 254
    2f96:	21 e0       	ldi	r18, 0x01	; 1
    2f98:	30 e0       	ldi	r19, 0x00	; 0
    2f9a:	fc 01       	movw	r30, r24
    2f9c:	31 83       	std	Z+1, r19	; 0x01
    2f9e:	20 83       	st	Z, r18
    2fa0:	6d c0       	rjmp	.+218    	; 0x307c <__stack+0x1f7d>
	else if (__tmp > 65535)
    2fa2:	ce 01       	movw	r24, r28
    2fa4:	89 56       	subi	r24, 0x69	; 105
    2fa6:	9e 4f       	sbci	r25, 0xFE	; 254
    2fa8:	20 e0       	ldi	r18, 0x00	; 0
    2faa:	3f ef       	ldi	r19, 0xFF	; 255
    2fac:	4f e7       	ldi	r20, 0x7F	; 127
    2fae:	57 e4       	ldi	r21, 0x47	; 71
    2fb0:	fc 01       	movw	r30, r24
    2fb2:	60 81       	ld	r22, Z
    2fb4:	71 81       	ldd	r23, Z+1	; 0x01
    2fb6:	82 81       	ldd	r24, Z+2	; 0x02
    2fb8:	93 81       	ldd	r25, Z+3	; 0x03
    2fba:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    2fbe:	18 16       	cp	r1, r24
    2fc0:	0c f0       	brlt	.+2      	; 0x2fc4 <__stack+0x1ec5>
    2fc2:	4a c0       	rjmp	.+148    	; 0x3058 <__stack+0x1f59>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2fc4:	ce 01       	movw	r24, r28
    2fc6:	8b 58       	subi	r24, 0x8B	; 139
    2fc8:	9f 4f       	sbci	r25, 0xFF	; 255
    2fca:	20 e0       	ldi	r18, 0x00	; 0
    2fcc:	30 e0       	ldi	r19, 0x00	; 0
    2fce:	40 e2       	ldi	r20, 0x20	; 32
    2fd0:	51 e4       	ldi	r21, 0x41	; 65
    2fd2:	fc 01       	movw	r30, r24
    2fd4:	60 81       	ld	r22, Z
    2fd6:	71 81       	ldd	r23, Z+1	; 0x01
    2fd8:	82 81       	ldd	r24, Z+2	; 0x02
    2fda:	93 81       	ldd	r25, Z+3	; 0x03
    2fdc:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    2fe0:	dc 01       	movw	r26, r24
    2fe2:	cb 01       	movw	r24, r22
    2fe4:	8e 01       	movw	r16, r28
    2fe6:	05 56       	subi	r16, 0x65	; 101
    2fe8:	1e 4f       	sbci	r17, 0xFE	; 254
    2fea:	bc 01       	movw	r22, r24
    2fec:	cd 01       	movw	r24, r26
    2fee:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    2ff2:	dc 01       	movw	r26, r24
    2ff4:	cb 01       	movw	r24, r22
    2ff6:	f8 01       	movw	r30, r16
    2ff8:	91 83       	std	Z+1, r25	; 0x01
    2ffa:	80 83       	st	Z, r24
    2ffc:	24 c0       	rjmp	.+72     	; 0x3046 <__stack+0x1f47>
    2ffe:	ce 01       	movw	r24, r28
    3000:	83 56       	subi	r24, 0x63	; 99
    3002:	9e 4f       	sbci	r25, 0xFE	; 254
    3004:	20 e9       	ldi	r18, 0x90	; 144
    3006:	31 e0       	ldi	r19, 0x01	; 1
    3008:	fc 01       	movw	r30, r24
    300a:	31 83       	std	Z+1, r19	; 0x01
    300c:	20 83       	st	Z, r18
    300e:	ce 01       	movw	r24, r28
    3010:	83 56       	subi	r24, 0x63	; 99
    3012:	9e 4f       	sbci	r25, 0xFE	; 254
    3014:	fc 01       	movw	r30, r24
    3016:	80 81       	ld	r24, Z
    3018:	91 81       	ldd	r25, Z+1	; 0x01
    301a:	01 97       	sbiw	r24, 0x01	; 1
    301c:	f1 f7       	brne	.-4      	; 0x301a <__stack+0x1f1b>
    301e:	9e 01       	movw	r18, r28
    3020:	23 56       	subi	r18, 0x63	; 99
    3022:	3e 4f       	sbci	r19, 0xFE	; 254
    3024:	f9 01       	movw	r30, r18
    3026:	91 83       	std	Z+1, r25	; 0x01
    3028:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    302a:	ce 01       	movw	r24, r28
    302c:	85 56       	subi	r24, 0x65	; 101
    302e:	9e 4f       	sbci	r25, 0xFE	; 254
    3030:	9e 01       	movw	r18, r28
    3032:	25 56       	subi	r18, 0x65	; 101
    3034:	3e 4f       	sbci	r19, 0xFE	; 254
    3036:	f9 01       	movw	r30, r18
    3038:	20 81       	ld	r18, Z
    303a:	31 81       	ldd	r19, Z+1	; 0x01
    303c:	21 50       	subi	r18, 0x01	; 1
    303e:	31 09       	sbc	r19, r1
    3040:	fc 01       	movw	r30, r24
    3042:	31 83       	std	Z+1, r19	; 0x01
    3044:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3046:	ce 01       	movw	r24, r28
    3048:	85 56       	subi	r24, 0x65	; 101
    304a:	9e 4f       	sbci	r25, 0xFE	; 254
    304c:	fc 01       	movw	r30, r24
    304e:	80 81       	ld	r24, Z
    3050:	91 81       	ldd	r25, Z+1	; 0x01
    3052:	89 2b       	or	r24, r25
    3054:	a1 f6       	brne	.-88     	; 0x2ffe <__stack+0x1eff>
    3056:	2c c0       	rjmp	.+88     	; 0x30b0 <__stack+0x1fb1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3058:	8e 01       	movw	r16, r28
    305a:	05 56       	subi	r16, 0x65	; 101
    305c:	1e 4f       	sbci	r17, 0xFE	; 254
    305e:	ce 01       	movw	r24, r28
    3060:	89 56       	subi	r24, 0x69	; 105
    3062:	9e 4f       	sbci	r25, 0xFE	; 254
    3064:	fc 01       	movw	r30, r24
    3066:	60 81       	ld	r22, Z
    3068:	71 81       	ldd	r23, Z+1	; 0x01
    306a:	82 81       	ldd	r24, Z+2	; 0x02
    306c:	93 81       	ldd	r25, Z+3	; 0x03
    306e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    3072:	dc 01       	movw	r26, r24
    3074:	cb 01       	movw	r24, r22
    3076:	f8 01       	movw	r30, r16
    3078:	91 83       	std	Z+1, r25	; 0x01
    307a:	80 83       	st	Z, r24
    307c:	ce 01       	movw	r24, r28
    307e:	81 56       	subi	r24, 0x61	; 97
    3080:	9e 4f       	sbci	r25, 0xFE	; 254
    3082:	9e 01       	movw	r18, r28
    3084:	25 56       	subi	r18, 0x65	; 101
    3086:	3e 4f       	sbci	r19, 0xFE	; 254
    3088:	f9 01       	movw	r30, r18
    308a:	20 81       	ld	r18, Z
    308c:	31 81       	ldd	r19, Z+1	; 0x01
    308e:	fc 01       	movw	r30, r24
    3090:	31 83       	std	Z+1, r19	; 0x01
    3092:	20 83       	st	Z, r18
    3094:	ce 01       	movw	r24, r28
    3096:	81 56       	subi	r24, 0x61	; 97
    3098:	9e 4f       	sbci	r25, 0xFE	; 254
    309a:	fc 01       	movw	r30, r24
    309c:	80 81       	ld	r24, Z
    309e:	91 81       	ldd	r25, Z+1	; 0x01
    30a0:	01 97       	sbiw	r24, 0x01	; 1
    30a2:	f1 f7       	brne	.-4      	; 0x30a0 <__stack+0x1fa1>
    30a4:	9e 01       	movw	r18, r28
    30a6:	21 56       	subi	r18, 0x61	; 97
    30a8:	3e 4f       	sbci	r19, 0xFE	; 254
    30aa:	f9 01       	movw	r30, r18
    30ac:	91 83       	std	Z+1, r25	; 0x01
    30ae:	80 83       	st	Z, r24
			_delay_ms(500);
			to_uARM("M2210 F440 T100\n");
    30b0:	88 ee       	ldi	r24, 0xE8	; 232
    30b2:	91 e0       	ldi	r25, 0x01	; 1
    30b4:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    30b8:	9e 01       	movw	r18, r28
    30ba:	27 58       	subi	r18, 0x87	; 135
    30bc:	3f 4f       	sbci	r19, 0xFF	; 255
    30be:	80 e0       	ldi	r24, 0x00	; 0
    30c0:	90 e0       	ldi	r25, 0x00	; 0
    30c2:	a6 e9       	ldi	r26, 0x96	; 150
    30c4:	b3 e4       	ldi	r27, 0x43	; 67
    30c6:	f9 01       	movw	r30, r18
    30c8:	80 83       	st	Z, r24
    30ca:	91 83       	std	Z+1, r25	; 0x01
    30cc:	a2 83       	std	Z+2, r26	; 0x02
    30ce:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    30d0:	8e 01       	movw	r16, r28
    30d2:	03 57       	subi	r16, 0x73	; 115
    30d4:	1e 4f       	sbci	r17, 0xFE	; 254
    30d6:	ce 01       	movw	r24, r28
    30d8:	87 58       	subi	r24, 0x87	; 135
    30da:	9f 4f       	sbci	r25, 0xFF	; 255
    30dc:	20 e0       	ldi	r18, 0x00	; 0
    30de:	30 e0       	ldi	r19, 0x00	; 0
    30e0:	4a e7       	ldi	r20, 0x7A	; 122
    30e2:	55 e4       	ldi	r21, 0x45	; 69
    30e4:	fc 01       	movw	r30, r24
    30e6:	60 81       	ld	r22, Z
    30e8:	71 81       	ldd	r23, Z+1	; 0x01
    30ea:	82 81       	ldd	r24, Z+2	; 0x02
    30ec:	93 81       	ldd	r25, Z+3	; 0x03
    30ee:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    30f2:	dc 01       	movw	r26, r24
    30f4:	cb 01       	movw	r24, r22
    30f6:	f8 01       	movw	r30, r16
    30f8:	80 83       	st	Z, r24
    30fa:	91 83       	std	Z+1, r25	; 0x01
    30fc:	a2 83       	std	Z+2, r26	; 0x02
    30fe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3100:	ce 01       	movw	r24, r28
    3102:	83 57       	subi	r24, 0x73	; 115
    3104:	9e 4f       	sbci	r25, 0xFE	; 254
    3106:	20 e0       	ldi	r18, 0x00	; 0
    3108:	30 e0       	ldi	r19, 0x00	; 0
    310a:	40 e8       	ldi	r20, 0x80	; 128
    310c:	5f e3       	ldi	r21, 0x3F	; 63
    310e:	fc 01       	movw	r30, r24
    3110:	60 81       	ld	r22, Z
    3112:	71 81       	ldd	r23, Z+1	; 0x01
    3114:	82 81       	ldd	r24, Z+2	; 0x02
    3116:	93 81       	ldd	r25, Z+3	; 0x03
    3118:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    311c:	88 23       	and	r24, r24
    311e:	4c f4       	brge	.+18     	; 0x3132 <__stack+0x2033>
		__ticks = 1;
    3120:	ce 01       	movw	r24, r28
    3122:	8f 56       	subi	r24, 0x6F	; 111
    3124:	9e 4f       	sbci	r25, 0xFE	; 254
    3126:	21 e0       	ldi	r18, 0x01	; 1
    3128:	30 e0       	ldi	r19, 0x00	; 0
    312a:	fc 01       	movw	r30, r24
    312c:	31 83       	std	Z+1, r19	; 0x01
    312e:	20 83       	st	Z, r18
    3130:	6d c0       	rjmp	.+218    	; 0x320c <__stack+0x210d>
	else if (__tmp > 65535)
    3132:	ce 01       	movw	r24, r28
    3134:	83 57       	subi	r24, 0x73	; 115
    3136:	9e 4f       	sbci	r25, 0xFE	; 254
    3138:	20 e0       	ldi	r18, 0x00	; 0
    313a:	3f ef       	ldi	r19, 0xFF	; 255
    313c:	4f e7       	ldi	r20, 0x7F	; 127
    313e:	57 e4       	ldi	r21, 0x47	; 71
    3140:	fc 01       	movw	r30, r24
    3142:	60 81       	ld	r22, Z
    3144:	71 81       	ldd	r23, Z+1	; 0x01
    3146:	82 81       	ldd	r24, Z+2	; 0x02
    3148:	93 81       	ldd	r25, Z+3	; 0x03
    314a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    314e:	18 16       	cp	r1, r24
    3150:	0c f0       	brlt	.+2      	; 0x3154 <__stack+0x2055>
    3152:	4a c0       	rjmp	.+148    	; 0x31e8 <__stack+0x20e9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3154:	ce 01       	movw	r24, r28
    3156:	87 58       	subi	r24, 0x87	; 135
    3158:	9f 4f       	sbci	r25, 0xFF	; 255
    315a:	20 e0       	ldi	r18, 0x00	; 0
    315c:	30 e0       	ldi	r19, 0x00	; 0
    315e:	40 e2       	ldi	r20, 0x20	; 32
    3160:	51 e4       	ldi	r21, 0x41	; 65
    3162:	fc 01       	movw	r30, r24
    3164:	60 81       	ld	r22, Z
    3166:	71 81       	ldd	r23, Z+1	; 0x01
    3168:	82 81       	ldd	r24, Z+2	; 0x02
    316a:	93 81       	ldd	r25, Z+3	; 0x03
    316c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    3170:	dc 01       	movw	r26, r24
    3172:	cb 01       	movw	r24, r22
    3174:	8e 01       	movw	r16, r28
    3176:	0f 56       	subi	r16, 0x6F	; 111
    3178:	1e 4f       	sbci	r17, 0xFE	; 254
    317a:	bc 01       	movw	r22, r24
    317c:	cd 01       	movw	r24, r26
    317e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    3182:	dc 01       	movw	r26, r24
    3184:	cb 01       	movw	r24, r22
    3186:	f8 01       	movw	r30, r16
    3188:	91 83       	std	Z+1, r25	; 0x01
    318a:	80 83       	st	Z, r24
    318c:	24 c0       	rjmp	.+72     	; 0x31d6 <__stack+0x20d7>
    318e:	ce 01       	movw	r24, r28
    3190:	8d 56       	subi	r24, 0x6D	; 109
    3192:	9e 4f       	sbci	r25, 0xFE	; 254
    3194:	20 e9       	ldi	r18, 0x90	; 144
    3196:	31 e0       	ldi	r19, 0x01	; 1
    3198:	fc 01       	movw	r30, r24
    319a:	31 83       	std	Z+1, r19	; 0x01
    319c:	20 83       	st	Z, r18
    319e:	ce 01       	movw	r24, r28
    31a0:	8d 56       	subi	r24, 0x6D	; 109
    31a2:	9e 4f       	sbci	r25, 0xFE	; 254
    31a4:	fc 01       	movw	r30, r24
    31a6:	80 81       	ld	r24, Z
    31a8:	91 81       	ldd	r25, Z+1	; 0x01
    31aa:	01 97       	sbiw	r24, 0x01	; 1
    31ac:	f1 f7       	brne	.-4      	; 0x31aa <__stack+0x20ab>
    31ae:	9e 01       	movw	r18, r28
    31b0:	2d 56       	subi	r18, 0x6D	; 109
    31b2:	3e 4f       	sbci	r19, 0xFE	; 254
    31b4:	f9 01       	movw	r30, r18
    31b6:	91 83       	std	Z+1, r25	; 0x01
    31b8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31ba:	ce 01       	movw	r24, r28
    31bc:	8f 56       	subi	r24, 0x6F	; 111
    31be:	9e 4f       	sbci	r25, 0xFE	; 254
    31c0:	9e 01       	movw	r18, r28
    31c2:	2f 56       	subi	r18, 0x6F	; 111
    31c4:	3e 4f       	sbci	r19, 0xFE	; 254
    31c6:	f9 01       	movw	r30, r18
    31c8:	20 81       	ld	r18, Z
    31ca:	31 81       	ldd	r19, Z+1	; 0x01
    31cc:	21 50       	subi	r18, 0x01	; 1
    31ce:	31 09       	sbc	r19, r1
    31d0:	fc 01       	movw	r30, r24
    31d2:	31 83       	std	Z+1, r19	; 0x01
    31d4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31d6:	ce 01       	movw	r24, r28
    31d8:	8f 56       	subi	r24, 0x6F	; 111
    31da:	9e 4f       	sbci	r25, 0xFE	; 254
    31dc:	fc 01       	movw	r30, r24
    31de:	80 81       	ld	r24, Z
    31e0:	91 81       	ldd	r25, Z+1	; 0x01
    31e2:	89 2b       	or	r24, r25
    31e4:	a1 f6       	brne	.-88     	; 0x318e <__stack+0x208f>
    31e6:	2c c0       	rjmp	.+88     	; 0x3240 <__stack+0x2141>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    31e8:	8e 01       	movw	r16, r28
    31ea:	0f 56       	subi	r16, 0x6F	; 111
    31ec:	1e 4f       	sbci	r17, 0xFE	; 254
    31ee:	ce 01       	movw	r24, r28
    31f0:	83 57       	subi	r24, 0x73	; 115
    31f2:	9e 4f       	sbci	r25, 0xFE	; 254
    31f4:	fc 01       	movw	r30, r24
    31f6:	60 81       	ld	r22, Z
    31f8:	71 81       	ldd	r23, Z+1	; 0x01
    31fa:	82 81       	ldd	r24, Z+2	; 0x02
    31fc:	93 81       	ldd	r25, Z+3	; 0x03
    31fe:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    3202:	dc 01       	movw	r26, r24
    3204:	cb 01       	movw	r24, r22
    3206:	f8 01       	movw	r30, r16
    3208:	91 83       	std	Z+1, r25	; 0x01
    320a:	80 83       	st	Z, r24
    320c:	ce 01       	movw	r24, r28
    320e:	8b 56       	subi	r24, 0x6B	; 107
    3210:	9e 4f       	sbci	r25, 0xFE	; 254
    3212:	9e 01       	movw	r18, r28
    3214:	2f 56       	subi	r18, 0x6F	; 111
    3216:	3e 4f       	sbci	r19, 0xFE	; 254
    3218:	f9 01       	movw	r30, r18
    321a:	20 81       	ld	r18, Z
    321c:	31 81       	ldd	r19, Z+1	; 0x01
    321e:	fc 01       	movw	r30, r24
    3220:	31 83       	std	Z+1, r19	; 0x01
    3222:	20 83       	st	Z, r18
    3224:	ce 01       	movw	r24, r28
    3226:	8b 56       	subi	r24, 0x6B	; 107
    3228:	9e 4f       	sbci	r25, 0xFE	; 254
    322a:	fc 01       	movw	r30, r24
    322c:	80 81       	ld	r24, Z
    322e:	91 81       	ldd	r25, Z+1	; 0x01
    3230:	01 97       	sbiw	r24, 0x01	; 1
    3232:	f1 f7       	brne	.-4      	; 0x3230 <__stack+0x2131>
    3234:	9e 01       	movw	r18, r28
    3236:	2b 56       	subi	r18, 0x6B	; 107
    3238:	3e 4f       	sbci	r19, 0xFE	; 254
    323a:	f9 01       	movw	r30, r18
    323c:	91 83       	std	Z+1, r25	; 0x01
    323e:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F480 T80\n");
    3240:	89 ef       	ldi	r24, 0xF9	; 249
    3242:	91 e0       	ldi	r25, 0x01	; 1
    3244:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    3248:	9e 01       	movw	r18, r28
    324a:	23 58       	subi	r18, 0x83	; 131
    324c:	3f 4f       	sbci	r19, 0xFF	; 255
    324e:	80 e0       	ldi	r24, 0x00	; 0
    3250:	90 e0       	ldi	r25, 0x00	; 0
    3252:	a5 ea       	ldi	r26, 0xA5	; 165
    3254:	b3 e4       	ldi	r27, 0x43	; 67
    3256:	f9 01       	movw	r30, r18
    3258:	80 83       	st	Z, r24
    325a:	91 83       	std	Z+1, r25	; 0x01
    325c:	a2 83       	std	Z+2, r26	; 0x02
    325e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3260:	8e 01       	movw	r16, r28
    3262:	0d 57       	subi	r16, 0x7D	; 125
    3264:	1e 4f       	sbci	r17, 0xFE	; 254
    3266:	ce 01       	movw	r24, r28
    3268:	83 58       	subi	r24, 0x83	; 131
    326a:	9f 4f       	sbci	r25, 0xFF	; 255
    326c:	20 e0       	ldi	r18, 0x00	; 0
    326e:	30 e0       	ldi	r19, 0x00	; 0
    3270:	4a e7       	ldi	r20, 0x7A	; 122
    3272:	55 e4       	ldi	r21, 0x45	; 69
    3274:	fc 01       	movw	r30, r24
    3276:	60 81       	ld	r22, Z
    3278:	71 81       	ldd	r23, Z+1	; 0x01
    327a:	82 81       	ldd	r24, Z+2	; 0x02
    327c:	93 81       	ldd	r25, Z+3	; 0x03
    327e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    3282:	dc 01       	movw	r26, r24
    3284:	cb 01       	movw	r24, r22
    3286:	f8 01       	movw	r30, r16
    3288:	80 83       	st	Z, r24
    328a:	91 83       	std	Z+1, r25	; 0x01
    328c:	a2 83       	std	Z+2, r26	; 0x02
    328e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3290:	ce 01       	movw	r24, r28
    3292:	8d 57       	subi	r24, 0x7D	; 125
    3294:	9e 4f       	sbci	r25, 0xFE	; 254
    3296:	20 e0       	ldi	r18, 0x00	; 0
    3298:	30 e0       	ldi	r19, 0x00	; 0
    329a:	40 e8       	ldi	r20, 0x80	; 128
    329c:	5f e3       	ldi	r21, 0x3F	; 63
    329e:	fc 01       	movw	r30, r24
    32a0:	60 81       	ld	r22, Z
    32a2:	71 81       	ldd	r23, Z+1	; 0x01
    32a4:	82 81       	ldd	r24, Z+2	; 0x02
    32a6:	93 81       	ldd	r25, Z+3	; 0x03
    32a8:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    32ac:	88 23       	and	r24, r24
    32ae:	4c f4       	brge	.+18     	; 0x32c2 <__stack+0x21c3>
		__ticks = 1;
    32b0:	ce 01       	movw	r24, r28
    32b2:	89 57       	subi	r24, 0x79	; 121
    32b4:	9e 4f       	sbci	r25, 0xFE	; 254
    32b6:	21 e0       	ldi	r18, 0x01	; 1
    32b8:	30 e0       	ldi	r19, 0x00	; 0
    32ba:	fc 01       	movw	r30, r24
    32bc:	31 83       	std	Z+1, r19	; 0x01
    32be:	20 83       	st	Z, r18
    32c0:	6d c0       	rjmp	.+218    	; 0x339c <__stack+0x229d>
	else if (__tmp > 65535)
    32c2:	ce 01       	movw	r24, r28
    32c4:	8d 57       	subi	r24, 0x7D	; 125
    32c6:	9e 4f       	sbci	r25, 0xFE	; 254
    32c8:	20 e0       	ldi	r18, 0x00	; 0
    32ca:	3f ef       	ldi	r19, 0xFF	; 255
    32cc:	4f e7       	ldi	r20, 0x7F	; 127
    32ce:	57 e4       	ldi	r21, 0x47	; 71
    32d0:	fc 01       	movw	r30, r24
    32d2:	60 81       	ld	r22, Z
    32d4:	71 81       	ldd	r23, Z+1	; 0x01
    32d6:	82 81       	ldd	r24, Z+2	; 0x02
    32d8:	93 81       	ldd	r25, Z+3	; 0x03
    32da:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    32de:	18 16       	cp	r1, r24
    32e0:	0c f0       	brlt	.+2      	; 0x32e4 <__stack+0x21e5>
    32e2:	4a c0       	rjmp	.+148    	; 0x3378 <__stack+0x2279>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32e4:	ce 01       	movw	r24, r28
    32e6:	83 58       	subi	r24, 0x83	; 131
    32e8:	9f 4f       	sbci	r25, 0xFF	; 255
    32ea:	20 e0       	ldi	r18, 0x00	; 0
    32ec:	30 e0       	ldi	r19, 0x00	; 0
    32ee:	40 e2       	ldi	r20, 0x20	; 32
    32f0:	51 e4       	ldi	r21, 0x41	; 65
    32f2:	fc 01       	movw	r30, r24
    32f4:	60 81       	ld	r22, Z
    32f6:	71 81       	ldd	r23, Z+1	; 0x01
    32f8:	82 81       	ldd	r24, Z+2	; 0x02
    32fa:	93 81       	ldd	r25, Z+3	; 0x03
    32fc:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    3300:	dc 01       	movw	r26, r24
    3302:	cb 01       	movw	r24, r22
    3304:	8e 01       	movw	r16, r28
    3306:	09 57       	subi	r16, 0x79	; 121
    3308:	1e 4f       	sbci	r17, 0xFE	; 254
    330a:	bc 01       	movw	r22, r24
    330c:	cd 01       	movw	r24, r26
    330e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    3312:	dc 01       	movw	r26, r24
    3314:	cb 01       	movw	r24, r22
    3316:	f8 01       	movw	r30, r16
    3318:	91 83       	std	Z+1, r25	; 0x01
    331a:	80 83       	st	Z, r24
    331c:	24 c0       	rjmp	.+72     	; 0x3366 <__stack+0x2267>
    331e:	ce 01       	movw	r24, r28
    3320:	87 57       	subi	r24, 0x77	; 119
    3322:	9e 4f       	sbci	r25, 0xFE	; 254
    3324:	20 e9       	ldi	r18, 0x90	; 144
    3326:	31 e0       	ldi	r19, 0x01	; 1
    3328:	fc 01       	movw	r30, r24
    332a:	31 83       	std	Z+1, r19	; 0x01
    332c:	20 83       	st	Z, r18
    332e:	ce 01       	movw	r24, r28
    3330:	87 57       	subi	r24, 0x77	; 119
    3332:	9e 4f       	sbci	r25, 0xFE	; 254
    3334:	fc 01       	movw	r30, r24
    3336:	80 81       	ld	r24, Z
    3338:	91 81       	ldd	r25, Z+1	; 0x01
    333a:	01 97       	sbiw	r24, 0x01	; 1
    333c:	f1 f7       	brne	.-4      	; 0x333a <__stack+0x223b>
    333e:	9e 01       	movw	r18, r28
    3340:	27 57       	subi	r18, 0x77	; 119
    3342:	3e 4f       	sbci	r19, 0xFE	; 254
    3344:	f9 01       	movw	r30, r18
    3346:	91 83       	std	Z+1, r25	; 0x01
    3348:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    334a:	ce 01       	movw	r24, r28
    334c:	89 57       	subi	r24, 0x79	; 121
    334e:	9e 4f       	sbci	r25, 0xFE	; 254
    3350:	9e 01       	movw	r18, r28
    3352:	29 57       	subi	r18, 0x79	; 121
    3354:	3e 4f       	sbci	r19, 0xFE	; 254
    3356:	f9 01       	movw	r30, r18
    3358:	20 81       	ld	r18, Z
    335a:	31 81       	ldd	r19, Z+1	; 0x01
    335c:	21 50       	subi	r18, 0x01	; 1
    335e:	31 09       	sbc	r19, r1
    3360:	fc 01       	movw	r30, r24
    3362:	31 83       	std	Z+1, r19	; 0x01
    3364:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3366:	ce 01       	movw	r24, r28
    3368:	89 57       	subi	r24, 0x79	; 121
    336a:	9e 4f       	sbci	r25, 0xFE	; 254
    336c:	fc 01       	movw	r30, r24
    336e:	80 81       	ld	r24, Z
    3370:	91 81       	ldd	r25, Z+1	; 0x01
    3372:	89 2b       	or	r24, r25
    3374:	a1 f6       	brne	.-88     	; 0x331e <__stack+0x221f>
    3376:	2c c0       	rjmp	.+88     	; 0x33d0 <__stack+0x22d1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3378:	8e 01       	movw	r16, r28
    337a:	09 57       	subi	r16, 0x79	; 121
    337c:	1e 4f       	sbci	r17, 0xFE	; 254
    337e:	ce 01       	movw	r24, r28
    3380:	8d 57       	subi	r24, 0x7D	; 125
    3382:	9e 4f       	sbci	r25, 0xFE	; 254
    3384:	fc 01       	movw	r30, r24
    3386:	60 81       	ld	r22, Z
    3388:	71 81       	ldd	r23, Z+1	; 0x01
    338a:	82 81       	ldd	r24, Z+2	; 0x02
    338c:	93 81       	ldd	r25, Z+3	; 0x03
    338e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    3392:	dc 01       	movw	r26, r24
    3394:	cb 01       	movw	r24, r22
    3396:	f8 01       	movw	r30, r16
    3398:	91 83       	std	Z+1, r25	; 0x01
    339a:	80 83       	st	Z, r24
    339c:	ce 01       	movw	r24, r28
    339e:	85 57       	subi	r24, 0x75	; 117
    33a0:	9e 4f       	sbci	r25, 0xFE	; 254
    33a2:	9e 01       	movw	r18, r28
    33a4:	29 57       	subi	r18, 0x79	; 121
    33a6:	3e 4f       	sbci	r19, 0xFE	; 254
    33a8:	f9 01       	movw	r30, r18
    33aa:	20 81       	ld	r18, Z
    33ac:	31 81       	ldd	r19, Z+1	; 0x01
    33ae:	fc 01       	movw	r30, r24
    33b0:	31 83       	std	Z+1, r19	; 0x01
    33b2:	20 83       	st	Z, r18
    33b4:	ce 01       	movw	r24, r28
    33b6:	85 57       	subi	r24, 0x75	; 117
    33b8:	9e 4f       	sbci	r25, 0xFE	; 254
    33ba:	fc 01       	movw	r30, r24
    33bc:	80 81       	ld	r24, Z
    33be:	91 81       	ldd	r25, Z+1	; 0x01
    33c0:	01 97       	sbiw	r24, 0x01	; 1
    33c2:	f1 f7       	brne	.-4      	; 0x33c0 <__stack+0x22c1>
    33c4:	9e 01       	movw	r18, r28
    33c6:	25 57       	subi	r18, 0x75	; 117
    33c8:	3e 4f       	sbci	r19, 0xFE	; 254
    33ca:	f9 01       	movw	r30, r18
    33cc:	91 83       	std	Z+1, r25	; 0x01
    33ce:	80 83       	st	Z, r24
			_delay_ms(330);
			to_uARM("M2210 F450 T100\n");
    33d0:	89 e0       	ldi	r24, 0x09	; 9
    33d2:	92 e0       	ldi	r25, 0x02	; 2
    33d4:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    33d8:	9e 01       	movw	r18, r28
    33da:	2f 57       	subi	r18, 0x7F	; 127
    33dc:	3f 4f       	sbci	r19, 0xFF	; 255
    33de:	80 e0       	ldi	r24, 0x00	; 0
    33e0:	90 e0       	ldi	r25, 0x00	; 0
    33e2:	a6 e1       	ldi	r26, 0x16	; 22
    33e4:	b3 e4       	ldi	r27, 0x43	; 67
    33e6:	f9 01       	movw	r30, r18
    33e8:	80 83       	st	Z, r24
    33ea:	91 83       	std	Z+1, r25	; 0x01
    33ec:	a2 83       	std	Z+2, r26	; 0x02
    33ee:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    33f0:	8e 01       	movw	r16, r28
    33f2:	07 58       	subi	r16, 0x87	; 135
    33f4:	1e 4f       	sbci	r17, 0xFE	; 254
    33f6:	ce 01       	movw	r24, r28
    33f8:	8f 57       	subi	r24, 0x7F	; 127
    33fa:	9f 4f       	sbci	r25, 0xFF	; 255
    33fc:	20 e0       	ldi	r18, 0x00	; 0
    33fe:	30 e0       	ldi	r19, 0x00	; 0
    3400:	4a e7       	ldi	r20, 0x7A	; 122
    3402:	55 e4       	ldi	r21, 0x45	; 69
    3404:	fc 01       	movw	r30, r24
    3406:	60 81       	ld	r22, Z
    3408:	71 81       	ldd	r23, Z+1	; 0x01
    340a:	82 81       	ldd	r24, Z+2	; 0x02
    340c:	93 81       	ldd	r25, Z+3	; 0x03
    340e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    3412:	dc 01       	movw	r26, r24
    3414:	cb 01       	movw	r24, r22
    3416:	f8 01       	movw	r30, r16
    3418:	80 83       	st	Z, r24
    341a:	91 83       	std	Z+1, r25	; 0x01
    341c:	a2 83       	std	Z+2, r26	; 0x02
    341e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3420:	ce 01       	movw	r24, r28
    3422:	87 58       	subi	r24, 0x87	; 135
    3424:	9e 4f       	sbci	r25, 0xFE	; 254
    3426:	20 e0       	ldi	r18, 0x00	; 0
    3428:	30 e0       	ldi	r19, 0x00	; 0
    342a:	40 e8       	ldi	r20, 0x80	; 128
    342c:	5f e3       	ldi	r21, 0x3F	; 63
    342e:	fc 01       	movw	r30, r24
    3430:	60 81       	ld	r22, Z
    3432:	71 81       	ldd	r23, Z+1	; 0x01
    3434:	82 81       	ldd	r24, Z+2	; 0x02
    3436:	93 81       	ldd	r25, Z+3	; 0x03
    3438:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    343c:	88 23       	and	r24, r24
    343e:	4c f4       	brge	.+18     	; 0x3452 <__stack+0x2353>
		__ticks = 1;
    3440:	ce 01       	movw	r24, r28
    3442:	83 58       	subi	r24, 0x83	; 131
    3444:	9e 4f       	sbci	r25, 0xFE	; 254
    3446:	21 e0       	ldi	r18, 0x01	; 1
    3448:	30 e0       	ldi	r19, 0x00	; 0
    344a:	fc 01       	movw	r30, r24
    344c:	31 83       	std	Z+1, r19	; 0x01
    344e:	20 83       	st	Z, r18
    3450:	6d c0       	rjmp	.+218    	; 0x352c <__stack+0x242d>
	else if (__tmp > 65535)
    3452:	ce 01       	movw	r24, r28
    3454:	87 58       	subi	r24, 0x87	; 135
    3456:	9e 4f       	sbci	r25, 0xFE	; 254
    3458:	20 e0       	ldi	r18, 0x00	; 0
    345a:	3f ef       	ldi	r19, 0xFF	; 255
    345c:	4f e7       	ldi	r20, 0x7F	; 127
    345e:	57 e4       	ldi	r21, 0x47	; 71
    3460:	fc 01       	movw	r30, r24
    3462:	60 81       	ld	r22, Z
    3464:	71 81       	ldd	r23, Z+1	; 0x01
    3466:	82 81       	ldd	r24, Z+2	; 0x02
    3468:	93 81       	ldd	r25, Z+3	; 0x03
    346a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    346e:	18 16       	cp	r1, r24
    3470:	0c f0       	brlt	.+2      	; 0x3474 <__stack+0x2375>
    3472:	4a c0       	rjmp	.+148    	; 0x3508 <__stack+0x2409>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3474:	ce 01       	movw	r24, r28
    3476:	8f 57       	subi	r24, 0x7F	; 127
    3478:	9f 4f       	sbci	r25, 0xFF	; 255
    347a:	20 e0       	ldi	r18, 0x00	; 0
    347c:	30 e0       	ldi	r19, 0x00	; 0
    347e:	40 e2       	ldi	r20, 0x20	; 32
    3480:	51 e4       	ldi	r21, 0x41	; 65
    3482:	fc 01       	movw	r30, r24
    3484:	60 81       	ld	r22, Z
    3486:	71 81       	ldd	r23, Z+1	; 0x01
    3488:	82 81       	ldd	r24, Z+2	; 0x02
    348a:	93 81       	ldd	r25, Z+3	; 0x03
    348c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    3490:	dc 01       	movw	r26, r24
    3492:	cb 01       	movw	r24, r22
    3494:	8e 01       	movw	r16, r28
    3496:	03 58       	subi	r16, 0x83	; 131
    3498:	1e 4f       	sbci	r17, 0xFE	; 254
    349a:	bc 01       	movw	r22, r24
    349c:	cd 01       	movw	r24, r26
    349e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    34a2:	dc 01       	movw	r26, r24
    34a4:	cb 01       	movw	r24, r22
    34a6:	f8 01       	movw	r30, r16
    34a8:	91 83       	std	Z+1, r25	; 0x01
    34aa:	80 83       	st	Z, r24
    34ac:	24 c0       	rjmp	.+72     	; 0x34f6 <__stack+0x23f7>
    34ae:	ce 01       	movw	r24, r28
    34b0:	81 58       	subi	r24, 0x81	; 129
    34b2:	9e 4f       	sbci	r25, 0xFE	; 254
    34b4:	20 e9       	ldi	r18, 0x90	; 144
    34b6:	31 e0       	ldi	r19, 0x01	; 1
    34b8:	fc 01       	movw	r30, r24
    34ba:	31 83       	std	Z+1, r19	; 0x01
    34bc:	20 83       	st	Z, r18
    34be:	ce 01       	movw	r24, r28
    34c0:	81 58       	subi	r24, 0x81	; 129
    34c2:	9e 4f       	sbci	r25, 0xFE	; 254
    34c4:	fc 01       	movw	r30, r24
    34c6:	80 81       	ld	r24, Z
    34c8:	91 81       	ldd	r25, Z+1	; 0x01
    34ca:	01 97       	sbiw	r24, 0x01	; 1
    34cc:	f1 f7       	brne	.-4      	; 0x34ca <__stack+0x23cb>
    34ce:	9e 01       	movw	r18, r28
    34d0:	21 58       	subi	r18, 0x81	; 129
    34d2:	3e 4f       	sbci	r19, 0xFE	; 254
    34d4:	f9 01       	movw	r30, r18
    34d6:	91 83       	std	Z+1, r25	; 0x01
    34d8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34da:	ce 01       	movw	r24, r28
    34dc:	83 58       	subi	r24, 0x83	; 131
    34de:	9e 4f       	sbci	r25, 0xFE	; 254
    34e0:	9e 01       	movw	r18, r28
    34e2:	23 58       	subi	r18, 0x83	; 131
    34e4:	3e 4f       	sbci	r19, 0xFE	; 254
    34e6:	f9 01       	movw	r30, r18
    34e8:	20 81       	ld	r18, Z
    34ea:	31 81       	ldd	r19, Z+1	; 0x01
    34ec:	21 50       	subi	r18, 0x01	; 1
    34ee:	31 09       	sbc	r19, r1
    34f0:	fc 01       	movw	r30, r24
    34f2:	31 83       	std	Z+1, r19	; 0x01
    34f4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34f6:	ce 01       	movw	r24, r28
    34f8:	83 58       	subi	r24, 0x83	; 131
    34fa:	9e 4f       	sbci	r25, 0xFE	; 254
    34fc:	fc 01       	movw	r30, r24
    34fe:	80 81       	ld	r24, Z
    3500:	91 81       	ldd	r25, Z+1	; 0x01
    3502:	89 2b       	or	r24, r25
    3504:	a1 f6       	brne	.-88     	; 0x34ae <__stack+0x23af>
    3506:	2c c0       	rjmp	.+88     	; 0x3560 <__stack+0x2461>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3508:	8e 01       	movw	r16, r28
    350a:	03 58       	subi	r16, 0x83	; 131
    350c:	1e 4f       	sbci	r17, 0xFE	; 254
    350e:	ce 01       	movw	r24, r28
    3510:	87 58       	subi	r24, 0x87	; 135
    3512:	9e 4f       	sbci	r25, 0xFE	; 254
    3514:	fc 01       	movw	r30, r24
    3516:	60 81       	ld	r22, Z
    3518:	71 81       	ldd	r23, Z+1	; 0x01
    351a:	82 81       	ldd	r24, Z+2	; 0x02
    351c:	93 81       	ldd	r25, Z+3	; 0x03
    351e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    3522:	dc 01       	movw	r26, r24
    3524:	cb 01       	movw	r24, r22
    3526:	f8 01       	movw	r30, r16
    3528:	91 83       	std	Z+1, r25	; 0x01
    352a:	80 83       	st	Z, r24
    352c:	ce 01       	movw	r24, r28
    352e:	8f 57       	subi	r24, 0x7F	; 127
    3530:	9e 4f       	sbci	r25, 0xFE	; 254
    3532:	9e 01       	movw	r18, r28
    3534:	23 58       	subi	r18, 0x83	; 131
    3536:	3e 4f       	sbci	r19, 0xFE	; 254
    3538:	f9 01       	movw	r30, r18
    353a:	20 81       	ld	r18, Z
    353c:	31 81       	ldd	r19, Z+1	; 0x01
    353e:	fc 01       	movw	r30, r24
    3540:	31 83       	std	Z+1, r19	; 0x01
    3542:	20 83       	st	Z, r18
    3544:	ce 01       	movw	r24, r28
    3546:	8f 57       	subi	r24, 0x7F	; 127
    3548:	9e 4f       	sbci	r25, 0xFE	; 254
    354a:	fc 01       	movw	r30, r24
    354c:	80 81       	ld	r24, Z
    354e:	91 81       	ldd	r25, Z+1	; 0x01
    3550:	01 97       	sbiw	r24, 0x01	; 1
    3552:	f1 f7       	brne	.-4      	; 0x3550 <__stack+0x2451>
    3554:	9e 01       	movw	r18, r28
    3556:	2f 57       	subi	r18, 0x7F	; 127
    3558:	3e 4f       	sbci	r19, 0xFE	; 254
    355a:	f9 01       	movw	r30, r18
    355c:	91 83       	std	Z+1, r25	; 0x01
    355e:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F430 T100\n");
    3560:	8a e1       	ldi	r24, 0x1A	; 26
    3562:	92 e0       	ldi	r25, 0x02	; 2
    3564:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    3568:	9e 01       	movw	r18, r28
    356a:	2b 57       	subi	r18, 0x7B	; 123
    356c:	3f 4f       	sbci	r19, 0xFF	; 255
    356e:	80 e0       	ldi	r24, 0x00	; 0
    3570:	90 e0       	ldi	r25, 0x00	; 0
    3572:	a6 e9       	ldi	r26, 0x96	; 150
    3574:	b3 e4       	ldi	r27, 0x43	; 67
    3576:	f9 01       	movw	r30, r18
    3578:	80 83       	st	Z, r24
    357a:	91 83       	std	Z+1, r25	; 0x01
    357c:	a2 83       	std	Z+2, r26	; 0x02
    357e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3580:	8e 01       	movw	r16, r28
    3582:	01 59       	subi	r16, 0x91	; 145
    3584:	1e 4f       	sbci	r17, 0xFE	; 254
    3586:	ce 01       	movw	r24, r28
    3588:	8b 57       	subi	r24, 0x7B	; 123
    358a:	9f 4f       	sbci	r25, 0xFF	; 255
    358c:	20 e0       	ldi	r18, 0x00	; 0
    358e:	30 e0       	ldi	r19, 0x00	; 0
    3590:	4a e7       	ldi	r20, 0x7A	; 122
    3592:	55 e4       	ldi	r21, 0x45	; 69
    3594:	fc 01       	movw	r30, r24
    3596:	60 81       	ld	r22, Z
    3598:	71 81       	ldd	r23, Z+1	; 0x01
    359a:	82 81       	ldd	r24, Z+2	; 0x02
    359c:	93 81       	ldd	r25, Z+3	; 0x03
    359e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    35a2:	dc 01       	movw	r26, r24
    35a4:	cb 01       	movw	r24, r22
    35a6:	f8 01       	movw	r30, r16
    35a8:	80 83       	st	Z, r24
    35aa:	91 83       	std	Z+1, r25	; 0x01
    35ac:	a2 83       	std	Z+2, r26	; 0x02
    35ae:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    35b0:	ce 01       	movw	r24, r28
    35b2:	81 59       	subi	r24, 0x91	; 145
    35b4:	9e 4f       	sbci	r25, 0xFE	; 254
    35b6:	20 e0       	ldi	r18, 0x00	; 0
    35b8:	30 e0       	ldi	r19, 0x00	; 0
    35ba:	40 e8       	ldi	r20, 0x80	; 128
    35bc:	5f e3       	ldi	r21, 0x3F	; 63
    35be:	fc 01       	movw	r30, r24
    35c0:	60 81       	ld	r22, Z
    35c2:	71 81       	ldd	r23, Z+1	; 0x01
    35c4:	82 81       	ldd	r24, Z+2	; 0x02
    35c6:	93 81       	ldd	r25, Z+3	; 0x03
    35c8:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    35cc:	88 23       	and	r24, r24
    35ce:	4c f4       	brge	.+18     	; 0x35e2 <__stack+0x24e3>
		__ticks = 1;
    35d0:	ce 01       	movw	r24, r28
    35d2:	8d 58       	subi	r24, 0x8D	; 141
    35d4:	9e 4f       	sbci	r25, 0xFE	; 254
    35d6:	21 e0       	ldi	r18, 0x01	; 1
    35d8:	30 e0       	ldi	r19, 0x00	; 0
    35da:	fc 01       	movw	r30, r24
    35dc:	31 83       	std	Z+1, r19	; 0x01
    35de:	20 83       	st	Z, r18
    35e0:	6d c0       	rjmp	.+218    	; 0x36bc <__stack+0x25bd>
	else if (__tmp > 65535)
    35e2:	ce 01       	movw	r24, r28
    35e4:	81 59       	subi	r24, 0x91	; 145
    35e6:	9e 4f       	sbci	r25, 0xFE	; 254
    35e8:	20 e0       	ldi	r18, 0x00	; 0
    35ea:	3f ef       	ldi	r19, 0xFF	; 255
    35ec:	4f e7       	ldi	r20, 0x7F	; 127
    35ee:	57 e4       	ldi	r21, 0x47	; 71
    35f0:	fc 01       	movw	r30, r24
    35f2:	60 81       	ld	r22, Z
    35f4:	71 81       	ldd	r23, Z+1	; 0x01
    35f6:	82 81       	ldd	r24, Z+2	; 0x02
    35f8:	93 81       	ldd	r25, Z+3	; 0x03
    35fa:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    35fe:	18 16       	cp	r1, r24
    3600:	0c f0       	brlt	.+2      	; 0x3604 <__stack+0x2505>
    3602:	4a c0       	rjmp	.+148    	; 0x3698 <__stack+0x2599>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3604:	ce 01       	movw	r24, r28
    3606:	8b 57       	subi	r24, 0x7B	; 123
    3608:	9f 4f       	sbci	r25, 0xFF	; 255
    360a:	20 e0       	ldi	r18, 0x00	; 0
    360c:	30 e0       	ldi	r19, 0x00	; 0
    360e:	40 e2       	ldi	r20, 0x20	; 32
    3610:	51 e4       	ldi	r21, 0x41	; 65
    3612:	fc 01       	movw	r30, r24
    3614:	60 81       	ld	r22, Z
    3616:	71 81       	ldd	r23, Z+1	; 0x01
    3618:	82 81       	ldd	r24, Z+2	; 0x02
    361a:	93 81       	ldd	r25, Z+3	; 0x03
    361c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    3620:	dc 01       	movw	r26, r24
    3622:	cb 01       	movw	r24, r22
    3624:	8e 01       	movw	r16, r28
    3626:	0d 58       	subi	r16, 0x8D	; 141
    3628:	1e 4f       	sbci	r17, 0xFE	; 254
    362a:	bc 01       	movw	r22, r24
    362c:	cd 01       	movw	r24, r26
    362e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    3632:	dc 01       	movw	r26, r24
    3634:	cb 01       	movw	r24, r22
    3636:	f8 01       	movw	r30, r16
    3638:	91 83       	std	Z+1, r25	; 0x01
    363a:	80 83       	st	Z, r24
    363c:	24 c0       	rjmp	.+72     	; 0x3686 <__stack+0x2587>
    363e:	ce 01       	movw	r24, r28
    3640:	8b 58       	subi	r24, 0x8B	; 139
    3642:	9e 4f       	sbci	r25, 0xFE	; 254
    3644:	20 e9       	ldi	r18, 0x90	; 144
    3646:	31 e0       	ldi	r19, 0x01	; 1
    3648:	fc 01       	movw	r30, r24
    364a:	31 83       	std	Z+1, r19	; 0x01
    364c:	20 83       	st	Z, r18
    364e:	ce 01       	movw	r24, r28
    3650:	8b 58       	subi	r24, 0x8B	; 139
    3652:	9e 4f       	sbci	r25, 0xFE	; 254
    3654:	fc 01       	movw	r30, r24
    3656:	80 81       	ld	r24, Z
    3658:	91 81       	ldd	r25, Z+1	; 0x01
    365a:	01 97       	sbiw	r24, 0x01	; 1
    365c:	f1 f7       	brne	.-4      	; 0x365a <__stack+0x255b>
    365e:	9e 01       	movw	r18, r28
    3660:	2b 58       	subi	r18, 0x8B	; 139
    3662:	3e 4f       	sbci	r19, 0xFE	; 254
    3664:	f9 01       	movw	r30, r18
    3666:	91 83       	std	Z+1, r25	; 0x01
    3668:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    366a:	ce 01       	movw	r24, r28
    366c:	8d 58       	subi	r24, 0x8D	; 141
    366e:	9e 4f       	sbci	r25, 0xFE	; 254
    3670:	9e 01       	movw	r18, r28
    3672:	2d 58       	subi	r18, 0x8D	; 141
    3674:	3e 4f       	sbci	r19, 0xFE	; 254
    3676:	f9 01       	movw	r30, r18
    3678:	20 81       	ld	r18, Z
    367a:	31 81       	ldd	r19, Z+1	; 0x01
    367c:	21 50       	subi	r18, 0x01	; 1
    367e:	31 09       	sbc	r19, r1
    3680:	fc 01       	movw	r30, r24
    3682:	31 83       	std	Z+1, r19	; 0x01
    3684:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3686:	ce 01       	movw	r24, r28
    3688:	8d 58       	subi	r24, 0x8D	; 141
    368a:	9e 4f       	sbci	r25, 0xFE	; 254
    368c:	fc 01       	movw	r30, r24
    368e:	80 81       	ld	r24, Z
    3690:	91 81       	ldd	r25, Z+1	; 0x01
    3692:	89 2b       	or	r24, r25
    3694:	a1 f6       	brne	.-88     	; 0x363e <__stack+0x253f>
    3696:	2c c0       	rjmp	.+88     	; 0x36f0 <__stack+0x25f1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3698:	8e 01       	movw	r16, r28
    369a:	0d 58       	subi	r16, 0x8D	; 141
    369c:	1e 4f       	sbci	r17, 0xFE	; 254
    369e:	ce 01       	movw	r24, r28
    36a0:	81 59       	subi	r24, 0x91	; 145
    36a2:	9e 4f       	sbci	r25, 0xFE	; 254
    36a4:	fc 01       	movw	r30, r24
    36a6:	60 81       	ld	r22, Z
    36a8:	71 81       	ldd	r23, Z+1	; 0x01
    36aa:	82 81       	ldd	r24, Z+2	; 0x02
    36ac:	93 81       	ldd	r25, Z+3	; 0x03
    36ae:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    36b2:	dc 01       	movw	r26, r24
    36b4:	cb 01       	movw	r24, r22
    36b6:	f8 01       	movw	r30, r16
    36b8:	91 83       	std	Z+1, r25	; 0x01
    36ba:	80 83       	st	Z, r24
    36bc:	ce 01       	movw	r24, r28
    36be:	89 58       	subi	r24, 0x89	; 137
    36c0:	9e 4f       	sbci	r25, 0xFE	; 254
    36c2:	9e 01       	movw	r18, r28
    36c4:	2d 58       	subi	r18, 0x8D	; 141
    36c6:	3e 4f       	sbci	r19, 0xFE	; 254
    36c8:	f9 01       	movw	r30, r18
    36ca:	20 81       	ld	r18, Z
    36cc:	31 81       	ldd	r19, Z+1	; 0x01
    36ce:	fc 01       	movw	r30, r24
    36d0:	31 83       	std	Z+1, r19	; 0x01
    36d2:	20 83       	st	Z, r18
    36d4:	ce 01       	movw	r24, r28
    36d6:	89 58       	subi	r24, 0x89	; 137
    36d8:	9e 4f       	sbci	r25, 0xFE	; 254
    36da:	fc 01       	movw	r30, r24
    36dc:	80 81       	ld	r24, Z
    36de:	91 81       	ldd	r25, Z+1	; 0x01
    36e0:	01 97       	sbiw	r24, 0x01	; 1
    36e2:	f1 f7       	brne	.-4      	; 0x36e0 <__stack+0x25e1>
    36e4:	9e 01       	movw	r18, r28
    36e6:	29 58       	subi	r18, 0x89	; 137
    36e8:	3e 4f       	sbci	r19, 0xFE	; 254
    36ea:	f9 01       	movw	r30, r18
    36ec:	91 83       	std	Z+1, r25	; 0x01
    36ee:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F380 T100\n");
    36f0:	86 ec       	ldi	r24, 0xC6	; 198
    36f2:	91 e0       	ldi	r25, 0x01	; 1
    36f4:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    36f8:	9e 01       	movw	r18, r28
    36fa:	27 57       	subi	r18, 0x77	; 119
    36fc:	3f 4f       	sbci	r19, 0xFF	; 255
    36fe:	80 e0       	ldi	r24, 0x00	; 0
    3700:	90 e0       	ldi	r25, 0x00	; 0
    3702:	a8 e4       	ldi	r26, 0x48	; 72
    3704:	b3 e4       	ldi	r27, 0x43	; 67
    3706:	f9 01       	movw	r30, r18
    3708:	80 83       	st	Z, r24
    370a:	91 83       	std	Z+1, r25	; 0x01
    370c:	a2 83       	std	Z+2, r26	; 0x02
    370e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3710:	8e 01       	movw	r16, r28
    3712:	0b 59       	subi	r16, 0x9B	; 155
    3714:	1e 4f       	sbci	r17, 0xFE	; 254
    3716:	ce 01       	movw	r24, r28
    3718:	87 57       	subi	r24, 0x77	; 119
    371a:	9f 4f       	sbci	r25, 0xFF	; 255
    371c:	20 e0       	ldi	r18, 0x00	; 0
    371e:	30 e0       	ldi	r19, 0x00	; 0
    3720:	4a e7       	ldi	r20, 0x7A	; 122
    3722:	55 e4       	ldi	r21, 0x45	; 69
    3724:	fc 01       	movw	r30, r24
    3726:	60 81       	ld	r22, Z
    3728:	71 81       	ldd	r23, Z+1	; 0x01
    372a:	82 81       	ldd	r24, Z+2	; 0x02
    372c:	93 81       	ldd	r25, Z+3	; 0x03
    372e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    3732:	dc 01       	movw	r26, r24
    3734:	cb 01       	movw	r24, r22
    3736:	f8 01       	movw	r30, r16
    3738:	80 83       	st	Z, r24
    373a:	91 83       	std	Z+1, r25	; 0x01
    373c:	a2 83       	std	Z+2, r26	; 0x02
    373e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3740:	ce 01       	movw	r24, r28
    3742:	8b 59       	subi	r24, 0x9B	; 155
    3744:	9e 4f       	sbci	r25, 0xFE	; 254
    3746:	20 e0       	ldi	r18, 0x00	; 0
    3748:	30 e0       	ldi	r19, 0x00	; 0
    374a:	40 e8       	ldi	r20, 0x80	; 128
    374c:	5f e3       	ldi	r21, 0x3F	; 63
    374e:	fc 01       	movw	r30, r24
    3750:	60 81       	ld	r22, Z
    3752:	71 81       	ldd	r23, Z+1	; 0x01
    3754:	82 81       	ldd	r24, Z+2	; 0x02
    3756:	93 81       	ldd	r25, Z+3	; 0x03
    3758:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    375c:	88 23       	and	r24, r24
    375e:	4c f4       	brge	.+18     	; 0x3772 <__stack+0x2673>
		__ticks = 1;
    3760:	ce 01       	movw	r24, r28
    3762:	87 59       	subi	r24, 0x97	; 151
    3764:	9e 4f       	sbci	r25, 0xFE	; 254
    3766:	21 e0       	ldi	r18, 0x01	; 1
    3768:	30 e0       	ldi	r19, 0x00	; 0
    376a:	fc 01       	movw	r30, r24
    376c:	31 83       	std	Z+1, r19	; 0x01
    376e:	20 83       	st	Z, r18
    3770:	6d c0       	rjmp	.+218    	; 0x384c <__stack+0x274d>
	else if (__tmp > 65535)
    3772:	ce 01       	movw	r24, r28
    3774:	8b 59       	subi	r24, 0x9B	; 155
    3776:	9e 4f       	sbci	r25, 0xFE	; 254
    3778:	20 e0       	ldi	r18, 0x00	; 0
    377a:	3f ef       	ldi	r19, 0xFF	; 255
    377c:	4f e7       	ldi	r20, 0x7F	; 127
    377e:	57 e4       	ldi	r21, 0x47	; 71
    3780:	fc 01       	movw	r30, r24
    3782:	60 81       	ld	r22, Z
    3784:	71 81       	ldd	r23, Z+1	; 0x01
    3786:	82 81       	ldd	r24, Z+2	; 0x02
    3788:	93 81       	ldd	r25, Z+3	; 0x03
    378a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    378e:	18 16       	cp	r1, r24
    3790:	0c f0       	brlt	.+2      	; 0x3794 <__stack+0x2695>
    3792:	4a c0       	rjmp	.+148    	; 0x3828 <__stack+0x2729>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3794:	ce 01       	movw	r24, r28
    3796:	87 57       	subi	r24, 0x77	; 119
    3798:	9f 4f       	sbci	r25, 0xFF	; 255
    379a:	20 e0       	ldi	r18, 0x00	; 0
    379c:	30 e0       	ldi	r19, 0x00	; 0
    379e:	40 e2       	ldi	r20, 0x20	; 32
    37a0:	51 e4       	ldi	r21, 0x41	; 65
    37a2:	fc 01       	movw	r30, r24
    37a4:	60 81       	ld	r22, Z
    37a6:	71 81       	ldd	r23, Z+1	; 0x01
    37a8:	82 81       	ldd	r24, Z+2	; 0x02
    37aa:	93 81       	ldd	r25, Z+3	; 0x03
    37ac:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    37b0:	dc 01       	movw	r26, r24
    37b2:	cb 01       	movw	r24, r22
    37b4:	8e 01       	movw	r16, r28
    37b6:	07 59       	subi	r16, 0x97	; 151
    37b8:	1e 4f       	sbci	r17, 0xFE	; 254
    37ba:	bc 01       	movw	r22, r24
    37bc:	cd 01       	movw	r24, r26
    37be:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    37c2:	dc 01       	movw	r26, r24
    37c4:	cb 01       	movw	r24, r22
    37c6:	f8 01       	movw	r30, r16
    37c8:	91 83       	std	Z+1, r25	; 0x01
    37ca:	80 83       	st	Z, r24
    37cc:	24 c0       	rjmp	.+72     	; 0x3816 <__stack+0x2717>
    37ce:	ce 01       	movw	r24, r28
    37d0:	85 59       	subi	r24, 0x95	; 149
    37d2:	9e 4f       	sbci	r25, 0xFE	; 254
    37d4:	20 e9       	ldi	r18, 0x90	; 144
    37d6:	31 e0       	ldi	r19, 0x01	; 1
    37d8:	fc 01       	movw	r30, r24
    37da:	31 83       	std	Z+1, r19	; 0x01
    37dc:	20 83       	st	Z, r18
    37de:	ce 01       	movw	r24, r28
    37e0:	85 59       	subi	r24, 0x95	; 149
    37e2:	9e 4f       	sbci	r25, 0xFE	; 254
    37e4:	fc 01       	movw	r30, r24
    37e6:	80 81       	ld	r24, Z
    37e8:	91 81       	ldd	r25, Z+1	; 0x01
    37ea:	01 97       	sbiw	r24, 0x01	; 1
    37ec:	f1 f7       	brne	.-4      	; 0x37ea <__stack+0x26eb>
    37ee:	9e 01       	movw	r18, r28
    37f0:	25 59       	subi	r18, 0x95	; 149
    37f2:	3e 4f       	sbci	r19, 0xFE	; 254
    37f4:	f9 01       	movw	r30, r18
    37f6:	91 83       	std	Z+1, r25	; 0x01
    37f8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    37fa:	ce 01       	movw	r24, r28
    37fc:	87 59       	subi	r24, 0x97	; 151
    37fe:	9e 4f       	sbci	r25, 0xFE	; 254
    3800:	9e 01       	movw	r18, r28
    3802:	27 59       	subi	r18, 0x97	; 151
    3804:	3e 4f       	sbci	r19, 0xFE	; 254
    3806:	f9 01       	movw	r30, r18
    3808:	20 81       	ld	r18, Z
    380a:	31 81       	ldd	r19, Z+1	; 0x01
    380c:	21 50       	subi	r18, 0x01	; 1
    380e:	31 09       	sbc	r19, r1
    3810:	fc 01       	movw	r30, r24
    3812:	31 83       	std	Z+1, r19	; 0x01
    3814:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3816:	ce 01       	movw	r24, r28
    3818:	87 59       	subi	r24, 0x97	; 151
    381a:	9e 4f       	sbci	r25, 0xFE	; 254
    381c:	fc 01       	movw	r30, r24
    381e:	80 81       	ld	r24, Z
    3820:	91 81       	ldd	r25, Z+1	; 0x01
    3822:	89 2b       	or	r24, r25
    3824:	a1 f6       	brne	.-88     	; 0x37ce <__stack+0x26cf>
    3826:	2c c0       	rjmp	.+88     	; 0x3880 <__stack+0x2781>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3828:	8e 01       	movw	r16, r28
    382a:	07 59       	subi	r16, 0x97	; 151
    382c:	1e 4f       	sbci	r17, 0xFE	; 254
    382e:	ce 01       	movw	r24, r28
    3830:	8b 59       	subi	r24, 0x9B	; 155
    3832:	9e 4f       	sbci	r25, 0xFE	; 254
    3834:	fc 01       	movw	r30, r24
    3836:	60 81       	ld	r22, Z
    3838:	71 81       	ldd	r23, Z+1	; 0x01
    383a:	82 81       	ldd	r24, Z+2	; 0x02
    383c:	93 81       	ldd	r25, Z+3	; 0x03
    383e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    3842:	dc 01       	movw	r26, r24
    3844:	cb 01       	movw	r24, r22
    3846:	f8 01       	movw	r30, r16
    3848:	91 83       	std	Z+1, r25	; 0x01
    384a:	80 83       	st	Z, r24
    384c:	ce 01       	movw	r24, r28
    384e:	83 59       	subi	r24, 0x93	; 147
    3850:	9e 4f       	sbci	r25, 0xFE	; 254
    3852:	9e 01       	movw	r18, r28
    3854:	27 59       	subi	r18, 0x97	; 151
    3856:	3e 4f       	sbci	r19, 0xFE	; 254
    3858:	f9 01       	movw	r30, r18
    385a:	20 81       	ld	r18, Z
    385c:	31 81       	ldd	r19, Z+1	; 0x01
    385e:	fc 01       	movw	r30, r24
    3860:	31 83       	std	Z+1, r19	; 0x01
    3862:	20 83       	st	Z, r18
    3864:	ce 01       	movw	r24, r28
    3866:	83 59       	subi	r24, 0x93	; 147
    3868:	9e 4f       	sbci	r25, 0xFE	; 254
    386a:	fc 01       	movw	r30, r24
    386c:	80 81       	ld	r24, Z
    386e:	91 81       	ldd	r25, Z+1	; 0x01
    3870:	01 97       	sbiw	r24, 0x01	; 1
    3872:	f1 f7       	brne	.-4      	; 0x3870 <__stack+0x2771>
    3874:	9e 01       	movw	r18, r28
    3876:	23 59       	subi	r18, 0x93	; 147
    3878:	3e 4f       	sbci	r19, 0xFE	; 254
    387a:	f9 01       	movw	r30, r18
    387c:	91 83       	std	Z+1, r25	; 0x01
    387e:	80 83       	st	Z, r24
			_delay_ms(200);
			to_uARM("M2210 F660 T80\n");
    3880:	8b e2       	ldi	r24, 0x2B	; 43
    3882:	92 e0       	ldi	r25, 0x02	; 2
    3884:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    3888:	9e 01       	movw	r18, r28
    388a:	23 57       	subi	r18, 0x73	; 115
    388c:	3f 4f       	sbci	r19, 0xFF	; 255
    388e:	80 e0       	ldi	r24, 0x00	; 0
    3890:	90 e0       	ldi	r25, 0x00	; 0
    3892:	a8 e4       	ldi	r26, 0x48	; 72
    3894:	b3 e4       	ldi	r27, 0x43	; 67
    3896:	f9 01       	movw	r30, r18
    3898:	80 83       	st	Z, r24
    389a:	91 83       	std	Z+1, r25	; 0x01
    389c:	a2 83       	std	Z+2, r26	; 0x02
    389e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    38a0:	8e 01       	movw	r16, r28
    38a2:	05 5a       	subi	r16, 0xA5	; 165
    38a4:	1e 4f       	sbci	r17, 0xFE	; 254
    38a6:	ce 01       	movw	r24, r28
    38a8:	83 57       	subi	r24, 0x73	; 115
    38aa:	9f 4f       	sbci	r25, 0xFF	; 255
    38ac:	20 e0       	ldi	r18, 0x00	; 0
    38ae:	30 e0       	ldi	r19, 0x00	; 0
    38b0:	4a e7       	ldi	r20, 0x7A	; 122
    38b2:	55 e4       	ldi	r21, 0x45	; 69
    38b4:	fc 01       	movw	r30, r24
    38b6:	60 81       	ld	r22, Z
    38b8:	71 81       	ldd	r23, Z+1	; 0x01
    38ba:	82 81       	ldd	r24, Z+2	; 0x02
    38bc:	93 81       	ldd	r25, Z+3	; 0x03
    38be:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    38c2:	dc 01       	movw	r26, r24
    38c4:	cb 01       	movw	r24, r22
    38c6:	f8 01       	movw	r30, r16
    38c8:	80 83       	st	Z, r24
    38ca:	91 83       	std	Z+1, r25	; 0x01
    38cc:	a2 83       	std	Z+2, r26	; 0x02
    38ce:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    38d0:	ce 01       	movw	r24, r28
    38d2:	85 5a       	subi	r24, 0xA5	; 165
    38d4:	9e 4f       	sbci	r25, 0xFE	; 254
    38d6:	20 e0       	ldi	r18, 0x00	; 0
    38d8:	30 e0       	ldi	r19, 0x00	; 0
    38da:	40 e8       	ldi	r20, 0x80	; 128
    38dc:	5f e3       	ldi	r21, 0x3F	; 63
    38de:	fc 01       	movw	r30, r24
    38e0:	60 81       	ld	r22, Z
    38e2:	71 81       	ldd	r23, Z+1	; 0x01
    38e4:	82 81       	ldd	r24, Z+2	; 0x02
    38e6:	93 81       	ldd	r25, Z+3	; 0x03
    38e8:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    38ec:	88 23       	and	r24, r24
    38ee:	4c f4       	brge	.+18     	; 0x3902 <__stack+0x2803>
		__ticks = 1;
    38f0:	ce 01       	movw	r24, r28
    38f2:	81 5a       	subi	r24, 0xA1	; 161
    38f4:	9e 4f       	sbci	r25, 0xFE	; 254
    38f6:	21 e0       	ldi	r18, 0x01	; 1
    38f8:	30 e0       	ldi	r19, 0x00	; 0
    38fa:	fc 01       	movw	r30, r24
    38fc:	31 83       	std	Z+1, r19	; 0x01
    38fe:	20 83       	st	Z, r18
    3900:	6d c0       	rjmp	.+218    	; 0x39dc <__stack+0x28dd>
	else if (__tmp > 65535)
    3902:	ce 01       	movw	r24, r28
    3904:	85 5a       	subi	r24, 0xA5	; 165
    3906:	9e 4f       	sbci	r25, 0xFE	; 254
    3908:	20 e0       	ldi	r18, 0x00	; 0
    390a:	3f ef       	ldi	r19, 0xFF	; 255
    390c:	4f e7       	ldi	r20, 0x7F	; 127
    390e:	57 e4       	ldi	r21, 0x47	; 71
    3910:	fc 01       	movw	r30, r24
    3912:	60 81       	ld	r22, Z
    3914:	71 81       	ldd	r23, Z+1	; 0x01
    3916:	82 81       	ldd	r24, Z+2	; 0x02
    3918:	93 81       	ldd	r25, Z+3	; 0x03
    391a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    391e:	18 16       	cp	r1, r24
    3920:	0c f0       	brlt	.+2      	; 0x3924 <__stack+0x2825>
    3922:	4a c0       	rjmp	.+148    	; 0x39b8 <__stack+0x28b9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3924:	ce 01       	movw	r24, r28
    3926:	83 57       	subi	r24, 0x73	; 115
    3928:	9f 4f       	sbci	r25, 0xFF	; 255
    392a:	20 e0       	ldi	r18, 0x00	; 0
    392c:	30 e0       	ldi	r19, 0x00	; 0
    392e:	40 e2       	ldi	r20, 0x20	; 32
    3930:	51 e4       	ldi	r21, 0x41	; 65
    3932:	fc 01       	movw	r30, r24
    3934:	60 81       	ld	r22, Z
    3936:	71 81       	ldd	r23, Z+1	; 0x01
    3938:	82 81       	ldd	r24, Z+2	; 0x02
    393a:	93 81       	ldd	r25, Z+3	; 0x03
    393c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    3940:	dc 01       	movw	r26, r24
    3942:	cb 01       	movw	r24, r22
    3944:	8e 01       	movw	r16, r28
    3946:	01 5a       	subi	r16, 0xA1	; 161
    3948:	1e 4f       	sbci	r17, 0xFE	; 254
    394a:	bc 01       	movw	r22, r24
    394c:	cd 01       	movw	r24, r26
    394e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    3952:	dc 01       	movw	r26, r24
    3954:	cb 01       	movw	r24, r22
    3956:	f8 01       	movw	r30, r16
    3958:	91 83       	std	Z+1, r25	; 0x01
    395a:	80 83       	st	Z, r24
    395c:	24 c0       	rjmp	.+72     	; 0x39a6 <__stack+0x28a7>
    395e:	ce 01       	movw	r24, r28
    3960:	8f 59       	subi	r24, 0x9F	; 159
    3962:	9e 4f       	sbci	r25, 0xFE	; 254
    3964:	20 e9       	ldi	r18, 0x90	; 144
    3966:	31 e0       	ldi	r19, 0x01	; 1
    3968:	fc 01       	movw	r30, r24
    396a:	31 83       	std	Z+1, r19	; 0x01
    396c:	20 83       	st	Z, r18
    396e:	ce 01       	movw	r24, r28
    3970:	8f 59       	subi	r24, 0x9F	; 159
    3972:	9e 4f       	sbci	r25, 0xFE	; 254
    3974:	fc 01       	movw	r30, r24
    3976:	80 81       	ld	r24, Z
    3978:	91 81       	ldd	r25, Z+1	; 0x01
    397a:	01 97       	sbiw	r24, 0x01	; 1
    397c:	f1 f7       	brne	.-4      	; 0x397a <__stack+0x287b>
    397e:	9e 01       	movw	r18, r28
    3980:	2f 59       	subi	r18, 0x9F	; 159
    3982:	3e 4f       	sbci	r19, 0xFE	; 254
    3984:	f9 01       	movw	r30, r18
    3986:	91 83       	std	Z+1, r25	; 0x01
    3988:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    398a:	ce 01       	movw	r24, r28
    398c:	81 5a       	subi	r24, 0xA1	; 161
    398e:	9e 4f       	sbci	r25, 0xFE	; 254
    3990:	9e 01       	movw	r18, r28
    3992:	21 5a       	subi	r18, 0xA1	; 161
    3994:	3e 4f       	sbci	r19, 0xFE	; 254
    3996:	f9 01       	movw	r30, r18
    3998:	20 81       	ld	r18, Z
    399a:	31 81       	ldd	r19, Z+1	; 0x01
    399c:	21 50       	subi	r18, 0x01	; 1
    399e:	31 09       	sbc	r19, r1
    39a0:	fc 01       	movw	r30, r24
    39a2:	31 83       	std	Z+1, r19	; 0x01
    39a4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39a6:	ce 01       	movw	r24, r28
    39a8:	81 5a       	subi	r24, 0xA1	; 161
    39aa:	9e 4f       	sbci	r25, 0xFE	; 254
    39ac:	fc 01       	movw	r30, r24
    39ae:	80 81       	ld	r24, Z
    39b0:	91 81       	ldd	r25, Z+1	; 0x01
    39b2:	89 2b       	or	r24, r25
    39b4:	a1 f6       	brne	.-88     	; 0x395e <__stack+0x285f>
    39b6:	2c c0       	rjmp	.+88     	; 0x3a10 <__stack+0x2911>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39b8:	8e 01       	movw	r16, r28
    39ba:	01 5a       	subi	r16, 0xA1	; 161
    39bc:	1e 4f       	sbci	r17, 0xFE	; 254
    39be:	ce 01       	movw	r24, r28
    39c0:	85 5a       	subi	r24, 0xA5	; 165
    39c2:	9e 4f       	sbci	r25, 0xFE	; 254
    39c4:	fc 01       	movw	r30, r24
    39c6:	60 81       	ld	r22, Z
    39c8:	71 81       	ldd	r23, Z+1	; 0x01
    39ca:	82 81       	ldd	r24, Z+2	; 0x02
    39cc:	93 81       	ldd	r25, Z+3	; 0x03
    39ce:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    39d2:	dc 01       	movw	r26, r24
    39d4:	cb 01       	movw	r24, r22
    39d6:	f8 01       	movw	r30, r16
    39d8:	91 83       	std	Z+1, r25	; 0x01
    39da:	80 83       	st	Z, r24
    39dc:	ce 01       	movw	r24, r28
    39de:	8d 59       	subi	r24, 0x9D	; 157
    39e0:	9e 4f       	sbci	r25, 0xFE	; 254
    39e2:	9e 01       	movw	r18, r28
    39e4:	21 5a       	subi	r18, 0xA1	; 161
    39e6:	3e 4f       	sbci	r19, 0xFE	; 254
    39e8:	f9 01       	movw	r30, r18
    39ea:	20 81       	ld	r18, Z
    39ec:	31 81       	ldd	r19, Z+1	; 0x01
    39ee:	fc 01       	movw	r30, r24
    39f0:	31 83       	std	Z+1, r19	; 0x01
    39f2:	20 83       	st	Z, r18
    39f4:	ce 01       	movw	r24, r28
    39f6:	8d 59       	subi	r24, 0x9D	; 157
    39f8:	9e 4f       	sbci	r25, 0xFE	; 254
    39fa:	fc 01       	movw	r30, r24
    39fc:	80 81       	ld	r24, Z
    39fe:	91 81       	ldd	r25, Z+1	; 0x01
    3a00:	01 97       	sbiw	r24, 0x01	; 1
    3a02:	f1 f7       	brne	.-4      	; 0x3a00 <__stack+0x2901>
    3a04:	9e 01       	movw	r18, r28
    3a06:	2d 59       	subi	r18, 0x9D	; 157
    3a08:	3e 4f       	sbci	r19, 0xFE	; 254
    3a0a:	f9 01       	movw	r30, r18
    3a0c:	91 83       	std	Z+1, r25	; 0x01
    3a0e:	80 83       	st	Z, r24
			_delay_ms(200);
			to_uARM("M2210 F760 T50\n");
    3a10:	8b e3       	ldi	r24, 0x3B	; 59
    3a12:	92 e0       	ldi	r25, 0x02	; 2
    3a14:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    3a18:	9e 01       	movw	r18, r28
    3a1a:	2f 56       	subi	r18, 0x6F	; 111
    3a1c:	3f 4f       	sbci	r19, 0xFF	; 255
    3a1e:	80 e0       	ldi	r24, 0x00	; 0
    3a20:	90 e0       	ldi	r25, 0x00	; 0
    3a22:	a6 e1       	ldi	r26, 0x16	; 22
    3a24:	b3 e4       	ldi	r27, 0x43	; 67
    3a26:	f9 01       	movw	r30, r18
    3a28:	80 83       	st	Z, r24
    3a2a:	91 83       	std	Z+1, r25	; 0x01
    3a2c:	a2 83       	std	Z+2, r26	; 0x02
    3a2e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3a30:	8e 01       	movw	r16, r28
    3a32:	0f 5a       	subi	r16, 0xAF	; 175
    3a34:	1e 4f       	sbci	r17, 0xFE	; 254
    3a36:	ce 01       	movw	r24, r28
    3a38:	8f 56       	subi	r24, 0x6F	; 111
    3a3a:	9f 4f       	sbci	r25, 0xFF	; 255
    3a3c:	20 e0       	ldi	r18, 0x00	; 0
    3a3e:	30 e0       	ldi	r19, 0x00	; 0
    3a40:	4a e7       	ldi	r20, 0x7A	; 122
    3a42:	55 e4       	ldi	r21, 0x45	; 69
    3a44:	fc 01       	movw	r30, r24
    3a46:	60 81       	ld	r22, Z
    3a48:	71 81       	ldd	r23, Z+1	; 0x01
    3a4a:	82 81       	ldd	r24, Z+2	; 0x02
    3a4c:	93 81       	ldd	r25, Z+3	; 0x03
    3a4e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    3a52:	dc 01       	movw	r26, r24
    3a54:	cb 01       	movw	r24, r22
    3a56:	f8 01       	movw	r30, r16
    3a58:	80 83       	st	Z, r24
    3a5a:	91 83       	std	Z+1, r25	; 0x01
    3a5c:	a2 83       	std	Z+2, r26	; 0x02
    3a5e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3a60:	ce 01       	movw	r24, r28
    3a62:	8f 5a       	subi	r24, 0xAF	; 175
    3a64:	9e 4f       	sbci	r25, 0xFE	; 254
    3a66:	20 e0       	ldi	r18, 0x00	; 0
    3a68:	30 e0       	ldi	r19, 0x00	; 0
    3a6a:	40 e8       	ldi	r20, 0x80	; 128
    3a6c:	5f e3       	ldi	r21, 0x3F	; 63
    3a6e:	fc 01       	movw	r30, r24
    3a70:	60 81       	ld	r22, Z
    3a72:	71 81       	ldd	r23, Z+1	; 0x01
    3a74:	82 81       	ldd	r24, Z+2	; 0x02
    3a76:	93 81       	ldd	r25, Z+3	; 0x03
    3a78:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    3a7c:	88 23       	and	r24, r24
    3a7e:	4c f4       	brge	.+18     	; 0x3a92 <__stack+0x2993>
		__ticks = 1;
    3a80:	ce 01       	movw	r24, r28
    3a82:	8b 5a       	subi	r24, 0xAB	; 171
    3a84:	9e 4f       	sbci	r25, 0xFE	; 254
    3a86:	21 e0       	ldi	r18, 0x01	; 1
    3a88:	30 e0       	ldi	r19, 0x00	; 0
    3a8a:	fc 01       	movw	r30, r24
    3a8c:	31 83       	std	Z+1, r19	; 0x01
    3a8e:	20 83       	st	Z, r18
    3a90:	6d c0       	rjmp	.+218    	; 0x3b6c <__stack+0x2a6d>
	else if (__tmp > 65535)
    3a92:	ce 01       	movw	r24, r28
    3a94:	8f 5a       	subi	r24, 0xAF	; 175
    3a96:	9e 4f       	sbci	r25, 0xFE	; 254
    3a98:	20 e0       	ldi	r18, 0x00	; 0
    3a9a:	3f ef       	ldi	r19, 0xFF	; 255
    3a9c:	4f e7       	ldi	r20, 0x7F	; 127
    3a9e:	57 e4       	ldi	r21, 0x47	; 71
    3aa0:	fc 01       	movw	r30, r24
    3aa2:	60 81       	ld	r22, Z
    3aa4:	71 81       	ldd	r23, Z+1	; 0x01
    3aa6:	82 81       	ldd	r24, Z+2	; 0x02
    3aa8:	93 81       	ldd	r25, Z+3	; 0x03
    3aaa:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    3aae:	18 16       	cp	r1, r24
    3ab0:	0c f0       	brlt	.+2      	; 0x3ab4 <__stack+0x29b5>
    3ab2:	4a c0       	rjmp	.+148    	; 0x3b48 <__stack+0x2a49>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ab4:	ce 01       	movw	r24, r28
    3ab6:	8f 56       	subi	r24, 0x6F	; 111
    3ab8:	9f 4f       	sbci	r25, 0xFF	; 255
    3aba:	20 e0       	ldi	r18, 0x00	; 0
    3abc:	30 e0       	ldi	r19, 0x00	; 0
    3abe:	40 e2       	ldi	r20, 0x20	; 32
    3ac0:	51 e4       	ldi	r21, 0x41	; 65
    3ac2:	fc 01       	movw	r30, r24
    3ac4:	60 81       	ld	r22, Z
    3ac6:	71 81       	ldd	r23, Z+1	; 0x01
    3ac8:	82 81       	ldd	r24, Z+2	; 0x02
    3aca:	93 81       	ldd	r25, Z+3	; 0x03
    3acc:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    3ad0:	dc 01       	movw	r26, r24
    3ad2:	cb 01       	movw	r24, r22
    3ad4:	8e 01       	movw	r16, r28
    3ad6:	0b 5a       	subi	r16, 0xAB	; 171
    3ad8:	1e 4f       	sbci	r17, 0xFE	; 254
    3ada:	bc 01       	movw	r22, r24
    3adc:	cd 01       	movw	r24, r26
    3ade:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    3ae2:	dc 01       	movw	r26, r24
    3ae4:	cb 01       	movw	r24, r22
    3ae6:	f8 01       	movw	r30, r16
    3ae8:	91 83       	std	Z+1, r25	; 0x01
    3aea:	80 83       	st	Z, r24
    3aec:	24 c0       	rjmp	.+72     	; 0x3b36 <__stack+0x2a37>
    3aee:	ce 01       	movw	r24, r28
    3af0:	89 5a       	subi	r24, 0xA9	; 169
    3af2:	9e 4f       	sbci	r25, 0xFE	; 254
    3af4:	20 e9       	ldi	r18, 0x90	; 144
    3af6:	31 e0       	ldi	r19, 0x01	; 1
    3af8:	fc 01       	movw	r30, r24
    3afa:	31 83       	std	Z+1, r19	; 0x01
    3afc:	20 83       	st	Z, r18
    3afe:	ce 01       	movw	r24, r28
    3b00:	89 5a       	subi	r24, 0xA9	; 169
    3b02:	9e 4f       	sbci	r25, 0xFE	; 254
    3b04:	fc 01       	movw	r30, r24
    3b06:	80 81       	ld	r24, Z
    3b08:	91 81       	ldd	r25, Z+1	; 0x01
    3b0a:	01 97       	sbiw	r24, 0x01	; 1
    3b0c:	f1 f7       	brne	.-4      	; 0x3b0a <__stack+0x2a0b>
    3b0e:	9e 01       	movw	r18, r28
    3b10:	29 5a       	subi	r18, 0xA9	; 169
    3b12:	3e 4f       	sbci	r19, 0xFE	; 254
    3b14:	f9 01       	movw	r30, r18
    3b16:	91 83       	std	Z+1, r25	; 0x01
    3b18:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b1a:	ce 01       	movw	r24, r28
    3b1c:	8b 5a       	subi	r24, 0xAB	; 171
    3b1e:	9e 4f       	sbci	r25, 0xFE	; 254
    3b20:	9e 01       	movw	r18, r28
    3b22:	2b 5a       	subi	r18, 0xAB	; 171
    3b24:	3e 4f       	sbci	r19, 0xFE	; 254
    3b26:	f9 01       	movw	r30, r18
    3b28:	20 81       	ld	r18, Z
    3b2a:	31 81       	ldd	r19, Z+1	; 0x01
    3b2c:	21 50       	subi	r18, 0x01	; 1
    3b2e:	31 09       	sbc	r19, r1
    3b30:	fc 01       	movw	r30, r24
    3b32:	31 83       	std	Z+1, r19	; 0x01
    3b34:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b36:	ce 01       	movw	r24, r28
    3b38:	8b 5a       	subi	r24, 0xAB	; 171
    3b3a:	9e 4f       	sbci	r25, 0xFE	; 254
    3b3c:	fc 01       	movw	r30, r24
    3b3e:	80 81       	ld	r24, Z
    3b40:	91 81       	ldd	r25, Z+1	; 0x01
    3b42:	89 2b       	or	r24, r25
    3b44:	a1 f6       	brne	.-88     	; 0x3aee <__stack+0x29ef>
    3b46:	2c c0       	rjmp	.+88     	; 0x3ba0 <__stack+0x2aa1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b48:	8e 01       	movw	r16, r28
    3b4a:	0b 5a       	subi	r16, 0xAB	; 171
    3b4c:	1e 4f       	sbci	r17, 0xFE	; 254
    3b4e:	ce 01       	movw	r24, r28
    3b50:	8f 5a       	subi	r24, 0xAF	; 175
    3b52:	9e 4f       	sbci	r25, 0xFE	; 254
    3b54:	fc 01       	movw	r30, r24
    3b56:	60 81       	ld	r22, Z
    3b58:	71 81       	ldd	r23, Z+1	; 0x01
    3b5a:	82 81       	ldd	r24, Z+2	; 0x02
    3b5c:	93 81       	ldd	r25, Z+3	; 0x03
    3b5e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    3b62:	dc 01       	movw	r26, r24
    3b64:	cb 01       	movw	r24, r22
    3b66:	f8 01       	movw	r30, r16
    3b68:	91 83       	std	Z+1, r25	; 0x01
    3b6a:	80 83       	st	Z, r24
    3b6c:	ce 01       	movw	r24, r28
    3b6e:	87 5a       	subi	r24, 0xA7	; 167
    3b70:	9e 4f       	sbci	r25, 0xFE	; 254
    3b72:	9e 01       	movw	r18, r28
    3b74:	2b 5a       	subi	r18, 0xAB	; 171
    3b76:	3e 4f       	sbci	r19, 0xFE	; 254
    3b78:	f9 01       	movw	r30, r18
    3b7a:	20 81       	ld	r18, Z
    3b7c:	31 81       	ldd	r19, Z+1	; 0x01
    3b7e:	fc 01       	movw	r30, r24
    3b80:	31 83       	std	Z+1, r19	; 0x01
    3b82:	20 83       	st	Z, r18
    3b84:	ce 01       	movw	r24, r28
    3b86:	87 5a       	subi	r24, 0xA7	; 167
    3b88:	9e 4f       	sbci	r25, 0xFE	; 254
    3b8a:	fc 01       	movw	r30, r24
    3b8c:	80 81       	ld	r24, Z
    3b8e:	91 81       	ldd	r25, Z+1	; 0x01
    3b90:	01 97       	sbiw	r24, 0x01	; 1
    3b92:	f1 f7       	brne	.-4      	; 0x3b90 <__stack+0x2a91>
    3b94:	9e 01       	movw	r18, r28
    3b96:	27 5a       	subi	r18, 0xA7	; 167
    3b98:	3e 4f       	sbci	r19, 0xFE	; 254
    3b9a:	f9 01       	movw	r30, r18
    3b9c:	91 83       	std	Z+1, r25	; 0x01
    3b9e:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F860 T100\n");
    3ba0:	8b e4       	ldi	r24, 0x4B	; 75
    3ba2:	92 e0       	ldi	r25, 0x02	; 2
    3ba4:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    3ba8:	9e 01       	movw	r18, r28
    3baa:	2b 56       	subi	r18, 0x6B	; 107
    3bac:	3f 4f       	sbci	r19, 0xFF	; 255
    3bae:	80 e0       	ldi	r24, 0x00	; 0
    3bb0:	90 e0       	ldi	r25, 0x00	; 0
    3bb2:	a6 e9       	ldi	r26, 0x96	; 150
    3bb4:	b3 e4       	ldi	r27, 0x43	; 67
    3bb6:	f9 01       	movw	r30, r18
    3bb8:	80 83       	st	Z, r24
    3bba:	91 83       	std	Z+1, r25	; 0x01
    3bbc:	a2 83       	std	Z+2, r26	; 0x02
    3bbe:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3bc0:	8e 01       	movw	r16, r28
    3bc2:	09 5b       	subi	r16, 0xB9	; 185
    3bc4:	1e 4f       	sbci	r17, 0xFE	; 254
    3bc6:	ce 01       	movw	r24, r28
    3bc8:	8b 56       	subi	r24, 0x6B	; 107
    3bca:	9f 4f       	sbci	r25, 0xFF	; 255
    3bcc:	20 e0       	ldi	r18, 0x00	; 0
    3bce:	30 e0       	ldi	r19, 0x00	; 0
    3bd0:	4a e7       	ldi	r20, 0x7A	; 122
    3bd2:	55 e4       	ldi	r21, 0x45	; 69
    3bd4:	fc 01       	movw	r30, r24
    3bd6:	60 81       	ld	r22, Z
    3bd8:	71 81       	ldd	r23, Z+1	; 0x01
    3bda:	82 81       	ldd	r24, Z+2	; 0x02
    3bdc:	93 81       	ldd	r25, Z+3	; 0x03
    3bde:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    3be2:	dc 01       	movw	r26, r24
    3be4:	cb 01       	movw	r24, r22
    3be6:	f8 01       	movw	r30, r16
    3be8:	80 83       	st	Z, r24
    3bea:	91 83       	std	Z+1, r25	; 0x01
    3bec:	a2 83       	std	Z+2, r26	; 0x02
    3bee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3bf0:	ce 01       	movw	r24, r28
    3bf2:	89 5b       	subi	r24, 0xB9	; 185
    3bf4:	9e 4f       	sbci	r25, 0xFE	; 254
    3bf6:	20 e0       	ldi	r18, 0x00	; 0
    3bf8:	30 e0       	ldi	r19, 0x00	; 0
    3bfa:	40 e8       	ldi	r20, 0x80	; 128
    3bfc:	5f e3       	ldi	r21, 0x3F	; 63
    3bfe:	fc 01       	movw	r30, r24
    3c00:	60 81       	ld	r22, Z
    3c02:	71 81       	ldd	r23, Z+1	; 0x01
    3c04:	82 81       	ldd	r24, Z+2	; 0x02
    3c06:	93 81       	ldd	r25, Z+3	; 0x03
    3c08:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    3c0c:	88 23       	and	r24, r24
    3c0e:	4c f4       	brge	.+18     	; 0x3c22 <__stack+0x2b23>
		__ticks = 1;
    3c10:	ce 01       	movw	r24, r28
    3c12:	85 5b       	subi	r24, 0xB5	; 181
    3c14:	9e 4f       	sbci	r25, 0xFE	; 254
    3c16:	21 e0       	ldi	r18, 0x01	; 1
    3c18:	30 e0       	ldi	r19, 0x00	; 0
    3c1a:	fc 01       	movw	r30, r24
    3c1c:	31 83       	std	Z+1, r19	; 0x01
    3c1e:	20 83       	st	Z, r18
    3c20:	6d c0       	rjmp	.+218    	; 0x3cfc <__stack+0x2bfd>
	else if (__tmp > 65535)
    3c22:	ce 01       	movw	r24, r28
    3c24:	89 5b       	subi	r24, 0xB9	; 185
    3c26:	9e 4f       	sbci	r25, 0xFE	; 254
    3c28:	20 e0       	ldi	r18, 0x00	; 0
    3c2a:	3f ef       	ldi	r19, 0xFF	; 255
    3c2c:	4f e7       	ldi	r20, 0x7F	; 127
    3c2e:	57 e4       	ldi	r21, 0x47	; 71
    3c30:	fc 01       	movw	r30, r24
    3c32:	60 81       	ld	r22, Z
    3c34:	71 81       	ldd	r23, Z+1	; 0x01
    3c36:	82 81       	ldd	r24, Z+2	; 0x02
    3c38:	93 81       	ldd	r25, Z+3	; 0x03
    3c3a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    3c3e:	18 16       	cp	r1, r24
    3c40:	0c f0       	brlt	.+2      	; 0x3c44 <__stack+0x2b45>
    3c42:	4a c0       	rjmp	.+148    	; 0x3cd8 <__stack+0x2bd9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c44:	ce 01       	movw	r24, r28
    3c46:	8b 56       	subi	r24, 0x6B	; 107
    3c48:	9f 4f       	sbci	r25, 0xFF	; 255
    3c4a:	20 e0       	ldi	r18, 0x00	; 0
    3c4c:	30 e0       	ldi	r19, 0x00	; 0
    3c4e:	40 e2       	ldi	r20, 0x20	; 32
    3c50:	51 e4       	ldi	r21, 0x41	; 65
    3c52:	fc 01       	movw	r30, r24
    3c54:	60 81       	ld	r22, Z
    3c56:	71 81       	ldd	r23, Z+1	; 0x01
    3c58:	82 81       	ldd	r24, Z+2	; 0x02
    3c5a:	93 81       	ldd	r25, Z+3	; 0x03
    3c5c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    3c60:	dc 01       	movw	r26, r24
    3c62:	cb 01       	movw	r24, r22
    3c64:	8e 01       	movw	r16, r28
    3c66:	05 5b       	subi	r16, 0xB5	; 181
    3c68:	1e 4f       	sbci	r17, 0xFE	; 254
    3c6a:	bc 01       	movw	r22, r24
    3c6c:	cd 01       	movw	r24, r26
    3c6e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    3c72:	dc 01       	movw	r26, r24
    3c74:	cb 01       	movw	r24, r22
    3c76:	f8 01       	movw	r30, r16
    3c78:	91 83       	std	Z+1, r25	; 0x01
    3c7a:	80 83       	st	Z, r24
    3c7c:	24 c0       	rjmp	.+72     	; 0x3cc6 <__stack+0x2bc7>
    3c7e:	ce 01       	movw	r24, r28
    3c80:	83 5b       	subi	r24, 0xB3	; 179
    3c82:	9e 4f       	sbci	r25, 0xFE	; 254
    3c84:	20 e9       	ldi	r18, 0x90	; 144
    3c86:	31 e0       	ldi	r19, 0x01	; 1
    3c88:	fc 01       	movw	r30, r24
    3c8a:	31 83       	std	Z+1, r19	; 0x01
    3c8c:	20 83       	st	Z, r18
    3c8e:	ce 01       	movw	r24, r28
    3c90:	83 5b       	subi	r24, 0xB3	; 179
    3c92:	9e 4f       	sbci	r25, 0xFE	; 254
    3c94:	fc 01       	movw	r30, r24
    3c96:	80 81       	ld	r24, Z
    3c98:	91 81       	ldd	r25, Z+1	; 0x01
    3c9a:	01 97       	sbiw	r24, 0x01	; 1
    3c9c:	f1 f7       	brne	.-4      	; 0x3c9a <__stack+0x2b9b>
    3c9e:	9e 01       	movw	r18, r28
    3ca0:	23 5b       	subi	r18, 0xB3	; 179
    3ca2:	3e 4f       	sbci	r19, 0xFE	; 254
    3ca4:	f9 01       	movw	r30, r18
    3ca6:	91 83       	std	Z+1, r25	; 0x01
    3ca8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3caa:	ce 01       	movw	r24, r28
    3cac:	85 5b       	subi	r24, 0xB5	; 181
    3cae:	9e 4f       	sbci	r25, 0xFE	; 254
    3cb0:	9e 01       	movw	r18, r28
    3cb2:	25 5b       	subi	r18, 0xB5	; 181
    3cb4:	3e 4f       	sbci	r19, 0xFE	; 254
    3cb6:	f9 01       	movw	r30, r18
    3cb8:	20 81       	ld	r18, Z
    3cba:	31 81       	ldd	r19, Z+1	; 0x01
    3cbc:	21 50       	subi	r18, 0x01	; 1
    3cbe:	31 09       	sbc	r19, r1
    3cc0:	fc 01       	movw	r30, r24
    3cc2:	31 83       	std	Z+1, r19	; 0x01
    3cc4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3cc6:	ce 01       	movw	r24, r28
    3cc8:	85 5b       	subi	r24, 0xB5	; 181
    3cca:	9e 4f       	sbci	r25, 0xFE	; 254
    3ccc:	fc 01       	movw	r30, r24
    3cce:	80 81       	ld	r24, Z
    3cd0:	91 81       	ldd	r25, Z+1	; 0x01
    3cd2:	89 2b       	or	r24, r25
    3cd4:	a1 f6       	brne	.-88     	; 0x3c7e <__stack+0x2b7f>
    3cd6:	2c c0       	rjmp	.+88     	; 0x3d30 <__stack+0x2c31>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3cd8:	8e 01       	movw	r16, r28
    3cda:	05 5b       	subi	r16, 0xB5	; 181
    3cdc:	1e 4f       	sbci	r17, 0xFE	; 254
    3cde:	ce 01       	movw	r24, r28
    3ce0:	89 5b       	subi	r24, 0xB9	; 185
    3ce2:	9e 4f       	sbci	r25, 0xFE	; 254
    3ce4:	fc 01       	movw	r30, r24
    3ce6:	60 81       	ld	r22, Z
    3ce8:	71 81       	ldd	r23, Z+1	; 0x01
    3cea:	82 81       	ldd	r24, Z+2	; 0x02
    3cec:	93 81       	ldd	r25, Z+3	; 0x03
    3cee:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    3cf2:	dc 01       	movw	r26, r24
    3cf4:	cb 01       	movw	r24, r22
    3cf6:	f8 01       	movw	r30, r16
    3cf8:	91 83       	std	Z+1, r25	; 0x01
    3cfa:	80 83       	st	Z, r24
    3cfc:	ce 01       	movw	r24, r28
    3cfe:	81 5b       	subi	r24, 0xB1	; 177
    3d00:	9e 4f       	sbci	r25, 0xFE	; 254
    3d02:	9e 01       	movw	r18, r28
    3d04:	25 5b       	subi	r18, 0xB5	; 181
    3d06:	3e 4f       	sbci	r19, 0xFE	; 254
    3d08:	f9 01       	movw	r30, r18
    3d0a:	20 81       	ld	r18, Z
    3d0c:	31 81       	ldd	r19, Z+1	; 0x01
    3d0e:	fc 01       	movw	r30, r24
    3d10:	31 83       	std	Z+1, r19	; 0x01
    3d12:	20 83       	st	Z, r18
    3d14:	ce 01       	movw	r24, r28
    3d16:	81 5b       	subi	r24, 0xB1	; 177
    3d18:	9e 4f       	sbci	r25, 0xFE	; 254
    3d1a:	fc 01       	movw	r30, r24
    3d1c:	80 81       	ld	r24, Z
    3d1e:	91 81       	ldd	r25, Z+1	; 0x01
    3d20:	01 97       	sbiw	r24, 0x01	; 1
    3d22:	f1 f7       	brne	.-4      	; 0x3d20 <__stack+0x2c21>
    3d24:	9e 01       	movw	r18, r28
    3d26:	21 5b       	subi	r18, 0xB1	; 177
    3d28:	3e 4f       	sbci	r19, 0xFE	; 254
    3d2a:	f9 01       	movw	r30, r18
    3d2c:	91 83       	std	Z+1, r25	; 0x01
    3d2e:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 700 T80\n");
    3d30:	8c e8       	ldi	r24, 0x8C	; 140
    3d32:	92 e0       	ldi	r25, 0x02	; 2
    3d34:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    3d38:	9e 01       	movw	r18, r28
    3d3a:	27 56       	subi	r18, 0x67	; 103
    3d3c:	3f 4f       	sbci	r19, 0xFF	; 255
    3d3e:	80 e0       	ldi	r24, 0x00	; 0
    3d40:	90 e0       	ldi	r25, 0x00	; 0
    3d42:	a6 e1       	ldi	r26, 0x16	; 22
    3d44:	b3 e4       	ldi	r27, 0x43	; 67
    3d46:	f9 01       	movw	r30, r18
    3d48:	80 83       	st	Z, r24
    3d4a:	91 83       	std	Z+1, r25	; 0x01
    3d4c:	a2 83       	std	Z+2, r26	; 0x02
    3d4e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3d50:	8e 01       	movw	r16, r28
    3d52:	03 5c       	subi	r16, 0xC3	; 195
    3d54:	1e 4f       	sbci	r17, 0xFE	; 254
    3d56:	ce 01       	movw	r24, r28
    3d58:	87 56       	subi	r24, 0x67	; 103
    3d5a:	9f 4f       	sbci	r25, 0xFF	; 255
    3d5c:	20 e0       	ldi	r18, 0x00	; 0
    3d5e:	30 e0       	ldi	r19, 0x00	; 0
    3d60:	4a e7       	ldi	r20, 0x7A	; 122
    3d62:	55 e4       	ldi	r21, 0x45	; 69
    3d64:	fc 01       	movw	r30, r24
    3d66:	60 81       	ld	r22, Z
    3d68:	71 81       	ldd	r23, Z+1	; 0x01
    3d6a:	82 81       	ldd	r24, Z+2	; 0x02
    3d6c:	93 81       	ldd	r25, Z+3	; 0x03
    3d6e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    3d72:	dc 01       	movw	r26, r24
    3d74:	cb 01       	movw	r24, r22
    3d76:	f8 01       	movw	r30, r16
    3d78:	80 83       	st	Z, r24
    3d7a:	91 83       	std	Z+1, r25	; 0x01
    3d7c:	a2 83       	std	Z+2, r26	; 0x02
    3d7e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3d80:	ce 01       	movw	r24, r28
    3d82:	83 5c       	subi	r24, 0xC3	; 195
    3d84:	9e 4f       	sbci	r25, 0xFE	; 254
    3d86:	20 e0       	ldi	r18, 0x00	; 0
    3d88:	30 e0       	ldi	r19, 0x00	; 0
    3d8a:	40 e8       	ldi	r20, 0x80	; 128
    3d8c:	5f e3       	ldi	r21, 0x3F	; 63
    3d8e:	fc 01       	movw	r30, r24
    3d90:	60 81       	ld	r22, Z
    3d92:	71 81       	ldd	r23, Z+1	; 0x01
    3d94:	82 81       	ldd	r24, Z+2	; 0x02
    3d96:	93 81       	ldd	r25, Z+3	; 0x03
    3d98:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    3d9c:	88 23       	and	r24, r24
    3d9e:	4c f4       	brge	.+18     	; 0x3db2 <__stack+0x2cb3>
		__ticks = 1;
    3da0:	ce 01       	movw	r24, r28
    3da2:	8f 5b       	subi	r24, 0xBF	; 191
    3da4:	9e 4f       	sbci	r25, 0xFE	; 254
    3da6:	21 e0       	ldi	r18, 0x01	; 1
    3da8:	30 e0       	ldi	r19, 0x00	; 0
    3daa:	fc 01       	movw	r30, r24
    3dac:	31 83       	std	Z+1, r19	; 0x01
    3dae:	20 83       	st	Z, r18
    3db0:	6d c0       	rjmp	.+218    	; 0x3e8c <__stack+0x2d8d>
	else if (__tmp > 65535)
    3db2:	ce 01       	movw	r24, r28
    3db4:	83 5c       	subi	r24, 0xC3	; 195
    3db6:	9e 4f       	sbci	r25, 0xFE	; 254
    3db8:	20 e0       	ldi	r18, 0x00	; 0
    3dba:	3f ef       	ldi	r19, 0xFF	; 255
    3dbc:	4f e7       	ldi	r20, 0x7F	; 127
    3dbe:	57 e4       	ldi	r21, 0x47	; 71
    3dc0:	fc 01       	movw	r30, r24
    3dc2:	60 81       	ld	r22, Z
    3dc4:	71 81       	ldd	r23, Z+1	; 0x01
    3dc6:	82 81       	ldd	r24, Z+2	; 0x02
    3dc8:	93 81       	ldd	r25, Z+3	; 0x03
    3dca:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    3dce:	18 16       	cp	r1, r24
    3dd0:	0c f0       	brlt	.+2      	; 0x3dd4 <__stack+0x2cd5>
    3dd2:	4a c0       	rjmp	.+148    	; 0x3e68 <__stack+0x2d69>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3dd4:	ce 01       	movw	r24, r28
    3dd6:	87 56       	subi	r24, 0x67	; 103
    3dd8:	9f 4f       	sbci	r25, 0xFF	; 255
    3dda:	20 e0       	ldi	r18, 0x00	; 0
    3ddc:	30 e0       	ldi	r19, 0x00	; 0
    3dde:	40 e2       	ldi	r20, 0x20	; 32
    3de0:	51 e4       	ldi	r21, 0x41	; 65
    3de2:	fc 01       	movw	r30, r24
    3de4:	60 81       	ld	r22, Z
    3de6:	71 81       	ldd	r23, Z+1	; 0x01
    3de8:	82 81       	ldd	r24, Z+2	; 0x02
    3dea:	93 81       	ldd	r25, Z+3	; 0x03
    3dec:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    3df0:	dc 01       	movw	r26, r24
    3df2:	cb 01       	movw	r24, r22
    3df4:	8e 01       	movw	r16, r28
    3df6:	0f 5b       	subi	r16, 0xBF	; 191
    3df8:	1e 4f       	sbci	r17, 0xFE	; 254
    3dfa:	bc 01       	movw	r22, r24
    3dfc:	cd 01       	movw	r24, r26
    3dfe:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    3e02:	dc 01       	movw	r26, r24
    3e04:	cb 01       	movw	r24, r22
    3e06:	f8 01       	movw	r30, r16
    3e08:	91 83       	std	Z+1, r25	; 0x01
    3e0a:	80 83       	st	Z, r24
    3e0c:	24 c0       	rjmp	.+72     	; 0x3e56 <__stack+0x2d57>
    3e0e:	ce 01       	movw	r24, r28
    3e10:	8d 5b       	subi	r24, 0xBD	; 189
    3e12:	9e 4f       	sbci	r25, 0xFE	; 254
    3e14:	20 e9       	ldi	r18, 0x90	; 144
    3e16:	31 e0       	ldi	r19, 0x01	; 1
    3e18:	fc 01       	movw	r30, r24
    3e1a:	31 83       	std	Z+1, r19	; 0x01
    3e1c:	20 83       	st	Z, r18
    3e1e:	ce 01       	movw	r24, r28
    3e20:	8d 5b       	subi	r24, 0xBD	; 189
    3e22:	9e 4f       	sbci	r25, 0xFE	; 254
    3e24:	fc 01       	movw	r30, r24
    3e26:	80 81       	ld	r24, Z
    3e28:	91 81       	ldd	r25, Z+1	; 0x01
    3e2a:	01 97       	sbiw	r24, 0x01	; 1
    3e2c:	f1 f7       	brne	.-4      	; 0x3e2a <__stack+0x2d2b>
    3e2e:	9e 01       	movw	r18, r28
    3e30:	2d 5b       	subi	r18, 0xBD	; 189
    3e32:	3e 4f       	sbci	r19, 0xFE	; 254
    3e34:	f9 01       	movw	r30, r18
    3e36:	91 83       	std	Z+1, r25	; 0x01
    3e38:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e3a:	ce 01       	movw	r24, r28
    3e3c:	8f 5b       	subi	r24, 0xBF	; 191
    3e3e:	9e 4f       	sbci	r25, 0xFE	; 254
    3e40:	9e 01       	movw	r18, r28
    3e42:	2f 5b       	subi	r18, 0xBF	; 191
    3e44:	3e 4f       	sbci	r19, 0xFE	; 254
    3e46:	f9 01       	movw	r30, r18
    3e48:	20 81       	ld	r18, Z
    3e4a:	31 81       	ldd	r19, Z+1	; 0x01
    3e4c:	21 50       	subi	r18, 0x01	; 1
    3e4e:	31 09       	sbc	r19, r1
    3e50:	fc 01       	movw	r30, r24
    3e52:	31 83       	std	Z+1, r19	; 0x01
    3e54:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e56:	ce 01       	movw	r24, r28
    3e58:	8f 5b       	subi	r24, 0xBF	; 191
    3e5a:	9e 4f       	sbci	r25, 0xFE	; 254
    3e5c:	fc 01       	movw	r30, r24
    3e5e:	80 81       	ld	r24, Z
    3e60:	91 81       	ldd	r25, Z+1	; 0x01
    3e62:	89 2b       	or	r24, r25
    3e64:	a1 f6       	brne	.-88     	; 0x3e0e <__stack+0x2d0f>
    3e66:	2c c0       	rjmp	.+88     	; 0x3ec0 <__stack+0x2dc1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e68:	8e 01       	movw	r16, r28
    3e6a:	0f 5b       	subi	r16, 0xBF	; 191
    3e6c:	1e 4f       	sbci	r17, 0xFE	; 254
    3e6e:	ce 01       	movw	r24, r28
    3e70:	83 5c       	subi	r24, 0xC3	; 195
    3e72:	9e 4f       	sbci	r25, 0xFE	; 254
    3e74:	fc 01       	movw	r30, r24
    3e76:	60 81       	ld	r22, Z
    3e78:	71 81       	ldd	r23, Z+1	; 0x01
    3e7a:	82 81       	ldd	r24, Z+2	; 0x02
    3e7c:	93 81       	ldd	r25, Z+3	; 0x03
    3e7e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    3e82:	dc 01       	movw	r26, r24
    3e84:	cb 01       	movw	r24, r22
    3e86:	f8 01       	movw	r30, r16
    3e88:	91 83       	std	Z+1, r25	; 0x01
    3e8a:	80 83       	st	Z, r24
    3e8c:	ce 01       	movw	r24, r28
    3e8e:	8b 5b       	subi	r24, 0xBB	; 187
    3e90:	9e 4f       	sbci	r25, 0xFE	; 254
    3e92:	9e 01       	movw	r18, r28
    3e94:	2f 5b       	subi	r18, 0xBF	; 191
    3e96:	3e 4f       	sbci	r19, 0xFE	; 254
    3e98:	f9 01       	movw	r30, r18
    3e9a:	20 81       	ld	r18, Z
    3e9c:	31 81       	ldd	r19, Z+1	; 0x01
    3e9e:	fc 01       	movw	r30, r24
    3ea0:	31 83       	std	Z+1, r19	; 0x01
    3ea2:	20 83       	st	Z, r18
    3ea4:	ce 01       	movw	r24, r28
    3ea6:	8b 5b       	subi	r24, 0xBB	; 187
    3ea8:	9e 4f       	sbci	r25, 0xFE	; 254
    3eaa:	fc 01       	movw	r30, r24
    3eac:	80 81       	ld	r24, Z
    3eae:	91 81       	ldd	r25, Z+1	; 0x01
    3eb0:	01 97       	sbiw	r24, 0x01	; 1
    3eb2:	f1 f7       	brne	.-4      	; 0x3eb0 <__stack+0x2db1>
    3eb4:	9e 01       	movw	r18, r28
    3eb6:	2b 5b       	subi	r18, 0xBB	; 187
    3eb8:	3e 4f       	sbci	r19, 0xFE	; 254
    3eba:	f9 01       	movw	r30, r18
    3ebc:	91 83       	std	Z+1, r25	; 0x01
    3ebe:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F760 T50\n");
    3ec0:	8b e3       	ldi	r24, 0x3B	; 59
    3ec2:	92 e0       	ldi	r25, 0x02	; 2
    3ec4:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    3ec8:	9e 01       	movw	r18, r28
    3eca:	23 56       	subi	r18, 0x63	; 99
    3ecc:	3f 4f       	sbci	r19, 0xFF	; 255
    3ece:	80 e0       	ldi	r24, 0x00	; 0
    3ed0:	90 e0       	ldi	r25, 0x00	; 0
    3ed2:	af ea       	ldi	r26, 0xAF	; 175
    3ed4:	b3 e4       	ldi	r27, 0x43	; 67
    3ed6:	f9 01       	movw	r30, r18
    3ed8:	80 83       	st	Z, r24
    3eda:	91 83       	std	Z+1, r25	; 0x01
    3edc:	a2 83       	std	Z+2, r26	; 0x02
    3ede:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3ee0:	8e 01       	movw	r16, r28
    3ee2:	0d 5c       	subi	r16, 0xCD	; 205
    3ee4:	1e 4f       	sbci	r17, 0xFE	; 254
    3ee6:	ce 01       	movw	r24, r28
    3ee8:	83 56       	subi	r24, 0x63	; 99
    3eea:	9f 4f       	sbci	r25, 0xFF	; 255
    3eec:	20 e0       	ldi	r18, 0x00	; 0
    3eee:	30 e0       	ldi	r19, 0x00	; 0
    3ef0:	4a e7       	ldi	r20, 0x7A	; 122
    3ef2:	55 e4       	ldi	r21, 0x45	; 69
    3ef4:	fc 01       	movw	r30, r24
    3ef6:	60 81       	ld	r22, Z
    3ef8:	71 81       	ldd	r23, Z+1	; 0x01
    3efa:	82 81       	ldd	r24, Z+2	; 0x02
    3efc:	93 81       	ldd	r25, Z+3	; 0x03
    3efe:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    3f02:	dc 01       	movw	r26, r24
    3f04:	cb 01       	movw	r24, r22
    3f06:	f8 01       	movw	r30, r16
    3f08:	80 83       	st	Z, r24
    3f0a:	91 83       	std	Z+1, r25	; 0x01
    3f0c:	a2 83       	std	Z+2, r26	; 0x02
    3f0e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3f10:	ce 01       	movw	r24, r28
    3f12:	8d 5c       	subi	r24, 0xCD	; 205
    3f14:	9e 4f       	sbci	r25, 0xFE	; 254
    3f16:	20 e0       	ldi	r18, 0x00	; 0
    3f18:	30 e0       	ldi	r19, 0x00	; 0
    3f1a:	40 e8       	ldi	r20, 0x80	; 128
    3f1c:	5f e3       	ldi	r21, 0x3F	; 63
    3f1e:	fc 01       	movw	r30, r24
    3f20:	60 81       	ld	r22, Z
    3f22:	71 81       	ldd	r23, Z+1	; 0x01
    3f24:	82 81       	ldd	r24, Z+2	; 0x02
    3f26:	93 81       	ldd	r25, Z+3	; 0x03
    3f28:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    3f2c:	88 23       	and	r24, r24
    3f2e:	4c f4       	brge	.+18     	; 0x3f42 <__stack+0x2e43>
		__ticks = 1;
    3f30:	ce 01       	movw	r24, r28
    3f32:	89 5c       	subi	r24, 0xC9	; 201
    3f34:	9e 4f       	sbci	r25, 0xFE	; 254
    3f36:	21 e0       	ldi	r18, 0x01	; 1
    3f38:	30 e0       	ldi	r19, 0x00	; 0
    3f3a:	fc 01       	movw	r30, r24
    3f3c:	31 83       	std	Z+1, r19	; 0x01
    3f3e:	20 83       	st	Z, r18
    3f40:	6d c0       	rjmp	.+218    	; 0x401c <__stack+0x2f1d>
	else if (__tmp > 65535)
    3f42:	ce 01       	movw	r24, r28
    3f44:	8d 5c       	subi	r24, 0xCD	; 205
    3f46:	9e 4f       	sbci	r25, 0xFE	; 254
    3f48:	20 e0       	ldi	r18, 0x00	; 0
    3f4a:	3f ef       	ldi	r19, 0xFF	; 255
    3f4c:	4f e7       	ldi	r20, 0x7F	; 127
    3f4e:	57 e4       	ldi	r21, 0x47	; 71
    3f50:	fc 01       	movw	r30, r24
    3f52:	60 81       	ld	r22, Z
    3f54:	71 81       	ldd	r23, Z+1	; 0x01
    3f56:	82 81       	ldd	r24, Z+2	; 0x02
    3f58:	93 81       	ldd	r25, Z+3	; 0x03
    3f5a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    3f5e:	18 16       	cp	r1, r24
    3f60:	0c f0       	brlt	.+2      	; 0x3f64 <__stack+0x2e65>
    3f62:	4a c0       	rjmp	.+148    	; 0x3ff8 <__stack+0x2ef9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f64:	ce 01       	movw	r24, r28
    3f66:	83 56       	subi	r24, 0x63	; 99
    3f68:	9f 4f       	sbci	r25, 0xFF	; 255
    3f6a:	20 e0       	ldi	r18, 0x00	; 0
    3f6c:	30 e0       	ldi	r19, 0x00	; 0
    3f6e:	40 e2       	ldi	r20, 0x20	; 32
    3f70:	51 e4       	ldi	r21, 0x41	; 65
    3f72:	fc 01       	movw	r30, r24
    3f74:	60 81       	ld	r22, Z
    3f76:	71 81       	ldd	r23, Z+1	; 0x01
    3f78:	82 81       	ldd	r24, Z+2	; 0x02
    3f7a:	93 81       	ldd	r25, Z+3	; 0x03
    3f7c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    3f80:	dc 01       	movw	r26, r24
    3f82:	cb 01       	movw	r24, r22
    3f84:	8e 01       	movw	r16, r28
    3f86:	09 5c       	subi	r16, 0xC9	; 201
    3f88:	1e 4f       	sbci	r17, 0xFE	; 254
    3f8a:	bc 01       	movw	r22, r24
    3f8c:	cd 01       	movw	r24, r26
    3f8e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    3f92:	dc 01       	movw	r26, r24
    3f94:	cb 01       	movw	r24, r22
    3f96:	f8 01       	movw	r30, r16
    3f98:	91 83       	std	Z+1, r25	; 0x01
    3f9a:	80 83       	st	Z, r24
    3f9c:	24 c0       	rjmp	.+72     	; 0x3fe6 <__stack+0x2ee7>
    3f9e:	ce 01       	movw	r24, r28
    3fa0:	87 5c       	subi	r24, 0xC7	; 199
    3fa2:	9e 4f       	sbci	r25, 0xFE	; 254
    3fa4:	20 e9       	ldi	r18, 0x90	; 144
    3fa6:	31 e0       	ldi	r19, 0x01	; 1
    3fa8:	fc 01       	movw	r30, r24
    3faa:	31 83       	std	Z+1, r19	; 0x01
    3fac:	20 83       	st	Z, r18
    3fae:	ce 01       	movw	r24, r28
    3fb0:	87 5c       	subi	r24, 0xC7	; 199
    3fb2:	9e 4f       	sbci	r25, 0xFE	; 254
    3fb4:	fc 01       	movw	r30, r24
    3fb6:	80 81       	ld	r24, Z
    3fb8:	91 81       	ldd	r25, Z+1	; 0x01
    3fba:	01 97       	sbiw	r24, 0x01	; 1
    3fbc:	f1 f7       	brne	.-4      	; 0x3fba <__stack+0x2ebb>
    3fbe:	9e 01       	movw	r18, r28
    3fc0:	27 5c       	subi	r18, 0xC7	; 199
    3fc2:	3e 4f       	sbci	r19, 0xFE	; 254
    3fc4:	f9 01       	movw	r30, r18
    3fc6:	91 83       	std	Z+1, r25	; 0x01
    3fc8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3fca:	ce 01       	movw	r24, r28
    3fcc:	89 5c       	subi	r24, 0xC9	; 201
    3fce:	9e 4f       	sbci	r25, 0xFE	; 254
    3fd0:	9e 01       	movw	r18, r28
    3fd2:	29 5c       	subi	r18, 0xC9	; 201
    3fd4:	3e 4f       	sbci	r19, 0xFE	; 254
    3fd6:	f9 01       	movw	r30, r18
    3fd8:	20 81       	ld	r18, Z
    3fda:	31 81       	ldd	r19, Z+1	; 0x01
    3fdc:	21 50       	subi	r18, 0x01	; 1
    3fde:	31 09       	sbc	r19, r1
    3fe0:	fc 01       	movw	r30, r24
    3fe2:	31 83       	std	Z+1, r19	; 0x01
    3fe4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3fe6:	ce 01       	movw	r24, r28
    3fe8:	89 5c       	subi	r24, 0xC9	; 201
    3fea:	9e 4f       	sbci	r25, 0xFE	; 254
    3fec:	fc 01       	movw	r30, r24
    3fee:	80 81       	ld	r24, Z
    3ff0:	91 81       	ldd	r25, Z+1	; 0x01
    3ff2:	89 2b       	or	r24, r25
    3ff4:	a1 f6       	brne	.-88     	; 0x3f9e <__stack+0x2e9f>
    3ff6:	2c c0       	rjmp	.+88     	; 0x4050 <__stack+0x2f51>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ff8:	8e 01       	movw	r16, r28
    3ffa:	09 5c       	subi	r16, 0xC9	; 201
    3ffc:	1e 4f       	sbci	r17, 0xFE	; 254
    3ffe:	ce 01       	movw	r24, r28
    4000:	8d 5c       	subi	r24, 0xCD	; 205
    4002:	9e 4f       	sbci	r25, 0xFE	; 254
    4004:	fc 01       	movw	r30, r24
    4006:	60 81       	ld	r22, Z
    4008:	71 81       	ldd	r23, Z+1	; 0x01
    400a:	82 81       	ldd	r24, Z+2	; 0x02
    400c:	93 81       	ldd	r25, Z+3	; 0x03
    400e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    4012:	dc 01       	movw	r26, r24
    4014:	cb 01       	movw	r24, r22
    4016:	f8 01       	movw	r30, r16
    4018:	91 83       	std	Z+1, r25	; 0x01
    401a:	80 83       	st	Z, r24
    401c:	ce 01       	movw	r24, r28
    401e:	85 5c       	subi	r24, 0xC5	; 197
    4020:	9e 4f       	sbci	r25, 0xFE	; 254
    4022:	9e 01       	movw	r18, r28
    4024:	29 5c       	subi	r18, 0xC9	; 201
    4026:	3e 4f       	sbci	r19, 0xFE	; 254
    4028:	f9 01       	movw	r30, r18
    402a:	20 81       	ld	r18, Z
    402c:	31 81       	ldd	r19, Z+1	; 0x01
    402e:	fc 01       	movw	r30, r24
    4030:	31 83       	std	Z+1, r19	; 0x01
    4032:	20 83       	st	Z, r18
    4034:	ce 01       	movw	r24, r28
    4036:	85 5c       	subi	r24, 0xC5	; 197
    4038:	9e 4f       	sbci	r25, 0xFE	; 254
    403a:	fc 01       	movw	r30, r24
    403c:	80 81       	ld	r24, Z
    403e:	91 81       	ldd	r25, Z+1	; 0x01
    4040:	01 97       	sbiw	r24, 0x01	; 1
    4042:	f1 f7       	brne	.-4      	; 0x4040 <__stack+0x2f41>
    4044:	9e 01       	movw	r18, r28
    4046:	25 5c       	subi	r18, 0xC5	; 197
    4048:	3e 4f       	sbci	r19, 0xFE	; 254
    404a:	f9 01       	movw	r30, r18
    404c:	91 83       	std	Z+1, r25	; 0x01
    404e:	80 83       	st	Z, r24
			_delay_ms(350);
			to_uARM("M2210 F660 T80\n");
    4050:	8b e2       	ldi	r24, 0x2B	; 43
    4052:	92 e0       	ldi	r25, 0x02	; 2
    4054:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    4058:	9e 01       	movw	r18, r28
    405a:	2f 55       	subi	r18, 0x5F	; 95
    405c:	3f 4f       	sbci	r19, 0xFF	; 255
    405e:	80 e0       	ldi	r24, 0x00	; 0
    4060:	90 e0       	ldi	r25, 0x00	; 0
    4062:	a6 e9       	ldi	r26, 0x96	; 150
    4064:	b3 e4       	ldi	r27, 0x43	; 67
    4066:	f9 01       	movw	r30, r18
    4068:	80 83       	st	Z, r24
    406a:	91 83       	std	Z+1, r25	; 0x01
    406c:	a2 83       	std	Z+2, r26	; 0x02
    406e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4070:	8e 01       	movw	r16, r28
    4072:	07 5d       	subi	r16, 0xD7	; 215
    4074:	1e 4f       	sbci	r17, 0xFE	; 254
    4076:	ce 01       	movw	r24, r28
    4078:	8f 55       	subi	r24, 0x5F	; 95
    407a:	9f 4f       	sbci	r25, 0xFF	; 255
    407c:	20 e0       	ldi	r18, 0x00	; 0
    407e:	30 e0       	ldi	r19, 0x00	; 0
    4080:	4a e7       	ldi	r20, 0x7A	; 122
    4082:	55 e4       	ldi	r21, 0x45	; 69
    4084:	fc 01       	movw	r30, r24
    4086:	60 81       	ld	r22, Z
    4088:	71 81       	ldd	r23, Z+1	; 0x01
    408a:	82 81       	ldd	r24, Z+2	; 0x02
    408c:	93 81       	ldd	r25, Z+3	; 0x03
    408e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    4092:	dc 01       	movw	r26, r24
    4094:	cb 01       	movw	r24, r22
    4096:	f8 01       	movw	r30, r16
    4098:	80 83       	st	Z, r24
    409a:	91 83       	std	Z+1, r25	; 0x01
    409c:	a2 83       	std	Z+2, r26	; 0x02
    409e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    40a0:	ce 01       	movw	r24, r28
    40a2:	87 5d       	subi	r24, 0xD7	; 215
    40a4:	9e 4f       	sbci	r25, 0xFE	; 254
    40a6:	20 e0       	ldi	r18, 0x00	; 0
    40a8:	30 e0       	ldi	r19, 0x00	; 0
    40aa:	40 e8       	ldi	r20, 0x80	; 128
    40ac:	5f e3       	ldi	r21, 0x3F	; 63
    40ae:	fc 01       	movw	r30, r24
    40b0:	60 81       	ld	r22, Z
    40b2:	71 81       	ldd	r23, Z+1	; 0x01
    40b4:	82 81       	ldd	r24, Z+2	; 0x02
    40b6:	93 81       	ldd	r25, Z+3	; 0x03
    40b8:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    40bc:	88 23       	and	r24, r24
    40be:	4c f4       	brge	.+18     	; 0x40d2 <__stack+0x2fd3>
		__ticks = 1;
    40c0:	ce 01       	movw	r24, r28
    40c2:	83 5d       	subi	r24, 0xD3	; 211
    40c4:	9e 4f       	sbci	r25, 0xFE	; 254
    40c6:	21 e0       	ldi	r18, 0x01	; 1
    40c8:	30 e0       	ldi	r19, 0x00	; 0
    40ca:	fc 01       	movw	r30, r24
    40cc:	31 83       	std	Z+1, r19	; 0x01
    40ce:	20 83       	st	Z, r18
    40d0:	6d c0       	rjmp	.+218    	; 0x41ac <__stack+0x30ad>
	else if (__tmp > 65535)
    40d2:	ce 01       	movw	r24, r28
    40d4:	87 5d       	subi	r24, 0xD7	; 215
    40d6:	9e 4f       	sbci	r25, 0xFE	; 254
    40d8:	20 e0       	ldi	r18, 0x00	; 0
    40da:	3f ef       	ldi	r19, 0xFF	; 255
    40dc:	4f e7       	ldi	r20, 0x7F	; 127
    40de:	57 e4       	ldi	r21, 0x47	; 71
    40e0:	fc 01       	movw	r30, r24
    40e2:	60 81       	ld	r22, Z
    40e4:	71 81       	ldd	r23, Z+1	; 0x01
    40e6:	82 81       	ldd	r24, Z+2	; 0x02
    40e8:	93 81       	ldd	r25, Z+3	; 0x03
    40ea:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    40ee:	18 16       	cp	r1, r24
    40f0:	0c f0       	brlt	.+2      	; 0x40f4 <__stack+0x2ff5>
    40f2:	4a c0       	rjmp	.+148    	; 0x4188 <__stack+0x3089>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    40f4:	ce 01       	movw	r24, r28
    40f6:	8f 55       	subi	r24, 0x5F	; 95
    40f8:	9f 4f       	sbci	r25, 0xFF	; 255
    40fa:	20 e0       	ldi	r18, 0x00	; 0
    40fc:	30 e0       	ldi	r19, 0x00	; 0
    40fe:	40 e2       	ldi	r20, 0x20	; 32
    4100:	51 e4       	ldi	r21, 0x41	; 65
    4102:	fc 01       	movw	r30, r24
    4104:	60 81       	ld	r22, Z
    4106:	71 81       	ldd	r23, Z+1	; 0x01
    4108:	82 81       	ldd	r24, Z+2	; 0x02
    410a:	93 81       	ldd	r25, Z+3	; 0x03
    410c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    4110:	dc 01       	movw	r26, r24
    4112:	cb 01       	movw	r24, r22
    4114:	8e 01       	movw	r16, r28
    4116:	03 5d       	subi	r16, 0xD3	; 211
    4118:	1e 4f       	sbci	r17, 0xFE	; 254
    411a:	bc 01       	movw	r22, r24
    411c:	cd 01       	movw	r24, r26
    411e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    4122:	dc 01       	movw	r26, r24
    4124:	cb 01       	movw	r24, r22
    4126:	f8 01       	movw	r30, r16
    4128:	91 83       	std	Z+1, r25	; 0x01
    412a:	80 83       	st	Z, r24
    412c:	24 c0       	rjmp	.+72     	; 0x4176 <__stack+0x3077>
    412e:	ce 01       	movw	r24, r28
    4130:	81 5d       	subi	r24, 0xD1	; 209
    4132:	9e 4f       	sbci	r25, 0xFE	; 254
    4134:	20 e9       	ldi	r18, 0x90	; 144
    4136:	31 e0       	ldi	r19, 0x01	; 1
    4138:	fc 01       	movw	r30, r24
    413a:	31 83       	std	Z+1, r19	; 0x01
    413c:	20 83       	st	Z, r18
    413e:	ce 01       	movw	r24, r28
    4140:	81 5d       	subi	r24, 0xD1	; 209
    4142:	9e 4f       	sbci	r25, 0xFE	; 254
    4144:	fc 01       	movw	r30, r24
    4146:	80 81       	ld	r24, Z
    4148:	91 81       	ldd	r25, Z+1	; 0x01
    414a:	01 97       	sbiw	r24, 0x01	; 1
    414c:	f1 f7       	brne	.-4      	; 0x414a <__stack+0x304b>
    414e:	9e 01       	movw	r18, r28
    4150:	21 5d       	subi	r18, 0xD1	; 209
    4152:	3e 4f       	sbci	r19, 0xFE	; 254
    4154:	f9 01       	movw	r30, r18
    4156:	91 83       	std	Z+1, r25	; 0x01
    4158:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    415a:	ce 01       	movw	r24, r28
    415c:	83 5d       	subi	r24, 0xD3	; 211
    415e:	9e 4f       	sbci	r25, 0xFE	; 254
    4160:	9e 01       	movw	r18, r28
    4162:	23 5d       	subi	r18, 0xD3	; 211
    4164:	3e 4f       	sbci	r19, 0xFE	; 254
    4166:	f9 01       	movw	r30, r18
    4168:	20 81       	ld	r18, Z
    416a:	31 81       	ldd	r19, Z+1	; 0x01
    416c:	21 50       	subi	r18, 0x01	; 1
    416e:	31 09       	sbc	r19, r1
    4170:	fc 01       	movw	r30, r24
    4172:	31 83       	std	Z+1, r19	; 0x01
    4174:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4176:	ce 01       	movw	r24, r28
    4178:	83 5d       	subi	r24, 0xD3	; 211
    417a:	9e 4f       	sbci	r25, 0xFE	; 254
    417c:	fc 01       	movw	r30, r24
    417e:	80 81       	ld	r24, Z
    4180:	91 81       	ldd	r25, Z+1	; 0x01
    4182:	89 2b       	or	r24, r25
    4184:	a1 f6       	brne	.-88     	; 0x412e <__stack+0x302f>
    4186:	2c c0       	rjmp	.+88     	; 0x41e0 <__stack+0x30e1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4188:	8e 01       	movw	r16, r28
    418a:	03 5d       	subi	r16, 0xD3	; 211
    418c:	1e 4f       	sbci	r17, 0xFE	; 254
    418e:	ce 01       	movw	r24, r28
    4190:	87 5d       	subi	r24, 0xD7	; 215
    4192:	9e 4f       	sbci	r25, 0xFE	; 254
    4194:	fc 01       	movw	r30, r24
    4196:	60 81       	ld	r22, Z
    4198:	71 81       	ldd	r23, Z+1	; 0x01
    419a:	82 81       	ldd	r24, Z+2	; 0x02
    419c:	93 81       	ldd	r25, Z+3	; 0x03
    419e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    41a2:	dc 01       	movw	r26, r24
    41a4:	cb 01       	movw	r24, r22
    41a6:	f8 01       	movw	r30, r16
    41a8:	91 83       	std	Z+1, r25	; 0x01
    41aa:	80 83       	st	Z, r24
    41ac:	ce 01       	movw	r24, r28
    41ae:	8f 5c       	subi	r24, 0xCF	; 207
    41b0:	9e 4f       	sbci	r25, 0xFE	; 254
    41b2:	9e 01       	movw	r18, r28
    41b4:	23 5d       	subi	r18, 0xD3	; 211
    41b6:	3e 4f       	sbci	r19, 0xFE	; 254
    41b8:	f9 01       	movw	r30, r18
    41ba:	20 81       	ld	r18, Z
    41bc:	31 81       	ldd	r19, Z+1	; 0x01
    41be:	fc 01       	movw	r30, r24
    41c0:	31 83       	std	Z+1, r19	; 0x01
    41c2:	20 83       	st	Z, r18
    41c4:	ce 01       	movw	r24, r28
    41c6:	8f 5c       	subi	r24, 0xCF	; 207
    41c8:	9e 4f       	sbci	r25, 0xFE	; 254
    41ca:	fc 01       	movw	r30, r24
    41cc:	80 81       	ld	r24, Z
    41ce:	91 81       	ldd	r25, Z+1	; 0x01
    41d0:	01 97       	sbiw	r24, 0x01	; 1
    41d2:	f1 f7       	brne	.-4      	; 0x41d0 <__stack+0x30d1>
    41d4:	9e 01       	movw	r18, r28
    41d6:	2f 5c       	subi	r18, 0xCF	; 207
    41d8:	3e 4f       	sbci	r19, 0xFE	; 254
    41da:	f9 01       	movw	r30, r18
    41dc:	91 83       	std	Z+1, r25	; 0x01
    41de:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F520 T80\n");
    41e0:	8c e6       	ldi	r24, 0x6C	; 108
    41e2:	92 e0       	ldi	r25, 0x02	; 2
    41e4:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    41e8:	9e 01       	movw	r18, r28
    41ea:	2b 55       	subi	r18, 0x5B	; 91
    41ec:	3f 4f       	sbci	r19, 0xFF	; 255
    41ee:	80 e0       	ldi	r24, 0x00	; 0
    41f0:	90 e0       	ldi	r25, 0x00	; 0
    41f2:	a6 e1       	ldi	r26, 0x16	; 22
    41f4:	b3 e4       	ldi	r27, 0x43	; 67
    41f6:	f9 01       	movw	r30, r18
    41f8:	80 83       	st	Z, r24
    41fa:	91 83       	std	Z+1, r25	; 0x01
    41fc:	a2 83       	std	Z+2, r26	; 0x02
    41fe:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4200:	8e 01       	movw	r16, r28
    4202:	01 5e       	subi	r16, 0xE1	; 225
    4204:	1e 4f       	sbci	r17, 0xFE	; 254
    4206:	ce 01       	movw	r24, r28
    4208:	8b 55       	subi	r24, 0x5B	; 91
    420a:	9f 4f       	sbci	r25, 0xFF	; 255
    420c:	20 e0       	ldi	r18, 0x00	; 0
    420e:	30 e0       	ldi	r19, 0x00	; 0
    4210:	4a e7       	ldi	r20, 0x7A	; 122
    4212:	55 e4       	ldi	r21, 0x45	; 69
    4214:	fc 01       	movw	r30, r24
    4216:	60 81       	ld	r22, Z
    4218:	71 81       	ldd	r23, Z+1	; 0x01
    421a:	82 81       	ldd	r24, Z+2	; 0x02
    421c:	93 81       	ldd	r25, Z+3	; 0x03
    421e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    4222:	dc 01       	movw	r26, r24
    4224:	cb 01       	movw	r24, r22
    4226:	f8 01       	movw	r30, r16
    4228:	80 83       	st	Z, r24
    422a:	91 83       	std	Z+1, r25	; 0x01
    422c:	a2 83       	std	Z+2, r26	; 0x02
    422e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4230:	ce 01       	movw	r24, r28
    4232:	81 5e       	subi	r24, 0xE1	; 225
    4234:	9e 4f       	sbci	r25, 0xFE	; 254
    4236:	20 e0       	ldi	r18, 0x00	; 0
    4238:	30 e0       	ldi	r19, 0x00	; 0
    423a:	40 e8       	ldi	r20, 0x80	; 128
    423c:	5f e3       	ldi	r21, 0x3F	; 63
    423e:	fc 01       	movw	r30, r24
    4240:	60 81       	ld	r22, Z
    4242:	71 81       	ldd	r23, Z+1	; 0x01
    4244:	82 81       	ldd	r24, Z+2	; 0x02
    4246:	93 81       	ldd	r25, Z+3	; 0x03
    4248:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    424c:	88 23       	and	r24, r24
    424e:	4c f4       	brge	.+18     	; 0x4262 <__stack+0x3163>
		__ticks = 1;
    4250:	ce 01       	movw	r24, r28
    4252:	8d 5d       	subi	r24, 0xDD	; 221
    4254:	9e 4f       	sbci	r25, 0xFE	; 254
    4256:	21 e0       	ldi	r18, 0x01	; 1
    4258:	30 e0       	ldi	r19, 0x00	; 0
    425a:	fc 01       	movw	r30, r24
    425c:	31 83       	std	Z+1, r19	; 0x01
    425e:	20 83       	st	Z, r18
    4260:	6d c0       	rjmp	.+218    	; 0x433c <__stack+0x323d>
	else if (__tmp > 65535)
    4262:	ce 01       	movw	r24, r28
    4264:	81 5e       	subi	r24, 0xE1	; 225
    4266:	9e 4f       	sbci	r25, 0xFE	; 254
    4268:	20 e0       	ldi	r18, 0x00	; 0
    426a:	3f ef       	ldi	r19, 0xFF	; 255
    426c:	4f e7       	ldi	r20, 0x7F	; 127
    426e:	57 e4       	ldi	r21, 0x47	; 71
    4270:	fc 01       	movw	r30, r24
    4272:	60 81       	ld	r22, Z
    4274:	71 81       	ldd	r23, Z+1	; 0x01
    4276:	82 81       	ldd	r24, Z+2	; 0x02
    4278:	93 81       	ldd	r25, Z+3	; 0x03
    427a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    427e:	18 16       	cp	r1, r24
    4280:	0c f0       	brlt	.+2      	; 0x4284 <__stack+0x3185>
    4282:	4a c0       	rjmp	.+148    	; 0x4318 <__stack+0x3219>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4284:	ce 01       	movw	r24, r28
    4286:	8b 55       	subi	r24, 0x5B	; 91
    4288:	9f 4f       	sbci	r25, 0xFF	; 255
    428a:	20 e0       	ldi	r18, 0x00	; 0
    428c:	30 e0       	ldi	r19, 0x00	; 0
    428e:	40 e2       	ldi	r20, 0x20	; 32
    4290:	51 e4       	ldi	r21, 0x41	; 65
    4292:	fc 01       	movw	r30, r24
    4294:	60 81       	ld	r22, Z
    4296:	71 81       	ldd	r23, Z+1	; 0x01
    4298:	82 81       	ldd	r24, Z+2	; 0x02
    429a:	93 81       	ldd	r25, Z+3	; 0x03
    429c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    42a0:	dc 01       	movw	r26, r24
    42a2:	cb 01       	movw	r24, r22
    42a4:	8e 01       	movw	r16, r28
    42a6:	0d 5d       	subi	r16, 0xDD	; 221
    42a8:	1e 4f       	sbci	r17, 0xFE	; 254
    42aa:	bc 01       	movw	r22, r24
    42ac:	cd 01       	movw	r24, r26
    42ae:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    42b2:	dc 01       	movw	r26, r24
    42b4:	cb 01       	movw	r24, r22
    42b6:	f8 01       	movw	r30, r16
    42b8:	91 83       	std	Z+1, r25	; 0x01
    42ba:	80 83       	st	Z, r24
    42bc:	24 c0       	rjmp	.+72     	; 0x4306 <__stack+0x3207>
    42be:	ce 01       	movw	r24, r28
    42c0:	8b 5d       	subi	r24, 0xDB	; 219
    42c2:	9e 4f       	sbci	r25, 0xFE	; 254
    42c4:	20 e9       	ldi	r18, 0x90	; 144
    42c6:	31 e0       	ldi	r19, 0x01	; 1
    42c8:	fc 01       	movw	r30, r24
    42ca:	31 83       	std	Z+1, r19	; 0x01
    42cc:	20 83       	st	Z, r18
    42ce:	ce 01       	movw	r24, r28
    42d0:	8b 5d       	subi	r24, 0xDB	; 219
    42d2:	9e 4f       	sbci	r25, 0xFE	; 254
    42d4:	fc 01       	movw	r30, r24
    42d6:	80 81       	ld	r24, Z
    42d8:	91 81       	ldd	r25, Z+1	; 0x01
    42da:	01 97       	sbiw	r24, 0x01	; 1
    42dc:	f1 f7       	brne	.-4      	; 0x42da <__stack+0x31db>
    42de:	9e 01       	movw	r18, r28
    42e0:	2b 5d       	subi	r18, 0xDB	; 219
    42e2:	3e 4f       	sbci	r19, 0xFE	; 254
    42e4:	f9 01       	movw	r30, r18
    42e6:	91 83       	std	Z+1, r25	; 0x01
    42e8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    42ea:	ce 01       	movw	r24, r28
    42ec:	8d 5d       	subi	r24, 0xDD	; 221
    42ee:	9e 4f       	sbci	r25, 0xFE	; 254
    42f0:	9e 01       	movw	r18, r28
    42f2:	2d 5d       	subi	r18, 0xDD	; 221
    42f4:	3e 4f       	sbci	r19, 0xFE	; 254
    42f6:	f9 01       	movw	r30, r18
    42f8:	20 81       	ld	r18, Z
    42fa:	31 81       	ldd	r19, Z+1	; 0x01
    42fc:	21 50       	subi	r18, 0x01	; 1
    42fe:	31 09       	sbc	r19, r1
    4300:	fc 01       	movw	r30, r24
    4302:	31 83       	std	Z+1, r19	; 0x01
    4304:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4306:	ce 01       	movw	r24, r28
    4308:	8d 5d       	subi	r24, 0xDD	; 221
    430a:	9e 4f       	sbci	r25, 0xFE	; 254
    430c:	fc 01       	movw	r30, r24
    430e:	80 81       	ld	r24, Z
    4310:	91 81       	ldd	r25, Z+1	; 0x01
    4312:	89 2b       	or	r24, r25
    4314:	a1 f6       	brne	.-88     	; 0x42be <__stack+0x31bf>
    4316:	2c c0       	rjmp	.+88     	; 0x4370 <__stack+0x3271>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4318:	8e 01       	movw	r16, r28
    431a:	0d 5d       	subi	r16, 0xDD	; 221
    431c:	1e 4f       	sbci	r17, 0xFE	; 254
    431e:	ce 01       	movw	r24, r28
    4320:	81 5e       	subi	r24, 0xE1	; 225
    4322:	9e 4f       	sbci	r25, 0xFE	; 254
    4324:	fc 01       	movw	r30, r24
    4326:	60 81       	ld	r22, Z
    4328:	71 81       	ldd	r23, Z+1	; 0x01
    432a:	82 81       	ldd	r24, Z+2	; 0x02
    432c:	93 81       	ldd	r25, Z+3	; 0x03
    432e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    4332:	dc 01       	movw	r26, r24
    4334:	cb 01       	movw	r24, r22
    4336:	f8 01       	movw	r30, r16
    4338:	91 83       	std	Z+1, r25	; 0x01
    433a:	80 83       	st	Z, r24
    433c:	ce 01       	movw	r24, r28
    433e:	89 5d       	subi	r24, 0xD9	; 217
    4340:	9e 4f       	sbci	r25, 0xFE	; 254
    4342:	9e 01       	movw	r18, r28
    4344:	2d 5d       	subi	r18, 0xDD	; 221
    4346:	3e 4f       	sbci	r19, 0xFE	; 254
    4348:	f9 01       	movw	r30, r18
    434a:	20 81       	ld	r18, Z
    434c:	31 81       	ldd	r19, Z+1	; 0x01
    434e:	fc 01       	movw	r30, r24
    4350:	31 83       	std	Z+1, r19	; 0x01
    4352:	20 83       	st	Z, r18
    4354:	ce 01       	movw	r24, r28
    4356:	89 5d       	subi	r24, 0xD9	; 217
    4358:	9e 4f       	sbci	r25, 0xFE	; 254
    435a:	fc 01       	movw	r30, r24
    435c:	80 81       	ld	r24, Z
    435e:	91 81       	ldd	r25, Z+1	; 0x01
    4360:	01 97       	sbiw	r24, 0x01	; 1
    4362:	f1 f7       	brne	.-4      	; 0x4360 <__stack+0x3261>
    4364:	9e 01       	movw	r18, r28
    4366:	29 5d       	subi	r18, 0xD9	; 217
    4368:	3e 4f       	sbci	r19, 0xFE	; 254
    436a:	f9 01       	movw	r30, r18
    436c:	91 83       	std	Z+1, r25	; 0x01
    436e:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F580 T80\n");
    4370:	8c e7       	ldi	r24, 0x7C	; 124
    4372:	92 e0       	ldi	r25, 0x02	; 2
    4374:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    4378:	9e 01       	movw	r18, r28
    437a:	27 55       	subi	r18, 0x57	; 87
    437c:	3f 4f       	sbci	r19, 0xFF	; 255
    437e:	80 e0       	ldi	r24, 0x00	; 0
    4380:	90 e0       	ldi	r25, 0x00	; 0
    4382:	a6 e1       	ldi	r26, 0x16	; 22
    4384:	b3 e4       	ldi	r27, 0x43	; 67
    4386:	f9 01       	movw	r30, r18
    4388:	80 83       	st	Z, r24
    438a:	91 83       	std	Z+1, r25	; 0x01
    438c:	a2 83       	std	Z+2, r26	; 0x02
    438e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4390:	8e 01       	movw	r16, r28
    4392:	0b 5e       	subi	r16, 0xEB	; 235
    4394:	1e 4f       	sbci	r17, 0xFE	; 254
    4396:	ce 01       	movw	r24, r28
    4398:	87 55       	subi	r24, 0x57	; 87
    439a:	9f 4f       	sbci	r25, 0xFF	; 255
    439c:	20 e0       	ldi	r18, 0x00	; 0
    439e:	30 e0       	ldi	r19, 0x00	; 0
    43a0:	4a e7       	ldi	r20, 0x7A	; 122
    43a2:	55 e4       	ldi	r21, 0x45	; 69
    43a4:	fc 01       	movw	r30, r24
    43a6:	60 81       	ld	r22, Z
    43a8:	71 81       	ldd	r23, Z+1	; 0x01
    43aa:	82 81       	ldd	r24, Z+2	; 0x02
    43ac:	93 81       	ldd	r25, Z+3	; 0x03
    43ae:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    43b2:	dc 01       	movw	r26, r24
    43b4:	cb 01       	movw	r24, r22
    43b6:	f8 01       	movw	r30, r16
    43b8:	80 83       	st	Z, r24
    43ba:	91 83       	std	Z+1, r25	; 0x01
    43bc:	a2 83       	std	Z+2, r26	; 0x02
    43be:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    43c0:	ce 01       	movw	r24, r28
    43c2:	8b 5e       	subi	r24, 0xEB	; 235
    43c4:	9e 4f       	sbci	r25, 0xFE	; 254
    43c6:	20 e0       	ldi	r18, 0x00	; 0
    43c8:	30 e0       	ldi	r19, 0x00	; 0
    43ca:	40 e8       	ldi	r20, 0x80	; 128
    43cc:	5f e3       	ldi	r21, 0x3F	; 63
    43ce:	fc 01       	movw	r30, r24
    43d0:	60 81       	ld	r22, Z
    43d2:	71 81       	ldd	r23, Z+1	; 0x01
    43d4:	82 81       	ldd	r24, Z+2	; 0x02
    43d6:	93 81       	ldd	r25, Z+3	; 0x03
    43d8:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    43dc:	88 23       	and	r24, r24
    43de:	4c f4       	brge	.+18     	; 0x43f2 <__stack+0x32f3>
		__ticks = 1;
    43e0:	ce 01       	movw	r24, r28
    43e2:	87 5e       	subi	r24, 0xE7	; 231
    43e4:	9e 4f       	sbci	r25, 0xFE	; 254
    43e6:	21 e0       	ldi	r18, 0x01	; 1
    43e8:	30 e0       	ldi	r19, 0x00	; 0
    43ea:	fc 01       	movw	r30, r24
    43ec:	31 83       	std	Z+1, r19	; 0x01
    43ee:	20 83       	st	Z, r18
    43f0:	6d c0       	rjmp	.+218    	; 0x44cc <__stack+0x33cd>
	else if (__tmp > 65535)
    43f2:	ce 01       	movw	r24, r28
    43f4:	8b 5e       	subi	r24, 0xEB	; 235
    43f6:	9e 4f       	sbci	r25, 0xFE	; 254
    43f8:	20 e0       	ldi	r18, 0x00	; 0
    43fa:	3f ef       	ldi	r19, 0xFF	; 255
    43fc:	4f e7       	ldi	r20, 0x7F	; 127
    43fe:	57 e4       	ldi	r21, 0x47	; 71
    4400:	fc 01       	movw	r30, r24
    4402:	60 81       	ld	r22, Z
    4404:	71 81       	ldd	r23, Z+1	; 0x01
    4406:	82 81       	ldd	r24, Z+2	; 0x02
    4408:	93 81       	ldd	r25, Z+3	; 0x03
    440a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    440e:	18 16       	cp	r1, r24
    4410:	0c f0       	brlt	.+2      	; 0x4414 <__stack+0x3315>
    4412:	4a c0       	rjmp	.+148    	; 0x44a8 <__stack+0x33a9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4414:	ce 01       	movw	r24, r28
    4416:	87 55       	subi	r24, 0x57	; 87
    4418:	9f 4f       	sbci	r25, 0xFF	; 255
    441a:	20 e0       	ldi	r18, 0x00	; 0
    441c:	30 e0       	ldi	r19, 0x00	; 0
    441e:	40 e2       	ldi	r20, 0x20	; 32
    4420:	51 e4       	ldi	r21, 0x41	; 65
    4422:	fc 01       	movw	r30, r24
    4424:	60 81       	ld	r22, Z
    4426:	71 81       	ldd	r23, Z+1	; 0x01
    4428:	82 81       	ldd	r24, Z+2	; 0x02
    442a:	93 81       	ldd	r25, Z+3	; 0x03
    442c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    4430:	dc 01       	movw	r26, r24
    4432:	cb 01       	movw	r24, r22
    4434:	8e 01       	movw	r16, r28
    4436:	07 5e       	subi	r16, 0xE7	; 231
    4438:	1e 4f       	sbci	r17, 0xFE	; 254
    443a:	bc 01       	movw	r22, r24
    443c:	cd 01       	movw	r24, r26
    443e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    4442:	dc 01       	movw	r26, r24
    4444:	cb 01       	movw	r24, r22
    4446:	f8 01       	movw	r30, r16
    4448:	91 83       	std	Z+1, r25	; 0x01
    444a:	80 83       	st	Z, r24
    444c:	24 c0       	rjmp	.+72     	; 0x4496 <__stack+0x3397>
    444e:	ce 01       	movw	r24, r28
    4450:	85 5e       	subi	r24, 0xE5	; 229
    4452:	9e 4f       	sbci	r25, 0xFE	; 254
    4454:	20 e9       	ldi	r18, 0x90	; 144
    4456:	31 e0       	ldi	r19, 0x01	; 1
    4458:	fc 01       	movw	r30, r24
    445a:	31 83       	std	Z+1, r19	; 0x01
    445c:	20 83       	st	Z, r18
    445e:	ce 01       	movw	r24, r28
    4460:	85 5e       	subi	r24, 0xE5	; 229
    4462:	9e 4f       	sbci	r25, 0xFE	; 254
    4464:	fc 01       	movw	r30, r24
    4466:	80 81       	ld	r24, Z
    4468:	91 81       	ldd	r25, Z+1	; 0x01
    446a:	01 97       	sbiw	r24, 0x01	; 1
    446c:	f1 f7       	brne	.-4      	; 0x446a <__stack+0x336b>
    446e:	9e 01       	movw	r18, r28
    4470:	25 5e       	subi	r18, 0xE5	; 229
    4472:	3e 4f       	sbci	r19, 0xFE	; 254
    4474:	f9 01       	movw	r30, r18
    4476:	91 83       	std	Z+1, r25	; 0x01
    4478:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    447a:	ce 01       	movw	r24, r28
    447c:	87 5e       	subi	r24, 0xE7	; 231
    447e:	9e 4f       	sbci	r25, 0xFE	; 254
    4480:	9e 01       	movw	r18, r28
    4482:	27 5e       	subi	r18, 0xE7	; 231
    4484:	3e 4f       	sbci	r19, 0xFE	; 254
    4486:	f9 01       	movw	r30, r18
    4488:	20 81       	ld	r18, Z
    448a:	31 81       	ldd	r19, Z+1	; 0x01
    448c:	21 50       	subi	r18, 0x01	; 1
    448e:	31 09       	sbc	r19, r1
    4490:	fc 01       	movw	r30, r24
    4492:	31 83       	std	Z+1, r19	; 0x01
    4494:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4496:	ce 01       	movw	r24, r28
    4498:	87 5e       	subi	r24, 0xE7	; 231
    449a:	9e 4f       	sbci	r25, 0xFE	; 254
    449c:	fc 01       	movw	r30, r24
    449e:	80 81       	ld	r24, Z
    44a0:	91 81       	ldd	r25, Z+1	; 0x01
    44a2:	89 2b       	or	r24, r25
    44a4:	a1 f6       	brne	.-88     	; 0x444e <__stack+0x334f>
    44a6:	2c c0       	rjmp	.+88     	; 0x4500 <__stack+0x3401>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    44a8:	8e 01       	movw	r16, r28
    44aa:	07 5e       	subi	r16, 0xE7	; 231
    44ac:	1e 4f       	sbci	r17, 0xFE	; 254
    44ae:	ce 01       	movw	r24, r28
    44b0:	8b 5e       	subi	r24, 0xEB	; 235
    44b2:	9e 4f       	sbci	r25, 0xFE	; 254
    44b4:	fc 01       	movw	r30, r24
    44b6:	60 81       	ld	r22, Z
    44b8:	71 81       	ldd	r23, Z+1	; 0x01
    44ba:	82 81       	ldd	r24, Z+2	; 0x02
    44bc:	93 81       	ldd	r25, Z+3	; 0x03
    44be:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    44c2:	dc 01       	movw	r26, r24
    44c4:	cb 01       	movw	r24, r22
    44c6:	f8 01       	movw	r30, r16
    44c8:	91 83       	std	Z+1, r25	; 0x01
    44ca:	80 83       	st	Z, r24
    44cc:	ce 01       	movw	r24, r28
    44ce:	83 5e       	subi	r24, 0xE3	; 227
    44d0:	9e 4f       	sbci	r25, 0xFE	; 254
    44d2:	9e 01       	movw	r18, r28
    44d4:	27 5e       	subi	r18, 0xE7	; 231
    44d6:	3e 4f       	sbci	r19, 0xFE	; 254
    44d8:	f9 01       	movw	r30, r18
    44da:	20 81       	ld	r18, Z
    44dc:	31 81       	ldd	r19, Z+1	; 0x01
    44de:	fc 01       	movw	r30, r24
    44e0:	31 83       	std	Z+1, r19	; 0x01
    44e2:	20 83       	st	Z, r18
    44e4:	ce 01       	movw	r24, r28
    44e6:	83 5e       	subi	r24, 0xE3	; 227
    44e8:	9e 4f       	sbci	r25, 0xFE	; 254
    44ea:	fc 01       	movw	r30, r24
    44ec:	80 81       	ld	r24, Z
    44ee:	91 81       	ldd	r25, Z+1	; 0x01
    44f0:	01 97       	sbiw	r24, 0x01	; 1
    44f2:	f1 f7       	brne	.-4      	; 0x44f0 <__stack+0x33f1>
    44f4:	9e 01       	movw	r18, r28
    44f6:	23 5e       	subi	r18, 0xE3	; 227
    44f8:	3e 4f       	sbci	r19, 0xFE	; 254
    44fa:	f9 01       	movw	r30, r18
    44fc:	91 83       	std	Z+1, r25	; 0x01
    44fe:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F480 T80\n");
    4500:	89 ef       	ldi	r24, 0xF9	; 249
    4502:	91 e0       	ldi	r25, 0x01	; 1
    4504:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    4508:	9e 01       	movw	r18, r28
    450a:	23 55       	subi	r18, 0x53	; 83
    450c:	3f 4f       	sbci	r19, 0xFF	; 255
    450e:	80 e0       	ldi	r24, 0x00	; 0
    4510:	90 e0       	ldi	r25, 0x00	; 0
    4512:	aa ef       	ldi	r26, 0xFA	; 250
    4514:	b3 e4       	ldi	r27, 0x43	; 67
    4516:	f9 01       	movw	r30, r18
    4518:	80 83       	st	Z, r24
    451a:	91 83       	std	Z+1, r25	; 0x01
    451c:	a2 83       	std	Z+2, r26	; 0x02
    451e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4520:	8e 01       	movw	r16, r28
    4522:	05 5f       	subi	r16, 0xF5	; 245
    4524:	1e 4f       	sbci	r17, 0xFE	; 254
    4526:	ce 01       	movw	r24, r28
    4528:	83 55       	subi	r24, 0x53	; 83
    452a:	9f 4f       	sbci	r25, 0xFF	; 255
    452c:	20 e0       	ldi	r18, 0x00	; 0
    452e:	30 e0       	ldi	r19, 0x00	; 0
    4530:	4a e7       	ldi	r20, 0x7A	; 122
    4532:	55 e4       	ldi	r21, 0x45	; 69
    4534:	fc 01       	movw	r30, r24
    4536:	60 81       	ld	r22, Z
    4538:	71 81       	ldd	r23, Z+1	; 0x01
    453a:	82 81       	ldd	r24, Z+2	; 0x02
    453c:	93 81       	ldd	r25, Z+3	; 0x03
    453e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    4542:	dc 01       	movw	r26, r24
    4544:	cb 01       	movw	r24, r22
    4546:	f8 01       	movw	r30, r16
    4548:	80 83       	st	Z, r24
    454a:	91 83       	std	Z+1, r25	; 0x01
    454c:	a2 83       	std	Z+2, r26	; 0x02
    454e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4550:	ce 01       	movw	r24, r28
    4552:	85 5f       	subi	r24, 0xF5	; 245
    4554:	9e 4f       	sbci	r25, 0xFE	; 254
    4556:	20 e0       	ldi	r18, 0x00	; 0
    4558:	30 e0       	ldi	r19, 0x00	; 0
    455a:	40 e8       	ldi	r20, 0x80	; 128
    455c:	5f e3       	ldi	r21, 0x3F	; 63
    455e:	fc 01       	movw	r30, r24
    4560:	60 81       	ld	r22, Z
    4562:	71 81       	ldd	r23, Z+1	; 0x01
    4564:	82 81       	ldd	r24, Z+2	; 0x02
    4566:	93 81       	ldd	r25, Z+3	; 0x03
    4568:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    456c:	88 23       	and	r24, r24
    456e:	4c f4       	brge	.+18     	; 0x4582 <__stack+0x3483>
		__ticks = 1;
    4570:	ce 01       	movw	r24, r28
    4572:	81 5f       	subi	r24, 0xF1	; 241
    4574:	9e 4f       	sbci	r25, 0xFE	; 254
    4576:	21 e0       	ldi	r18, 0x01	; 1
    4578:	30 e0       	ldi	r19, 0x00	; 0
    457a:	fc 01       	movw	r30, r24
    457c:	31 83       	std	Z+1, r19	; 0x01
    457e:	20 83       	st	Z, r18
    4580:	6d c0       	rjmp	.+218    	; 0x465c <__stack+0x355d>
	else if (__tmp > 65535)
    4582:	ce 01       	movw	r24, r28
    4584:	85 5f       	subi	r24, 0xF5	; 245
    4586:	9e 4f       	sbci	r25, 0xFE	; 254
    4588:	20 e0       	ldi	r18, 0x00	; 0
    458a:	3f ef       	ldi	r19, 0xFF	; 255
    458c:	4f e7       	ldi	r20, 0x7F	; 127
    458e:	57 e4       	ldi	r21, 0x47	; 71
    4590:	fc 01       	movw	r30, r24
    4592:	60 81       	ld	r22, Z
    4594:	71 81       	ldd	r23, Z+1	; 0x01
    4596:	82 81       	ldd	r24, Z+2	; 0x02
    4598:	93 81       	ldd	r25, Z+3	; 0x03
    459a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    459e:	18 16       	cp	r1, r24
    45a0:	0c f0       	brlt	.+2      	; 0x45a4 <__stack+0x34a5>
    45a2:	4a c0       	rjmp	.+148    	; 0x4638 <__stack+0x3539>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    45a4:	ce 01       	movw	r24, r28
    45a6:	83 55       	subi	r24, 0x53	; 83
    45a8:	9f 4f       	sbci	r25, 0xFF	; 255
    45aa:	20 e0       	ldi	r18, 0x00	; 0
    45ac:	30 e0       	ldi	r19, 0x00	; 0
    45ae:	40 e2       	ldi	r20, 0x20	; 32
    45b0:	51 e4       	ldi	r21, 0x41	; 65
    45b2:	fc 01       	movw	r30, r24
    45b4:	60 81       	ld	r22, Z
    45b6:	71 81       	ldd	r23, Z+1	; 0x01
    45b8:	82 81       	ldd	r24, Z+2	; 0x02
    45ba:	93 81       	ldd	r25, Z+3	; 0x03
    45bc:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    45c0:	dc 01       	movw	r26, r24
    45c2:	cb 01       	movw	r24, r22
    45c4:	8e 01       	movw	r16, r28
    45c6:	01 5f       	subi	r16, 0xF1	; 241
    45c8:	1e 4f       	sbci	r17, 0xFE	; 254
    45ca:	bc 01       	movw	r22, r24
    45cc:	cd 01       	movw	r24, r26
    45ce:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    45d2:	dc 01       	movw	r26, r24
    45d4:	cb 01       	movw	r24, r22
    45d6:	f8 01       	movw	r30, r16
    45d8:	91 83       	std	Z+1, r25	; 0x01
    45da:	80 83       	st	Z, r24
    45dc:	24 c0       	rjmp	.+72     	; 0x4626 <__stack+0x3527>
    45de:	ce 01       	movw	r24, r28
    45e0:	8f 5e       	subi	r24, 0xEF	; 239
    45e2:	9e 4f       	sbci	r25, 0xFE	; 254
    45e4:	20 e9       	ldi	r18, 0x90	; 144
    45e6:	31 e0       	ldi	r19, 0x01	; 1
    45e8:	fc 01       	movw	r30, r24
    45ea:	31 83       	std	Z+1, r19	; 0x01
    45ec:	20 83       	st	Z, r18
    45ee:	ce 01       	movw	r24, r28
    45f0:	8f 5e       	subi	r24, 0xEF	; 239
    45f2:	9e 4f       	sbci	r25, 0xFE	; 254
    45f4:	fc 01       	movw	r30, r24
    45f6:	80 81       	ld	r24, Z
    45f8:	91 81       	ldd	r25, Z+1	; 0x01
    45fa:	01 97       	sbiw	r24, 0x01	; 1
    45fc:	f1 f7       	brne	.-4      	; 0x45fa <__stack+0x34fb>
    45fe:	9e 01       	movw	r18, r28
    4600:	2f 5e       	subi	r18, 0xEF	; 239
    4602:	3e 4f       	sbci	r19, 0xFE	; 254
    4604:	f9 01       	movw	r30, r18
    4606:	91 83       	std	Z+1, r25	; 0x01
    4608:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    460a:	ce 01       	movw	r24, r28
    460c:	81 5f       	subi	r24, 0xF1	; 241
    460e:	9e 4f       	sbci	r25, 0xFE	; 254
    4610:	9e 01       	movw	r18, r28
    4612:	21 5f       	subi	r18, 0xF1	; 241
    4614:	3e 4f       	sbci	r19, 0xFE	; 254
    4616:	f9 01       	movw	r30, r18
    4618:	20 81       	ld	r18, Z
    461a:	31 81       	ldd	r19, Z+1	; 0x01
    461c:	21 50       	subi	r18, 0x01	; 1
    461e:	31 09       	sbc	r19, r1
    4620:	fc 01       	movw	r30, r24
    4622:	31 83       	std	Z+1, r19	; 0x01
    4624:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4626:	ce 01       	movw	r24, r28
    4628:	81 5f       	subi	r24, 0xF1	; 241
    462a:	9e 4f       	sbci	r25, 0xFE	; 254
    462c:	fc 01       	movw	r30, r24
    462e:	80 81       	ld	r24, Z
    4630:	91 81       	ldd	r25, Z+1	; 0x01
    4632:	89 2b       	or	r24, r25
    4634:	a1 f6       	brne	.-88     	; 0x45de <__stack+0x34df>
    4636:	2c c0       	rjmp	.+88     	; 0x4690 <__stack+0x3591>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4638:	8e 01       	movw	r16, r28
    463a:	01 5f       	subi	r16, 0xF1	; 241
    463c:	1e 4f       	sbci	r17, 0xFE	; 254
    463e:	ce 01       	movw	r24, r28
    4640:	85 5f       	subi	r24, 0xF5	; 245
    4642:	9e 4f       	sbci	r25, 0xFE	; 254
    4644:	fc 01       	movw	r30, r24
    4646:	60 81       	ld	r22, Z
    4648:	71 81       	ldd	r23, Z+1	; 0x01
    464a:	82 81       	ldd	r24, Z+2	; 0x02
    464c:	93 81       	ldd	r25, Z+3	; 0x03
    464e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    4652:	dc 01       	movw	r26, r24
    4654:	cb 01       	movw	r24, r22
    4656:	f8 01       	movw	r30, r16
    4658:	91 83       	std	Z+1, r25	; 0x01
    465a:	80 83       	st	Z, r24
    465c:	ce 01       	movw	r24, r28
    465e:	8d 5e       	subi	r24, 0xED	; 237
    4660:	9e 4f       	sbci	r25, 0xFE	; 254
    4662:	9e 01       	movw	r18, r28
    4664:	21 5f       	subi	r18, 0xF1	; 241
    4666:	3e 4f       	sbci	r19, 0xFE	; 254
    4668:	f9 01       	movw	r30, r18
    466a:	20 81       	ld	r18, Z
    466c:	31 81       	ldd	r19, Z+1	; 0x01
    466e:	fc 01       	movw	r30, r24
    4670:	31 83       	std	Z+1, r19	; 0x01
    4672:	20 83       	st	Z, r18
    4674:	ce 01       	movw	r24, r28
    4676:	8d 5e       	subi	r24, 0xED	; 237
    4678:	9e 4f       	sbci	r25, 0xFE	; 254
    467a:	fc 01       	movw	r30, r24
    467c:	80 81       	ld	r24, Z
    467e:	91 81       	ldd	r25, Z+1	; 0x01
    4680:	01 97       	sbiw	r24, 0x01	; 1
    4682:	f1 f7       	brne	.-4      	; 0x4680 <__stack+0x3581>
    4684:	9e 01       	movw	r18, r28
    4686:	2d 5e       	subi	r18, 0xED	; 237
    4688:	3e 4f       	sbci	r19, 0xFE	; 254
    468a:	f9 01       	movw	r30, r18
    468c:	91 83       	std	Z+1, r25	; 0x01
    468e:	80 83       	st	Z, r24
			_delay_ms(500);

			to_uARM("M2210 F500 T100\n");
    4690:	8b e9       	ldi	r24, 0x9B	; 155
    4692:	92 e0       	ldi	r25, 0x02	; 2
    4694:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    4698:	9e 01       	movw	r18, r28
    469a:	2f 54       	subi	r18, 0x4F	; 79
    469c:	3f 4f       	sbci	r19, 0xFF	; 255
    469e:	80 e0       	ldi	r24, 0x00	; 0
    46a0:	90 e0       	ldi	r25, 0x00	; 0
    46a2:	a6 e9       	ldi	r26, 0x96	; 150
    46a4:	b3 e4       	ldi	r27, 0x43	; 67
    46a6:	f9 01       	movw	r30, r18
    46a8:	80 83       	st	Z, r24
    46aa:	91 83       	std	Z+1, r25	; 0x01
    46ac:	a2 83       	std	Z+2, r26	; 0x02
    46ae:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    46b0:	8e 01       	movw	r16, r28
    46b2:	0f 5f       	subi	r16, 0xFF	; 255
    46b4:	1e 4f       	sbci	r17, 0xFE	; 254
    46b6:	ce 01       	movw	r24, r28
    46b8:	8f 54       	subi	r24, 0x4F	; 79
    46ba:	9f 4f       	sbci	r25, 0xFF	; 255
    46bc:	20 e0       	ldi	r18, 0x00	; 0
    46be:	30 e0       	ldi	r19, 0x00	; 0
    46c0:	4a e7       	ldi	r20, 0x7A	; 122
    46c2:	55 e4       	ldi	r21, 0x45	; 69
    46c4:	fc 01       	movw	r30, r24
    46c6:	60 81       	ld	r22, Z
    46c8:	71 81       	ldd	r23, Z+1	; 0x01
    46ca:	82 81       	ldd	r24, Z+2	; 0x02
    46cc:	93 81       	ldd	r25, Z+3	; 0x03
    46ce:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    46d2:	dc 01       	movw	r26, r24
    46d4:	cb 01       	movw	r24, r22
    46d6:	f8 01       	movw	r30, r16
    46d8:	80 83       	st	Z, r24
    46da:	91 83       	std	Z+1, r25	; 0x01
    46dc:	a2 83       	std	Z+2, r26	; 0x02
    46de:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    46e0:	ce 01       	movw	r24, r28
    46e2:	8f 5f       	subi	r24, 0xFF	; 255
    46e4:	9e 4f       	sbci	r25, 0xFE	; 254
    46e6:	20 e0       	ldi	r18, 0x00	; 0
    46e8:	30 e0       	ldi	r19, 0x00	; 0
    46ea:	40 e8       	ldi	r20, 0x80	; 128
    46ec:	5f e3       	ldi	r21, 0x3F	; 63
    46ee:	fc 01       	movw	r30, r24
    46f0:	60 81       	ld	r22, Z
    46f2:	71 81       	ldd	r23, Z+1	; 0x01
    46f4:	82 81       	ldd	r24, Z+2	; 0x02
    46f6:	93 81       	ldd	r25, Z+3	; 0x03
    46f8:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    46fc:	88 23       	and	r24, r24
    46fe:	4c f4       	brge	.+18     	; 0x4712 <__stack+0x3613>
		__ticks = 1;
    4700:	ce 01       	movw	r24, r28
    4702:	8b 5f       	subi	r24, 0xFB	; 251
    4704:	9e 4f       	sbci	r25, 0xFE	; 254
    4706:	21 e0       	ldi	r18, 0x01	; 1
    4708:	30 e0       	ldi	r19, 0x00	; 0
    470a:	fc 01       	movw	r30, r24
    470c:	31 83       	std	Z+1, r19	; 0x01
    470e:	20 83       	st	Z, r18
    4710:	6d c0       	rjmp	.+218    	; 0x47ec <__stack+0x36ed>
	else if (__tmp > 65535)
    4712:	ce 01       	movw	r24, r28
    4714:	8f 5f       	subi	r24, 0xFF	; 255
    4716:	9e 4f       	sbci	r25, 0xFE	; 254
    4718:	20 e0       	ldi	r18, 0x00	; 0
    471a:	3f ef       	ldi	r19, 0xFF	; 255
    471c:	4f e7       	ldi	r20, 0x7F	; 127
    471e:	57 e4       	ldi	r21, 0x47	; 71
    4720:	fc 01       	movw	r30, r24
    4722:	60 81       	ld	r22, Z
    4724:	71 81       	ldd	r23, Z+1	; 0x01
    4726:	82 81       	ldd	r24, Z+2	; 0x02
    4728:	93 81       	ldd	r25, Z+3	; 0x03
    472a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    472e:	18 16       	cp	r1, r24
    4730:	0c f0       	brlt	.+2      	; 0x4734 <__stack+0x3635>
    4732:	4a c0       	rjmp	.+148    	; 0x47c8 <__stack+0x36c9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4734:	ce 01       	movw	r24, r28
    4736:	8f 54       	subi	r24, 0x4F	; 79
    4738:	9f 4f       	sbci	r25, 0xFF	; 255
    473a:	20 e0       	ldi	r18, 0x00	; 0
    473c:	30 e0       	ldi	r19, 0x00	; 0
    473e:	40 e2       	ldi	r20, 0x20	; 32
    4740:	51 e4       	ldi	r21, 0x41	; 65
    4742:	fc 01       	movw	r30, r24
    4744:	60 81       	ld	r22, Z
    4746:	71 81       	ldd	r23, Z+1	; 0x01
    4748:	82 81       	ldd	r24, Z+2	; 0x02
    474a:	93 81       	ldd	r25, Z+3	; 0x03
    474c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    4750:	dc 01       	movw	r26, r24
    4752:	cb 01       	movw	r24, r22
    4754:	8e 01       	movw	r16, r28
    4756:	0b 5f       	subi	r16, 0xFB	; 251
    4758:	1e 4f       	sbci	r17, 0xFE	; 254
    475a:	bc 01       	movw	r22, r24
    475c:	cd 01       	movw	r24, r26
    475e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    4762:	dc 01       	movw	r26, r24
    4764:	cb 01       	movw	r24, r22
    4766:	f8 01       	movw	r30, r16
    4768:	91 83       	std	Z+1, r25	; 0x01
    476a:	80 83       	st	Z, r24
    476c:	24 c0       	rjmp	.+72     	; 0x47b6 <__stack+0x36b7>
    476e:	ce 01       	movw	r24, r28
    4770:	89 5f       	subi	r24, 0xF9	; 249
    4772:	9e 4f       	sbci	r25, 0xFE	; 254
    4774:	20 e9       	ldi	r18, 0x90	; 144
    4776:	31 e0       	ldi	r19, 0x01	; 1
    4778:	fc 01       	movw	r30, r24
    477a:	31 83       	std	Z+1, r19	; 0x01
    477c:	20 83       	st	Z, r18
    477e:	ce 01       	movw	r24, r28
    4780:	89 5f       	subi	r24, 0xF9	; 249
    4782:	9e 4f       	sbci	r25, 0xFE	; 254
    4784:	fc 01       	movw	r30, r24
    4786:	80 81       	ld	r24, Z
    4788:	91 81       	ldd	r25, Z+1	; 0x01
    478a:	01 97       	sbiw	r24, 0x01	; 1
    478c:	f1 f7       	brne	.-4      	; 0x478a <__stack+0x368b>
    478e:	9e 01       	movw	r18, r28
    4790:	29 5f       	subi	r18, 0xF9	; 249
    4792:	3e 4f       	sbci	r19, 0xFE	; 254
    4794:	f9 01       	movw	r30, r18
    4796:	91 83       	std	Z+1, r25	; 0x01
    4798:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    479a:	ce 01       	movw	r24, r28
    479c:	8b 5f       	subi	r24, 0xFB	; 251
    479e:	9e 4f       	sbci	r25, 0xFE	; 254
    47a0:	9e 01       	movw	r18, r28
    47a2:	2b 5f       	subi	r18, 0xFB	; 251
    47a4:	3e 4f       	sbci	r19, 0xFE	; 254
    47a6:	f9 01       	movw	r30, r18
    47a8:	20 81       	ld	r18, Z
    47aa:	31 81       	ldd	r19, Z+1	; 0x01
    47ac:	21 50       	subi	r18, 0x01	; 1
    47ae:	31 09       	sbc	r19, r1
    47b0:	fc 01       	movw	r30, r24
    47b2:	31 83       	std	Z+1, r19	; 0x01
    47b4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    47b6:	ce 01       	movw	r24, r28
    47b8:	8b 5f       	subi	r24, 0xFB	; 251
    47ba:	9e 4f       	sbci	r25, 0xFE	; 254
    47bc:	fc 01       	movw	r30, r24
    47be:	80 81       	ld	r24, Z
    47c0:	91 81       	ldd	r25, Z+1	; 0x01
    47c2:	89 2b       	or	r24, r25
    47c4:	a1 f6       	brne	.-88     	; 0x476e <__stack+0x366f>
    47c6:	2c c0       	rjmp	.+88     	; 0x4820 <__stack+0x3721>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    47c8:	8e 01       	movw	r16, r28
    47ca:	0b 5f       	subi	r16, 0xFB	; 251
    47cc:	1e 4f       	sbci	r17, 0xFE	; 254
    47ce:	ce 01       	movw	r24, r28
    47d0:	8f 5f       	subi	r24, 0xFF	; 255
    47d2:	9e 4f       	sbci	r25, 0xFE	; 254
    47d4:	fc 01       	movw	r30, r24
    47d6:	60 81       	ld	r22, Z
    47d8:	71 81       	ldd	r23, Z+1	; 0x01
    47da:	82 81       	ldd	r24, Z+2	; 0x02
    47dc:	93 81       	ldd	r25, Z+3	; 0x03
    47de:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    47e2:	dc 01       	movw	r26, r24
    47e4:	cb 01       	movw	r24, r22
    47e6:	f8 01       	movw	r30, r16
    47e8:	91 83       	std	Z+1, r25	; 0x01
    47ea:	80 83       	st	Z, r24
    47ec:	ce 01       	movw	r24, r28
    47ee:	87 5f       	subi	r24, 0xF7	; 247
    47f0:	9e 4f       	sbci	r25, 0xFE	; 254
    47f2:	9e 01       	movw	r18, r28
    47f4:	2b 5f       	subi	r18, 0xFB	; 251
    47f6:	3e 4f       	sbci	r19, 0xFE	; 254
    47f8:	f9 01       	movw	r30, r18
    47fa:	20 81       	ld	r18, Z
    47fc:	31 81       	ldd	r19, Z+1	; 0x01
    47fe:	fc 01       	movw	r30, r24
    4800:	31 83       	std	Z+1, r19	; 0x01
    4802:	20 83       	st	Z, r18
    4804:	ce 01       	movw	r24, r28
    4806:	87 5f       	subi	r24, 0xF7	; 247
    4808:	9e 4f       	sbci	r25, 0xFE	; 254
    480a:	fc 01       	movw	r30, r24
    480c:	80 81       	ld	r24, Z
    480e:	91 81       	ldd	r25, Z+1	; 0x01
    4810:	01 97       	sbiw	r24, 0x01	; 1
    4812:	f1 f7       	brne	.-4      	; 0x4810 <__stack+0x3711>
    4814:	9e 01       	movw	r18, r28
    4816:	27 5f       	subi	r18, 0xF7	; 247
    4818:	3e 4f       	sbci	r19, 0xFE	; 254
    481a:	f9 01       	movw	r30, r18
    481c:	91 83       	std	Z+1, r25	; 0x01
    481e:	80 83       	st	Z, r24
			_delay_ms(300);

			to_uARM("M2210 F760 T100\n");
    4820:	8c ea       	ldi	r24, 0xAC	; 172
    4822:	92 e0       	ldi	r25, 0x02	; 2
    4824:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    4828:	9e 01       	movw	r18, r28
    482a:	2b 54       	subi	r18, 0x4B	; 75
    482c:	3f 4f       	sbci	r19, 0xFF	; 255
    482e:	80 e0       	ldi	r24, 0x00	; 0
    4830:	90 e0       	ldi	r25, 0x00	; 0
    4832:	a8 ec       	ldi	r26, 0xC8	; 200
    4834:	b2 e4       	ldi	r27, 0x42	; 66
    4836:	f9 01       	movw	r30, r18
    4838:	80 83       	st	Z, r24
    483a:	91 83       	std	Z+1, r25	; 0x01
    483c:	a2 83       	std	Z+2, r26	; 0x02
    483e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4840:	8e 01       	movw	r16, r28
    4842:	09 50       	subi	r16, 0x09	; 9
    4844:	1f 4f       	sbci	r17, 0xFF	; 255
    4846:	ce 01       	movw	r24, r28
    4848:	8b 54       	subi	r24, 0x4B	; 75
    484a:	9f 4f       	sbci	r25, 0xFF	; 255
    484c:	20 e0       	ldi	r18, 0x00	; 0
    484e:	30 e0       	ldi	r19, 0x00	; 0
    4850:	4a e7       	ldi	r20, 0x7A	; 122
    4852:	55 e4       	ldi	r21, 0x45	; 69
    4854:	fc 01       	movw	r30, r24
    4856:	60 81       	ld	r22, Z
    4858:	71 81       	ldd	r23, Z+1	; 0x01
    485a:	82 81       	ldd	r24, Z+2	; 0x02
    485c:	93 81       	ldd	r25, Z+3	; 0x03
    485e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    4862:	dc 01       	movw	r26, r24
    4864:	cb 01       	movw	r24, r22
    4866:	f8 01       	movw	r30, r16
    4868:	80 83       	st	Z, r24
    486a:	91 83       	std	Z+1, r25	; 0x01
    486c:	a2 83       	std	Z+2, r26	; 0x02
    486e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4870:	ce 01       	movw	r24, r28
    4872:	89 50       	subi	r24, 0x09	; 9
    4874:	9f 4f       	sbci	r25, 0xFF	; 255
    4876:	20 e0       	ldi	r18, 0x00	; 0
    4878:	30 e0       	ldi	r19, 0x00	; 0
    487a:	40 e8       	ldi	r20, 0x80	; 128
    487c:	5f e3       	ldi	r21, 0x3F	; 63
    487e:	fc 01       	movw	r30, r24
    4880:	60 81       	ld	r22, Z
    4882:	71 81       	ldd	r23, Z+1	; 0x01
    4884:	82 81       	ldd	r24, Z+2	; 0x02
    4886:	93 81       	ldd	r25, Z+3	; 0x03
    4888:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    488c:	88 23       	and	r24, r24
    488e:	4c f4       	brge	.+18     	; 0x48a2 <__stack+0x37a3>
		__ticks = 1;
    4890:	ce 01       	movw	r24, r28
    4892:	85 50       	subi	r24, 0x05	; 5
    4894:	9f 4f       	sbci	r25, 0xFF	; 255
    4896:	21 e0       	ldi	r18, 0x01	; 1
    4898:	30 e0       	ldi	r19, 0x00	; 0
    489a:	fc 01       	movw	r30, r24
    489c:	31 83       	std	Z+1, r19	; 0x01
    489e:	20 83       	st	Z, r18
    48a0:	6d c0       	rjmp	.+218    	; 0x497c <__stack+0x387d>
	else if (__tmp > 65535)
    48a2:	ce 01       	movw	r24, r28
    48a4:	89 50       	subi	r24, 0x09	; 9
    48a6:	9f 4f       	sbci	r25, 0xFF	; 255
    48a8:	20 e0       	ldi	r18, 0x00	; 0
    48aa:	3f ef       	ldi	r19, 0xFF	; 255
    48ac:	4f e7       	ldi	r20, 0x7F	; 127
    48ae:	57 e4       	ldi	r21, 0x47	; 71
    48b0:	fc 01       	movw	r30, r24
    48b2:	60 81       	ld	r22, Z
    48b4:	71 81       	ldd	r23, Z+1	; 0x01
    48b6:	82 81       	ldd	r24, Z+2	; 0x02
    48b8:	93 81       	ldd	r25, Z+3	; 0x03
    48ba:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    48be:	18 16       	cp	r1, r24
    48c0:	0c f0       	brlt	.+2      	; 0x48c4 <__stack+0x37c5>
    48c2:	4a c0       	rjmp	.+148    	; 0x4958 <__stack+0x3859>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    48c4:	ce 01       	movw	r24, r28
    48c6:	8b 54       	subi	r24, 0x4B	; 75
    48c8:	9f 4f       	sbci	r25, 0xFF	; 255
    48ca:	20 e0       	ldi	r18, 0x00	; 0
    48cc:	30 e0       	ldi	r19, 0x00	; 0
    48ce:	40 e2       	ldi	r20, 0x20	; 32
    48d0:	51 e4       	ldi	r21, 0x41	; 65
    48d2:	fc 01       	movw	r30, r24
    48d4:	60 81       	ld	r22, Z
    48d6:	71 81       	ldd	r23, Z+1	; 0x01
    48d8:	82 81       	ldd	r24, Z+2	; 0x02
    48da:	93 81       	ldd	r25, Z+3	; 0x03
    48dc:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    48e0:	dc 01       	movw	r26, r24
    48e2:	cb 01       	movw	r24, r22
    48e4:	8e 01       	movw	r16, r28
    48e6:	05 50       	subi	r16, 0x05	; 5
    48e8:	1f 4f       	sbci	r17, 0xFF	; 255
    48ea:	bc 01       	movw	r22, r24
    48ec:	cd 01       	movw	r24, r26
    48ee:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    48f2:	dc 01       	movw	r26, r24
    48f4:	cb 01       	movw	r24, r22
    48f6:	f8 01       	movw	r30, r16
    48f8:	91 83       	std	Z+1, r25	; 0x01
    48fa:	80 83       	st	Z, r24
    48fc:	24 c0       	rjmp	.+72     	; 0x4946 <__stack+0x3847>
    48fe:	ce 01       	movw	r24, r28
    4900:	83 50       	subi	r24, 0x03	; 3
    4902:	9f 4f       	sbci	r25, 0xFF	; 255
    4904:	20 e9       	ldi	r18, 0x90	; 144
    4906:	31 e0       	ldi	r19, 0x01	; 1
    4908:	fc 01       	movw	r30, r24
    490a:	31 83       	std	Z+1, r19	; 0x01
    490c:	20 83       	st	Z, r18
    490e:	ce 01       	movw	r24, r28
    4910:	83 50       	subi	r24, 0x03	; 3
    4912:	9f 4f       	sbci	r25, 0xFF	; 255
    4914:	fc 01       	movw	r30, r24
    4916:	80 81       	ld	r24, Z
    4918:	91 81       	ldd	r25, Z+1	; 0x01
    491a:	01 97       	sbiw	r24, 0x01	; 1
    491c:	f1 f7       	brne	.-4      	; 0x491a <__stack+0x381b>
    491e:	9e 01       	movw	r18, r28
    4920:	23 50       	subi	r18, 0x03	; 3
    4922:	3f 4f       	sbci	r19, 0xFF	; 255
    4924:	f9 01       	movw	r30, r18
    4926:	91 83       	std	Z+1, r25	; 0x01
    4928:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    492a:	ce 01       	movw	r24, r28
    492c:	85 50       	subi	r24, 0x05	; 5
    492e:	9f 4f       	sbci	r25, 0xFF	; 255
    4930:	9e 01       	movw	r18, r28
    4932:	25 50       	subi	r18, 0x05	; 5
    4934:	3f 4f       	sbci	r19, 0xFF	; 255
    4936:	f9 01       	movw	r30, r18
    4938:	20 81       	ld	r18, Z
    493a:	31 81       	ldd	r19, Z+1	; 0x01
    493c:	21 50       	subi	r18, 0x01	; 1
    493e:	31 09       	sbc	r19, r1
    4940:	fc 01       	movw	r30, r24
    4942:	31 83       	std	Z+1, r19	; 0x01
    4944:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4946:	ce 01       	movw	r24, r28
    4948:	85 50       	subi	r24, 0x05	; 5
    494a:	9f 4f       	sbci	r25, 0xFF	; 255
    494c:	fc 01       	movw	r30, r24
    494e:	80 81       	ld	r24, Z
    4950:	91 81       	ldd	r25, Z+1	; 0x01
    4952:	89 2b       	or	r24, r25
    4954:	a1 f6       	brne	.-88     	; 0x48fe <__stack+0x37ff>
    4956:	2c c0       	rjmp	.+88     	; 0x49b0 <__stack+0x38b1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4958:	8e 01       	movw	r16, r28
    495a:	05 50       	subi	r16, 0x05	; 5
    495c:	1f 4f       	sbci	r17, 0xFF	; 255
    495e:	ce 01       	movw	r24, r28
    4960:	89 50       	subi	r24, 0x09	; 9
    4962:	9f 4f       	sbci	r25, 0xFF	; 255
    4964:	fc 01       	movw	r30, r24
    4966:	60 81       	ld	r22, Z
    4968:	71 81       	ldd	r23, Z+1	; 0x01
    496a:	82 81       	ldd	r24, Z+2	; 0x02
    496c:	93 81       	ldd	r25, Z+3	; 0x03
    496e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    4972:	dc 01       	movw	r26, r24
    4974:	cb 01       	movw	r24, r22
    4976:	f8 01       	movw	r30, r16
    4978:	91 83       	std	Z+1, r25	; 0x01
    497a:	80 83       	st	Z, r24
    497c:	ce 01       	movw	r24, r28
    497e:	81 50       	subi	r24, 0x01	; 1
    4980:	9f 4f       	sbci	r25, 0xFF	; 255
    4982:	9e 01       	movw	r18, r28
    4984:	25 50       	subi	r18, 0x05	; 5
    4986:	3f 4f       	sbci	r19, 0xFF	; 255
    4988:	f9 01       	movw	r30, r18
    498a:	20 81       	ld	r18, Z
    498c:	31 81       	ldd	r19, Z+1	; 0x01
    498e:	fc 01       	movw	r30, r24
    4990:	31 83       	std	Z+1, r19	; 0x01
    4992:	20 83       	st	Z, r18
    4994:	ce 01       	movw	r24, r28
    4996:	81 50       	subi	r24, 0x01	; 1
    4998:	9f 4f       	sbci	r25, 0xFF	; 255
    499a:	fc 01       	movw	r30, r24
    499c:	80 81       	ld	r24, Z
    499e:	91 81       	ldd	r25, Z+1	; 0x01
    49a0:	01 97       	sbiw	r24, 0x01	; 1
    49a2:	f1 f7       	brne	.-4      	; 0x49a0 <__stack+0x38a1>
    49a4:	9e 01       	movw	r18, r28
    49a6:	21 50       	subi	r18, 0x01	; 1
    49a8:	3f 4f       	sbci	r19, 0xFF	; 255
    49aa:	f9 01       	movw	r30, r18
    49ac:	91 83       	std	Z+1, r25	; 0x01
    49ae:	80 83       	st	Z, r24
			_delay_ms(100);
			to_uARM("M2210 F720 T100\n");
    49b0:	8d eb       	ldi	r24, 0xBD	; 189
    49b2:	92 e0       	ldi	r25, 0x02	; 2
    49b4:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    49b8:	9e 01       	movw	r18, r28
    49ba:	27 54       	subi	r18, 0x47	; 71
    49bc:	3f 4f       	sbci	r19, 0xFF	; 255
    49be:	80 e0       	ldi	r24, 0x00	; 0
    49c0:	90 e0       	ldi	r25, 0x00	; 0
    49c2:	a6 e1       	ldi	r26, 0x16	; 22
    49c4:	b3 e4       	ldi	r27, 0x43	; 67
    49c6:	f9 01       	movw	r30, r18
    49c8:	80 83       	st	Z, r24
    49ca:	91 83       	std	Z+1, r25	; 0x01
    49cc:	a2 83       	std	Z+2, r26	; 0x02
    49ce:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    49d0:	8e 01       	movw	r16, r28
    49d2:	03 51       	subi	r16, 0x13	; 19
    49d4:	1f 4f       	sbci	r17, 0xFF	; 255
    49d6:	ce 01       	movw	r24, r28
    49d8:	87 54       	subi	r24, 0x47	; 71
    49da:	9f 4f       	sbci	r25, 0xFF	; 255
    49dc:	20 e0       	ldi	r18, 0x00	; 0
    49de:	30 e0       	ldi	r19, 0x00	; 0
    49e0:	4a e7       	ldi	r20, 0x7A	; 122
    49e2:	55 e4       	ldi	r21, 0x45	; 69
    49e4:	fc 01       	movw	r30, r24
    49e6:	60 81       	ld	r22, Z
    49e8:	71 81       	ldd	r23, Z+1	; 0x01
    49ea:	82 81       	ldd	r24, Z+2	; 0x02
    49ec:	93 81       	ldd	r25, Z+3	; 0x03
    49ee:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    49f2:	dc 01       	movw	r26, r24
    49f4:	cb 01       	movw	r24, r22
    49f6:	f8 01       	movw	r30, r16
    49f8:	80 83       	st	Z, r24
    49fa:	91 83       	std	Z+1, r25	; 0x01
    49fc:	a2 83       	std	Z+2, r26	; 0x02
    49fe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4a00:	ce 01       	movw	r24, r28
    4a02:	83 51       	subi	r24, 0x13	; 19
    4a04:	9f 4f       	sbci	r25, 0xFF	; 255
    4a06:	20 e0       	ldi	r18, 0x00	; 0
    4a08:	30 e0       	ldi	r19, 0x00	; 0
    4a0a:	40 e8       	ldi	r20, 0x80	; 128
    4a0c:	5f e3       	ldi	r21, 0x3F	; 63
    4a0e:	fc 01       	movw	r30, r24
    4a10:	60 81       	ld	r22, Z
    4a12:	71 81       	ldd	r23, Z+1	; 0x01
    4a14:	82 81       	ldd	r24, Z+2	; 0x02
    4a16:	93 81       	ldd	r25, Z+3	; 0x03
    4a18:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    4a1c:	88 23       	and	r24, r24
    4a1e:	4c f4       	brge	.+18     	; 0x4a32 <__stack+0x3933>
		__ticks = 1;
    4a20:	ce 01       	movw	r24, r28
    4a22:	8f 50       	subi	r24, 0x0F	; 15
    4a24:	9f 4f       	sbci	r25, 0xFF	; 255
    4a26:	21 e0       	ldi	r18, 0x01	; 1
    4a28:	30 e0       	ldi	r19, 0x00	; 0
    4a2a:	fc 01       	movw	r30, r24
    4a2c:	31 83       	std	Z+1, r19	; 0x01
    4a2e:	20 83       	st	Z, r18
    4a30:	6d c0       	rjmp	.+218    	; 0x4b0c <__stack+0x3a0d>
	else if (__tmp > 65535)
    4a32:	ce 01       	movw	r24, r28
    4a34:	83 51       	subi	r24, 0x13	; 19
    4a36:	9f 4f       	sbci	r25, 0xFF	; 255
    4a38:	20 e0       	ldi	r18, 0x00	; 0
    4a3a:	3f ef       	ldi	r19, 0xFF	; 255
    4a3c:	4f e7       	ldi	r20, 0x7F	; 127
    4a3e:	57 e4       	ldi	r21, 0x47	; 71
    4a40:	fc 01       	movw	r30, r24
    4a42:	60 81       	ld	r22, Z
    4a44:	71 81       	ldd	r23, Z+1	; 0x01
    4a46:	82 81       	ldd	r24, Z+2	; 0x02
    4a48:	93 81       	ldd	r25, Z+3	; 0x03
    4a4a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    4a4e:	18 16       	cp	r1, r24
    4a50:	0c f0       	brlt	.+2      	; 0x4a54 <__stack+0x3955>
    4a52:	4a c0       	rjmp	.+148    	; 0x4ae8 <__stack+0x39e9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4a54:	ce 01       	movw	r24, r28
    4a56:	87 54       	subi	r24, 0x47	; 71
    4a58:	9f 4f       	sbci	r25, 0xFF	; 255
    4a5a:	20 e0       	ldi	r18, 0x00	; 0
    4a5c:	30 e0       	ldi	r19, 0x00	; 0
    4a5e:	40 e2       	ldi	r20, 0x20	; 32
    4a60:	51 e4       	ldi	r21, 0x41	; 65
    4a62:	fc 01       	movw	r30, r24
    4a64:	60 81       	ld	r22, Z
    4a66:	71 81       	ldd	r23, Z+1	; 0x01
    4a68:	82 81       	ldd	r24, Z+2	; 0x02
    4a6a:	93 81       	ldd	r25, Z+3	; 0x03
    4a6c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    4a70:	dc 01       	movw	r26, r24
    4a72:	cb 01       	movw	r24, r22
    4a74:	8e 01       	movw	r16, r28
    4a76:	0f 50       	subi	r16, 0x0F	; 15
    4a78:	1f 4f       	sbci	r17, 0xFF	; 255
    4a7a:	bc 01       	movw	r22, r24
    4a7c:	cd 01       	movw	r24, r26
    4a7e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    4a82:	dc 01       	movw	r26, r24
    4a84:	cb 01       	movw	r24, r22
    4a86:	f8 01       	movw	r30, r16
    4a88:	91 83       	std	Z+1, r25	; 0x01
    4a8a:	80 83       	st	Z, r24
    4a8c:	24 c0       	rjmp	.+72     	; 0x4ad6 <__stack+0x39d7>
    4a8e:	ce 01       	movw	r24, r28
    4a90:	8d 50       	subi	r24, 0x0D	; 13
    4a92:	9f 4f       	sbci	r25, 0xFF	; 255
    4a94:	20 e9       	ldi	r18, 0x90	; 144
    4a96:	31 e0       	ldi	r19, 0x01	; 1
    4a98:	fc 01       	movw	r30, r24
    4a9a:	31 83       	std	Z+1, r19	; 0x01
    4a9c:	20 83       	st	Z, r18
    4a9e:	ce 01       	movw	r24, r28
    4aa0:	8d 50       	subi	r24, 0x0D	; 13
    4aa2:	9f 4f       	sbci	r25, 0xFF	; 255
    4aa4:	fc 01       	movw	r30, r24
    4aa6:	80 81       	ld	r24, Z
    4aa8:	91 81       	ldd	r25, Z+1	; 0x01
    4aaa:	01 97       	sbiw	r24, 0x01	; 1
    4aac:	f1 f7       	brne	.-4      	; 0x4aaa <__stack+0x39ab>
    4aae:	9e 01       	movw	r18, r28
    4ab0:	2d 50       	subi	r18, 0x0D	; 13
    4ab2:	3f 4f       	sbci	r19, 0xFF	; 255
    4ab4:	f9 01       	movw	r30, r18
    4ab6:	91 83       	std	Z+1, r25	; 0x01
    4ab8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4aba:	ce 01       	movw	r24, r28
    4abc:	8f 50       	subi	r24, 0x0F	; 15
    4abe:	9f 4f       	sbci	r25, 0xFF	; 255
    4ac0:	9e 01       	movw	r18, r28
    4ac2:	2f 50       	subi	r18, 0x0F	; 15
    4ac4:	3f 4f       	sbci	r19, 0xFF	; 255
    4ac6:	f9 01       	movw	r30, r18
    4ac8:	20 81       	ld	r18, Z
    4aca:	31 81       	ldd	r19, Z+1	; 0x01
    4acc:	21 50       	subi	r18, 0x01	; 1
    4ace:	31 09       	sbc	r19, r1
    4ad0:	fc 01       	movw	r30, r24
    4ad2:	31 83       	std	Z+1, r19	; 0x01
    4ad4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4ad6:	ce 01       	movw	r24, r28
    4ad8:	8f 50       	subi	r24, 0x0F	; 15
    4ada:	9f 4f       	sbci	r25, 0xFF	; 255
    4adc:	fc 01       	movw	r30, r24
    4ade:	80 81       	ld	r24, Z
    4ae0:	91 81       	ldd	r25, Z+1	; 0x01
    4ae2:	89 2b       	or	r24, r25
    4ae4:	a1 f6       	brne	.-88     	; 0x4a8e <__stack+0x398f>
    4ae6:	2c c0       	rjmp	.+88     	; 0x4b40 <__stack+0x3a41>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ae8:	8e 01       	movw	r16, r28
    4aea:	0f 50       	subi	r16, 0x0F	; 15
    4aec:	1f 4f       	sbci	r17, 0xFF	; 255
    4aee:	ce 01       	movw	r24, r28
    4af0:	83 51       	subi	r24, 0x13	; 19
    4af2:	9f 4f       	sbci	r25, 0xFF	; 255
    4af4:	fc 01       	movw	r30, r24
    4af6:	60 81       	ld	r22, Z
    4af8:	71 81       	ldd	r23, Z+1	; 0x01
    4afa:	82 81       	ldd	r24, Z+2	; 0x02
    4afc:	93 81       	ldd	r25, Z+3	; 0x03
    4afe:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    4b02:	dc 01       	movw	r26, r24
    4b04:	cb 01       	movw	r24, r22
    4b06:	f8 01       	movw	r30, r16
    4b08:	91 83       	std	Z+1, r25	; 0x01
    4b0a:	80 83       	st	Z, r24
    4b0c:	ce 01       	movw	r24, r28
    4b0e:	8b 50       	subi	r24, 0x0B	; 11
    4b10:	9f 4f       	sbci	r25, 0xFF	; 255
    4b12:	9e 01       	movw	r18, r28
    4b14:	2f 50       	subi	r18, 0x0F	; 15
    4b16:	3f 4f       	sbci	r19, 0xFF	; 255
    4b18:	f9 01       	movw	r30, r18
    4b1a:	20 81       	ld	r18, Z
    4b1c:	31 81       	ldd	r19, Z+1	; 0x01
    4b1e:	fc 01       	movw	r30, r24
    4b20:	31 83       	std	Z+1, r19	; 0x01
    4b22:	20 83       	st	Z, r18
    4b24:	ce 01       	movw	r24, r28
    4b26:	8b 50       	subi	r24, 0x0B	; 11
    4b28:	9f 4f       	sbci	r25, 0xFF	; 255
    4b2a:	fc 01       	movw	r30, r24
    4b2c:	80 81       	ld	r24, Z
    4b2e:	91 81       	ldd	r25, Z+1	; 0x01
    4b30:	01 97       	sbiw	r24, 0x01	; 1
    4b32:	f1 f7       	brne	.-4      	; 0x4b30 <__stack+0x3a31>
    4b34:	9e 01       	movw	r18, r28
    4b36:	2b 50       	subi	r18, 0x0B	; 11
    4b38:	3f 4f       	sbci	r19, 0xFF	; 255
    4b3a:	f9 01       	movw	r30, r18
    4b3c:	91 83       	std	Z+1, r25	; 0x01
    4b3e:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F680 T100\n");
    4b40:	8e ec       	ldi	r24, 0xCE	; 206
    4b42:	92 e0       	ldi	r25, 0x02	; 2
    4b44:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    4b48:	9e 01       	movw	r18, r28
    4b4a:	23 54       	subi	r18, 0x43	; 67
    4b4c:	3f 4f       	sbci	r19, 0xFF	; 255
    4b4e:	80 e0       	ldi	r24, 0x00	; 0
    4b50:	90 e0       	ldi	r25, 0x00	; 0
    4b52:	a6 e1       	ldi	r26, 0x16	; 22
    4b54:	b3 e4       	ldi	r27, 0x43	; 67
    4b56:	f9 01       	movw	r30, r18
    4b58:	80 83       	st	Z, r24
    4b5a:	91 83       	std	Z+1, r25	; 0x01
    4b5c:	a2 83       	std	Z+2, r26	; 0x02
    4b5e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4b60:	8e 01       	movw	r16, r28
    4b62:	0d 51       	subi	r16, 0x1D	; 29
    4b64:	1f 4f       	sbci	r17, 0xFF	; 255
    4b66:	ce 01       	movw	r24, r28
    4b68:	83 54       	subi	r24, 0x43	; 67
    4b6a:	9f 4f       	sbci	r25, 0xFF	; 255
    4b6c:	20 e0       	ldi	r18, 0x00	; 0
    4b6e:	30 e0       	ldi	r19, 0x00	; 0
    4b70:	4a e7       	ldi	r20, 0x7A	; 122
    4b72:	55 e4       	ldi	r21, 0x45	; 69
    4b74:	fc 01       	movw	r30, r24
    4b76:	60 81       	ld	r22, Z
    4b78:	71 81       	ldd	r23, Z+1	; 0x01
    4b7a:	82 81       	ldd	r24, Z+2	; 0x02
    4b7c:	93 81       	ldd	r25, Z+3	; 0x03
    4b7e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    4b82:	dc 01       	movw	r26, r24
    4b84:	cb 01       	movw	r24, r22
    4b86:	f8 01       	movw	r30, r16
    4b88:	80 83       	st	Z, r24
    4b8a:	91 83       	std	Z+1, r25	; 0x01
    4b8c:	a2 83       	std	Z+2, r26	; 0x02
    4b8e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4b90:	ce 01       	movw	r24, r28
    4b92:	8d 51       	subi	r24, 0x1D	; 29
    4b94:	9f 4f       	sbci	r25, 0xFF	; 255
    4b96:	20 e0       	ldi	r18, 0x00	; 0
    4b98:	30 e0       	ldi	r19, 0x00	; 0
    4b9a:	40 e8       	ldi	r20, 0x80	; 128
    4b9c:	5f e3       	ldi	r21, 0x3F	; 63
    4b9e:	fc 01       	movw	r30, r24
    4ba0:	60 81       	ld	r22, Z
    4ba2:	71 81       	ldd	r23, Z+1	; 0x01
    4ba4:	82 81       	ldd	r24, Z+2	; 0x02
    4ba6:	93 81       	ldd	r25, Z+3	; 0x03
    4ba8:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    4bac:	88 23       	and	r24, r24
    4bae:	4c f4       	brge	.+18     	; 0x4bc2 <__stack+0x3ac3>
		__ticks = 1;
    4bb0:	ce 01       	movw	r24, r28
    4bb2:	89 51       	subi	r24, 0x19	; 25
    4bb4:	9f 4f       	sbci	r25, 0xFF	; 255
    4bb6:	21 e0       	ldi	r18, 0x01	; 1
    4bb8:	30 e0       	ldi	r19, 0x00	; 0
    4bba:	fc 01       	movw	r30, r24
    4bbc:	31 83       	std	Z+1, r19	; 0x01
    4bbe:	20 83       	st	Z, r18
    4bc0:	6d c0       	rjmp	.+218    	; 0x4c9c <__stack+0x3b9d>
	else if (__tmp > 65535)
    4bc2:	ce 01       	movw	r24, r28
    4bc4:	8d 51       	subi	r24, 0x1D	; 29
    4bc6:	9f 4f       	sbci	r25, 0xFF	; 255
    4bc8:	20 e0       	ldi	r18, 0x00	; 0
    4bca:	3f ef       	ldi	r19, 0xFF	; 255
    4bcc:	4f e7       	ldi	r20, 0x7F	; 127
    4bce:	57 e4       	ldi	r21, 0x47	; 71
    4bd0:	fc 01       	movw	r30, r24
    4bd2:	60 81       	ld	r22, Z
    4bd4:	71 81       	ldd	r23, Z+1	; 0x01
    4bd6:	82 81       	ldd	r24, Z+2	; 0x02
    4bd8:	93 81       	ldd	r25, Z+3	; 0x03
    4bda:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    4bde:	18 16       	cp	r1, r24
    4be0:	0c f0       	brlt	.+2      	; 0x4be4 <__stack+0x3ae5>
    4be2:	4a c0       	rjmp	.+148    	; 0x4c78 <__stack+0x3b79>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4be4:	ce 01       	movw	r24, r28
    4be6:	83 54       	subi	r24, 0x43	; 67
    4be8:	9f 4f       	sbci	r25, 0xFF	; 255
    4bea:	20 e0       	ldi	r18, 0x00	; 0
    4bec:	30 e0       	ldi	r19, 0x00	; 0
    4bee:	40 e2       	ldi	r20, 0x20	; 32
    4bf0:	51 e4       	ldi	r21, 0x41	; 65
    4bf2:	fc 01       	movw	r30, r24
    4bf4:	60 81       	ld	r22, Z
    4bf6:	71 81       	ldd	r23, Z+1	; 0x01
    4bf8:	82 81       	ldd	r24, Z+2	; 0x02
    4bfa:	93 81       	ldd	r25, Z+3	; 0x03
    4bfc:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    4c00:	dc 01       	movw	r26, r24
    4c02:	cb 01       	movw	r24, r22
    4c04:	8e 01       	movw	r16, r28
    4c06:	09 51       	subi	r16, 0x19	; 25
    4c08:	1f 4f       	sbci	r17, 0xFF	; 255
    4c0a:	bc 01       	movw	r22, r24
    4c0c:	cd 01       	movw	r24, r26
    4c0e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    4c12:	dc 01       	movw	r26, r24
    4c14:	cb 01       	movw	r24, r22
    4c16:	f8 01       	movw	r30, r16
    4c18:	91 83       	std	Z+1, r25	; 0x01
    4c1a:	80 83       	st	Z, r24
    4c1c:	24 c0       	rjmp	.+72     	; 0x4c66 <__stack+0x3b67>
    4c1e:	ce 01       	movw	r24, r28
    4c20:	87 51       	subi	r24, 0x17	; 23
    4c22:	9f 4f       	sbci	r25, 0xFF	; 255
    4c24:	20 e9       	ldi	r18, 0x90	; 144
    4c26:	31 e0       	ldi	r19, 0x01	; 1
    4c28:	fc 01       	movw	r30, r24
    4c2a:	31 83       	std	Z+1, r19	; 0x01
    4c2c:	20 83       	st	Z, r18
    4c2e:	ce 01       	movw	r24, r28
    4c30:	87 51       	subi	r24, 0x17	; 23
    4c32:	9f 4f       	sbci	r25, 0xFF	; 255
    4c34:	fc 01       	movw	r30, r24
    4c36:	80 81       	ld	r24, Z
    4c38:	91 81       	ldd	r25, Z+1	; 0x01
    4c3a:	01 97       	sbiw	r24, 0x01	; 1
    4c3c:	f1 f7       	brne	.-4      	; 0x4c3a <__stack+0x3b3b>
    4c3e:	9e 01       	movw	r18, r28
    4c40:	27 51       	subi	r18, 0x17	; 23
    4c42:	3f 4f       	sbci	r19, 0xFF	; 255
    4c44:	f9 01       	movw	r30, r18
    4c46:	91 83       	std	Z+1, r25	; 0x01
    4c48:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4c4a:	ce 01       	movw	r24, r28
    4c4c:	89 51       	subi	r24, 0x19	; 25
    4c4e:	9f 4f       	sbci	r25, 0xFF	; 255
    4c50:	9e 01       	movw	r18, r28
    4c52:	29 51       	subi	r18, 0x19	; 25
    4c54:	3f 4f       	sbci	r19, 0xFF	; 255
    4c56:	f9 01       	movw	r30, r18
    4c58:	20 81       	ld	r18, Z
    4c5a:	31 81       	ldd	r19, Z+1	; 0x01
    4c5c:	21 50       	subi	r18, 0x01	; 1
    4c5e:	31 09       	sbc	r19, r1
    4c60:	fc 01       	movw	r30, r24
    4c62:	31 83       	std	Z+1, r19	; 0x01
    4c64:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4c66:	ce 01       	movw	r24, r28
    4c68:	89 51       	subi	r24, 0x19	; 25
    4c6a:	9f 4f       	sbci	r25, 0xFF	; 255
    4c6c:	fc 01       	movw	r30, r24
    4c6e:	80 81       	ld	r24, Z
    4c70:	91 81       	ldd	r25, Z+1	; 0x01
    4c72:	89 2b       	or	r24, r25
    4c74:	a1 f6       	brne	.-88     	; 0x4c1e <__stack+0x3b1f>
    4c76:	2c c0       	rjmp	.+88     	; 0x4cd0 <__stack+0x3bd1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4c78:	8e 01       	movw	r16, r28
    4c7a:	09 51       	subi	r16, 0x19	; 25
    4c7c:	1f 4f       	sbci	r17, 0xFF	; 255
    4c7e:	ce 01       	movw	r24, r28
    4c80:	8d 51       	subi	r24, 0x1D	; 29
    4c82:	9f 4f       	sbci	r25, 0xFF	; 255
    4c84:	fc 01       	movw	r30, r24
    4c86:	60 81       	ld	r22, Z
    4c88:	71 81       	ldd	r23, Z+1	; 0x01
    4c8a:	82 81       	ldd	r24, Z+2	; 0x02
    4c8c:	93 81       	ldd	r25, Z+3	; 0x03
    4c8e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    4c92:	dc 01       	movw	r26, r24
    4c94:	cb 01       	movw	r24, r22
    4c96:	f8 01       	movw	r30, r16
    4c98:	91 83       	std	Z+1, r25	; 0x01
    4c9a:	80 83       	st	Z, r24
    4c9c:	ce 01       	movw	r24, r28
    4c9e:	85 51       	subi	r24, 0x15	; 21
    4ca0:	9f 4f       	sbci	r25, 0xFF	; 255
    4ca2:	9e 01       	movw	r18, r28
    4ca4:	29 51       	subi	r18, 0x19	; 25
    4ca6:	3f 4f       	sbci	r19, 0xFF	; 255
    4ca8:	f9 01       	movw	r30, r18
    4caa:	20 81       	ld	r18, Z
    4cac:	31 81       	ldd	r19, Z+1	; 0x01
    4cae:	fc 01       	movw	r30, r24
    4cb0:	31 83       	std	Z+1, r19	; 0x01
    4cb2:	20 83       	st	Z, r18
    4cb4:	ce 01       	movw	r24, r28
    4cb6:	85 51       	subi	r24, 0x15	; 21
    4cb8:	9f 4f       	sbci	r25, 0xFF	; 255
    4cba:	fc 01       	movw	r30, r24
    4cbc:	80 81       	ld	r24, Z
    4cbe:	91 81       	ldd	r25, Z+1	; 0x01
    4cc0:	01 97       	sbiw	r24, 0x01	; 1
    4cc2:	f1 f7       	brne	.-4      	; 0x4cc0 <__stack+0x3bc1>
    4cc4:	9e 01       	movw	r18, r28
    4cc6:	25 51       	subi	r18, 0x15	; 21
    4cc8:	3f 4f       	sbci	r19, 0xFF	; 255
    4cca:	f9 01       	movw	r30, r18
    4ccc:	91 83       	std	Z+1, r25	; 0x01
    4cce:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F620 T150\n");
    4cd0:	8f ed       	ldi	r24, 0xDF	; 223
    4cd2:	92 e0       	ldi	r25, 0x02	; 2
    4cd4:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    4cd8:	9e 01       	movw	r18, r28
    4cda:	2b 52       	subi	r18, 0x2B	; 43
    4cdc:	3f 4f       	sbci	r19, 0xFF	; 255
    4cde:	80 e0       	ldi	r24, 0x00	; 0
    4ce0:	90 e0       	ldi	r25, 0x00	; 0
    4ce2:	a6 e9       	ldi	r26, 0x96	; 150
    4ce4:	b3 e4       	ldi	r27, 0x43	; 67
    4ce6:	f9 01       	movw	r30, r18
    4ce8:	80 83       	st	Z, r24
    4cea:	91 83       	std	Z+1, r25	; 0x01
    4cec:	a2 83       	std	Z+2, r26	; 0x02
    4cee:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4cf0:	8e 01       	movw	r16, r28
    4cf2:	07 52       	subi	r16, 0x27	; 39
    4cf4:	1f 4f       	sbci	r17, 0xFF	; 255
    4cf6:	ce 01       	movw	r24, r28
    4cf8:	8b 52       	subi	r24, 0x2B	; 43
    4cfa:	9f 4f       	sbci	r25, 0xFF	; 255
    4cfc:	20 e0       	ldi	r18, 0x00	; 0
    4cfe:	30 e0       	ldi	r19, 0x00	; 0
    4d00:	4a e7       	ldi	r20, 0x7A	; 122
    4d02:	55 e4       	ldi	r21, 0x45	; 69
    4d04:	fc 01       	movw	r30, r24
    4d06:	60 81       	ld	r22, Z
    4d08:	71 81       	ldd	r23, Z+1	; 0x01
    4d0a:	82 81       	ldd	r24, Z+2	; 0x02
    4d0c:	93 81       	ldd	r25, Z+3	; 0x03
    4d0e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    4d12:	dc 01       	movw	r26, r24
    4d14:	cb 01       	movw	r24, r22
    4d16:	f8 01       	movw	r30, r16
    4d18:	80 83       	st	Z, r24
    4d1a:	91 83       	std	Z+1, r25	; 0x01
    4d1c:	a2 83       	std	Z+2, r26	; 0x02
    4d1e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4d20:	ce 01       	movw	r24, r28
    4d22:	87 52       	subi	r24, 0x27	; 39
    4d24:	9f 4f       	sbci	r25, 0xFF	; 255
    4d26:	20 e0       	ldi	r18, 0x00	; 0
    4d28:	30 e0       	ldi	r19, 0x00	; 0
    4d2a:	40 e8       	ldi	r20, 0x80	; 128
    4d2c:	5f e3       	ldi	r21, 0x3F	; 63
    4d2e:	fc 01       	movw	r30, r24
    4d30:	60 81       	ld	r22, Z
    4d32:	71 81       	ldd	r23, Z+1	; 0x01
    4d34:	82 81       	ldd	r24, Z+2	; 0x02
    4d36:	93 81       	ldd	r25, Z+3	; 0x03
    4d38:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    4d3c:	88 23       	and	r24, r24
    4d3e:	4c f4       	brge	.+18     	; 0x4d52 <__stack+0x3c53>
		__ticks = 1;
    4d40:	ce 01       	movw	r24, r28
    4d42:	83 52       	subi	r24, 0x23	; 35
    4d44:	9f 4f       	sbci	r25, 0xFF	; 255
    4d46:	21 e0       	ldi	r18, 0x01	; 1
    4d48:	30 e0       	ldi	r19, 0x00	; 0
    4d4a:	fc 01       	movw	r30, r24
    4d4c:	31 83       	std	Z+1, r19	; 0x01
    4d4e:	20 83       	st	Z, r18
    4d50:	6d c0       	rjmp	.+218    	; 0x4e2c <__stack+0x3d2d>
	else if (__tmp > 65535)
    4d52:	ce 01       	movw	r24, r28
    4d54:	87 52       	subi	r24, 0x27	; 39
    4d56:	9f 4f       	sbci	r25, 0xFF	; 255
    4d58:	20 e0       	ldi	r18, 0x00	; 0
    4d5a:	3f ef       	ldi	r19, 0xFF	; 255
    4d5c:	4f e7       	ldi	r20, 0x7F	; 127
    4d5e:	57 e4       	ldi	r21, 0x47	; 71
    4d60:	fc 01       	movw	r30, r24
    4d62:	60 81       	ld	r22, Z
    4d64:	71 81       	ldd	r23, Z+1	; 0x01
    4d66:	82 81       	ldd	r24, Z+2	; 0x02
    4d68:	93 81       	ldd	r25, Z+3	; 0x03
    4d6a:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    4d6e:	18 16       	cp	r1, r24
    4d70:	0c f0       	brlt	.+2      	; 0x4d74 <__stack+0x3c75>
    4d72:	4a c0       	rjmp	.+148    	; 0x4e08 <__stack+0x3d09>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4d74:	ce 01       	movw	r24, r28
    4d76:	8b 52       	subi	r24, 0x2B	; 43
    4d78:	9f 4f       	sbci	r25, 0xFF	; 255
    4d7a:	20 e0       	ldi	r18, 0x00	; 0
    4d7c:	30 e0       	ldi	r19, 0x00	; 0
    4d7e:	40 e2       	ldi	r20, 0x20	; 32
    4d80:	51 e4       	ldi	r21, 0x41	; 65
    4d82:	fc 01       	movw	r30, r24
    4d84:	60 81       	ld	r22, Z
    4d86:	71 81       	ldd	r23, Z+1	; 0x01
    4d88:	82 81       	ldd	r24, Z+2	; 0x02
    4d8a:	93 81       	ldd	r25, Z+3	; 0x03
    4d8c:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    4d90:	dc 01       	movw	r26, r24
    4d92:	cb 01       	movw	r24, r22
    4d94:	8e 01       	movw	r16, r28
    4d96:	03 52       	subi	r16, 0x23	; 35
    4d98:	1f 4f       	sbci	r17, 0xFF	; 255
    4d9a:	bc 01       	movw	r22, r24
    4d9c:	cd 01       	movw	r24, r26
    4d9e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    4da2:	dc 01       	movw	r26, r24
    4da4:	cb 01       	movw	r24, r22
    4da6:	f8 01       	movw	r30, r16
    4da8:	91 83       	std	Z+1, r25	; 0x01
    4daa:	80 83       	st	Z, r24
    4dac:	24 c0       	rjmp	.+72     	; 0x4df6 <__stack+0x3cf7>
    4dae:	ce 01       	movw	r24, r28
    4db0:	81 52       	subi	r24, 0x21	; 33
    4db2:	9f 4f       	sbci	r25, 0xFF	; 255
    4db4:	20 e9       	ldi	r18, 0x90	; 144
    4db6:	31 e0       	ldi	r19, 0x01	; 1
    4db8:	fc 01       	movw	r30, r24
    4dba:	31 83       	std	Z+1, r19	; 0x01
    4dbc:	20 83       	st	Z, r18
    4dbe:	ce 01       	movw	r24, r28
    4dc0:	81 52       	subi	r24, 0x21	; 33
    4dc2:	9f 4f       	sbci	r25, 0xFF	; 255
    4dc4:	fc 01       	movw	r30, r24
    4dc6:	80 81       	ld	r24, Z
    4dc8:	91 81       	ldd	r25, Z+1	; 0x01
    4dca:	01 97       	sbiw	r24, 0x01	; 1
    4dcc:	f1 f7       	brne	.-4      	; 0x4dca <__stack+0x3ccb>
    4dce:	9e 01       	movw	r18, r28
    4dd0:	21 52       	subi	r18, 0x21	; 33
    4dd2:	3f 4f       	sbci	r19, 0xFF	; 255
    4dd4:	f9 01       	movw	r30, r18
    4dd6:	91 83       	std	Z+1, r25	; 0x01
    4dd8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4dda:	ce 01       	movw	r24, r28
    4ddc:	83 52       	subi	r24, 0x23	; 35
    4dde:	9f 4f       	sbci	r25, 0xFF	; 255
    4de0:	9e 01       	movw	r18, r28
    4de2:	23 52       	subi	r18, 0x23	; 35
    4de4:	3f 4f       	sbci	r19, 0xFF	; 255
    4de6:	f9 01       	movw	r30, r18
    4de8:	20 81       	ld	r18, Z
    4dea:	31 81       	ldd	r19, Z+1	; 0x01
    4dec:	21 50       	subi	r18, 0x01	; 1
    4dee:	31 09       	sbc	r19, r1
    4df0:	fc 01       	movw	r30, r24
    4df2:	31 83       	std	Z+1, r19	; 0x01
    4df4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4df6:	ce 01       	movw	r24, r28
    4df8:	83 52       	subi	r24, 0x23	; 35
    4dfa:	9f 4f       	sbci	r25, 0xFF	; 255
    4dfc:	fc 01       	movw	r30, r24
    4dfe:	80 81       	ld	r24, Z
    4e00:	91 81       	ldd	r25, Z+1	; 0x01
    4e02:	89 2b       	or	r24, r25
    4e04:	a1 f6       	brne	.-88     	; 0x4dae <__stack+0x3caf>
    4e06:	2c c0       	rjmp	.+88     	; 0x4e60 <__stack+0x3d61>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4e08:	8e 01       	movw	r16, r28
    4e0a:	03 52       	subi	r16, 0x23	; 35
    4e0c:	1f 4f       	sbci	r17, 0xFF	; 255
    4e0e:	ce 01       	movw	r24, r28
    4e10:	87 52       	subi	r24, 0x27	; 39
    4e12:	9f 4f       	sbci	r25, 0xFF	; 255
    4e14:	fc 01       	movw	r30, r24
    4e16:	60 81       	ld	r22, Z
    4e18:	71 81       	ldd	r23, Z+1	; 0x01
    4e1a:	82 81       	ldd	r24, Z+2	; 0x02
    4e1c:	93 81       	ldd	r25, Z+3	; 0x03
    4e1e:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    4e22:	dc 01       	movw	r26, r24
    4e24:	cb 01       	movw	r24, r22
    4e26:	f8 01       	movw	r30, r16
    4e28:	91 83       	std	Z+1, r25	; 0x01
    4e2a:	80 83       	st	Z, r24
    4e2c:	ce 01       	movw	r24, r28
    4e2e:	8f 51       	subi	r24, 0x1F	; 31
    4e30:	9f 4f       	sbci	r25, 0xFF	; 255
    4e32:	9e 01       	movw	r18, r28
    4e34:	23 52       	subi	r18, 0x23	; 35
    4e36:	3f 4f       	sbci	r19, 0xFF	; 255
    4e38:	f9 01       	movw	r30, r18
    4e3a:	20 81       	ld	r18, Z
    4e3c:	31 81       	ldd	r19, Z+1	; 0x01
    4e3e:	fc 01       	movw	r30, r24
    4e40:	31 83       	std	Z+1, r19	; 0x01
    4e42:	20 83       	st	Z, r18
    4e44:	ce 01       	movw	r24, r28
    4e46:	8f 51       	subi	r24, 0x1F	; 31
    4e48:	9f 4f       	sbci	r25, 0xFF	; 255
    4e4a:	fc 01       	movw	r30, r24
    4e4c:	80 81       	ld	r24, Z
    4e4e:	91 81       	ldd	r25, Z+1	; 0x01
    4e50:	01 97       	sbiw	r24, 0x01	; 1
    4e52:	f1 f7       	brne	.-4      	; 0x4e50 <__stack+0x3d51>
    4e54:	9e 01       	movw	r18, r28
    4e56:	2f 51       	subi	r18, 0x1F	; 31
    4e58:	3f 4f       	sbci	r19, 0xFF	; 255
    4e5a:	f9 01       	movw	r30, r18
    4e5c:	91 83       	std	Z+1, r25	; 0x01
    4e5e:	80 83       	st	Z, r24
			//_delay_ms(150);
			//to_uARM("M2210 F430 T100\n");
			//_delay_ms(150);
		}
		
		if (taster&0x08)
    4e60:	88 85       	ldd	r24, Y+8	; 0x08
    4e62:	88 2f       	mov	r24, r24
    4e64:	90 e0       	ldi	r25, 0x00	; 0
    4e66:	88 70       	andi	r24, 0x08	; 8
    4e68:	99 27       	eor	r25, r25
    4e6a:	89 2b       	or	r24, r25
    4e6c:	09 f4       	brne	.+2      	; 0x4e70 <__stack+0x3d71>
    4e6e:	9e c1       	rjmp	.+828    	; 0x51ac <__stack+0x40ad>
		{
			send_to_uArm("G0 X200 Y0 Z150 F1000\n");			//ausgansgpkt	(200 0 150)
    4e70:	80 ef       	ldi	r24, 0xF0	; 240
    4e72:	92 e0       	ldi	r25, 0x02	; 2
    4e74:	0e 94 ad 01 	call	0x35a	; 0x35a <send_to_uArm>
			while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    4e78:	04 c0       	rjmp	.+8      	; 0x4e82 <__stack+0x3d83>
			{
				to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
    4e7a:	80 e0       	ldi	r24, 0x00	; 0
    4e7c:	91 e0       	ldi	r25, 0x01	; 1
    4e7e:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
		}
		
		if (taster&0x08)
		{
			send_to_uArm("G0 X200 Y0 Z150 F1000\n");			//ausgansgpkt	(200 0 150)
			while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    4e82:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <uart_string1+0x4>
    4e86:	81 33       	cpi	r24, 0x31	; 49
    4e88:	c1 f3       	breq	.-16     	; 0x4e7a <__stack+0x3d7b>
			{
				to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
			}
			//to_uARM("M2210 F2000 T200\n");
			if (DIP_Switch&0x01)
    4e8a:	80 91 7e 03 	lds	r24, 0x037E	; 0x80037e <__data_end>
    4e8e:	88 2f       	mov	r24, r24
    4e90:	90 e0       	ldi	r25, 0x00	; 0
    4e92:	81 70       	andi	r24, 0x01	; 1
    4e94:	99 27       	eor	r25, r25
    4e96:	89 2b       	or	r24, r25
    4e98:	09 f4       	brne	.+2      	; 0x4e9c <__stack+0x3d9d>
    4e9a:	88 c1       	rjmp	.+784    	; 0x51ac <__stack+0x40ad>
			{
				to_uARM("M2210 F500 T200\n");
    4e9c:	8e e5       	ldi	r24, 0x5E	; 94
    4e9e:	91 e0       	ldi	r25, 0x01	; 1
    4ea0:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    4ea4:	9e 01       	movw	r18, r28
    4ea6:	2f 52       	subi	r18, 0x2F	; 47
    4ea8:	3f 4f       	sbci	r19, 0xFF	; 255
    4eaa:	80 e0       	ldi	r24, 0x00	; 0
    4eac:	90 e0       	ldi	r25, 0x00	; 0
    4eae:	a8 e4       	ldi	r26, 0x48	; 72
    4eb0:	b3 e4       	ldi	r27, 0x43	; 67
    4eb2:	f9 01       	movw	r30, r18
    4eb4:	80 83       	st	Z, r24
    4eb6:	91 83       	std	Z+1, r25	; 0x01
    4eb8:	a2 83       	std	Z+2, r26	; 0x02
    4eba:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4ebc:	8e 01       	movw	r16, r28
    4ebe:	01 55       	subi	r16, 0x51	; 81
    4ec0:	1d 4f       	sbci	r17, 0xFD	; 253
    4ec2:	ce 01       	movw	r24, r28
    4ec4:	8f 52       	subi	r24, 0x2F	; 47
    4ec6:	9f 4f       	sbci	r25, 0xFF	; 255
    4ec8:	20 e0       	ldi	r18, 0x00	; 0
    4eca:	30 e0       	ldi	r19, 0x00	; 0
    4ecc:	4a e7       	ldi	r20, 0x7A	; 122
    4ece:	55 e4       	ldi	r21, 0x45	; 69
    4ed0:	fc 01       	movw	r30, r24
    4ed2:	60 81       	ld	r22, Z
    4ed4:	71 81       	ldd	r23, Z+1	; 0x01
    4ed6:	82 81       	ldd	r24, Z+2	; 0x02
    4ed8:	93 81       	ldd	r25, Z+3	; 0x03
    4eda:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    4ede:	dc 01       	movw	r26, r24
    4ee0:	cb 01       	movw	r24, r22
    4ee2:	f8 01       	movw	r30, r16
    4ee4:	80 83       	st	Z, r24
    4ee6:	91 83       	std	Z+1, r25	; 0x01
    4ee8:	a2 83       	std	Z+2, r26	; 0x02
    4eea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4eec:	ce 01       	movw	r24, r28
    4eee:	81 55       	subi	r24, 0x51	; 81
    4ef0:	9d 4f       	sbci	r25, 0xFD	; 253
    4ef2:	20 e0       	ldi	r18, 0x00	; 0
    4ef4:	30 e0       	ldi	r19, 0x00	; 0
    4ef6:	40 e8       	ldi	r20, 0x80	; 128
    4ef8:	5f e3       	ldi	r21, 0x3F	; 63
    4efa:	fc 01       	movw	r30, r24
    4efc:	60 81       	ld	r22, Z
    4efe:	71 81       	ldd	r23, Z+1	; 0x01
    4f00:	82 81       	ldd	r24, Z+2	; 0x02
    4f02:	93 81       	ldd	r25, Z+3	; 0x03
    4f04:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    4f08:	88 23       	and	r24, r24
    4f0a:	4c f4       	brge	.+18     	; 0x4f1e <__stack+0x3e1f>
		__ticks = 1;
    4f0c:	ce 01       	movw	r24, r28
    4f0e:	8d 54       	subi	r24, 0x4D	; 77
    4f10:	9d 4f       	sbci	r25, 0xFD	; 253
    4f12:	21 e0       	ldi	r18, 0x01	; 1
    4f14:	30 e0       	ldi	r19, 0x00	; 0
    4f16:	fc 01       	movw	r30, r24
    4f18:	31 83       	std	Z+1, r19	; 0x01
    4f1a:	20 83       	st	Z, r18
    4f1c:	6d c0       	rjmp	.+218    	; 0x4ff8 <__stack+0x3ef9>
	else if (__tmp > 65535)
    4f1e:	ce 01       	movw	r24, r28
    4f20:	81 55       	subi	r24, 0x51	; 81
    4f22:	9d 4f       	sbci	r25, 0xFD	; 253
    4f24:	20 e0       	ldi	r18, 0x00	; 0
    4f26:	3f ef       	ldi	r19, 0xFF	; 255
    4f28:	4f e7       	ldi	r20, 0x7F	; 127
    4f2a:	57 e4       	ldi	r21, 0x47	; 71
    4f2c:	fc 01       	movw	r30, r24
    4f2e:	60 81       	ld	r22, Z
    4f30:	71 81       	ldd	r23, Z+1	; 0x01
    4f32:	82 81       	ldd	r24, Z+2	; 0x02
    4f34:	93 81       	ldd	r25, Z+3	; 0x03
    4f36:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    4f3a:	18 16       	cp	r1, r24
    4f3c:	0c f0       	brlt	.+2      	; 0x4f40 <__stack+0x3e41>
    4f3e:	4a c0       	rjmp	.+148    	; 0x4fd4 <__stack+0x3ed5>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4f40:	ce 01       	movw	r24, r28
    4f42:	8f 52       	subi	r24, 0x2F	; 47
    4f44:	9f 4f       	sbci	r25, 0xFF	; 255
    4f46:	20 e0       	ldi	r18, 0x00	; 0
    4f48:	30 e0       	ldi	r19, 0x00	; 0
    4f4a:	40 e2       	ldi	r20, 0x20	; 32
    4f4c:	51 e4       	ldi	r21, 0x41	; 65
    4f4e:	fc 01       	movw	r30, r24
    4f50:	60 81       	ld	r22, Z
    4f52:	71 81       	ldd	r23, Z+1	; 0x01
    4f54:	82 81       	ldd	r24, Z+2	; 0x02
    4f56:	93 81       	ldd	r25, Z+3	; 0x03
    4f58:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    4f5c:	dc 01       	movw	r26, r24
    4f5e:	cb 01       	movw	r24, r22
    4f60:	8e 01       	movw	r16, r28
    4f62:	0d 54       	subi	r16, 0x4D	; 77
    4f64:	1d 4f       	sbci	r17, 0xFD	; 253
    4f66:	bc 01       	movw	r22, r24
    4f68:	cd 01       	movw	r24, r26
    4f6a:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    4f6e:	dc 01       	movw	r26, r24
    4f70:	cb 01       	movw	r24, r22
    4f72:	f8 01       	movw	r30, r16
    4f74:	91 83       	std	Z+1, r25	; 0x01
    4f76:	80 83       	st	Z, r24
    4f78:	24 c0       	rjmp	.+72     	; 0x4fc2 <__stack+0x3ec3>
    4f7a:	ce 01       	movw	r24, r28
    4f7c:	8b 54       	subi	r24, 0x4B	; 75
    4f7e:	9d 4f       	sbci	r25, 0xFD	; 253
    4f80:	20 e9       	ldi	r18, 0x90	; 144
    4f82:	31 e0       	ldi	r19, 0x01	; 1
    4f84:	fc 01       	movw	r30, r24
    4f86:	31 83       	std	Z+1, r19	; 0x01
    4f88:	20 83       	st	Z, r18
    4f8a:	ce 01       	movw	r24, r28
    4f8c:	8b 54       	subi	r24, 0x4B	; 75
    4f8e:	9d 4f       	sbci	r25, 0xFD	; 253
    4f90:	fc 01       	movw	r30, r24
    4f92:	80 81       	ld	r24, Z
    4f94:	91 81       	ldd	r25, Z+1	; 0x01
    4f96:	01 97       	sbiw	r24, 0x01	; 1
    4f98:	f1 f7       	brne	.-4      	; 0x4f96 <__stack+0x3e97>
    4f9a:	9e 01       	movw	r18, r28
    4f9c:	2b 54       	subi	r18, 0x4B	; 75
    4f9e:	3d 4f       	sbci	r19, 0xFD	; 253
    4fa0:	f9 01       	movw	r30, r18
    4fa2:	91 83       	std	Z+1, r25	; 0x01
    4fa4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4fa6:	ce 01       	movw	r24, r28
    4fa8:	8d 54       	subi	r24, 0x4D	; 77
    4faa:	9d 4f       	sbci	r25, 0xFD	; 253
    4fac:	9e 01       	movw	r18, r28
    4fae:	2d 54       	subi	r18, 0x4D	; 77
    4fb0:	3d 4f       	sbci	r19, 0xFD	; 253
    4fb2:	f9 01       	movw	r30, r18
    4fb4:	20 81       	ld	r18, Z
    4fb6:	31 81       	ldd	r19, Z+1	; 0x01
    4fb8:	21 50       	subi	r18, 0x01	; 1
    4fba:	31 09       	sbc	r19, r1
    4fbc:	fc 01       	movw	r30, r24
    4fbe:	31 83       	std	Z+1, r19	; 0x01
    4fc0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4fc2:	ce 01       	movw	r24, r28
    4fc4:	8d 54       	subi	r24, 0x4D	; 77
    4fc6:	9d 4f       	sbci	r25, 0xFD	; 253
    4fc8:	fc 01       	movw	r30, r24
    4fca:	80 81       	ld	r24, Z
    4fcc:	91 81       	ldd	r25, Z+1	; 0x01
    4fce:	89 2b       	or	r24, r25
    4fd0:	a1 f6       	brne	.-88     	; 0x4f7a <__stack+0x3e7b>
    4fd2:	2c c0       	rjmp	.+88     	; 0x502c <__stack+0x3f2d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4fd4:	8e 01       	movw	r16, r28
    4fd6:	0d 54       	subi	r16, 0x4D	; 77
    4fd8:	1d 4f       	sbci	r17, 0xFD	; 253
    4fda:	ce 01       	movw	r24, r28
    4fdc:	81 55       	subi	r24, 0x51	; 81
    4fde:	9d 4f       	sbci	r25, 0xFD	; 253
    4fe0:	fc 01       	movw	r30, r24
    4fe2:	60 81       	ld	r22, Z
    4fe4:	71 81       	ldd	r23, Z+1	; 0x01
    4fe6:	82 81       	ldd	r24, Z+2	; 0x02
    4fe8:	93 81       	ldd	r25, Z+3	; 0x03
    4fea:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    4fee:	dc 01       	movw	r26, r24
    4ff0:	cb 01       	movw	r24, r22
    4ff2:	f8 01       	movw	r30, r16
    4ff4:	91 83       	std	Z+1, r25	; 0x01
    4ff6:	80 83       	st	Z, r24
    4ff8:	ce 01       	movw	r24, r28
    4ffa:	89 54       	subi	r24, 0x49	; 73
    4ffc:	9d 4f       	sbci	r25, 0xFD	; 253
    4ffe:	9e 01       	movw	r18, r28
    5000:	2d 54       	subi	r18, 0x4D	; 77
    5002:	3d 4f       	sbci	r19, 0xFD	; 253
    5004:	f9 01       	movw	r30, r18
    5006:	20 81       	ld	r18, Z
    5008:	31 81       	ldd	r19, Z+1	; 0x01
    500a:	fc 01       	movw	r30, r24
    500c:	31 83       	std	Z+1, r19	; 0x01
    500e:	20 83       	st	Z, r18
    5010:	ce 01       	movw	r24, r28
    5012:	89 54       	subi	r24, 0x49	; 73
    5014:	9d 4f       	sbci	r25, 0xFD	; 253
    5016:	fc 01       	movw	r30, r24
    5018:	80 81       	ld	r24, Z
    501a:	91 81       	ldd	r25, Z+1	; 0x01
    501c:	01 97       	sbiw	r24, 0x01	; 1
    501e:	f1 f7       	brne	.-4      	; 0x501c <__stack+0x3f1d>
    5020:	9e 01       	movw	r18, r28
    5022:	29 54       	subi	r18, 0x49	; 73
    5024:	3d 4f       	sbci	r19, 0xFD	; 253
    5026:	f9 01       	movw	r30, r18
    5028:	91 83       	std	Z+1, r25	; 0x01
    502a:	80 83       	st	Z, r24
				_delay_ms(200);
				to_uARM("M2210 F1000 T500\n");
    502c:	8f e6       	ldi	r24, 0x6F	; 111
    502e:	91 e0       	ldi	r25, 0x01	; 1
    5030:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    5034:	80 e0       	ldi	r24, 0x00	; 0
    5036:	90 e0       	ldi	r25, 0x00	; 0
    5038:	aa ef       	ldi	r26, 0xFA	; 250
    503a:	b3 e4       	ldi	r27, 0x43	; 67
    503c:	89 87       	std	Y+9, r24	; 0x09
    503e:	9a 87       	std	Y+10, r25	; 0x0a
    5040:	ab 87       	std	Y+11, r26	; 0x0b
    5042:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    5044:	8e 01       	movw	r16, r28
    5046:	0b 55       	subi	r16, 0x5B	; 91
    5048:	1d 4f       	sbci	r17, 0xFD	; 253
    504a:	20 e0       	ldi	r18, 0x00	; 0
    504c:	30 e0       	ldi	r19, 0x00	; 0
    504e:	4a e7       	ldi	r20, 0x7A	; 122
    5050:	55 e4       	ldi	r21, 0x45	; 69
    5052:	69 85       	ldd	r22, Y+9	; 0x09
    5054:	7a 85       	ldd	r23, Y+10	; 0x0a
    5056:	8b 85       	ldd	r24, Y+11	; 0x0b
    5058:	9c 85       	ldd	r25, Y+12	; 0x0c
    505a:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    505e:	dc 01       	movw	r26, r24
    5060:	cb 01       	movw	r24, r22
    5062:	f8 01       	movw	r30, r16
    5064:	80 83       	st	Z, r24
    5066:	91 83       	std	Z+1, r25	; 0x01
    5068:	a2 83       	std	Z+2, r26	; 0x02
    506a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    506c:	ce 01       	movw	r24, r28
    506e:	8b 55       	subi	r24, 0x5B	; 91
    5070:	9d 4f       	sbci	r25, 0xFD	; 253
    5072:	20 e0       	ldi	r18, 0x00	; 0
    5074:	30 e0       	ldi	r19, 0x00	; 0
    5076:	40 e8       	ldi	r20, 0x80	; 128
    5078:	5f e3       	ldi	r21, 0x3F	; 63
    507a:	fc 01       	movw	r30, r24
    507c:	60 81       	ld	r22, Z
    507e:	71 81       	ldd	r23, Z+1	; 0x01
    5080:	82 81       	ldd	r24, Z+2	; 0x02
    5082:	93 81       	ldd	r25, Z+3	; 0x03
    5084:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    5088:	88 23       	and	r24, r24
    508a:	4c f4       	brge	.+18     	; 0x509e <__stack+0x3f9f>
		__ticks = 1;
    508c:	ce 01       	movw	r24, r28
    508e:	87 55       	subi	r24, 0x57	; 87
    5090:	9d 4f       	sbci	r25, 0xFD	; 253
    5092:	21 e0       	ldi	r18, 0x01	; 1
    5094:	30 e0       	ldi	r19, 0x00	; 0
    5096:	fc 01       	movw	r30, r24
    5098:	31 83       	std	Z+1, r19	; 0x01
    509a:	20 83       	st	Z, r18
    509c:	69 c0       	rjmp	.+210    	; 0x5170 <__stack+0x4071>
	else if (__tmp > 65535)
    509e:	ce 01       	movw	r24, r28
    50a0:	8b 55       	subi	r24, 0x5B	; 91
    50a2:	9d 4f       	sbci	r25, 0xFD	; 253
    50a4:	20 e0       	ldi	r18, 0x00	; 0
    50a6:	3f ef       	ldi	r19, 0xFF	; 255
    50a8:	4f e7       	ldi	r20, 0x7F	; 127
    50aa:	57 e4       	ldi	r21, 0x47	; 71
    50ac:	fc 01       	movw	r30, r24
    50ae:	60 81       	ld	r22, Z
    50b0:	71 81       	ldd	r23, Z+1	; 0x01
    50b2:	82 81       	ldd	r24, Z+2	; 0x02
    50b4:	93 81       	ldd	r25, Z+3	; 0x03
    50b6:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    50ba:	18 16       	cp	r1, r24
    50bc:	0c f0       	brlt	.+2      	; 0x50c0 <__stack+0x3fc1>
    50be:	46 c0       	rjmp	.+140    	; 0x514c <__stack+0x404d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    50c0:	20 e0       	ldi	r18, 0x00	; 0
    50c2:	30 e0       	ldi	r19, 0x00	; 0
    50c4:	40 e2       	ldi	r20, 0x20	; 32
    50c6:	51 e4       	ldi	r21, 0x41	; 65
    50c8:	69 85       	ldd	r22, Y+9	; 0x09
    50ca:	7a 85       	ldd	r23, Y+10	; 0x0a
    50cc:	8b 85       	ldd	r24, Y+11	; 0x0b
    50ce:	9c 85       	ldd	r25, Y+12	; 0x0c
    50d0:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    50d4:	dc 01       	movw	r26, r24
    50d6:	cb 01       	movw	r24, r22
    50d8:	8e 01       	movw	r16, r28
    50da:	07 55       	subi	r16, 0x57	; 87
    50dc:	1d 4f       	sbci	r17, 0xFD	; 253
    50de:	bc 01       	movw	r22, r24
    50e0:	cd 01       	movw	r24, r26
    50e2:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    50e6:	dc 01       	movw	r26, r24
    50e8:	cb 01       	movw	r24, r22
    50ea:	f8 01       	movw	r30, r16
    50ec:	91 83       	std	Z+1, r25	; 0x01
    50ee:	80 83       	st	Z, r24
    50f0:	24 c0       	rjmp	.+72     	; 0x513a <__stack+0x403b>
    50f2:	ce 01       	movw	r24, r28
    50f4:	85 55       	subi	r24, 0x55	; 85
    50f6:	9d 4f       	sbci	r25, 0xFD	; 253
    50f8:	20 e9       	ldi	r18, 0x90	; 144
    50fa:	31 e0       	ldi	r19, 0x01	; 1
    50fc:	fc 01       	movw	r30, r24
    50fe:	31 83       	std	Z+1, r19	; 0x01
    5100:	20 83       	st	Z, r18
    5102:	ce 01       	movw	r24, r28
    5104:	85 55       	subi	r24, 0x55	; 85
    5106:	9d 4f       	sbci	r25, 0xFD	; 253
    5108:	fc 01       	movw	r30, r24
    510a:	80 81       	ld	r24, Z
    510c:	91 81       	ldd	r25, Z+1	; 0x01
    510e:	01 97       	sbiw	r24, 0x01	; 1
    5110:	f1 f7       	brne	.-4      	; 0x510e <__stack+0x400f>
    5112:	9e 01       	movw	r18, r28
    5114:	25 55       	subi	r18, 0x55	; 85
    5116:	3d 4f       	sbci	r19, 0xFD	; 253
    5118:	f9 01       	movw	r30, r18
    511a:	91 83       	std	Z+1, r25	; 0x01
    511c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    511e:	ce 01       	movw	r24, r28
    5120:	87 55       	subi	r24, 0x57	; 87
    5122:	9d 4f       	sbci	r25, 0xFD	; 253
    5124:	9e 01       	movw	r18, r28
    5126:	27 55       	subi	r18, 0x57	; 87
    5128:	3d 4f       	sbci	r19, 0xFD	; 253
    512a:	f9 01       	movw	r30, r18
    512c:	20 81       	ld	r18, Z
    512e:	31 81       	ldd	r19, Z+1	; 0x01
    5130:	21 50       	subi	r18, 0x01	; 1
    5132:	31 09       	sbc	r19, r1
    5134:	fc 01       	movw	r30, r24
    5136:	31 83       	std	Z+1, r19	; 0x01
    5138:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    513a:	ce 01       	movw	r24, r28
    513c:	87 55       	subi	r24, 0x57	; 87
    513e:	9d 4f       	sbci	r25, 0xFD	; 253
    5140:	fc 01       	movw	r30, r24
    5142:	80 81       	ld	r24, Z
    5144:	91 81       	ldd	r25, Z+1	; 0x01
    5146:	89 2b       	or	r24, r25
    5148:	a1 f6       	brne	.-88     	; 0x50f2 <__stack+0x3ff3>
    514a:	2c c0       	rjmp	.+88     	; 0x51a4 <__stack+0x40a5>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    514c:	8e 01       	movw	r16, r28
    514e:	07 55       	subi	r16, 0x57	; 87
    5150:	1d 4f       	sbci	r17, 0xFD	; 253
    5152:	ce 01       	movw	r24, r28
    5154:	8b 55       	subi	r24, 0x5B	; 91
    5156:	9d 4f       	sbci	r25, 0xFD	; 253
    5158:	fc 01       	movw	r30, r24
    515a:	60 81       	ld	r22, Z
    515c:	71 81       	ldd	r23, Z+1	; 0x01
    515e:	82 81       	ldd	r24, Z+2	; 0x02
    5160:	93 81       	ldd	r25, Z+3	; 0x03
    5162:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    5166:	dc 01       	movw	r26, r24
    5168:	cb 01       	movw	r24, r22
    516a:	f8 01       	movw	r30, r16
    516c:	91 83       	std	Z+1, r25	; 0x01
    516e:	80 83       	st	Z, r24
    5170:	ce 01       	movw	r24, r28
    5172:	83 55       	subi	r24, 0x53	; 83
    5174:	9d 4f       	sbci	r25, 0xFD	; 253
    5176:	9e 01       	movw	r18, r28
    5178:	27 55       	subi	r18, 0x57	; 87
    517a:	3d 4f       	sbci	r19, 0xFD	; 253
    517c:	f9 01       	movw	r30, r18
    517e:	20 81       	ld	r18, Z
    5180:	31 81       	ldd	r19, Z+1	; 0x01
    5182:	fc 01       	movw	r30, r24
    5184:	31 83       	std	Z+1, r19	; 0x01
    5186:	20 83       	st	Z, r18
    5188:	ce 01       	movw	r24, r28
    518a:	83 55       	subi	r24, 0x53	; 83
    518c:	9d 4f       	sbci	r25, 0xFD	; 253
    518e:	fc 01       	movw	r30, r24
    5190:	80 81       	ld	r24, Z
    5192:	91 81       	ldd	r25, Z+1	; 0x01
    5194:	01 97       	sbiw	r24, 0x01	; 1
    5196:	f1 f7       	brne	.-4      	; 0x5194 <__stack+0x4095>
    5198:	9e 01       	movw	r18, r28
    519a:	23 55       	subi	r18, 0x53	; 83
    519c:	3d 4f       	sbci	r19, 0xFD	; 253
    519e:	f9 01       	movw	r30, r18
    51a0:	91 83       	std	Z+1, r25	; 0x01
    51a2:	80 83       	st	Z, r24
				_delay_ms(500);
				to_uARM("M2210 F2000 T500\n");
    51a4:	81 e8       	ldi	r24, 0x81	; 129
    51a6:	91 e0       	ldi	r25, 0x01	; 1
    51a8:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
			}
		}
		if (uart_str_complete!=0)
    51ac:	80 91 7f 03 	lds	r24, 0x037F	; 0x80037f <uart_str_complete>
    51b0:	88 23       	and	r24, r24
    51b2:	11 f4       	brne	.+4      	; 0x51b8 <__stack+0x40b9>
    51b4:	0c 94 b8 03 	jmp	0x770	; 0x770 <main+0x54>
		{
			routine_done=0;
    51b8:	1f 82       	std	Y+7, r1	; 0x07
			PORTB|=0x01;
    51ba:	85 e2       	ldi	r24, 0x25	; 37
    51bc:	90 e0       	ldi	r25, 0x00	; 0
    51be:	25 e2       	ldi	r18, 0x25	; 37
    51c0:	30 e0       	ldi	r19, 0x00	; 0
    51c2:	f9 01       	movw	r30, r18
    51c4:	20 81       	ld	r18, Z
    51c6:	21 60       	ori	r18, 0x01	; 1
    51c8:	fc 01       	movw	r30, r24
    51ca:	20 83       	st	Z, r18
			uart_str_complete=0;
    51cc:	10 92 7f 03 	sts	0x037F, r1	; 0x80037f <uart_str_complete>
			send_Byte_0('1');
    51d0:	81 e3       	ldi	r24, 0x31	; 49
    51d2:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
			//_delay_ms(100);	
			for (counter=0;counter<=data_bytes_recieved;counter++)
    51d6:	1e 82       	std	Y+6, r1	; 0x06
    51d8:	53 c2       	rjmp	.+1190   	; 0x5680 <__stack+0x4581>
			{
				switch (final_data[counter])//final data decoding
    51da:	8e 81       	ldd	r24, Y+6	; 0x06
    51dc:	88 2f       	mov	r24, r24
    51de:	90 e0       	ldi	r25, 0x00	; 0
    51e0:	8c 5e       	subi	r24, 0xEC	; 236
    51e2:	9b 4f       	sbci	r25, 0xFB	; 251
    51e4:	fc 01       	movw	r30, r24
    51e6:	80 81       	ld	r24, Z
    51e8:	88 2f       	mov	r24, r24
    51ea:	90 e0       	ldi	r25, 0x00	; 0
    51ec:	88 35       	cpi	r24, 0x58	; 88
    51ee:	91 05       	cpc	r25, r1
    51f0:	49 f0       	breq	.+18     	; 0x5204 <__stack+0x4105>
    51f2:	89 35       	cpi	r24, 0x59	; 89
    51f4:	91 05       	cpc	r25, r1
    51f6:	09 f4       	brne	.+2      	; 0x51fa <__stack+0x40fb>
    51f8:	20 c1       	rjmp	.+576    	; 0x543a <__stack+0x433b>
    51fa:	8f 34       	cpi	r24, 0x4F	; 79
    51fc:	91 05       	cpc	r25, r1
    51fe:	09 f4       	brne	.+2      	; 0x5202 <__stack+0x4103>
    5200:	37 c2       	rjmp	.+1134   	; 0x5670 <__stack+0x4571>
    5202:	3b c2       	rjmp	.+1142   	; 0x567a <__stack+0x457b>
				{
					case 'X':
						recieved_Y=(final_data[counter+1]-48)*1000+(final_data[counter+2]-48)*100+(final_data[counter+3]-48)*10+final_data[counter+4]-48;
    5204:	8e 81       	ldd	r24, Y+6	; 0x06
    5206:	88 2f       	mov	r24, r24
    5208:	90 e0       	ldi	r25, 0x00	; 0
    520a:	01 96       	adiw	r24, 0x01	; 1
    520c:	8c 5e       	subi	r24, 0xEC	; 236
    520e:	9b 4f       	sbci	r25, 0xFB	; 251
    5210:	fc 01       	movw	r30, r24
    5212:	80 81       	ld	r24, Z
    5214:	88 2f       	mov	r24, r24
    5216:	90 e0       	ldi	r25, 0x00	; 0
    5218:	ac 01       	movw	r20, r24
    521a:	40 53       	subi	r20, 0x30	; 48
    521c:	51 09       	sbc	r21, r1
    521e:	88 ee       	ldi	r24, 0xE8	; 232
    5220:	93 e0       	ldi	r25, 0x03	; 3
    5222:	48 9f       	mul	r20, r24
    5224:	90 01       	movw	r18, r0
    5226:	49 9f       	mul	r20, r25
    5228:	30 0d       	add	r19, r0
    522a:	58 9f       	mul	r21, r24
    522c:	30 0d       	add	r19, r0
    522e:	11 24       	eor	r1, r1
    5230:	8e 81       	ldd	r24, Y+6	; 0x06
    5232:	88 2f       	mov	r24, r24
    5234:	90 e0       	ldi	r25, 0x00	; 0
    5236:	02 96       	adiw	r24, 0x02	; 2
    5238:	8c 5e       	subi	r24, 0xEC	; 236
    523a:	9b 4f       	sbci	r25, 0xFB	; 251
    523c:	fc 01       	movw	r30, r24
    523e:	80 81       	ld	r24, Z
    5240:	88 2f       	mov	r24, r24
    5242:	90 e0       	ldi	r25, 0x00	; 0
    5244:	ac 01       	movw	r20, r24
    5246:	40 53       	subi	r20, 0x30	; 48
    5248:	51 09       	sbc	r21, r1
    524a:	64 e6       	ldi	r22, 0x64	; 100
    524c:	64 9f       	mul	r22, r20
    524e:	c0 01       	movw	r24, r0
    5250:	65 9f       	mul	r22, r21
    5252:	90 0d       	add	r25, r0
    5254:	11 24       	eor	r1, r1
    5256:	28 0f       	add	r18, r24
    5258:	39 1f       	adc	r19, r25
    525a:	8e 81       	ldd	r24, Y+6	; 0x06
    525c:	88 2f       	mov	r24, r24
    525e:	90 e0       	ldi	r25, 0x00	; 0
    5260:	03 96       	adiw	r24, 0x03	; 3
    5262:	8c 5e       	subi	r24, 0xEC	; 236
    5264:	9b 4f       	sbci	r25, 0xFB	; 251
    5266:	fc 01       	movw	r30, r24
    5268:	80 81       	ld	r24, Z
    526a:	88 2f       	mov	r24, r24
    526c:	90 e0       	ldi	r25, 0x00	; 0
    526e:	c0 97       	sbiw	r24, 0x30	; 48
    5270:	88 0f       	add	r24, r24
    5272:	99 1f       	adc	r25, r25
    5274:	ac 01       	movw	r20, r24
    5276:	44 0f       	add	r20, r20
    5278:	55 1f       	adc	r21, r21
    527a:	44 0f       	add	r20, r20
    527c:	55 1f       	adc	r21, r21
    527e:	84 0f       	add	r24, r20
    5280:	95 1f       	adc	r25, r21
    5282:	28 0f       	add	r18, r24
    5284:	39 1f       	adc	r19, r25
    5286:	8e 81       	ldd	r24, Y+6	; 0x06
    5288:	88 2f       	mov	r24, r24
    528a:	90 e0       	ldi	r25, 0x00	; 0
    528c:	04 96       	adiw	r24, 0x04	; 4
    528e:	8c 5e       	subi	r24, 0xEC	; 236
    5290:	9b 4f       	sbci	r25, 0xFB	; 251
    5292:	fc 01       	movw	r30, r24
    5294:	80 81       	ld	r24, Z
    5296:	88 2f       	mov	r24, r24
    5298:	90 e0       	ldi	r25, 0x00	; 0
    529a:	82 0f       	add	r24, r18
    529c:	93 1f       	adc	r25, r19
    529e:	c0 97       	sbiw	r24, 0x30	; 48
    52a0:	9c 83       	std	Y+4, r25	; 0x04
    52a2:	8b 83       	std	Y+3, r24	; 0x03
						send_Byte_0('1');
    52a4:	81 e3       	ldi	r24, 0x31	; 49
    52a6:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
    52aa:	9e 01       	movw	r18, r28
    52ac:	23 53       	subi	r18, 0x33	; 51
    52ae:	3f 4f       	sbci	r19, 0xFF	; 255
    52b0:	80 e0       	ldi	r24, 0x00	; 0
    52b2:	90 e0       	ldi	r25, 0x00	; 0
    52b4:	a8 ec       	ldi	r26, 0xC8	; 200
    52b6:	b2 e4       	ldi	r27, 0x42	; 66
    52b8:	f9 01       	movw	r30, r18
    52ba:	80 83       	st	Z, r24
    52bc:	91 83       	std	Z+1, r25	; 0x01
    52be:	a2 83       	std	Z+2, r26	; 0x02
    52c0:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    52c2:	8e 01       	movw	r16, r28
    52c4:	07 54       	subi	r16, 0x47	; 71
    52c6:	1d 4f       	sbci	r17, 0xFD	; 253
    52c8:	ce 01       	movw	r24, r28
    52ca:	83 53       	subi	r24, 0x33	; 51
    52cc:	9f 4f       	sbci	r25, 0xFF	; 255
    52ce:	20 e0       	ldi	r18, 0x00	; 0
    52d0:	30 e0       	ldi	r19, 0x00	; 0
    52d2:	4a e7       	ldi	r20, 0x7A	; 122
    52d4:	55 e4       	ldi	r21, 0x45	; 69
    52d6:	fc 01       	movw	r30, r24
    52d8:	60 81       	ld	r22, Z
    52da:	71 81       	ldd	r23, Z+1	; 0x01
    52dc:	82 81       	ldd	r24, Z+2	; 0x02
    52de:	93 81       	ldd	r25, Z+3	; 0x03
    52e0:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    52e4:	dc 01       	movw	r26, r24
    52e6:	cb 01       	movw	r24, r22
    52e8:	f8 01       	movw	r30, r16
    52ea:	80 83       	st	Z, r24
    52ec:	91 83       	std	Z+1, r25	; 0x01
    52ee:	a2 83       	std	Z+2, r26	; 0x02
    52f0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    52f2:	ce 01       	movw	r24, r28
    52f4:	87 54       	subi	r24, 0x47	; 71
    52f6:	9d 4f       	sbci	r25, 0xFD	; 253
    52f8:	20 e0       	ldi	r18, 0x00	; 0
    52fa:	30 e0       	ldi	r19, 0x00	; 0
    52fc:	40 e8       	ldi	r20, 0x80	; 128
    52fe:	5f e3       	ldi	r21, 0x3F	; 63
    5300:	fc 01       	movw	r30, r24
    5302:	60 81       	ld	r22, Z
    5304:	71 81       	ldd	r23, Z+1	; 0x01
    5306:	82 81       	ldd	r24, Z+2	; 0x02
    5308:	93 81       	ldd	r25, Z+3	; 0x03
    530a:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    530e:	88 23       	and	r24, r24
    5310:	4c f4       	brge	.+18     	; 0x5324 <__stack+0x4225>
		__ticks = 1;
    5312:	ce 01       	movw	r24, r28
    5314:	83 54       	subi	r24, 0x43	; 67
    5316:	9d 4f       	sbci	r25, 0xFD	; 253
    5318:	21 e0       	ldi	r18, 0x01	; 1
    531a:	30 e0       	ldi	r19, 0x00	; 0
    531c:	fc 01       	movw	r30, r24
    531e:	31 83       	std	Z+1, r19	; 0x01
    5320:	20 83       	st	Z, r18
    5322:	6d c0       	rjmp	.+218    	; 0x53fe <__stack+0x42ff>
	else if (__tmp > 65535)
    5324:	ce 01       	movw	r24, r28
    5326:	87 54       	subi	r24, 0x47	; 71
    5328:	9d 4f       	sbci	r25, 0xFD	; 253
    532a:	20 e0       	ldi	r18, 0x00	; 0
    532c:	3f ef       	ldi	r19, 0xFF	; 255
    532e:	4f e7       	ldi	r20, 0x7F	; 127
    5330:	57 e4       	ldi	r21, 0x47	; 71
    5332:	fc 01       	movw	r30, r24
    5334:	60 81       	ld	r22, Z
    5336:	71 81       	ldd	r23, Z+1	; 0x01
    5338:	82 81       	ldd	r24, Z+2	; 0x02
    533a:	93 81       	ldd	r25, Z+3	; 0x03
    533c:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    5340:	18 16       	cp	r1, r24
    5342:	0c f0       	brlt	.+2      	; 0x5346 <__stack+0x4247>
    5344:	4a c0       	rjmp	.+148    	; 0x53da <__stack+0x42db>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5346:	ce 01       	movw	r24, r28
    5348:	83 53       	subi	r24, 0x33	; 51
    534a:	9f 4f       	sbci	r25, 0xFF	; 255
    534c:	20 e0       	ldi	r18, 0x00	; 0
    534e:	30 e0       	ldi	r19, 0x00	; 0
    5350:	40 e2       	ldi	r20, 0x20	; 32
    5352:	51 e4       	ldi	r21, 0x41	; 65
    5354:	fc 01       	movw	r30, r24
    5356:	60 81       	ld	r22, Z
    5358:	71 81       	ldd	r23, Z+1	; 0x01
    535a:	82 81       	ldd	r24, Z+2	; 0x02
    535c:	93 81       	ldd	r25, Z+3	; 0x03
    535e:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    5362:	dc 01       	movw	r26, r24
    5364:	cb 01       	movw	r24, r22
    5366:	8e 01       	movw	r16, r28
    5368:	03 54       	subi	r16, 0x43	; 67
    536a:	1d 4f       	sbci	r17, 0xFD	; 253
    536c:	bc 01       	movw	r22, r24
    536e:	cd 01       	movw	r24, r26
    5370:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    5374:	dc 01       	movw	r26, r24
    5376:	cb 01       	movw	r24, r22
    5378:	f8 01       	movw	r30, r16
    537a:	91 83       	std	Z+1, r25	; 0x01
    537c:	80 83       	st	Z, r24
    537e:	24 c0       	rjmp	.+72     	; 0x53c8 <__stack+0x42c9>
    5380:	ce 01       	movw	r24, r28
    5382:	81 54       	subi	r24, 0x41	; 65
    5384:	9d 4f       	sbci	r25, 0xFD	; 253
    5386:	20 e9       	ldi	r18, 0x90	; 144
    5388:	31 e0       	ldi	r19, 0x01	; 1
    538a:	fc 01       	movw	r30, r24
    538c:	31 83       	std	Z+1, r19	; 0x01
    538e:	20 83       	st	Z, r18
    5390:	ce 01       	movw	r24, r28
    5392:	81 54       	subi	r24, 0x41	; 65
    5394:	9d 4f       	sbci	r25, 0xFD	; 253
    5396:	fc 01       	movw	r30, r24
    5398:	80 81       	ld	r24, Z
    539a:	91 81       	ldd	r25, Z+1	; 0x01
    539c:	01 97       	sbiw	r24, 0x01	; 1
    539e:	f1 f7       	brne	.-4      	; 0x539c <__stack+0x429d>
    53a0:	9e 01       	movw	r18, r28
    53a2:	21 54       	subi	r18, 0x41	; 65
    53a4:	3d 4f       	sbci	r19, 0xFD	; 253
    53a6:	f9 01       	movw	r30, r18
    53a8:	91 83       	std	Z+1, r25	; 0x01
    53aa:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    53ac:	ce 01       	movw	r24, r28
    53ae:	83 54       	subi	r24, 0x43	; 67
    53b0:	9d 4f       	sbci	r25, 0xFD	; 253
    53b2:	9e 01       	movw	r18, r28
    53b4:	23 54       	subi	r18, 0x43	; 67
    53b6:	3d 4f       	sbci	r19, 0xFD	; 253
    53b8:	f9 01       	movw	r30, r18
    53ba:	20 81       	ld	r18, Z
    53bc:	31 81       	ldd	r19, Z+1	; 0x01
    53be:	21 50       	subi	r18, 0x01	; 1
    53c0:	31 09       	sbc	r19, r1
    53c2:	fc 01       	movw	r30, r24
    53c4:	31 83       	std	Z+1, r19	; 0x01
    53c6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    53c8:	ce 01       	movw	r24, r28
    53ca:	83 54       	subi	r24, 0x43	; 67
    53cc:	9d 4f       	sbci	r25, 0xFD	; 253
    53ce:	fc 01       	movw	r30, r24
    53d0:	80 81       	ld	r24, Z
    53d2:	91 81       	ldd	r25, Z+1	; 0x01
    53d4:	89 2b       	or	r24, r25
    53d6:	a1 f6       	brne	.-88     	; 0x5380 <__stack+0x4281>
    53d8:	2c c0       	rjmp	.+88     	; 0x5432 <__stack+0x4333>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    53da:	8e 01       	movw	r16, r28
    53dc:	03 54       	subi	r16, 0x43	; 67
    53de:	1d 4f       	sbci	r17, 0xFD	; 253
    53e0:	ce 01       	movw	r24, r28
    53e2:	87 54       	subi	r24, 0x47	; 71
    53e4:	9d 4f       	sbci	r25, 0xFD	; 253
    53e6:	fc 01       	movw	r30, r24
    53e8:	60 81       	ld	r22, Z
    53ea:	71 81       	ldd	r23, Z+1	; 0x01
    53ec:	82 81       	ldd	r24, Z+2	; 0x02
    53ee:	93 81       	ldd	r25, Z+3	; 0x03
    53f0:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    53f4:	dc 01       	movw	r26, r24
    53f6:	cb 01       	movw	r24, r22
    53f8:	f8 01       	movw	r30, r16
    53fa:	91 83       	std	Z+1, r25	; 0x01
    53fc:	80 83       	st	Z, r24
    53fe:	ce 01       	movw	r24, r28
    5400:	8f 53       	subi	r24, 0x3F	; 63
    5402:	9d 4f       	sbci	r25, 0xFD	; 253
    5404:	9e 01       	movw	r18, r28
    5406:	23 54       	subi	r18, 0x43	; 67
    5408:	3d 4f       	sbci	r19, 0xFD	; 253
    540a:	f9 01       	movw	r30, r18
    540c:	20 81       	ld	r18, Z
    540e:	31 81       	ldd	r19, Z+1	; 0x01
    5410:	fc 01       	movw	r30, r24
    5412:	31 83       	std	Z+1, r19	; 0x01
    5414:	20 83       	st	Z, r18
    5416:	ce 01       	movw	r24, r28
    5418:	8f 53       	subi	r24, 0x3F	; 63
    541a:	9d 4f       	sbci	r25, 0xFD	; 253
    541c:	fc 01       	movw	r30, r24
    541e:	80 81       	ld	r24, Z
    5420:	91 81       	ldd	r25, Z+1	; 0x01
    5422:	01 97       	sbiw	r24, 0x01	; 1
    5424:	f1 f7       	brne	.-4      	; 0x5422 <__stack+0x4323>
    5426:	9e 01       	movw	r18, r28
    5428:	2f 53       	subi	r18, 0x3F	; 63
    542a:	3d 4f       	sbci	r19, 0xFD	; 253
    542c:	f9 01       	movw	r30, r18
    542e:	91 83       	std	Z+1, r25	; 0x01
    5430:	80 83       	st	Z, r24
						_delay_ms(100);
						check++;
    5432:	8d 81       	ldd	r24, Y+5	; 0x05
    5434:	8f 5f       	subi	r24, 0xFF	; 255
    5436:	8d 83       	std	Y+5, r24	; 0x05
					break;
    5438:	20 c1       	rjmp	.+576    	; 0x567a <__stack+0x457b>
				
					case 'Y':
						recieved_X=(final_data[counter+1]-48)*1000+(final_data[counter+2]-48)*100+(final_data[counter+3]-48)*10+final_data[counter+4]-48;
    543a:	8e 81       	ldd	r24, Y+6	; 0x06
    543c:	88 2f       	mov	r24, r24
    543e:	90 e0       	ldi	r25, 0x00	; 0
    5440:	01 96       	adiw	r24, 0x01	; 1
    5442:	8c 5e       	subi	r24, 0xEC	; 236
    5444:	9b 4f       	sbci	r25, 0xFB	; 251
    5446:	fc 01       	movw	r30, r24
    5448:	80 81       	ld	r24, Z
    544a:	88 2f       	mov	r24, r24
    544c:	90 e0       	ldi	r25, 0x00	; 0
    544e:	ac 01       	movw	r20, r24
    5450:	40 53       	subi	r20, 0x30	; 48
    5452:	51 09       	sbc	r21, r1
    5454:	88 ee       	ldi	r24, 0xE8	; 232
    5456:	93 e0       	ldi	r25, 0x03	; 3
    5458:	48 9f       	mul	r20, r24
    545a:	90 01       	movw	r18, r0
    545c:	49 9f       	mul	r20, r25
    545e:	30 0d       	add	r19, r0
    5460:	58 9f       	mul	r21, r24
    5462:	30 0d       	add	r19, r0
    5464:	11 24       	eor	r1, r1
    5466:	8e 81       	ldd	r24, Y+6	; 0x06
    5468:	88 2f       	mov	r24, r24
    546a:	90 e0       	ldi	r25, 0x00	; 0
    546c:	02 96       	adiw	r24, 0x02	; 2
    546e:	8c 5e       	subi	r24, 0xEC	; 236
    5470:	9b 4f       	sbci	r25, 0xFB	; 251
    5472:	fc 01       	movw	r30, r24
    5474:	80 81       	ld	r24, Z
    5476:	88 2f       	mov	r24, r24
    5478:	90 e0       	ldi	r25, 0x00	; 0
    547a:	ac 01       	movw	r20, r24
    547c:	40 53       	subi	r20, 0x30	; 48
    547e:	51 09       	sbc	r21, r1
    5480:	64 e6       	ldi	r22, 0x64	; 100
    5482:	64 9f       	mul	r22, r20
    5484:	c0 01       	movw	r24, r0
    5486:	65 9f       	mul	r22, r21
    5488:	90 0d       	add	r25, r0
    548a:	11 24       	eor	r1, r1
    548c:	28 0f       	add	r18, r24
    548e:	39 1f       	adc	r19, r25
    5490:	8e 81       	ldd	r24, Y+6	; 0x06
    5492:	88 2f       	mov	r24, r24
    5494:	90 e0       	ldi	r25, 0x00	; 0
    5496:	03 96       	adiw	r24, 0x03	; 3
    5498:	8c 5e       	subi	r24, 0xEC	; 236
    549a:	9b 4f       	sbci	r25, 0xFB	; 251
    549c:	fc 01       	movw	r30, r24
    549e:	80 81       	ld	r24, Z
    54a0:	88 2f       	mov	r24, r24
    54a2:	90 e0       	ldi	r25, 0x00	; 0
    54a4:	c0 97       	sbiw	r24, 0x30	; 48
    54a6:	88 0f       	add	r24, r24
    54a8:	99 1f       	adc	r25, r25
    54aa:	ac 01       	movw	r20, r24
    54ac:	44 0f       	add	r20, r20
    54ae:	55 1f       	adc	r21, r21
    54b0:	44 0f       	add	r20, r20
    54b2:	55 1f       	adc	r21, r21
    54b4:	84 0f       	add	r24, r20
    54b6:	95 1f       	adc	r25, r21
    54b8:	28 0f       	add	r18, r24
    54ba:	39 1f       	adc	r19, r25
    54bc:	8e 81       	ldd	r24, Y+6	; 0x06
    54be:	88 2f       	mov	r24, r24
    54c0:	90 e0       	ldi	r25, 0x00	; 0
    54c2:	04 96       	adiw	r24, 0x04	; 4
    54c4:	8c 5e       	subi	r24, 0xEC	; 236
    54c6:	9b 4f       	sbci	r25, 0xFB	; 251
    54c8:	fc 01       	movw	r30, r24
    54ca:	80 81       	ld	r24, Z
    54cc:	88 2f       	mov	r24, r24
    54ce:	90 e0       	ldi	r25, 0x00	; 0
    54d0:	82 0f       	add	r24, r18
    54d2:	93 1f       	adc	r25, r19
    54d4:	c0 97       	sbiw	r24, 0x30	; 48
    54d6:	9a 83       	std	Y+2, r25	; 0x02
    54d8:	89 83       	std	Y+1, r24	; 0x01
						send_Byte_0('1');
    54da:	81 e3       	ldi	r24, 0x31	; 49
    54dc:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
    54e0:	9e 01       	movw	r18, r28
    54e2:	2f 53       	subi	r18, 0x3F	; 63
    54e4:	3f 4f       	sbci	r19, 0xFF	; 255
    54e6:	80 e0       	ldi	r24, 0x00	; 0
    54e8:	90 e0       	ldi	r25, 0x00	; 0
    54ea:	a8 ec       	ldi	r26, 0xC8	; 200
    54ec:	b2 e4       	ldi	r27, 0x42	; 66
    54ee:	f9 01       	movw	r30, r18
    54f0:	80 83       	st	Z, r24
    54f2:	91 83       	std	Z+1, r25	; 0x01
    54f4:	a2 83       	std	Z+2, r26	; 0x02
    54f6:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    54f8:	8e 01       	movw	r16, r28
    54fa:	0d 53       	subi	r16, 0x3D	; 61
    54fc:	1d 4f       	sbci	r17, 0xFD	; 253
    54fe:	ce 01       	movw	r24, r28
    5500:	8f 53       	subi	r24, 0x3F	; 63
    5502:	9f 4f       	sbci	r25, 0xFF	; 255
    5504:	20 e0       	ldi	r18, 0x00	; 0
    5506:	30 e0       	ldi	r19, 0x00	; 0
    5508:	4a e7       	ldi	r20, 0x7A	; 122
    550a:	55 e4       	ldi	r21, 0x45	; 69
    550c:	fc 01       	movw	r30, r24
    550e:	60 81       	ld	r22, Z
    5510:	71 81       	ldd	r23, Z+1	; 0x01
    5512:	82 81       	ldd	r24, Z+2	; 0x02
    5514:	93 81       	ldd	r25, Z+3	; 0x03
    5516:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    551a:	dc 01       	movw	r26, r24
    551c:	cb 01       	movw	r24, r22
    551e:	f8 01       	movw	r30, r16
    5520:	80 83       	st	Z, r24
    5522:	91 83       	std	Z+1, r25	; 0x01
    5524:	a2 83       	std	Z+2, r26	; 0x02
    5526:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5528:	ce 01       	movw	r24, r28
    552a:	8d 53       	subi	r24, 0x3D	; 61
    552c:	9d 4f       	sbci	r25, 0xFD	; 253
    552e:	20 e0       	ldi	r18, 0x00	; 0
    5530:	30 e0       	ldi	r19, 0x00	; 0
    5532:	40 e8       	ldi	r20, 0x80	; 128
    5534:	5f e3       	ldi	r21, 0x3F	; 63
    5536:	fc 01       	movw	r30, r24
    5538:	60 81       	ld	r22, Z
    553a:	71 81       	ldd	r23, Z+1	; 0x01
    553c:	82 81       	ldd	r24, Z+2	; 0x02
    553e:	93 81       	ldd	r25, Z+3	; 0x03
    5540:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    5544:	88 23       	and	r24, r24
    5546:	4c f4       	brge	.+18     	; 0x555a <__stack+0x445b>
		__ticks = 1;
    5548:	ce 01       	movw	r24, r28
    554a:	89 53       	subi	r24, 0x39	; 57
    554c:	9d 4f       	sbci	r25, 0xFD	; 253
    554e:	21 e0       	ldi	r18, 0x01	; 1
    5550:	30 e0       	ldi	r19, 0x00	; 0
    5552:	fc 01       	movw	r30, r24
    5554:	31 83       	std	Z+1, r19	; 0x01
    5556:	20 83       	st	Z, r18
    5558:	6d c0       	rjmp	.+218    	; 0x5634 <__stack+0x4535>
	else if (__tmp > 65535)
    555a:	ce 01       	movw	r24, r28
    555c:	8d 53       	subi	r24, 0x3D	; 61
    555e:	9d 4f       	sbci	r25, 0xFD	; 253
    5560:	20 e0       	ldi	r18, 0x00	; 0
    5562:	3f ef       	ldi	r19, 0xFF	; 255
    5564:	4f e7       	ldi	r20, 0x7F	; 127
    5566:	57 e4       	ldi	r21, 0x47	; 71
    5568:	fc 01       	movw	r30, r24
    556a:	60 81       	ld	r22, Z
    556c:	71 81       	ldd	r23, Z+1	; 0x01
    556e:	82 81       	ldd	r24, Z+2	; 0x02
    5570:	93 81       	ldd	r25, Z+3	; 0x03
    5572:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    5576:	18 16       	cp	r1, r24
    5578:	0c f0       	brlt	.+2      	; 0x557c <__stack+0x447d>
    557a:	4a c0       	rjmp	.+148    	; 0x5610 <__stack+0x4511>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    557c:	ce 01       	movw	r24, r28
    557e:	8f 53       	subi	r24, 0x3F	; 63
    5580:	9f 4f       	sbci	r25, 0xFF	; 255
    5582:	20 e0       	ldi	r18, 0x00	; 0
    5584:	30 e0       	ldi	r19, 0x00	; 0
    5586:	40 e2       	ldi	r20, 0x20	; 32
    5588:	51 e4       	ldi	r21, 0x41	; 65
    558a:	fc 01       	movw	r30, r24
    558c:	60 81       	ld	r22, Z
    558e:	71 81       	ldd	r23, Z+1	; 0x01
    5590:	82 81       	ldd	r24, Z+2	; 0x02
    5592:	93 81       	ldd	r25, Z+3	; 0x03
    5594:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    5598:	dc 01       	movw	r26, r24
    559a:	cb 01       	movw	r24, r22
    559c:	8e 01       	movw	r16, r28
    559e:	09 53       	subi	r16, 0x39	; 57
    55a0:	1d 4f       	sbci	r17, 0xFD	; 253
    55a2:	bc 01       	movw	r22, r24
    55a4:	cd 01       	movw	r24, r26
    55a6:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    55aa:	dc 01       	movw	r26, r24
    55ac:	cb 01       	movw	r24, r22
    55ae:	f8 01       	movw	r30, r16
    55b0:	91 83       	std	Z+1, r25	; 0x01
    55b2:	80 83       	st	Z, r24
    55b4:	24 c0       	rjmp	.+72     	; 0x55fe <__stack+0x44ff>
    55b6:	ce 01       	movw	r24, r28
    55b8:	87 53       	subi	r24, 0x37	; 55
    55ba:	9d 4f       	sbci	r25, 0xFD	; 253
    55bc:	20 e9       	ldi	r18, 0x90	; 144
    55be:	31 e0       	ldi	r19, 0x01	; 1
    55c0:	fc 01       	movw	r30, r24
    55c2:	31 83       	std	Z+1, r19	; 0x01
    55c4:	20 83       	st	Z, r18
    55c6:	ce 01       	movw	r24, r28
    55c8:	87 53       	subi	r24, 0x37	; 55
    55ca:	9d 4f       	sbci	r25, 0xFD	; 253
    55cc:	fc 01       	movw	r30, r24
    55ce:	80 81       	ld	r24, Z
    55d0:	91 81       	ldd	r25, Z+1	; 0x01
    55d2:	01 97       	sbiw	r24, 0x01	; 1
    55d4:	f1 f7       	brne	.-4      	; 0x55d2 <__stack+0x44d3>
    55d6:	9e 01       	movw	r18, r28
    55d8:	27 53       	subi	r18, 0x37	; 55
    55da:	3d 4f       	sbci	r19, 0xFD	; 253
    55dc:	f9 01       	movw	r30, r18
    55de:	91 83       	std	Z+1, r25	; 0x01
    55e0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    55e2:	ce 01       	movw	r24, r28
    55e4:	89 53       	subi	r24, 0x39	; 57
    55e6:	9d 4f       	sbci	r25, 0xFD	; 253
    55e8:	9e 01       	movw	r18, r28
    55ea:	29 53       	subi	r18, 0x39	; 57
    55ec:	3d 4f       	sbci	r19, 0xFD	; 253
    55ee:	f9 01       	movw	r30, r18
    55f0:	20 81       	ld	r18, Z
    55f2:	31 81       	ldd	r19, Z+1	; 0x01
    55f4:	21 50       	subi	r18, 0x01	; 1
    55f6:	31 09       	sbc	r19, r1
    55f8:	fc 01       	movw	r30, r24
    55fa:	31 83       	std	Z+1, r19	; 0x01
    55fc:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    55fe:	ce 01       	movw	r24, r28
    5600:	89 53       	subi	r24, 0x39	; 57
    5602:	9d 4f       	sbci	r25, 0xFD	; 253
    5604:	fc 01       	movw	r30, r24
    5606:	80 81       	ld	r24, Z
    5608:	91 81       	ldd	r25, Z+1	; 0x01
    560a:	89 2b       	or	r24, r25
    560c:	a1 f6       	brne	.-88     	; 0x55b6 <__stack+0x44b7>
    560e:	2c c0       	rjmp	.+88     	; 0x5668 <__stack+0x4569>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5610:	8e 01       	movw	r16, r28
    5612:	09 53       	subi	r16, 0x39	; 57
    5614:	1d 4f       	sbci	r17, 0xFD	; 253
    5616:	ce 01       	movw	r24, r28
    5618:	8d 53       	subi	r24, 0x3D	; 61
    561a:	9d 4f       	sbci	r25, 0xFD	; 253
    561c:	fc 01       	movw	r30, r24
    561e:	60 81       	ld	r22, Z
    5620:	71 81       	ldd	r23, Z+1	; 0x01
    5622:	82 81       	ldd	r24, Z+2	; 0x02
    5624:	93 81       	ldd	r25, Z+3	; 0x03
    5626:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    562a:	dc 01       	movw	r26, r24
    562c:	cb 01       	movw	r24, r22
    562e:	f8 01       	movw	r30, r16
    5630:	91 83       	std	Z+1, r25	; 0x01
    5632:	80 83       	st	Z, r24
    5634:	ce 01       	movw	r24, r28
    5636:	85 53       	subi	r24, 0x35	; 53
    5638:	9d 4f       	sbci	r25, 0xFD	; 253
    563a:	9e 01       	movw	r18, r28
    563c:	29 53       	subi	r18, 0x39	; 57
    563e:	3d 4f       	sbci	r19, 0xFD	; 253
    5640:	f9 01       	movw	r30, r18
    5642:	20 81       	ld	r18, Z
    5644:	31 81       	ldd	r19, Z+1	; 0x01
    5646:	fc 01       	movw	r30, r24
    5648:	31 83       	std	Z+1, r19	; 0x01
    564a:	20 83       	st	Z, r18
    564c:	ce 01       	movw	r24, r28
    564e:	85 53       	subi	r24, 0x35	; 53
    5650:	9d 4f       	sbci	r25, 0xFD	; 253
    5652:	fc 01       	movw	r30, r24
    5654:	80 81       	ld	r24, Z
    5656:	91 81       	ldd	r25, Z+1	; 0x01
    5658:	01 97       	sbiw	r24, 0x01	; 1
    565a:	f1 f7       	brne	.-4      	; 0x5658 <__stack+0x4559>
    565c:	9e 01       	movw	r18, r28
    565e:	25 53       	subi	r18, 0x35	; 53
    5660:	3d 4f       	sbci	r19, 0xFD	; 253
    5662:	f9 01       	movw	r30, r18
    5664:	91 83       	std	Z+1, r25	; 0x01
    5666:	80 83       	st	Z, r24
						_delay_ms(100);
						check++;
    5668:	8d 81       	ldd	r24, Y+5	; 0x05
    566a:	8f 5f       	subi	r24, 0xFF	; 255
    566c:	8d 83       	std	Y+5, r24	; 0x05
					break;
    566e:	05 c0       	rjmp	.+10     	; 0x567a <__stack+0x457b>
						
					case 'O':
					routine_done=1;
    5670:	81 e0       	ldi	r24, 0x01	; 1
    5672:	8f 83       	std	Y+7, r24	; 0x07
					check++;	
    5674:	8d 81       	ldd	r24, Y+5	; 0x05
    5676:	8f 5f       	subi	r24, 0xFF	; 255
    5678:	8d 83       	std	Y+5, r24	; 0x05
			routine_done=0;
			PORTB|=0x01;
			uart_str_complete=0;
			send_Byte_0('1');
			//_delay_ms(100);	
			for (counter=0;counter<=data_bytes_recieved;counter++)
    567a:	8e 81       	ldd	r24, Y+6	; 0x06
    567c:	8f 5f       	subi	r24, 0xFF	; 255
    567e:	8e 83       	std	Y+6, r24	; 0x06
    5680:	80 91 81 03 	lds	r24, 0x0381	; 0x800381 <data_bytes_recieved>
    5684:	9e 81       	ldd	r25, Y+6	; 0x06
    5686:	89 17       	cp	r24, r25
    5688:	08 f0       	brcs	.+2      	; 0x568c <__stack+0x458d>
    568a:	a7 cd       	rjmp	.-1202   	; 0x51da <__stack+0x40db>
					case 'O':
					routine_done=1;
					check++;	
				}
			}
			data_bytes_recieved=0;
    568c:	10 92 81 03 	sts	0x0381, r1	; 0x800381 <data_bytes_recieved>
			if ((check==0)||(check>2))
    5690:	8d 81       	ldd	r24, Y+5	; 0x05
    5692:	88 23       	and	r24, r24
    5694:	19 f0       	breq	.+6      	; 0x569c <__stack+0x459d>
    5696:	8d 81       	ldd	r24, Y+5	; 0x05
    5698:	83 30       	cpi	r24, 0x03	; 3
    569a:	20 f0       	brcs	.+8      	; 0x56a4 <__stack+0x45a5>
			{
				send_Byte_0('0');
    569c:	80 e3       	ldi	r24, 0x30	; 48
    569e:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
    56a2:	01 c0       	rjmp	.+2      	; 0x56a6 <__stack+0x45a7>
			}
			else
			{
				check=0;
    56a4:	1d 82       	std	Y+5, r1	; 0x05
			}
			if (routine_done>=1)
    56a6:	8f 81       	ldd	r24, Y+7	; 0x07
    56a8:	88 23       	and	r24, r24
    56aa:	09 f4       	brne	.+2      	; 0x56ae <__stack+0x45af>
    56ac:	b6 c1       	rjmp	.+876    	; 0x5a1a <__stack+0x491b>
			{
				send_to_uArm("G0 X200 Y0 Z150 F1000\n");
    56ae:	80 ef       	ldi	r24, 0xF0	; 240
    56b0:	92 e0       	ldi	r25, 0x02	; 2
    56b2:	0e 94 ad 01 	call	0x35a	; 0x35a <send_to_uArm>
				routine_done=0;
    56b6:	1f 82       	std	Y+7, r1	; 0x07
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    56b8:	04 c0       	rjmp	.+8      	; 0x56c2 <__stack+0x45c3>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
    56ba:	80 e0       	ldi	r24, 0x00	; 0
    56bc:	91 e0       	ldi	r25, 0x01	; 1
    56be:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
			}
			if (routine_done>=1)
			{
				send_to_uArm("G0 X200 Y0 Z150 F1000\n");
				routine_done=0;
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    56c2:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <uart_string1+0x4>
    56c6:	81 33       	cpi	r24, 0x31	; 49
    56c8:	c1 f3       	breq	.-16     	; 0x56ba <__stack+0x45bb>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
				}
				if (DIP_Switch&0x01)
    56ca:	80 91 7e 03 	lds	r24, 0x037E	; 0x80037e <__data_end>
    56ce:	88 2f       	mov	r24, r24
    56d0:	90 e0       	ldi	r25, 0x00	; 0
    56d2:	81 70       	andi	r24, 0x01	; 1
    56d4:	99 27       	eor	r25, r25
    56d6:	89 2b       	or	r24, r25
    56d8:	09 f4       	brne	.+2      	; 0x56dc <__stack+0x45dd>
    56da:	94 c1       	rjmp	.+808    	; 0x5a04 <__stack+0x4905>
				{
					to_uARM("M2210 F500 T200\n");
    56dc:	8e e5       	ldi	r24, 0x5E	; 94
    56de:	91 e0       	ldi	r25, 0x01	; 1
    56e0:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    56e4:	9e 01       	movw	r18, r28
    56e6:	27 53       	subi	r18, 0x37	; 55
    56e8:	3f 4f       	sbci	r19, 0xFF	; 255
    56ea:	80 e0       	ldi	r24, 0x00	; 0
    56ec:	90 e0       	ldi	r25, 0x00	; 0
    56ee:	a8 e4       	ldi	r26, 0x48	; 72
    56f0:	b3 e4       	ldi	r27, 0x43	; 67
    56f2:	f9 01       	movw	r30, r18
    56f4:	80 83       	st	Z, r24
    56f6:	91 83       	std	Z+1, r25	; 0x01
    56f8:	a2 83       	std	Z+2, r26	; 0x02
    56fa:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    56fc:	8e 01       	movw	r16, r28
    56fe:	09 52       	subi	r16, 0x29	; 41
    5700:	1d 4f       	sbci	r17, 0xFD	; 253
    5702:	ce 01       	movw	r24, r28
    5704:	87 53       	subi	r24, 0x37	; 55
    5706:	9f 4f       	sbci	r25, 0xFF	; 255
    5708:	20 e0       	ldi	r18, 0x00	; 0
    570a:	30 e0       	ldi	r19, 0x00	; 0
    570c:	4a e7       	ldi	r20, 0x7A	; 122
    570e:	55 e4       	ldi	r21, 0x45	; 69
    5710:	fc 01       	movw	r30, r24
    5712:	60 81       	ld	r22, Z
    5714:	71 81       	ldd	r23, Z+1	; 0x01
    5716:	82 81       	ldd	r24, Z+2	; 0x02
    5718:	93 81       	ldd	r25, Z+3	; 0x03
    571a:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    571e:	dc 01       	movw	r26, r24
    5720:	cb 01       	movw	r24, r22
    5722:	f8 01       	movw	r30, r16
    5724:	80 83       	st	Z, r24
    5726:	91 83       	std	Z+1, r25	; 0x01
    5728:	a2 83       	std	Z+2, r26	; 0x02
    572a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    572c:	ce 01       	movw	r24, r28
    572e:	89 52       	subi	r24, 0x29	; 41
    5730:	9d 4f       	sbci	r25, 0xFD	; 253
    5732:	20 e0       	ldi	r18, 0x00	; 0
    5734:	30 e0       	ldi	r19, 0x00	; 0
    5736:	40 e8       	ldi	r20, 0x80	; 128
    5738:	5f e3       	ldi	r21, 0x3F	; 63
    573a:	fc 01       	movw	r30, r24
    573c:	60 81       	ld	r22, Z
    573e:	71 81       	ldd	r23, Z+1	; 0x01
    5740:	82 81       	ldd	r24, Z+2	; 0x02
    5742:	93 81       	ldd	r25, Z+3	; 0x03
    5744:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    5748:	88 23       	and	r24, r24
    574a:	4c f4       	brge	.+18     	; 0x575e <__stack+0x465f>
		__ticks = 1;
    574c:	ce 01       	movw	r24, r28
    574e:	85 52       	subi	r24, 0x25	; 37
    5750:	9d 4f       	sbci	r25, 0xFD	; 253
    5752:	21 e0       	ldi	r18, 0x01	; 1
    5754:	30 e0       	ldi	r19, 0x00	; 0
    5756:	fc 01       	movw	r30, r24
    5758:	31 83       	std	Z+1, r19	; 0x01
    575a:	20 83       	st	Z, r18
    575c:	6d c0       	rjmp	.+218    	; 0x5838 <__stack+0x4739>
	else if (__tmp > 65535)
    575e:	ce 01       	movw	r24, r28
    5760:	89 52       	subi	r24, 0x29	; 41
    5762:	9d 4f       	sbci	r25, 0xFD	; 253
    5764:	20 e0       	ldi	r18, 0x00	; 0
    5766:	3f ef       	ldi	r19, 0xFF	; 255
    5768:	4f e7       	ldi	r20, 0x7F	; 127
    576a:	57 e4       	ldi	r21, 0x47	; 71
    576c:	fc 01       	movw	r30, r24
    576e:	60 81       	ld	r22, Z
    5770:	71 81       	ldd	r23, Z+1	; 0x01
    5772:	82 81       	ldd	r24, Z+2	; 0x02
    5774:	93 81       	ldd	r25, Z+3	; 0x03
    5776:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    577a:	18 16       	cp	r1, r24
    577c:	0c f0       	brlt	.+2      	; 0x5780 <__stack+0x4681>
    577e:	4a c0       	rjmp	.+148    	; 0x5814 <__stack+0x4715>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5780:	ce 01       	movw	r24, r28
    5782:	87 53       	subi	r24, 0x37	; 55
    5784:	9f 4f       	sbci	r25, 0xFF	; 255
    5786:	20 e0       	ldi	r18, 0x00	; 0
    5788:	30 e0       	ldi	r19, 0x00	; 0
    578a:	40 e2       	ldi	r20, 0x20	; 32
    578c:	51 e4       	ldi	r21, 0x41	; 65
    578e:	fc 01       	movw	r30, r24
    5790:	60 81       	ld	r22, Z
    5792:	71 81       	ldd	r23, Z+1	; 0x01
    5794:	82 81       	ldd	r24, Z+2	; 0x02
    5796:	93 81       	ldd	r25, Z+3	; 0x03
    5798:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    579c:	dc 01       	movw	r26, r24
    579e:	cb 01       	movw	r24, r22
    57a0:	8e 01       	movw	r16, r28
    57a2:	05 52       	subi	r16, 0x25	; 37
    57a4:	1d 4f       	sbci	r17, 0xFD	; 253
    57a6:	bc 01       	movw	r22, r24
    57a8:	cd 01       	movw	r24, r26
    57aa:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    57ae:	dc 01       	movw	r26, r24
    57b0:	cb 01       	movw	r24, r22
    57b2:	f8 01       	movw	r30, r16
    57b4:	91 83       	std	Z+1, r25	; 0x01
    57b6:	80 83       	st	Z, r24
    57b8:	24 c0       	rjmp	.+72     	; 0x5802 <__stack+0x4703>
    57ba:	ce 01       	movw	r24, r28
    57bc:	83 52       	subi	r24, 0x23	; 35
    57be:	9d 4f       	sbci	r25, 0xFD	; 253
    57c0:	20 e9       	ldi	r18, 0x90	; 144
    57c2:	31 e0       	ldi	r19, 0x01	; 1
    57c4:	fc 01       	movw	r30, r24
    57c6:	31 83       	std	Z+1, r19	; 0x01
    57c8:	20 83       	st	Z, r18
    57ca:	ce 01       	movw	r24, r28
    57cc:	83 52       	subi	r24, 0x23	; 35
    57ce:	9d 4f       	sbci	r25, 0xFD	; 253
    57d0:	fc 01       	movw	r30, r24
    57d2:	80 81       	ld	r24, Z
    57d4:	91 81       	ldd	r25, Z+1	; 0x01
    57d6:	01 97       	sbiw	r24, 0x01	; 1
    57d8:	f1 f7       	brne	.-4      	; 0x57d6 <__stack+0x46d7>
    57da:	9e 01       	movw	r18, r28
    57dc:	23 52       	subi	r18, 0x23	; 35
    57de:	3d 4f       	sbci	r19, 0xFD	; 253
    57e0:	f9 01       	movw	r30, r18
    57e2:	91 83       	std	Z+1, r25	; 0x01
    57e4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    57e6:	ce 01       	movw	r24, r28
    57e8:	85 52       	subi	r24, 0x25	; 37
    57ea:	9d 4f       	sbci	r25, 0xFD	; 253
    57ec:	9e 01       	movw	r18, r28
    57ee:	25 52       	subi	r18, 0x25	; 37
    57f0:	3d 4f       	sbci	r19, 0xFD	; 253
    57f2:	f9 01       	movw	r30, r18
    57f4:	20 81       	ld	r18, Z
    57f6:	31 81       	ldd	r19, Z+1	; 0x01
    57f8:	21 50       	subi	r18, 0x01	; 1
    57fa:	31 09       	sbc	r19, r1
    57fc:	fc 01       	movw	r30, r24
    57fe:	31 83       	std	Z+1, r19	; 0x01
    5800:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5802:	ce 01       	movw	r24, r28
    5804:	85 52       	subi	r24, 0x25	; 37
    5806:	9d 4f       	sbci	r25, 0xFD	; 253
    5808:	fc 01       	movw	r30, r24
    580a:	80 81       	ld	r24, Z
    580c:	91 81       	ldd	r25, Z+1	; 0x01
    580e:	89 2b       	or	r24, r25
    5810:	a1 f6       	brne	.-88     	; 0x57ba <__stack+0x46bb>
    5812:	2c c0       	rjmp	.+88     	; 0x586c <__stack+0x476d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5814:	8e 01       	movw	r16, r28
    5816:	05 52       	subi	r16, 0x25	; 37
    5818:	1d 4f       	sbci	r17, 0xFD	; 253
    581a:	ce 01       	movw	r24, r28
    581c:	89 52       	subi	r24, 0x29	; 41
    581e:	9d 4f       	sbci	r25, 0xFD	; 253
    5820:	fc 01       	movw	r30, r24
    5822:	60 81       	ld	r22, Z
    5824:	71 81       	ldd	r23, Z+1	; 0x01
    5826:	82 81       	ldd	r24, Z+2	; 0x02
    5828:	93 81       	ldd	r25, Z+3	; 0x03
    582a:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    582e:	dc 01       	movw	r26, r24
    5830:	cb 01       	movw	r24, r22
    5832:	f8 01       	movw	r30, r16
    5834:	91 83       	std	Z+1, r25	; 0x01
    5836:	80 83       	st	Z, r24
    5838:	ce 01       	movw	r24, r28
    583a:	81 52       	subi	r24, 0x21	; 33
    583c:	9d 4f       	sbci	r25, 0xFD	; 253
    583e:	9e 01       	movw	r18, r28
    5840:	25 52       	subi	r18, 0x25	; 37
    5842:	3d 4f       	sbci	r19, 0xFD	; 253
    5844:	f9 01       	movw	r30, r18
    5846:	20 81       	ld	r18, Z
    5848:	31 81       	ldd	r19, Z+1	; 0x01
    584a:	fc 01       	movw	r30, r24
    584c:	31 83       	std	Z+1, r19	; 0x01
    584e:	20 83       	st	Z, r18
    5850:	ce 01       	movw	r24, r28
    5852:	81 52       	subi	r24, 0x21	; 33
    5854:	9d 4f       	sbci	r25, 0xFD	; 253
    5856:	fc 01       	movw	r30, r24
    5858:	80 81       	ld	r24, Z
    585a:	91 81       	ldd	r25, Z+1	; 0x01
    585c:	01 97       	sbiw	r24, 0x01	; 1
    585e:	f1 f7       	brne	.-4      	; 0x585c <__stack+0x475d>
    5860:	9e 01       	movw	r18, r28
    5862:	21 52       	subi	r18, 0x21	; 33
    5864:	3d 4f       	sbci	r19, 0xFD	; 253
    5866:	f9 01       	movw	r30, r18
    5868:	91 83       	std	Z+1, r25	; 0x01
    586a:	80 83       	st	Z, r24
					_delay_ms(200);
					to_uARM("M2210 F1000 T500\n");
    586c:	8f e6       	ldi	r24, 0x6F	; 111
    586e:	91 e0       	ldi	r25, 0x01	; 1
    5870:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    5874:	9e 01       	movw	r18, r28
    5876:	2b 53       	subi	r18, 0x3B	; 59
    5878:	3f 4f       	sbci	r19, 0xFF	; 255
    587a:	80 e0       	ldi	r24, 0x00	; 0
    587c:	90 e0       	ldi	r25, 0x00	; 0
    587e:	aa ef       	ldi	r26, 0xFA	; 250
    5880:	b3 e4       	ldi	r27, 0x43	; 67
    5882:	f9 01       	movw	r30, r18
    5884:	80 83       	st	Z, r24
    5886:	91 83       	std	Z+1, r25	; 0x01
    5888:	a2 83       	std	Z+2, r26	; 0x02
    588a:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    588c:	8e 01       	movw	r16, r28
    588e:	03 53       	subi	r16, 0x33	; 51
    5890:	1d 4f       	sbci	r17, 0xFD	; 253
    5892:	ce 01       	movw	r24, r28
    5894:	8b 53       	subi	r24, 0x3B	; 59
    5896:	9f 4f       	sbci	r25, 0xFF	; 255
    5898:	20 e0       	ldi	r18, 0x00	; 0
    589a:	30 e0       	ldi	r19, 0x00	; 0
    589c:	4a e7       	ldi	r20, 0x7A	; 122
    589e:	55 e4       	ldi	r21, 0x45	; 69
    58a0:	fc 01       	movw	r30, r24
    58a2:	60 81       	ld	r22, Z
    58a4:	71 81       	ldd	r23, Z+1	; 0x01
    58a6:	82 81       	ldd	r24, Z+2	; 0x02
    58a8:	93 81       	ldd	r25, Z+3	; 0x03
    58aa:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    58ae:	dc 01       	movw	r26, r24
    58b0:	cb 01       	movw	r24, r22
    58b2:	f8 01       	movw	r30, r16
    58b4:	80 83       	st	Z, r24
    58b6:	91 83       	std	Z+1, r25	; 0x01
    58b8:	a2 83       	std	Z+2, r26	; 0x02
    58ba:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    58bc:	ce 01       	movw	r24, r28
    58be:	83 53       	subi	r24, 0x33	; 51
    58c0:	9d 4f       	sbci	r25, 0xFD	; 253
    58c2:	20 e0       	ldi	r18, 0x00	; 0
    58c4:	30 e0       	ldi	r19, 0x00	; 0
    58c6:	40 e8       	ldi	r20, 0x80	; 128
    58c8:	5f e3       	ldi	r21, 0x3F	; 63
    58ca:	fc 01       	movw	r30, r24
    58cc:	60 81       	ld	r22, Z
    58ce:	71 81       	ldd	r23, Z+1	; 0x01
    58d0:	82 81       	ldd	r24, Z+2	; 0x02
    58d2:	93 81       	ldd	r25, Z+3	; 0x03
    58d4:	0e 94 06 31 	call	0x620c	; 0x620c <__cmpsf2>
    58d8:	88 23       	and	r24, r24
    58da:	4c f4       	brge	.+18     	; 0x58ee <__stack+0x47ef>
		__ticks = 1;
    58dc:	ce 01       	movw	r24, r28
    58de:	8f 52       	subi	r24, 0x2F	; 47
    58e0:	9d 4f       	sbci	r25, 0xFD	; 253
    58e2:	21 e0       	ldi	r18, 0x01	; 1
    58e4:	30 e0       	ldi	r19, 0x00	; 0
    58e6:	fc 01       	movw	r30, r24
    58e8:	31 83       	std	Z+1, r19	; 0x01
    58ea:	20 83       	st	Z, r18
    58ec:	6d c0       	rjmp	.+218    	; 0x59c8 <__stack+0x48c9>
	else if (__tmp > 65535)
    58ee:	ce 01       	movw	r24, r28
    58f0:	83 53       	subi	r24, 0x33	; 51
    58f2:	9d 4f       	sbci	r25, 0xFD	; 253
    58f4:	20 e0       	ldi	r18, 0x00	; 0
    58f6:	3f ef       	ldi	r19, 0xFF	; 255
    58f8:	4f e7       	ldi	r20, 0x7F	; 127
    58fa:	57 e4       	ldi	r21, 0x47	; 71
    58fc:	fc 01       	movw	r30, r24
    58fe:	60 81       	ld	r22, Z
    5900:	71 81       	ldd	r23, Z+1	; 0x01
    5902:	82 81       	ldd	r24, Z+2	; 0x02
    5904:	93 81       	ldd	r25, Z+3	; 0x03
    5906:	0e 94 87 31 	call	0x630e	; 0x630e <__gesf2>
    590a:	18 16       	cp	r1, r24
    590c:	0c f0       	brlt	.+2      	; 0x5910 <__stack+0x4811>
    590e:	4a c0       	rjmp	.+148    	; 0x59a4 <__stack+0x48a5>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5910:	ce 01       	movw	r24, r28
    5912:	8b 53       	subi	r24, 0x3B	; 59
    5914:	9f 4f       	sbci	r25, 0xFF	; 255
    5916:	20 e0       	ldi	r18, 0x00	; 0
    5918:	30 e0       	ldi	r19, 0x00	; 0
    591a:	40 e2       	ldi	r20, 0x20	; 32
    591c:	51 e4       	ldi	r21, 0x41	; 65
    591e:	fc 01       	movw	r30, r24
    5920:	60 81       	ld	r22, Z
    5922:	71 81       	ldd	r23, Z+1	; 0x01
    5924:	82 81       	ldd	r24, Z+2	; 0x02
    5926:	93 81       	ldd	r25, Z+3	; 0x03
    5928:	0e 94 8c 31 	call	0x6318	; 0x6318 <__mulsf3>
    592c:	dc 01       	movw	r26, r24
    592e:	cb 01       	movw	r24, r22
    5930:	8e 01       	movw	r16, r28
    5932:	0f 52       	subi	r16, 0x2F	; 47
    5934:	1d 4f       	sbci	r17, 0xFD	; 253
    5936:	bc 01       	movw	r22, r24
    5938:	cd 01       	movw	r24, r26
    593a:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    593e:	dc 01       	movw	r26, r24
    5940:	cb 01       	movw	r24, r22
    5942:	f8 01       	movw	r30, r16
    5944:	91 83       	std	Z+1, r25	; 0x01
    5946:	80 83       	st	Z, r24
    5948:	24 c0       	rjmp	.+72     	; 0x5992 <__stack+0x4893>
    594a:	ce 01       	movw	r24, r28
    594c:	8d 52       	subi	r24, 0x2D	; 45
    594e:	9d 4f       	sbci	r25, 0xFD	; 253
    5950:	20 e9       	ldi	r18, 0x90	; 144
    5952:	31 e0       	ldi	r19, 0x01	; 1
    5954:	fc 01       	movw	r30, r24
    5956:	31 83       	std	Z+1, r19	; 0x01
    5958:	20 83       	st	Z, r18
    595a:	ce 01       	movw	r24, r28
    595c:	8d 52       	subi	r24, 0x2D	; 45
    595e:	9d 4f       	sbci	r25, 0xFD	; 253
    5960:	fc 01       	movw	r30, r24
    5962:	80 81       	ld	r24, Z
    5964:	91 81       	ldd	r25, Z+1	; 0x01
    5966:	01 97       	sbiw	r24, 0x01	; 1
    5968:	f1 f7       	brne	.-4      	; 0x5966 <__stack+0x4867>
    596a:	9e 01       	movw	r18, r28
    596c:	2d 52       	subi	r18, 0x2D	; 45
    596e:	3d 4f       	sbci	r19, 0xFD	; 253
    5970:	f9 01       	movw	r30, r18
    5972:	91 83       	std	Z+1, r25	; 0x01
    5974:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5976:	ce 01       	movw	r24, r28
    5978:	8f 52       	subi	r24, 0x2F	; 47
    597a:	9d 4f       	sbci	r25, 0xFD	; 253
    597c:	9e 01       	movw	r18, r28
    597e:	2f 52       	subi	r18, 0x2F	; 47
    5980:	3d 4f       	sbci	r19, 0xFD	; 253
    5982:	f9 01       	movw	r30, r18
    5984:	20 81       	ld	r18, Z
    5986:	31 81       	ldd	r19, Z+1	; 0x01
    5988:	21 50       	subi	r18, 0x01	; 1
    598a:	31 09       	sbc	r19, r1
    598c:	fc 01       	movw	r30, r24
    598e:	31 83       	std	Z+1, r19	; 0x01
    5990:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5992:	ce 01       	movw	r24, r28
    5994:	8f 52       	subi	r24, 0x2F	; 47
    5996:	9d 4f       	sbci	r25, 0xFD	; 253
    5998:	fc 01       	movw	r30, r24
    599a:	80 81       	ld	r24, Z
    599c:	91 81       	ldd	r25, Z+1	; 0x01
    599e:	89 2b       	or	r24, r25
    59a0:	a1 f6       	brne	.-88     	; 0x594a <__stack+0x484b>
    59a2:	2c c0       	rjmp	.+88     	; 0x59fc <__stack+0x48fd>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    59a4:	8e 01       	movw	r16, r28
    59a6:	0f 52       	subi	r16, 0x2F	; 47
    59a8:	1d 4f       	sbci	r17, 0xFD	; 253
    59aa:	ce 01       	movw	r24, r28
    59ac:	83 53       	subi	r24, 0x33	; 51
    59ae:	9d 4f       	sbci	r25, 0xFD	; 253
    59b0:	fc 01       	movw	r30, r24
    59b2:	60 81       	ld	r22, Z
    59b4:	71 81       	ldd	r23, Z+1	; 0x01
    59b6:	82 81       	ldd	r24, Z+2	; 0x02
    59b8:	93 81       	ldd	r25, Z+3	; 0x03
    59ba:	0e 94 0b 31 	call	0x6216	; 0x6216 <__fixunssfsi>
    59be:	dc 01       	movw	r26, r24
    59c0:	cb 01       	movw	r24, r22
    59c2:	f8 01       	movw	r30, r16
    59c4:	91 83       	std	Z+1, r25	; 0x01
    59c6:	80 83       	st	Z, r24
    59c8:	ce 01       	movw	r24, r28
    59ca:	8b 52       	subi	r24, 0x2B	; 43
    59cc:	9d 4f       	sbci	r25, 0xFD	; 253
    59ce:	9e 01       	movw	r18, r28
    59d0:	2f 52       	subi	r18, 0x2F	; 47
    59d2:	3d 4f       	sbci	r19, 0xFD	; 253
    59d4:	f9 01       	movw	r30, r18
    59d6:	20 81       	ld	r18, Z
    59d8:	31 81       	ldd	r19, Z+1	; 0x01
    59da:	fc 01       	movw	r30, r24
    59dc:	31 83       	std	Z+1, r19	; 0x01
    59de:	20 83       	st	Z, r18
    59e0:	ce 01       	movw	r24, r28
    59e2:	8b 52       	subi	r24, 0x2B	; 43
    59e4:	9d 4f       	sbci	r25, 0xFD	; 253
    59e6:	fc 01       	movw	r30, r24
    59e8:	80 81       	ld	r24, Z
    59ea:	91 81       	ldd	r25, Z+1	; 0x01
    59ec:	01 97       	sbiw	r24, 0x01	; 1
    59ee:	f1 f7       	brne	.-4      	; 0x59ec <__stack+0x48ed>
    59f0:	9e 01       	movw	r18, r28
    59f2:	2b 52       	subi	r18, 0x2B	; 43
    59f4:	3d 4f       	sbci	r19, 0xFD	; 253
    59f6:	f9 01       	movw	r30, r18
    59f8:	91 83       	std	Z+1, r25	; 0x01
    59fa:	80 83       	st	Z, r24
					_delay_ms(500);
					to_uARM("M2210 F2000 T500\n");
    59fc:	81 e8       	ldi	r24, 0x81	; 129
    59fe:	91 e0       	ldi	r25, 0x01	; 1
    5a00:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
				}
				PORTB&=~0x01;
    5a04:	85 e2       	ldi	r24, 0x25	; 37
    5a06:	90 e0       	ldi	r25, 0x00	; 0
    5a08:	25 e2       	ldi	r18, 0x25	; 37
    5a0a:	30 e0       	ldi	r19, 0x00	; 0
    5a0c:	f9 01       	movw	r30, r18
    5a0e:	20 81       	ld	r18, Z
    5a10:	2e 7f       	andi	r18, 0xFE	; 254
    5a12:	fc 01       	movw	r30, r24
    5a14:	20 83       	st	Z, r18
    5a16:	0c 94 b8 03 	jmp	0x770	; 0x770 <main+0x54>
			}
			else
			{
				if (DIP_Switch&0x80)
    5a1a:	80 91 7e 03 	lds	r24, 0x037E	; 0x80037e <__data_end>
    5a1e:	88 23       	and	r24, r24
    5a20:	f4 f4       	brge	.+60     	; 0x5a5e <__stack+0x495f>
				{
					write_zahl(2,10,recieved_X,4,0,0);
    5a22:	89 81       	ldd	r24, Y+1	; 0x01
    5a24:	9a 81       	ldd	r25, Y+2	; 0x02
    5a26:	09 2e       	mov	r0, r25
    5a28:	00 0c       	add	r0, r0
    5a2a:	aa 0b       	sbc	r26, r26
    5a2c:	bb 0b       	sbc	r27, r27
    5a2e:	c1 2c       	mov	r12, r1
    5a30:	e1 2c       	mov	r14, r1
    5a32:	04 e0       	ldi	r16, 0x04	; 4
    5a34:	9c 01       	movw	r18, r24
    5a36:	ad 01       	movw	r20, r26
    5a38:	6a e0       	ldi	r22, 0x0A	; 10
    5a3a:	82 e0       	ldi	r24, 0x02	; 2
    5a3c:	0e 94 48 2f 	call	0x5e90	; 0x5e90 <write_zahl>
					write_zahl(3,10,recieved_Y,4,0,0);
    5a40:	8b 81       	ldd	r24, Y+3	; 0x03
    5a42:	9c 81       	ldd	r25, Y+4	; 0x04
    5a44:	09 2e       	mov	r0, r25
    5a46:	00 0c       	add	r0, r0
    5a48:	aa 0b       	sbc	r26, r26
    5a4a:	bb 0b       	sbc	r27, r27
    5a4c:	c1 2c       	mov	r12, r1
    5a4e:	e1 2c       	mov	r14, r1
    5a50:	04 e0       	ldi	r16, 0x04	; 4
    5a52:	9c 01       	movw	r18, r24
    5a54:	ad 01       	movw	r20, r26
    5a56:	6a e0       	ldi	r22, 0x0A	; 10
    5a58:	83 e0       	ldi	r24, 0x03	; 3
    5a5a:	0e 94 48 2f 	call	0x5e90	; 0x5e90 <write_zahl>
				}	
				recieved_X-=384;
    5a5e:	89 81       	ldd	r24, Y+1	; 0x01
    5a60:	9a 81       	ldd	r25, Y+2	; 0x02
    5a62:	80 58       	subi	r24, 0x80	; 128
    5a64:	91 40       	sbci	r25, 0x01	; 1
    5a66:	9a 83       	std	Y+2, r25	; 0x02
    5a68:	89 83       	std	Y+1, r24	; 0x01
				recieved_Y-=512;				
    5a6a:	8b 81       	ldd	r24, Y+3	; 0x03
    5a6c:	9c 81       	ldd	r25, Y+4	; 0x04
    5a6e:	92 50       	subi	r25, 0x02	; 2
    5a70:	9c 83       	std	Y+4, r25	; 0x04
    5a72:	8b 83       	std	Y+3, r24	; 0x03
				recieved_X=((recieved_X/5)*-1)+200;
    5a74:	89 81       	ldd	r24, Y+1	; 0x01
    5a76:	9a 81       	ldd	r25, Y+2	; 0x02
    5a78:	25 e0       	ldi	r18, 0x05	; 5
    5a7a:	30 e0       	ldi	r19, 0x00	; 0
    5a7c:	b9 01       	movw	r22, r18
    5a7e:	0e 94 21 32 	call	0x6442	; 0x6442 <__divmodhi4>
    5a82:	cb 01       	movw	r24, r22
    5a84:	9c 01       	movw	r18, r24
    5a86:	88 ec       	ldi	r24, 0xC8	; 200
    5a88:	90 e0       	ldi	r25, 0x00	; 0
    5a8a:	82 1b       	sub	r24, r18
    5a8c:	93 0b       	sbc	r25, r19
    5a8e:	9a 83       	std	Y+2, r25	; 0x02
    5a90:	89 83       	std	Y+1, r24	; 0x01
				recieved_Y=(recieved_Y/5)*-1;				
    5a92:	8b 81       	ldd	r24, Y+3	; 0x03
    5a94:	9c 81       	ldd	r25, Y+4	; 0x04
    5a96:	25 e0       	ldi	r18, 0x05	; 5
    5a98:	30 e0       	ldi	r19, 0x00	; 0
    5a9a:	b9 01       	movw	r22, r18
    5a9c:	0e 94 21 32 	call	0x6442	; 0x6442 <__divmodhi4>
    5aa0:	cb 01       	movw	r24, r22
    5aa2:	91 95       	neg	r25
    5aa4:	81 95       	neg	r24
    5aa6:	91 09       	sbc	r25, r1
    5aa8:	9c 83       	std	Y+4, r25	; 0x04
    5aaa:	8b 83       	std	Y+3, r24	; 0x03
				snprintf(buffer,30,"G0 X%d Y%d Z-20 F6000\n",recieved_X,recieved_Y);
    5aac:	8c 81       	ldd	r24, Y+4	; 0x04
    5aae:	8f 93       	push	r24
    5ab0:	8b 81       	ldd	r24, Y+3	; 0x03
    5ab2:	8f 93       	push	r24
    5ab4:	8a 81       	ldd	r24, Y+2	; 0x02
    5ab6:	8f 93       	push	r24
    5ab8:	89 81       	ldd	r24, Y+1	; 0x01
    5aba:	8f 93       	push	r24
    5abc:	87 e0       	ldi	r24, 0x07	; 7
    5abe:	93 e0       	ldi	r25, 0x03	; 3
    5ac0:	89 2f       	mov	r24, r25
    5ac2:	8f 93       	push	r24
    5ac4:	87 e0       	ldi	r24, 0x07	; 7
    5ac6:	93 e0       	ldi	r25, 0x03	; 3
    5ac8:	8f 93       	push	r24
    5aca:	1f 92       	push	r1
    5acc:	8e e1       	ldi	r24, 0x1E	; 30
    5ace:	8f 93       	push	r24
    5ad0:	ce 01       	movw	r24, r28
    5ad2:	8f 51       	subi	r24, 0x1F	; 31
    5ad4:	9d 4f       	sbci	r25, 0xFD	; 253
    5ad6:	29 2f       	mov	r18, r25
    5ad8:	2f 93       	push	r18
    5ada:	8f 93       	push	r24
    5adc:	0e 94 6b 32 	call	0x64d6	; 0x64d6 <snprintf>
    5ae0:	8d b7       	in	r24, 0x3d	; 61
    5ae2:	9e b7       	in	r25, 0x3e	; 62
    5ae4:	0a 96       	adiw	r24, 0x0a	; 10
    5ae6:	0f b6       	in	r0, 0x3f	; 63
    5ae8:	f8 94       	cli
    5aea:	de bf       	out	0x3e, r29	; 62
    5aec:	0f be       	out	0x3f, r0	; 63
    5aee:	cd bf       	out	0x3d, r28	; 61
				if (DIP_Switch&0x80)
    5af0:	80 91 7e 03 	lds	r24, 0x037E	; 0x80037e <__data_end>
    5af4:	88 23       	and	r24, r24
    5af6:	f4 f4       	brge	.+60     	; 0x5b34 <__stack+0x4a35>
				{
					write_zahl(2,0,recieved_X,4,0,0);
    5af8:	89 81       	ldd	r24, Y+1	; 0x01
    5afa:	9a 81       	ldd	r25, Y+2	; 0x02
    5afc:	09 2e       	mov	r0, r25
    5afe:	00 0c       	add	r0, r0
    5b00:	aa 0b       	sbc	r26, r26
    5b02:	bb 0b       	sbc	r27, r27
    5b04:	c1 2c       	mov	r12, r1
    5b06:	e1 2c       	mov	r14, r1
    5b08:	04 e0       	ldi	r16, 0x04	; 4
    5b0a:	9c 01       	movw	r18, r24
    5b0c:	ad 01       	movw	r20, r26
    5b0e:	60 e0       	ldi	r22, 0x00	; 0
    5b10:	82 e0       	ldi	r24, 0x02	; 2
    5b12:	0e 94 48 2f 	call	0x5e90	; 0x5e90 <write_zahl>
					write_zahl(3,0,recieved_Y,4,0,0);
    5b16:	8b 81       	ldd	r24, Y+3	; 0x03
    5b18:	9c 81       	ldd	r25, Y+4	; 0x04
    5b1a:	09 2e       	mov	r0, r25
    5b1c:	00 0c       	add	r0, r0
    5b1e:	aa 0b       	sbc	r26, r26
    5b20:	bb 0b       	sbc	r27, r27
    5b22:	c1 2c       	mov	r12, r1
    5b24:	e1 2c       	mov	r14, r1
    5b26:	04 e0       	ldi	r16, 0x04	; 4
    5b28:	9c 01       	movw	r18, r24
    5b2a:	ad 01       	movw	r20, r26
    5b2c:	60 e0       	ldi	r22, 0x00	; 0
    5b2e:	83 e0       	ldi	r24, 0x03	; 3
    5b30:	0e 94 48 2f 	call	0x5e90	; 0x5e90 <write_zahl>
				}
				send_to_uArm(buffer);
    5b34:	ce 01       	movw	r24, r28
    5b36:	8f 51       	subi	r24, 0x1F	; 31
    5b38:	9d 4f       	sbci	r25, 0xFD	; 253
    5b3a:	0e 94 ad 01 	call	0x35a	; 0x35a <send_to_uArm>
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    5b3e:	13 c0       	rjmp	.+38     	; 0x5b66 <__stack+0x4a67>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
    5b40:	80 e0       	ldi	r24, 0x00	; 0
    5b42:	91 e0       	ldi	r25, 0x01	; 1
    5b44:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
					write_zahl(0,10,uart_string[4],4,0,0);
    5b48:	80 91 87 03 	lds	r24, 0x0387	; 0x800387 <uart_string+0x4>
    5b4c:	88 2f       	mov	r24, r24
    5b4e:	90 e0       	ldi	r25, 0x00	; 0
    5b50:	a0 e0       	ldi	r26, 0x00	; 0
    5b52:	b0 e0       	ldi	r27, 0x00	; 0
    5b54:	c1 2c       	mov	r12, r1
    5b56:	e1 2c       	mov	r14, r1
    5b58:	04 e0       	ldi	r16, 0x04	; 4
    5b5a:	9c 01       	movw	r18, r24
    5b5c:	ad 01       	movw	r20, r26
    5b5e:	6a e0       	ldi	r22, 0x0A	; 10
    5b60:	80 e0       	ldi	r24, 0x00	; 0
    5b62:	0e 94 48 2f 	call	0x5e90	; 0x5e90 <write_zahl>
				{
					write_zahl(2,0,recieved_X,4,0,0);
					write_zahl(3,0,recieved_Y,4,0,0);
				}
				send_to_uArm(buffer);
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    5b66:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <uart_string1+0x4>
    5b6a:	81 33       	cpi	r24, 0x31	; 49
    5b6c:	49 f3       	breq	.-46     	; 0x5b40 <__stack+0x4a41>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
					write_zahl(0,10,uart_string[4],4,0,0);
				}
				if (DIP_Switch&0x01)
    5b6e:	80 91 7e 03 	lds	r24, 0x037E	; 0x80037e <__data_end>
    5b72:	88 2f       	mov	r24, r24
    5b74:	90 e0       	ldi	r25, 0x00	; 0
    5b76:	81 70       	andi	r24, 0x01	; 1
    5b78:	99 27       	eor	r25, r25
    5b7a:	89 2b       	or	r24, r25
    5b7c:	21 f0       	breq	.+8      	; 0x5b86 <__stack+0x4a87>
				{
					to_uARM("M2210 F2000 T200\n");
    5b7e:	8e e1       	ldi	r24, 0x1E	; 30
    5b80:	93 e0       	ldi	r25, 0x03	; 3
    5b82:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
				}
				send_Byte_0('1');
    5b86:	81 e3       	ldi	r24, 0x31	; 49
    5b88:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
				PORTB&=~0x01;
    5b8c:	85 e2       	ldi	r24, 0x25	; 37
    5b8e:	90 e0       	ldi	r25, 0x00	; 0
    5b90:	25 e2       	ldi	r18, 0x25	; 37
    5b92:	30 e0       	ldi	r19, 0x00	; 0
    5b94:	f9 01       	movw	r30, r18
    5b96:	20 81       	ld	r18, Z
    5b98:	2e 7f       	andi	r18, 0xFE	; 254
    5b9a:	fc 01       	movw	r30, r24
    5b9c:	20 83       	st	Z, r18
			}	
		}
	} //end while(1)
    5b9e:	0c 94 b8 03 	jmp	0x770	; 0x770 <main+0x54>

00005ba2 <init_Timer0_1ms_int>:
    5ba2:	cf 93       	push	r28
    5ba4:	df 93       	push	r29
    5ba6:	cd b7       	in	r28, 0x3d	; 61
    5ba8:	de b7       	in	r29, 0x3e	; 62
    5baa:	84 e4       	ldi	r24, 0x44	; 68
    5bac:	90 e0       	ldi	r25, 0x00	; 0
    5bae:	24 e4       	ldi	r18, 0x44	; 68
    5bb0:	30 e0       	ldi	r19, 0x00	; 0
    5bb2:	f9 01       	movw	r30, r18
    5bb4:	20 81       	ld	r18, Z
    5bb6:	22 60       	ori	r18, 0x02	; 2
    5bb8:	fc 01       	movw	r30, r24
    5bba:	20 83       	st	Z, r18
    5bbc:	85 e4       	ldi	r24, 0x45	; 69
    5bbe:	90 e0       	ldi	r25, 0x00	; 0
    5bc0:	25 e4       	ldi	r18, 0x45	; 69
    5bc2:	30 e0       	ldi	r19, 0x00	; 0
    5bc4:	f9 01       	movw	r30, r18
    5bc6:	20 81       	ld	r18, Z
    5bc8:	23 60       	ori	r18, 0x03	; 3
    5bca:	fc 01       	movw	r30, r24
    5bcc:	20 83       	st	Z, r18
    5bce:	87 e4       	ldi	r24, 0x47	; 71
    5bd0:	90 e0       	ldi	r25, 0x00	; 0
    5bd2:	29 ef       	ldi	r18, 0xF9	; 249
    5bd4:	fc 01       	movw	r30, r24
    5bd6:	20 83       	st	Z, r18
    5bd8:	8e e6       	ldi	r24, 0x6E	; 110
    5bda:	90 e0       	ldi	r25, 0x00	; 0
    5bdc:	2e e6       	ldi	r18, 0x6E	; 110
    5bde:	30 e0       	ldi	r19, 0x00	; 0
    5be0:	f9 01       	movw	r30, r18
    5be2:	20 81       	ld	r18, Z
    5be4:	22 60       	ori	r18, 0x02	; 2
    5be6:	fc 01       	movw	r30, r24
    5be8:	20 83       	st	Z, r18
    5bea:	00 00       	nop
    5bec:	df 91       	pop	r29
    5bee:	cf 91       	pop	r28
    5bf0:	08 95       	ret

00005bf2 <__vector_16>:
    5bf2:	1f 92       	push	r1
    5bf4:	0f 92       	push	r0
    5bf6:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    5bfa:	0f 92       	push	r0
    5bfc:	11 24       	eor	r1, r1
    5bfe:	2f 93       	push	r18
    5c00:	3f 93       	push	r19
    5c02:	4f 93       	push	r20
    5c04:	5f 93       	push	r21
    5c06:	6f 93       	push	r22
    5c08:	7f 93       	push	r23
    5c0a:	8f 93       	push	r24
    5c0c:	9f 93       	push	r25
    5c0e:	af 93       	push	r26
    5c10:	bf 93       	push	r27
    5c12:	ef 93       	push	r30
    5c14:	ff 93       	push	r31
    5c16:	cf 93       	push	r28
    5c18:	df 93       	push	r29
    5c1a:	cd b7       	in	r28, 0x3d	; 61
    5c1c:	de b7       	in	r29, 0x3e	; 62
    5c1e:	80 91 ed 03 	lds	r24, 0x03ED	; 0x8003ed <tick_1ms>
    5c22:	90 91 ee 03 	lds	r25, 0x03EE	; 0x8003ee <tick_1ms+0x1>
    5c26:	a0 91 ef 03 	lds	r26, 0x03EF	; 0x8003ef <tick_1ms+0x2>
    5c2a:	b0 91 f0 03 	lds	r27, 0x03F0	; 0x8003f0 <tick_1ms+0x3>
    5c2e:	01 96       	adiw	r24, 0x01	; 1
    5c30:	a1 1d       	adc	r26, r1
    5c32:	b1 1d       	adc	r27, r1
    5c34:	80 93 ed 03 	sts	0x03ED, r24	; 0x8003ed <tick_1ms>
    5c38:	90 93 ee 03 	sts	0x03EE, r25	; 0x8003ee <tick_1ms+0x1>
    5c3c:	a0 93 ef 03 	sts	0x03EF, r26	; 0x8003ef <tick_1ms+0x2>
    5c40:	b0 93 f0 03 	sts	0x03F0, r27	; 0x8003f0 <tick_1ms+0x3>
    5c44:	80 91 ed 03 	lds	r24, 0x03ED	; 0x8003ed <tick_1ms>
    5c48:	90 91 ee 03 	lds	r25, 0x03EE	; 0x8003ee <tick_1ms+0x1>
    5c4c:	a0 91 ef 03 	lds	r26, 0x03EF	; 0x8003ef <tick_1ms+0x2>
    5c50:	b0 91 f0 03 	lds	r27, 0x03F0	; 0x8003f0 <tick_1ms+0x3>
    5c54:	28 ee       	ldi	r18, 0xE8	; 232
    5c56:	33 e0       	ldi	r19, 0x03	; 3
    5c58:	40 e0       	ldi	r20, 0x00	; 0
    5c5a:	50 e0       	ldi	r21, 0x00	; 0
    5c5c:	bc 01       	movw	r22, r24
    5c5e:	cd 01       	movw	r24, r26
    5c60:	0e 94 35 32 	call	0x646a	; 0x646a <__udivmodsi4>
    5c64:	dc 01       	movw	r26, r24
    5c66:	cb 01       	movw	r24, r22
    5c68:	89 2b       	or	r24, r25
    5c6a:	8a 2b       	or	r24, r26
    5c6c:	8b 2b       	or	r24, r27
    5c6e:	99 f4       	brne	.+38     	; 0x5c96 <__vector_16+0xa4>
    5c70:	80 91 f1 03 	lds	r24, 0x03F1	; 0x8003f1 <tick_1s>
    5c74:	90 91 f2 03 	lds	r25, 0x03F2	; 0x8003f2 <tick_1s+0x1>
    5c78:	a0 91 f3 03 	lds	r26, 0x03F3	; 0x8003f3 <tick_1s+0x2>
    5c7c:	b0 91 f4 03 	lds	r27, 0x03F4	; 0x8003f4 <tick_1s+0x3>
    5c80:	01 96       	adiw	r24, 0x01	; 1
    5c82:	a1 1d       	adc	r26, r1
    5c84:	b1 1d       	adc	r27, r1
    5c86:	80 93 f1 03 	sts	0x03F1, r24	; 0x8003f1 <tick_1s>
    5c8a:	90 93 f2 03 	sts	0x03F2, r25	; 0x8003f2 <tick_1s+0x1>
    5c8e:	a0 93 f3 03 	sts	0x03F3, r26	; 0x8003f3 <tick_1s+0x2>
    5c92:	b0 93 f4 03 	sts	0x03F4, r27	; 0x8003f4 <tick_1s+0x3>
    5c96:	80 91 e9 03 	lds	r24, 0x03E9	; 0x8003e9 <tick_1ms_cnt>
    5c9a:	90 91 ea 03 	lds	r25, 0x03EA	; 0x8003ea <tick_1ms_cnt+0x1>
    5c9e:	a0 91 eb 03 	lds	r26, 0x03EB	; 0x8003eb <tick_1ms_cnt+0x2>
    5ca2:	b0 91 ec 03 	lds	r27, 0x03EC	; 0x8003ec <tick_1ms_cnt+0x3>
    5ca6:	89 2b       	or	r24, r25
    5ca8:	8a 2b       	or	r24, r26
    5caa:	8b 2b       	or	r24, r27
    5cac:	99 f0       	breq	.+38     	; 0x5cd4 <__vector_16+0xe2>
    5cae:	80 91 e9 03 	lds	r24, 0x03E9	; 0x8003e9 <tick_1ms_cnt>
    5cb2:	90 91 ea 03 	lds	r25, 0x03EA	; 0x8003ea <tick_1ms_cnt+0x1>
    5cb6:	a0 91 eb 03 	lds	r26, 0x03EB	; 0x8003eb <tick_1ms_cnt+0x2>
    5cba:	b0 91 ec 03 	lds	r27, 0x03EC	; 0x8003ec <tick_1ms_cnt+0x3>
    5cbe:	01 97       	sbiw	r24, 0x01	; 1
    5cc0:	a1 09       	sbc	r26, r1
    5cc2:	b1 09       	sbc	r27, r1
    5cc4:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <tick_1ms_cnt>
    5cc8:	90 93 ea 03 	sts	0x03EA, r25	; 0x8003ea <tick_1ms_cnt+0x1>
    5ccc:	a0 93 eb 03 	sts	0x03EB, r26	; 0x8003eb <tick_1ms_cnt+0x2>
    5cd0:	b0 93 ec 03 	sts	0x03EC, r27	; 0x8003ec <tick_1ms_cnt+0x3>
    5cd4:	00 00       	nop
    5cd6:	df 91       	pop	r29
    5cd8:	cf 91       	pop	r28
    5cda:	ff 91       	pop	r31
    5cdc:	ef 91       	pop	r30
    5cde:	bf 91       	pop	r27
    5ce0:	af 91       	pop	r26
    5ce2:	9f 91       	pop	r25
    5ce4:	8f 91       	pop	r24
    5ce6:	7f 91       	pop	r23
    5ce8:	6f 91       	pop	r22
    5cea:	5f 91       	pop	r21
    5cec:	4f 91       	pop	r20
    5cee:	3f 91       	pop	r19
    5cf0:	2f 91       	pop	r18
    5cf2:	0f 90       	pop	r0
    5cf4:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    5cf8:	0f 90       	pop	r0
    5cfa:	1f 90       	pop	r1
    5cfc:	18 95       	reti

00005cfe <wait_1ms>:
    5cfe:	cf 93       	push	r28
    5d00:	df 93       	push	r29
    5d02:	00 d0       	rcall	.+0      	; 0x5d04 <wait_1ms+0x6>
    5d04:	00 d0       	rcall	.+0      	; 0x5d06 <wait_1ms+0x8>
    5d06:	cd b7       	in	r28, 0x3d	; 61
    5d08:	de b7       	in	r29, 0x3e	; 62
    5d0a:	69 83       	std	Y+1, r22	; 0x01
    5d0c:	7a 83       	std	Y+2, r23	; 0x02
    5d0e:	8b 83       	std	Y+3, r24	; 0x03
    5d10:	9c 83       	std	Y+4, r25	; 0x04
    5d12:	89 81       	ldd	r24, Y+1	; 0x01
    5d14:	9a 81       	ldd	r25, Y+2	; 0x02
    5d16:	ab 81       	ldd	r26, Y+3	; 0x03
    5d18:	bc 81       	ldd	r27, Y+4	; 0x04
    5d1a:	89 2b       	or	r24, r25
    5d1c:	8a 2b       	or	r24, r26
    5d1e:	8b 2b       	or	r24, r27
    5d20:	69 f0       	breq	.+26     	; 0x5d3c <wait_1ms+0x3e>
    5d22:	89 81       	ldd	r24, Y+1	; 0x01
    5d24:	9a 81       	ldd	r25, Y+2	; 0x02
    5d26:	ab 81       	ldd	r26, Y+3	; 0x03
    5d28:	bc 81       	ldd	r27, Y+4	; 0x04
    5d2a:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <tick_1ms_cnt>
    5d2e:	90 93 ea 03 	sts	0x03EA, r25	; 0x8003ea <tick_1ms_cnt+0x1>
    5d32:	a0 93 eb 03 	sts	0x03EB, r26	; 0x8003eb <tick_1ms_cnt+0x2>
    5d36:	b0 93 ec 03 	sts	0x03EC, r27	; 0x8003ec <tick_1ms_cnt+0x3>
    5d3a:	0c c0       	rjmp	.+24     	; 0x5d54 <wait_1ms+0x56>
    5d3c:	81 e0       	ldi	r24, 0x01	; 1
    5d3e:	90 e0       	ldi	r25, 0x00	; 0
    5d40:	a0 e0       	ldi	r26, 0x00	; 0
    5d42:	b0 e0       	ldi	r27, 0x00	; 0
    5d44:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <tick_1ms_cnt>
    5d48:	90 93 ea 03 	sts	0x03EA, r25	; 0x8003ea <tick_1ms_cnt+0x1>
    5d4c:	a0 93 eb 03 	sts	0x03EB, r26	; 0x8003eb <tick_1ms_cnt+0x2>
    5d50:	b0 93 ec 03 	sts	0x03EC, r27	; 0x8003ec <tick_1ms_cnt+0x3>
    5d54:	00 00       	nop
    5d56:	80 91 e9 03 	lds	r24, 0x03E9	; 0x8003e9 <tick_1ms_cnt>
    5d5a:	90 91 ea 03 	lds	r25, 0x03EA	; 0x8003ea <tick_1ms_cnt+0x1>
    5d5e:	a0 91 eb 03 	lds	r26, 0x03EB	; 0x8003eb <tick_1ms_cnt+0x2>
    5d62:	b0 91 ec 03 	lds	r27, 0x03EC	; 0x8003ec <tick_1ms_cnt+0x3>
    5d66:	89 2b       	or	r24, r25
    5d68:	8a 2b       	or	r24, r26
    5d6a:	8b 2b       	or	r24, r27
    5d6c:	a1 f7       	brne	.-24     	; 0x5d56 <wait_1ms+0x58>
    5d6e:	00 00       	nop
    5d70:	0f 90       	pop	r0
    5d72:	0f 90       	pop	r0
    5d74:	0f 90       	pop	r0
    5d76:	0f 90       	pop	r0
    5d78:	df 91       	pop	r29
    5d7a:	cf 91       	pop	r28
    5d7c:	08 95       	ret

00005d7e <delay_nop>:
    5d7e:	cf 93       	push	r28
    5d80:	df 93       	push	r29
    5d82:	00 d0       	rcall	.+0      	; 0x5d84 <delay_nop+0x6>
    5d84:	cd b7       	in	r28, 0x3d	; 61
    5d86:	de b7       	in	r29, 0x3e	; 62
    5d88:	8a 83       	std	Y+2, r24	; 0x02
    5d8a:	19 82       	std	Y+1, r1	; 0x01
    5d8c:	04 c0       	rjmp	.+8      	; 0x5d96 <delay_nop+0x18>
    5d8e:	00 00       	nop
    5d90:	89 81       	ldd	r24, Y+1	; 0x01
    5d92:	8f 5f       	subi	r24, 0xFF	; 255
    5d94:	89 83       	std	Y+1, r24	; 0x01
    5d96:	99 81       	ldd	r25, Y+1	; 0x01
    5d98:	8a 81       	ldd	r24, Y+2	; 0x02
    5d9a:	98 17       	cp	r25, r24
    5d9c:	c0 f3       	brcs	.-16     	; 0x5d8e <delay_nop+0x10>
    5d9e:	00 00       	nop
    5da0:	0f 90       	pop	r0
    5da2:	0f 90       	pop	r0
    5da4:	df 91       	pop	r29
    5da6:	cf 91       	pop	r28
    5da8:	08 95       	ret

00005daa <write_lcd_f>:
    5daa:	91 e0       	ldi	r25, 0x01	; 1
    5dac:	90 93 f5 03 	sts	0x03F5, r25	; 0x8003f5 <write_RGB_LCD_activ>
    5db0:	40 9a       	sbi	0x08, 0	; 8
    5db2:	41 98       	cbi	0x08, 1	; 8
    5db4:	41 98       	cbi	0x08, 1	; 8
    5db6:	41 9a       	sbi	0x08, 1	; 8
    5db8:	41 9a       	sbi	0x08, 1	; 8
    5dba:	41 98       	cbi	0x08, 1	; 8
    5dbc:	41 98       	cbi	0x08, 1	; 8
    5dbe:	41 9a       	sbi	0x08, 1	; 8
    5dc0:	41 9a       	sbi	0x08, 1	; 8
    5dc2:	41 98       	cbi	0x08, 1	; 8
    5dc4:	41 98       	cbi	0x08, 1	; 8
    5dc6:	41 9a       	sbi	0x08, 1	; 8
    5dc8:	41 9a       	sbi	0x08, 1	; 8
    5dca:	41 98       	cbi	0x08, 1	; 8
    5dcc:	41 98       	cbi	0x08, 1	; 8
    5dce:	41 9a       	sbi	0x08, 1	; 8
    5dd0:	41 9a       	sbi	0x08, 1	; 8
    5dd2:	41 98       	cbi	0x08, 1	; 8
    5dd4:	41 98       	cbi	0x08, 1	; 8
    5dd6:	41 9a       	sbi	0x08, 1	; 8
    5dd8:	40 98       	cbi	0x08, 0	; 8
    5dda:	41 98       	cbi	0x08, 1	; 8
    5ddc:	41 98       	cbi	0x08, 1	; 8
    5dde:	41 9a       	sbi	0x08, 1	; 8
    5de0:	83 34       	cpi	r24, 0x43	; 67
    5de2:	a9 f1       	breq	.+106    	; 0x5e4e <write_lcd_f+0xa4>
    5de4:	40 9a       	sbi	0x08, 0	; 8
    5de6:	41 98       	cbi	0x08, 1	; 8
    5de8:	41 98       	cbi	0x08, 1	; 8
    5dea:	41 9a       	sbi	0x08, 1	; 8
    5dec:	40 98       	cbi	0x08, 0	; 8
    5dee:	41 98       	cbi	0x08, 1	; 8
    5df0:	41 98       	cbi	0x08, 1	; 8
    5df2:	41 9a       	sbi	0x08, 1	; 8
    5df4:	84 e0       	ldi	r24, 0x04	; 4
    5df6:	41 98       	cbi	0x08, 1	; 8
    5df8:	60 ff       	sbrs	r22, 0
    5dfa:	27 c0       	rjmp	.+78     	; 0x5e4a <write_lcd_f+0xa0>
    5dfc:	40 9a       	sbi	0x08, 0	; 8
    5dfe:	66 95       	lsr	r22
    5e00:	41 98       	cbi	0x08, 1	; 8
    5e02:	41 9a       	sbi	0x08, 1	; 8
    5e04:	81 50       	subi	r24, 0x01	; 1
    5e06:	b9 f7       	brne	.-18     	; 0x5df6 <write_lcd_f+0x4c>
    5e08:	40 98       	cbi	0x08, 0	; 8
    5e0a:	84 e0       	ldi	r24, 0x04	; 4
    5e0c:	41 98       	cbi	0x08, 1	; 8
    5e0e:	41 98       	cbi	0x08, 1	; 8
    5e10:	41 9a       	sbi	0x08, 1	; 8
    5e12:	81 50       	subi	r24, 0x01	; 1
    5e14:	d9 f7       	brne	.-10     	; 0x5e0c <write_lcd_f+0x62>
    5e16:	84 e0       	ldi	r24, 0x04	; 4
    5e18:	41 98       	cbi	0x08, 1	; 8
    5e1a:	60 ff       	sbrs	r22, 0
    5e1c:	14 c0       	rjmp	.+40     	; 0x5e46 <write_lcd_f+0x9c>
    5e1e:	40 9a       	sbi	0x08, 0	; 8
    5e20:	66 95       	lsr	r22
    5e22:	41 98       	cbi	0x08, 1	; 8
    5e24:	41 9a       	sbi	0x08, 1	; 8
    5e26:	81 50       	subi	r24, 0x01	; 1
    5e28:	b9 f7       	brne	.-18     	; 0x5e18 <write_lcd_f+0x6e>
    5e2a:	40 98       	cbi	0x08, 0	; 8
    5e2c:	84 e0       	ldi	r24, 0x04	; 4
    5e2e:	41 98       	cbi	0x08, 1	; 8
    5e30:	41 98       	cbi	0x08, 1	; 8
    5e32:	41 9a       	sbi	0x08, 1	; 8
    5e34:	81 50       	subi	r24, 0x01	; 1
    5e36:	d9 f7       	brne	.-10     	; 0x5e2e <write_lcd_f+0x84>
    5e38:	84 e1       	ldi	r24, 0x14	; 20
    5e3a:	40 9a       	sbi	0x08, 0	; 8
    5e3c:	81 50       	subi	r24, 0x01	; 1
    5e3e:	e9 f7       	brne	.-6      	; 0x5e3a <write_lcd_f+0x90>
    5e40:	10 92 f5 03 	sts	0x03F5, r1	; 0x8003f5 <write_RGB_LCD_activ>
    5e44:	08 95       	ret
    5e46:	40 98       	cbi	0x08, 0	; 8
    5e48:	eb cf       	rjmp	.-42     	; 0x5e20 <write_lcd_f+0x76>
    5e4a:	40 98       	cbi	0x08, 0	; 8
    5e4c:	d8 cf       	rjmp	.-80     	; 0x5dfe <write_lcd_f+0x54>
    5e4e:	40 98       	cbi	0x08, 0	; 8
    5e50:	ca cf       	rjmp	.-108    	; 0x5de6 <write_lcd_f+0x3c>

00005e52 <write_text_ram>:
    5e52:	0f 93       	push	r16
    5e54:	1f 93       	push	r17
    5e56:	df 93       	push	r29
    5e58:	8a 01       	movw	r16, r20
    5e5a:	90 e2       	ldi	r25, 0x20	; 32
    5e5c:	89 9f       	mul	r24, r25
    5e5e:	60 0d       	add	r22, r0
    5e60:	11 24       	eor	r1, r1
    5e62:	60 68       	ori	r22, 0x80	; 128
    5e64:	83 e4       	ldi	r24, 0x43	; 67
    5e66:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <write_lcd_f>
    5e6a:	f8 01       	movw	r30, r16
    5e6c:	60 81       	ld	r22, Z
    5e6e:	66 23       	and	r22, r22
    5e70:	59 f0       	breq	.+22     	; 0x5e88 <write_text_ram+0x36>
    5e72:	d0 e0       	ldi	r29, 0x00	; 0
    5e74:	df 5f       	subi	r29, 0xFF	; 255
    5e76:	84 e4       	ldi	r24, 0x44	; 68
    5e78:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <write_lcd_f>
    5e7c:	f8 01       	movw	r30, r16
    5e7e:	ed 0f       	add	r30, r29
    5e80:	f1 1d       	adc	r31, r1
    5e82:	60 81       	ld	r22, Z
    5e84:	61 11       	cpse	r22, r1
    5e86:	f6 cf       	rjmp	.-20     	; 0x5e74 <write_text_ram+0x22>
    5e88:	df 91       	pop	r29
    5e8a:	1f 91       	pop	r17
    5e8c:	0f 91       	pop	r16
    5e8e:	08 95       	ret

00005e90 <write_zahl>:
    5e90:	2f 92       	push	r2
    5e92:	3f 92       	push	r3
    5e94:	4f 92       	push	r4
    5e96:	5f 92       	push	r5
    5e98:	6f 92       	push	r6
    5e9a:	7f 92       	push	r7
    5e9c:	8f 92       	push	r8
    5e9e:	9f 92       	push	r9
    5ea0:	af 92       	push	r10
    5ea2:	bf 92       	push	r11
    5ea4:	cf 92       	push	r12
    5ea6:	df 92       	push	r13
    5ea8:	ef 92       	push	r14
    5eaa:	ff 92       	push	r15
    5eac:	0f 93       	push	r16
    5eae:	1f 93       	push	r17
    5eb0:	cf 93       	push	r28
    5eb2:	df 93       	push	r29
    5eb4:	cd b7       	in	r28, 0x3d	; 61
    5eb6:	de b7       	in	r29, 0x3e	; 62
    5eb8:	63 97       	sbiw	r28, 0x13	; 19
    5eba:	0f b6       	in	r0, 0x3f	; 63
    5ebc:	f8 94       	cli
    5ebe:	de bf       	out	0x3e, r29	; 62
    5ec0:	0f be       	out	0x3f, r0	; 63
    5ec2:	cd bf       	out	0x3d, r28	; 61
    5ec4:	8a 8b       	std	Y+18, r24	; 0x12
    5ec6:	6b 8b       	std	Y+19, r22	; 0x13
    5ec8:	29 01       	movw	r4, r18
    5eca:	3a 01       	movw	r6, r20
    5ecc:	c8 8a       	std	Y+16, r12	; 0x10
    5ece:	04 36       	cpi	r16, 0x64	; 100
    5ed0:	08 f4       	brcc	.+2      	; 0x5ed4 <write_zahl+0x44>
    5ed2:	bd c0       	rjmp	.+378    	; 0x604e <write_zahl+0x1be>
    5ed4:	04 56       	subi	r16, 0x64	; 100
    5ed6:	19 8a       	std	Y+17, r1	; 0x11
    5ed8:	0b 30       	cpi	r16, 0x0B	; 11
    5eda:	08 f0       	brcs	.+2      	; 0x5ede <write_zahl+0x4e>
    5edc:	0a e0       	ldi	r16, 0x0A	; 10
    5ede:	ef 86       	std	Y+15, r14	; 0x0f
    5ee0:	88 89       	ldd	r24, Y+16	; 0x10
    5ee2:	8e 15       	cp	r24, r14
    5ee4:	08 f4       	brcc	.+2      	; 0x5ee8 <write_zahl+0x58>
    5ee6:	8f 87       	std	Y+15, r24	; 0x0f
    5ee8:	20 2e       	mov	r2, r16
    5eea:	31 2c       	mov	r3, r1
    5eec:	c1 01       	movw	r24, r2
    5eee:	ef 85       	ldd	r30, Y+15	; 0x0f
    5ef0:	8e 0f       	add	r24, r30
    5ef2:	91 1d       	adc	r25, r1
    5ef4:	0b 97       	sbiw	r24, 0x0b	; 11
    5ef6:	1c f0       	brlt	.+6      	; 0x5efe <write_zahl+0x6e>
    5ef8:	8a e0       	ldi	r24, 0x0A	; 10
    5efa:	80 1b       	sub	r24, r16
    5efc:	8f 87       	std	Y+15, r24	; 0x0f
    5efe:	c3 01       	movw	r24, r6
    5f00:	b2 01       	movw	r22, r4
    5f02:	2a e0       	ldi	r18, 0x0A	; 10
    5f04:	30 e0       	ldi	r19, 0x00	; 0
    5f06:	40 e0       	ldi	r20, 0x00	; 0
    5f08:	50 e0       	ldi	r21, 0x00	; 0
    5f0a:	0e 94 35 32 	call	0x646a	; 0x646a <__udivmodsi4>
    5f0e:	60 5d       	subi	r22, 0xD0	; 208
    5f10:	6c 87       	std	Y+12, r22	; 0x0c
    5f12:	1a e0       	ldi	r17, 0x0A	; 10
    5f14:	3a e0       	ldi	r19, 0x0A	; 10
    5f16:	c3 2e       	mov	r12, r19
    5f18:	d1 2c       	mov	r13, r1
    5f1a:	e1 2c       	mov	r14, r1
    5f1c:	f1 2c       	mov	r15, r1
    5f1e:	4a e0       	ldi	r20, 0x0A	; 10
    5f20:	84 2e       	mov	r8, r20
    5f22:	91 2c       	mov	r9, r1
    5f24:	a1 2c       	mov	r10, r1
    5f26:	b1 2c       	mov	r11, r1
    5f28:	81 e0       	ldi	r24, 0x01	; 1
    5f2a:	90 e0       	ldi	r25, 0x00	; 0
    5f2c:	8c 0f       	add	r24, r28
    5f2e:	9d 1f       	adc	r25, r29
    5f30:	81 0f       	add	r24, r17
    5f32:	91 1d       	adc	r25, r1
    5f34:	9e 87       	std	Y+14, r25	; 0x0e
    5f36:	8d 87       	std	Y+13, r24	; 0x0d
    5f38:	c3 01       	movw	r24, r6
    5f3a:	b2 01       	movw	r22, r4
    5f3c:	a7 01       	movw	r20, r14
    5f3e:	96 01       	movw	r18, r12
    5f40:	0e 94 35 32 	call	0x646a	; 0x646a <__udivmodsi4>
    5f44:	ca 01       	movw	r24, r20
    5f46:	b9 01       	movw	r22, r18
    5f48:	a5 01       	movw	r20, r10
    5f4a:	94 01       	movw	r18, r8
    5f4c:	0e 94 35 32 	call	0x646a	; 0x646a <__udivmodsi4>
    5f50:	60 5d       	subi	r22, 0xD0	; 208
    5f52:	ed 85       	ldd	r30, Y+13	; 0x0d
    5f54:	fe 85       	ldd	r31, Y+14	; 0x0e
    5f56:	60 83       	st	Z, r22
    5f58:	cc 0c       	add	r12, r12
    5f5a:	dd 1c       	adc	r13, r13
    5f5c:	ee 1c       	adc	r14, r14
    5f5e:	ff 1c       	adc	r15, r15
    5f60:	d7 01       	movw	r26, r14
    5f62:	c6 01       	movw	r24, r12
    5f64:	88 0f       	add	r24, r24
    5f66:	99 1f       	adc	r25, r25
    5f68:	aa 1f       	adc	r26, r26
    5f6a:	bb 1f       	adc	r27, r27
    5f6c:	88 0f       	add	r24, r24
    5f6e:	99 1f       	adc	r25, r25
    5f70:	aa 1f       	adc	r26, r26
    5f72:	bb 1f       	adc	r27, r27
    5f74:	c8 0e       	add	r12, r24
    5f76:	d9 1e       	adc	r13, r25
    5f78:	ea 1e       	adc	r14, r26
    5f7a:	fb 1e       	adc	r15, r27
    5f7c:	11 50       	subi	r17, 0x01	; 1
    5f7e:	a0 f6       	brcc	.-88     	; 0x5f28 <write_zahl+0x98>
    5f80:	2c e0       	ldi	r18, 0x0C	; 12
    5f82:	f8 89       	ldd	r31, Y+16	; 0x10
    5f84:	2f 1b       	sub	r18, r31
    5f86:	82 2f       	mov	r24, r18
    5f88:	80 1b       	sub	r24, r16
    5f8a:	00 23       	and	r16, r16
    5f8c:	09 f4       	brne	.+2      	; 0x5f90 <write_zahl+0x100>
    5f8e:	85 c0       	rjmp	.+266    	; 0x609a <write_zahl+0x20a>
    5f90:	fe 01       	movw	r30, r28
    5f92:	31 96       	adiw	r30, 0x01	; 1
    5f94:	a1 e0       	ldi	r26, 0x01	; 1
    5f96:	b0 e0       	ldi	r27, 0x00	; 0
    5f98:	ac 0f       	add	r26, r28
    5f9a:	bd 1f       	adc	r27, r29
    5f9c:	a8 0f       	add	r26, r24
    5f9e:	b1 1d       	adc	r27, r1
    5fa0:	9c 91       	ld	r25, X
    5fa2:	91 93       	st	Z+, r25
    5fa4:	8f 5f       	subi	r24, 0xFF	; 255
    5fa6:	28 13       	cpse	r18, r24
    5fa8:	f5 cf       	rjmp	.-22     	; 0x5f94 <write_zahl+0x104>
    5faa:	8f 85       	ldd	r24, Y+15	; 0x0f
    5fac:	81 11       	cpse	r24, r1
    5fae:	52 c0       	rjmp	.+164    	; 0x6054 <write_zahl+0x1c4>
    5fb0:	f1 01       	movw	r30, r2
    5fb2:	81 e0       	ldi	r24, 0x01	; 1
    5fb4:	90 e0       	ldi	r25, 0x00	; 0
    5fb6:	8c 0f       	add	r24, r28
    5fb8:	9d 1f       	adc	r25, r29
    5fba:	e8 0f       	add	r30, r24
    5fbc:	f9 1f       	adc	r31, r25
    5fbe:	10 82       	st	Z, r1
    5fc0:	99 89       	ldd	r25, Y+17	; 0x11
    5fc2:	99 23       	and	r25, r25
    5fc4:	21 f1       	breq	.+72     	; 0x600e <write_zahl+0x17e>
    5fc6:	89 81       	ldd	r24, Y+1	; 0x01
    5fc8:	80 33       	cpi	r24, 0x30	; 48
    5fca:	09 f5       	brne	.+66     	; 0x600e <write_zahl+0x17e>
    5fcc:	a1 01       	movw	r20, r2
    5fce:	41 50       	subi	r20, 0x01	; 1
    5fd0:	51 09       	sbc	r21, r1
    5fd2:	14 16       	cp	r1, r20
    5fd4:	15 06       	cpc	r1, r21
    5fd6:	dc f4       	brge	.+54     	; 0x600e <write_zahl+0x17e>
    5fd8:	80 e0       	ldi	r24, 0x00	; 0
    5fda:	90 e0       	ldi	r25, 0x00	; 0
    5fdc:	20 e0       	ldi	r18, 0x00	; 0
    5fde:	60 e2       	ldi	r22, 0x20	; 32
    5fe0:	03 c0       	rjmp	.+6      	; 0x5fe8 <write_zahl+0x158>
    5fe2:	84 17       	cp	r24, r20
    5fe4:	95 07       	cpc	r25, r21
    5fe6:	9c f4       	brge	.+38     	; 0x600e <write_zahl+0x17e>
    5fe8:	2f 5f       	subi	r18, 0xFF	; 255
    5fea:	e1 e0       	ldi	r30, 0x01	; 1
    5fec:	f0 e0       	ldi	r31, 0x00	; 0
    5fee:	ec 0f       	add	r30, r28
    5ff0:	fd 1f       	adc	r31, r29
    5ff2:	e8 0f       	add	r30, r24
    5ff4:	f9 1f       	adc	r31, r25
    5ff6:	60 83       	st	Z, r22
    5ff8:	82 2f       	mov	r24, r18
    5ffa:	90 e0       	ldi	r25, 0x00	; 0
    5ffc:	e1 e0       	ldi	r30, 0x01	; 1
    5ffe:	f0 e0       	ldi	r31, 0x00	; 0
    6000:	ec 0f       	add	r30, r28
    6002:	fd 1f       	adc	r31, r29
    6004:	e8 0f       	add	r30, r24
    6006:	f9 1f       	adc	r31, r25
    6008:	30 81       	ld	r19, Z
    600a:	30 33       	cpi	r19, 0x30	; 48
    600c:	51 f3       	breq	.-44     	; 0x5fe2 <write_zahl+0x152>
    600e:	ae 01       	movw	r20, r28
    6010:	4f 5f       	subi	r20, 0xFF	; 255
    6012:	5f 4f       	sbci	r21, 0xFF	; 255
    6014:	6b 89       	ldd	r22, Y+19	; 0x13
    6016:	8a 89       	ldd	r24, Y+18	; 0x12
    6018:	0e 94 29 2f 	call	0x5e52	; 0x5e52 <write_text_ram>
    601c:	63 96       	adiw	r28, 0x13	; 19
    601e:	0f b6       	in	r0, 0x3f	; 63
    6020:	f8 94       	cli
    6022:	de bf       	out	0x3e, r29	; 62
    6024:	0f be       	out	0x3f, r0	; 63
    6026:	cd bf       	out	0x3d, r28	; 61
    6028:	df 91       	pop	r29
    602a:	cf 91       	pop	r28
    602c:	1f 91       	pop	r17
    602e:	0f 91       	pop	r16
    6030:	ff 90       	pop	r15
    6032:	ef 90       	pop	r14
    6034:	df 90       	pop	r13
    6036:	cf 90       	pop	r12
    6038:	bf 90       	pop	r11
    603a:	af 90       	pop	r10
    603c:	9f 90       	pop	r9
    603e:	8f 90       	pop	r8
    6040:	7f 90       	pop	r7
    6042:	6f 90       	pop	r6
    6044:	5f 90       	pop	r5
    6046:	4f 90       	pop	r4
    6048:	3f 90       	pop	r3
    604a:	2f 90       	pop	r2
    604c:	08 95       	ret
    604e:	21 e0       	ldi	r18, 0x01	; 1
    6050:	29 8b       	std	Y+17, r18	; 0x11
    6052:	42 cf       	rjmp	.-380    	; 0x5ed8 <write_zahl+0x48>
    6054:	0f 5f       	subi	r16, 0xFF	; 255
    6056:	8e e2       	ldi	r24, 0x2E	; 46
    6058:	e1 e0       	ldi	r30, 0x01	; 1
    605a:	f0 e0       	ldi	r31, 0x00	; 0
    605c:	ec 0f       	add	r30, r28
    605e:	fd 1f       	adc	r31, r29
    6060:	e2 0d       	add	r30, r2
    6062:	f3 1d       	adc	r31, r3
    6064:	80 83       	st	Z, r24
    6066:	e0 2f       	mov	r30, r16
    6068:	20 1b       	sub	r18, r16
    606a:	82 2f       	mov	r24, r18
    606c:	8e 0f       	add	r24, r30
    606e:	a1 e0       	ldi	r26, 0x01	; 1
    6070:	b0 e0       	ldi	r27, 0x00	; 0
    6072:	ac 0f       	add	r26, r28
    6074:	bd 1f       	adc	r27, r29
    6076:	a8 0f       	add	r26, r24
    6078:	b1 1d       	adc	r27, r1
    607a:	8c 91       	ld	r24, X
    607c:	a1 e0       	ldi	r26, 0x01	; 1
    607e:	b0 e0       	ldi	r27, 0x00	; 0
    6080:	ac 0f       	add	r26, r28
    6082:	bd 1f       	adc	r27, r29
    6084:	ae 0f       	add	r26, r30
    6086:	b1 1d       	adc	r27, r1
    6088:	8c 93       	st	X, r24
    608a:	ef 5f       	subi	r30, 0xFF	; 255
    608c:	8e 2f       	mov	r24, r30
    608e:	80 1b       	sub	r24, r16
    6090:	9f 85       	ldd	r25, Y+15	; 0x0f
    6092:	89 17       	cp	r24, r25
    6094:	50 f3       	brcs	.-44     	; 0x606a <write_zahl+0x1da>
    6096:	f0 e0       	ldi	r31, 0x00	; 0
    6098:	8c cf       	rjmp	.-232    	; 0x5fb2 <write_zahl+0x122>
    609a:	ef 85       	ldd	r30, Y+15	; 0x0f
    609c:	ee 23       	and	r30, r30
    609e:	21 f0       	breq	.+8      	; 0x60a8 <write_zahl+0x218>
    60a0:	8e e2       	ldi	r24, 0x2E	; 46
    60a2:	89 83       	std	Y+1, r24	; 0x01
    60a4:	01 e0       	ldi	r16, 0x01	; 1
    60a6:	df cf       	rjmp	.-66     	; 0x6066 <write_zahl+0x1d6>
    60a8:	e0 e0       	ldi	r30, 0x00	; 0
    60aa:	f0 e0       	ldi	r31, 0x00	; 0
    60ac:	82 cf       	rjmp	.-252    	; 0x5fb2 <write_zahl+0x122>

000060ae <lcd_init>:
    60ae:	df 93       	push	r29
    60b0:	38 9a       	sbi	0x07, 0	; 7
    60b2:	39 9a       	sbi	0x07, 1	; 7
    60b4:	d2 e3       	ldi	r29, 0x32	; 50
    60b6:	88 e7       	ldi	r24, 0x78	; 120
    60b8:	0e 94 bf 2e 	call	0x5d7e	; 0x5d7e <delay_nop>
    60bc:	d1 50       	subi	r29, 0x01	; 1
    60be:	d9 f7       	brne	.-10     	; 0x60b6 <lcd_init+0x8>
    60c0:	64 e3       	ldi	r22, 0x34	; 52
    60c2:	83 e4       	ldi	r24, 0x43	; 67
    60c4:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <write_lcd_f>
    60c8:	64 e3       	ldi	r22, 0x34	; 52
    60ca:	83 e4       	ldi	r24, 0x43	; 67
    60cc:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <write_lcd_f>
    60d0:	69 e0       	ldi	r22, 0x09	; 9
    60d2:	83 e4       	ldi	r24, 0x43	; 67
    60d4:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <write_lcd_f>
    60d8:	60 e3       	ldi	r22, 0x30	; 48
    60da:	83 e4       	ldi	r24, 0x43	; 67
    60dc:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <write_lcd_f>
    60e0:	6c e0       	ldi	r22, 0x0C	; 12
    60e2:	83 e4       	ldi	r24, 0x43	; 67
    60e4:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <write_lcd_f>
    60e8:	61 e0       	ldi	r22, 0x01	; 1
    60ea:	83 e4       	ldi	r24, 0x43	; 67
    60ec:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <write_lcd_f>
    60f0:	d8 e0       	ldi	r29, 0x08	; 8
    60f2:	88 e7       	ldi	r24, 0x78	; 120
    60f4:	0e 94 bf 2e 	call	0x5d7e	; 0x5d7e <delay_nop>
    60f8:	d1 50       	subi	r29, 0x01	; 1
    60fa:	d9 f7       	brne	.-10     	; 0x60f2 <lcd_init+0x44>
    60fc:	67 e0       	ldi	r22, 0x07	; 7
    60fe:	83 e4       	ldi	r24, 0x43	; 67
    6100:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <write_lcd_f>
    6104:	df 91       	pop	r29
    6106:	0c 94 d1 2d 	jmp	0x5ba2	; 0x5ba2 <init_Timer0_1ms_int>

0000610a <clear_lcd>:
    610a:	df 93       	push	r29
    610c:	61 e0       	ldi	r22, 0x01	; 1
    610e:	83 e4       	ldi	r24, 0x43	; 67
    6110:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <write_lcd_f>
    6114:	d8 e0       	ldi	r29, 0x08	; 8
    6116:	88 e7       	ldi	r24, 0x78	; 120
    6118:	0e 94 bf 2e 	call	0x5d7e	; 0x5d7e <delay_nop>
    611c:	d1 50       	subi	r29, 0x01	; 1
    611e:	d9 f7       	brne	.-10     	; 0x6116 <clear_lcd+0xc>
    6120:	df 91       	pop	r29
    6122:	08 95       	ret

00006124 <LED_Show>:
    6124:	cf 93       	push	r28
    6126:	df 93       	push	r29
    6128:	1f 92       	push	r1
    612a:	cd b7       	in	r28, 0x3d	; 61
    612c:	de b7       	in	r29, 0x3e	; 62
    612e:	85 e2       	ldi	r24, 0x25	; 37
    6130:	90 e0       	ldi	r25, 0x00	; 0
    6132:	21 e0       	ldi	r18, 0x01	; 1
    6134:	fc 01       	movw	r30, r24
    6136:	20 83       	st	Z, r18
    6138:	19 82       	std	Y+1, r1	; 0x01
    613a:	17 c0       	rjmp	.+46     	; 0x616a <LED_Show+0x46>
    613c:	62 e3       	ldi	r22, 0x32	; 50
    613e:	70 e0       	ldi	r23, 0x00	; 0
    6140:	80 e0       	ldi	r24, 0x00	; 0
    6142:	90 e0       	ldi	r25, 0x00	; 0
    6144:	0e 94 7f 2e 	call	0x5cfe	; 0x5cfe <wait_1ms>
    6148:	85 e2       	ldi	r24, 0x25	; 37
    614a:	90 e0       	ldi	r25, 0x00	; 0
    614c:	29 81       	ldd	r18, Y+1	; 0x01
    614e:	42 2f       	mov	r20, r18
    6150:	50 e0       	ldi	r21, 0x00	; 0
    6152:	21 e0       	ldi	r18, 0x01	; 1
    6154:	30 e0       	ldi	r19, 0x00	; 0
    6156:	02 c0       	rjmp	.+4      	; 0x615c <LED_Show+0x38>
    6158:	22 0f       	add	r18, r18
    615a:	33 1f       	adc	r19, r19
    615c:	4a 95       	dec	r20
    615e:	e2 f7       	brpl	.-8      	; 0x6158 <LED_Show+0x34>
    6160:	fc 01       	movw	r30, r24
    6162:	20 83       	st	Z, r18
    6164:	89 81       	ldd	r24, Y+1	; 0x01
    6166:	8f 5f       	subi	r24, 0xFF	; 255
    6168:	89 83       	std	Y+1, r24	; 0x01
    616a:	89 81       	ldd	r24, Y+1	; 0x01
    616c:	88 30       	cpi	r24, 0x08	; 8
    616e:	30 f3       	brcs	.-52     	; 0x613c <LED_Show+0x18>
    6170:	85 e2       	ldi	r24, 0x25	; 37
    6172:	90 e0       	ldi	r25, 0x00	; 0
    6174:	20 e8       	ldi	r18, 0x80	; 128
    6176:	fc 01       	movw	r30, r24
    6178:	20 83       	st	Z, r18
    617a:	19 82       	std	Y+1, r1	; 0x01
    617c:	17 c0       	rjmp	.+46     	; 0x61ac <LED_Show+0x88>
    617e:	62 e3       	ldi	r22, 0x32	; 50
    6180:	70 e0       	ldi	r23, 0x00	; 0
    6182:	80 e0       	ldi	r24, 0x00	; 0
    6184:	90 e0       	ldi	r25, 0x00	; 0
    6186:	0e 94 7f 2e 	call	0x5cfe	; 0x5cfe <wait_1ms>
    618a:	85 e2       	ldi	r24, 0x25	; 37
    618c:	90 e0       	ldi	r25, 0x00	; 0
    618e:	29 81       	ldd	r18, Y+1	; 0x01
    6190:	42 2f       	mov	r20, r18
    6192:	50 e0       	ldi	r21, 0x00	; 0
    6194:	20 e8       	ldi	r18, 0x80	; 128
    6196:	30 e0       	ldi	r19, 0x00	; 0
    6198:	02 c0       	rjmp	.+4      	; 0x619e <LED_Show+0x7a>
    619a:	35 95       	asr	r19
    619c:	27 95       	ror	r18
    619e:	4a 95       	dec	r20
    61a0:	e2 f7       	brpl	.-8      	; 0x619a <LED_Show+0x76>
    61a2:	fc 01       	movw	r30, r24
    61a4:	20 83       	st	Z, r18
    61a6:	89 81       	ldd	r24, Y+1	; 0x01
    61a8:	8f 5f       	subi	r24, 0xFF	; 255
    61aa:	89 83       	std	Y+1, r24	; 0x01
    61ac:	89 81       	ldd	r24, Y+1	; 0x01
    61ae:	88 30       	cpi	r24, 0x08	; 8
    61b0:	30 f3       	brcs	.-52     	; 0x617e <LED_Show+0x5a>
    61b2:	64 e6       	ldi	r22, 0x64	; 100
    61b4:	70 e0       	ldi	r23, 0x00	; 0
    61b6:	80 e0       	ldi	r24, 0x00	; 0
    61b8:	90 e0       	ldi	r25, 0x00	; 0
    61ba:	0e 94 7f 2e 	call	0x5cfe	; 0x5cfe <wait_1ms>
    61be:	85 e2       	ldi	r24, 0x25	; 37
    61c0:	90 e0       	ldi	r25, 0x00	; 0
    61c2:	fc 01       	movw	r30, r24
    61c4:	10 82       	st	Z, r1
    61c6:	00 00       	nop
    61c8:	0f 90       	pop	r0
    61ca:	df 91       	pop	r29
    61cc:	cf 91       	pop	r28
    61ce:	08 95       	ret

000061d0 <init_BT_CAR_V2_0>:
    61d0:	cf 93       	push	r28
    61d2:	df 93       	push	r29
    61d4:	cd b7       	in	r28, 0x3d	; 61
    61d6:	de b7       	in	r29, 0x3e	; 62
    61d8:	81 e2       	ldi	r24, 0x21	; 33
    61da:	90 e0       	ldi	r25, 0x00	; 0
    61dc:	20 e6       	ldi	r18, 0x60	; 96
    61de:	fc 01       	movw	r30, r24
    61e0:	20 83       	st	Z, r18
    61e2:	84 e2       	ldi	r24, 0x24	; 36
    61e4:	90 e0       	ldi	r25, 0x00	; 0
    61e6:	2f ef       	ldi	r18, 0xFF	; 255
    61e8:	fc 01       	movw	r30, r24
    61ea:	20 83       	st	Z, r18
    61ec:	8a e2       	ldi	r24, 0x2A	; 42
    61ee:	90 e0       	ldi	r25, 0x00	; 0
    61f0:	2c ef       	ldi	r18, 0xFC	; 252
    61f2:	fc 01       	movw	r30, r24
    61f4:	20 83       	st	Z, r18
    61f6:	78 94       	sei
    61f8:	0e 94 57 30 	call	0x60ae	; 0x60ae <lcd_init>
    61fc:	0e 94 85 30 	call	0x610a	; 0x610a <clear_lcd>
    6200:	0e 94 92 30 	call	0x6124	; 0x6124 <LED_Show>
    6204:	00 00       	nop
    6206:	df 91       	pop	r29
    6208:	cf 91       	pop	r28
    620a:	08 95       	ret

0000620c <__cmpsf2>:
    620c:	0e 94 3a 31 	call	0x6274	; 0x6274 <__fp_cmp>
    6210:	08 f4       	brcc	.+2      	; 0x6214 <__cmpsf2+0x8>
    6212:	81 e0       	ldi	r24, 0x01	; 1
    6214:	08 95       	ret

00006216 <__fixunssfsi>:
    6216:	0e 94 66 31 	call	0x62cc	; 0x62cc <__fp_splitA>
    621a:	88 f0       	brcs	.+34     	; 0x623e <__fixunssfsi+0x28>
    621c:	9f 57       	subi	r25, 0x7F	; 127
    621e:	98 f0       	brcs	.+38     	; 0x6246 <__fixunssfsi+0x30>
    6220:	b9 2f       	mov	r27, r25
    6222:	99 27       	eor	r25, r25
    6224:	b7 51       	subi	r27, 0x17	; 23
    6226:	b0 f0       	brcs	.+44     	; 0x6254 <__fixunssfsi+0x3e>
    6228:	e1 f0       	breq	.+56     	; 0x6262 <__fixunssfsi+0x4c>
    622a:	66 0f       	add	r22, r22
    622c:	77 1f       	adc	r23, r23
    622e:	88 1f       	adc	r24, r24
    6230:	99 1f       	adc	r25, r25
    6232:	1a f0       	brmi	.+6      	; 0x623a <__fixunssfsi+0x24>
    6234:	ba 95       	dec	r27
    6236:	c9 f7       	brne	.-14     	; 0x622a <__fixunssfsi+0x14>
    6238:	14 c0       	rjmp	.+40     	; 0x6262 <__fixunssfsi+0x4c>
    623a:	b1 30       	cpi	r27, 0x01	; 1
    623c:	91 f0       	breq	.+36     	; 0x6262 <__fixunssfsi+0x4c>
    623e:	0e 94 80 31 	call	0x6300	; 0x6300 <__fp_zero>
    6242:	b1 e0       	ldi	r27, 0x01	; 1
    6244:	08 95       	ret
    6246:	0c 94 80 31 	jmp	0x6300	; 0x6300 <__fp_zero>
    624a:	67 2f       	mov	r22, r23
    624c:	78 2f       	mov	r23, r24
    624e:	88 27       	eor	r24, r24
    6250:	b8 5f       	subi	r27, 0xF8	; 248
    6252:	39 f0       	breq	.+14     	; 0x6262 <__fixunssfsi+0x4c>
    6254:	b9 3f       	cpi	r27, 0xF9	; 249
    6256:	cc f3       	brlt	.-14     	; 0x624a <__fixunssfsi+0x34>
    6258:	86 95       	lsr	r24
    625a:	77 95       	ror	r23
    625c:	67 95       	ror	r22
    625e:	b3 95       	inc	r27
    6260:	d9 f7       	brne	.-10     	; 0x6258 <__fixunssfsi+0x42>
    6262:	3e f4       	brtc	.+14     	; 0x6272 <__fixunssfsi+0x5c>
    6264:	90 95       	com	r25
    6266:	80 95       	com	r24
    6268:	70 95       	com	r23
    626a:	61 95       	neg	r22
    626c:	7f 4f       	sbci	r23, 0xFF	; 255
    626e:	8f 4f       	sbci	r24, 0xFF	; 255
    6270:	9f 4f       	sbci	r25, 0xFF	; 255
    6272:	08 95       	ret

00006274 <__fp_cmp>:
    6274:	99 0f       	add	r25, r25
    6276:	00 08       	sbc	r0, r0
    6278:	55 0f       	add	r21, r21
    627a:	aa 0b       	sbc	r26, r26
    627c:	e0 e8       	ldi	r30, 0x80	; 128
    627e:	fe ef       	ldi	r31, 0xFE	; 254
    6280:	16 16       	cp	r1, r22
    6282:	17 06       	cpc	r1, r23
    6284:	e8 07       	cpc	r30, r24
    6286:	f9 07       	cpc	r31, r25
    6288:	c0 f0       	brcs	.+48     	; 0x62ba <__fp_cmp+0x46>
    628a:	12 16       	cp	r1, r18
    628c:	13 06       	cpc	r1, r19
    628e:	e4 07       	cpc	r30, r20
    6290:	f5 07       	cpc	r31, r21
    6292:	98 f0       	brcs	.+38     	; 0x62ba <__fp_cmp+0x46>
    6294:	62 1b       	sub	r22, r18
    6296:	73 0b       	sbc	r23, r19
    6298:	84 0b       	sbc	r24, r20
    629a:	95 0b       	sbc	r25, r21
    629c:	39 f4       	brne	.+14     	; 0x62ac <__fp_cmp+0x38>
    629e:	0a 26       	eor	r0, r26
    62a0:	61 f0       	breq	.+24     	; 0x62ba <__fp_cmp+0x46>
    62a2:	23 2b       	or	r18, r19
    62a4:	24 2b       	or	r18, r20
    62a6:	25 2b       	or	r18, r21
    62a8:	21 f4       	brne	.+8      	; 0x62b2 <__fp_cmp+0x3e>
    62aa:	08 95       	ret
    62ac:	0a 26       	eor	r0, r26
    62ae:	09 f4       	brne	.+2      	; 0x62b2 <__fp_cmp+0x3e>
    62b0:	a1 40       	sbci	r26, 0x01	; 1
    62b2:	a6 95       	lsr	r26
    62b4:	8f ef       	ldi	r24, 0xFF	; 255
    62b6:	81 1d       	adc	r24, r1
    62b8:	81 1d       	adc	r24, r1
    62ba:	08 95       	ret

000062bc <__fp_split3>:
    62bc:	57 fd       	sbrc	r21, 7
    62be:	90 58       	subi	r25, 0x80	; 128
    62c0:	44 0f       	add	r20, r20
    62c2:	55 1f       	adc	r21, r21
    62c4:	59 f0       	breq	.+22     	; 0x62dc <__fp_splitA+0x10>
    62c6:	5f 3f       	cpi	r21, 0xFF	; 255
    62c8:	71 f0       	breq	.+28     	; 0x62e6 <__fp_splitA+0x1a>
    62ca:	47 95       	ror	r20

000062cc <__fp_splitA>:
    62cc:	88 0f       	add	r24, r24
    62ce:	97 fb       	bst	r25, 7
    62d0:	99 1f       	adc	r25, r25
    62d2:	61 f0       	breq	.+24     	; 0x62ec <__fp_splitA+0x20>
    62d4:	9f 3f       	cpi	r25, 0xFF	; 255
    62d6:	79 f0       	breq	.+30     	; 0x62f6 <__fp_splitA+0x2a>
    62d8:	87 95       	ror	r24
    62da:	08 95       	ret
    62dc:	12 16       	cp	r1, r18
    62de:	13 06       	cpc	r1, r19
    62e0:	14 06       	cpc	r1, r20
    62e2:	55 1f       	adc	r21, r21
    62e4:	f2 cf       	rjmp	.-28     	; 0x62ca <__fp_split3+0xe>
    62e6:	46 95       	lsr	r20
    62e8:	f1 df       	rcall	.-30     	; 0x62cc <__fp_splitA>
    62ea:	08 c0       	rjmp	.+16     	; 0x62fc <__fp_splitA+0x30>
    62ec:	16 16       	cp	r1, r22
    62ee:	17 06       	cpc	r1, r23
    62f0:	18 06       	cpc	r1, r24
    62f2:	99 1f       	adc	r25, r25
    62f4:	f1 cf       	rjmp	.-30     	; 0x62d8 <__fp_splitA+0xc>
    62f6:	86 95       	lsr	r24
    62f8:	71 05       	cpc	r23, r1
    62fa:	61 05       	cpc	r22, r1
    62fc:	08 94       	sec
    62fe:	08 95       	ret

00006300 <__fp_zero>:
    6300:	e8 94       	clt

00006302 <__fp_szero>:
    6302:	bb 27       	eor	r27, r27
    6304:	66 27       	eor	r22, r22
    6306:	77 27       	eor	r23, r23
    6308:	cb 01       	movw	r24, r22
    630a:	97 f9       	bld	r25, 7
    630c:	08 95       	ret

0000630e <__gesf2>:
    630e:	0e 94 3a 31 	call	0x6274	; 0x6274 <__fp_cmp>
    6312:	08 f4       	brcc	.+2      	; 0x6316 <__gesf2+0x8>
    6314:	8f ef       	ldi	r24, 0xFF	; 255
    6316:	08 95       	ret

00006318 <__mulsf3>:
    6318:	0e 94 9f 31 	call	0x633e	; 0x633e <__mulsf3x>
    631c:	0c 94 10 32 	jmp	0x6420	; 0x6420 <__fp_round>
    6320:	0e 94 02 32 	call	0x6404	; 0x6404 <__fp_pscA>
    6324:	38 f0       	brcs	.+14     	; 0x6334 <__mulsf3+0x1c>
    6326:	0e 94 09 32 	call	0x6412	; 0x6412 <__fp_pscB>
    632a:	20 f0       	brcs	.+8      	; 0x6334 <__mulsf3+0x1c>
    632c:	95 23       	and	r25, r21
    632e:	11 f0       	breq	.+4      	; 0x6334 <__mulsf3+0x1c>
    6330:	0c 94 f9 31 	jmp	0x63f2	; 0x63f2 <__fp_inf>
    6334:	0c 94 ff 31 	jmp	0x63fe	; 0x63fe <__fp_nan>
    6338:	11 24       	eor	r1, r1
    633a:	0c 94 81 31 	jmp	0x6302	; 0x6302 <__fp_szero>

0000633e <__mulsf3x>:
    633e:	0e 94 5e 31 	call	0x62bc	; 0x62bc <__fp_split3>
    6342:	70 f3       	brcs	.-36     	; 0x6320 <__mulsf3+0x8>

00006344 <__mulsf3_pse>:
    6344:	95 9f       	mul	r25, r21
    6346:	c1 f3       	breq	.-16     	; 0x6338 <__mulsf3+0x20>
    6348:	95 0f       	add	r25, r21
    634a:	50 e0       	ldi	r21, 0x00	; 0
    634c:	55 1f       	adc	r21, r21
    634e:	62 9f       	mul	r22, r18
    6350:	f0 01       	movw	r30, r0
    6352:	72 9f       	mul	r23, r18
    6354:	bb 27       	eor	r27, r27
    6356:	f0 0d       	add	r31, r0
    6358:	b1 1d       	adc	r27, r1
    635a:	63 9f       	mul	r22, r19
    635c:	aa 27       	eor	r26, r26
    635e:	f0 0d       	add	r31, r0
    6360:	b1 1d       	adc	r27, r1
    6362:	aa 1f       	adc	r26, r26
    6364:	64 9f       	mul	r22, r20
    6366:	66 27       	eor	r22, r22
    6368:	b0 0d       	add	r27, r0
    636a:	a1 1d       	adc	r26, r1
    636c:	66 1f       	adc	r22, r22
    636e:	82 9f       	mul	r24, r18
    6370:	22 27       	eor	r18, r18
    6372:	b0 0d       	add	r27, r0
    6374:	a1 1d       	adc	r26, r1
    6376:	62 1f       	adc	r22, r18
    6378:	73 9f       	mul	r23, r19
    637a:	b0 0d       	add	r27, r0
    637c:	a1 1d       	adc	r26, r1
    637e:	62 1f       	adc	r22, r18
    6380:	83 9f       	mul	r24, r19
    6382:	a0 0d       	add	r26, r0
    6384:	61 1d       	adc	r22, r1
    6386:	22 1f       	adc	r18, r18
    6388:	74 9f       	mul	r23, r20
    638a:	33 27       	eor	r19, r19
    638c:	a0 0d       	add	r26, r0
    638e:	61 1d       	adc	r22, r1
    6390:	23 1f       	adc	r18, r19
    6392:	84 9f       	mul	r24, r20
    6394:	60 0d       	add	r22, r0
    6396:	21 1d       	adc	r18, r1
    6398:	82 2f       	mov	r24, r18
    639a:	76 2f       	mov	r23, r22
    639c:	6a 2f       	mov	r22, r26
    639e:	11 24       	eor	r1, r1
    63a0:	9f 57       	subi	r25, 0x7F	; 127
    63a2:	50 40       	sbci	r21, 0x00	; 0
    63a4:	9a f0       	brmi	.+38     	; 0x63cc <__mulsf3_pse+0x88>
    63a6:	f1 f0       	breq	.+60     	; 0x63e4 <__mulsf3_pse+0xa0>
    63a8:	88 23       	and	r24, r24
    63aa:	4a f0       	brmi	.+18     	; 0x63be <__mulsf3_pse+0x7a>
    63ac:	ee 0f       	add	r30, r30
    63ae:	ff 1f       	adc	r31, r31
    63b0:	bb 1f       	adc	r27, r27
    63b2:	66 1f       	adc	r22, r22
    63b4:	77 1f       	adc	r23, r23
    63b6:	88 1f       	adc	r24, r24
    63b8:	91 50       	subi	r25, 0x01	; 1
    63ba:	50 40       	sbci	r21, 0x00	; 0
    63bc:	a9 f7       	brne	.-22     	; 0x63a8 <__mulsf3_pse+0x64>
    63be:	9e 3f       	cpi	r25, 0xFE	; 254
    63c0:	51 05       	cpc	r21, r1
    63c2:	80 f0       	brcs	.+32     	; 0x63e4 <__mulsf3_pse+0xa0>
    63c4:	0c 94 f9 31 	jmp	0x63f2	; 0x63f2 <__fp_inf>
    63c8:	0c 94 81 31 	jmp	0x6302	; 0x6302 <__fp_szero>
    63cc:	5f 3f       	cpi	r21, 0xFF	; 255
    63ce:	e4 f3       	brlt	.-8      	; 0x63c8 <__mulsf3_pse+0x84>
    63d0:	98 3e       	cpi	r25, 0xE8	; 232
    63d2:	d4 f3       	brlt	.-12     	; 0x63c8 <__mulsf3_pse+0x84>
    63d4:	86 95       	lsr	r24
    63d6:	77 95       	ror	r23
    63d8:	67 95       	ror	r22
    63da:	b7 95       	ror	r27
    63dc:	f7 95       	ror	r31
    63de:	e7 95       	ror	r30
    63e0:	9f 5f       	subi	r25, 0xFF	; 255
    63e2:	c1 f7       	brne	.-16     	; 0x63d4 <__mulsf3_pse+0x90>
    63e4:	fe 2b       	or	r31, r30
    63e6:	88 0f       	add	r24, r24
    63e8:	91 1d       	adc	r25, r1
    63ea:	96 95       	lsr	r25
    63ec:	87 95       	ror	r24
    63ee:	97 f9       	bld	r25, 7
    63f0:	08 95       	ret

000063f2 <__fp_inf>:
    63f2:	97 f9       	bld	r25, 7
    63f4:	9f 67       	ori	r25, 0x7F	; 127
    63f6:	80 e8       	ldi	r24, 0x80	; 128
    63f8:	70 e0       	ldi	r23, 0x00	; 0
    63fa:	60 e0       	ldi	r22, 0x00	; 0
    63fc:	08 95       	ret

000063fe <__fp_nan>:
    63fe:	9f ef       	ldi	r25, 0xFF	; 255
    6400:	80 ec       	ldi	r24, 0xC0	; 192
    6402:	08 95       	ret

00006404 <__fp_pscA>:
    6404:	00 24       	eor	r0, r0
    6406:	0a 94       	dec	r0
    6408:	16 16       	cp	r1, r22
    640a:	17 06       	cpc	r1, r23
    640c:	18 06       	cpc	r1, r24
    640e:	09 06       	cpc	r0, r25
    6410:	08 95       	ret

00006412 <__fp_pscB>:
    6412:	00 24       	eor	r0, r0
    6414:	0a 94       	dec	r0
    6416:	12 16       	cp	r1, r18
    6418:	13 06       	cpc	r1, r19
    641a:	14 06       	cpc	r1, r20
    641c:	05 06       	cpc	r0, r21
    641e:	08 95       	ret

00006420 <__fp_round>:
    6420:	09 2e       	mov	r0, r25
    6422:	03 94       	inc	r0
    6424:	00 0c       	add	r0, r0
    6426:	11 f4       	brne	.+4      	; 0x642c <__fp_round+0xc>
    6428:	88 23       	and	r24, r24
    642a:	52 f0       	brmi	.+20     	; 0x6440 <__fp_round+0x20>
    642c:	bb 0f       	add	r27, r27
    642e:	40 f4       	brcc	.+16     	; 0x6440 <__fp_round+0x20>
    6430:	bf 2b       	or	r27, r31
    6432:	11 f4       	brne	.+4      	; 0x6438 <__fp_round+0x18>
    6434:	60 ff       	sbrs	r22, 0
    6436:	04 c0       	rjmp	.+8      	; 0x6440 <__fp_round+0x20>
    6438:	6f 5f       	subi	r22, 0xFF	; 255
    643a:	7f 4f       	sbci	r23, 0xFF	; 255
    643c:	8f 4f       	sbci	r24, 0xFF	; 255
    643e:	9f 4f       	sbci	r25, 0xFF	; 255
    6440:	08 95       	ret

00006442 <__divmodhi4>:
    6442:	97 fb       	bst	r25, 7
    6444:	07 2e       	mov	r0, r23
    6446:	16 f4       	brtc	.+4      	; 0x644c <__divmodhi4+0xa>
    6448:	00 94       	com	r0
    644a:	07 d0       	rcall	.+14     	; 0x645a <__divmodhi4_neg1>
    644c:	77 fd       	sbrc	r23, 7
    644e:	09 d0       	rcall	.+18     	; 0x6462 <__divmodhi4_neg2>
    6450:	0e 94 57 32 	call	0x64ae	; 0x64ae <__udivmodhi4>
    6454:	07 fc       	sbrc	r0, 7
    6456:	05 d0       	rcall	.+10     	; 0x6462 <__divmodhi4_neg2>
    6458:	3e f4       	brtc	.+14     	; 0x6468 <__divmodhi4_exit>

0000645a <__divmodhi4_neg1>:
    645a:	90 95       	com	r25
    645c:	81 95       	neg	r24
    645e:	9f 4f       	sbci	r25, 0xFF	; 255
    6460:	08 95       	ret

00006462 <__divmodhi4_neg2>:
    6462:	70 95       	com	r23
    6464:	61 95       	neg	r22
    6466:	7f 4f       	sbci	r23, 0xFF	; 255

00006468 <__divmodhi4_exit>:
    6468:	08 95       	ret

0000646a <__udivmodsi4>:
    646a:	a1 e2       	ldi	r26, 0x21	; 33
    646c:	1a 2e       	mov	r1, r26
    646e:	aa 1b       	sub	r26, r26
    6470:	bb 1b       	sub	r27, r27
    6472:	fd 01       	movw	r30, r26
    6474:	0d c0       	rjmp	.+26     	; 0x6490 <__udivmodsi4_ep>

00006476 <__udivmodsi4_loop>:
    6476:	aa 1f       	adc	r26, r26
    6478:	bb 1f       	adc	r27, r27
    647a:	ee 1f       	adc	r30, r30
    647c:	ff 1f       	adc	r31, r31
    647e:	a2 17       	cp	r26, r18
    6480:	b3 07       	cpc	r27, r19
    6482:	e4 07       	cpc	r30, r20
    6484:	f5 07       	cpc	r31, r21
    6486:	20 f0       	brcs	.+8      	; 0x6490 <__udivmodsi4_ep>
    6488:	a2 1b       	sub	r26, r18
    648a:	b3 0b       	sbc	r27, r19
    648c:	e4 0b       	sbc	r30, r20
    648e:	f5 0b       	sbc	r31, r21

00006490 <__udivmodsi4_ep>:
    6490:	66 1f       	adc	r22, r22
    6492:	77 1f       	adc	r23, r23
    6494:	88 1f       	adc	r24, r24
    6496:	99 1f       	adc	r25, r25
    6498:	1a 94       	dec	r1
    649a:	69 f7       	brne	.-38     	; 0x6476 <__udivmodsi4_loop>
    649c:	60 95       	com	r22
    649e:	70 95       	com	r23
    64a0:	80 95       	com	r24
    64a2:	90 95       	com	r25
    64a4:	9b 01       	movw	r18, r22
    64a6:	ac 01       	movw	r20, r24
    64a8:	bd 01       	movw	r22, r26
    64aa:	cf 01       	movw	r24, r30
    64ac:	08 95       	ret

000064ae <__udivmodhi4>:
    64ae:	aa 1b       	sub	r26, r26
    64b0:	bb 1b       	sub	r27, r27
    64b2:	51 e1       	ldi	r21, 0x11	; 17
    64b4:	07 c0       	rjmp	.+14     	; 0x64c4 <__udivmodhi4_ep>

000064b6 <__udivmodhi4_loop>:
    64b6:	aa 1f       	adc	r26, r26
    64b8:	bb 1f       	adc	r27, r27
    64ba:	a6 17       	cp	r26, r22
    64bc:	b7 07       	cpc	r27, r23
    64be:	10 f0       	brcs	.+4      	; 0x64c4 <__udivmodhi4_ep>
    64c0:	a6 1b       	sub	r26, r22
    64c2:	b7 0b       	sbc	r27, r23

000064c4 <__udivmodhi4_ep>:
    64c4:	88 1f       	adc	r24, r24
    64c6:	99 1f       	adc	r25, r25
    64c8:	5a 95       	dec	r21
    64ca:	a9 f7       	brne	.-22     	; 0x64b6 <__udivmodhi4_loop>
    64cc:	80 95       	com	r24
    64ce:	90 95       	com	r25
    64d0:	bc 01       	movw	r22, r24
    64d2:	cd 01       	movw	r24, r26
    64d4:	08 95       	ret

000064d6 <snprintf>:
    64d6:	ae e0       	ldi	r26, 0x0E	; 14
    64d8:	b0 e0       	ldi	r27, 0x00	; 0
    64da:	e1 e7       	ldi	r30, 0x71	; 113
    64dc:	f2 e3       	ldi	r31, 0x32	; 50
    64de:	0c 94 3a 35 	jmp	0x6a74	; 0x6a74 <__prologue_saves__+0x1c>
    64e2:	0d 89       	ldd	r16, Y+21	; 0x15
    64e4:	1e 89       	ldd	r17, Y+22	; 0x16
    64e6:	8f 89       	ldd	r24, Y+23	; 0x17
    64e8:	98 8d       	ldd	r25, Y+24	; 0x18
    64ea:	26 e0       	ldi	r18, 0x06	; 6
    64ec:	2c 83       	std	Y+4, r18	; 0x04
    64ee:	1a 83       	std	Y+2, r17	; 0x02
    64f0:	09 83       	std	Y+1, r16	; 0x01
    64f2:	97 ff       	sbrs	r25, 7
    64f4:	02 c0       	rjmp	.+4      	; 0x64fa <snprintf+0x24>
    64f6:	80 e0       	ldi	r24, 0x00	; 0
    64f8:	90 e8       	ldi	r25, 0x80	; 128
    64fa:	01 97       	sbiw	r24, 0x01	; 1
    64fc:	9e 83       	std	Y+6, r25	; 0x06
    64fe:	8d 83       	std	Y+5, r24	; 0x05
    6500:	ae 01       	movw	r20, r28
    6502:	45 5e       	subi	r20, 0xE5	; 229
    6504:	5f 4f       	sbci	r21, 0xFF	; 255
    6506:	69 8d       	ldd	r22, Y+25	; 0x19
    6508:	7a 8d       	ldd	r23, Y+26	; 0x1a
    650a:	ce 01       	movw	r24, r28
    650c:	01 96       	adiw	r24, 0x01	; 1
    650e:	0e 94 9b 32 	call	0x6536	; 0x6536 <vfprintf>
    6512:	4d 81       	ldd	r20, Y+5	; 0x05
    6514:	5e 81       	ldd	r21, Y+6	; 0x06
    6516:	57 fd       	sbrc	r21, 7
    6518:	0a c0       	rjmp	.+20     	; 0x652e <snprintf+0x58>
    651a:	2f 81       	ldd	r18, Y+7	; 0x07
    651c:	38 85       	ldd	r19, Y+8	; 0x08
    651e:	42 17       	cp	r20, r18
    6520:	53 07       	cpc	r21, r19
    6522:	0c f4       	brge	.+2      	; 0x6526 <snprintf+0x50>
    6524:	9a 01       	movw	r18, r20
    6526:	f8 01       	movw	r30, r16
    6528:	e2 0f       	add	r30, r18
    652a:	f3 1f       	adc	r31, r19
    652c:	10 82       	st	Z, r1
    652e:	2e 96       	adiw	r28, 0x0e	; 14
    6530:	e4 e0       	ldi	r30, 0x04	; 4
    6532:	0c 94 56 35 	jmp	0x6aac	; 0x6aac <__epilogue_restores__+0x1c>

00006536 <vfprintf>:
    6536:	ab e0       	ldi	r26, 0x0B	; 11
    6538:	b0 e0       	ldi	r27, 0x00	; 0
    653a:	e1 ea       	ldi	r30, 0xA1	; 161
    653c:	f2 e3       	ldi	r31, 0x32	; 50
    653e:	0c 94 2c 35 	jmp	0x6a58	; 0x6a58 <__prologue_saves__>
    6542:	6c 01       	movw	r12, r24
    6544:	7b 01       	movw	r14, r22
    6546:	8a 01       	movw	r16, r20
    6548:	fc 01       	movw	r30, r24
    654a:	17 82       	std	Z+7, r1	; 0x07
    654c:	16 82       	std	Z+6, r1	; 0x06
    654e:	83 81       	ldd	r24, Z+3	; 0x03
    6550:	81 ff       	sbrs	r24, 1
    6552:	cc c1       	rjmp	.+920    	; 0x68ec <vfprintf+0x3b6>
    6554:	ce 01       	movw	r24, r28
    6556:	01 96       	adiw	r24, 0x01	; 1
    6558:	3c 01       	movw	r6, r24
    655a:	f6 01       	movw	r30, r12
    655c:	93 81       	ldd	r25, Z+3	; 0x03
    655e:	f7 01       	movw	r30, r14
    6560:	93 fd       	sbrc	r25, 3
    6562:	85 91       	lpm	r24, Z+
    6564:	93 ff       	sbrs	r25, 3
    6566:	81 91       	ld	r24, Z+
    6568:	7f 01       	movw	r14, r30
    656a:	88 23       	and	r24, r24
    656c:	09 f4       	brne	.+2      	; 0x6570 <vfprintf+0x3a>
    656e:	ba c1       	rjmp	.+884    	; 0x68e4 <vfprintf+0x3ae>
    6570:	85 32       	cpi	r24, 0x25	; 37
    6572:	39 f4       	brne	.+14     	; 0x6582 <vfprintf+0x4c>
    6574:	93 fd       	sbrc	r25, 3
    6576:	85 91       	lpm	r24, Z+
    6578:	93 ff       	sbrs	r25, 3
    657a:	81 91       	ld	r24, Z+
    657c:	7f 01       	movw	r14, r30
    657e:	85 32       	cpi	r24, 0x25	; 37
    6580:	29 f4       	brne	.+10     	; 0x658c <vfprintf+0x56>
    6582:	b6 01       	movw	r22, r12
    6584:	90 e0       	ldi	r25, 0x00	; 0
    6586:	0e 94 92 34 	call	0x6924	; 0x6924 <fputc>
    658a:	e7 cf       	rjmp	.-50     	; 0x655a <vfprintf+0x24>
    658c:	91 2c       	mov	r9, r1
    658e:	21 2c       	mov	r2, r1
    6590:	31 2c       	mov	r3, r1
    6592:	ff e1       	ldi	r31, 0x1F	; 31
    6594:	f3 15       	cp	r31, r3
    6596:	d8 f0       	brcs	.+54     	; 0x65ce <vfprintf+0x98>
    6598:	8b 32       	cpi	r24, 0x2B	; 43
    659a:	79 f0       	breq	.+30     	; 0x65ba <vfprintf+0x84>
    659c:	38 f4       	brcc	.+14     	; 0x65ac <vfprintf+0x76>
    659e:	80 32       	cpi	r24, 0x20	; 32
    65a0:	79 f0       	breq	.+30     	; 0x65c0 <vfprintf+0x8a>
    65a2:	83 32       	cpi	r24, 0x23	; 35
    65a4:	a1 f4       	brne	.+40     	; 0x65ce <vfprintf+0x98>
    65a6:	23 2d       	mov	r18, r3
    65a8:	20 61       	ori	r18, 0x10	; 16
    65aa:	1d c0       	rjmp	.+58     	; 0x65e6 <vfprintf+0xb0>
    65ac:	8d 32       	cpi	r24, 0x2D	; 45
    65ae:	61 f0       	breq	.+24     	; 0x65c8 <vfprintf+0x92>
    65b0:	80 33       	cpi	r24, 0x30	; 48
    65b2:	69 f4       	brne	.+26     	; 0x65ce <vfprintf+0x98>
    65b4:	23 2d       	mov	r18, r3
    65b6:	21 60       	ori	r18, 0x01	; 1
    65b8:	16 c0       	rjmp	.+44     	; 0x65e6 <vfprintf+0xb0>
    65ba:	83 2d       	mov	r24, r3
    65bc:	82 60       	ori	r24, 0x02	; 2
    65be:	38 2e       	mov	r3, r24
    65c0:	e3 2d       	mov	r30, r3
    65c2:	e4 60       	ori	r30, 0x04	; 4
    65c4:	3e 2e       	mov	r3, r30
    65c6:	2a c0       	rjmp	.+84     	; 0x661c <vfprintf+0xe6>
    65c8:	f3 2d       	mov	r31, r3
    65ca:	f8 60       	ori	r31, 0x08	; 8
    65cc:	1d c0       	rjmp	.+58     	; 0x6608 <vfprintf+0xd2>
    65ce:	37 fc       	sbrc	r3, 7
    65d0:	2d c0       	rjmp	.+90     	; 0x662c <vfprintf+0xf6>
    65d2:	20 ed       	ldi	r18, 0xD0	; 208
    65d4:	28 0f       	add	r18, r24
    65d6:	2a 30       	cpi	r18, 0x0A	; 10
    65d8:	40 f0       	brcs	.+16     	; 0x65ea <vfprintf+0xb4>
    65da:	8e 32       	cpi	r24, 0x2E	; 46
    65dc:	b9 f4       	brne	.+46     	; 0x660c <vfprintf+0xd6>
    65de:	36 fc       	sbrc	r3, 6
    65e0:	81 c1       	rjmp	.+770    	; 0x68e4 <vfprintf+0x3ae>
    65e2:	23 2d       	mov	r18, r3
    65e4:	20 64       	ori	r18, 0x40	; 64
    65e6:	32 2e       	mov	r3, r18
    65e8:	19 c0       	rjmp	.+50     	; 0x661c <vfprintf+0xe6>
    65ea:	36 fe       	sbrs	r3, 6
    65ec:	06 c0       	rjmp	.+12     	; 0x65fa <vfprintf+0xc4>
    65ee:	8a e0       	ldi	r24, 0x0A	; 10
    65f0:	98 9e       	mul	r9, r24
    65f2:	20 0d       	add	r18, r0
    65f4:	11 24       	eor	r1, r1
    65f6:	92 2e       	mov	r9, r18
    65f8:	11 c0       	rjmp	.+34     	; 0x661c <vfprintf+0xe6>
    65fa:	ea e0       	ldi	r30, 0x0A	; 10
    65fc:	2e 9e       	mul	r2, r30
    65fe:	20 0d       	add	r18, r0
    6600:	11 24       	eor	r1, r1
    6602:	22 2e       	mov	r2, r18
    6604:	f3 2d       	mov	r31, r3
    6606:	f0 62       	ori	r31, 0x20	; 32
    6608:	3f 2e       	mov	r3, r31
    660a:	08 c0       	rjmp	.+16     	; 0x661c <vfprintf+0xe6>
    660c:	8c 36       	cpi	r24, 0x6C	; 108
    660e:	21 f4       	brne	.+8      	; 0x6618 <vfprintf+0xe2>
    6610:	83 2d       	mov	r24, r3
    6612:	80 68       	ori	r24, 0x80	; 128
    6614:	38 2e       	mov	r3, r24
    6616:	02 c0       	rjmp	.+4      	; 0x661c <vfprintf+0xe6>
    6618:	88 36       	cpi	r24, 0x68	; 104
    661a:	41 f4       	brne	.+16     	; 0x662c <vfprintf+0xf6>
    661c:	f7 01       	movw	r30, r14
    661e:	93 fd       	sbrc	r25, 3
    6620:	85 91       	lpm	r24, Z+
    6622:	93 ff       	sbrs	r25, 3
    6624:	81 91       	ld	r24, Z+
    6626:	7f 01       	movw	r14, r30
    6628:	81 11       	cpse	r24, r1
    662a:	b3 cf       	rjmp	.-154    	; 0x6592 <vfprintf+0x5c>
    662c:	98 2f       	mov	r25, r24
    662e:	9f 7d       	andi	r25, 0xDF	; 223
    6630:	95 54       	subi	r25, 0x45	; 69
    6632:	93 30       	cpi	r25, 0x03	; 3
    6634:	28 f4       	brcc	.+10     	; 0x6640 <vfprintf+0x10a>
    6636:	0c 5f       	subi	r16, 0xFC	; 252
    6638:	1f 4f       	sbci	r17, 0xFF	; 255
    663a:	9f e3       	ldi	r25, 0x3F	; 63
    663c:	99 83       	std	Y+1, r25	; 0x01
    663e:	0d c0       	rjmp	.+26     	; 0x665a <vfprintf+0x124>
    6640:	83 36       	cpi	r24, 0x63	; 99
    6642:	31 f0       	breq	.+12     	; 0x6650 <vfprintf+0x11a>
    6644:	83 37       	cpi	r24, 0x73	; 115
    6646:	71 f0       	breq	.+28     	; 0x6664 <vfprintf+0x12e>
    6648:	83 35       	cpi	r24, 0x53	; 83
    664a:	09 f0       	breq	.+2      	; 0x664e <vfprintf+0x118>
    664c:	59 c0       	rjmp	.+178    	; 0x6700 <vfprintf+0x1ca>
    664e:	21 c0       	rjmp	.+66     	; 0x6692 <vfprintf+0x15c>
    6650:	f8 01       	movw	r30, r16
    6652:	80 81       	ld	r24, Z
    6654:	89 83       	std	Y+1, r24	; 0x01
    6656:	0e 5f       	subi	r16, 0xFE	; 254
    6658:	1f 4f       	sbci	r17, 0xFF	; 255
    665a:	88 24       	eor	r8, r8
    665c:	83 94       	inc	r8
    665e:	91 2c       	mov	r9, r1
    6660:	53 01       	movw	r10, r6
    6662:	13 c0       	rjmp	.+38     	; 0x668a <vfprintf+0x154>
    6664:	28 01       	movw	r4, r16
    6666:	f2 e0       	ldi	r31, 0x02	; 2
    6668:	4f 0e       	add	r4, r31
    666a:	51 1c       	adc	r5, r1
    666c:	f8 01       	movw	r30, r16
    666e:	a0 80       	ld	r10, Z
    6670:	b1 80       	ldd	r11, Z+1	; 0x01
    6672:	36 fe       	sbrs	r3, 6
    6674:	03 c0       	rjmp	.+6      	; 0x667c <vfprintf+0x146>
    6676:	69 2d       	mov	r22, r9
    6678:	70 e0       	ldi	r23, 0x00	; 0
    667a:	02 c0       	rjmp	.+4      	; 0x6680 <vfprintf+0x14a>
    667c:	6f ef       	ldi	r22, 0xFF	; 255
    667e:	7f ef       	ldi	r23, 0xFF	; 255
    6680:	c5 01       	movw	r24, r10
    6682:	0e 94 87 34 	call	0x690e	; 0x690e <strnlen>
    6686:	4c 01       	movw	r8, r24
    6688:	82 01       	movw	r16, r4
    668a:	f3 2d       	mov	r31, r3
    668c:	ff 77       	andi	r31, 0x7F	; 127
    668e:	3f 2e       	mov	r3, r31
    6690:	16 c0       	rjmp	.+44     	; 0x66be <vfprintf+0x188>
    6692:	28 01       	movw	r4, r16
    6694:	22 e0       	ldi	r18, 0x02	; 2
    6696:	42 0e       	add	r4, r18
    6698:	51 1c       	adc	r5, r1
    669a:	f8 01       	movw	r30, r16
    669c:	a0 80       	ld	r10, Z
    669e:	b1 80       	ldd	r11, Z+1	; 0x01
    66a0:	36 fe       	sbrs	r3, 6
    66a2:	03 c0       	rjmp	.+6      	; 0x66aa <vfprintf+0x174>
    66a4:	69 2d       	mov	r22, r9
    66a6:	70 e0       	ldi	r23, 0x00	; 0
    66a8:	02 c0       	rjmp	.+4      	; 0x66ae <vfprintf+0x178>
    66aa:	6f ef       	ldi	r22, 0xFF	; 255
    66ac:	7f ef       	ldi	r23, 0xFF	; 255
    66ae:	c5 01       	movw	r24, r10
    66b0:	0e 94 7c 34 	call	0x68f8	; 0x68f8 <strnlen_P>
    66b4:	4c 01       	movw	r8, r24
    66b6:	f3 2d       	mov	r31, r3
    66b8:	f0 68       	ori	r31, 0x80	; 128
    66ba:	3f 2e       	mov	r3, r31
    66bc:	82 01       	movw	r16, r4
    66be:	33 fc       	sbrc	r3, 3
    66c0:	1b c0       	rjmp	.+54     	; 0x66f8 <vfprintf+0x1c2>
    66c2:	82 2d       	mov	r24, r2
    66c4:	90 e0       	ldi	r25, 0x00	; 0
    66c6:	88 16       	cp	r8, r24
    66c8:	99 06       	cpc	r9, r25
    66ca:	b0 f4       	brcc	.+44     	; 0x66f8 <vfprintf+0x1c2>
    66cc:	b6 01       	movw	r22, r12
    66ce:	80 e2       	ldi	r24, 0x20	; 32
    66d0:	90 e0       	ldi	r25, 0x00	; 0
    66d2:	0e 94 92 34 	call	0x6924	; 0x6924 <fputc>
    66d6:	2a 94       	dec	r2
    66d8:	f4 cf       	rjmp	.-24     	; 0x66c2 <vfprintf+0x18c>
    66da:	f5 01       	movw	r30, r10
    66dc:	37 fc       	sbrc	r3, 7
    66de:	85 91       	lpm	r24, Z+
    66e0:	37 fe       	sbrs	r3, 7
    66e2:	81 91       	ld	r24, Z+
    66e4:	5f 01       	movw	r10, r30
    66e6:	b6 01       	movw	r22, r12
    66e8:	90 e0       	ldi	r25, 0x00	; 0
    66ea:	0e 94 92 34 	call	0x6924	; 0x6924 <fputc>
    66ee:	21 10       	cpse	r2, r1
    66f0:	2a 94       	dec	r2
    66f2:	21 e0       	ldi	r18, 0x01	; 1
    66f4:	82 1a       	sub	r8, r18
    66f6:	91 08       	sbc	r9, r1
    66f8:	81 14       	cp	r8, r1
    66fa:	91 04       	cpc	r9, r1
    66fc:	71 f7       	brne	.-36     	; 0x66da <vfprintf+0x1a4>
    66fe:	e8 c0       	rjmp	.+464    	; 0x68d0 <vfprintf+0x39a>
    6700:	84 36       	cpi	r24, 0x64	; 100
    6702:	11 f0       	breq	.+4      	; 0x6708 <vfprintf+0x1d2>
    6704:	89 36       	cpi	r24, 0x69	; 105
    6706:	41 f5       	brne	.+80     	; 0x6758 <vfprintf+0x222>
    6708:	f8 01       	movw	r30, r16
    670a:	37 fe       	sbrs	r3, 7
    670c:	07 c0       	rjmp	.+14     	; 0x671c <vfprintf+0x1e6>
    670e:	60 81       	ld	r22, Z
    6710:	71 81       	ldd	r23, Z+1	; 0x01
    6712:	82 81       	ldd	r24, Z+2	; 0x02
    6714:	93 81       	ldd	r25, Z+3	; 0x03
    6716:	0c 5f       	subi	r16, 0xFC	; 252
    6718:	1f 4f       	sbci	r17, 0xFF	; 255
    671a:	08 c0       	rjmp	.+16     	; 0x672c <vfprintf+0x1f6>
    671c:	60 81       	ld	r22, Z
    671e:	71 81       	ldd	r23, Z+1	; 0x01
    6720:	07 2e       	mov	r0, r23
    6722:	00 0c       	add	r0, r0
    6724:	88 0b       	sbc	r24, r24
    6726:	99 0b       	sbc	r25, r25
    6728:	0e 5f       	subi	r16, 0xFE	; 254
    672a:	1f 4f       	sbci	r17, 0xFF	; 255
    672c:	f3 2d       	mov	r31, r3
    672e:	ff 76       	andi	r31, 0x6F	; 111
    6730:	3f 2e       	mov	r3, r31
    6732:	97 ff       	sbrs	r25, 7
    6734:	09 c0       	rjmp	.+18     	; 0x6748 <vfprintf+0x212>
    6736:	90 95       	com	r25
    6738:	80 95       	com	r24
    673a:	70 95       	com	r23
    673c:	61 95       	neg	r22
    673e:	7f 4f       	sbci	r23, 0xFF	; 255
    6740:	8f 4f       	sbci	r24, 0xFF	; 255
    6742:	9f 4f       	sbci	r25, 0xFF	; 255
    6744:	f0 68       	ori	r31, 0x80	; 128
    6746:	3f 2e       	mov	r3, r31
    6748:	2a e0       	ldi	r18, 0x0A	; 10
    674a:	30 e0       	ldi	r19, 0x00	; 0
    674c:	a3 01       	movw	r20, r6
    674e:	0e 94 ce 34 	call	0x699c	; 0x699c <__ultoa_invert>
    6752:	88 2e       	mov	r8, r24
    6754:	86 18       	sub	r8, r6
    6756:	45 c0       	rjmp	.+138    	; 0x67e2 <vfprintf+0x2ac>
    6758:	85 37       	cpi	r24, 0x75	; 117
    675a:	31 f4       	brne	.+12     	; 0x6768 <vfprintf+0x232>
    675c:	23 2d       	mov	r18, r3
    675e:	2f 7e       	andi	r18, 0xEF	; 239
    6760:	b2 2e       	mov	r11, r18
    6762:	2a e0       	ldi	r18, 0x0A	; 10
    6764:	30 e0       	ldi	r19, 0x00	; 0
    6766:	25 c0       	rjmp	.+74     	; 0x67b2 <vfprintf+0x27c>
    6768:	93 2d       	mov	r25, r3
    676a:	99 7f       	andi	r25, 0xF9	; 249
    676c:	b9 2e       	mov	r11, r25
    676e:	8f 36       	cpi	r24, 0x6F	; 111
    6770:	c1 f0       	breq	.+48     	; 0x67a2 <vfprintf+0x26c>
    6772:	18 f4       	brcc	.+6      	; 0x677a <vfprintf+0x244>
    6774:	88 35       	cpi	r24, 0x58	; 88
    6776:	79 f0       	breq	.+30     	; 0x6796 <vfprintf+0x260>
    6778:	b5 c0       	rjmp	.+362    	; 0x68e4 <vfprintf+0x3ae>
    677a:	80 37       	cpi	r24, 0x70	; 112
    677c:	19 f0       	breq	.+6      	; 0x6784 <vfprintf+0x24e>
    677e:	88 37       	cpi	r24, 0x78	; 120
    6780:	21 f0       	breq	.+8      	; 0x678a <vfprintf+0x254>
    6782:	b0 c0       	rjmp	.+352    	; 0x68e4 <vfprintf+0x3ae>
    6784:	e9 2f       	mov	r30, r25
    6786:	e0 61       	ori	r30, 0x10	; 16
    6788:	be 2e       	mov	r11, r30
    678a:	b4 fe       	sbrs	r11, 4
    678c:	0d c0       	rjmp	.+26     	; 0x67a8 <vfprintf+0x272>
    678e:	fb 2d       	mov	r31, r11
    6790:	f4 60       	ori	r31, 0x04	; 4
    6792:	bf 2e       	mov	r11, r31
    6794:	09 c0       	rjmp	.+18     	; 0x67a8 <vfprintf+0x272>
    6796:	34 fe       	sbrs	r3, 4
    6798:	0a c0       	rjmp	.+20     	; 0x67ae <vfprintf+0x278>
    679a:	29 2f       	mov	r18, r25
    679c:	26 60       	ori	r18, 0x06	; 6
    679e:	b2 2e       	mov	r11, r18
    67a0:	06 c0       	rjmp	.+12     	; 0x67ae <vfprintf+0x278>
    67a2:	28 e0       	ldi	r18, 0x08	; 8
    67a4:	30 e0       	ldi	r19, 0x00	; 0
    67a6:	05 c0       	rjmp	.+10     	; 0x67b2 <vfprintf+0x27c>
    67a8:	20 e1       	ldi	r18, 0x10	; 16
    67aa:	30 e0       	ldi	r19, 0x00	; 0
    67ac:	02 c0       	rjmp	.+4      	; 0x67b2 <vfprintf+0x27c>
    67ae:	20 e1       	ldi	r18, 0x10	; 16
    67b0:	32 e0       	ldi	r19, 0x02	; 2
    67b2:	f8 01       	movw	r30, r16
    67b4:	b7 fe       	sbrs	r11, 7
    67b6:	07 c0       	rjmp	.+14     	; 0x67c6 <vfprintf+0x290>
    67b8:	60 81       	ld	r22, Z
    67ba:	71 81       	ldd	r23, Z+1	; 0x01
    67bc:	82 81       	ldd	r24, Z+2	; 0x02
    67be:	93 81       	ldd	r25, Z+3	; 0x03
    67c0:	0c 5f       	subi	r16, 0xFC	; 252
    67c2:	1f 4f       	sbci	r17, 0xFF	; 255
    67c4:	06 c0       	rjmp	.+12     	; 0x67d2 <vfprintf+0x29c>
    67c6:	60 81       	ld	r22, Z
    67c8:	71 81       	ldd	r23, Z+1	; 0x01
    67ca:	80 e0       	ldi	r24, 0x00	; 0
    67cc:	90 e0       	ldi	r25, 0x00	; 0
    67ce:	0e 5f       	subi	r16, 0xFE	; 254
    67d0:	1f 4f       	sbci	r17, 0xFF	; 255
    67d2:	a3 01       	movw	r20, r6
    67d4:	0e 94 ce 34 	call	0x699c	; 0x699c <__ultoa_invert>
    67d8:	88 2e       	mov	r8, r24
    67da:	86 18       	sub	r8, r6
    67dc:	fb 2d       	mov	r31, r11
    67de:	ff 77       	andi	r31, 0x7F	; 127
    67e0:	3f 2e       	mov	r3, r31
    67e2:	36 fe       	sbrs	r3, 6
    67e4:	0d c0       	rjmp	.+26     	; 0x6800 <vfprintf+0x2ca>
    67e6:	23 2d       	mov	r18, r3
    67e8:	2e 7f       	andi	r18, 0xFE	; 254
    67ea:	a2 2e       	mov	r10, r18
    67ec:	89 14       	cp	r8, r9
    67ee:	58 f4       	brcc	.+22     	; 0x6806 <vfprintf+0x2d0>
    67f0:	34 fe       	sbrs	r3, 4
    67f2:	0b c0       	rjmp	.+22     	; 0x680a <vfprintf+0x2d4>
    67f4:	32 fc       	sbrc	r3, 2
    67f6:	09 c0       	rjmp	.+18     	; 0x680a <vfprintf+0x2d4>
    67f8:	83 2d       	mov	r24, r3
    67fa:	8e 7e       	andi	r24, 0xEE	; 238
    67fc:	a8 2e       	mov	r10, r24
    67fe:	05 c0       	rjmp	.+10     	; 0x680a <vfprintf+0x2d4>
    6800:	b8 2c       	mov	r11, r8
    6802:	a3 2c       	mov	r10, r3
    6804:	03 c0       	rjmp	.+6      	; 0x680c <vfprintf+0x2d6>
    6806:	b8 2c       	mov	r11, r8
    6808:	01 c0       	rjmp	.+2      	; 0x680c <vfprintf+0x2d6>
    680a:	b9 2c       	mov	r11, r9
    680c:	a4 fe       	sbrs	r10, 4
    680e:	0f c0       	rjmp	.+30     	; 0x682e <vfprintf+0x2f8>
    6810:	fe 01       	movw	r30, r28
    6812:	e8 0d       	add	r30, r8
    6814:	f1 1d       	adc	r31, r1
    6816:	80 81       	ld	r24, Z
    6818:	80 33       	cpi	r24, 0x30	; 48
    681a:	21 f4       	brne	.+8      	; 0x6824 <vfprintf+0x2ee>
    681c:	9a 2d       	mov	r25, r10
    681e:	99 7e       	andi	r25, 0xE9	; 233
    6820:	a9 2e       	mov	r10, r25
    6822:	09 c0       	rjmp	.+18     	; 0x6836 <vfprintf+0x300>
    6824:	a2 fe       	sbrs	r10, 2
    6826:	06 c0       	rjmp	.+12     	; 0x6834 <vfprintf+0x2fe>
    6828:	b3 94       	inc	r11
    682a:	b3 94       	inc	r11
    682c:	04 c0       	rjmp	.+8      	; 0x6836 <vfprintf+0x300>
    682e:	8a 2d       	mov	r24, r10
    6830:	86 78       	andi	r24, 0x86	; 134
    6832:	09 f0       	breq	.+2      	; 0x6836 <vfprintf+0x300>
    6834:	b3 94       	inc	r11
    6836:	a3 fc       	sbrc	r10, 3
    6838:	11 c0       	rjmp	.+34     	; 0x685c <vfprintf+0x326>
    683a:	a0 fe       	sbrs	r10, 0
    683c:	06 c0       	rjmp	.+12     	; 0x684a <vfprintf+0x314>
    683e:	b2 14       	cp	r11, r2
    6840:	88 f4       	brcc	.+34     	; 0x6864 <vfprintf+0x32e>
    6842:	28 0c       	add	r2, r8
    6844:	92 2c       	mov	r9, r2
    6846:	9b 18       	sub	r9, r11
    6848:	0e c0       	rjmp	.+28     	; 0x6866 <vfprintf+0x330>
    684a:	b2 14       	cp	r11, r2
    684c:	60 f4       	brcc	.+24     	; 0x6866 <vfprintf+0x330>
    684e:	b6 01       	movw	r22, r12
    6850:	80 e2       	ldi	r24, 0x20	; 32
    6852:	90 e0       	ldi	r25, 0x00	; 0
    6854:	0e 94 92 34 	call	0x6924	; 0x6924 <fputc>
    6858:	b3 94       	inc	r11
    685a:	f7 cf       	rjmp	.-18     	; 0x684a <vfprintf+0x314>
    685c:	b2 14       	cp	r11, r2
    685e:	18 f4       	brcc	.+6      	; 0x6866 <vfprintf+0x330>
    6860:	2b 18       	sub	r2, r11
    6862:	02 c0       	rjmp	.+4      	; 0x6868 <vfprintf+0x332>
    6864:	98 2c       	mov	r9, r8
    6866:	21 2c       	mov	r2, r1
    6868:	a4 fe       	sbrs	r10, 4
    686a:	10 c0       	rjmp	.+32     	; 0x688c <vfprintf+0x356>
    686c:	b6 01       	movw	r22, r12
    686e:	80 e3       	ldi	r24, 0x30	; 48
    6870:	90 e0       	ldi	r25, 0x00	; 0
    6872:	0e 94 92 34 	call	0x6924	; 0x6924 <fputc>
    6876:	a2 fe       	sbrs	r10, 2
    6878:	17 c0       	rjmp	.+46     	; 0x68a8 <vfprintf+0x372>
    687a:	a1 fc       	sbrc	r10, 1
    687c:	03 c0       	rjmp	.+6      	; 0x6884 <vfprintf+0x34e>
    687e:	88 e7       	ldi	r24, 0x78	; 120
    6880:	90 e0       	ldi	r25, 0x00	; 0
    6882:	02 c0       	rjmp	.+4      	; 0x6888 <vfprintf+0x352>
    6884:	88 e5       	ldi	r24, 0x58	; 88
    6886:	90 e0       	ldi	r25, 0x00	; 0
    6888:	b6 01       	movw	r22, r12
    688a:	0c c0       	rjmp	.+24     	; 0x68a4 <vfprintf+0x36e>
    688c:	8a 2d       	mov	r24, r10
    688e:	86 78       	andi	r24, 0x86	; 134
    6890:	59 f0       	breq	.+22     	; 0x68a8 <vfprintf+0x372>
    6892:	a1 fe       	sbrs	r10, 1
    6894:	02 c0       	rjmp	.+4      	; 0x689a <vfprintf+0x364>
    6896:	8b e2       	ldi	r24, 0x2B	; 43
    6898:	01 c0       	rjmp	.+2      	; 0x689c <vfprintf+0x366>
    689a:	80 e2       	ldi	r24, 0x20	; 32
    689c:	a7 fc       	sbrc	r10, 7
    689e:	8d e2       	ldi	r24, 0x2D	; 45
    68a0:	b6 01       	movw	r22, r12
    68a2:	90 e0       	ldi	r25, 0x00	; 0
    68a4:	0e 94 92 34 	call	0x6924	; 0x6924 <fputc>
    68a8:	89 14       	cp	r8, r9
    68aa:	38 f4       	brcc	.+14     	; 0x68ba <vfprintf+0x384>
    68ac:	b6 01       	movw	r22, r12
    68ae:	80 e3       	ldi	r24, 0x30	; 48
    68b0:	90 e0       	ldi	r25, 0x00	; 0
    68b2:	0e 94 92 34 	call	0x6924	; 0x6924 <fputc>
    68b6:	9a 94       	dec	r9
    68b8:	f7 cf       	rjmp	.-18     	; 0x68a8 <vfprintf+0x372>
    68ba:	8a 94       	dec	r8
    68bc:	f3 01       	movw	r30, r6
    68be:	e8 0d       	add	r30, r8
    68c0:	f1 1d       	adc	r31, r1
    68c2:	80 81       	ld	r24, Z
    68c4:	b6 01       	movw	r22, r12
    68c6:	90 e0       	ldi	r25, 0x00	; 0
    68c8:	0e 94 92 34 	call	0x6924	; 0x6924 <fputc>
    68cc:	81 10       	cpse	r8, r1
    68ce:	f5 cf       	rjmp	.-22     	; 0x68ba <vfprintf+0x384>
    68d0:	22 20       	and	r2, r2
    68d2:	09 f4       	brne	.+2      	; 0x68d6 <vfprintf+0x3a0>
    68d4:	42 ce       	rjmp	.-892    	; 0x655a <vfprintf+0x24>
    68d6:	b6 01       	movw	r22, r12
    68d8:	80 e2       	ldi	r24, 0x20	; 32
    68da:	90 e0       	ldi	r25, 0x00	; 0
    68dc:	0e 94 92 34 	call	0x6924	; 0x6924 <fputc>
    68e0:	2a 94       	dec	r2
    68e2:	f6 cf       	rjmp	.-20     	; 0x68d0 <vfprintf+0x39a>
    68e4:	f6 01       	movw	r30, r12
    68e6:	86 81       	ldd	r24, Z+6	; 0x06
    68e8:	97 81       	ldd	r25, Z+7	; 0x07
    68ea:	02 c0       	rjmp	.+4      	; 0x68f0 <vfprintf+0x3ba>
    68ec:	8f ef       	ldi	r24, 0xFF	; 255
    68ee:	9f ef       	ldi	r25, 0xFF	; 255
    68f0:	2b 96       	adiw	r28, 0x0b	; 11
    68f2:	e2 e1       	ldi	r30, 0x12	; 18
    68f4:	0c 94 48 35 	jmp	0x6a90	; 0x6a90 <__epilogue_restores__>

000068f8 <strnlen_P>:
    68f8:	fc 01       	movw	r30, r24
    68fa:	05 90       	lpm	r0, Z+
    68fc:	61 50       	subi	r22, 0x01	; 1
    68fe:	70 40       	sbci	r23, 0x00	; 0
    6900:	01 10       	cpse	r0, r1
    6902:	d8 f7       	brcc	.-10     	; 0x68fa <strnlen_P+0x2>
    6904:	80 95       	com	r24
    6906:	90 95       	com	r25
    6908:	8e 0f       	add	r24, r30
    690a:	9f 1f       	adc	r25, r31
    690c:	08 95       	ret

0000690e <strnlen>:
    690e:	fc 01       	movw	r30, r24
    6910:	61 50       	subi	r22, 0x01	; 1
    6912:	70 40       	sbci	r23, 0x00	; 0
    6914:	01 90       	ld	r0, Z+
    6916:	01 10       	cpse	r0, r1
    6918:	d8 f7       	brcc	.-10     	; 0x6910 <strnlen+0x2>
    691a:	80 95       	com	r24
    691c:	90 95       	com	r25
    691e:	8e 0f       	add	r24, r30
    6920:	9f 1f       	adc	r25, r31
    6922:	08 95       	ret

00006924 <fputc>:
    6924:	0f 93       	push	r16
    6926:	1f 93       	push	r17
    6928:	cf 93       	push	r28
    692a:	df 93       	push	r29
    692c:	fb 01       	movw	r30, r22
    692e:	23 81       	ldd	r18, Z+3	; 0x03
    6930:	21 fd       	sbrc	r18, 1
    6932:	03 c0       	rjmp	.+6      	; 0x693a <fputc+0x16>
    6934:	8f ef       	ldi	r24, 0xFF	; 255
    6936:	9f ef       	ldi	r25, 0xFF	; 255
    6938:	2c c0       	rjmp	.+88     	; 0x6992 <fputc+0x6e>
    693a:	22 ff       	sbrs	r18, 2
    693c:	16 c0       	rjmp	.+44     	; 0x696a <fputc+0x46>
    693e:	46 81       	ldd	r20, Z+6	; 0x06
    6940:	57 81       	ldd	r21, Z+7	; 0x07
    6942:	24 81       	ldd	r18, Z+4	; 0x04
    6944:	35 81       	ldd	r19, Z+5	; 0x05
    6946:	42 17       	cp	r20, r18
    6948:	53 07       	cpc	r21, r19
    694a:	44 f4       	brge	.+16     	; 0x695c <fputc+0x38>
    694c:	a0 81       	ld	r26, Z
    694e:	b1 81       	ldd	r27, Z+1	; 0x01
    6950:	9d 01       	movw	r18, r26
    6952:	2f 5f       	subi	r18, 0xFF	; 255
    6954:	3f 4f       	sbci	r19, 0xFF	; 255
    6956:	31 83       	std	Z+1, r19	; 0x01
    6958:	20 83       	st	Z, r18
    695a:	8c 93       	st	X, r24
    695c:	26 81       	ldd	r18, Z+6	; 0x06
    695e:	37 81       	ldd	r19, Z+7	; 0x07
    6960:	2f 5f       	subi	r18, 0xFF	; 255
    6962:	3f 4f       	sbci	r19, 0xFF	; 255
    6964:	37 83       	std	Z+7, r19	; 0x07
    6966:	26 83       	std	Z+6, r18	; 0x06
    6968:	14 c0       	rjmp	.+40     	; 0x6992 <fputc+0x6e>
    696a:	8b 01       	movw	r16, r22
    696c:	ec 01       	movw	r28, r24
    696e:	fb 01       	movw	r30, r22
    6970:	00 84       	ldd	r0, Z+8	; 0x08
    6972:	f1 85       	ldd	r31, Z+9	; 0x09
    6974:	e0 2d       	mov	r30, r0
    6976:	09 95       	icall
    6978:	89 2b       	or	r24, r25
    697a:	e1 f6       	brne	.-72     	; 0x6934 <fputc+0x10>
    697c:	d8 01       	movw	r26, r16
    697e:	16 96       	adiw	r26, 0x06	; 6
    6980:	8d 91       	ld	r24, X+
    6982:	9c 91       	ld	r25, X
    6984:	17 97       	sbiw	r26, 0x07	; 7
    6986:	01 96       	adiw	r24, 0x01	; 1
    6988:	17 96       	adiw	r26, 0x07	; 7
    698a:	9c 93       	st	X, r25
    698c:	8e 93       	st	-X, r24
    698e:	16 97       	sbiw	r26, 0x06	; 6
    6990:	ce 01       	movw	r24, r28
    6992:	df 91       	pop	r29
    6994:	cf 91       	pop	r28
    6996:	1f 91       	pop	r17
    6998:	0f 91       	pop	r16
    699a:	08 95       	ret

0000699c <__ultoa_invert>:
    699c:	fa 01       	movw	r30, r20
    699e:	aa 27       	eor	r26, r26
    69a0:	28 30       	cpi	r18, 0x08	; 8
    69a2:	51 f1       	breq	.+84     	; 0x69f8 <__ultoa_invert+0x5c>
    69a4:	20 31       	cpi	r18, 0x10	; 16
    69a6:	81 f1       	breq	.+96     	; 0x6a08 <__ultoa_invert+0x6c>
    69a8:	e8 94       	clt
    69aa:	6f 93       	push	r22
    69ac:	6e 7f       	andi	r22, 0xFE	; 254
    69ae:	6e 5f       	subi	r22, 0xFE	; 254
    69b0:	7f 4f       	sbci	r23, 0xFF	; 255
    69b2:	8f 4f       	sbci	r24, 0xFF	; 255
    69b4:	9f 4f       	sbci	r25, 0xFF	; 255
    69b6:	af 4f       	sbci	r26, 0xFF	; 255
    69b8:	b1 e0       	ldi	r27, 0x01	; 1
    69ba:	3e d0       	rcall	.+124    	; 0x6a38 <__ultoa_invert+0x9c>
    69bc:	b4 e0       	ldi	r27, 0x04	; 4
    69be:	3c d0       	rcall	.+120    	; 0x6a38 <__ultoa_invert+0x9c>
    69c0:	67 0f       	add	r22, r23
    69c2:	78 1f       	adc	r23, r24
    69c4:	89 1f       	adc	r24, r25
    69c6:	9a 1f       	adc	r25, r26
    69c8:	a1 1d       	adc	r26, r1
    69ca:	68 0f       	add	r22, r24
    69cc:	79 1f       	adc	r23, r25
    69ce:	8a 1f       	adc	r24, r26
    69d0:	91 1d       	adc	r25, r1
    69d2:	a1 1d       	adc	r26, r1
    69d4:	6a 0f       	add	r22, r26
    69d6:	71 1d       	adc	r23, r1
    69d8:	81 1d       	adc	r24, r1
    69da:	91 1d       	adc	r25, r1
    69dc:	a1 1d       	adc	r26, r1
    69de:	20 d0       	rcall	.+64     	; 0x6a20 <__ultoa_invert+0x84>
    69e0:	09 f4       	brne	.+2      	; 0x69e4 <__ultoa_invert+0x48>
    69e2:	68 94       	set
    69e4:	3f 91       	pop	r19
    69e6:	2a e0       	ldi	r18, 0x0A	; 10
    69e8:	26 9f       	mul	r18, r22
    69ea:	11 24       	eor	r1, r1
    69ec:	30 19       	sub	r19, r0
    69ee:	30 5d       	subi	r19, 0xD0	; 208
    69f0:	31 93       	st	Z+, r19
    69f2:	de f6       	brtc	.-74     	; 0x69aa <__ultoa_invert+0xe>
    69f4:	cf 01       	movw	r24, r30
    69f6:	08 95       	ret
    69f8:	46 2f       	mov	r20, r22
    69fa:	47 70       	andi	r20, 0x07	; 7
    69fc:	40 5d       	subi	r20, 0xD0	; 208
    69fe:	41 93       	st	Z+, r20
    6a00:	b3 e0       	ldi	r27, 0x03	; 3
    6a02:	0f d0       	rcall	.+30     	; 0x6a22 <__ultoa_invert+0x86>
    6a04:	c9 f7       	brne	.-14     	; 0x69f8 <__ultoa_invert+0x5c>
    6a06:	f6 cf       	rjmp	.-20     	; 0x69f4 <__ultoa_invert+0x58>
    6a08:	46 2f       	mov	r20, r22
    6a0a:	4f 70       	andi	r20, 0x0F	; 15
    6a0c:	40 5d       	subi	r20, 0xD0	; 208
    6a0e:	4a 33       	cpi	r20, 0x3A	; 58
    6a10:	18 f0       	brcs	.+6      	; 0x6a18 <__ultoa_invert+0x7c>
    6a12:	49 5d       	subi	r20, 0xD9	; 217
    6a14:	31 fd       	sbrc	r19, 1
    6a16:	40 52       	subi	r20, 0x20	; 32
    6a18:	41 93       	st	Z+, r20
    6a1a:	02 d0       	rcall	.+4      	; 0x6a20 <__ultoa_invert+0x84>
    6a1c:	a9 f7       	brne	.-22     	; 0x6a08 <__ultoa_invert+0x6c>
    6a1e:	ea cf       	rjmp	.-44     	; 0x69f4 <__ultoa_invert+0x58>
    6a20:	b4 e0       	ldi	r27, 0x04	; 4
    6a22:	a6 95       	lsr	r26
    6a24:	97 95       	ror	r25
    6a26:	87 95       	ror	r24
    6a28:	77 95       	ror	r23
    6a2a:	67 95       	ror	r22
    6a2c:	ba 95       	dec	r27
    6a2e:	c9 f7       	brne	.-14     	; 0x6a22 <__ultoa_invert+0x86>
    6a30:	00 97       	sbiw	r24, 0x00	; 0
    6a32:	61 05       	cpc	r22, r1
    6a34:	71 05       	cpc	r23, r1
    6a36:	08 95       	ret
    6a38:	9b 01       	movw	r18, r22
    6a3a:	ac 01       	movw	r20, r24
    6a3c:	0a 2e       	mov	r0, r26
    6a3e:	06 94       	lsr	r0
    6a40:	57 95       	ror	r21
    6a42:	47 95       	ror	r20
    6a44:	37 95       	ror	r19
    6a46:	27 95       	ror	r18
    6a48:	ba 95       	dec	r27
    6a4a:	c9 f7       	brne	.-14     	; 0x6a3e <__ultoa_invert+0xa2>
    6a4c:	62 0f       	add	r22, r18
    6a4e:	73 1f       	adc	r23, r19
    6a50:	84 1f       	adc	r24, r20
    6a52:	95 1f       	adc	r25, r21
    6a54:	a0 1d       	adc	r26, r0
    6a56:	08 95       	ret

00006a58 <__prologue_saves__>:
    6a58:	2f 92       	push	r2
    6a5a:	3f 92       	push	r3
    6a5c:	4f 92       	push	r4
    6a5e:	5f 92       	push	r5
    6a60:	6f 92       	push	r6
    6a62:	7f 92       	push	r7
    6a64:	8f 92       	push	r8
    6a66:	9f 92       	push	r9
    6a68:	af 92       	push	r10
    6a6a:	bf 92       	push	r11
    6a6c:	cf 92       	push	r12
    6a6e:	df 92       	push	r13
    6a70:	ef 92       	push	r14
    6a72:	ff 92       	push	r15
    6a74:	0f 93       	push	r16
    6a76:	1f 93       	push	r17
    6a78:	cf 93       	push	r28
    6a7a:	df 93       	push	r29
    6a7c:	cd b7       	in	r28, 0x3d	; 61
    6a7e:	de b7       	in	r29, 0x3e	; 62
    6a80:	ca 1b       	sub	r28, r26
    6a82:	db 0b       	sbc	r29, r27
    6a84:	0f b6       	in	r0, 0x3f	; 63
    6a86:	f8 94       	cli
    6a88:	de bf       	out	0x3e, r29	; 62
    6a8a:	0f be       	out	0x3f, r0	; 63
    6a8c:	cd bf       	out	0x3d, r28	; 61
    6a8e:	09 94       	ijmp

00006a90 <__epilogue_restores__>:
    6a90:	2a 88       	ldd	r2, Y+18	; 0x12
    6a92:	39 88       	ldd	r3, Y+17	; 0x11
    6a94:	48 88       	ldd	r4, Y+16	; 0x10
    6a96:	5f 84       	ldd	r5, Y+15	; 0x0f
    6a98:	6e 84       	ldd	r6, Y+14	; 0x0e
    6a9a:	7d 84       	ldd	r7, Y+13	; 0x0d
    6a9c:	8c 84       	ldd	r8, Y+12	; 0x0c
    6a9e:	9b 84       	ldd	r9, Y+11	; 0x0b
    6aa0:	aa 84       	ldd	r10, Y+10	; 0x0a
    6aa2:	b9 84       	ldd	r11, Y+9	; 0x09
    6aa4:	c8 84       	ldd	r12, Y+8	; 0x08
    6aa6:	df 80       	ldd	r13, Y+7	; 0x07
    6aa8:	ee 80       	ldd	r14, Y+6	; 0x06
    6aaa:	fd 80       	ldd	r15, Y+5	; 0x05
    6aac:	0c 81       	ldd	r16, Y+4	; 0x04
    6aae:	1b 81       	ldd	r17, Y+3	; 0x03
    6ab0:	aa 81       	ldd	r26, Y+2	; 0x02
    6ab2:	b9 81       	ldd	r27, Y+1	; 0x01
    6ab4:	ce 0f       	add	r28, r30
    6ab6:	d1 1d       	adc	r29, r1
    6ab8:	0f b6       	in	r0, 0x3f	; 63
    6aba:	f8 94       	cli
    6abc:	de bf       	out	0x3e, r29	; 62
    6abe:	0f be       	out	0x3f, r0	; 63
    6ac0:	cd bf       	out	0x3d, r28	; 61
    6ac2:	ed 01       	movw	r28, r26
    6ac4:	08 95       	ret

00006ac6 <_exit>:
    6ac6:	f8 94       	cli

00006ac8 <__stop_program>:
    6ac8:	ff cf       	rjmp	.-2      	; 0x6ac8 <__stop_program>
