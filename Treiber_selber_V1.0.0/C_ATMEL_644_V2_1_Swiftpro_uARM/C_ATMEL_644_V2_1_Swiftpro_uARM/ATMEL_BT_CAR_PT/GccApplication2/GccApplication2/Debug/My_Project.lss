
My_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000011e  00800100  00001de2  00001e76  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001de2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000a4  0080021e  0080021e  00001f94  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001f94  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001ff0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  00002030  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000015bf  00000000  00000000  00002190  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b22  00000000  00000000  0000374f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000131e  00000000  00000000  00004271  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000570  00000000  00000000  00005590  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000973  00000000  00000000  00005b00  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b3e  00000000  00000000  00006473  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  00006fb1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 85 07 	jmp	0xf0a	; 0xf0a <__vector_16>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 cb 01 	jmp	0x396	; 0x396 <__vector_20>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      70:	0c 94 26 02 	jmp	0x44c	; 0x44c <__vector_28>
      74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d0 e1       	ldi	r29, 0x10	; 16
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	12 e0       	ldi	r17, 0x02	; 2
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	e2 ee       	ldi	r30, 0xE2	; 226
      90:	fd e1       	ldi	r31, 0x1D	; 29
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	ae 31       	cpi	r26, 0x1E	; 30
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	22 e0       	ldi	r18, 0x02	; 2
      a0:	ae e1       	ldi	r26, 0x1E	; 30
      a2:	b2 e0       	ldi	r27, 0x02	; 2
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	a2 3c       	cpi	r26, 0xC2	; 194
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 74 02 	call	0x4e8	; 0x4e8 <main>
      b2:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <get_DIP_Switch>:
{
	while (final_data[0]!='D')
	{
		to_pc('R');
	}
}
      ba:	cf 93       	push	r28
      bc:	df 93       	push	r29
      be:	00 d0       	rcall	.+0      	; 0xc0 <get_DIP_Switch+0x6>
      c0:	1f 92       	push	r1
      c2:	cd b7       	in	r28, 0x3d	; 61
      c4:	de b7       	in	r29, 0x3e	; 62
      c6:	19 82       	std	Y+1, r1	; 0x01
      c8:	82 e2       	ldi	r24, 0x22	; 34
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	22 e2       	ldi	r18, 0x22	; 34
      ce:	30 e0       	ldi	r19, 0x00	; 0
      d0:	f9 01       	movw	r30, r18
      d2:	20 81       	ld	r18, Z
      d4:	20 62       	ori	r18, 0x20	; 32
      d6:	fc 01       	movw	r30, r24
      d8:	20 83       	st	Z, r18
      da:	82 e2       	ldi	r24, 0x22	; 34
      dc:	90 e0       	ldi	r25, 0x00	; 0
      de:	22 e2       	ldi	r18, 0x22	; 34
      e0:	30 e0       	ldi	r19, 0x00	; 0
      e2:	f9 01       	movw	r30, r18
      e4:	20 81       	ld	r18, Z
      e6:	2f 7d       	andi	r18, 0xDF	; 223
      e8:	fc 01       	movw	r30, r24
      ea:	20 83       	st	Z, r18
      ec:	82 e2       	ldi	r24, 0x22	; 34
      ee:	90 e0       	ldi	r25, 0x00	; 0
      f0:	22 e2       	ldi	r18, 0x22	; 34
      f2:	30 e0       	ldi	r19, 0x00	; 0
      f4:	f9 01       	movw	r30, r18
      f6:	20 81       	ld	r18, Z
      f8:	20 62       	ori	r18, 0x20	; 32
      fa:	fc 01       	movw	r30, r24
      fc:	20 83       	st	Z, r18
      fe:	87 e0       	ldi	r24, 0x07	; 7
     100:	90 e0       	ldi	r25, 0x00	; 0
     102:	9b 83       	std	Y+3, r25	; 0x03
     104:	8a 83       	std	Y+2, r24	; 0x02
     106:	30 c0       	rjmp	.+96     	; 0x168 <get_DIP_Switch+0xae>
     108:	80 e2       	ldi	r24, 0x20	; 32
     10a:	90 e0       	ldi	r25, 0x00	; 0
     10c:	fc 01       	movw	r30, r24
     10e:	80 81       	ld	r24, Z
     110:	88 2f       	mov	r24, r24
     112:	90 e0       	ldi	r25, 0x00	; 0
     114:	80 78       	andi	r24, 0x80	; 128
     116:	99 27       	eor	r25, r25
     118:	47 e0       	ldi	r20, 0x07	; 7
     11a:	50 e0       	ldi	r21, 0x00	; 0
     11c:	2a 81       	ldd	r18, Y+2	; 0x02
     11e:	3b 81       	ldd	r19, Y+3	; 0x03
     120:	ba 01       	movw	r22, r20
     122:	62 1b       	sub	r22, r18
     124:	73 0b       	sbc	r23, r19
     126:	9b 01       	movw	r18, r22
     128:	02 c0       	rjmp	.+4      	; 0x12e <get_DIP_Switch+0x74>
     12a:	95 95       	asr	r25
     12c:	87 95       	ror	r24
     12e:	2a 95       	dec	r18
     130:	e2 f7       	brpl	.-8      	; 0x12a <get_DIP_Switch+0x70>
     132:	98 2f       	mov	r25, r24
     134:	89 81       	ldd	r24, Y+1	; 0x01
     136:	89 2b       	or	r24, r25
     138:	89 83       	std	Y+1, r24	; 0x01
     13a:	82 e2       	ldi	r24, 0x22	; 34
     13c:	90 e0       	ldi	r25, 0x00	; 0
     13e:	22 e2       	ldi	r18, 0x22	; 34
     140:	30 e0       	ldi	r19, 0x00	; 0
     142:	f9 01       	movw	r30, r18
     144:	20 81       	ld	r18, Z
     146:	2f 7b       	andi	r18, 0xBF	; 191
     148:	fc 01       	movw	r30, r24
     14a:	20 83       	st	Z, r18
     14c:	82 e2       	ldi	r24, 0x22	; 34
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	22 e2       	ldi	r18, 0x22	; 34
     152:	30 e0       	ldi	r19, 0x00	; 0
     154:	f9 01       	movw	r30, r18
     156:	20 81       	ld	r18, Z
     158:	20 64       	ori	r18, 0x40	; 64
     15a:	fc 01       	movw	r30, r24
     15c:	20 83       	st	Z, r18
     15e:	8a 81       	ldd	r24, Y+2	; 0x02
     160:	9b 81       	ldd	r25, Y+3	; 0x03
     162:	01 97       	sbiw	r24, 0x01	; 1
     164:	9b 83       	std	Y+3, r25	; 0x03
     166:	8a 83       	std	Y+2, r24	; 0x02
     168:	8a 81       	ldd	r24, Y+2	; 0x02
     16a:	9b 81       	ldd	r25, Y+3	; 0x03
     16c:	99 23       	and	r25, r25
     16e:	64 f6       	brge	.-104    	; 0x108 <get_DIP_Switch+0x4e>
     170:	89 81       	ldd	r24, Y+1	; 0x01
     172:	0f 90       	pop	r0
     174:	0f 90       	pop	r0
     176:	0f 90       	pop	r0
     178:	df 91       	pop	r29
     17a:	cf 91       	pop	r28
     17c:	08 95       	ret

0000017e <get_LCD_Taster>:
     17e:	cf 93       	push	r28
     180:	df 93       	push	r29
     182:	1f 92       	push	r1
     184:	cd b7       	in	r28, 0x3d	; 61
     186:	de b7       	in	r29, 0x3e	; 62
     188:	85 e2       	ldi	r24, 0x25	; 37
     18a:	90 e0       	ldi	r25, 0x00	; 0
     18c:	25 e2       	ldi	r18, 0x25	; 37
     18e:	30 e0       	ldi	r19, 0x00	; 0
     190:	f9 01       	movw	r30, r18
     192:	20 81       	ld	r18, Z
     194:	20 7f       	andi	r18, 0xF0	; 240
     196:	fc 01       	movw	r30, r24
     198:	20 83       	st	Z, r18
     19a:	84 e2       	ldi	r24, 0x24	; 36
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	20 ef       	ldi	r18, 0xF0	; 240
     1a0:	fc 01       	movw	r30, r24
     1a2:	20 83       	st	Z, r18
	...
     1b8:	83 e2       	ldi	r24, 0x23	; 35
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	fc 01       	movw	r30, r24
     1be:	80 81       	ld	r24, Z
     1c0:	8f 70       	andi	r24, 0x0F	; 15
     1c2:	89 83       	std	Y+1, r24	; 0x01
     1c4:	84 e2       	ldi	r24, 0x24	; 36
     1c6:	90 e0       	ldi	r25, 0x00	; 0
     1c8:	2f ef       	ldi	r18, 0xFF	; 255
     1ca:	fc 01       	movw	r30, r24
     1cc:	20 83       	st	Z, r18
     1ce:	89 81       	ldd	r24, Y+1	; 0x01
     1d0:	0f 90       	pop	r0
     1d2:	df 91       	pop	r29
     1d4:	cf 91       	pop	r28
     1d6:	08 95       	ret

000001d8 <init_ADC>:
     1d8:	cf 93       	push	r28
     1da:	df 93       	push	r29
     1dc:	cd b7       	in	r28, 0x3d	; 61
     1de:	de b7       	in	r29, 0x3e	; 62
     1e0:	8a e7       	ldi	r24, 0x7A	; 122
     1e2:	90 e0       	ldi	r25, 0x00	; 0
     1e4:	2a e7       	ldi	r18, 0x7A	; 122
     1e6:	30 e0       	ldi	r19, 0x00	; 0
     1e8:	f9 01       	movw	r30, r18
     1ea:	20 81       	ld	r18, Z
     1ec:	20 68       	ori	r18, 0x80	; 128
     1ee:	fc 01       	movw	r30, r24
     1f0:	20 83       	st	Z, r18
     1f2:	8c e7       	ldi	r24, 0x7C	; 124
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	2c e7       	ldi	r18, 0x7C	; 124
     1f8:	30 e0       	ldi	r19, 0x00	; 0
     1fa:	f9 01       	movw	r30, r18
     1fc:	20 81       	ld	r18, Z
     1fe:	20 64       	ori	r18, 0x40	; 64
     200:	fc 01       	movw	r30, r24
     202:	20 83       	st	Z, r18
     204:	8a e7       	ldi	r24, 0x7A	; 122
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	2a e7       	ldi	r18, 0x7A	; 122
     20a:	30 e0       	ldi	r19, 0x00	; 0
     20c:	f9 01       	movw	r30, r18
     20e:	20 81       	ld	r18, Z
     210:	27 60       	ori	r18, 0x07	; 7
     212:	fc 01       	movw	r30, r24
     214:	20 83       	st	Z, r18
     216:	00 00       	nop
     218:	df 91       	pop	r29
     21a:	cf 91       	pop	r28
     21c:	08 95       	ret

0000021e <init_UART0>:
     21e:	cf 93       	push	r28
     220:	df 93       	push	r29
     222:	cd b7       	in	r28, 0x3d	; 61
     224:	de b7       	in	r29, 0x3e	; 62
     226:	84 ec       	ldi	r24, 0xC4	; 196
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	20 e1       	ldi	r18, 0x10	; 16
     22c:	30 e0       	ldi	r19, 0x00	; 0
     22e:	fc 01       	movw	r30, r24
     230:	31 83       	std	Z+1, r19	; 0x01
     232:	20 83       	st	Z, r18
     234:	80 ec       	ldi	r24, 0xC0	; 192
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	20 ec       	ldi	r18, 0xC0	; 192
     23a:	30 e0       	ldi	r19, 0x00	; 0
     23c:	f9 01       	movw	r30, r18
     23e:	20 81       	ld	r18, Z
     240:	22 60       	ori	r18, 0x02	; 2
     242:	fc 01       	movw	r30, r24
     244:	20 83       	st	Z, r18
     246:	81 ec       	ldi	r24, 0xC1	; 193
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	21 ec       	ldi	r18, 0xC1	; 193
     24c:	30 e0       	ldi	r19, 0x00	; 0
     24e:	f9 01       	movw	r30, r18
     250:	20 81       	ld	r18, Z
     252:	28 69       	ori	r18, 0x98	; 152
     254:	fc 01       	movw	r30, r24
     256:	20 83       	st	Z, r18
     258:	00 00       	nop
     25a:	df 91       	pop	r29
     25c:	cf 91       	pop	r28
     25e:	08 95       	ret

00000260 <init_UART1>:
     260:	cf 93       	push	r28
     262:	df 93       	push	r29
     264:	cd b7       	in	r28, 0x3d	; 61
     266:	de b7       	in	r29, 0x3e	; 62
     268:	8c ec       	ldi	r24, 0xCC	; 204
     26a:	90 e0       	ldi	r25, 0x00	; 0
     26c:	20 e1       	ldi	r18, 0x10	; 16
     26e:	30 e0       	ldi	r19, 0x00	; 0
     270:	fc 01       	movw	r30, r24
     272:	31 83       	std	Z+1, r19	; 0x01
     274:	20 83       	st	Z, r18
     276:	88 ec       	ldi	r24, 0xC8	; 200
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	28 ec       	ldi	r18, 0xC8	; 200
     27c:	30 e0       	ldi	r19, 0x00	; 0
     27e:	f9 01       	movw	r30, r18
     280:	20 81       	ld	r18, Z
     282:	22 60       	ori	r18, 0x02	; 2
     284:	fc 01       	movw	r30, r24
     286:	20 83       	st	Z, r18
     288:	89 ec       	ldi	r24, 0xC9	; 201
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	29 ec       	ldi	r18, 0xC9	; 201
     28e:	30 e0       	ldi	r19, 0x00	; 0
     290:	f9 01       	movw	r30, r18
     292:	20 81       	ld	r18, Z
     294:	28 69       	ori	r18, 0x98	; 152
     296:	fc 01       	movw	r30, r24
     298:	20 83       	st	Z, r18
     29a:	00 00       	nop
     29c:	df 91       	pop	r29
     29e:	cf 91       	pop	r28
     2a0:	08 95       	ret

000002a2 <send_Byte_0>:
     2a2:	cf 93       	push	r28
     2a4:	df 93       	push	r29
     2a6:	1f 92       	push	r1
     2a8:	cd b7       	in	r28, 0x3d	; 61
     2aa:	de b7       	in	r29, 0x3e	; 62
     2ac:	89 83       	std	Y+1, r24	; 0x01
     2ae:	00 00       	nop
     2b0:	80 ec       	ldi	r24, 0xC0	; 192
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	fc 01       	movw	r30, r24
     2b6:	80 81       	ld	r24, Z
     2b8:	88 2f       	mov	r24, r24
     2ba:	90 e0       	ldi	r25, 0x00	; 0
     2bc:	80 72       	andi	r24, 0x20	; 32
     2be:	99 27       	eor	r25, r25
     2c0:	89 2b       	or	r24, r25
     2c2:	b1 f3       	breq	.-20     	; 0x2b0 <send_Byte_0+0xe>
     2c4:	86 ec       	ldi	r24, 0xC6	; 198
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	29 81       	ldd	r18, Y+1	; 0x01
     2ca:	fc 01       	movw	r30, r24
     2cc:	20 83       	st	Z, r18
     2ce:	00 00       	nop
     2d0:	0f 90       	pop	r0
     2d2:	df 91       	pop	r29
     2d4:	cf 91       	pop	r28
     2d6:	08 95       	ret

000002d8 <send_Byte_1>:
     2d8:	cf 93       	push	r28
     2da:	df 93       	push	r29
     2dc:	1f 92       	push	r1
     2de:	cd b7       	in	r28, 0x3d	; 61
     2e0:	de b7       	in	r29, 0x3e	; 62
     2e2:	89 83       	std	Y+1, r24	; 0x01
     2e4:	00 00       	nop
     2e6:	88 ec       	ldi	r24, 0xC8	; 200
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	fc 01       	movw	r30, r24
     2ec:	80 81       	ld	r24, Z
     2ee:	88 2f       	mov	r24, r24
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	80 72       	andi	r24, 0x20	; 32
     2f4:	99 27       	eor	r25, r25
     2f6:	89 2b       	or	r24, r25
     2f8:	b1 f3       	breq	.-20     	; 0x2e6 <send_Byte_1+0xe>
     2fa:	8e ec       	ldi	r24, 0xCE	; 206
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	29 81       	ldd	r18, Y+1	; 0x01
     300:	fc 01       	movw	r30, r24
     302:	20 83       	st	Z, r18
     304:	00 00       	nop
     306:	0f 90       	pop	r0
     308:	df 91       	pop	r29
     30a:	cf 91       	pop	r28
     30c:	08 95       	ret

0000030e <to_uARM>:
     30e:	cf 93       	push	r28
     310:	df 93       	push	r29
     312:	00 d0       	rcall	.+0      	; 0x314 <to_uARM+0x6>
     314:	cd b7       	in	r28, 0x3d	; 61
     316:	de b7       	in	r29, 0x3e	; 62
     318:	9a 83       	std	Y+2, r25	; 0x02
     31a:	89 83       	std	Y+1, r24	; 0x01
     31c:	0b c0       	rjmp	.+22     	; 0x334 <to_uARM+0x26>
     31e:	89 81       	ldd	r24, Y+1	; 0x01
     320:	9a 81       	ldd	r25, Y+2	; 0x02
     322:	fc 01       	movw	r30, r24
     324:	80 81       	ld	r24, Z
     326:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <send_Byte_1>
     32a:	89 81       	ldd	r24, Y+1	; 0x01
     32c:	9a 81       	ldd	r25, Y+2	; 0x02
     32e:	01 96       	adiw	r24, 0x01	; 1
     330:	9a 83       	std	Y+2, r25	; 0x02
     332:	89 83       	std	Y+1, r24	; 0x01
     334:	89 81       	ldd	r24, Y+1	; 0x01
     336:	9a 81       	ldd	r25, Y+2	; 0x02
     338:	fc 01       	movw	r30, r24
     33a:	80 81       	ld	r24, Z
     33c:	88 23       	and	r24, r24
     33e:	79 f7       	brne	.-34     	; 0x31e <to_uARM+0x10>
     340:	10 92 20 02 	sts	0x0220, r1	; 0x800220 <uart_str_complete1>
     344:	00 00       	nop
     346:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <uart_str_complete1>
     34a:	88 23       	and	r24, r24
     34c:	e1 f3       	breq	.-8      	; 0x346 <to_uARM+0x38>
     34e:	00 00       	nop
     350:	0f 90       	pop	r0
     352:	0f 90       	pop	r0
     354:	df 91       	pop	r29
     356:	cf 91       	pop	r28
     358:	08 95       	ret

0000035a <send_to_uArm>:
     35a:	cf 93       	push	r28
     35c:	df 93       	push	r29
     35e:	00 d0       	rcall	.+0      	; 0x360 <send_to_uArm+0x6>
     360:	cd b7       	in	r28, 0x3d	; 61
     362:	de b7       	in	r29, 0x3e	; 62
     364:	9a 83       	std	Y+2, r25	; 0x02
     366:	89 83       	std	Y+1, r24	; 0x01
     368:	89 81       	ldd	r24, Y+1	; 0x01
     36a:	9a 81       	ldd	r25, Y+2	; 0x02
     36c:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     370:	80 e0       	ldi	r24, 0x00	; 0
     372:	91 e0       	ldi	r25, 0x01	; 1
     374:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     378:	04 c0       	rjmp	.+8      	; 0x382 <send_to_uArm+0x28>
     37a:	80 e0       	ldi	r24, 0x00	; 0
     37c:	91 e0       	ldi	r25, 0x01	; 1
     37e:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     382:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <uart_string1+0x4>
     386:	81 33       	cpi	r24, 0x31	; 49
     388:	c1 f3       	breq	.-16     	; 0x37a <send_to_uArm+0x20>
     38a:	00 00       	nop
     38c:	0f 90       	pop	r0
     38e:	0f 90       	pop	r0
     390:	df 91       	pop	r29
     392:	cf 91       	pop	r28
     394:	08 95       	ret

00000396 <__vector_20>:
     396:	1f 92       	push	r1
     398:	0f 92       	push	r0
     39a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     39e:	0f 92       	push	r0
     3a0:	11 24       	eor	r1, r1
     3a2:	2f 93       	push	r18
     3a4:	3f 93       	push	r19
     3a6:	8f 93       	push	r24
     3a8:	9f 93       	push	r25
     3aa:	ef 93       	push	r30
     3ac:	ff 93       	push	r31
     3ae:	cf 93       	push	r28
     3b0:	df 93       	push	r29
     3b2:	00 d0       	rcall	.+0      	; 0x3b4 <__vector_20+0x1e>
     3b4:	1f 92       	push	r1
     3b6:	cd b7       	in	r28, 0x3d	; 61
     3b8:	de b7       	in	r29, 0x3e	; 62
     3ba:	1a 82       	std	Y+2, r1	; 0x02
     3bc:	86 ec       	ldi	r24, 0xC6	; 198
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	fc 01       	movw	r30, r24
     3c2:	80 81       	ld	r24, Z
     3c4:	8b 83       	std	Y+3, r24	; 0x03
     3c6:	8b 81       	ldd	r24, Y+3	; 0x03
     3c8:	8a 30       	cpi	r24, 0x0A	; 10
     3ca:	99 f0       	breq	.+38     	; 0x3f2 <__vector_20+0x5c>
     3cc:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <uart_str_count1>
     3d0:	82 33       	cpi	r24, 0x32	; 50
     3d2:	78 f4       	brcc	.+30     	; 0x3f2 <__vector_20+0x5c>
     3d4:	80 91 21 02 	lds	r24, 0x0221	; 0x800221 <data_bytes_recieved>
     3d8:	88 2f       	mov	r24, r24
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	8a 55       	subi	r24, 0x5A	; 90
     3de:	9d 4f       	sbci	r25, 0xFD	; 253
     3e0:	2b 81       	ldd	r18, Y+3	; 0x03
     3e2:	fc 01       	movw	r30, r24
     3e4:	20 83       	st	Z, r18
     3e6:	80 91 21 02 	lds	r24, 0x0221	; 0x800221 <data_bytes_recieved>
     3ea:	8f 5f       	subi	r24, 0xFF	; 255
     3ec:	80 93 21 02 	sts	0x0221, r24	; 0x800221 <data_bytes_recieved>
     3f0:	1b c0       	rjmp	.+54     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     3f2:	19 82       	std	Y+1, r1	; 0x01
     3f4:	11 c0       	rjmp	.+34     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     3f6:	89 81       	ldd	r24, Y+1	; 0x01
     3f8:	88 2f       	mov	r24, r24
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	29 81       	ldd	r18, Y+1	; 0x01
     3fe:	22 2f       	mov	r18, r18
     400:	30 e0       	ldi	r19, 0x00	; 0
     402:	2a 55       	subi	r18, 0x5A	; 90
     404:	3d 4f       	sbci	r19, 0xFD	; 253
     406:	f9 01       	movw	r30, r18
     408:	20 81       	ld	r18, Z
     40a:	8c 54       	subi	r24, 0x4C	; 76
     40c:	9d 4f       	sbci	r25, 0xFD	; 253
     40e:	fc 01       	movw	r30, r24
     410:	20 83       	st	Z, r18
     412:	89 81       	ldd	r24, Y+1	; 0x01
     414:	8f 5f       	subi	r24, 0xFF	; 255
     416:	89 83       	std	Y+1, r24	; 0x01
     418:	80 91 21 02 	lds	r24, 0x0221	; 0x800221 <data_bytes_recieved>
     41c:	99 81       	ldd	r25, Y+1	; 0x01
     41e:	89 17       	cp	r24, r25
     420:	50 f7       	brcc	.-44     	; 0x3f6 <__vector_20+0x60>
     422:	81 e0       	ldi	r24, 0x01	; 1
     424:	80 93 1f 02 	sts	0x021F, r24	; 0x80021f <uart_str_complete>
     428:	00 00       	nop
     42a:	0f 90       	pop	r0
     42c:	0f 90       	pop	r0
     42e:	0f 90       	pop	r0
     430:	df 91       	pop	r29
     432:	cf 91       	pop	r28
     434:	ff 91       	pop	r31
     436:	ef 91       	pop	r30
     438:	9f 91       	pop	r25
     43a:	8f 91       	pop	r24
     43c:	3f 91       	pop	r19
     43e:	2f 91       	pop	r18
     440:	0f 90       	pop	r0
     442:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     446:	0f 90       	pop	r0
     448:	1f 90       	pop	r1
     44a:	18 95       	reti

0000044c <__vector_28>:
     44c:	1f 92       	push	r1
     44e:	0f 92       	push	r0
     450:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     454:	0f 92       	push	r0
     456:	11 24       	eor	r1, r1
     458:	2f 93       	push	r18
     45a:	8f 93       	push	r24
     45c:	9f 93       	push	r25
     45e:	ef 93       	push	r30
     460:	ff 93       	push	r31
     462:	cf 93       	push	r28
     464:	df 93       	push	r29
     466:	1f 92       	push	r1
     468:	cd b7       	in	r28, 0x3d	; 61
     46a:	de b7       	in	r29, 0x3e	; 62
     46c:	8e ec       	ldi	r24, 0xCE	; 206
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	fc 01       	movw	r30, r24
     472:	80 81       	ld	r24, Z
     474:	89 83       	std	Y+1, r24	; 0x01
     476:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <uart_str_complete1>
     47a:	88 23       	and	r24, r24
     47c:	31 f5       	brne	.+76     	; 0x4ca <__vector_28+0x7e>
     47e:	89 81       	ldd	r24, Y+1	; 0x01
     480:	8a 30       	cpi	r24, 0x0A	; 10
     482:	b1 f0       	breq	.+44     	; 0x4b0 <__vector_28+0x64>
     484:	89 81       	ldd	r24, Y+1	; 0x01
     486:	8d 30       	cpi	r24, 0x0D	; 13
     488:	99 f0       	breq	.+38     	; 0x4b0 <__vector_28+0x64>
     48a:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <uart_str_count1>
     48e:	82 33       	cpi	r24, 0x32	; 50
     490:	78 f4       	brcc	.+30     	; 0x4b0 <__vector_28+0x64>
     492:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <uart_str_count1>
     496:	88 2f       	mov	r24, r24
     498:	90 e0       	ldi	r25, 0x00	; 0
     49a:	8a 5a       	subi	r24, 0xAA	; 170
     49c:	9d 4f       	sbci	r25, 0xFD	; 253
     49e:	29 81       	ldd	r18, Y+1	; 0x01
     4a0:	fc 01       	movw	r30, r24
     4a2:	20 83       	st	Z, r18
     4a4:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <uart_str_count1>
     4a8:	8f 5f       	subi	r24, 0xFF	; 255
     4aa:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <uart_str_count1>
     4ae:	0d c0       	rjmp	.+26     	; 0x4ca <__vector_28+0x7e>
     4b0:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <uart_str_count1>
     4b4:	88 2f       	mov	r24, r24
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	8a 5a       	subi	r24, 0xAA	; 170
     4ba:	9d 4f       	sbci	r25, 0xFD	; 253
     4bc:	fc 01       	movw	r30, r24
     4be:	10 82       	st	Z, r1
     4c0:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <uart_str_count1>
     4c4:	81 e0       	ldi	r24, 0x01	; 1
     4c6:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <uart_str_complete1>
     4ca:	00 00       	nop
     4cc:	0f 90       	pop	r0
     4ce:	df 91       	pop	r29
     4d0:	cf 91       	pop	r28
     4d2:	ff 91       	pop	r31
     4d4:	ef 91       	pop	r30
     4d6:	9f 91       	pop	r25
     4d8:	8f 91       	pop	r24
     4da:	2f 91       	pop	r18
     4dc:	0f 90       	pop	r0
     4de:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     4e2:	0f 90       	pop	r0
     4e4:	1f 90       	pop	r1
     4e6:	18 95       	reti

000004e8 <main>:


int main (void)
{
     4e8:	cf 92       	push	r12
     4ea:	ef 92       	push	r14
     4ec:	0f 93       	push	r16
     4ee:	1f 93       	push	r17
     4f0:	cf 93       	push	r28
     4f2:	df 93       	push	r29
     4f4:	cd b7       	in	r28, 0x3d	; 61
     4f6:	de b7       	in	r29, 0x3e	; 62
     4f8:	ce 56       	subi	r28, 0x6E	; 110
     4fa:	d1 09       	sbc	r29, r1
     4fc:	0f b6       	in	r0, 0x3f	; 63
     4fe:	f8 94       	cli
     500:	de bf       	out	0x3e, r29	; 62
     502:	0f be       	out	0x3f, r0	; 63
     504:	cd bf       	out	0x3d, r28	; 61
	init_BT_CAR_V2_0();			// Das Board wird hier initialisiert	
     506:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <init_BT_CAR_V2_0>
	wait_1ms(1000);	
     50a:	68 ee       	ldi	r22, 0xE8	; 232
     50c:	73 e0       	ldi	r23, 0x03	; 3
     50e:	80 e0       	ldi	r24, 0x00	; 0
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	0e 94 0b 08 	call	0x1016	; 0x1016 <wait_1ms>
	clear_lcd();				// LCD clear
     516:	0e 94 11 0a 	call	0x1422	; 0x1422 <clear_lcd>
	init_ADC();
     51a:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <init_ADC>
	init_UART0();
     51e:	0e 94 0f 01 	call	0x21e	; 0x21e <init_UART0>
	init_UART1();
     522:	0e 94 30 01 	call	0x260	; 0x260 <init_UART1>
	int i;
	unsigned char direction;
	unsigned char data_1;
	unsigned char data_2;
	unsigned char data_3;
	unsigned char alt=0;
     526:	18 86       	std	Y+8, r1	; 0x08
	unsigned char neu=0;
     528:	19 86       	std	Y+9, r1	; 0x09
	int recieved_X; 
	int recieved_Y;
	unsigned char buffer [30];
	unsigned char check=0;
     52a:	1d 82       	std	Y+5, r1	; 0x05
	unsigned char counter=0;
     52c:	1e 82       	std	Y+6, r1	; 0x06
	unsigned char routine_done=0;
     52e:	1f 82       	std	Y+7, r1	; 0x07
	clear_lcd();
     530:	0e 94 11 0a 	call	0x1422	; 0x1422 <clear_lcd>
	while(1)
	{
	//	direction=get_direction();
		taster = get_LCD_Taster();
     534:	0e 94 bf 00 	call	0x17e	; 0x17e <get_LCD_Taster>
     538:	8a 87       	std	Y+10, r24	; 0x0a
		DIP_Switch=get_DIP_Switch();
     53a:	0e 94 5d 00 	call	0xba	; 0xba <get_DIP_Switch>
     53e:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <__data_end>
		
		if (taster&0x08)
     542:	8a 85       	ldd	r24, Y+10	; 0x0a
     544:	88 2f       	mov	r24, r24
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	88 70       	andi	r24, 0x08	; 8
     54a:	99 27       	eor	r25, r25
     54c:	89 2b       	or	r24, r25
     54e:	09 f4       	brne	.+2      	; 0x552 <main+0x6a>
     550:	fd c0       	rjmp	.+506    	; 0x74c <main+0x264>
		{
			send_to_uArm("G0 X200 Y0 Z150 F1000\n");			//ausgansgpkt	(200 0 150)
     552:	89 ea       	ldi	r24, 0xA9	; 169
     554:	91 e0       	ldi	r25, 0x01	; 1
     556:	0e 94 ad 01 	call	0x35a	; 0x35a <send_to_uArm>
			while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     55a:	04 c0       	rjmp	.+8      	; 0x564 <main+0x7c>
			{
				to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
     55c:	80 e0       	ldi	r24, 0x00	; 0
     55e:	91 e0       	ldi	r25, 0x01	; 1
     560:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
		DIP_Switch=get_DIP_Switch();
		
		if (taster&0x08)
		{
			send_to_uArm("G0 X200 Y0 Z150 F1000\n");			//ausgansgpkt	(200 0 150)
			while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     564:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <uart_string1+0x4>
     568:	81 33       	cpi	r24, 0x31	; 49
     56a:	c1 f3       	breq	.-16     	; 0x55c <main+0x74>
			{
				to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
				//write_zahl(0,10,uart_string[4],4,0,0);
			}
			//to_uARM("M2210 F2000 T200\n");
			to_uARM("M2210 F500 T100\n");
     56c:	80 ec       	ldi	r24, 0xC0	; 192
     56e:	91 e0       	ldi	r25, 0x01	; 1
     570:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     574:	80 e0       	ldi	r24, 0x00	; 0
     576:	90 e0       	ldi	r25, 0x00	; 0
     578:	a8 ec       	ldi	r26, 0xC8	; 200
     57a:	b2 e4       	ldi	r27, 0x42	; 66
     57c:	8f 8b       	std	Y+23, r24	; 0x17
     57e:	98 8f       	std	Y+24, r25	; 0x18
     580:	a9 8f       	std	Y+25, r26	; 0x19
     582:	ba 8f       	std	Y+26, r27	; 0x1a

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     584:	20 e0       	ldi	r18, 0x00	; 0
     586:	30 e0       	ldi	r19, 0x00	; 0
     588:	4a e7       	ldi	r20, 0x7A	; 122
     58a:	55 e4       	ldi	r21, 0x45	; 69
     58c:	6f 89       	ldd	r22, Y+23	; 0x17
     58e:	78 8d       	ldd	r23, Y+24	; 0x18
     590:	89 8d       	ldd	r24, Y+25	; 0x19
     592:	9a 8d       	ldd	r25, Y+26	; 0x1a
     594:	0e 94 18 0b 	call	0x1630	; 0x1630 <__mulsf3>
     598:	dc 01       	movw	r26, r24
     59a:	cb 01       	movw	r24, r22
     59c:	89 a7       	std	Y+41, r24	; 0x29
     59e:	9a a7       	std	Y+42, r25	; 0x2a
     5a0:	ab a7       	std	Y+43, r26	; 0x2b
     5a2:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
     5a4:	20 e0       	ldi	r18, 0x00	; 0
     5a6:	30 e0       	ldi	r19, 0x00	; 0
     5a8:	40 e8       	ldi	r20, 0x80	; 128
     5aa:	5f e3       	ldi	r21, 0x3F	; 63
     5ac:	69 a5       	ldd	r22, Y+41	; 0x29
     5ae:	7a a5       	ldd	r23, Y+42	; 0x2a
     5b0:	8b a5       	ldd	r24, Y+43	; 0x2b
     5b2:	9c a5       	ldd	r25, Y+44	; 0x2c
     5b4:	0e 94 92 0a 	call	0x1524	; 0x1524 <__cmpsf2>
     5b8:	88 23       	and	r24, r24
     5ba:	2c f4       	brge	.+10     	; 0x5c6 <main+0xde>
		__ticks = 1;
     5bc:	81 e0       	ldi	r24, 0x01	; 1
     5be:	90 e0       	ldi	r25, 0x00	; 0
     5c0:	9e a7       	std	Y+46, r25	; 0x2e
     5c2:	8d a7       	std	Y+45, r24	; 0x2d
     5c4:	3f c0       	rjmp	.+126    	; 0x644 <main+0x15c>
	else if (__tmp > 65535)
     5c6:	20 e0       	ldi	r18, 0x00	; 0
     5c8:	3f ef       	ldi	r19, 0xFF	; 255
     5ca:	4f e7       	ldi	r20, 0x7F	; 127
     5cc:	57 e4       	ldi	r21, 0x47	; 71
     5ce:	69 a5       	ldd	r22, Y+41	; 0x29
     5d0:	7a a5       	ldd	r23, Y+42	; 0x2a
     5d2:	8b a5       	ldd	r24, Y+43	; 0x2b
     5d4:	9c a5       	ldd	r25, Y+44	; 0x2c
     5d6:	0e 94 13 0b 	call	0x1626	; 0x1626 <__gesf2>
     5da:	18 16       	cp	r1, r24
     5dc:	4c f5       	brge	.+82     	; 0x630 <main+0x148>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5de:	20 e0       	ldi	r18, 0x00	; 0
     5e0:	30 e0       	ldi	r19, 0x00	; 0
     5e2:	40 e2       	ldi	r20, 0x20	; 32
     5e4:	51 e4       	ldi	r21, 0x41	; 65
     5e6:	6f 89       	ldd	r22, Y+23	; 0x17
     5e8:	78 8d       	ldd	r23, Y+24	; 0x18
     5ea:	89 8d       	ldd	r24, Y+25	; 0x19
     5ec:	9a 8d       	ldd	r25, Y+26	; 0x1a
     5ee:	0e 94 18 0b 	call	0x1630	; 0x1630 <__mulsf3>
     5f2:	dc 01       	movw	r26, r24
     5f4:	cb 01       	movw	r24, r22
     5f6:	bc 01       	movw	r22, r24
     5f8:	cd 01       	movw	r24, r26
     5fa:	0e 94 97 0a 	call	0x152e	; 0x152e <__fixunssfsi>
     5fe:	dc 01       	movw	r26, r24
     600:	cb 01       	movw	r24, r22
     602:	9e a7       	std	Y+46, r25	; 0x2e
     604:	8d a7       	std	Y+45, r24	; 0x2d
     606:	0f c0       	rjmp	.+30     	; 0x626 <main+0x13e>
     608:	80 e9       	ldi	r24, 0x90	; 144
     60a:	91 e0       	ldi	r25, 0x01	; 1
     60c:	98 ab       	std	Y+48, r25	; 0x30
     60e:	8f a7       	std	Y+47, r24	; 0x2f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     610:	8f a5       	ldd	r24, Y+47	; 0x2f
     612:	98 a9       	ldd	r25, Y+48	; 0x30
     614:	01 97       	sbiw	r24, 0x01	; 1
     616:	f1 f7       	brne	.-4      	; 0x614 <main+0x12c>
     618:	98 ab       	std	Y+48, r25	; 0x30
     61a:	8f a7       	std	Y+47, r24	; 0x2f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     61c:	8d a5       	ldd	r24, Y+45	; 0x2d
     61e:	9e a5       	ldd	r25, Y+46	; 0x2e
     620:	01 97       	sbiw	r24, 0x01	; 1
     622:	9e a7       	std	Y+46, r25	; 0x2e
     624:	8d a7       	std	Y+45, r24	; 0x2d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     626:	8d a5       	ldd	r24, Y+45	; 0x2d
     628:	9e a5       	ldd	r25, Y+46	; 0x2e
     62a:	89 2b       	or	r24, r25
     62c:	69 f7       	brne	.-38     	; 0x608 <main+0x120>
     62e:	14 c0       	rjmp	.+40     	; 0x658 <main+0x170>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     630:	69 a5       	ldd	r22, Y+41	; 0x29
     632:	7a a5       	ldd	r23, Y+42	; 0x2a
     634:	8b a5       	ldd	r24, Y+43	; 0x2b
     636:	9c a5       	ldd	r25, Y+44	; 0x2c
     638:	0e 94 97 0a 	call	0x152e	; 0x152e <__fixunssfsi>
     63c:	dc 01       	movw	r26, r24
     63e:	cb 01       	movw	r24, r22
     640:	9e a7       	std	Y+46, r25	; 0x2e
     642:	8d a7       	std	Y+45, r24	; 0x2d
     644:	8d a5       	ldd	r24, Y+45	; 0x2d
     646:	9e a5       	ldd	r25, Y+46	; 0x2e
     648:	9a ab       	std	Y+50, r25	; 0x32
     64a:	89 ab       	std	Y+49, r24	; 0x31
     64c:	89 a9       	ldd	r24, Y+49	; 0x31
     64e:	9a a9       	ldd	r25, Y+50	; 0x32
     650:	01 97       	sbiw	r24, 0x01	; 1
     652:	f1 f7       	brne	.-4      	; 0x650 <main+0x168>
     654:	9a ab       	std	Y+50, r25	; 0x32
     656:	89 ab       	std	Y+49, r24	; 0x31
			_delay_ms(100);
			to_uARM("M2210 F1000 T200\n");
     658:	81 ed       	ldi	r24, 0xD1	; 209
     65a:	91 e0       	ldi	r25, 0x01	; 1
     65c:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     660:	80 e0       	ldi	r24, 0x00	; 0
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	a8 e4       	ldi	r26, 0x48	; 72
     666:	b3 e4       	ldi	r27, 0x43	; 67
     668:	8b 8f       	std	Y+27, r24	; 0x1b
     66a:	9c 8f       	std	Y+28, r25	; 0x1c
     66c:	ad 8f       	std	Y+29, r26	; 0x1d
     66e:	be 8f       	std	Y+30, r27	; 0x1e

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     670:	20 e0       	ldi	r18, 0x00	; 0
     672:	30 e0       	ldi	r19, 0x00	; 0
     674:	4a e7       	ldi	r20, 0x7A	; 122
     676:	55 e4       	ldi	r21, 0x45	; 69
     678:	6b 8d       	ldd	r22, Y+27	; 0x1b
     67a:	7c 8d       	ldd	r23, Y+28	; 0x1c
     67c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     67e:	9e 8d       	ldd	r25, Y+30	; 0x1e
     680:	0e 94 18 0b 	call	0x1630	; 0x1630 <__mulsf3>
     684:	dc 01       	movw	r26, r24
     686:	cb 01       	movw	r24, r22
     688:	8f 8f       	std	Y+31, r24	; 0x1f
     68a:	98 a3       	std	Y+32, r25	; 0x20
     68c:	a9 a3       	std	Y+33, r26	; 0x21
     68e:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
     690:	20 e0       	ldi	r18, 0x00	; 0
     692:	30 e0       	ldi	r19, 0x00	; 0
     694:	40 e8       	ldi	r20, 0x80	; 128
     696:	5f e3       	ldi	r21, 0x3F	; 63
     698:	6f 8d       	ldd	r22, Y+31	; 0x1f
     69a:	78 a1       	ldd	r23, Y+32	; 0x20
     69c:	89 a1       	ldd	r24, Y+33	; 0x21
     69e:	9a a1       	ldd	r25, Y+34	; 0x22
     6a0:	0e 94 92 0a 	call	0x1524	; 0x1524 <__cmpsf2>
     6a4:	88 23       	and	r24, r24
     6a6:	2c f4       	brge	.+10     	; 0x6b2 <main+0x1ca>
		__ticks = 1;
     6a8:	81 e0       	ldi	r24, 0x01	; 1
     6aa:	90 e0       	ldi	r25, 0x00	; 0
     6ac:	9c a3       	std	Y+36, r25	; 0x24
     6ae:	8b a3       	std	Y+35, r24	; 0x23
     6b0:	3f c0       	rjmp	.+126    	; 0x730 <main+0x248>
	else if (__tmp > 65535)
     6b2:	20 e0       	ldi	r18, 0x00	; 0
     6b4:	3f ef       	ldi	r19, 0xFF	; 255
     6b6:	4f e7       	ldi	r20, 0x7F	; 127
     6b8:	57 e4       	ldi	r21, 0x47	; 71
     6ba:	6f 8d       	ldd	r22, Y+31	; 0x1f
     6bc:	78 a1       	ldd	r23, Y+32	; 0x20
     6be:	89 a1       	ldd	r24, Y+33	; 0x21
     6c0:	9a a1       	ldd	r25, Y+34	; 0x22
     6c2:	0e 94 13 0b 	call	0x1626	; 0x1626 <__gesf2>
     6c6:	18 16       	cp	r1, r24
     6c8:	4c f5       	brge	.+82     	; 0x71c <main+0x234>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     6ca:	20 e0       	ldi	r18, 0x00	; 0
     6cc:	30 e0       	ldi	r19, 0x00	; 0
     6ce:	40 e2       	ldi	r20, 0x20	; 32
     6d0:	51 e4       	ldi	r21, 0x41	; 65
     6d2:	6b 8d       	ldd	r22, Y+27	; 0x1b
     6d4:	7c 8d       	ldd	r23, Y+28	; 0x1c
     6d6:	8d 8d       	ldd	r24, Y+29	; 0x1d
     6d8:	9e 8d       	ldd	r25, Y+30	; 0x1e
     6da:	0e 94 18 0b 	call	0x1630	; 0x1630 <__mulsf3>
     6de:	dc 01       	movw	r26, r24
     6e0:	cb 01       	movw	r24, r22
     6e2:	bc 01       	movw	r22, r24
     6e4:	cd 01       	movw	r24, r26
     6e6:	0e 94 97 0a 	call	0x152e	; 0x152e <__fixunssfsi>
     6ea:	dc 01       	movw	r26, r24
     6ec:	cb 01       	movw	r24, r22
     6ee:	9c a3       	std	Y+36, r25	; 0x24
     6f0:	8b a3       	std	Y+35, r24	; 0x23
     6f2:	0f c0       	rjmp	.+30     	; 0x712 <main+0x22a>
     6f4:	80 e9       	ldi	r24, 0x90	; 144
     6f6:	91 e0       	ldi	r25, 0x01	; 1
     6f8:	9e a3       	std	Y+38, r25	; 0x26
     6fa:	8d a3       	std	Y+37, r24	; 0x25
     6fc:	8d a1       	ldd	r24, Y+37	; 0x25
     6fe:	9e a1       	ldd	r25, Y+38	; 0x26
     700:	01 97       	sbiw	r24, 0x01	; 1
     702:	f1 f7       	brne	.-4      	; 0x700 <main+0x218>
     704:	9e a3       	std	Y+38, r25	; 0x26
     706:	8d a3       	std	Y+37, r24	; 0x25
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     708:	8b a1       	ldd	r24, Y+35	; 0x23
     70a:	9c a1       	ldd	r25, Y+36	; 0x24
     70c:	01 97       	sbiw	r24, 0x01	; 1
     70e:	9c a3       	std	Y+36, r25	; 0x24
     710:	8b a3       	std	Y+35, r24	; 0x23
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     712:	8b a1       	ldd	r24, Y+35	; 0x23
     714:	9c a1       	ldd	r25, Y+36	; 0x24
     716:	89 2b       	or	r24, r25
     718:	69 f7       	brne	.-38     	; 0x6f4 <main+0x20c>
     71a:	14 c0       	rjmp	.+40     	; 0x744 <main+0x25c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     71c:	6f 8d       	ldd	r22, Y+31	; 0x1f
     71e:	78 a1       	ldd	r23, Y+32	; 0x20
     720:	89 a1       	ldd	r24, Y+33	; 0x21
     722:	9a a1       	ldd	r25, Y+34	; 0x22
     724:	0e 94 97 0a 	call	0x152e	; 0x152e <__fixunssfsi>
     728:	dc 01       	movw	r26, r24
     72a:	cb 01       	movw	r24, r22
     72c:	9c a3       	std	Y+36, r25	; 0x24
     72e:	8b a3       	std	Y+35, r24	; 0x23
     730:	8b a1       	ldd	r24, Y+35	; 0x23
     732:	9c a1       	ldd	r25, Y+36	; 0x24
     734:	98 a7       	std	Y+40, r25	; 0x28
     736:	8f a3       	std	Y+39, r24	; 0x27
     738:	8f a1       	ldd	r24, Y+39	; 0x27
     73a:	98 a5       	ldd	r25, Y+40	; 0x28
     73c:	01 97       	sbiw	r24, 0x01	; 1
     73e:	f1 f7       	brne	.-4      	; 0x73c <main+0x254>
     740:	98 a7       	std	Y+40, r25	; 0x28
     742:	8f a3       	std	Y+39, r24	; 0x27
			_delay_ms(200);
			to_uARM("M2210 F2000 T500\n");
     744:	83 ee       	ldi	r24, 0xE3	; 227
     746:	91 e0       	ldi	r25, 0x01	; 1
     748:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
		}
		if (uart_str_complete!=0)
     74c:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <uart_str_complete>
     750:	88 23       	and	r24, r24
     752:	09 f4       	brne	.+2      	; 0x756 <main+0x26e>
     754:	af c3       	rjmp	.+1886   	; 0xeb4 <main+0x9cc>
		{
			routine_done=0;
     756:	1f 82       	std	Y+7, r1	; 0x07
			PORTB|=0x01;
     758:	85 e2       	ldi	r24, 0x25	; 37
     75a:	90 e0       	ldi	r25, 0x00	; 0
     75c:	25 e2       	ldi	r18, 0x25	; 37
     75e:	30 e0       	ldi	r19, 0x00	; 0
     760:	f9 01       	movw	r30, r18
     762:	20 81       	ld	r18, Z
     764:	21 60       	ori	r18, 0x01	; 1
     766:	fc 01       	movw	r30, r24
     768:	20 83       	st	Z, r18
			uart_str_complete=0;
     76a:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <uart_str_complete>
			send_Byte_0('1');
     76e:	81 e3       	ldi	r24, 0x31	; 49
     770:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
     774:	80 e0       	ldi	r24, 0x00	; 0
     776:	90 e0       	ldi	r25, 0x00	; 0
     778:	a8 ec       	ldi	r26, 0xC8	; 200
     77a:	b2 e4       	ldi	r27, 0x42	; 66
     77c:	8b 8b       	std	Y+19, r24	; 0x13
     77e:	9c 8b       	std	Y+20, r25	; 0x14
     780:	ad 8b       	std	Y+21, r26	; 0x15
     782:	be 8b       	std	Y+22, r27	; 0x16

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     784:	20 e0       	ldi	r18, 0x00	; 0
     786:	30 e0       	ldi	r19, 0x00	; 0
     788:	4a e7       	ldi	r20, 0x7A	; 122
     78a:	55 e4       	ldi	r21, 0x45	; 69
     78c:	6b 89       	ldd	r22, Y+19	; 0x13
     78e:	7c 89       	ldd	r23, Y+20	; 0x14
     790:	8d 89       	ldd	r24, Y+21	; 0x15
     792:	9e 89       	ldd	r25, Y+22	; 0x16
     794:	0e 94 18 0b 	call	0x1630	; 0x1630 <__mulsf3>
     798:	dc 01       	movw	r26, r24
     79a:	cb 01       	movw	r24, r22
     79c:	8b ab       	std	Y+51, r24	; 0x33
     79e:	9c ab       	std	Y+52, r25	; 0x34
     7a0:	ad ab       	std	Y+53, r26	; 0x35
     7a2:	be ab       	std	Y+54, r27	; 0x36
	if (__tmp < 1.0)
     7a4:	20 e0       	ldi	r18, 0x00	; 0
     7a6:	30 e0       	ldi	r19, 0x00	; 0
     7a8:	40 e8       	ldi	r20, 0x80	; 128
     7aa:	5f e3       	ldi	r21, 0x3F	; 63
     7ac:	6b a9       	ldd	r22, Y+51	; 0x33
     7ae:	7c a9       	ldd	r23, Y+52	; 0x34
     7b0:	8d a9       	ldd	r24, Y+53	; 0x35
     7b2:	9e a9       	ldd	r25, Y+54	; 0x36
     7b4:	0e 94 92 0a 	call	0x1524	; 0x1524 <__cmpsf2>
     7b8:	88 23       	and	r24, r24
     7ba:	2c f4       	brge	.+10     	; 0x7c6 <main+0x2de>
		__ticks = 1;
     7bc:	81 e0       	ldi	r24, 0x01	; 1
     7be:	90 e0       	ldi	r25, 0x00	; 0
     7c0:	98 af       	std	Y+56, r25	; 0x38
     7c2:	8f ab       	std	Y+55, r24	; 0x37
     7c4:	3f c0       	rjmp	.+126    	; 0x844 <main+0x35c>
	else if (__tmp > 65535)
     7c6:	20 e0       	ldi	r18, 0x00	; 0
     7c8:	3f ef       	ldi	r19, 0xFF	; 255
     7ca:	4f e7       	ldi	r20, 0x7F	; 127
     7cc:	57 e4       	ldi	r21, 0x47	; 71
     7ce:	6b a9       	ldd	r22, Y+51	; 0x33
     7d0:	7c a9       	ldd	r23, Y+52	; 0x34
     7d2:	8d a9       	ldd	r24, Y+53	; 0x35
     7d4:	9e a9       	ldd	r25, Y+54	; 0x36
     7d6:	0e 94 13 0b 	call	0x1626	; 0x1626 <__gesf2>
     7da:	18 16       	cp	r1, r24
     7dc:	4c f5       	brge	.+82     	; 0x830 <main+0x348>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7de:	20 e0       	ldi	r18, 0x00	; 0
     7e0:	30 e0       	ldi	r19, 0x00	; 0
     7e2:	40 e2       	ldi	r20, 0x20	; 32
     7e4:	51 e4       	ldi	r21, 0x41	; 65
     7e6:	6b 89       	ldd	r22, Y+19	; 0x13
     7e8:	7c 89       	ldd	r23, Y+20	; 0x14
     7ea:	8d 89       	ldd	r24, Y+21	; 0x15
     7ec:	9e 89       	ldd	r25, Y+22	; 0x16
     7ee:	0e 94 18 0b 	call	0x1630	; 0x1630 <__mulsf3>
     7f2:	dc 01       	movw	r26, r24
     7f4:	cb 01       	movw	r24, r22
     7f6:	bc 01       	movw	r22, r24
     7f8:	cd 01       	movw	r24, r26
     7fa:	0e 94 97 0a 	call	0x152e	; 0x152e <__fixunssfsi>
     7fe:	dc 01       	movw	r26, r24
     800:	cb 01       	movw	r24, r22
     802:	98 af       	std	Y+56, r25	; 0x38
     804:	8f ab       	std	Y+55, r24	; 0x37
     806:	0f c0       	rjmp	.+30     	; 0x826 <main+0x33e>
     808:	80 e9       	ldi	r24, 0x90	; 144
     80a:	91 e0       	ldi	r25, 0x01	; 1
     80c:	9a af       	std	Y+58, r25	; 0x3a
     80e:	89 af       	std	Y+57, r24	; 0x39
     810:	89 ad       	ldd	r24, Y+57	; 0x39
     812:	9a ad       	ldd	r25, Y+58	; 0x3a
     814:	01 97       	sbiw	r24, 0x01	; 1
     816:	f1 f7       	brne	.-4      	; 0x814 <main+0x32c>
     818:	9a af       	std	Y+58, r25	; 0x3a
     81a:	89 af       	std	Y+57, r24	; 0x39
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     81c:	8f a9       	ldd	r24, Y+55	; 0x37
     81e:	98 ad       	ldd	r25, Y+56	; 0x38
     820:	01 97       	sbiw	r24, 0x01	; 1
     822:	98 af       	std	Y+56, r25	; 0x38
     824:	8f ab       	std	Y+55, r24	; 0x37
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     826:	8f a9       	ldd	r24, Y+55	; 0x37
     828:	98 ad       	ldd	r25, Y+56	; 0x38
     82a:	89 2b       	or	r24, r25
     82c:	69 f7       	brne	.-38     	; 0x808 <main+0x320>
     82e:	14 c0       	rjmp	.+40     	; 0x858 <main+0x370>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     830:	6b a9       	ldd	r22, Y+51	; 0x33
     832:	7c a9       	ldd	r23, Y+52	; 0x34
     834:	8d a9       	ldd	r24, Y+53	; 0x35
     836:	9e a9       	ldd	r25, Y+54	; 0x36
     838:	0e 94 97 0a 	call	0x152e	; 0x152e <__fixunssfsi>
     83c:	dc 01       	movw	r26, r24
     83e:	cb 01       	movw	r24, r22
     840:	98 af       	std	Y+56, r25	; 0x38
     842:	8f ab       	std	Y+55, r24	; 0x37
     844:	8f a9       	ldd	r24, Y+55	; 0x37
     846:	98 ad       	ldd	r25, Y+56	; 0x38
     848:	9c af       	std	Y+60, r25	; 0x3c
     84a:	8b af       	std	Y+59, r24	; 0x3b
     84c:	8b ad       	ldd	r24, Y+59	; 0x3b
     84e:	9c ad       	ldd	r25, Y+60	; 0x3c
     850:	01 97       	sbiw	r24, 0x01	; 1
     852:	f1 f7       	brne	.-4      	; 0x850 <main+0x368>
     854:	9c af       	std	Y+60, r25	; 0x3c
     856:	8b af       	std	Y+59, r24	; 0x3b
			_delay_ms(100);	
			for (counter=0;counter<=data_bytes_recieved;counter++)
     858:	1e 82       	std	Y+6, r1	; 0x06
     85a:	38 c2       	rjmp	.+1136   	; 0xccc <main+0x7e4>
			{
				switch (final_data[counter])//final data decoding
     85c:	8e 81       	ldd	r24, Y+6	; 0x06
     85e:	88 2f       	mov	r24, r24
     860:	90 e0       	ldi	r25, 0x00	; 0
     862:	8c 54       	subi	r24, 0x4C	; 76
     864:	9d 4f       	sbci	r25, 0xFD	; 253
     866:	fc 01       	movw	r30, r24
     868:	80 81       	ld	r24, Z
     86a:	88 2f       	mov	r24, r24
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	88 35       	cpi	r24, 0x58	; 88
     870:	91 05       	cpc	r25, r1
     872:	49 f0       	breq	.+18     	; 0x886 <main+0x39e>
     874:	89 35       	cpi	r24, 0x59	; 89
     876:	91 05       	cpc	r25, r1
     878:	09 f4       	brne	.+2      	; 0x87c <main+0x394>
     87a:	11 c1       	rjmp	.+546    	; 0xa9e <main+0x5b6>
     87c:	8f 34       	cpi	r24, 0x4F	; 79
     87e:	91 05       	cpc	r25, r1
     880:	09 f4       	brne	.+2      	; 0x884 <main+0x39c>
     882:	1c c2       	rjmp	.+1080   	; 0xcbc <main+0x7d4>
     884:	20 c2       	rjmp	.+1088   	; 0xcc6 <main+0x7de>
				{
					case 'X':
						recieved_Y=(final_data[counter+1]-48)*1000+(final_data[counter+2]-48)*100+(final_data[counter+3]-48)*10+final_data[counter+4]-48;
     886:	8e 81       	ldd	r24, Y+6	; 0x06
     888:	88 2f       	mov	r24, r24
     88a:	90 e0       	ldi	r25, 0x00	; 0
     88c:	01 96       	adiw	r24, 0x01	; 1
     88e:	8c 54       	subi	r24, 0x4C	; 76
     890:	9d 4f       	sbci	r25, 0xFD	; 253
     892:	fc 01       	movw	r30, r24
     894:	80 81       	ld	r24, Z
     896:	88 2f       	mov	r24, r24
     898:	90 e0       	ldi	r25, 0x00	; 0
     89a:	ac 01       	movw	r20, r24
     89c:	40 53       	subi	r20, 0x30	; 48
     89e:	51 09       	sbc	r21, r1
     8a0:	88 ee       	ldi	r24, 0xE8	; 232
     8a2:	93 e0       	ldi	r25, 0x03	; 3
     8a4:	48 9f       	mul	r20, r24
     8a6:	90 01       	movw	r18, r0
     8a8:	49 9f       	mul	r20, r25
     8aa:	30 0d       	add	r19, r0
     8ac:	58 9f       	mul	r21, r24
     8ae:	30 0d       	add	r19, r0
     8b0:	11 24       	eor	r1, r1
     8b2:	8e 81       	ldd	r24, Y+6	; 0x06
     8b4:	88 2f       	mov	r24, r24
     8b6:	90 e0       	ldi	r25, 0x00	; 0
     8b8:	02 96       	adiw	r24, 0x02	; 2
     8ba:	8c 54       	subi	r24, 0x4C	; 76
     8bc:	9d 4f       	sbci	r25, 0xFD	; 253
     8be:	fc 01       	movw	r30, r24
     8c0:	80 81       	ld	r24, Z
     8c2:	88 2f       	mov	r24, r24
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	ac 01       	movw	r20, r24
     8c8:	40 53       	subi	r20, 0x30	; 48
     8ca:	51 09       	sbc	r21, r1
     8cc:	64 e6       	ldi	r22, 0x64	; 100
     8ce:	64 9f       	mul	r22, r20
     8d0:	c0 01       	movw	r24, r0
     8d2:	65 9f       	mul	r22, r21
     8d4:	90 0d       	add	r25, r0
     8d6:	11 24       	eor	r1, r1
     8d8:	28 0f       	add	r18, r24
     8da:	39 1f       	adc	r19, r25
     8dc:	8e 81       	ldd	r24, Y+6	; 0x06
     8de:	88 2f       	mov	r24, r24
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	03 96       	adiw	r24, 0x03	; 3
     8e4:	8c 54       	subi	r24, 0x4C	; 76
     8e6:	9d 4f       	sbci	r25, 0xFD	; 253
     8e8:	fc 01       	movw	r30, r24
     8ea:	80 81       	ld	r24, Z
     8ec:	88 2f       	mov	r24, r24
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	c0 97       	sbiw	r24, 0x30	; 48
     8f2:	88 0f       	add	r24, r24
     8f4:	99 1f       	adc	r25, r25
     8f6:	ac 01       	movw	r20, r24
     8f8:	44 0f       	add	r20, r20
     8fa:	55 1f       	adc	r21, r21
     8fc:	44 0f       	add	r20, r20
     8fe:	55 1f       	adc	r21, r21
     900:	84 0f       	add	r24, r20
     902:	95 1f       	adc	r25, r21
     904:	28 0f       	add	r18, r24
     906:	39 1f       	adc	r19, r25
     908:	8e 81       	ldd	r24, Y+6	; 0x06
     90a:	88 2f       	mov	r24, r24
     90c:	90 e0       	ldi	r25, 0x00	; 0
     90e:	04 96       	adiw	r24, 0x04	; 4
     910:	8c 54       	subi	r24, 0x4C	; 76
     912:	9d 4f       	sbci	r25, 0xFD	; 253
     914:	fc 01       	movw	r30, r24
     916:	80 81       	ld	r24, Z
     918:	88 2f       	mov	r24, r24
     91a:	90 e0       	ldi	r25, 0x00	; 0
     91c:	82 0f       	add	r24, r18
     91e:	93 1f       	adc	r25, r19
     920:	c0 97       	sbiw	r24, 0x30	; 48
     922:	9c 83       	std	Y+4, r25	; 0x04
     924:	8b 83       	std	Y+3, r24	; 0x03
						send_Byte_0('1');
     926:	81 e3       	ldi	r24, 0x31	; 49
     928:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
     92c:	80 e0       	ldi	r24, 0x00	; 0
     92e:	90 e0       	ldi	r25, 0x00	; 0
     930:	a8 ec       	ldi	r26, 0xC8	; 200
     932:	b2 e4       	ldi	r27, 0x42	; 66
     934:	8b 87       	std	Y+11, r24	; 0x0b
     936:	9c 87       	std	Y+12, r25	; 0x0c
     938:	ad 87       	std	Y+13, r26	; 0x0d
     93a:	be 87       	std	Y+14, r27	; 0x0e

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     93c:	20 e0       	ldi	r18, 0x00	; 0
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	4a e7       	ldi	r20, 0x7A	; 122
     942:	55 e4       	ldi	r21, 0x45	; 69
     944:	6b 85       	ldd	r22, Y+11	; 0x0b
     946:	7c 85       	ldd	r23, Y+12	; 0x0c
     948:	8d 85       	ldd	r24, Y+13	; 0x0d
     94a:	9e 85       	ldd	r25, Y+14	; 0x0e
     94c:	0e 94 18 0b 	call	0x1630	; 0x1630 <__mulsf3>
     950:	dc 01       	movw	r26, r24
     952:	cb 01       	movw	r24, r22
     954:	9e 01       	movw	r18, r28
     956:	23 5c       	subi	r18, 0xC3	; 195
     958:	3f 4f       	sbci	r19, 0xFF	; 255
     95a:	f9 01       	movw	r30, r18
     95c:	80 83       	st	Z, r24
     95e:	91 83       	std	Z+1, r25	; 0x01
     960:	a2 83       	std	Z+2, r26	; 0x02
     962:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     964:	20 e0       	ldi	r18, 0x00	; 0
     966:	30 e0       	ldi	r19, 0x00	; 0
     968:	40 e8       	ldi	r20, 0x80	; 128
     96a:	5f e3       	ldi	r21, 0x3F	; 63
     96c:	ce 01       	movw	r24, r28
     96e:	cd 96       	adiw	r24, 0x3d	; 61
     970:	fc 01       	movw	r30, r24
     972:	60 81       	ld	r22, Z
     974:	71 81       	ldd	r23, Z+1	; 0x01
     976:	82 81       	ldd	r24, Z+2	; 0x02
     978:	93 81       	ldd	r25, Z+3	; 0x03
     97a:	0e 94 92 0a 	call	0x1524	; 0x1524 <__cmpsf2>
     97e:	88 23       	and	r24, r24
     980:	4c f4       	brge	.+18     	; 0x994 <main+0x4ac>
		__ticks = 1;
     982:	ce 01       	movw	r24, r28
     984:	8f 5b       	subi	r24, 0xBF	; 191
     986:	9f 4f       	sbci	r25, 0xFF	; 255
     988:	21 e0       	ldi	r18, 0x01	; 1
     98a:	30 e0       	ldi	r19, 0x00	; 0
     98c:	fc 01       	movw	r30, r24
     98e:	31 83       	std	Z+1, r19	; 0x01
     990:	20 83       	st	Z, r18
     992:	67 c0       	rjmp	.+206    	; 0xa62 <main+0x57a>
	else if (__tmp > 65535)
     994:	20 e0       	ldi	r18, 0x00	; 0
     996:	3f ef       	ldi	r19, 0xFF	; 255
     998:	4f e7       	ldi	r20, 0x7F	; 127
     99a:	57 e4       	ldi	r21, 0x47	; 71
     99c:	ce 01       	movw	r24, r28
     99e:	cd 96       	adiw	r24, 0x3d	; 61
     9a0:	fc 01       	movw	r30, r24
     9a2:	60 81       	ld	r22, Z
     9a4:	71 81       	ldd	r23, Z+1	; 0x01
     9a6:	82 81       	ldd	r24, Z+2	; 0x02
     9a8:	93 81       	ldd	r25, Z+3	; 0x03
     9aa:	0e 94 13 0b 	call	0x1626	; 0x1626 <__gesf2>
     9ae:	18 16       	cp	r1, r24
     9b0:	0c f0       	brlt	.+2      	; 0x9b4 <main+0x4cc>
     9b2:	46 c0       	rjmp	.+140    	; 0xa40 <main+0x558>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     9b4:	20 e0       	ldi	r18, 0x00	; 0
     9b6:	30 e0       	ldi	r19, 0x00	; 0
     9b8:	40 e2       	ldi	r20, 0x20	; 32
     9ba:	51 e4       	ldi	r21, 0x41	; 65
     9bc:	6b 85       	ldd	r22, Y+11	; 0x0b
     9be:	7c 85       	ldd	r23, Y+12	; 0x0c
     9c0:	8d 85       	ldd	r24, Y+13	; 0x0d
     9c2:	9e 85       	ldd	r25, Y+14	; 0x0e
     9c4:	0e 94 18 0b 	call	0x1630	; 0x1630 <__mulsf3>
     9c8:	dc 01       	movw	r26, r24
     9ca:	cb 01       	movw	r24, r22
     9cc:	8e 01       	movw	r16, r28
     9ce:	0f 5b       	subi	r16, 0xBF	; 191
     9d0:	1f 4f       	sbci	r17, 0xFF	; 255
     9d2:	bc 01       	movw	r22, r24
     9d4:	cd 01       	movw	r24, r26
     9d6:	0e 94 97 0a 	call	0x152e	; 0x152e <__fixunssfsi>
     9da:	dc 01       	movw	r26, r24
     9dc:	cb 01       	movw	r24, r22
     9de:	f8 01       	movw	r30, r16
     9e0:	91 83       	std	Z+1, r25	; 0x01
     9e2:	80 83       	st	Z, r24
     9e4:	24 c0       	rjmp	.+72     	; 0xa2e <main+0x546>
     9e6:	ce 01       	movw	r24, r28
     9e8:	8d 5b       	subi	r24, 0xBD	; 189
     9ea:	9f 4f       	sbci	r25, 0xFF	; 255
     9ec:	20 e9       	ldi	r18, 0x90	; 144
     9ee:	31 e0       	ldi	r19, 0x01	; 1
     9f0:	fc 01       	movw	r30, r24
     9f2:	31 83       	std	Z+1, r19	; 0x01
     9f4:	20 83       	st	Z, r18
     9f6:	ce 01       	movw	r24, r28
     9f8:	8d 5b       	subi	r24, 0xBD	; 189
     9fa:	9f 4f       	sbci	r25, 0xFF	; 255
     9fc:	fc 01       	movw	r30, r24
     9fe:	80 81       	ld	r24, Z
     a00:	91 81       	ldd	r25, Z+1	; 0x01
     a02:	01 97       	sbiw	r24, 0x01	; 1
     a04:	f1 f7       	brne	.-4      	; 0xa02 <main+0x51a>
     a06:	9e 01       	movw	r18, r28
     a08:	2d 5b       	subi	r18, 0xBD	; 189
     a0a:	3f 4f       	sbci	r19, 0xFF	; 255
     a0c:	f9 01       	movw	r30, r18
     a0e:	91 83       	std	Z+1, r25	; 0x01
     a10:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a12:	ce 01       	movw	r24, r28
     a14:	8f 5b       	subi	r24, 0xBF	; 191
     a16:	9f 4f       	sbci	r25, 0xFF	; 255
     a18:	9e 01       	movw	r18, r28
     a1a:	2f 5b       	subi	r18, 0xBF	; 191
     a1c:	3f 4f       	sbci	r19, 0xFF	; 255
     a1e:	f9 01       	movw	r30, r18
     a20:	20 81       	ld	r18, Z
     a22:	31 81       	ldd	r19, Z+1	; 0x01
     a24:	21 50       	subi	r18, 0x01	; 1
     a26:	31 09       	sbc	r19, r1
     a28:	fc 01       	movw	r30, r24
     a2a:	31 83       	std	Z+1, r19	; 0x01
     a2c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a2e:	ce 01       	movw	r24, r28
     a30:	8f 5b       	subi	r24, 0xBF	; 191
     a32:	9f 4f       	sbci	r25, 0xFF	; 255
     a34:	fc 01       	movw	r30, r24
     a36:	80 81       	ld	r24, Z
     a38:	91 81       	ldd	r25, Z+1	; 0x01
     a3a:	89 2b       	or	r24, r25
     a3c:	a1 f6       	brne	.-88     	; 0x9e6 <main+0x4fe>
     a3e:	2b c0       	rjmp	.+86     	; 0xa96 <main+0x5ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a40:	8e 01       	movw	r16, r28
     a42:	0f 5b       	subi	r16, 0xBF	; 191
     a44:	1f 4f       	sbci	r17, 0xFF	; 255
     a46:	ce 01       	movw	r24, r28
     a48:	cd 96       	adiw	r24, 0x3d	; 61
     a4a:	fc 01       	movw	r30, r24
     a4c:	60 81       	ld	r22, Z
     a4e:	71 81       	ldd	r23, Z+1	; 0x01
     a50:	82 81       	ldd	r24, Z+2	; 0x02
     a52:	93 81       	ldd	r25, Z+3	; 0x03
     a54:	0e 94 97 0a 	call	0x152e	; 0x152e <__fixunssfsi>
     a58:	dc 01       	movw	r26, r24
     a5a:	cb 01       	movw	r24, r22
     a5c:	f8 01       	movw	r30, r16
     a5e:	91 83       	std	Z+1, r25	; 0x01
     a60:	80 83       	st	Z, r24
     a62:	ce 01       	movw	r24, r28
     a64:	8b 5b       	subi	r24, 0xBB	; 187
     a66:	9f 4f       	sbci	r25, 0xFF	; 255
     a68:	9e 01       	movw	r18, r28
     a6a:	2f 5b       	subi	r18, 0xBF	; 191
     a6c:	3f 4f       	sbci	r19, 0xFF	; 255
     a6e:	f9 01       	movw	r30, r18
     a70:	20 81       	ld	r18, Z
     a72:	31 81       	ldd	r19, Z+1	; 0x01
     a74:	fc 01       	movw	r30, r24
     a76:	31 83       	std	Z+1, r19	; 0x01
     a78:	20 83       	st	Z, r18
     a7a:	ce 01       	movw	r24, r28
     a7c:	8b 5b       	subi	r24, 0xBB	; 187
     a7e:	9f 4f       	sbci	r25, 0xFF	; 255
     a80:	fc 01       	movw	r30, r24
     a82:	80 81       	ld	r24, Z
     a84:	91 81       	ldd	r25, Z+1	; 0x01
     a86:	01 97       	sbiw	r24, 0x01	; 1
     a88:	f1 f7       	brne	.-4      	; 0xa86 <main+0x59e>
     a8a:	9e 01       	movw	r18, r28
     a8c:	2b 5b       	subi	r18, 0xBB	; 187
     a8e:	3f 4f       	sbci	r19, 0xFF	; 255
     a90:	f9 01       	movw	r30, r18
     a92:	91 83       	std	Z+1, r25	; 0x01
     a94:	80 83       	st	Z, r24
						_delay_ms(100);
						check++;
     a96:	8d 81       	ldd	r24, Y+5	; 0x05
     a98:	8f 5f       	subi	r24, 0xFF	; 255
     a9a:	8d 83       	std	Y+5, r24	; 0x05
					break;
     a9c:	14 c1       	rjmp	.+552    	; 0xcc6 <main+0x7de>
				
					case 'Y':
						recieved_X=(final_data[counter+1]-48)*1000+(final_data[counter+2]-48)*100+(final_data[counter+3]-48)*10+final_data[counter+4]-48;
     a9e:	8e 81       	ldd	r24, Y+6	; 0x06
     aa0:	88 2f       	mov	r24, r24
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	01 96       	adiw	r24, 0x01	; 1
     aa6:	8c 54       	subi	r24, 0x4C	; 76
     aa8:	9d 4f       	sbci	r25, 0xFD	; 253
     aaa:	fc 01       	movw	r30, r24
     aac:	80 81       	ld	r24, Z
     aae:	88 2f       	mov	r24, r24
     ab0:	90 e0       	ldi	r25, 0x00	; 0
     ab2:	ac 01       	movw	r20, r24
     ab4:	40 53       	subi	r20, 0x30	; 48
     ab6:	51 09       	sbc	r21, r1
     ab8:	88 ee       	ldi	r24, 0xE8	; 232
     aba:	93 e0       	ldi	r25, 0x03	; 3
     abc:	48 9f       	mul	r20, r24
     abe:	90 01       	movw	r18, r0
     ac0:	49 9f       	mul	r20, r25
     ac2:	30 0d       	add	r19, r0
     ac4:	58 9f       	mul	r21, r24
     ac6:	30 0d       	add	r19, r0
     ac8:	11 24       	eor	r1, r1
     aca:	8e 81       	ldd	r24, Y+6	; 0x06
     acc:	88 2f       	mov	r24, r24
     ace:	90 e0       	ldi	r25, 0x00	; 0
     ad0:	02 96       	adiw	r24, 0x02	; 2
     ad2:	8c 54       	subi	r24, 0x4C	; 76
     ad4:	9d 4f       	sbci	r25, 0xFD	; 253
     ad6:	fc 01       	movw	r30, r24
     ad8:	80 81       	ld	r24, Z
     ada:	88 2f       	mov	r24, r24
     adc:	90 e0       	ldi	r25, 0x00	; 0
     ade:	ac 01       	movw	r20, r24
     ae0:	40 53       	subi	r20, 0x30	; 48
     ae2:	51 09       	sbc	r21, r1
     ae4:	64 e6       	ldi	r22, 0x64	; 100
     ae6:	64 9f       	mul	r22, r20
     ae8:	c0 01       	movw	r24, r0
     aea:	65 9f       	mul	r22, r21
     aec:	90 0d       	add	r25, r0
     aee:	11 24       	eor	r1, r1
     af0:	28 0f       	add	r18, r24
     af2:	39 1f       	adc	r19, r25
     af4:	8e 81       	ldd	r24, Y+6	; 0x06
     af6:	88 2f       	mov	r24, r24
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	03 96       	adiw	r24, 0x03	; 3
     afc:	8c 54       	subi	r24, 0x4C	; 76
     afe:	9d 4f       	sbci	r25, 0xFD	; 253
     b00:	fc 01       	movw	r30, r24
     b02:	80 81       	ld	r24, Z
     b04:	88 2f       	mov	r24, r24
     b06:	90 e0       	ldi	r25, 0x00	; 0
     b08:	c0 97       	sbiw	r24, 0x30	; 48
     b0a:	88 0f       	add	r24, r24
     b0c:	99 1f       	adc	r25, r25
     b0e:	ac 01       	movw	r20, r24
     b10:	44 0f       	add	r20, r20
     b12:	55 1f       	adc	r21, r21
     b14:	44 0f       	add	r20, r20
     b16:	55 1f       	adc	r21, r21
     b18:	84 0f       	add	r24, r20
     b1a:	95 1f       	adc	r25, r21
     b1c:	28 0f       	add	r18, r24
     b1e:	39 1f       	adc	r19, r25
     b20:	8e 81       	ldd	r24, Y+6	; 0x06
     b22:	88 2f       	mov	r24, r24
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	04 96       	adiw	r24, 0x04	; 4
     b28:	8c 54       	subi	r24, 0x4C	; 76
     b2a:	9d 4f       	sbci	r25, 0xFD	; 253
     b2c:	fc 01       	movw	r30, r24
     b2e:	80 81       	ld	r24, Z
     b30:	88 2f       	mov	r24, r24
     b32:	90 e0       	ldi	r25, 0x00	; 0
     b34:	82 0f       	add	r24, r18
     b36:	93 1f       	adc	r25, r19
     b38:	c0 97       	sbiw	r24, 0x30	; 48
     b3a:	9a 83       	std	Y+2, r25	; 0x02
     b3c:	89 83       	std	Y+1, r24	; 0x01
						send_Byte_0('1');
     b3e:	81 e3       	ldi	r24, 0x31	; 49
     b40:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
     b44:	80 e0       	ldi	r24, 0x00	; 0
     b46:	90 e0       	ldi	r25, 0x00	; 0
     b48:	a8 ec       	ldi	r26, 0xC8	; 200
     b4a:	b2 e4       	ldi	r27, 0x42	; 66
     b4c:	8f 87       	std	Y+15, r24	; 0x0f
     b4e:	98 8b       	std	Y+16, r25	; 0x10
     b50:	a9 8b       	std	Y+17, r26	; 0x11
     b52:	ba 8b       	std	Y+18, r27	; 0x12

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     b54:	8e 01       	movw	r16, r28
     b56:	09 5b       	subi	r16, 0xB9	; 185
     b58:	1f 4f       	sbci	r17, 0xFF	; 255
     b5a:	20 e0       	ldi	r18, 0x00	; 0
     b5c:	30 e0       	ldi	r19, 0x00	; 0
     b5e:	4a e7       	ldi	r20, 0x7A	; 122
     b60:	55 e4       	ldi	r21, 0x45	; 69
     b62:	6f 85       	ldd	r22, Y+15	; 0x0f
     b64:	78 89       	ldd	r23, Y+16	; 0x10
     b66:	89 89       	ldd	r24, Y+17	; 0x11
     b68:	9a 89       	ldd	r25, Y+18	; 0x12
     b6a:	0e 94 18 0b 	call	0x1630	; 0x1630 <__mulsf3>
     b6e:	dc 01       	movw	r26, r24
     b70:	cb 01       	movw	r24, r22
     b72:	f8 01       	movw	r30, r16
     b74:	80 83       	st	Z, r24
     b76:	91 83       	std	Z+1, r25	; 0x01
     b78:	a2 83       	std	Z+2, r26	; 0x02
     b7a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     b7c:	ce 01       	movw	r24, r28
     b7e:	89 5b       	subi	r24, 0xB9	; 185
     b80:	9f 4f       	sbci	r25, 0xFF	; 255
     b82:	20 e0       	ldi	r18, 0x00	; 0
     b84:	30 e0       	ldi	r19, 0x00	; 0
     b86:	40 e8       	ldi	r20, 0x80	; 128
     b88:	5f e3       	ldi	r21, 0x3F	; 63
     b8a:	fc 01       	movw	r30, r24
     b8c:	60 81       	ld	r22, Z
     b8e:	71 81       	ldd	r23, Z+1	; 0x01
     b90:	82 81       	ldd	r24, Z+2	; 0x02
     b92:	93 81       	ldd	r25, Z+3	; 0x03
     b94:	0e 94 92 0a 	call	0x1524	; 0x1524 <__cmpsf2>
     b98:	88 23       	and	r24, r24
     b9a:	4c f4       	brge	.+18     	; 0xbae <main+0x6c6>
		__ticks = 1;
     b9c:	ce 01       	movw	r24, r28
     b9e:	85 5b       	subi	r24, 0xB5	; 181
     ba0:	9f 4f       	sbci	r25, 0xFF	; 255
     ba2:	21 e0       	ldi	r18, 0x01	; 1
     ba4:	30 e0       	ldi	r19, 0x00	; 0
     ba6:	fc 01       	movw	r30, r24
     ba8:	31 83       	std	Z+1, r19	; 0x01
     baa:	20 83       	st	Z, r18
     bac:	69 c0       	rjmp	.+210    	; 0xc80 <main+0x798>
	else if (__tmp > 65535)
     bae:	ce 01       	movw	r24, r28
     bb0:	89 5b       	subi	r24, 0xB9	; 185
     bb2:	9f 4f       	sbci	r25, 0xFF	; 255
     bb4:	20 e0       	ldi	r18, 0x00	; 0
     bb6:	3f ef       	ldi	r19, 0xFF	; 255
     bb8:	4f e7       	ldi	r20, 0x7F	; 127
     bba:	57 e4       	ldi	r21, 0x47	; 71
     bbc:	fc 01       	movw	r30, r24
     bbe:	60 81       	ld	r22, Z
     bc0:	71 81       	ldd	r23, Z+1	; 0x01
     bc2:	82 81       	ldd	r24, Z+2	; 0x02
     bc4:	93 81       	ldd	r25, Z+3	; 0x03
     bc6:	0e 94 13 0b 	call	0x1626	; 0x1626 <__gesf2>
     bca:	18 16       	cp	r1, r24
     bcc:	0c f0       	brlt	.+2      	; 0xbd0 <main+0x6e8>
     bce:	46 c0       	rjmp	.+140    	; 0xc5c <main+0x774>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bd0:	20 e0       	ldi	r18, 0x00	; 0
     bd2:	30 e0       	ldi	r19, 0x00	; 0
     bd4:	40 e2       	ldi	r20, 0x20	; 32
     bd6:	51 e4       	ldi	r21, 0x41	; 65
     bd8:	6f 85       	ldd	r22, Y+15	; 0x0f
     bda:	78 89       	ldd	r23, Y+16	; 0x10
     bdc:	89 89       	ldd	r24, Y+17	; 0x11
     bde:	9a 89       	ldd	r25, Y+18	; 0x12
     be0:	0e 94 18 0b 	call	0x1630	; 0x1630 <__mulsf3>
     be4:	dc 01       	movw	r26, r24
     be6:	cb 01       	movw	r24, r22
     be8:	8e 01       	movw	r16, r28
     bea:	05 5b       	subi	r16, 0xB5	; 181
     bec:	1f 4f       	sbci	r17, 0xFF	; 255
     bee:	bc 01       	movw	r22, r24
     bf0:	cd 01       	movw	r24, r26
     bf2:	0e 94 97 0a 	call	0x152e	; 0x152e <__fixunssfsi>
     bf6:	dc 01       	movw	r26, r24
     bf8:	cb 01       	movw	r24, r22
     bfa:	f8 01       	movw	r30, r16
     bfc:	91 83       	std	Z+1, r25	; 0x01
     bfe:	80 83       	st	Z, r24
     c00:	24 c0       	rjmp	.+72     	; 0xc4a <main+0x762>
     c02:	ce 01       	movw	r24, r28
     c04:	83 5b       	subi	r24, 0xB3	; 179
     c06:	9f 4f       	sbci	r25, 0xFF	; 255
     c08:	20 e9       	ldi	r18, 0x90	; 144
     c0a:	31 e0       	ldi	r19, 0x01	; 1
     c0c:	fc 01       	movw	r30, r24
     c0e:	31 83       	std	Z+1, r19	; 0x01
     c10:	20 83       	st	Z, r18
     c12:	ce 01       	movw	r24, r28
     c14:	83 5b       	subi	r24, 0xB3	; 179
     c16:	9f 4f       	sbci	r25, 0xFF	; 255
     c18:	fc 01       	movw	r30, r24
     c1a:	80 81       	ld	r24, Z
     c1c:	91 81       	ldd	r25, Z+1	; 0x01
     c1e:	01 97       	sbiw	r24, 0x01	; 1
     c20:	f1 f7       	brne	.-4      	; 0xc1e <main+0x736>
     c22:	9e 01       	movw	r18, r28
     c24:	23 5b       	subi	r18, 0xB3	; 179
     c26:	3f 4f       	sbci	r19, 0xFF	; 255
     c28:	f9 01       	movw	r30, r18
     c2a:	91 83       	std	Z+1, r25	; 0x01
     c2c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c2e:	ce 01       	movw	r24, r28
     c30:	85 5b       	subi	r24, 0xB5	; 181
     c32:	9f 4f       	sbci	r25, 0xFF	; 255
     c34:	9e 01       	movw	r18, r28
     c36:	25 5b       	subi	r18, 0xB5	; 181
     c38:	3f 4f       	sbci	r19, 0xFF	; 255
     c3a:	f9 01       	movw	r30, r18
     c3c:	20 81       	ld	r18, Z
     c3e:	31 81       	ldd	r19, Z+1	; 0x01
     c40:	21 50       	subi	r18, 0x01	; 1
     c42:	31 09       	sbc	r19, r1
     c44:	fc 01       	movw	r30, r24
     c46:	31 83       	std	Z+1, r19	; 0x01
     c48:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c4a:	ce 01       	movw	r24, r28
     c4c:	85 5b       	subi	r24, 0xB5	; 181
     c4e:	9f 4f       	sbci	r25, 0xFF	; 255
     c50:	fc 01       	movw	r30, r24
     c52:	80 81       	ld	r24, Z
     c54:	91 81       	ldd	r25, Z+1	; 0x01
     c56:	89 2b       	or	r24, r25
     c58:	a1 f6       	brne	.-88     	; 0xc02 <main+0x71a>
     c5a:	2c c0       	rjmp	.+88     	; 0xcb4 <main+0x7cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c5c:	8e 01       	movw	r16, r28
     c5e:	05 5b       	subi	r16, 0xB5	; 181
     c60:	1f 4f       	sbci	r17, 0xFF	; 255
     c62:	ce 01       	movw	r24, r28
     c64:	89 5b       	subi	r24, 0xB9	; 185
     c66:	9f 4f       	sbci	r25, 0xFF	; 255
     c68:	fc 01       	movw	r30, r24
     c6a:	60 81       	ld	r22, Z
     c6c:	71 81       	ldd	r23, Z+1	; 0x01
     c6e:	82 81       	ldd	r24, Z+2	; 0x02
     c70:	93 81       	ldd	r25, Z+3	; 0x03
     c72:	0e 94 97 0a 	call	0x152e	; 0x152e <__fixunssfsi>
     c76:	dc 01       	movw	r26, r24
     c78:	cb 01       	movw	r24, r22
     c7a:	f8 01       	movw	r30, r16
     c7c:	91 83       	std	Z+1, r25	; 0x01
     c7e:	80 83       	st	Z, r24
     c80:	ce 01       	movw	r24, r28
     c82:	81 5b       	subi	r24, 0xB1	; 177
     c84:	9f 4f       	sbci	r25, 0xFF	; 255
     c86:	9e 01       	movw	r18, r28
     c88:	25 5b       	subi	r18, 0xB5	; 181
     c8a:	3f 4f       	sbci	r19, 0xFF	; 255
     c8c:	f9 01       	movw	r30, r18
     c8e:	20 81       	ld	r18, Z
     c90:	31 81       	ldd	r19, Z+1	; 0x01
     c92:	fc 01       	movw	r30, r24
     c94:	31 83       	std	Z+1, r19	; 0x01
     c96:	20 83       	st	Z, r18
     c98:	ce 01       	movw	r24, r28
     c9a:	81 5b       	subi	r24, 0xB1	; 177
     c9c:	9f 4f       	sbci	r25, 0xFF	; 255
     c9e:	fc 01       	movw	r30, r24
     ca0:	80 81       	ld	r24, Z
     ca2:	91 81       	ldd	r25, Z+1	; 0x01
     ca4:	01 97       	sbiw	r24, 0x01	; 1
     ca6:	f1 f7       	brne	.-4      	; 0xca4 <main+0x7bc>
     ca8:	9e 01       	movw	r18, r28
     caa:	21 5b       	subi	r18, 0xB1	; 177
     cac:	3f 4f       	sbci	r19, 0xFF	; 255
     cae:	f9 01       	movw	r30, r18
     cb0:	91 83       	std	Z+1, r25	; 0x01
     cb2:	80 83       	st	Z, r24
						_delay_ms(100);
						check++;
     cb4:	8d 81       	ldd	r24, Y+5	; 0x05
     cb6:	8f 5f       	subi	r24, 0xFF	; 255
     cb8:	8d 83       	std	Y+5, r24	; 0x05
					break;
     cba:	05 c0       	rjmp	.+10     	; 0xcc6 <main+0x7de>
						
					case 'O':
					routine_done=1;
     cbc:	81 e0       	ldi	r24, 0x01	; 1
     cbe:	8f 83       	std	Y+7, r24	; 0x07
					check++;	
     cc0:	8d 81       	ldd	r24, Y+5	; 0x05
     cc2:	8f 5f       	subi	r24, 0xFF	; 255
     cc4:	8d 83       	std	Y+5, r24	; 0x05
			routine_done=0;
			PORTB|=0x01;
			uart_str_complete=0;
			send_Byte_0('1');
			_delay_ms(100);	
			for (counter=0;counter<=data_bytes_recieved;counter++)
     cc6:	8e 81       	ldd	r24, Y+6	; 0x06
     cc8:	8f 5f       	subi	r24, 0xFF	; 255
     cca:	8e 83       	std	Y+6, r24	; 0x06
     ccc:	80 91 21 02 	lds	r24, 0x0221	; 0x800221 <data_bytes_recieved>
     cd0:	9e 81       	ldd	r25, Y+6	; 0x06
     cd2:	89 17       	cp	r24, r25
     cd4:	08 f0       	brcs	.+2      	; 0xcd8 <main+0x7f0>
     cd6:	c2 cd       	rjmp	.-1148   	; 0x85c <main+0x374>
					case 'O':
					routine_done=1;
					check++;	
				}
			}
			data_bytes_recieved=0;
     cd8:	10 92 21 02 	sts	0x0221, r1	; 0x800221 <data_bytes_recieved>
			if ((check==0)||(check>2))
     cdc:	8d 81       	ldd	r24, Y+5	; 0x05
     cde:	88 23       	and	r24, r24
     ce0:	19 f0       	breq	.+6      	; 0xce8 <main+0x800>
     ce2:	8d 81       	ldd	r24, Y+5	; 0x05
     ce4:	83 30       	cpi	r24, 0x03	; 3
     ce6:	20 f0       	brcs	.+8      	; 0xcf0 <main+0x808>
			{
				send_Byte_0('0');
     ce8:	80 e3       	ldi	r24, 0x30	; 48
     cea:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
     cee:	01 c0       	rjmp	.+2      	; 0xcf2 <main+0x80a>
			}
			else
			{
				check=0;
     cf0:	1d 82       	std	Y+5, r1	; 0x05
			}
			if (routine_done>=1)
     cf2:	8f 81       	ldd	r24, Y+7	; 0x07
     cf4:	88 23       	and	r24, r24
     cf6:	21 f1       	breq	.+72     	; 0xd40 <main+0x858>
			{
				send_to_uArm("G0 X200 Y0 Z150 F1000\n");
     cf8:	89 ea       	ldi	r24, 0xA9	; 169
     cfa:	91 e0       	ldi	r25, 0x01	; 1
     cfc:	0e 94 ad 01 	call	0x35a	; 0x35a <send_to_uArm>
				routine_done=0;
     d00:	1f 82       	std	Y+7, r1	; 0x07
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     d02:	04 c0       	rjmp	.+8      	; 0xd0c <main+0x824>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
     d04:	80 e0       	ldi	r24, 0x00	; 0
     d06:	91 e0       	ldi	r25, 0x01	; 1
     d08:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
			}
			if (routine_done>=1)
			{
				send_to_uArm("G0 X200 Y0 Z150 F1000\n");
				routine_done=0;
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     d0c:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <uart_string1+0x4>
     d10:	81 33       	cpi	r24, 0x31	; 49
     d12:	c1 f3       	breq	.-16     	; 0xd04 <main+0x81c>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
					
				}
				to_uARM("M2210 F500 T100\n");
     d14:	80 ec       	ldi	r24, 0xC0	; 192
     d16:	91 e0       	ldi	r25, 0x01	; 1
     d18:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
				to_uARM("M2210 F1000 T200\n");
     d1c:	81 ed       	ldi	r24, 0xD1	; 209
     d1e:	91 e0       	ldi	r25, 0x01	; 1
     d20:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
				to_uARM("M2210 F2000 T500\n");
     d24:	83 ee       	ldi	r24, 0xE3	; 227
     d26:	91 e0       	ldi	r25, 0x01	; 1
     d28:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
				//send_Byte_0('1');
				PORTB&=~0x01;
     d2c:	85 e2       	ldi	r24, 0x25	; 37
     d2e:	90 e0       	ldi	r25, 0x00	; 0
     d30:	25 e2       	ldi	r18, 0x25	; 37
     d32:	30 e0       	ldi	r19, 0x00	; 0
     d34:	f9 01       	movw	r30, r18
     d36:	20 81       	ld	r18, Z
     d38:	2e 7f       	andi	r18, 0xFE	; 254
     d3a:	fc 01       	movw	r30, r24
     d3c:	20 83       	st	Z, r18
     d3e:	ba c0       	rjmp	.+372    	; 0xeb4 <main+0x9cc>
			}
			else
			{
				if (DIP_Switch&0x80)
     d40:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <__data_end>
     d44:	88 23       	and	r24, r24
     d46:	f4 f4       	brge	.+60     	; 0xd84 <main+0x89c>
				{
					write_zahl(2,10,recieved_X,4,0,0);
     d48:	89 81       	ldd	r24, Y+1	; 0x01
     d4a:	9a 81       	ldd	r25, Y+2	; 0x02
     d4c:	09 2e       	mov	r0, r25
     d4e:	00 0c       	add	r0, r0
     d50:	aa 0b       	sbc	r26, r26
     d52:	bb 0b       	sbc	r27, r27
     d54:	c1 2c       	mov	r12, r1
     d56:	e1 2c       	mov	r14, r1
     d58:	04 e0       	ldi	r16, 0x04	; 4
     d5a:	9c 01       	movw	r18, r24
     d5c:	ad 01       	movw	r20, r26
     d5e:	6a e0       	ldi	r22, 0x0A	; 10
     d60:	82 e0       	ldi	r24, 0x02	; 2
     d62:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <write_zahl>
					write_zahl(3,10,recieved_Y,4,0,0);
     d66:	8b 81       	ldd	r24, Y+3	; 0x03
     d68:	9c 81       	ldd	r25, Y+4	; 0x04
     d6a:	09 2e       	mov	r0, r25
     d6c:	00 0c       	add	r0, r0
     d6e:	aa 0b       	sbc	r26, r26
     d70:	bb 0b       	sbc	r27, r27
     d72:	c1 2c       	mov	r12, r1
     d74:	e1 2c       	mov	r14, r1
     d76:	04 e0       	ldi	r16, 0x04	; 4
     d78:	9c 01       	movw	r18, r24
     d7a:	ad 01       	movw	r20, r26
     d7c:	6a e0       	ldi	r22, 0x0A	; 10
     d7e:	83 e0       	ldi	r24, 0x03	; 3
     d80:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <write_zahl>
				}
					
				recieved_X-=384;
     d84:	89 81       	ldd	r24, Y+1	; 0x01
     d86:	9a 81       	ldd	r25, Y+2	; 0x02
     d88:	80 58       	subi	r24, 0x80	; 128
     d8a:	91 40       	sbci	r25, 0x01	; 1
     d8c:	9a 83       	std	Y+2, r25	; 0x02
     d8e:	89 83       	std	Y+1, r24	; 0x01
				recieved_Y-=512;				
     d90:	8b 81       	ldd	r24, Y+3	; 0x03
     d92:	9c 81       	ldd	r25, Y+4	; 0x04
     d94:	92 50       	subi	r25, 0x02	; 2
     d96:	9c 83       	std	Y+4, r25	; 0x04
     d98:	8b 83       	std	Y+3, r24	; 0x03
				recieved_X=((recieved_X/5)*-1)+200;
     d9a:	89 81       	ldd	r24, Y+1	; 0x01
     d9c:	9a 81       	ldd	r25, Y+2	; 0x02
     d9e:	25 e0       	ldi	r18, 0x05	; 5
     da0:	30 e0       	ldi	r19, 0x00	; 0
     da2:	b9 01       	movw	r22, r18
     da4:	0e 94 ad 0b 	call	0x175a	; 0x175a <__divmodhi4>
     da8:	cb 01       	movw	r24, r22
     daa:	9c 01       	movw	r18, r24
     dac:	88 ec       	ldi	r24, 0xC8	; 200
     dae:	90 e0       	ldi	r25, 0x00	; 0
     db0:	82 1b       	sub	r24, r18
     db2:	93 0b       	sbc	r25, r19
     db4:	9a 83       	std	Y+2, r25	; 0x02
     db6:	89 83       	std	Y+1, r24	; 0x01
				recieved_Y=(recieved_Y/5)*-1;				
     db8:	8b 81       	ldd	r24, Y+3	; 0x03
     dba:	9c 81       	ldd	r25, Y+4	; 0x04
     dbc:	25 e0       	ldi	r18, 0x05	; 5
     dbe:	30 e0       	ldi	r19, 0x00	; 0
     dc0:	b9 01       	movw	r22, r18
     dc2:	0e 94 ad 0b 	call	0x175a	; 0x175a <__divmodhi4>
     dc6:	cb 01       	movw	r24, r22
     dc8:	91 95       	neg	r25
     dca:	81 95       	neg	r24
     dcc:	91 09       	sbc	r25, r1
     dce:	9c 83       	std	Y+4, r25	; 0x04
     dd0:	8b 83       	std	Y+3, r24	; 0x03
				snprintf(buffer,30,"G0 X%d Y%d Z-30 F6000\n",recieved_X,recieved_Y);
     dd2:	8c 81       	ldd	r24, Y+4	; 0x04
     dd4:	8f 93       	push	r24
     dd6:	8b 81       	ldd	r24, Y+3	; 0x03
     dd8:	8f 93       	push	r24
     dda:	8a 81       	ldd	r24, Y+2	; 0x02
     ddc:	8f 93       	push	r24
     dde:	89 81       	ldd	r24, Y+1	; 0x01
     de0:	8f 93       	push	r24
     de2:	85 ef       	ldi	r24, 0xF5	; 245
     de4:	91 e0       	ldi	r25, 0x01	; 1
     de6:	89 2f       	mov	r24, r25
     de8:	8f 93       	push	r24
     dea:	85 ef       	ldi	r24, 0xF5	; 245
     dec:	91 e0       	ldi	r25, 0x01	; 1
     dee:	8f 93       	push	r24
     df0:	1f 92       	push	r1
     df2:	8e e1       	ldi	r24, 0x1E	; 30
     df4:	8f 93       	push	r24
     df6:	ce 01       	movw	r24, r28
     df8:	8f 5a       	subi	r24, 0xAF	; 175
     dfa:	9f 4f       	sbci	r25, 0xFF	; 255
     dfc:	29 2f       	mov	r18, r25
     dfe:	2f 93       	push	r18
     e00:	8f 93       	push	r24
     e02:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <snprintf>
     e06:	8d b7       	in	r24, 0x3d	; 61
     e08:	9e b7       	in	r25, 0x3e	; 62
     e0a:	0a 96       	adiw	r24, 0x0a	; 10
     e0c:	0f b6       	in	r0, 0x3f	; 63
     e0e:	f8 94       	cli
     e10:	de bf       	out	0x3e, r29	; 62
     e12:	0f be       	out	0x3f, r0	; 63
     e14:	cd bf       	out	0x3d, r28	; 61
				if (DIP_Switch&0x80)
     e16:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <__data_end>
     e1a:	88 23       	and	r24, r24
     e1c:	f4 f4       	brge	.+60     	; 0xe5a <main+0x972>
				{
					write_zahl(2,0,recieved_X,4,0,0);
     e1e:	89 81       	ldd	r24, Y+1	; 0x01
     e20:	9a 81       	ldd	r25, Y+2	; 0x02
     e22:	09 2e       	mov	r0, r25
     e24:	00 0c       	add	r0, r0
     e26:	aa 0b       	sbc	r26, r26
     e28:	bb 0b       	sbc	r27, r27
     e2a:	c1 2c       	mov	r12, r1
     e2c:	e1 2c       	mov	r14, r1
     e2e:	04 e0       	ldi	r16, 0x04	; 4
     e30:	9c 01       	movw	r18, r24
     e32:	ad 01       	movw	r20, r26
     e34:	60 e0       	ldi	r22, 0x00	; 0
     e36:	82 e0       	ldi	r24, 0x02	; 2
     e38:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <write_zahl>
					write_zahl(3,0,recieved_Y,4,0,0);
     e3c:	8b 81       	ldd	r24, Y+3	; 0x03
     e3e:	9c 81       	ldd	r25, Y+4	; 0x04
     e40:	09 2e       	mov	r0, r25
     e42:	00 0c       	add	r0, r0
     e44:	aa 0b       	sbc	r26, r26
     e46:	bb 0b       	sbc	r27, r27
     e48:	c1 2c       	mov	r12, r1
     e4a:	e1 2c       	mov	r14, r1
     e4c:	04 e0       	ldi	r16, 0x04	; 4
     e4e:	9c 01       	movw	r18, r24
     e50:	ad 01       	movw	r20, r26
     e52:	60 e0       	ldi	r22, 0x00	; 0
     e54:	83 e0       	ldi	r24, 0x03	; 3
     e56:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <write_zahl>
				}
				send_to_uArm(buffer);
     e5a:	ce 01       	movw	r24, r28
     e5c:	8f 5a       	subi	r24, 0xAF	; 175
     e5e:	9f 4f       	sbci	r25, 0xFF	; 255
     e60:	0e 94 ad 01 	call	0x35a	; 0x35a <send_to_uArm>
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     e64:	13 c0       	rjmp	.+38     	; 0xe8c <main+0x9a4>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
     e66:	80 e0       	ldi	r24, 0x00	; 0
     e68:	91 e0       	ldi	r25, 0x01	; 1
     e6a:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
					write_zahl(0,10,uart_string[4],4,0,0);
     e6e:	80 91 27 02 	lds	r24, 0x0227	; 0x800227 <uart_string+0x4>
     e72:	88 2f       	mov	r24, r24
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	a0 e0       	ldi	r26, 0x00	; 0
     e78:	b0 e0       	ldi	r27, 0x00	; 0
     e7a:	c1 2c       	mov	r12, r1
     e7c:	e1 2c       	mov	r14, r1
     e7e:	04 e0       	ldi	r16, 0x04	; 4
     e80:	9c 01       	movw	r18, r24
     e82:	ad 01       	movw	r20, r26
     e84:	6a e0       	ldi	r22, 0x0A	; 10
     e86:	80 e0       	ldi	r24, 0x00	; 0
     e88:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <write_zahl>
				{
					write_zahl(2,0,recieved_X,4,0,0);
					write_zahl(3,0,recieved_Y,4,0,0);
				}
				send_to_uArm(buffer);
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     e8c:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <uart_string1+0x4>
     e90:	81 33       	cpi	r24, 0x31	; 49
     e92:	49 f3       	breq	.-46     	; 0xe66 <main+0x97e>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
					write_zahl(0,10,uart_string[4],4,0,0);
				}
				to_uARM("M2210 F2000 T200\n");
     e94:	8c e0       	ldi	r24, 0x0C	; 12
     e96:	92 e0       	ldi	r25, 0x02	; 2
     e98:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
				send_Byte_0('1');
     e9c:	81 e3       	ldi	r24, 0x31	; 49
     e9e:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
				PORTB&=~0x01;
     ea2:	85 e2       	ldi	r24, 0x25	; 37
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	25 e2       	ldi	r18, 0x25	; 37
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	f9 01       	movw	r30, r18
     eac:	20 81       	ld	r18, Z
     eae:	2e 7f       	andi	r18, 0xFE	; 254
     eb0:	fc 01       	movw	r30, r24
     eb2:	20 83       	st	Z, r18
			}	
		}
		alt=neu;
     eb4:	89 85       	ldd	r24, Y+9	; 0x09
     eb6:	88 87       	std	Y+8, r24	; 0x08
	} //end while(1)
     eb8:	3d cb       	rjmp	.-2438   	; 0x534 <main+0x4c>

00000eba <init_Timer0_1ms_int>:
     eba:	cf 93       	push	r28
     ebc:	df 93       	push	r29
     ebe:	cd b7       	in	r28, 0x3d	; 61
     ec0:	de b7       	in	r29, 0x3e	; 62
     ec2:	84 e4       	ldi	r24, 0x44	; 68
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	24 e4       	ldi	r18, 0x44	; 68
     ec8:	30 e0       	ldi	r19, 0x00	; 0
     eca:	f9 01       	movw	r30, r18
     ecc:	20 81       	ld	r18, Z
     ece:	22 60       	ori	r18, 0x02	; 2
     ed0:	fc 01       	movw	r30, r24
     ed2:	20 83       	st	Z, r18
     ed4:	85 e4       	ldi	r24, 0x45	; 69
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	25 e4       	ldi	r18, 0x45	; 69
     eda:	30 e0       	ldi	r19, 0x00	; 0
     edc:	f9 01       	movw	r30, r18
     ede:	20 81       	ld	r18, Z
     ee0:	23 60       	ori	r18, 0x03	; 3
     ee2:	fc 01       	movw	r30, r24
     ee4:	20 83       	st	Z, r18
     ee6:	87 e4       	ldi	r24, 0x47	; 71
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	29 ef       	ldi	r18, 0xF9	; 249
     eec:	fc 01       	movw	r30, r24
     eee:	20 83       	st	Z, r18
     ef0:	8e e6       	ldi	r24, 0x6E	; 110
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	2e e6       	ldi	r18, 0x6E	; 110
     ef6:	30 e0       	ldi	r19, 0x00	; 0
     ef8:	f9 01       	movw	r30, r18
     efa:	20 81       	ld	r18, Z
     efc:	22 60       	ori	r18, 0x02	; 2
     efe:	fc 01       	movw	r30, r24
     f00:	20 83       	st	Z, r18
     f02:	00 00       	nop
     f04:	df 91       	pop	r29
     f06:	cf 91       	pop	r28
     f08:	08 95       	ret

00000f0a <__vector_16>:
     f0a:	1f 92       	push	r1
     f0c:	0f 92       	push	r0
     f0e:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     f12:	0f 92       	push	r0
     f14:	11 24       	eor	r1, r1
     f16:	2f 93       	push	r18
     f18:	3f 93       	push	r19
     f1a:	4f 93       	push	r20
     f1c:	5f 93       	push	r21
     f1e:	6f 93       	push	r22
     f20:	7f 93       	push	r23
     f22:	8f 93       	push	r24
     f24:	9f 93       	push	r25
     f26:	af 93       	push	r26
     f28:	bf 93       	push	r27
     f2a:	ef 93       	push	r30
     f2c:	ff 93       	push	r31
     f2e:	cf 93       	push	r28
     f30:	df 93       	push	r29
     f32:	cd b7       	in	r28, 0x3d	; 61
     f34:	de b7       	in	r29, 0x3e	; 62
     f36:	80 91 8d 02 	lds	r24, 0x028D	; 0x80028d <tick_1ms>
     f3a:	90 91 8e 02 	lds	r25, 0x028E	; 0x80028e <tick_1ms+0x1>
     f3e:	a0 91 8f 02 	lds	r26, 0x028F	; 0x80028f <tick_1ms+0x2>
     f42:	b0 91 90 02 	lds	r27, 0x0290	; 0x800290 <tick_1ms+0x3>
     f46:	01 96       	adiw	r24, 0x01	; 1
     f48:	a1 1d       	adc	r26, r1
     f4a:	b1 1d       	adc	r27, r1
     f4c:	80 93 8d 02 	sts	0x028D, r24	; 0x80028d <tick_1ms>
     f50:	90 93 8e 02 	sts	0x028E, r25	; 0x80028e <tick_1ms+0x1>
     f54:	a0 93 8f 02 	sts	0x028F, r26	; 0x80028f <tick_1ms+0x2>
     f58:	b0 93 90 02 	sts	0x0290, r27	; 0x800290 <tick_1ms+0x3>
     f5c:	80 91 8d 02 	lds	r24, 0x028D	; 0x80028d <tick_1ms>
     f60:	90 91 8e 02 	lds	r25, 0x028E	; 0x80028e <tick_1ms+0x1>
     f64:	a0 91 8f 02 	lds	r26, 0x028F	; 0x80028f <tick_1ms+0x2>
     f68:	b0 91 90 02 	lds	r27, 0x0290	; 0x800290 <tick_1ms+0x3>
     f6c:	28 ee       	ldi	r18, 0xE8	; 232
     f6e:	33 e0       	ldi	r19, 0x03	; 3
     f70:	40 e0       	ldi	r20, 0x00	; 0
     f72:	50 e0       	ldi	r21, 0x00	; 0
     f74:	bc 01       	movw	r22, r24
     f76:	cd 01       	movw	r24, r26
     f78:	0e 94 c1 0b 	call	0x1782	; 0x1782 <__udivmodsi4>
     f7c:	dc 01       	movw	r26, r24
     f7e:	cb 01       	movw	r24, r22
     f80:	89 2b       	or	r24, r25
     f82:	8a 2b       	or	r24, r26
     f84:	8b 2b       	or	r24, r27
     f86:	99 f4       	brne	.+38     	; 0xfae <__vector_16+0xa4>
     f88:	80 91 91 02 	lds	r24, 0x0291	; 0x800291 <tick_1s>
     f8c:	90 91 92 02 	lds	r25, 0x0292	; 0x800292 <tick_1s+0x1>
     f90:	a0 91 93 02 	lds	r26, 0x0293	; 0x800293 <tick_1s+0x2>
     f94:	b0 91 94 02 	lds	r27, 0x0294	; 0x800294 <tick_1s+0x3>
     f98:	01 96       	adiw	r24, 0x01	; 1
     f9a:	a1 1d       	adc	r26, r1
     f9c:	b1 1d       	adc	r27, r1
     f9e:	80 93 91 02 	sts	0x0291, r24	; 0x800291 <tick_1s>
     fa2:	90 93 92 02 	sts	0x0292, r25	; 0x800292 <tick_1s+0x1>
     fa6:	a0 93 93 02 	sts	0x0293, r26	; 0x800293 <tick_1s+0x2>
     faa:	b0 93 94 02 	sts	0x0294, r27	; 0x800294 <tick_1s+0x3>
     fae:	80 91 89 02 	lds	r24, 0x0289	; 0x800289 <tick_1ms_cnt>
     fb2:	90 91 8a 02 	lds	r25, 0x028A	; 0x80028a <tick_1ms_cnt+0x1>
     fb6:	a0 91 8b 02 	lds	r26, 0x028B	; 0x80028b <tick_1ms_cnt+0x2>
     fba:	b0 91 8c 02 	lds	r27, 0x028C	; 0x80028c <tick_1ms_cnt+0x3>
     fbe:	89 2b       	or	r24, r25
     fc0:	8a 2b       	or	r24, r26
     fc2:	8b 2b       	or	r24, r27
     fc4:	99 f0       	breq	.+38     	; 0xfec <__vector_16+0xe2>
     fc6:	80 91 89 02 	lds	r24, 0x0289	; 0x800289 <tick_1ms_cnt>
     fca:	90 91 8a 02 	lds	r25, 0x028A	; 0x80028a <tick_1ms_cnt+0x1>
     fce:	a0 91 8b 02 	lds	r26, 0x028B	; 0x80028b <tick_1ms_cnt+0x2>
     fd2:	b0 91 8c 02 	lds	r27, 0x028C	; 0x80028c <tick_1ms_cnt+0x3>
     fd6:	01 97       	sbiw	r24, 0x01	; 1
     fd8:	a1 09       	sbc	r26, r1
     fda:	b1 09       	sbc	r27, r1
     fdc:	80 93 89 02 	sts	0x0289, r24	; 0x800289 <tick_1ms_cnt>
     fe0:	90 93 8a 02 	sts	0x028A, r25	; 0x80028a <tick_1ms_cnt+0x1>
     fe4:	a0 93 8b 02 	sts	0x028B, r26	; 0x80028b <tick_1ms_cnt+0x2>
     fe8:	b0 93 8c 02 	sts	0x028C, r27	; 0x80028c <tick_1ms_cnt+0x3>
     fec:	00 00       	nop
     fee:	df 91       	pop	r29
     ff0:	cf 91       	pop	r28
     ff2:	ff 91       	pop	r31
     ff4:	ef 91       	pop	r30
     ff6:	bf 91       	pop	r27
     ff8:	af 91       	pop	r26
     ffa:	9f 91       	pop	r25
     ffc:	8f 91       	pop	r24
     ffe:	7f 91       	pop	r23
    1000:	6f 91       	pop	r22
    1002:	5f 91       	pop	r21
    1004:	4f 91       	pop	r20
    1006:	3f 91       	pop	r19
    1008:	2f 91       	pop	r18
    100a:	0f 90       	pop	r0
    100c:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1010:	0f 90       	pop	r0
    1012:	1f 90       	pop	r1
    1014:	18 95       	reti

00001016 <wait_1ms>:
    1016:	cf 93       	push	r28
    1018:	df 93       	push	r29
    101a:	00 d0       	rcall	.+0      	; 0x101c <wait_1ms+0x6>
    101c:	00 d0       	rcall	.+0      	; 0x101e <wait_1ms+0x8>
    101e:	cd b7       	in	r28, 0x3d	; 61
    1020:	de b7       	in	r29, 0x3e	; 62
    1022:	69 83       	std	Y+1, r22	; 0x01
    1024:	7a 83       	std	Y+2, r23	; 0x02
    1026:	8b 83       	std	Y+3, r24	; 0x03
    1028:	9c 83       	std	Y+4, r25	; 0x04
    102a:	89 81       	ldd	r24, Y+1	; 0x01
    102c:	9a 81       	ldd	r25, Y+2	; 0x02
    102e:	ab 81       	ldd	r26, Y+3	; 0x03
    1030:	bc 81       	ldd	r27, Y+4	; 0x04
    1032:	89 2b       	or	r24, r25
    1034:	8a 2b       	or	r24, r26
    1036:	8b 2b       	or	r24, r27
    1038:	69 f0       	breq	.+26     	; 0x1054 <wait_1ms+0x3e>
    103a:	89 81       	ldd	r24, Y+1	; 0x01
    103c:	9a 81       	ldd	r25, Y+2	; 0x02
    103e:	ab 81       	ldd	r26, Y+3	; 0x03
    1040:	bc 81       	ldd	r27, Y+4	; 0x04
    1042:	80 93 89 02 	sts	0x0289, r24	; 0x800289 <tick_1ms_cnt>
    1046:	90 93 8a 02 	sts	0x028A, r25	; 0x80028a <tick_1ms_cnt+0x1>
    104a:	a0 93 8b 02 	sts	0x028B, r26	; 0x80028b <tick_1ms_cnt+0x2>
    104e:	b0 93 8c 02 	sts	0x028C, r27	; 0x80028c <tick_1ms_cnt+0x3>
    1052:	0c c0       	rjmp	.+24     	; 0x106c <wait_1ms+0x56>
    1054:	81 e0       	ldi	r24, 0x01	; 1
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	a0 e0       	ldi	r26, 0x00	; 0
    105a:	b0 e0       	ldi	r27, 0x00	; 0
    105c:	80 93 89 02 	sts	0x0289, r24	; 0x800289 <tick_1ms_cnt>
    1060:	90 93 8a 02 	sts	0x028A, r25	; 0x80028a <tick_1ms_cnt+0x1>
    1064:	a0 93 8b 02 	sts	0x028B, r26	; 0x80028b <tick_1ms_cnt+0x2>
    1068:	b0 93 8c 02 	sts	0x028C, r27	; 0x80028c <tick_1ms_cnt+0x3>
    106c:	00 00       	nop
    106e:	80 91 89 02 	lds	r24, 0x0289	; 0x800289 <tick_1ms_cnt>
    1072:	90 91 8a 02 	lds	r25, 0x028A	; 0x80028a <tick_1ms_cnt+0x1>
    1076:	a0 91 8b 02 	lds	r26, 0x028B	; 0x80028b <tick_1ms_cnt+0x2>
    107a:	b0 91 8c 02 	lds	r27, 0x028C	; 0x80028c <tick_1ms_cnt+0x3>
    107e:	89 2b       	or	r24, r25
    1080:	8a 2b       	or	r24, r26
    1082:	8b 2b       	or	r24, r27
    1084:	a1 f7       	brne	.-24     	; 0x106e <wait_1ms+0x58>
    1086:	00 00       	nop
    1088:	0f 90       	pop	r0
    108a:	0f 90       	pop	r0
    108c:	0f 90       	pop	r0
    108e:	0f 90       	pop	r0
    1090:	df 91       	pop	r29
    1092:	cf 91       	pop	r28
    1094:	08 95       	ret

00001096 <delay_nop>:
    1096:	cf 93       	push	r28
    1098:	df 93       	push	r29
    109a:	00 d0       	rcall	.+0      	; 0x109c <delay_nop+0x6>
    109c:	cd b7       	in	r28, 0x3d	; 61
    109e:	de b7       	in	r29, 0x3e	; 62
    10a0:	8a 83       	std	Y+2, r24	; 0x02
    10a2:	19 82       	std	Y+1, r1	; 0x01
    10a4:	04 c0       	rjmp	.+8      	; 0x10ae <delay_nop+0x18>
    10a6:	00 00       	nop
    10a8:	89 81       	ldd	r24, Y+1	; 0x01
    10aa:	8f 5f       	subi	r24, 0xFF	; 255
    10ac:	89 83       	std	Y+1, r24	; 0x01
    10ae:	99 81       	ldd	r25, Y+1	; 0x01
    10b0:	8a 81       	ldd	r24, Y+2	; 0x02
    10b2:	98 17       	cp	r25, r24
    10b4:	c0 f3       	brcs	.-16     	; 0x10a6 <delay_nop+0x10>
    10b6:	00 00       	nop
    10b8:	0f 90       	pop	r0
    10ba:	0f 90       	pop	r0
    10bc:	df 91       	pop	r29
    10be:	cf 91       	pop	r28
    10c0:	08 95       	ret

000010c2 <write_lcd_f>:
    10c2:	91 e0       	ldi	r25, 0x01	; 1
    10c4:	90 93 95 02 	sts	0x0295, r25	; 0x800295 <write_RGB_LCD_activ>
    10c8:	40 9a       	sbi	0x08, 0	; 8
    10ca:	41 98       	cbi	0x08, 1	; 8
    10cc:	41 98       	cbi	0x08, 1	; 8
    10ce:	41 9a       	sbi	0x08, 1	; 8
    10d0:	41 9a       	sbi	0x08, 1	; 8
    10d2:	41 98       	cbi	0x08, 1	; 8
    10d4:	41 98       	cbi	0x08, 1	; 8
    10d6:	41 9a       	sbi	0x08, 1	; 8
    10d8:	41 9a       	sbi	0x08, 1	; 8
    10da:	41 98       	cbi	0x08, 1	; 8
    10dc:	41 98       	cbi	0x08, 1	; 8
    10de:	41 9a       	sbi	0x08, 1	; 8
    10e0:	41 9a       	sbi	0x08, 1	; 8
    10e2:	41 98       	cbi	0x08, 1	; 8
    10e4:	41 98       	cbi	0x08, 1	; 8
    10e6:	41 9a       	sbi	0x08, 1	; 8
    10e8:	41 9a       	sbi	0x08, 1	; 8
    10ea:	41 98       	cbi	0x08, 1	; 8
    10ec:	41 98       	cbi	0x08, 1	; 8
    10ee:	41 9a       	sbi	0x08, 1	; 8
    10f0:	40 98       	cbi	0x08, 0	; 8
    10f2:	41 98       	cbi	0x08, 1	; 8
    10f4:	41 98       	cbi	0x08, 1	; 8
    10f6:	41 9a       	sbi	0x08, 1	; 8
    10f8:	83 34       	cpi	r24, 0x43	; 67
    10fa:	a9 f1       	breq	.+106    	; 0x1166 <__stack+0x67>
    10fc:	40 9a       	sbi	0x08, 0	; 8
    10fe:	41 98       	cbi	0x08, 1	; 8
    1100:	41 98       	cbi	0x08, 1	; 8
    1102:	41 9a       	sbi	0x08, 1	; 8
    1104:	40 98       	cbi	0x08, 0	; 8
    1106:	41 98       	cbi	0x08, 1	; 8
    1108:	41 98       	cbi	0x08, 1	; 8
    110a:	41 9a       	sbi	0x08, 1	; 8
    110c:	84 e0       	ldi	r24, 0x04	; 4
    110e:	41 98       	cbi	0x08, 1	; 8
    1110:	60 ff       	sbrs	r22, 0
    1112:	27 c0       	rjmp	.+78     	; 0x1162 <__stack+0x63>
    1114:	40 9a       	sbi	0x08, 0	; 8
    1116:	66 95       	lsr	r22
    1118:	41 98       	cbi	0x08, 1	; 8
    111a:	41 9a       	sbi	0x08, 1	; 8
    111c:	81 50       	subi	r24, 0x01	; 1
    111e:	b9 f7       	brne	.-18     	; 0x110e <__stack+0xf>
    1120:	40 98       	cbi	0x08, 0	; 8
    1122:	84 e0       	ldi	r24, 0x04	; 4
    1124:	41 98       	cbi	0x08, 1	; 8
    1126:	41 98       	cbi	0x08, 1	; 8
    1128:	41 9a       	sbi	0x08, 1	; 8
    112a:	81 50       	subi	r24, 0x01	; 1
    112c:	d9 f7       	brne	.-10     	; 0x1124 <__stack+0x25>
    112e:	84 e0       	ldi	r24, 0x04	; 4
    1130:	41 98       	cbi	0x08, 1	; 8
    1132:	60 ff       	sbrs	r22, 0
    1134:	14 c0       	rjmp	.+40     	; 0x115e <__stack+0x5f>
    1136:	40 9a       	sbi	0x08, 0	; 8
    1138:	66 95       	lsr	r22
    113a:	41 98       	cbi	0x08, 1	; 8
    113c:	41 9a       	sbi	0x08, 1	; 8
    113e:	81 50       	subi	r24, 0x01	; 1
    1140:	b9 f7       	brne	.-18     	; 0x1130 <__stack+0x31>
    1142:	40 98       	cbi	0x08, 0	; 8
    1144:	84 e0       	ldi	r24, 0x04	; 4
    1146:	41 98       	cbi	0x08, 1	; 8
    1148:	41 98       	cbi	0x08, 1	; 8
    114a:	41 9a       	sbi	0x08, 1	; 8
    114c:	81 50       	subi	r24, 0x01	; 1
    114e:	d9 f7       	brne	.-10     	; 0x1146 <__stack+0x47>
    1150:	84 e1       	ldi	r24, 0x14	; 20
    1152:	40 9a       	sbi	0x08, 0	; 8
    1154:	81 50       	subi	r24, 0x01	; 1
    1156:	e9 f7       	brne	.-6      	; 0x1152 <__stack+0x53>
    1158:	10 92 95 02 	sts	0x0295, r1	; 0x800295 <write_RGB_LCD_activ>
    115c:	08 95       	ret
    115e:	40 98       	cbi	0x08, 0	; 8
    1160:	eb cf       	rjmp	.-42     	; 0x1138 <__stack+0x39>
    1162:	40 98       	cbi	0x08, 0	; 8
    1164:	d8 cf       	rjmp	.-80     	; 0x1116 <__stack+0x17>
    1166:	40 98       	cbi	0x08, 0	; 8
    1168:	ca cf       	rjmp	.-108    	; 0x10fe <write_lcd_f+0x3c>

0000116a <write_text_ram>:
    116a:	0f 93       	push	r16
    116c:	1f 93       	push	r17
    116e:	df 93       	push	r29
    1170:	8a 01       	movw	r16, r20
    1172:	90 e2       	ldi	r25, 0x20	; 32
    1174:	89 9f       	mul	r24, r25
    1176:	60 0d       	add	r22, r0
    1178:	11 24       	eor	r1, r1
    117a:	60 68       	ori	r22, 0x80	; 128
    117c:	83 e4       	ldi	r24, 0x43	; 67
    117e:	0e 94 61 08 	call	0x10c2	; 0x10c2 <write_lcd_f>
    1182:	f8 01       	movw	r30, r16
    1184:	60 81       	ld	r22, Z
    1186:	66 23       	and	r22, r22
    1188:	59 f0       	breq	.+22     	; 0x11a0 <write_text_ram+0x36>
    118a:	d0 e0       	ldi	r29, 0x00	; 0
    118c:	df 5f       	subi	r29, 0xFF	; 255
    118e:	84 e4       	ldi	r24, 0x44	; 68
    1190:	0e 94 61 08 	call	0x10c2	; 0x10c2 <write_lcd_f>
    1194:	f8 01       	movw	r30, r16
    1196:	ed 0f       	add	r30, r29
    1198:	f1 1d       	adc	r31, r1
    119a:	60 81       	ld	r22, Z
    119c:	61 11       	cpse	r22, r1
    119e:	f6 cf       	rjmp	.-20     	; 0x118c <write_text_ram+0x22>
    11a0:	df 91       	pop	r29
    11a2:	1f 91       	pop	r17
    11a4:	0f 91       	pop	r16
    11a6:	08 95       	ret

000011a8 <write_zahl>:
    11a8:	2f 92       	push	r2
    11aa:	3f 92       	push	r3
    11ac:	4f 92       	push	r4
    11ae:	5f 92       	push	r5
    11b0:	6f 92       	push	r6
    11b2:	7f 92       	push	r7
    11b4:	8f 92       	push	r8
    11b6:	9f 92       	push	r9
    11b8:	af 92       	push	r10
    11ba:	bf 92       	push	r11
    11bc:	cf 92       	push	r12
    11be:	df 92       	push	r13
    11c0:	ef 92       	push	r14
    11c2:	ff 92       	push	r15
    11c4:	0f 93       	push	r16
    11c6:	1f 93       	push	r17
    11c8:	cf 93       	push	r28
    11ca:	df 93       	push	r29
    11cc:	cd b7       	in	r28, 0x3d	; 61
    11ce:	de b7       	in	r29, 0x3e	; 62
    11d0:	63 97       	sbiw	r28, 0x13	; 19
    11d2:	0f b6       	in	r0, 0x3f	; 63
    11d4:	f8 94       	cli
    11d6:	de bf       	out	0x3e, r29	; 62
    11d8:	0f be       	out	0x3f, r0	; 63
    11da:	cd bf       	out	0x3d, r28	; 61
    11dc:	8a 8b       	std	Y+18, r24	; 0x12
    11de:	6b 8b       	std	Y+19, r22	; 0x13
    11e0:	29 01       	movw	r4, r18
    11e2:	3a 01       	movw	r6, r20
    11e4:	c8 8a       	std	Y+16, r12	; 0x10
    11e6:	04 36       	cpi	r16, 0x64	; 100
    11e8:	08 f4       	brcc	.+2      	; 0x11ec <write_zahl+0x44>
    11ea:	bd c0       	rjmp	.+378    	; 0x1366 <write_zahl+0x1be>
    11ec:	04 56       	subi	r16, 0x64	; 100
    11ee:	19 8a       	std	Y+17, r1	; 0x11
    11f0:	0b 30       	cpi	r16, 0x0B	; 11
    11f2:	08 f0       	brcs	.+2      	; 0x11f6 <write_zahl+0x4e>
    11f4:	0a e0       	ldi	r16, 0x0A	; 10
    11f6:	ef 86       	std	Y+15, r14	; 0x0f
    11f8:	88 89       	ldd	r24, Y+16	; 0x10
    11fa:	8e 15       	cp	r24, r14
    11fc:	08 f4       	brcc	.+2      	; 0x1200 <write_zahl+0x58>
    11fe:	8f 87       	std	Y+15, r24	; 0x0f
    1200:	20 2e       	mov	r2, r16
    1202:	31 2c       	mov	r3, r1
    1204:	c1 01       	movw	r24, r2
    1206:	ef 85       	ldd	r30, Y+15	; 0x0f
    1208:	8e 0f       	add	r24, r30
    120a:	91 1d       	adc	r25, r1
    120c:	0b 97       	sbiw	r24, 0x0b	; 11
    120e:	1c f0       	brlt	.+6      	; 0x1216 <write_zahl+0x6e>
    1210:	8a e0       	ldi	r24, 0x0A	; 10
    1212:	80 1b       	sub	r24, r16
    1214:	8f 87       	std	Y+15, r24	; 0x0f
    1216:	c3 01       	movw	r24, r6
    1218:	b2 01       	movw	r22, r4
    121a:	2a e0       	ldi	r18, 0x0A	; 10
    121c:	30 e0       	ldi	r19, 0x00	; 0
    121e:	40 e0       	ldi	r20, 0x00	; 0
    1220:	50 e0       	ldi	r21, 0x00	; 0
    1222:	0e 94 c1 0b 	call	0x1782	; 0x1782 <__udivmodsi4>
    1226:	60 5d       	subi	r22, 0xD0	; 208
    1228:	6c 87       	std	Y+12, r22	; 0x0c
    122a:	1a e0       	ldi	r17, 0x0A	; 10
    122c:	3a e0       	ldi	r19, 0x0A	; 10
    122e:	c3 2e       	mov	r12, r19
    1230:	d1 2c       	mov	r13, r1
    1232:	e1 2c       	mov	r14, r1
    1234:	f1 2c       	mov	r15, r1
    1236:	4a e0       	ldi	r20, 0x0A	; 10
    1238:	84 2e       	mov	r8, r20
    123a:	91 2c       	mov	r9, r1
    123c:	a1 2c       	mov	r10, r1
    123e:	b1 2c       	mov	r11, r1
    1240:	81 e0       	ldi	r24, 0x01	; 1
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	8c 0f       	add	r24, r28
    1246:	9d 1f       	adc	r25, r29
    1248:	81 0f       	add	r24, r17
    124a:	91 1d       	adc	r25, r1
    124c:	9e 87       	std	Y+14, r25	; 0x0e
    124e:	8d 87       	std	Y+13, r24	; 0x0d
    1250:	c3 01       	movw	r24, r6
    1252:	b2 01       	movw	r22, r4
    1254:	a7 01       	movw	r20, r14
    1256:	96 01       	movw	r18, r12
    1258:	0e 94 c1 0b 	call	0x1782	; 0x1782 <__udivmodsi4>
    125c:	ca 01       	movw	r24, r20
    125e:	b9 01       	movw	r22, r18
    1260:	a5 01       	movw	r20, r10
    1262:	94 01       	movw	r18, r8
    1264:	0e 94 c1 0b 	call	0x1782	; 0x1782 <__udivmodsi4>
    1268:	60 5d       	subi	r22, 0xD0	; 208
    126a:	ed 85       	ldd	r30, Y+13	; 0x0d
    126c:	fe 85       	ldd	r31, Y+14	; 0x0e
    126e:	60 83       	st	Z, r22
    1270:	cc 0c       	add	r12, r12
    1272:	dd 1c       	adc	r13, r13
    1274:	ee 1c       	adc	r14, r14
    1276:	ff 1c       	adc	r15, r15
    1278:	d7 01       	movw	r26, r14
    127a:	c6 01       	movw	r24, r12
    127c:	88 0f       	add	r24, r24
    127e:	99 1f       	adc	r25, r25
    1280:	aa 1f       	adc	r26, r26
    1282:	bb 1f       	adc	r27, r27
    1284:	88 0f       	add	r24, r24
    1286:	99 1f       	adc	r25, r25
    1288:	aa 1f       	adc	r26, r26
    128a:	bb 1f       	adc	r27, r27
    128c:	c8 0e       	add	r12, r24
    128e:	d9 1e       	adc	r13, r25
    1290:	ea 1e       	adc	r14, r26
    1292:	fb 1e       	adc	r15, r27
    1294:	11 50       	subi	r17, 0x01	; 1
    1296:	a0 f6       	brcc	.-88     	; 0x1240 <write_zahl+0x98>
    1298:	2c e0       	ldi	r18, 0x0C	; 12
    129a:	f8 89       	ldd	r31, Y+16	; 0x10
    129c:	2f 1b       	sub	r18, r31
    129e:	82 2f       	mov	r24, r18
    12a0:	80 1b       	sub	r24, r16
    12a2:	00 23       	and	r16, r16
    12a4:	09 f4       	brne	.+2      	; 0x12a8 <write_zahl+0x100>
    12a6:	85 c0       	rjmp	.+266    	; 0x13b2 <write_zahl+0x20a>
    12a8:	fe 01       	movw	r30, r28
    12aa:	31 96       	adiw	r30, 0x01	; 1
    12ac:	a1 e0       	ldi	r26, 0x01	; 1
    12ae:	b0 e0       	ldi	r27, 0x00	; 0
    12b0:	ac 0f       	add	r26, r28
    12b2:	bd 1f       	adc	r27, r29
    12b4:	a8 0f       	add	r26, r24
    12b6:	b1 1d       	adc	r27, r1
    12b8:	9c 91       	ld	r25, X
    12ba:	91 93       	st	Z+, r25
    12bc:	8f 5f       	subi	r24, 0xFF	; 255
    12be:	28 13       	cpse	r18, r24
    12c0:	f5 cf       	rjmp	.-22     	; 0x12ac <write_zahl+0x104>
    12c2:	8f 85       	ldd	r24, Y+15	; 0x0f
    12c4:	81 11       	cpse	r24, r1
    12c6:	52 c0       	rjmp	.+164    	; 0x136c <write_zahl+0x1c4>
    12c8:	f1 01       	movw	r30, r2
    12ca:	81 e0       	ldi	r24, 0x01	; 1
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	8c 0f       	add	r24, r28
    12d0:	9d 1f       	adc	r25, r29
    12d2:	e8 0f       	add	r30, r24
    12d4:	f9 1f       	adc	r31, r25
    12d6:	10 82       	st	Z, r1
    12d8:	99 89       	ldd	r25, Y+17	; 0x11
    12da:	99 23       	and	r25, r25
    12dc:	21 f1       	breq	.+72     	; 0x1326 <write_zahl+0x17e>
    12de:	89 81       	ldd	r24, Y+1	; 0x01
    12e0:	80 33       	cpi	r24, 0x30	; 48
    12e2:	09 f5       	brne	.+66     	; 0x1326 <write_zahl+0x17e>
    12e4:	a1 01       	movw	r20, r2
    12e6:	41 50       	subi	r20, 0x01	; 1
    12e8:	51 09       	sbc	r21, r1
    12ea:	14 16       	cp	r1, r20
    12ec:	15 06       	cpc	r1, r21
    12ee:	dc f4       	brge	.+54     	; 0x1326 <write_zahl+0x17e>
    12f0:	80 e0       	ldi	r24, 0x00	; 0
    12f2:	90 e0       	ldi	r25, 0x00	; 0
    12f4:	20 e0       	ldi	r18, 0x00	; 0
    12f6:	60 e2       	ldi	r22, 0x20	; 32
    12f8:	03 c0       	rjmp	.+6      	; 0x1300 <write_zahl+0x158>
    12fa:	84 17       	cp	r24, r20
    12fc:	95 07       	cpc	r25, r21
    12fe:	9c f4       	brge	.+38     	; 0x1326 <write_zahl+0x17e>
    1300:	2f 5f       	subi	r18, 0xFF	; 255
    1302:	e1 e0       	ldi	r30, 0x01	; 1
    1304:	f0 e0       	ldi	r31, 0x00	; 0
    1306:	ec 0f       	add	r30, r28
    1308:	fd 1f       	adc	r31, r29
    130a:	e8 0f       	add	r30, r24
    130c:	f9 1f       	adc	r31, r25
    130e:	60 83       	st	Z, r22
    1310:	82 2f       	mov	r24, r18
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	e1 e0       	ldi	r30, 0x01	; 1
    1316:	f0 e0       	ldi	r31, 0x00	; 0
    1318:	ec 0f       	add	r30, r28
    131a:	fd 1f       	adc	r31, r29
    131c:	e8 0f       	add	r30, r24
    131e:	f9 1f       	adc	r31, r25
    1320:	30 81       	ld	r19, Z
    1322:	30 33       	cpi	r19, 0x30	; 48
    1324:	51 f3       	breq	.-44     	; 0x12fa <write_zahl+0x152>
    1326:	ae 01       	movw	r20, r28
    1328:	4f 5f       	subi	r20, 0xFF	; 255
    132a:	5f 4f       	sbci	r21, 0xFF	; 255
    132c:	6b 89       	ldd	r22, Y+19	; 0x13
    132e:	8a 89       	ldd	r24, Y+18	; 0x12
    1330:	0e 94 b5 08 	call	0x116a	; 0x116a <write_text_ram>
    1334:	63 96       	adiw	r28, 0x13	; 19
    1336:	0f b6       	in	r0, 0x3f	; 63
    1338:	f8 94       	cli
    133a:	de bf       	out	0x3e, r29	; 62
    133c:	0f be       	out	0x3f, r0	; 63
    133e:	cd bf       	out	0x3d, r28	; 61
    1340:	df 91       	pop	r29
    1342:	cf 91       	pop	r28
    1344:	1f 91       	pop	r17
    1346:	0f 91       	pop	r16
    1348:	ff 90       	pop	r15
    134a:	ef 90       	pop	r14
    134c:	df 90       	pop	r13
    134e:	cf 90       	pop	r12
    1350:	bf 90       	pop	r11
    1352:	af 90       	pop	r10
    1354:	9f 90       	pop	r9
    1356:	8f 90       	pop	r8
    1358:	7f 90       	pop	r7
    135a:	6f 90       	pop	r6
    135c:	5f 90       	pop	r5
    135e:	4f 90       	pop	r4
    1360:	3f 90       	pop	r3
    1362:	2f 90       	pop	r2
    1364:	08 95       	ret
    1366:	21 e0       	ldi	r18, 0x01	; 1
    1368:	29 8b       	std	Y+17, r18	; 0x11
    136a:	42 cf       	rjmp	.-380    	; 0x11f0 <write_zahl+0x48>
    136c:	0f 5f       	subi	r16, 0xFF	; 255
    136e:	8e e2       	ldi	r24, 0x2E	; 46
    1370:	e1 e0       	ldi	r30, 0x01	; 1
    1372:	f0 e0       	ldi	r31, 0x00	; 0
    1374:	ec 0f       	add	r30, r28
    1376:	fd 1f       	adc	r31, r29
    1378:	e2 0d       	add	r30, r2
    137a:	f3 1d       	adc	r31, r3
    137c:	80 83       	st	Z, r24
    137e:	e0 2f       	mov	r30, r16
    1380:	20 1b       	sub	r18, r16
    1382:	82 2f       	mov	r24, r18
    1384:	8e 0f       	add	r24, r30
    1386:	a1 e0       	ldi	r26, 0x01	; 1
    1388:	b0 e0       	ldi	r27, 0x00	; 0
    138a:	ac 0f       	add	r26, r28
    138c:	bd 1f       	adc	r27, r29
    138e:	a8 0f       	add	r26, r24
    1390:	b1 1d       	adc	r27, r1
    1392:	8c 91       	ld	r24, X
    1394:	a1 e0       	ldi	r26, 0x01	; 1
    1396:	b0 e0       	ldi	r27, 0x00	; 0
    1398:	ac 0f       	add	r26, r28
    139a:	bd 1f       	adc	r27, r29
    139c:	ae 0f       	add	r26, r30
    139e:	b1 1d       	adc	r27, r1
    13a0:	8c 93       	st	X, r24
    13a2:	ef 5f       	subi	r30, 0xFF	; 255
    13a4:	8e 2f       	mov	r24, r30
    13a6:	80 1b       	sub	r24, r16
    13a8:	9f 85       	ldd	r25, Y+15	; 0x0f
    13aa:	89 17       	cp	r24, r25
    13ac:	50 f3       	brcs	.-44     	; 0x1382 <write_zahl+0x1da>
    13ae:	f0 e0       	ldi	r31, 0x00	; 0
    13b0:	8c cf       	rjmp	.-232    	; 0x12ca <write_zahl+0x122>
    13b2:	ef 85       	ldd	r30, Y+15	; 0x0f
    13b4:	ee 23       	and	r30, r30
    13b6:	21 f0       	breq	.+8      	; 0x13c0 <write_zahl+0x218>
    13b8:	8e e2       	ldi	r24, 0x2E	; 46
    13ba:	89 83       	std	Y+1, r24	; 0x01
    13bc:	01 e0       	ldi	r16, 0x01	; 1
    13be:	df cf       	rjmp	.-66     	; 0x137e <write_zahl+0x1d6>
    13c0:	e0 e0       	ldi	r30, 0x00	; 0
    13c2:	f0 e0       	ldi	r31, 0x00	; 0
    13c4:	82 cf       	rjmp	.-252    	; 0x12ca <write_zahl+0x122>

000013c6 <lcd_init>:
    13c6:	df 93       	push	r29
    13c8:	38 9a       	sbi	0x07, 0	; 7
    13ca:	39 9a       	sbi	0x07, 1	; 7
    13cc:	d2 e3       	ldi	r29, 0x32	; 50
    13ce:	88 e7       	ldi	r24, 0x78	; 120
    13d0:	0e 94 4b 08 	call	0x1096	; 0x1096 <delay_nop>
    13d4:	d1 50       	subi	r29, 0x01	; 1
    13d6:	d9 f7       	brne	.-10     	; 0x13ce <lcd_init+0x8>
    13d8:	64 e3       	ldi	r22, 0x34	; 52
    13da:	83 e4       	ldi	r24, 0x43	; 67
    13dc:	0e 94 61 08 	call	0x10c2	; 0x10c2 <write_lcd_f>
    13e0:	64 e3       	ldi	r22, 0x34	; 52
    13e2:	83 e4       	ldi	r24, 0x43	; 67
    13e4:	0e 94 61 08 	call	0x10c2	; 0x10c2 <write_lcd_f>
    13e8:	69 e0       	ldi	r22, 0x09	; 9
    13ea:	83 e4       	ldi	r24, 0x43	; 67
    13ec:	0e 94 61 08 	call	0x10c2	; 0x10c2 <write_lcd_f>
    13f0:	60 e3       	ldi	r22, 0x30	; 48
    13f2:	83 e4       	ldi	r24, 0x43	; 67
    13f4:	0e 94 61 08 	call	0x10c2	; 0x10c2 <write_lcd_f>
    13f8:	6c e0       	ldi	r22, 0x0C	; 12
    13fa:	83 e4       	ldi	r24, 0x43	; 67
    13fc:	0e 94 61 08 	call	0x10c2	; 0x10c2 <write_lcd_f>
    1400:	61 e0       	ldi	r22, 0x01	; 1
    1402:	83 e4       	ldi	r24, 0x43	; 67
    1404:	0e 94 61 08 	call	0x10c2	; 0x10c2 <write_lcd_f>
    1408:	d8 e0       	ldi	r29, 0x08	; 8
    140a:	88 e7       	ldi	r24, 0x78	; 120
    140c:	0e 94 4b 08 	call	0x1096	; 0x1096 <delay_nop>
    1410:	d1 50       	subi	r29, 0x01	; 1
    1412:	d9 f7       	brne	.-10     	; 0x140a <lcd_init+0x44>
    1414:	67 e0       	ldi	r22, 0x07	; 7
    1416:	83 e4       	ldi	r24, 0x43	; 67
    1418:	0e 94 61 08 	call	0x10c2	; 0x10c2 <write_lcd_f>
    141c:	df 91       	pop	r29
    141e:	0c 94 5d 07 	jmp	0xeba	; 0xeba <init_Timer0_1ms_int>

00001422 <clear_lcd>:
    1422:	df 93       	push	r29
    1424:	61 e0       	ldi	r22, 0x01	; 1
    1426:	83 e4       	ldi	r24, 0x43	; 67
    1428:	0e 94 61 08 	call	0x10c2	; 0x10c2 <write_lcd_f>
    142c:	d8 e0       	ldi	r29, 0x08	; 8
    142e:	88 e7       	ldi	r24, 0x78	; 120
    1430:	0e 94 4b 08 	call	0x1096	; 0x1096 <delay_nop>
    1434:	d1 50       	subi	r29, 0x01	; 1
    1436:	d9 f7       	brne	.-10     	; 0x142e <clear_lcd+0xc>
    1438:	df 91       	pop	r29
    143a:	08 95       	ret

0000143c <LED_Show>:
    143c:	cf 93       	push	r28
    143e:	df 93       	push	r29
    1440:	1f 92       	push	r1
    1442:	cd b7       	in	r28, 0x3d	; 61
    1444:	de b7       	in	r29, 0x3e	; 62
    1446:	85 e2       	ldi	r24, 0x25	; 37
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	21 e0       	ldi	r18, 0x01	; 1
    144c:	fc 01       	movw	r30, r24
    144e:	20 83       	st	Z, r18
    1450:	19 82       	std	Y+1, r1	; 0x01
    1452:	17 c0       	rjmp	.+46     	; 0x1482 <LED_Show+0x46>
    1454:	62 e3       	ldi	r22, 0x32	; 50
    1456:	70 e0       	ldi	r23, 0x00	; 0
    1458:	80 e0       	ldi	r24, 0x00	; 0
    145a:	90 e0       	ldi	r25, 0x00	; 0
    145c:	0e 94 0b 08 	call	0x1016	; 0x1016 <wait_1ms>
    1460:	85 e2       	ldi	r24, 0x25	; 37
    1462:	90 e0       	ldi	r25, 0x00	; 0
    1464:	29 81       	ldd	r18, Y+1	; 0x01
    1466:	42 2f       	mov	r20, r18
    1468:	50 e0       	ldi	r21, 0x00	; 0
    146a:	21 e0       	ldi	r18, 0x01	; 1
    146c:	30 e0       	ldi	r19, 0x00	; 0
    146e:	02 c0       	rjmp	.+4      	; 0x1474 <LED_Show+0x38>
    1470:	22 0f       	add	r18, r18
    1472:	33 1f       	adc	r19, r19
    1474:	4a 95       	dec	r20
    1476:	e2 f7       	brpl	.-8      	; 0x1470 <LED_Show+0x34>
    1478:	fc 01       	movw	r30, r24
    147a:	20 83       	st	Z, r18
    147c:	89 81       	ldd	r24, Y+1	; 0x01
    147e:	8f 5f       	subi	r24, 0xFF	; 255
    1480:	89 83       	std	Y+1, r24	; 0x01
    1482:	89 81       	ldd	r24, Y+1	; 0x01
    1484:	88 30       	cpi	r24, 0x08	; 8
    1486:	30 f3       	brcs	.-52     	; 0x1454 <LED_Show+0x18>
    1488:	85 e2       	ldi	r24, 0x25	; 37
    148a:	90 e0       	ldi	r25, 0x00	; 0
    148c:	20 e8       	ldi	r18, 0x80	; 128
    148e:	fc 01       	movw	r30, r24
    1490:	20 83       	st	Z, r18
    1492:	19 82       	std	Y+1, r1	; 0x01
    1494:	17 c0       	rjmp	.+46     	; 0x14c4 <LED_Show+0x88>
    1496:	62 e3       	ldi	r22, 0x32	; 50
    1498:	70 e0       	ldi	r23, 0x00	; 0
    149a:	80 e0       	ldi	r24, 0x00	; 0
    149c:	90 e0       	ldi	r25, 0x00	; 0
    149e:	0e 94 0b 08 	call	0x1016	; 0x1016 <wait_1ms>
    14a2:	85 e2       	ldi	r24, 0x25	; 37
    14a4:	90 e0       	ldi	r25, 0x00	; 0
    14a6:	29 81       	ldd	r18, Y+1	; 0x01
    14a8:	42 2f       	mov	r20, r18
    14aa:	50 e0       	ldi	r21, 0x00	; 0
    14ac:	20 e8       	ldi	r18, 0x80	; 128
    14ae:	30 e0       	ldi	r19, 0x00	; 0
    14b0:	02 c0       	rjmp	.+4      	; 0x14b6 <LED_Show+0x7a>
    14b2:	35 95       	asr	r19
    14b4:	27 95       	ror	r18
    14b6:	4a 95       	dec	r20
    14b8:	e2 f7       	brpl	.-8      	; 0x14b2 <LED_Show+0x76>
    14ba:	fc 01       	movw	r30, r24
    14bc:	20 83       	st	Z, r18
    14be:	89 81       	ldd	r24, Y+1	; 0x01
    14c0:	8f 5f       	subi	r24, 0xFF	; 255
    14c2:	89 83       	std	Y+1, r24	; 0x01
    14c4:	89 81       	ldd	r24, Y+1	; 0x01
    14c6:	88 30       	cpi	r24, 0x08	; 8
    14c8:	30 f3       	brcs	.-52     	; 0x1496 <LED_Show+0x5a>
    14ca:	64 e6       	ldi	r22, 0x64	; 100
    14cc:	70 e0       	ldi	r23, 0x00	; 0
    14ce:	80 e0       	ldi	r24, 0x00	; 0
    14d0:	90 e0       	ldi	r25, 0x00	; 0
    14d2:	0e 94 0b 08 	call	0x1016	; 0x1016 <wait_1ms>
    14d6:	85 e2       	ldi	r24, 0x25	; 37
    14d8:	90 e0       	ldi	r25, 0x00	; 0
    14da:	fc 01       	movw	r30, r24
    14dc:	10 82       	st	Z, r1
    14de:	00 00       	nop
    14e0:	0f 90       	pop	r0
    14e2:	df 91       	pop	r29
    14e4:	cf 91       	pop	r28
    14e6:	08 95       	ret

000014e8 <init_BT_CAR_V2_0>:
    14e8:	cf 93       	push	r28
    14ea:	df 93       	push	r29
    14ec:	cd b7       	in	r28, 0x3d	; 61
    14ee:	de b7       	in	r29, 0x3e	; 62
    14f0:	81 e2       	ldi	r24, 0x21	; 33
    14f2:	90 e0       	ldi	r25, 0x00	; 0
    14f4:	20 e6       	ldi	r18, 0x60	; 96
    14f6:	fc 01       	movw	r30, r24
    14f8:	20 83       	st	Z, r18
    14fa:	84 e2       	ldi	r24, 0x24	; 36
    14fc:	90 e0       	ldi	r25, 0x00	; 0
    14fe:	2f ef       	ldi	r18, 0xFF	; 255
    1500:	fc 01       	movw	r30, r24
    1502:	20 83       	st	Z, r18
    1504:	8a e2       	ldi	r24, 0x2A	; 42
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	2c ef       	ldi	r18, 0xFC	; 252
    150a:	fc 01       	movw	r30, r24
    150c:	20 83       	st	Z, r18
    150e:	78 94       	sei
    1510:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <lcd_init>
    1514:	0e 94 11 0a 	call	0x1422	; 0x1422 <clear_lcd>
    1518:	0e 94 1e 0a 	call	0x143c	; 0x143c <LED_Show>
    151c:	00 00       	nop
    151e:	df 91       	pop	r29
    1520:	cf 91       	pop	r28
    1522:	08 95       	ret

00001524 <__cmpsf2>:
    1524:	0e 94 c6 0a 	call	0x158c	; 0x158c <__fp_cmp>
    1528:	08 f4       	brcc	.+2      	; 0x152c <__cmpsf2+0x8>
    152a:	81 e0       	ldi	r24, 0x01	; 1
    152c:	08 95       	ret

0000152e <__fixunssfsi>:
    152e:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <__fp_splitA>
    1532:	88 f0       	brcs	.+34     	; 0x1556 <__fixunssfsi+0x28>
    1534:	9f 57       	subi	r25, 0x7F	; 127
    1536:	98 f0       	brcs	.+38     	; 0x155e <__fixunssfsi+0x30>
    1538:	b9 2f       	mov	r27, r25
    153a:	99 27       	eor	r25, r25
    153c:	b7 51       	subi	r27, 0x17	; 23
    153e:	b0 f0       	brcs	.+44     	; 0x156c <__fixunssfsi+0x3e>
    1540:	e1 f0       	breq	.+56     	; 0x157a <__fixunssfsi+0x4c>
    1542:	66 0f       	add	r22, r22
    1544:	77 1f       	adc	r23, r23
    1546:	88 1f       	adc	r24, r24
    1548:	99 1f       	adc	r25, r25
    154a:	1a f0       	brmi	.+6      	; 0x1552 <__fixunssfsi+0x24>
    154c:	ba 95       	dec	r27
    154e:	c9 f7       	brne	.-14     	; 0x1542 <__fixunssfsi+0x14>
    1550:	14 c0       	rjmp	.+40     	; 0x157a <__fixunssfsi+0x4c>
    1552:	b1 30       	cpi	r27, 0x01	; 1
    1554:	91 f0       	breq	.+36     	; 0x157a <__fixunssfsi+0x4c>
    1556:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__fp_zero>
    155a:	b1 e0       	ldi	r27, 0x01	; 1
    155c:	08 95       	ret
    155e:	0c 94 0c 0b 	jmp	0x1618	; 0x1618 <__fp_zero>
    1562:	67 2f       	mov	r22, r23
    1564:	78 2f       	mov	r23, r24
    1566:	88 27       	eor	r24, r24
    1568:	b8 5f       	subi	r27, 0xF8	; 248
    156a:	39 f0       	breq	.+14     	; 0x157a <__fixunssfsi+0x4c>
    156c:	b9 3f       	cpi	r27, 0xF9	; 249
    156e:	cc f3       	brlt	.-14     	; 0x1562 <__fixunssfsi+0x34>
    1570:	86 95       	lsr	r24
    1572:	77 95       	ror	r23
    1574:	67 95       	ror	r22
    1576:	b3 95       	inc	r27
    1578:	d9 f7       	brne	.-10     	; 0x1570 <__fixunssfsi+0x42>
    157a:	3e f4       	brtc	.+14     	; 0x158a <__fixunssfsi+0x5c>
    157c:	90 95       	com	r25
    157e:	80 95       	com	r24
    1580:	70 95       	com	r23
    1582:	61 95       	neg	r22
    1584:	7f 4f       	sbci	r23, 0xFF	; 255
    1586:	8f 4f       	sbci	r24, 0xFF	; 255
    1588:	9f 4f       	sbci	r25, 0xFF	; 255
    158a:	08 95       	ret

0000158c <__fp_cmp>:
    158c:	99 0f       	add	r25, r25
    158e:	00 08       	sbc	r0, r0
    1590:	55 0f       	add	r21, r21
    1592:	aa 0b       	sbc	r26, r26
    1594:	e0 e8       	ldi	r30, 0x80	; 128
    1596:	fe ef       	ldi	r31, 0xFE	; 254
    1598:	16 16       	cp	r1, r22
    159a:	17 06       	cpc	r1, r23
    159c:	e8 07       	cpc	r30, r24
    159e:	f9 07       	cpc	r31, r25
    15a0:	c0 f0       	brcs	.+48     	; 0x15d2 <__fp_cmp+0x46>
    15a2:	12 16       	cp	r1, r18
    15a4:	13 06       	cpc	r1, r19
    15a6:	e4 07       	cpc	r30, r20
    15a8:	f5 07       	cpc	r31, r21
    15aa:	98 f0       	brcs	.+38     	; 0x15d2 <__fp_cmp+0x46>
    15ac:	62 1b       	sub	r22, r18
    15ae:	73 0b       	sbc	r23, r19
    15b0:	84 0b       	sbc	r24, r20
    15b2:	95 0b       	sbc	r25, r21
    15b4:	39 f4       	brne	.+14     	; 0x15c4 <__fp_cmp+0x38>
    15b6:	0a 26       	eor	r0, r26
    15b8:	61 f0       	breq	.+24     	; 0x15d2 <__fp_cmp+0x46>
    15ba:	23 2b       	or	r18, r19
    15bc:	24 2b       	or	r18, r20
    15be:	25 2b       	or	r18, r21
    15c0:	21 f4       	brne	.+8      	; 0x15ca <__fp_cmp+0x3e>
    15c2:	08 95       	ret
    15c4:	0a 26       	eor	r0, r26
    15c6:	09 f4       	brne	.+2      	; 0x15ca <__fp_cmp+0x3e>
    15c8:	a1 40       	sbci	r26, 0x01	; 1
    15ca:	a6 95       	lsr	r26
    15cc:	8f ef       	ldi	r24, 0xFF	; 255
    15ce:	81 1d       	adc	r24, r1
    15d0:	81 1d       	adc	r24, r1
    15d2:	08 95       	ret

000015d4 <__fp_split3>:
    15d4:	57 fd       	sbrc	r21, 7
    15d6:	90 58       	subi	r25, 0x80	; 128
    15d8:	44 0f       	add	r20, r20
    15da:	55 1f       	adc	r21, r21
    15dc:	59 f0       	breq	.+22     	; 0x15f4 <__fp_splitA+0x10>
    15de:	5f 3f       	cpi	r21, 0xFF	; 255
    15e0:	71 f0       	breq	.+28     	; 0x15fe <__fp_splitA+0x1a>
    15e2:	47 95       	ror	r20

000015e4 <__fp_splitA>:
    15e4:	88 0f       	add	r24, r24
    15e6:	97 fb       	bst	r25, 7
    15e8:	99 1f       	adc	r25, r25
    15ea:	61 f0       	breq	.+24     	; 0x1604 <__fp_splitA+0x20>
    15ec:	9f 3f       	cpi	r25, 0xFF	; 255
    15ee:	79 f0       	breq	.+30     	; 0x160e <__fp_splitA+0x2a>
    15f0:	87 95       	ror	r24
    15f2:	08 95       	ret
    15f4:	12 16       	cp	r1, r18
    15f6:	13 06       	cpc	r1, r19
    15f8:	14 06       	cpc	r1, r20
    15fa:	55 1f       	adc	r21, r21
    15fc:	f2 cf       	rjmp	.-28     	; 0x15e2 <__fp_split3+0xe>
    15fe:	46 95       	lsr	r20
    1600:	f1 df       	rcall	.-30     	; 0x15e4 <__fp_splitA>
    1602:	08 c0       	rjmp	.+16     	; 0x1614 <__fp_splitA+0x30>
    1604:	16 16       	cp	r1, r22
    1606:	17 06       	cpc	r1, r23
    1608:	18 06       	cpc	r1, r24
    160a:	99 1f       	adc	r25, r25
    160c:	f1 cf       	rjmp	.-30     	; 0x15f0 <__fp_splitA+0xc>
    160e:	86 95       	lsr	r24
    1610:	71 05       	cpc	r23, r1
    1612:	61 05       	cpc	r22, r1
    1614:	08 94       	sec
    1616:	08 95       	ret

00001618 <__fp_zero>:
    1618:	e8 94       	clt

0000161a <__fp_szero>:
    161a:	bb 27       	eor	r27, r27
    161c:	66 27       	eor	r22, r22
    161e:	77 27       	eor	r23, r23
    1620:	cb 01       	movw	r24, r22
    1622:	97 f9       	bld	r25, 7
    1624:	08 95       	ret

00001626 <__gesf2>:
    1626:	0e 94 c6 0a 	call	0x158c	; 0x158c <__fp_cmp>
    162a:	08 f4       	brcc	.+2      	; 0x162e <__gesf2+0x8>
    162c:	8f ef       	ldi	r24, 0xFF	; 255
    162e:	08 95       	ret

00001630 <__mulsf3>:
    1630:	0e 94 2b 0b 	call	0x1656	; 0x1656 <__mulsf3x>
    1634:	0c 94 9c 0b 	jmp	0x1738	; 0x1738 <__fp_round>
    1638:	0e 94 8e 0b 	call	0x171c	; 0x171c <__fp_pscA>
    163c:	38 f0       	brcs	.+14     	; 0x164c <__mulsf3+0x1c>
    163e:	0e 94 95 0b 	call	0x172a	; 0x172a <__fp_pscB>
    1642:	20 f0       	brcs	.+8      	; 0x164c <__mulsf3+0x1c>
    1644:	95 23       	and	r25, r21
    1646:	11 f0       	breq	.+4      	; 0x164c <__mulsf3+0x1c>
    1648:	0c 94 85 0b 	jmp	0x170a	; 0x170a <__fp_inf>
    164c:	0c 94 8b 0b 	jmp	0x1716	; 0x1716 <__fp_nan>
    1650:	11 24       	eor	r1, r1
    1652:	0c 94 0d 0b 	jmp	0x161a	; 0x161a <__fp_szero>

00001656 <__mulsf3x>:
    1656:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <__fp_split3>
    165a:	70 f3       	brcs	.-36     	; 0x1638 <__mulsf3+0x8>

0000165c <__mulsf3_pse>:
    165c:	95 9f       	mul	r25, r21
    165e:	c1 f3       	breq	.-16     	; 0x1650 <__mulsf3+0x20>
    1660:	95 0f       	add	r25, r21
    1662:	50 e0       	ldi	r21, 0x00	; 0
    1664:	55 1f       	adc	r21, r21
    1666:	62 9f       	mul	r22, r18
    1668:	f0 01       	movw	r30, r0
    166a:	72 9f       	mul	r23, r18
    166c:	bb 27       	eor	r27, r27
    166e:	f0 0d       	add	r31, r0
    1670:	b1 1d       	adc	r27, r1
    1672:	63 9f       	mul	r22, r19
    1674:	aa 27       	eor	r26, r26
    1676:	f0 0d       	add	r31, r0
    1678:	b1 1d       	adc	r27, r1
    167a:	aa 1f       	adc	r26, r26
    167c:	64 9f       	mul	r22, r20
    167e:	66 27       	eor	r22, r22
    1680:	b0 0d       	add	r27, r0
    1682:	a1 1d       	adc	r26, r1
    1684:	66 1f       	adc	r22, r22
    1686:	82 9f       	mul	r24, r18
    1688:	22 27       	eor	r18, r18
    168a:	b0 0d       	add	r27, r0
    168c:	a1 1d       	adc	r26, r1
    168e:	62 1f       	adc	r22, r18
    1690:	73 9f       	mul	r23, r19
    1692:	b0 0d       	add	r27, r0
    1694:	a1 1d       	adc	r26, r1
    1696:	62 1f       	adc	r22, r18
    1698:	83 9f       	mul	r24, r19
    169a:	a0 0d       	add	r26, r0
    169c:	61 1d       	adc	r22, r1
    169e:	22 1f       	adc	r18, r18
    16a0:	74 9f       	mul	r23, r20
    16a2:	33 27       	eor	r19, r19
    16a4:	a0 0d       	add	r26, r0
    16a6:	61 1d       	adc	r22, r1
    16a8:	23 1f       	adc	r18, r19
    16aa:	84 9f       	mul	r24, r20
    16ac:	60 0d       	add	r22, r0
    16ae:	21 1d       	adc	r18, r1
    16b0:	82 2f       	mov	r24, r18
    16b2:	76 2f       	mov	r23, r22
    16b4:	6a 2f       	mov	r22, r26
    16b6:	11 24       	eor	r1, r1
    16b8:	9f 57       	subi	r25, 0x7F	; 127
    16ba:	50 40       	sbci	r21, 0x00	; 0
    16bc:	9a f0       	brmi	.+38     	; 0x16e4 <__mulsf3_pse+0x88>
    16be:	f1 f0       	breq	.+60     	; 0x16fc <__mulsf3_pse+0xa0>
    16c0:	88 23       	and	r24, r24
    16c2:	4a f0       	brmi	.+18     	; 0x16d6 <__mulsf3_pse+0x7a>
    16c4:	ee 0f       	add	r30, r30
    16c6:	ff 1f       	adc	r31, r31
    16c8:	bb 1f       	adc	r27, r27
    16ca:	66 1f       	adc	r22, r22
    16cc:	77 1f       	adc	r23, r23
    16ce:	88 1f       	adc	r24, r24
    16d0:	91 50       	subi	r25, 0x01	; 1
    16d2:	50 40       	sbci	r21, 0x00	; 0
    16d4:	a9 f7       	brne	.-22     	; 0x16c0 <__mulsf3_pse+0x64>
    16d6:	9e 3f       	cpi	r25, 0xFE	; 254
    16d8:	51 05       	cpc	r21, r1
    16da:	80 f0       	brcs	.+32     	; 0x16fc <__mulsf3_pse+0xa0>
    16dc:	0c 94 85 0b 	jmp	0x170a	; 0x170a <__fp_inf>
    16e0:	0c 94 0d 0b 	jmp	0x161a	; 0x161a <__fp_szero>
    16e4:	5f 3f       	cpi	r21, 0xFF	; 255
    16e6:	e4 f3       	brlt	.-8      	; 0x16e0 <__mulsf3_pse+0x84>
    16e8:	98 3e       	cpi	r25, 0xE8	; 232
    16ea:	d4 f3       	brlt	.-12     	; 0x16e0 <__mulsf3_pse+0x84>
    16ec:	86 95       	lsr	r24
    16ee:	77 95       	ror	r23
    16f0:	67 95       	ror	r22
    16f2:	b7 95       	ror	r27
    16f4:	f7 95       	ror	r31
    16f6:	e7 95       	ror	r30
    16f8:	9f 5f       	subi	r25, 0xFF	; 255
    16fa:	c1 f7       	brne	.-16     	; 0x16ec <__mulsf3_pse+0x90>
    16fc:	fe 2b       	or	r31, r30
    16fe:	88 0f       	add	r24, r24
    1700:	91 1d       	adc	r25, r1
    1702:	96 95       	lsr	r25
    1704:	87 95       	ror	r24
    1706:	97 f9       	bld	r25, 7
    1708:	08 95       	ret

0000170a <__fp_inf>:
    170a:	97 f9       	bld	r25, 7
    170c:	9f 67       	ori	r25, 0x7F	; 127
    170e:	80 e8       	ldi	r24, 0x80	; 128
    1710:	70 e0       	ldi	r23, 0x00	; 0
    1712:	60 e0       	ldi	r22, 0x00	; 0
    1714:	08 95       	ret

00001716 <__fp_nan>:
    1716:	9f ef       	ldi	r25, 0xFF	; 255
    1718:	80 ec       	ldi	r24, 0xC0	; 192
    171a:	08 95       	ret

0000171c <__fp_pscA>:
    171c:	00 24       	eor	r0, r0
    171e:	0a 94       	dec	r0
    1720:	16 16       	cp	r1, r22
    1722:	17 06       	cpc	r1, r23
    1724:	18 06       	cpc	r1, r24
    1726:	09 06       	cpc	r0, r25
    1728:	08 95       	ret

0000172a <__fp_pscB>:
    172a:	00 24       	eor	r0, r0
    172c:	0a 94       	dec	r0
    172e:	12 16       	cp	r1, r18
    1730:	13 06       	cpc	r1, r19
    1732:	14 06       	cpc	r1, r20
    1734:	05 06       	cpc	r0, r21
    1736:	08 95       	ret

00001738 <__fp_round>:
    1738:	09 2e       	mov	r0, r25
    173a:	03 94       	inc	r0
    173c:	00 0c       	add	r0, r0
    173e:	11 f4       	brne	.+4      	; 0x1744 <__fp_round+0xc>
    1740:	88 23       	and	r24, r24
    1742:	52 f0       	brmi	.+20     	; 0x1758 <__fp_round+0x20>
    1744:	bb 0f       	add	r27, r27
    1746:	40 f4       	brcc	.+16     	; 0x1758 <__fp_round+0x20>
    1748:	bf 2b       	or	r27, r31
    174a:	11 f4       	brne	.+4      	; 0x1750 <__fp_round+0x18>
    174c:	60 ff       	sbrs	r22, 0
    174e:	04 c0       	rjmp	.+8      	; 0x1758 <__fp_round+0x20>
    1750:	6f 5f       	subi	r22, 0xFF	; 255
    1752:	7f 4f       	sbci	r23, 0xFF	; 255
    1754:	8f 4f       	sbci	r24, 0xFF	; 255
    1756:	9f 4f       	sbci	r25, 0xFF	; 255
    1758:	08 95       	ret

0000175a <__divmodhi4>:
    175a:	97 fb       	bst	r25, 7
    175c:	07 2e       	mov	r0, r23
    175e:	16 f4       	brtc	.+4      	; 0x1764 <__divmodhi4+0xa>
    1760:	00 94       	com	r0
    1762:	07 d0       	rcall	.+14     	; 0x1772 <__divmodhi4_neg1>
    1764:	77 fd       	sbrc	r23, 7
    1766:	09 d0       	rcall	.+18     	; 0x177a <__divmodhi4_neg2>
    1768:	0e 94 e3 0b 	call	0x17c6	; 0x17c6 <__udivmodhi4>
    176c:	07 fc       	sbrc	r0, 7
    176e:	05 d0       	rcall	.+10     	; 0x177a <__divmodhi4_neg2>
    1770:	3e f4       	brtc	.+14     	; 0x1780 <__divmodhi4_exit>

00001772 <__divmodhi4_neg1>:
    1772:	90 95       	com	r25
    1774:	81 95       	neg	r24
    1776:	9f 4f       	sbci	r25, 0xFF	; 255
    1778:	08 95       	ret

0000177a <__divmodhi4_neg2>:
    177a:	70 95       	com	r23
    177c:	61 95       	neg	r22
    177e:	7f 4f       	sbci	r23, 0xFF	; 255

00001780 <__divmodhi4_exit>:
    1780:	08 95       	ret

00001782 <__udivmodsi4>:
    1782:	a1 e2       	ldi	r26, 0x21	; 33
    1784:	1a 2e       	mov	r1, r26
    1786:	aa 1b       	sub	r26, r26
    1788:	bb 1b       	sub	r27, r27
    178a:	fd 01       	movw	r30, r26
    178c:	0d c0       	rjmp	.+26     	; 0x17a8 <__udivmodsi4_ep>

0000178e <__udivmodsi4_loop>:
    178e:	aa 1f       	adc	r26, r26
    1790:	bb 1f       	adc	r27, r27
    1792:	ee 1f       	adc	r30, r30
    1794:	ff 1f       	adc	r31, r31
    1796:	a2 17       	cp	r26, r18
    1798:	b3 07       	cpc	r27, r19
    179a:	e4 07       	cpc	r30, r20
    179c:	f5 07       	cpc	r31, r21
    179e:	20 f0       	brcs	.+8      	; 0x17a8 <__udivmodsi4_ep>
    17a0:	a2 1b       	sub	r26, r18
    17a2:	b3 0b       	sbc	r27, r19
    17a4:	e4 0b       	sbc	r30, r20
    17a6:	f5 0b       	sbc	r31, r21

000017a8 <__udivmodsi4_ep>:
    17a8:	66 1f       	adc	r22, r22
    17aa:	77 1f       	adc	r23, r23
    17ac:	88 1f       	adc	r24, r24
    17ae:	99 1f       	adc	r25, r25
    17b0:	1a 94       	dec	r1
    17b2:	69 f7       	brne	.-38     	; 0x178e <__udivmodsi4_loop>
    17b4:	60 95       	com	r22
    17b6:	70 95       	com	r23
    17b8:	80 95       	com	r24
    17ba:	90 95       	com	r25
    17bc:	9b 01       	movw	r18, r22
    17be:	ac 01       	movw	r20, r24
    17c0:	bd 01       	movw	r22, r26
    17c2:	cf 01       	movw	r24, r30
    17c4:	08 95       	ret

000017c6 <__udivmodhi4>:
    17c6:	aa 1b       	sub	r26, r26
    17c8:	bb 1b       	sub	r27, r27
    17ca:	51 e1       	ldi	r21, 0x11	; 17
    17cc:	07 c0       	rjmp	.+14     	; 0x17dc <__udivmodhi4_ep>

000017ce <__udivmodhi4_loop>:
    17ce:	aa 1f       	adc	r26, r26
    17d0:	bb 1f       	adc	r27, r27
    17d2:	a6 17       	cp	r26, r22
    17d4:	b7 07       	cpc	r27, r23
    17d6:	10 f0       	brcs	.+4      	; 0x17dc <__udivmodhi4_ep>
    17d8:	a6 1b       	sub	r26, r22
    17da:	b7 0b       	sbc	r27, r23

000017dc <__udivmodhi4_ep>:
    17dc:	88 1f       	adc	r24, r24
    17de:	99 1f       	adc	r25, r25
    17e0:	5a 95       	dec	r21
    17e2:	a9 f7       	brne	.-22     	; 0x17ce <__udivmodhi4_loop>
    17e4:	80 95       	com	r24
    17e6:	90 95       	com	r25
    17e8:	bc 01       	movw	r22, r24
    17ea:	cd 01       	movw	r24, r26
    17ec:	08 95       	ret

000017ee <snprintf>:
    17ee:	ae e0       	ldi	r26, 0x0E	; 14
    17f0:	b0 e0       	ldi	r27, 0x00	; 0
    17f2:	ed ef       	ldi	r30, 0xFD	; 253
    17f4:	fb e0       	ldi	r31, 0x0B	; 11
    17f6:	0c 94 c6 0e 	jmp	0x1d8c	; 0x1d8c <__prologue_saves__+0x1c>
    17fa:	0d 89       	ldd	r16, Y+21	; 0x15
    17fc:	1e 89       	ldd	r17, Y+22	; 0x16
    17fe:	8f 89       	ldd	r24, Y+23	; 0x17
    1800:	98 8d       	ldd	r25, Y+24	; 0x18
    1802:	26 e0       	ldi	r18, 0x06	; 6
    1804:	2c 83       	std	Y+4, r18	; 0x04
    1806:	1a 83       	std	Y+2, r17	; 0x02
    1808:	09 83       	std	Y+1, r16	; 0x01
    180a:	97 ff       	sbrs	r25, 7
    180c:	02 c0       	rjmp	.+4      	; 0x1812 <snprintf+0x24>
    180e:	80 e0       	ldi	r24, 0x00	; 0
    1810:	90 e8       	ldi	r25, 0x80	; 128
    1812:	01 97       	sbiw	r24, 0x01	; 1
    1814:	9e 83       	std	Y+6, r25	; 0x06
    1816:	8d 83       	std	Y+5, r24	; 0x05
    1818:	ae 01       	movw	r20, r28
    181a:	45 5e       	subi	r20, 0xE5	; 229
    181c:	5f 4f       	sbci	r21, 0xFF	; 255
    181e:	69 8d       	ldd	r22, Y+25	; 0x19
    1820:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1822:	ce 01       	movw	r24, r28
    1824:	01 96       	adiw	r24, 0x01	; 1
    1826:	0e 94 27 0c 	call	0x184e	; 0x184e <vfprintf>
    182a:	4d 81       	ldd	r20, Y+5	; 0x05
    182c:	5e 81       	ldd	r21, Y+6	; 0x06
    182e:	57 fd       	sbrc	r21, 7
    1830:	0a c0       	rjmp	.+20     	; 0x1846 <snprintf+0x58>
    1832:	2f 81       	ldd	r18, Y+7	; 0x07
    1834:	38 85       	ldd	r19, Y+8	; 0x08
    1836:	42 17       	cp	r20, r18
    1838:	53 07       	cpc	r21, r19
    183a:	0c f4       	brge	.+2      	; 0x183e <snprintf+0x50>
    183c:	9a 01       	movw	r18, r20
    183e:	f8 01       	movw	r30, r16
    1840:	e2 0f       	add	r30, r18
    1842:	f3 1f       	adc	r31, r19
    1844:	10 82       	st	Z, r1
    1846:	2e 96       	adiw	r28, 0x0e	; 14
    1848:	e4 e0       	ldi	r30, 0x04	; 4
    184a:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__epilogue_restores__+0x1c>

0000184e <vfprintf>:
    184e:	ab e0       	ldi	r26, 0x0B	; 11
    1850:	b0 e0       	ldi	r27, 0x00	; 0
    1852:	ed e2       	ldi	r30, 0x2D	; 45
    1854:	fc e0       	ldi	r31, 0x0C	; 12
    1856:	0c 94 b8 0e 	jmp	0x1d70	; 0x1d70 <__prologue_saves__>
    185a:	6c 01       	movw	r12, r24
    185c:	7b 01       	movw	r14, r22
    185e:	8a 01       	movw	r16, r20
    1860:	fc 01       	movw	r30, r24
    1862:	17 82       	std	Z+7, r1	; 0x07
    1864:	16 82       	std	Z+6, r1	; 0x06
    1866:	83 81       	ldd	r24, Z+3	; 0x03
    1868:	81 ff       	sbrs	r24, 1
    186a:	cc c1       	rjmp	.+920    	; 0x1c04 <vfprintf+0x3b6>
    186c:	ce 01       	movw	r24, r28
    186e:	01 96       	adiw	r24, 0x01	; 1
    1870:	3c 01       	movw	r6, r24
    1872:	f6 01       	movw	r30, r12
    1874:	93 81       	ldd	r25, Z+3	; 0x03
    1876:	f7 01       	movw	r30, r14
    1878:	93 fd       	sbrc	r25, 3
    187a:	85 91       	lpm	r24, Z+
    187c:	93 ff       	sbrs	r25, 3
    187e:	81 91       	ld	r24, Z+
    1880:	7f 01       	movw	r14, r30
    1882:	88 23       	and	r24, r24
    1884:	09 f4       	brne	.+2      	; 0x1888 <vfprintf+0x3a>
    1886:	ba c1       	rjmp	.+884    	; 0x1bfc <vfprintf+0x3ae>
    1888:	85 32       	cpi	r24, 0x25	; 37
    188a:	39 f4       	brne	.+14     	; 0x189a <vfprintf+0x4c>
    188c:	93 fd       	sbrc	r25, 3
    188e:	85 91       	lpm	r24, Z+
    1890:	93 ff       	sbrs	r25, 3
    1892:	81 91       	ld	r24, Z+
    1894:	7f 01       	movw	r14, r30
    1896:	85 32       	cpi	r24, 0x25	; 37
    1898:	29 f4       	brne	.+10     	; 0x18a4 <vfprintf+0x56>
    189a:	b6 01       	movw	r22, r12
    189c:	90 e0       	ldi	r25, 0x00	; 0
    189e:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <fputc>
    18a2:	e7 cf       	rjmp	.-50     	; 0x1872 <vfprintf+0x24>
    18a4:	91 2c       	mov	r9, r1
    18a6:	21 2c       	mov	r2, r1
    18a8:	31 2c       	mov	r3, r1
    18aa:	ff e1       	ldi	r31, 0x1F	; 31
    18ac:	f3 15       	cp	r31, r3
    18ae:	d8 f0       	brcs	.+54     	; 0x18e6 <vfprintf+0x98>
    18b0:	8b 32       	cpi	r24, 0x2B	; 43
    18b2:	79 f0       	breq	.+30     	; 0x18d2 <vfprintf+0x84>
    18b4:	38 f4       	brcc	.+14     	; 0x18c4 <vfprintf+0x76>
    18b6:	80 32       	cpi	r24, 0x20	; 32
    18b8:	79 f0       	breq	.+30     	; 0x18d8 <vfprintf+0x8a>
    18ba:	83 32       	cpi	r24, 0x23	; 35
    18bc:	a1 f4       	brne	.+40     	; 0x18e6 <vfprintf+0x98>
    18be:	23 2d       	mov	r18, r3
    18c0:	20 61       	ori	r18, 0x10	; 16
    18c2:	1d c0       	rjmp	.+58     	; 0x18fe <vfprintf+0xb0>
    18c4:	8d 32       	cpi	r24, 0x2D	; 45
    18c6:	61 f0       	breq	.+24     	; 0x18e0 <vfprintf+0x92>
    18c8:	80 33       	cpi	r24, 0x30	; 48
    18ca:	69 f4       	brne	.+26     	; 0x18e6 <vfprintf+0x98>
    18cc:	23 2d       	mov	r18, r3
    18ce:	21 60       	ori	r18, 0x01	; 1
    18d0:	16 c0       	rjmp	.+44     	; 0x18fe <vfprintf+0xb0>
    18d2:	83 2d       	mov	r24, r3
    18d4:	82 60       	ori	r24, 0x02	; 2
    18d6:	38 2e       	mov	r3, r24
    18d8:	e3 2d       	mov	r30, r3
    18da:	e4 60       	ori	r30, 0x04	; 4
    18dc:	3e 2e       	mov	r3, r30
    18de:	2a c0       	rjmp	.+84     	; 0x1934 <vfprintf+0xe6>
    18e0:	f3 2d       	mov	r31, r3
    18e2:	f8 60       	ori	r31, 0x08	; 8
    18e4:	1d c0       	rjmp	.+58     	; 0x1920 <vfprintf+0xd2>
    18e6:	37 fc       	sbrc	r3, 7
    18e8:	2d c0       	rjmp	.+90     	; 0x1944 <vfprintf+0xf6>
    18ea:	20 ed       	ldi	r18, 0xD0	; 208
    18ec:	28 0f       	add	r18, r24
    18ee:	2a 30       	cpi	r18, 0x0A	; 10
    18f0:	40 f0       	brcs	.+16     	; 0x1902 <vfprintf+0xb4>
    18f2:	8e 32       	cpi	r24, 0x2E	; 46
    18f4:	b9 f4       	brne	.+46     	; 0x1924 <vfprintf+0xd6>
    18f6:	36 fc       	sbrc	r3, 6
    18f8:	81 c1       	rjmp	.+770    	; 0x1bfc <vfprintf+0x3ae>
    18fa:	23 2d       	mov	r18, r3
    18fc:	20 64       	ori	r18, 0x40	; 64
    18fe:	32 2e       	mov	r3, r18
    1900:	19 c0       	rjmp	.+50     	; 0x1934 <vfprintf+0xe6>
    1902:	36 fe       	sbrs	r3, 6
    1904:	06 c0       	rjmp	.+12     	; 0x1912 <vfprintf+0xc4>
    1906:	8a e0       	ldi	r24, 0x0A	; 10
    1908:	98 9e       	mul	r9, r24
    190a:	20 0d       	add	r18, r0
    190c:	11 24       	eor	r1, r1
    190e:	92 2e       	mov	r9, r18
    1910:	11 c0       	rjmp	.+34     	; 0x1934 <vfprintf+0xe6>
    1912:	ea e0       	ldi	r30, 0x0A	; 10
    1914:	2e 9e       	mul	r2, r30
    1916:	20 0d       	add	r18, r0
    1918:	11 24       	eor	r1, r1
    191a:	22 2e       	mov	r2, r18
    191c:	f3 2d       	mov	r31, r3
    191e:	f0 62       	ori	r31, 0x20	; 32
    1920:	3f 2e       	mov	r3, r31
    1922:	08 c0       	rjmp	.+16     	; 0x1934 <vfprintf+0xe6>
    1924:	8c 36       	cpi	r24, 0x6C	; 108
    1926:	21 f4       	brne	.+8      	; 0x1930 <vfprintf+0xe2>
    1928:	83 2d       	mov	r24, r3
    192a:	80 68       	ori	r24, 0x80	; 128
    192c:	38 2e       	mov	r3, r24
    192e:	02 c0       	rjmp	.+4      	; 0x1934 <vfprintf+0xe6>
    1930:	88 36       	cpi	r24, 0x68	; 104
    1932:	41 f4       	brne	.+16     	; 0x1944 <vfprintf+0xf6>
    1934:	f7 01       	movw	r30, r14
    1936:	93 fd       	sbrc	r25, 3
    1938:	85 91       	lpm	r24, Z+
    193a:	93 ff       	sbrs	r25, 3
    193c:	81 91       	ld	r24, Z+
    193e:	7f 01       	movw	r14, r30
    1940:	81 11       	cpse	r24, r1
    1942:	b3 cf       	rjmp	.-154    	; 0x18aa <vfprintf+0x5c>
    1944:	98 2f       	mov	r25, r24
    1946:	9f 7d       	andi	r25, 0xDF	; 223
    1948:	95 54       	subi	r25, 0x45	; 69
    194a:	93 30       	cpi	r25, 0x03	; 3
    194c:	28 f4       	brcc	.+10     	; 0x1958 <vfprintf+0x10a>
    194e:	0c 5f       	subi	r16, 0xFC	; 252
    1950:	1f 4f       	sbci	r17, 0xFF	; 255
    1952:	9f e3       	ldi	r25, 0x3F	; 63
    1954:	99 83       	std	Y+1, r25	; 0x01
    1956:	0d c0       	rjmp	.+26     	; 0x1972 <vfprintf+0x124>
    1958:	83 36       	cpi	r24, 0x63	; 99
    195a:	31 f0       	breq	.+12     	; 0x1968 <vfprintf+0x11a>
    195c:	83 37       	cpi	r24, 0x73	; 115
    195e:	71 f0       	breq	.+28     	; 0x197c <vfprintf+0x12e>
    1960:	83 35       	cpi	r24, 0x53	; 83
    1962:	09 f0       	breq	.+2      	; 0x1966 <vfprintf+0x118>
    1964:	59 c0       	rjmp	.+178    	; 0x1a18 <vfprintf+0x1ca>
    1966:	21 c0       	rjmp	.+66     	; 0x19aa <vfprintf+0x15c>
    1968:	f8 01       	movw	r30, r16
    196a:	80 81       	ld	r24, Z
    196c:	89 83       	std	Y+1, r24	; 0x01
    196e:	0e 5f       	subi	r16, 0xFE	; 254
    1970:	1f 4f       	sbci	r17, 0xFF	; 255
    1972:	88 24       	eor	r8, r8
    1974:	83 94       	inc	r8
    1976:	91 2c       	mov	r9, r1
    1978:	53 01       	movw	r10, r6
    197a:	13 c0       	rjmp	.+38     	; 0x19a2 <vfprintf+0x154>
    197c:	28 01       	movw	r4, r16
    197e:	f2 e0       	ldi	r31, 0x02	; 2
    1980:	4f 0e       	add	r4, r31
    1982:	51 1c       	adc	r5, r1
    1984:	f8 01       	movw	r30, r16
    1986:	a0 80       	ld	r10, Z
    1988:	b1 80       	ldd	r11, Z+1	; 0x01
    198a:	36 fe       	sbrs	r3, 6
    198c:	03 c0       	rjmp	.+6      	; 0x1994 <vfprintf+0x146>
    198e:	69 2d       	mov	r22, r9
    1990:	70 e0       	ldi	r23, 0x00	; 0
    1992:	02 c0       	rjmp	.+4      	; 0x1998 <vfprintf+0x14a>
    1994:	6f ef       	ldi	r22, 0xFF	; 255
    1996:	7f ef       	ldi	r23, 0xFF	; 255
    1998:	c5 01       	movw	r24, r10
    199a:	0e 94 13 0e 	call	0x1c26	; 0x1c26 <strnlen>
    199e:	4c 01       	movw	r8, r24
    19a0:	82 01       	movw	r16, r4
    19a2:	f3 2d       	mov	r31, r3
    19a4:	ff 77       	andi	r31, 0x7F	; 127
    19a6:	3f 2e       	mov	r3, r31
    19a8:	16 c0       	rjmp	.+44     	; 0x19d6 <vfprintf+0x188>
    19aa:	28 01       	movw	r4, r16
    19ac:	22 e0       	ldi	r18, 0x02	; 2
    19ae:	42 0e       	add	r4, r18
    19b0:	51 1c       	adc	r5, r1
    19b2:	f8 01       	movw	r30, r16
    19b4:	a0 80       	ld	r10, Z
    19b6:	b1 80       	ldd	r11, Z+1	; 0x01
    19b8:	36 fe       	sbrs	r3, 6
    19ba:	03 c0       	rjmp	.+6      	; 0x19c2 <vfprintf+0x174>
    19bc:	69 2d       	mov	r22, r9
    19be:	70 e0       	ldi	r23, 0x00	; 0
    19c0:	02 c0       	rjmp	.+4      	; 0x19c6 <vfprintf+0x178>
    19c2:	6f ef       	ldi	r22, 0xFF	; 255
    19c4:	7f ef       	ldi	r23, 0xFF	; 255
    19c6:	c5 01       	movw	r24, r10
    19c8:	0e 94 08 0e 	call	0x1c10	; 0x1c10 <strnlen_P>
    19cc:	4c 01       	movw	r8, r24
    19ce:	f3 2d       	mov	r31, r3
    19d0:	f0 68       	ori	r31, 0x80	; 128
    19d2:	3f 2e       	mov	r3, r31
    19d4:	82 01       	movw	r16, r4
    19d6:	33 fc       	sbrc	r3, 3
    19d8:	1b c0       	rjmp	.+54     	; 0x1a10 <vfprintf+0x1c2>
    19da:	82 2d       	mov	r24, r2
    19dc:	90 e0       	ldi	r25, 0x00	; 0
    19de:	88 16       	cp	r8, r24
    19e0:	99 06       	cpc	r9, r25
    19e2:	b0 f4       	brcc	.+44     	; 0x1a10 <vfprintf+0x1c2>
    19e4:	b6 01       	movw	r22, r12
    19e6:	80 e2       	ldi	r24, 0x20	; 32
    19e8:	90 e0       	ldi	r25, 0x00	; 0
    19ea:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <fputc>
    19ee:	2a 94       	dec	r2
    19f0:	f4 cf       	rjmp	.-24     	; 0x19da <vfprintf+0x18c>
    19f2:	f5 01       	movw	r30, r10
    19f4:	37 fc       	sbrc	r3, 7
    19f6:	85 91       	lpm	r24, Z+
    19f8:	37 fe       	sbrs	r3, 7
    19fa:	81 91       	ld	r24, Z+
    19fc:	5f 01       	movw	r10, r30
    19fe:	b6 01       	movw	r22, r12
    1a00:	90 e0       	ldi	r25, 0x00	; 0
    1a02:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <fputc>
    1a06:	21 10       	cpse	r2, r1
    1a08:	2a 94       	dec	r2
    1a0a:	21 e0       	ldi	r18, 0x01	; 1
    1a0c:	82 1a       	sub	r8, r18
    1a0e:	91 08       	sbc	r9, r1
    1a10:	81 14       	cp	r8, r1
    1a12:	91 04       	cpc	r9, r1
    1a14:	71 f7       	brne	.-36     	; 0x19f2 <vfprintf+0x1a4>
    1a16:	e8 c0       	rjmp	.+464    	; 0x1be8 <vfprintf+0x39a>
    1a18:	84 36       	cpi	r24, 0x64	; 100
    1a1a:	11 f0       	breq	.+4      	; 0x1a20 <vfprintf+0x1d2>
    1a1c:	89 36       	cpi	r24, 0x69	; 105
    1a1e:	41 f5       	brne	.+80     	; 0x1a70 <vfprintf+0x222>
    1a20:	f8 01       	movw	r30, r16
    1a22:	37 fe       	sbrs	r3, 7
    1a24:	07 c0       	rjmp	.+14     	; 0x1a34 <vfprintf+0x1e6>
    1a26:	60 81       	ld	r22, Z
    1a28:	71 81       	ldd	r23, Z+1	; 0x01
    1a2a:	82 81       	ldd	r24, Z+2	; 0x02
    1a2c:	93 81       	ldd	r25, Z+3	; 0x03
    1a2e:	0c 5f       	subi	r16, 0xFC	; 252
    1a30:	1f 4f       	sbci	r17, 0xFF	; 255
    1a32:	08 c0       	rjmp	.+16     	; 0x1a44 <vfprintf+0x1f6>
    1a34:	60 81       	ld	r22, Z
    1a36:	71 81       	ldd	r23, Z+1	; 0x01
    1a38:	07 2e       	mov	r0, r23
    1a3a:	00 0c       	add	r0, r0
    1a3c:	88 0b       	sbc	r24, r24
    1a3e:	99 0b       	sbc	r25, r25
    1a40:	0e 5f       	subi	r16, 0xFE	; 254
    1a42:	1f 4f       	sbci	r17, 0xFF	; 255
    1a44:	f3 2d       	mov	r31, r3
    1a46:	ff 76       	andi	r31, 0x6F	; 111
    1a48:	3f 2e       	mov	r3, r31
    1a4a:	97 ff       	sbrs	r25, 7
    1a4c:	09 c0       	rjmp	.+18     	; 0x1a60 <vfprintf+0x212>
    1a4e:	90 95       	com	r25
    1a50:	80 95       	com	r24
    1a52:	70 95       	com	r23
    1a54:	61 95       	neg	r22
    1a56:	7f 4f       	sbci	r23, 0xFF	; 255
    1a58:	8f 4f       	sbci	r24, 0xFF	; 255
    1a5a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a5c:	f0 68       	ori	r31, 0x80	; 128
    1a5e:	3f 2e       	mov	r3, r31
    1a60:	2a e0       	ldi	r18, 0x0A	; 10
    1a62:	30 e0       	ldi	r19, 0x00	; 0
    1a64:	a3 01       	movw	r20, r6
    1a66:	0e 94 5a 0e 	call	0x1cb4	; 0x1cb4 <__ultoa_invert>
    1a6a:	88 2e       	mov	r8, r24
    1a6c:	86 18       	sub	r8, r6
    1a6e:	45 c0       	rjmp	.+138    	; 0x1afa <vfprintf+0x2ac>
    1a70:	85 37       	cpi	r24, 0x75	; 117
    1a72:	31 f4       	brne	.+12     	; 0x1a80 <vfprintf+0x232>
    1a74:	23 2d       	mov	r18, r3
    1a76:	2f 7e       	andi	r18, 0xEF	; 239
    1a78:	b2 2e       	mov	r11, r18
    1a7a:	2a e0       	ldi	r18, 0x0A	; 10
    1a7c:	30 e0       	ldi	r19, 0x00	; 0
    1a7e:	25 c0       	rjmp	.+74     	; 0x1aca <vfprintf+0x27c>
    1a80:	93 2d       	mov	r25, r3
    1a82:	99 7f       	andi	r25, 0xF9	; 249
    1a84:	b9 2e       	mov	r11, r25
    1a86:	8f 36       	cpi	r24, 0x6F	; 111
    1a88:	c1 f0       	breq	.+48     	; 0x1aba <vfprintf+0x26c>
    1a8a:	18 f4       	brcc	.+6      	; 0x1a92 <vfprintf+0x244>
    1a8c:	88 35       	cpi	r24, 0x58	; 88
    1a8e:	79 f0       	breq	.+30     	; 0x1aae <vfprintf+0x260>
    1a90:	b5 c0       	rjmp	.+362    	; 0x1bfc <vfprintf+0x3ae>
    1a92:	80 37       	cpi	r24, 0x70	; 112
    1a94:	19 f0       	breq	.+6      	; 0x1a9c <vfprintf+0x24e>
    1a96:	88 37       	cpi	r24, 0x78	; 120
    1a98:	21 f0       	breq	.+8      	; 0x1aa2 <vfprintf+0x254>
    1a9a:	b0 c0       	rjmp	.+352    	; 0x1bfc <vfprintf+0x3ae>
    1a9c:	e9 2f       	mov	r30, r25
    1a9e:	e0 61       	ori	r30, 0x10	; 16
    1aa0:	be 2e       	mov	r11, r30
    1aa2:	b4 fe       	sbrs	r11, 4
    1aa4:	0d c0       	rjmp	.+26     	; 0x1ac0 <vfprintf+0x272>
    1aa6:	fb 2d       	mov	r31, r11
    1aa8:	f4 60       	ori	r31, 0x04	; 4
    1aaa:	bf 2e       	mov	r11, r31
    1aac:	09 c0       	rjmp	.+18     	; 0x1ac0 <vfprintf+0x272>
    1aae:	34 fe       	sbrs	r3, 4
    1ab0:	0a c0       	rjmp	.+20     	; 0x1ac6 <vfprintf+0x278>
    1ab2:	29 2f       	mov	r18, r25
    1ab4:	26 60       	ori	r18, 0x06	; 6
    1ab6:	b2 2e       	mov	r11, r18
    1ab8:	06 c0       	rjmp	.+12     	; 0x1ac6 <vfprintf+0x278>
    1aba:	28 e0       	ldi	r18, 0x08	; 8
    1abc:	30 e0       	ldi	r19, 0x00	; 0
    1abe:	05 c0       	rjmp	.+10     	; 0x1aca <vfprintf+0x27c>
    1ac0:	20 e1       	ldi	r18, 0x10	; 16
    1ac2:	30 e0       	ldi	r19, 0x00	; 0
    1ac4:	02 c0       	rjmp	.+4      	; 0x1aca <vfprintf+0x27c>
    1ac6:	20 e1       	ldi	r18, 0x10	; 16
    1ac8:	32 e0       	ldi	r19, 0x02	; 2
    1aca:	f8 01       	movw	r30, r16
    1acc:	b7 fe       	sbrs	r11, 7
    1ace:	07 c0       	rjmp	.+14     	; 0x1ade <vfprintf+0x290>
    1ad0:	60 81       	ld	r22, Z
    1ad2:	71 81       	ldd	r23, Z+1	; 0x01
    1ad4:	82 81       	ldd	r24, Z+2	; 0x02
    1ad6:	93 81       	ldd	r25, Z+3	; 0x03
    1ad8:	0c 5f       	subi	r16, 0xFC	; 252
    1ada:	1f 4f       	sbci	r17, 0xFF	; 255
    1adc:	06 c0       	rjmp	.+12     	; 0x1aea <vfprintf+0x29c>
    1ade:	60 81       	ld	r22, Z
    1ae0:	71 81       	ldd	r23, Z+1	; 0x01
    1ae2:	80 e0       	ldi	r24, 0x00	; 0
    1ae4:	90 e0       	ldi	r25, 0x00	; 0
    1ae6:	0e 5f       	subi	r16, 0xFE	; 254
    1ae8:	1f 4f       	sbci	r17, 0xFF	; 255
    1aea:	a3 01       	movw	r20, r6
    1aec:	0e 94 5a 0e 	call	0x1cb4	; 0x1cb4 <__ultoa_invert>
    1af0:	88 2e       	mov	r8, r24
    1af2:	86 18       	sub	r8, r6
    1af4:	fb 2d       	mov	r31, r11
    1af6:	ff 77       	andi	r31, 0x7F	; 127
    1af8:	3f 2e       	mov	r3, r31
    1afa:	36 fe       	sbrs	r3, 6
    1afc:	0d c0       	rjmp	.+26     	; 0x1b18 <vfprintf+0x2ca>
    1afe:	23 2d       	mov	r18, r3
    1b00:	2e 7f       	andi	r18, 0xFE	; 254
    1b02:	a2 2e       	mov	r10, r18
    1b04:	89 14       	cp	r8, r9
    1b06:	58 f4       	brcc	.+22     	; 0x1b1e <vfprintf+0x2d0>
    1b08:	34 fe       	sbrs	r3, 4
    1b0a:	0b c0       	rjmp	.+22     	; 0x1b22 <vfprintf+0x2d4>
    1b0c:	32 fc       	sbrc	r3, 2
    1b0e:	09 c0       	rjmp	.+18     	; 0x1b22 <vfprintf+0x2d4>
    1b10:	83 2d       	mov	r24, r3
    1b12:	8e 7e       	andi	r24, 0xEE	; 238
    1b14:	a8 2e       	mov	r10, r24
    1b16:	05 c0       	rjmp	.+10     	; 0x1b22 <vfprintf+0x2d4>
    1b18:	b8 2c       	mov	r11, r8
    1b1a:	a3 2c       	mov	r10, r3
    1b1c:	03 c0       	rjmp	.+6      	; 0x1b24 <vfprintf+0x2d6>
    1b1e:	b8 2c       	mov	r11, r8
    1b20:	01 c0       	rjmp	.+2      	; 0x1b24 <vfprintf+0x2d6>
    1b22:	b9 2c       	mov	r11, r9
    1b24:	a4 fe       	sbrs	r10, 4
    1b26:	0f c0       	rjmp	.+30     	; 0x1b46 <vfprintf+0x2f8>
    1b28:	fe 01       	movw	r30, r28
    1b2a:	e8 0d       	add	r30, r8
    1b2c:	f1 1d       	adc	r31, r1
    1b2e:	80 81       	ld	r24, Z
    1b30:	80 33       	cpi	r24, 0x30	; 48
    1b32:	21 f4       	brne	.+8      	; 0x1b3c <vfprintf+0x2ee>
    1b34:	9a 2d       	mov	r25, r10
    1b36:	99 7e       	andi	r25, 0xE9	; 233
    1b38:	a9 2e       	mov	r10, r25
    1b3a:	09 c0       	rjmp	.+18     	; 0x1b4e <vfprintf+0x300>
    1b3c:	a2 fe       	sbrs	r10, 2
    1b3e:	06 c0       	rjmp	.+12     	; 0x1b4c <vfprintf+0x2fe>
    1b40:	b3 94       	inc	r11
    1b42:	b3 94       	inc	r11
    1b44:	04 c0       	rjmp	.+8      	; 0x1b4e <vfprintf+0x300>
    1b46:	8a 2d       	mov	r24, r10
    1b48:	86 78       	andi	r24, 0x86	; 134
    1b4a:	09 f0       	breq	.+2      	; 0x1b4e <vfprintf+0x300>
    1b4c:	b3 94       	inc	r11
    1b4e:	a3 fc       	sbrc	r10, 3
    1b50:	11 c0       	rjmp	.+34     	; 0x1b74 <vfprintf+0x326>
    1b52:	a0 fe       	sbrs	r10, 0
    1b54:	06 c0       	rjmp	.+12     	; 0x1b62 <vfprintf+0x314>
    1b56:	b2 14       	cp	r11, r2
    1b58:	88 f4       	brcc	.+34     	; 0x1b7c <vfprintf+0x32e>
    1b5a:	28 0c       	add	r2, r8
    1b5c:	92 2c       	mov	r9, r2
    1b5e:	9b 18       	sub	r9, r11
    1b60:	0e c0       	rjmp	.+28     	; 0x1b7e <vfprintf+0x330>
    1b62:	b2 14       	cp	r11, r2
    1b64:	60 f4       	brcc	.+24     	; 0x1b7e <vfprintf+0x330>
    1b66:	b6 01       	movw	r22, r12
    1b68:	80 e2       	ldi	r24, 0x20	; 32
    1b6a:	90 e0       	ldi	r25, 0x00	; 0
    1b6c:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <fputc>
    1b70:	b3 94       	inc	r11
    1b72:	f7 cf       	rjmp	.-18     	; 0x1b62 <vfprintf+0x314>
    1b74:	b2 14       	cp	r11, r2
    1b76:	18 f4       	brcc	.+6      	; 0x1b7e <vfprintf+0x330>
    1b78:	2b 18       	sub	r2, r11
    1b7a:	02 c0       	rjmp	.+4      	; 0x1b80 <vfprintf+0x332>
    1b7c:	98 2c       	mov	r9, r8
    1b7e:	21 2c       	mov	r2, r1
    1b80:	a4 fe       	sbrs	r10, 4
    1b82:	10 c0       	rjmp	.+32     	; 0x1ba4 <vfprintf+0x356>
    1b84:	b6 01       	movw	r22, r12
    1b86:	80 e3       	ldi	r24, 0x30	; 48
    1b88:	90 e0       	ldi	r25, 0x00	; 0
    1b8a:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <fputc>
    1b8e:	a2 fe       	sbrs	r10, 2
    1b90:	17 c0       	rjmp	.+46     	; 0x1bc0 <vfprintf+0x372>
    1b92:	a1 fc       	sbrc	r10, 1
    1b94:	03 c0       	rjmp	.+6      	; 0x1b9c <vfprintf+0x34e>
    1b96:	88 e7       	ldi	r24, 0x78	; 120
    1b98:	90 e0       	ldi	r25, 0x00	; 0
    1b9a:	02 c0       	rjmp	.+4      	; 0x1ba0 <vfprintf+0x352>
    1b9c:	88 e5       	ldi	r24, 0x58	; 88
    1b9e:	90 e0       	ldi	r25, 0x00	; 0
    1ba0:	b6 01       	movw	r22, r12
    1ba2:	0c c0       	rjmp	.+24     	; 0x1bbc <vfprintf+0x36e>
    1ba4:	8a 2d       	mov	r24, r10
    1ba6:	86 78       	andi	r24, 0x86	; 134
    1ba8:	59 f0       	breq	.+22     	; 0x1bc0 <vfprintf+0x372>
    1baa:	a1 fe       	sbrs	r10, 1
    1bac:	02 c0       	rjmp	.+4      	; 0x1bb2 <vfprintf+0x364>
    1bae:	8b e2       	ldi	r24, 0x2B	; 43
    1bb0:	01 c0       	rjmp	.+2      	; 0x1bb4 <vfprintf+0x366>
    1bb2:	80 e2       	ldi	r24, 0x20	; 32
    1bb4:	a7 fc       	sbrc	r10, 7
    1bb6:	8d e2       	ldi	r24, 0x2D	; 45
    1bb8:	b6 01       	movw	r22, r12
    1bba:	90 e0       	ldi	r25, 0x00	; 0
    1bbc:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <fputc>
    1bc0:	89 14       	cp	r8, r9
    1bc2:	38 f4       	brcc	.+14     	; 0x1bd2 <vfprintf+0x384>
    1bc4:	b6 01       	movw	r22, r12
    1bc6:	80 e3       	ldi	r24, 0x30	; 48
    1bc8:	90 e0       	ldi	r25, 0x00	; 0
    1bca:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <fputc>
    1bce:	9a 94       	dec	r9
    1bd0:	f7 cf       	rjmp	.-18     	; 0x1bc0 <vfprintf+0x372>
    1bd2:	8a 94       	dec	r8
    1bd4:	f3 01       	movw	r30, r6
    1bd6:	e8 0d       	add	r30, r8
    1bd8:	f1 1d       	adc	r31, r1
    1bda:	80 81       	ld	r24, Z
    1bdc:	b6 01       	movw	r22, r12
    1bde:	90 e0       	ldi	r25, 0x00	; 0
    1be0:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <fputc>
    1be4:	81 10       	cpse	r8, r1
    1be6:	f5 cf       	rjmp	.-22     	; 0x1bd2 <vfprintf+0x384>
    1be8:	22 20       	and	r2, r2
    1bea:	09 f4       	brne	.+2      	; 0x1bee <vfprintf+0x3a0>
    1bec:	42 ce       	rjmp	.-892    	; 0x1872 <vfprintf+0x24>
    1bee:	b6 01       	movw	r22, r12
    1bf0:	80 e2       	ldi	r24, 0x20	; 32
    1bf2:	90 e0       	ldi	r25, 0x00	; 0
    1bf4:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <fputc>
    1bf8:	2a 94       	dec	r2
    1bfa:	f6 cf       	rjmp	.-20     	; 0x1be8 <vfprintf+0x39a>
    1bfc:	f6 01       	movw	r30, r12
    1bfe:	86 81       	ldd	r24, Z+6	; 0x06
    1c00:	97 81       	ldd	r25, Z+7	; 0x07
    1c02:	02 c0       	rjmp	.+4      	; 0x1c08 <vfprintf+0x3ba>
    1c04:	8f ef       	ldi	r24, 0xFF	; 255
    1c06:	9f ef       	ldi	r25, 0xFF	; 255
    1c08:	2b 96       	adiw	r28, 0x0b	; 11
    1c0a:	e2 e1       	ldi	r30, 0x12	; 18
    1c0c:	0c 94 d4 0e 	jmp	0x1da8	; 0x1da8 <__epilogue_restores__>

00001c10 <strnlen_P>:
    1c10:	fc 01       	movw	r30, r24
    1c12:	05 90       	lpm	r0, Z+
    1c14:	61 50       	subi	r22, 0x01	; 1
    1c16:	70 40       	sbci	r23, 0x00	; 0
    1c18:	01 10       	cpse	r0, r1
    1c1a:	d8 f7       	brcc	.-10     	; 0x1c12 <strnlen_P+0x2>
    1c1c:	80 95       	com	r24
    1c1e:	90 95       	com	r25
    1c20:	8e 0f       	add	r24, r30
    1c22:	9f 1f       	adc	r25, r31
    1c24:	08 95       	ret

00001c26 <strnlen>:
    1c26:	fc 01       	movw	r30, r24
    1c28:	61 50       	subi	r22, 0x01	; 1
    1c2a:	70 40       	sbci	r23, 0x00	; 0
    1c2c:	01 90       	ld	r0, Z+
    1c2e:	01 10       	cpse	r0, r1
    1c30:	d8 f7       	brcc	.-10     	; 0x1c28 <strnlen+0x2>
    1c32:	80 95       	com	r24
    1c34:	90 95       	com	r25
    1c36:	8e 0f       	add	r24, r30
    1c38:	9f 1f       	adc	r25, r31
    1c3a:	08 95       	ret

00001c3c <fputc>:
    1c3c:	0f 93       	push	r16
    1c3e:	1f 93       	push	r17
    1c40:	cf 93       	push	r28
    1c42:	df 93       	push	r29
    1c44:	fb 01       	movw	r30, r22
    1c46:	23 81       	ldd	r18, Z+3	; 0x03
    1c48:	21 fd       	sbrc	r18, 1
    1c4a:	03 c0       	rjmp	.+6      	; 0x1c52 <fputc+0x16>
    1c4c:	8f ef       	ldi	r24, 0xFF	; 255
    1c4e:	9f ef       	ldi	r25, 0xFF	; 255
    1c50:	2c c0       	rjmp	.+88     	; 0x1caa <fputc+0x6e>
    1c52:	22 ff       	sbrs	r18, 2
    1c54:	16 c0       	rjmp	.+44     	; 0x1c82 <fputc+0x46>
    1c56:	46 81       	ldd	r20, Z+6	; 0x06
    1c58:	57 81       	ldd	r21, Z+7	; 0x07
    1c5a:	24 81       	ldd	r18, Z+4	; 0x04
    1c5c:	35 81       	ldd	r19, Z+5	; 0x05
    1c5e:	42 17       	cp	r20, r18
    1c60:	53 07       	cpc	r21, r19
    1c62:	44 f4       	brge	.+16     	; 0x1c74 <fputc+0x38>
    1c64:	a0 81       	ld	r26, Z
    1c66:	b1 81       	ldd	r27, Z+1	; 0x01
    1c68:	9d 01       	movw	r18, r26
    1c6a:	2f 5f       	subi	r18, 0xFF	; 255
    1c6c:	3f 4f       	sbci	r19, 0xFF	; 255
    1c6e:	31 83       	std	Z+1, r19	; 0x01
    1c70:	20 83       	st	Z, r18
    1c72:	8c 93       	st	X, r24
    1c74:	26 81       	ldd	r18, Z+6	; 0x06
    1c76:	37 81       	ldd	r19, Z+7	; 0x07
    1c78:	2f 5f       	subi	r18, 0xFF	; 255
    1c7a:	3f 4f       	sbci	r19, 0xFF	; 255
    1c7c:	37 83       	std	Z+7, r19	; 0x07
    1c7e:	26 83       	std	Z+6, r18	; 0x06
    1c80:	14 c0       	rjmp	.+40     	; 0x1caa <fputc+0x6e>
    1c82:	8b 01       	movw	r16, r22
    1c84:	ec 01       	movw	r28, r24
    1c86:	fb 01       	movw	r30, r22
    1c88:	00 84       	ldd	r0, Z+8	; 0x08
    1c8a:	f1 85       	ldd	r31, Z+9	; 0x09
    1c8c:	e0 2d       	mov	r30, r0
    1c8e:	09 95       	icall
    1c90:	89 2b       	or	r24, r25
    1c92:	e1 f6       	brne	.-72     	; 0x1c4c <fputc+0x10>
    1c94:	d8 01       	movw	r26, r16
    1c96:	16 96       	adiw	r26, 0x06	; 6
    1c98:	8d 91       	ld	r24, X+
    1c9a:	9c 91       	ld	r25, X
    1c9c:	17 97       	sbiw	r26, 0x07	; 7
    1c9e:	01 96       	adiw	r24, 0x01	; 1
    1ca0:	17 96       	adiw	r26, 0x07	; 7
    1ca2:	9c 93       	st	X, r25
    1ca4:	8e 93       	st	-X, r24
    1ca6:	16 97       	sbiw	r26, 0x06	; 6
    1ca8:	ce 01       	movw	r24, r28
    1caa:	df 91       	pop	r29
    1cac:	cf 91       	pop	r28
    1cae:	1f 91       	pop	r17
    1cb0:	0f 91       	pop	r16
    1cb2:	08 95       	ret

00001cb4 <__ultoa_invert>:
    1cb4:	fa 01       	movw	r30, r20
    1cb6:	aa 27       	eor	r26, r26
    1cb8:	28 30       	cpi	r18, 0x08	; 8
    1cba:	51 f1       	breq	.+84     	; 0x1d10 <__ultoa_invert+0x5c>
    1cbc:	20 31       	cpi	r18, 0x10	; 16
    1cbe:	81 f1       	breq	.+96     	; 0x1d20 <__ultoa_invert+0x6c>
    1cc0:	e8 94       	clt
    1cc2:	6f 93       	push	r22
    1cc4:	6e 7f       	andi	r22, 0xFE	; 254
    1cc6:	6e 5f       	subi	r22, 0xFE	; 254
    1cc8:	7f 4f       	sbci	r23, 0xFF	; 255
    1cca:	8f 4f       	sbci	r24, 0xFF	; 255
    1ccc:	9f 4f       	sbci	r25, 0xFF	; 255
    1cce:	af 4f       	sbci	r26, 0xFF	; 255
    1cd0:	b1 e0       	ldi	r27, 0x01	; 1
    1cd2:	3e d0       	rcall	.+124    	; 0x1d50 <__ultoa_invert+0x9c>
    1cd4:	b4 e0       	ldi	r27, 0x04	; 4
    1cd6:	3c d0       	rcall	.+120    	; 0x1d50 <__ultoa_invert+0x9c>
    1cd8:	67 0f       	add	r22, r23
    1cda:	78 1f       	adc	r23, r24
    1cdc:	89 1f       	adc	r24, r25
    1cde:	9a 1f       	adc	r25, r26
    1ce0:	a1 1d       	adc	r26, r1
    1ce2:	68 0f       	add	r22, r24
    1ce4:	79 1f       	adc	r23, r25
    1ce6:	8a 1f       	adc	r24, r26
    1ce8:	91 1d       	adc	r25, r1
    1cea:	a1 1d       	adc	r26, r1
    1cec:	6a 0f       	add	r22, r26
    1cee:	71 1d       	adc	r23, r1
    1cf0:	81 1d       	adc	r24, r1
    1cf2:	91 1d       	adc	r25, r1
    1cf4:	a1 1d       	adc	r26, r1
    1cf6:	20 d0       	rcall	.+64     	; 0x1d38 <__ultoa_invert+0x84>
    1cf8:	09 f4       	brne	.+2      	; 0x1cfc <__ultoa_invert+0x48>
    1cfa:	68 94       	set
    1cfc:	3f 91       	pop	r19
    1cfe:	2a e0       	ldi	r18, 0x0A	; 10
    1d00:	26 9f       	mul	r18, r22
    1d02:	11 24       	eor	r1, r1
    1d04:	30 19       	sub	r19, r0
    1d06:	30 5d       	subi	r19, 0xD0	; 208
    1d08:	31 93       	st	Z+, r19
    1d0a:	de f6       	brtc	.-74     	; 0x1cc2 <__ultoa_invert+0xe>
    1d0c:	cf 01       	movw	r24, r30
    1d0e:	08 95       	ret
    1d10:	46 2f       	mov	r20, r22
    1d12:	47 70       	andi	r20, 0x07	; 7
    1d14:	40 5d       	subi	r20, 0xD0	; 208
    1d16:	41 93       	st	Z+, r20
    1d18:	b3 e0       	ldi	r27, 0x03	; 3
    1d1a:	0f d0       	rcall	.+30     	; 0x1d3a <__ultoa_invert+0x86>
    1d1c:	c9 f7       	brne	.-14     	; 0x1d10 <__ultoa_invert+0x5c>
    1d1e:	f6 cf       	rjmp	.-20     	; 0x1d0c <__ultoa_invert+0x58>
    1d20:	46 2f       	mov	r20, r22
    1d22:	4f 70       	andi	r20, 0x0F	; 15
    1d24:	40 5d       	subi	r20, 0xD0	; 208
    1d26:	4a 33       	cpi	r20, 0x3A	; 58
    1d28:	18 f0       	brcs	.+6      	; 0x1d30 <__ultoa_invert+0x7c>
    1d2a:	49 5d       	subi	r20, 0xD9	; 217
    1d2c:	31 fd       	sbrc	r19, 1
    1d2e:	40 52       	subi	r20, 0x20	; 32
    1d30:	41 93       	st	Z+, r20
    1d32:	02 d0       	rcall	.+4      	; 0x1d38 <__ultoa_invert+0x84>
    1d34:	a9 f7       	brne	.-22     	; 0x1d20 <__ultoa_invert+0x6c>
    1d36:	ea cf       	rjmp	.-44     	; 0x1d0c <__ultoa_invert+0x58>
    1d38:	b4 e0       	ldi	r27, 0x04	; 4
    1d3a:	a6 95       	lsr	r26
    1d3c:	97 95       	ror	r25
    1d3e:	87 95       	ror	r24
    1d40:	77 95       	ror	r23
    1d42:	67 95       	ror	r22
    1d44:	ba 95       	dec	r27
    1d46:	c9 f7       	brne	.-14     	; 0x1d3a <__ultoa_invert+0x86>
    1d48:	00 97       	sbiw	r24, 0x00	; 0
    1d4a:	61 05       	cpc	r22, r1
    1d4c:	71 05       	cpc	r23, r1
    1d4e:	08 95       	ret
    1d50:	9b 01       	movw	r18, r22
    1d52:	ac 01       	movw	r20, r24
    1d54:	0a 2e       	mov	r0, r26
    1d56:	06 94       	lsr	r0
    1d58:	57 95       	ror	r21
    1d5a:	47 95       	ror	r20
    1d5c:	37 95       	ror	r19
    1d5e:	27 95       	ror	r18
    1d60:	ba 95       	dec	r27
    1d62:	c9 f7       	brne	.-14     	; 0x1d56 <__ultoa_invert+0xa2>
    1d64:	62 0f       	add	r22, r18
    1d66:	73 1f       	adc	r23, r19
    1d68:	84 1f       	adc	r24, r20
    1d6a:	95 1f       	adc	r25, r21
    1d6c:	a0 1d       	adc	r26, r0
    1d6e:	08 95       	ret

00001d70 <__prologue_saves__>:
    1d70:	2f 92       	push	r2
    1d72:	3f 92       	push	r3
    1d74:	4f 92       	push	r4
    1d76:	5f 92       	push	r5
    1d78:	6f 92       	push	r6
    1d7a:	7f 92       	push	r7
    1d7c:	8f 92       	push	r8
    1d7e:	9f 92       	push	r9
    1d80:	af 92       	push	r10
    1d82:	bf 92       	push	r11
    1d84:	cf 92       	push	r12
    1d86:	df 92       	push	r13
    1d88:	ef 92       	push	r14
    1d8a:	ff 92       	push	r15
    1d8c:	0f 93       	push	r16
    1d8e:	1f 93       	push	r17
    1d90:	cf 93       	push	r28
    1d92:	df 93       	push	r29
    1d94:	cd b7       	in	r28, 0x3d	; 61
    1d96:	de b7       	in	r29, 0x3e	; 62
    1d98:	ca 1b       	sub	r28, r26
    1d9a:	db 0b       	sbc	r29, r27
    1d9c:	0f b6       	in	r0, 0x3f	; 63
    1d9e:	f8 94       	cli
    1da0:	de bf       	out	0x3e, r29	; 62
    1da2:	0f be       	out	0x3f, r0	; 63
    1da4:	cd bf       	out	0x3d, r28	; 61
    1da6:	09 94       	ijmp

00001da8 <__epilogue_restores__>:
    1da8:	2a 88       	ldd	r2, Y+18	; 0x12
    1daa:	39 88       	ldd	r3, Y+17	; 0x11
    1dac:	48 88       	ldd	r4, Y+16	; 0x10
    1dae:	5f 84       	ldd	r5, Y+15	; 0x0f
    1db0:	6e 84       	ldd	r6, Y+14	; 0x0e
    1db2:	7d 84       	ldd	r7, Y+13	; 0x0d
    1db4:	8c 84       	ldd	r8, Y+12	; 0x0c
    1db6:	9b 84       	ldd	r9, Y+11	; 0x0b
    1db8:	aa 84       	ldd	r10, Y+10	; 0x0a
    1dba:	b9 84       	ldd	r11, Y+9	; 0x09
    1dbc:	c8 84       	ldd	r12, Y+8	; 0x08
    1dbe:	df 80       	ldd	r13, Y+7	; 0x07
    1dc0:	ee 80       	ldd	r14, Y+6	; 0x06
    1dc2:	fd 80       	ldd	r15, Y+5	; 0x05
    1dc4:	0c 81       	ldd	r16, Y+4	; 0x04
    1dc6:	1b 81       	ldd	r17, Y+3	; 0x03
    1dc8:	aa 81       	ldd	r26, Y+2	; 0x02
    1dca:	b9 81       	ldd	r27, Y+1	; 0x01
    1dcc:	ce 0f       	add	r28, r30
    1dce:	d1 1d       	adc	r29, r1
    1dd0:	0f b6       	in	r0, 0x3f	; 63
    1dd2:	f8 94       	cli
    1dd4:	de bf       	out	0x3e, r29	; 62
    1dd6:	0f be       	out	0x3f, r0	; 63
    1dd8:	cd bf       	out	0x3d, r28	; 61
    1dda:	ed 01       	movw	r28, r26
    1ddc:	08 95       	ret

00001dde <_exit>:
    1dde:	f8 94       	cli

00001de0 <__stop_program>:
    1de0:	ff cf       	rjmp	.-2      	; 0x1de0 <__stop_program>
