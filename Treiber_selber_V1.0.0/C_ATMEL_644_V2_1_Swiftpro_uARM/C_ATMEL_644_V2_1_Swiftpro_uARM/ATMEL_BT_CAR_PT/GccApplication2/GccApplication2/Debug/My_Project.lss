
My_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000132  00800100  0000298a  00002a1e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000298a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000ad  00800232  00800232  00002b50  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002b50  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002bac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000180  00000000  00000000  00002bec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b39  00000000  00000000  00002d6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ca9  00000000  00000000  000048a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001658  00000000  00000000  0000554e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005a8  00000000  00000000  00006ba8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a15  00000000  00000000  00007150  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b91  00000000  00000000  00007b65  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  000086f6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 e7 0c 	jmp	0x19ce	; 0x19ce <__vector_16>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 89 03 	jmp	0x712	; 0x712 <__vector_20>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      70:	0c 94 e4 03 	jmp	0x7c8	; 0x7c8 <__vector_28>
      74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d0 e1       	ldi	r29, 0x10	; 16
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	12 e0       	ldi	r17, 0x02	; 2
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	ea e8       	ldi	r30, 0x8A	; 138
      90:	f9 e2       	ldi	r31, 0x29	; 41
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	a2 33       	cpi	r26, 0x32	; 50
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	22 e0       	ldi	r18, 0x02	; 2
      a0:	a2 e3       	ldi	r26, 0x32	; 50
      a2:	b2 e0       	ldi	r27, 0x02	; 2
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	af 3d       	cpi	r26, 0xDF	; 223
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 4e 04 	call	0x89c	; 0x89c <main>
      b2:	0c 94 c3 14 	jmp	0x2986	; 0x2986 <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <ws2812_setleds>:
}

void ws2812_sendarray(uint8_t *data,uint16_t datlen)
{
  ws2812_sendarray_mask(data,datlen,_BV(ws2812_pin));
}
      ba:	cf 93       	push	r28
      bc:	df 93       	push	r29
      be:	00 d0       	rcall	.+0      	; 0xc0 <ws2812_setleds+0x6>
      c0:	00 d0       	rcall	.+0      	; 0xc2 <ws2812_setleds+0x8>
      c2:	cd b7       	in	r28, 0x3d	; 61
      c4:	de b7       	in	r29, 0x3e	; 62
      c6:	9a 83       	std	Y+2, r25	; 0x02
      c8:	89 83       	std	Y+1, r24	; 0x01
      ca:	7c 83       	std	Y+4, r23	; 0x04
      cc:	6b 83       	std	Y+3, r22	; 0x03
      ce:	2b 81       	ldd	r18, Y+3	; 0x03
      d0:	3c 81       	ldd	r19, Y+4	; 0x04
      d2:	89 81       	ldd	r24, Y+1	; 0x01
      d4:	9a 81       	ldd	r25, Y+2	; 0x02
      d6:	40 e8       	ldi	r20, 0x80	; 128
      d8:	b9 01       	movw	r22, r18
      da:	0e 94 77 00 	call	0xee	; 0xee <ws2812_setleds_pin>
      de:	00 00       	nop
      e0:	0f 90       	pop	r0
      e2:	0f 90       	pop	r0
      e4:	0f 90       	pop	r0
      e6:	0f 90       	pop	r0
      e8:	df 91       	pop	r29
      ea:	cf 91       	pop	r28
      ec:	08 95       	ret

000000ee <ws2812_setleds_pin>:
      ee:	cf 93       	push	r28
      f0:	df 93       	push	r29
      f2:	cd b7       	in	r28, 0x3d	; 61
      f4:	de b7       	in	r29, 0x3e	; 62
      f6:	a5 97       	sbiw	r28, 0x25	; 37
      f8:	0f b6       	in	r0, 0x3f	; 63
      fa:	f8 94       	cli
      fc:	de bf       	out	0x3e, r29	; 62
      fe:	0f be       	out	0x3f, r0	; 63
     100:	cd bf       	out	0x3d, r28	; 61
     102:	9a a3       	std	Y+34, r25	; 0x22
     104:	89 a3       	std	Y+33, r24	; 0x21
     106:	7c a3       	std	Y+36, r23	; 0x24
     108:	6b a3       	std	Y+35, r22	; 0x23
     10a:	4d a3       	std	Y+37, r20	; 0x25
     10c:	8a e2       	ldi	r24, 0x2A	; 42
     10e:	90 e0       	ldi	r25, 0x00	; 0
     110:	2a e2       	ldi	r18, 0x2A	; 42
     112:	30 e0       	ldi	r19, 0x00	; 0
     114:	f9 01       	movw	r30, r18
     116:	30 81       	ld	r19, Z
     118:	2d a1       	ldd	r18, Y+37	; 0x25
     11a:	23 2b       	or	r18, r19
     11c:	fc 01       	movw	r30, r24
     11e:	20 83       	st	Z, r18
     120:	2b a1       	ldd	r18, Y+35	; 0x23
     122:	3c a1       	ldd	r19, Y+36	; 0x24
     124:	8b a1       	ldd	r24, Y+35	; 0x23
     126:	9c a1       	ldd	r25, Y+36	; 0x24
     128:	28 0f       	add	r18, r24
     12a:	39 1f       	adc	r19, r25
     12c:	8b a1       	ldd	r24, Y+35	; 0x23
     12e:	9c a1       	ldd	r25, Y+36	; 0x24
     130:	28 0f       	add	r18, r24
     132:	39 1f       	adc	r19, r25
     134:	89 a1       	ldd	r24, Y+33	; 0x21
     136:	9a a1       	ldd	r25, Y+34	; 0x22
     138:	4d a1       	ldd	r20, Y+37	; 0x25
     13a:	b9 01       	movw	r22, r18
     13c:	0e 94 99 01 	call	0x332	; 0x332 <ws2812_sendarray_mask>
     140:	80 e0       	ldi	r24, 0x00	; 0
     142:	90 e0       	ldi	r25, 0x00	; 0
     144:	a8 e4       	ldi	r26, 0x48	; 72
     146:	b2 e4       	ldi	r27, 0x42	; 66
     148:	89 83       	std	Y+1, r24	; 0x01
     14a:	9a 83       	std	Y+2, r25	; 0x02
     14c:	ab 83       	std	Y+3, r26	; 0x03
     14e:	bc 83       	std	Y+4, r27	; 0x04
     150:	2b ea       	ldi	r18, 0xAB	; 171
     152:	3a ea       	ldi	r19, 0xAA	; 170
     154:	4a ea       	ldi	r20, 0xAA	; 170
     156:	5e e3       	ldi	r21, 0x3E	; 62
     158:	69 81       	ldd	r22, Y+1	; 0x01
     15a:	7a 81       	ldd	r23, Y+2	; 0x02
     15c:	8b 81       	ldd	r24, Y+3	; 0x03
     15e:	9c 81       	ldd	r25, Y+4	; 0x04
     160:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
     164:	dc 01       	movw	r26, r24
     166:	cb 01       	movw	r24, r22
     168:	8d 83       	std	Y+5, r24	; 0x05
     16a:	9e 83       	std	Y+6, r25	; 0x06
     16c:	af 83       	std	Y+7, r26	; 0x07
     16e:	b8 87       	std	Y+8, r27	; 0x08
     170:	20 e0       	ldi	r18, 0x00	; 0
     172:	30 e0       	ldi	r19, 0x00	; 0
     174:	40 e8       	ldi	r20, 0x80	; 128
     176:	5e e3       	ldi	r21, 0x3E	; 62
     178:	69 81       	ldd	r22, Y+1	; 0x01
     17a:	7a 81       	ldd	r23, Y+2	; 0x02
     17c:	8b 81       	ldd	r24, Y+3	; 0x03
     17e:	9c 81       	ldd	r25, Y+4	; 0x04
     180:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
     184:	dc 01       	movw	r26, r24
     186:	cb 01       	movw	r24, r22
     188:	89 87       	std	Y+9, r24	; 0x09
     18a:	9a 87       	std	Y+10, r25	; 0x0a
     18c:	ab 87       	std	Y+11, r26	; 0x0b
     18e:	bc 87       	std	Y+12, r27	; 0x0c
     190:	20 e0       	ldi	r18, 0x00	; 0
     192:	30 e0       	ldi	r19, 0x00	; 0
     194:	40 e8       	ldi	r20, 0x80	; 128
     196:	5f e3       	ldi	r21, 0x3F	; 63
     198:	6d 81       	ldd	r22, Y+5	; 0x05
     19a:	7e 81       	ldd	r23, Y+6	; 0x06
     19c:	8f 81       	ldd	r24, Y+7	; 0x07
     19e:	98 85       	ldd	r25, Y+8	; 0x08
     1a0:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <__cmpsf2>
     1a4:	88 23       	and	r24, r24
     1a6:	1c f4       	brge	.+6      	; 0x1ae <ws2812_setleds_pin+0xc0>
     1a8:	81 e0       	ldi	r24, 0x01	; 1
     1aa:	8d 87       	std	Y+13, r24	; 0x0d
     1ac:	b2 c0       	rjmp	.+356    	; 0x312 <ws2812_setleds_pin+0x224>
     1ae:	20 e0       	ldi	r18, 0x00	; 0
     1b0:	3f ef       	ldi	r19, 0xFF	; 255
     1b2:	4f e7       	ldi	r20, 0x7F	; 127
     1b4:	57 e4       	ldi	r21, 0x47	; 71
     1b6:	69 85       	ldd	r22, Y+9	; 0x09
     1b8:	7a 85       	ldd	r23, Y+10	; 0x0a
     1ba:	8b 85       	ldd	r24, Y+11	; 0x0b
     1bc:	9c 85       	ldd	r25, Y+12	; 0x0c
     1be:	0e 94 0f 11 	call	0x221e	; 0x221e <__gesf2>
     1c2:	18 16       	cp	r1, r24
     1c4:	0c f0       	brlt	.+2      	; 0x1c8 <ws2812_setleds_pin+0xda>
     1c6:	7b c0       	rjmp	.+246    	; 0x2be <ws2812_setleds_pin+0x1d0>
     1c8:	20 e0       	ldi	r18, 0x00	; 0
     1ca:	30 e0       	ldi	r19, 0x00	; 0
     1cc:	4a e7       	ldi	r20, 0x7A	; 122
     1ce:	54 e4       	ldi	r21, 0x44	; 68
     1d0:	69 81       	ldd	r22, Y+1	; 0x01
     1d2:	7a 81       	ldd	r23, Y+2	; 0x02
     1d4:	8b 81       	ldd	r24, Y+3	; 0x03
     1d6:	9c 81       	ldd	r25, Y+4	; 0x04
     1d8:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__divsf3>
     1dc:	dc 01       	movw	r26, r24
     1de:	cb 01       	movw	r24, r22
     1e0:	8e 87       	std	Y+14, r24	; 0x0e
     1e2:	9f 87       	std	Y+15, r25	; 0x0f
     1e4:	a8 8b       	std	Y+16, r26	; 0x10
     1e6:	b9 8b       	std	Y+17, r27	; 0x11
     1e8:	20 e0       	ldi	r18, 0x00	; 0
     1ea:	30 e0       	ldi	r19, 0x00	; 0
     1ec:	4a e7       	ldi	r20, 0x7A	; 122
     1ee:	53 e4       	ldi	r21, 0x43	; 67
     1f0:	6e 85       	ldd	r22, Y+14	; 0x0e
     1f2:	7f 85       	ldd	r23, Y+15	; 0x0f
     1f4:	88 89       	ldd	r24, Y+16	; 0x10
     1f6:	99 89       	ldd	r25, Y+17	; 0x11
     1f8:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
     1fc:	dc 01       	movw	r26, r24
     1fe:	cb 01       	movw	r24, r22
     200:	8a 8b       	std	Y+18, r24	; 0x12
     202:	9b 8b       	std	Y+19, r25	; 0x13
     204:	ac 8b       	std	Y+20, r26	; 0x14
     206:	bd 8b       	std	Y+21, r27	; 0x15
     208:	20 e0       	ldi	r18, 0x00	; 0
     20a:	30 e0       	ldi	r19, 0x00	; 0
     20c:	40 e8       	ldi	r20, 0x80	; 128
     20e:	5f e3       	ldi	r21, 0x3F	; 63
     210:	6a 89       	ldd	r22, Y+18	; 0x12
     212:	7b 89       	ldd	r23, Y+19	; 0x13
     214:	8c 89       	ldd	r24, Y+20	; 0x14
     216:	9d 89       	ldd	r25, Y+21	; 0x15
     218:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <__cmpsf2>
     21c:	88 23       	and	r24, r24
     21e:	2c f4       	brge	.+10     	; 0x22a <ws2812_setleds_pin+0x13c>
     220:	81 e0       	ldi	r24, 0x01	; 1
     222:	90 e0       	ldi	r25, 0x00	; 0
     224:	9f 8b       	std	Y+23, r25	; 0x17
     226:	8e 8b       	std	Y+22, r24	; 0x16
     228:	3f c0       	rjmp	.+126    	; 0x2a8 <ws2812_setleds_pin+0x1ba>
     22a:	20 e0       	ldi	r18, 0x00	; 0
     22c:	3f ef       	ldi	r19, 0xFF	; 255
     22e:	4f e7       	ldi	r20, 0x7F	; 127
     230:	57 e4       	ldi	r21, 0x47	; 71
     232:	6a 89       	ldd	r22, Y+18	; 0x12
     234:	7b 89       	ldd	r23, Y+19	; 0x13
     236:	8c 89       	ldd	r24, Y+20	; 0x14
     238:	9d 89       	ldd	r25, Y+21	; 0x15
     23a:	0e 94 0f 11 	call	0x221e	; 0x221e <__gesf2>
     23e:	18 16       	cp	r1, r24
     240:	4c f5       	brge	.+82     	; 0x294 <ws2812_setleds_pin+0x1a6>
     242:	20 e0       	ldi	r18, 0x00	; 0
     244:	30 e0       	ldi	r19, 0x00	; 0
     246:	40 e2       	ldi	r20, 0x20	; 32
     248:	51 e4       	ldi	r21, 0x41	; 65
     24a:	6e 85       	ldd	r22, Y+14	; 0x0e
     24c:	7f 85       	ldd	r23, Y+15	; 0x0f
     24e:	88 89       	ldd	r24, Y+16	; 0x10
     250:	99 89       	ldd	r25, Y+17	; 0x11
     252:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
     256:	dc 01       	movw	r26, r24
     258:	cb 01       	movw	r24, r22
     25a:	bc 01       	movw	r22, r24
     25c:	cd 01       	movw	r24, r26
     25e:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
     262:	dc 01       	movw	r26, r24
     264:	cb 01       	movw	r24, r22
     266:	9f 8b       	std	Y+23, r25	; 0x17
     268:	8e 8b       	std	Y+22, r24	; 0x16
     26a:	0f c0       	rjmp	.+30     	; 0x28a <ws2812_setleds_pin+0x19c>
     26c:	89 e1       	ldi	r24, 0x19	; 25
     26e:	90 e0       	ldi	r25, 0x00	; 0
     270:	99 8f       	std	Y+25, r25	; 0x19
     272:	88 8f       	std	Y+24, r24	; 0x18
     274:	88 8d       	ldd	r24, Y+24	; 0x18
     276:	99 8d       	ldd	r25, Y+25	; 0x19
     278:	01 97       	sbiw	r24, 0x01	; 1
     27a:	f1 f7       	brne	.-4      	; 0x278 <ws2812_setleds_pin+0x18a>
     27c:	99 8f       	std	Y+25, r25	; 0x19
     27e:	88 8f       	std	Y+24, r24	; 0x18
     280:	8e 89       	ldd	r24, Y+22	; 0x16
     282:	9f 89       	ldd	r25, Y+23	; 0x17
     284:	01 97       	sbiw	r24, 0x01	; 1
     286:	9f 8b       	std	Y+23, r25	; 0x17
     288:	8e 8b       	std	Y+22, r24	; 0x16
     28a:	8e 89       	ldd	r24, Y+22	; 0x16
     28c:	9f 89       	ldd	r25, Y+23	; 0x17
     28e:	89 2b       	or	r24, r25
     290:	69 f7       	brne	.-38     	; 0x26c <ws2812_setleds_pin+0x17e>
     292:	3f c0       	rjmp	.+126    	; 0x312 <ws2812_setleds_pin+0x224>
     294:	6a 89       	ldd	r22, Y+18	; 0x12
     296:	7b 89       	ldd	r23, Y+19	; 0x13
     298:	8c 89       	ldd	r24, Y+20	; 0x14
     29a:	9d 89       	ldd	r25, Y+21	; 0x15
     29c:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
     2a0:	dc 01       	movw	r26, r24
     2a2:	cb 01       	movw	r24, r22
     2a4:	9f 8b       	std	Y+23, r25	; 0x17
     2a6:	8e 8b       	std	Y+22, r24	; 0x16
     2a8:	8e 89       	ldd	r24, Y+22	; 0x16
     2aa:	9f 89       	ldd	r25, Y+23	; 0x17
     2ac:	9b 8f       	std	Y+27, r25	; 0x1b
     2ae:	8a 8f       	std	Y+26, r24	; 0x1a
     2b0:	8a 8d       	ldd	r24, Y+26	; 0x1a
     2b2:	9b 8d       	ldd	r25, Y+27	; 0x1b
     2b4:	01 97       	sbiw	r24, 0x01	; 1
     2b6:	f1 f7       	brne	.-4      	; 0x2b4 <ws2812_setleds_pin+0x1c6>
     2b8:	9b 8f       	std	Y+27, r25	; 0x1b
     2ba:	8a 8f       	std	Y+26, r24	; 0x1a
     2bc:	2a c0       	rjmp	.+84     	; 0x312 <ws2812_setleds_pin+0x224>
     2be:	20 e0       	ldi	r18, 0x00	; 0
     2c0:	30 e0       	ldi	r19, 0x00	; 0
     2c2:	4f e7       	ldi	r20, 0x7F	; 127
     2c4:	53 e4       	ldi	r21, 0x43	; 67
     2c6:	6d 81       	ldd	r22, Y+5	; 0x05
     2c8:	7e 81       	ldd	r23, Y+6	; 0x06
     2ca:	8f 81       	ldd	r24, Y+7	; 0x07
     2cc:	98 85       	ldd	r25, Y+8	; 0x08
     2ce:	0e 94 0f 11 	call	0x221e	; 0x221e <__gesf2>
     2d2:	18 16       	cp	r1, r24
     2d4:	ac f4       	brge	.+42     	; 0x300 <ws2812_setleds_pin+0x212>
     2d6:	69 85       	ldd	r22, Y+9	; 0x09
     2d8:	7a 85       	ldd	r23, Y+10	; 0x0a
     2da:	8b 85       	ldd	r24, Y+11	; 0x0b
     2dc:	9c 85       	ldd	r25, Y+12	; 0x0c
     2de:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
     2e2:	dc 01       	movw	r26, r24
     2e4:	cb 01       	movw	r24, r22
     2e6:	9d 8f       	std	Y+29, r25	; 0x1d
     2e8:	8c 8f       	std	Y+28, r24	; 0x1c
     2ea:	8c 8d       	ldd	r24, Y+28	; 0x1c
     2ec:	9d 8d       	ldd	r25, Y+29	; 0x1d
     2ee:	9f 8f       	std	Y+31, r25	; 0x1f
     2f0:	8e 8f       	std	Y+30, r24	; 0x1e
     2f2:	8e 8d       	ldd	r24, Y+30	; 0x1e
     2f4:	9f 8d       	ldd	r25, Y+31	; 0x1f
     2f6:	01 97       	sbiw	r24, 0x01	; 1
     2f8:	f1 f7       	brne	.-4      	; 0x2f6 <ws2812_setleds_pin+0x208>
     2fa:	9f 8f       	std	Y+31, r25	; 0x1f
     2fc:	8e 8f       	std	Y+30, r24	; 0x1e
     2fe:	0f c0       	rjmp	.+30     	; 0x31e <ws2812_setleds_pin+0x230>
     300:	6d 81       	ldd	r22, Y+5	; 0x05
     302:	7e 81       	ldd	r23, Y+6	; 0x06
     304:	8f 81       	ldd	r24, Y+7	; 0x07
     306:	98 85       	ldd	r25, Y+8	; 0x08
     308:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
     30c:	dc 01       	movw	r26, r24
     30e:	cb 01       	movw	r24, r22
     310:	8d 87       	std	Y+13, r24	; 0x0d
     312:	8d 85       	ldd	r24, Y+13	; 0x0d
     314:	88 a3       	std	Y+32, r24	; 0x20
     316:	88 a1       	ldd	r24, Y+32	; 0x20
     318:	8a 95       	dec	r24
     31a:	f1 f7       	brne	.-4      	; 0x318 <ws2812_setleds_pin+0x22a>
     31c:	88 a3       	std	Y+32, r24	; 0x20
     31e:	00 00       	nop
     320:	a5 96       	adiw	r28, 0x25	; 37
     322:	0f b6       	in	r0, 0x3f	; 63
     324:	f8 94       	cli
     326:	de bf       	out	0x3e, r29	; 62
     328:	0f be       	out	0x3f, r0	; 63
     32a:	cd bf       	out	0x3d, r28	; 61
     32c:	df 91       	pop	r29
     32e:	cf 91       	pop	r28
     330:	08 95       	ret

00000332 <ws2812_sendarray_mask>:
#define w_nop4  w_nop2 w_nop2
#define w_nop8  w_nop4 w_nop4
#define w_nop16 w_nop8 w_nop8

void inline ws2812_sendarray_mask(uint8_t *data,uint16_t datlen,uint8_t maskhi)
{
     332:	cf 93       	push	r28
     334:	df 93       	push	r29
     336:	cd b7       	in	r28, 0x3d	; 61
     338:	de b7       	in	r29, 0x3e	; 62
     33a:	29 97       	sbiw	r28, 0x09	; 9
     33c:	0f b6       	in	r0, 0x3f	; 63
     33e:	f8 94       	cli
     340:	de bf       	out	0x3e, r29	; 62
     342:	0f be       	out	0x3f, r0	; 63
     344:	cd bf       	out	0x3d, r28	; 61
     346:	9e 83       	std	Y+6, r25	; 0x06
     348:	8d 83       	std	Y+5, r24	; 0x05
     34a:	78 87       	std	Y+8, r23	; 0x08
     34c:	6f 83       	std	Y+7, r22	; 0x07
     34e:	49 87       	std	Y+9, r20	; 0x09
  uint8_t curbyte,ctr,masklo;
  uint8_t sreg_prev;
  
  masklo	=~maskhi&ws2812_PORTREG;
     350:	89 85       	ldd	r24, Y+9	; 0x09
     352:	28 2f       	mov	r18, r24
     354:	20 95       	com	r18
     356:	8b e2       	ldi	r24, 0x2B	; 43
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	fc 01       	movw	r30, r24
     35c:	80 81       	ld	r24, Z
     35e:	82 23       	and	r24, r18
     360:	89 83       	std	Y+1, r24	; 0x01
  maskhi |=        ws2812_PORTREG;
     362:	8b e2       	ldi	r24, 0x2B	; 43
     364:	90 e0       	ldi	r25, 0x00	; 0
     366:	fc 01       	movw	r30, r24
     368:	80 81       	ld	r24, Z
     36a:	99 85       	ldd	r25, Y+9	; 0x09
     36c:	89 2b       	or	r24, r25
     36e:	89 87       	std	Y+9, r24	; 0x09
  sreg_prev=SREG;
     370:	8f e5       	ldi	r24, 0x5F	; 95
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	fc 01       	movw	r30, r24
     376:	80 81       	ld	r24, Z
     378:	8a 83       	std	Y+2, r24	; 0x02
  cli();  
     37a:	f8 94       	cli

  while (datlen--) {
     37c:	43 c0       	rjmp	.+134    	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
    curbyte=*data++;
     37e:	8d 81       	ldd	r24, Y+5	; 0x05
     380:	9e 81       	ldd	r25, Y+6	; 0x06
     382:	9c 01       	movw	r18, r24
     384:	2f 5f       	subi	r18, 0xFF	; 255
     386:	3f 4f       	sbci	r19, 0xFF	; 255
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	2d 83       	std	Y+5, r18	; 0x05
     38c:	fc 01       	movw	r30, r24
     38e:	80 81       	ld	r24, Z
     390:	8b 83       	std	Y+3, r24	; 0x03
    
    asm volatile(
     392:	9b 81       	ldd	r25, Y+3	; 0x03
     394:	29 85       	ldd	r18, Y+9	; 0x09
     396:	39 81       	ldd	r19, Y+1	; 0x01
     398:	88 e0       	ldi	r24, 0x08	; 8

0000039a <loop335>:
     39a:	2b b9       	out	0x0b, r18	; 11
     39c:	00 c0       	rjmp	.+0      	; 0x39e <loop335+0x4>
     39e:	00 c0       	rjmp	.+0      	; 0x3a0 <loop335+0x6>
     3a0:	00 c0       	rjmp	.+0      	; 0x3a2 <loop335+0x8>
     3a2:	00 c0       	rjmp	.+0      	; 0x3a4 <loop335+0xa>
     3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <loop335+0xc>
     3a6:	00 c0       	rjmp	.+0      	; 0x3a8 <loop335+0xe>
     3a8:	00 c0       	rjmp	.+0      	; 0x3aa <loop335+0x10>
     3aa:	00 c0       	rjmp	.+0      	; 0x3ac <loop335+0x12>
     3ac:	00 c0       	rjmp	.+0      	; 0x3ae <loop335+0x14>
     3ae:	00 c0       	rjmp	.+0      	; 0x3b0 <loop335+0x16>
     3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <loop335+0x18>
     3b2:	00 c0       	rjmp	.+0      	; 0x3b4 <loop335+0x1a>
     3b4:	00 c0       	rjmp	.+0      	; 0x3b6 <loop335+0x1c>
     3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <loop335+0x1e>
     3b8:	00 c0       	rjmp	.+0      	; 0x3ba <loop335+0x20>
     3ba:	97 ff       	sbrs	r25, 7
     3bc:	3b b9       	out	0x0b, r19	; 11
     3be:	99 0f       	add	r25, r25
     3c0:	00 00       	nop
     3c2:	00 c0       	rjmp	.+0      	; 0x3c4 <loop335+0x2a>
     3c4:	00 c0       	rjmp	.+0      	; 0x3c6 <loop335+0x2c>
     3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <loop335+0x2e>
     3c8:	00 c0       	rjmp	.+0      	; 0x3ca <loop335+0x30>
     3ca:	00 c0       	rjmp	.+0      	; 0x3cc <loop335+0x32>
     3cc:	00 c0       	rjmp	.+0      	; 0x3ce <loop335+0x34>
     3ce:	00 c0       	rjmp	.+0      	; 0x3d0 <loop335+0x36>
     3d0:	00 c0       	rjmp	.+0      	; 0x3d2 <loop335+0x38>
     3d2:	00 c0       	rjmp	.+0      	; 0x3d4 <loop335+0x3a>
     3d4:	00 c0       	rjmp	.+0      	; 0x3d6 <loop335+0x3c>
     3d6:	00 c0       	rjmp	.+0      	; 0x3d8 <loop335+0x3e>
     3d8:	00 c0       	rjmp	.+0      	; 0x3da <loop335+0x40>
     3da:	00 c0       	rjmp	.+0      	; 0x3dc <loop335+0x42>
     3dc:	00 c0       	rjmp	.+0      	; 0x3de <loop335+0x44>
     3de:	00 c0       	rjmp	.+0      	; 0x3e0 <loop335+0x46>
     3e0:	3b b9       	out	0x0b, r19	; 11
     3e2:	00 c0       	rjmp	.+0      	; 0x3e4 <loop335+0x4a>
     3e4:	00 c0       	rjmp	.+0      	; 0x3e6 <loop335+0x4c>
     3e6:	00 c0       	rjmp	.+0      	; 0x3e8 <loop335+0x4e>
     3e8:	00 c0       	rjmp	.+0      	; 0x3ea <loop335+0x50>
     3ea:	00 c0       	rjmp	.+0      	; 0x3ec <loop335+0x52>
     3ec:	00 c0       	rjmp	.+0      	; 0x3ee <loop335+0x54>
     3ee:	00 c0       	rjmp	.+0      	; 0x3f0 <loop335+0x56>
     3f0:	00 c0       	rjmp	.+0      	; 0x3f2 <loop335+0x58>
     3f2:	00 c0       	rjmp	.+0      	; 0x3f4 <loop335+0x5a>
     3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <loop335+0x5c>
     3f6:	00 c0       	rjmp	.+0      	; 0x3f8 <loop335+0x5e>
     3f8:	00 c0       	rjmp	.+0      	; 0x3fa <loop335+0x60>
     3fa:	00 c0       	rjmp	.+0      	; 0x3fc <loop335+0x62>
     3fc:	00 c0       	rjmp	.+0      	; 0x3fe <loop335+0x64>
     3fe:	8a 95       	dec	r24
     400:	61 f6       	brne	.-104    	; 0x39a <loop335>
     402:	8c 83       	std	Y+4, r24	; 0x04
  masklo	=~maskhi&ws2812_PORTREG;
  maskhi |=        ws2812_PORTREG;
  sreg_prev=SREG;
  cli();  

  while (datlen--) {
     404:	8f 81       	ldd	r24, Y+7	; 0x07
     406:	98 85       	ldd	r25, Y+8	; 0x08
     408:	9c 01       	movw	r18, r24
     40a:	21 50       	subi	r18, 0x01	; 1
     40c:	31 09       	sbc	r19, r1
     40e:	38 87       	std	Y+8, r19	; 0x08
     410:	2f 83       	std	Y+7, r18	; 0x07
     412:	89 2b       	or	r24, r25
     414:	09 f0       	breq	.+2      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     416:	b3 cf       	rjmp	.-154    	; 0x37e <ws2812_sendarray_mask+0x4c>
    :	"=&d" (ctr)
    :	"r" (curbyte), "I" (_SFR_IO_ADDR(ws2812_PORTREG)), "r" (maskhi), "r" (masklo)
    );
  }
  
  SREG=sreg_prev;
     418:	8f e5       	ldi	r24, 0x5F	; 95
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	2a 81       	ldd	r18, Y+2	; 0x02
     41e:	fc 01       	movw	r30, r24
     420:	20 83       	st	Z, r18
     422:	00 00       	nop
     424:	29 96       	adiw	r28, 0x09	; 9
     426:	0f b6       	in	r0, 0x3f	; 63
     428:	f8 94       	cli
     42a:	de bf       	out	0x3e, r29	; 62
     42c:	0f be       	out	0x3f, r0	; 63
     42e:	cd bf       	out	0x3d, r28	; 61
     430:	df 91       	pop	r29
     432:	cf 91       	pop	r28
     434:	08 95       	ret

00000436 <get_DIP_Switch>:
	}
	if ((x>300)&&(x<700)&&(y<700)&&(y>300))
	{
		return 0;
	}
}
     436:	cf 93       	push	r28
     438:	df 93       	push	r29
     43a:	00 d0       	rcall	.+0      	; 0x43c <get_DIP_Switch+0x6>
     43c:	1f 92       	push	r1
     43e:	cd b7       	in	r28, 0x3d	; 61
     440:	de b7       	in	r29, 0x3e	; 62
     442:	19 82       	std	Y+1, r1	; 0x01
     444:	82 e2       	ldi	r24, 0x22	; 34
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	22 e2       	ldi	r18, 0x22	; 34
     44a:	30 e0       	ldi	r19, 0x00	; 0
     44c:	f9 01       	movw	r30, r18
     44e:	20 81       	ld	r18, Z
     450:	20 62       	ori	r18, 0x20	; 32
     452:	fc 01       	movw	r30, r24
     454:	20 83       	st	Z, r18
     456:	82 e2       	ldi	r24, 0x22	; 34
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	22 e2       	ldi	r18, 0x22	; 34
     45c:	30 e0       	ldi	r19, 0x00	; 0
     45e:	f9 01       	movw	r30, r18
     460:	20 81       	ld	r18, Z
     462:	2f 7d       	andi	r18, 0xDF	; 223
     464:	fc 01       	movw	r30, r24
     466:	20 83       	st	Z, r18
     468:	82 e2       	ldi	r24, 0x22	; 34
     46a:	90 e0       	ldi	r25, 0x00	; 0
     46c:	22 e2       	ldi	r18, 0x22	; 34
     46e:	30 e0       	ldi	r19, 0x00	; 0
     470:	f9 01       	movw	r30, r18
     472:	20 81       	ld	r18, Z
     474:	20 62       	ori	r18, 0x20	; 32
     476:	fc 01       	movw	r30, r24
     478:	20 83       	st	Z, r18
     47a:	87 e0       	ldi	r24, 0x07	; 7
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	9b 83       	std	Y+3, r25	; 0x03
     480:	8a 83       	std	Y+2, r24	; 0x02
     482:	30 c0       	rjmp	.+96     	; 0x4e4 <get_DIP_Switch+0xae>
     484:	80 e2       	ldi	r24, 0x20	; 32
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	fc 01       	movw	r30, r24
     48a:	80 81       	ld	r24, Z
     48c:	88 2f       	mov	r24, r24
     48e:	90 e0       	ldi	r25, 0x00	; 0
     490:	80 78       	andi	r24, 0x80	; 128
     492:	99 27       	eor	r25, r25
     494:	47 e0       	ldi	r20, 0x07	; 7
     496:	50 e0       	ldi	r21, 0x00	; 0
     498:	2a 81       	ldd	r18, Y+2	; 0x02
     49a:	3b 81       	ldd	r19, Y+3	; 0x03
     49c:	ba 01       	movw	r22, r20
     49e:	62 1b       	sub	r22, r18
     4a0:	73 0b       	sbc	r23, r19
     4a2:	9b 01       	movw	r18, r22
     4a4:	02 c0       	rjmp	.+4      	; 0x4aa <get_DIP_Switch+0x74>
     4a6:	95 95       	asr	r25
     4a8:	87 95       	ror	r24
     4aa:	2a 95       	dec	r18
     4ac:	e2 f7       	brpl	.-8      	; 0x4a6 <get_DIP_Switch+0x70>
     4ae:	98 2f       	mov	r25, r24
     4b0:	89 81       	ldd	r24, Y+1	; 0x01
     4b2:	89 2b       	or	r24, r25
     4b4:	89 83       	std	Y+1, r24	; 0x01
     4b6:	82 e2       	ldi	r24, 0x22	; 34
     4b8:	90 e0       	ldi	r25, 0x00	; 0
     4ba:	22 e2       	ldi	r18, 0x22	; 34
     4bc:	30 e0       	ldi	r19, 0x00	; 0
     4be:	f9 01       	movw	r30, r18
     4c0:	20 81       	ld	r18, Z
     4c2:	2f 7b       	andi	r18, 0xBF	; 191
     4c4:	fc 01       	movw	r30, r24
     4c6:	20 83       	st	Z, r18
     4c8:	82 e2       	ldi	r24, 0x22	; 34
     4ca:	90 e0       	ldi	r25, 0x00	; 0
     4cc:	22 e2       	ldi	r18, 0x22	; 34
     4ce:	30 e0       	ldi	r19, 0x00	; 0
     4d0:	f9 01       	movw	r30, r18
     4d2:	20 81       	ld	r18, Z
     4d4:	20 64       	ori	r18, 0x40	; 64
     4d6:	fc 01       	movw	r30, r24
     4d8:	20 83       	st	Z, r18
     4da:	8a 81       	ldd	r24, Y+2	; 0x02
     4dc:	9b 81       	ldd	r25, Y+3	; 0x03
     4de:	01 97       	sbiw	r24, 0x01	; 1
     4e0:	9b 83       	std	Y+3, r25	; 0x03
     4e2:	8a 83       	std	Y+2, r24	; 0x02
     4e4:	8a 81       	ldd	r24, Y+2	; 0x02
     4e6:	9b 81       	ldd	r25, Y+3	; 0x03
     4e8:	99 23       	and	r25, r25
     4ea:	64 f6       	brge	.-104    	; 0x484 <get_DIP_Switch+0x4e>
     4ec:	89 81       	ldd	r24, Y+1	; 0x01
     4ee:	0f 90       	pop	r0
     4f0:	0f 90       	pop	r0
     4f2:	0f 90       	pop	r0
     4f4:	df 91       	pop	r29
     4f6:	cf 91       	pop	r28
     4f8:	08 95       	ret

000004fa <get_LCD_Taster>:
     4fa:	cf 93       	push	r28
     4fc:	df 93       	push	r29
     4fe:	1f 92       	push	r1
     500:	cd b7       	in	r28, 0x3d	; 61
     502:	de b7       	in	r29, 0x3e	; 62
     504:	85 e2       	ldi	r24, 0x25	; 37
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	25 e2       	ldi	r18, 0x25	; 37
     50a:	30 e0       	ldi	r19, 0x00	; 0
     50c:	f9 01       	movw	r30, r18
     50e:	20 81       	ld	r18, Z
     510:	20 7f       	andi	r18, 0xF0	; 240
     512:	fc 01       	movw	r30, r24
     514:	20 83       	st	Z, r18
     516:	84 e2       	ldi	r24, 0x24	; 36
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	20 ef       	ldi	r18, 0xF0	; 240
     51c:	fc 01       	movw	r30, r24
     51e:	20 83       	st	Z, r18
	...
     534:	83 e2       	ldi	r24, 0x23	; 35
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	fc 01       	movw	r30, r24
     53a:	80 81       	ld	r24, Z
     53c:	8f 70       	andi	r24, 0x0F	; 15
     53e:	89 83       	std	Y+1, r24	; 0x01
     540:	84 e2       	ldi	r24, 0x24	; 36
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	2f ef       	ldi	r18, 0xFF	; 255
     546:	fc 01       	movw	r30, r24
     548:	20 83       	st	Z, r18
     54a:	89 81       	ldd	r24, Y+1	; 0x01
     54c:	0f 90       	pop	r0
     54e:	df 91       	pop	r29
     550:	cf 91       	pop	r28
     552:	08 95       	ret

00000554 <init_ADC>:
     554:	cf 93       	push	r28
     556:	df 93       	push	r29
     558:	cd b7       	in	r28, 0x3d	; 61
     55a:	de b7       	in	r29, 0x3e	; 62
     55c:	8a e7       	ldi	r24, 0x7A	; 122
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	2a e7       	ldi	r18, 0x7A	; 122
     562:	30 e0       	ldi	r19, 0x00	; 0
     564:	f9 01       	movw	r30, r18
     566:	20 81       	ld	r18, Z
     568:	20 68       	ori	r18, 0x80	; 128
     56a:	fc 01       	movw	r30, r24
     56c:	20 83       	st	Z, r18
     56e:	8c e7       	ldi	r24, 0x7C	; 124
     570:	90 e0       	ldi	r25, 0x00	; 0
     572:	2c e7       	ldi	r18, 0x7C	; 124
     574:	30 e0       	ldi	r19, 0x00	; 0
     576:	f9 01       	movw	r30, r18
     578:	20 81       	ld	r18, Z
     57a:	20 64       	ori	r18, 0x40	; 64
     57c:	fc 01       	movw	r30, r24
     57e:	20 83       	st	Z, r18
     580:	8a e7       	ldi	r24, 0x7A	; 122
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	2a e7       	ldi	r18, 0x7A	; 122
     586:	30 e0       	ldi	r19, 0x00	; 0
     588:	f9 01       	movw	r30, r18
     58a:	20 81       	ld	r18, Z
     58c:	27 60       	ori	r18, 0x07	; 7
     58e:	fc 01       	movw	r30, r24
     590:	20 83       	st	Z, r18
     592:	00 00       	nop
     594:	df 91       	pop	r29
     596:	cf 91       	pop	r28
     598:	08 95       	ret

0000059a <init_UART0>:
     59a:	cf 93       	push	r28
     59c:	df 93       	push	r29
     59e:	cd b7       	in	r28, 0x3d	; 61
     5a0:	de b7       	in	r29, 0x3e	; 62
     5a2:	84 ec       	ldi	r24, 0xC4	; 196
     5a4:	90 e0       	ldi	r25, 0x00	; 0
     5a6:	20 e1       	ldi	r18, 0x10	; 16
     5a8:	30 e0       	ldi	r19, 0x00	; 0
     5aa:	fc 01       	movw	r30, r24
     5ac:	31 83       	std	Z+1, r19	; 0x01
     5ae:	20 83       	st	Z, r18
     5b0:	80 ec       	ldi	r24, 0xC0	; 192
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	20 ec       	ldi	r18, 0xC0	; 192
     5b6:	30 e0       	ldi	r19, 0x00	; 0
     5b8:	f9 01       	movw	r30, r18
     5ba:	20 81       	ld	r18, Z
     5bc:	22 60       	ori	r18, 0x02	; 2
     5be:	fc 01       	movw	r30, r24
     5c0:	20 83       	st	Z, r18
     5c2:	81 ec       	ldi	r24, 0xC1	; 193
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	21 ec       	ldi	r18, 0xC1	; 193
     5c8:	30 e0       	ldi	r19, 0x00	; 0
     5ca:	f9 01       	movw	r30, r18
     5cc:	20 81       	ld	r18, Z
     5ce:	28 69       	ori	r18, 0x98	; 152
     5d0:	fc 01       	movw	r30, r24
     5d2:	20 83       	st	Z, r18
     5d4:	00 00       	nop
     5d6:	df 91       	pop	r29
     5d8:	cf 91       	pop	r28
     5da:	08 95       	ret

000005dc <init_UART1>:
     5dc:	cf 93       	push	r28
     5de:	df 93       	push	r29
     5e0:	cd b7       	in	r28, 0x3d	; 61
     5e2:	de b7       	in	r29, 0x3e	; 62
     5e4:	8c ec       	ldi	r24, 0xCC	; 204
     5e6:	90 e0       	ldi	r25, 0x00	; 0
     5e8:	20 e1       	ldi	r18, 0x10	; 16
     5ea:	30 e0       	ldi	r19, 0x00	; 0
     5ec:	fc 01       	movw	r30, r24
     5ee:	31 83       	std	Z+1, r19	; 0x01
     5f0:	20 83       	st	Z, r18
     5f2:	88 ec       	ldi	r24, 0xC8	; 200
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	28 ec       	ldi	r18, 0xC8	; 200
     5f8:	30 e0       	ldi	r19, 0x00	; 0
     5fa:	f9 01       	movw	r30, r18
     5fc:	20 81       	ld	r18, Z
     5fe:	22 60       	ori	r18, 0x02	; 2
     600:	fc 01       	movw	r30, r24
     602:	20 83       	st	Z, r18
     604:	89 ec       	ldi	r24, 0xC9	; 201
     606:	90 e0       	ldi	r25, 0x00	; 0
     608:	29 ec       	ldi	r18, 0xC9	; 201
     60a:	30 e0       	ldi	r19, 0x00	; 0
     60c:	f9 01       	movw	r30, r18
     60e:	20 81       	ld	r18, Z
     610:	28 69       	ori	r18, 0x98	; 152
     612:	fc 01       	movw	r30, r24
     614:	20 83       	st	Z, r18
     616:	00 00       	nop
     618:	df 91       	pop	r29
     61a:	cf 91       	pop	r28
     61c:	08 95       	ret

0000061e <send_Byte_0>:
     61e:	cf 93       	push	r28
     620:	df 93       	push	r29
     622:	1f 92       	push	r1
     624:	cd b7       	in	r28, 0x3d	; 61
     626:	de b7       	in	r29, 0x3e	; 62
     628:	89 83       	std	Y+1, r24	; 0x01
     62a:	00 00       	nop
     62c:	80 ec       	ldi	r24, 0xC0	; 192
     62e:	90 e0       	ldi	r25, 0x00	; 0
     630:	fc 01       	movw	r30, r24
     632:	80 81       	ld	r24, Z
     634:	88 2f       	mov	r24, r24
     636:	90 e0       	ldi	r25, 0x00	; 0
     638:	80 72       	andi	r24, 0x20	; 32
     63a:	99 27       	eor	r25, r25
     63c:	89 2b       	or	r24, r25
     63e:	b1 f3       	breq	.-20     	; 0x62c <send_Byte_0+0xe>
     640:	86 ec       	ldi	r24, 0xC6	; 198
     642:	90 e0       	ldi	r25, 0x00	; 0
     644:	29 81       	ldd	r18, Y+1	; 0x01
     646:	fc 01       	movw	r30, r24
     648:	20 83       	st	Z, r18
     64a:	00 00       	nop
     64c:	0f 90       	pop	r0
     64e:	df 91       	pop	r29
     650:	cf 91       	pop	r28
     652:	08 95       	ret

00000654 <send_Byte_1>:
     654:	cf 93       	push	r28
     656:	df 93       	push	r29
     658:	1f 92       	push	r1
     65a:	cd b7       	in	r28, 0x3d	; 61
     65c:	de b7       	in	r29, 0x3e	; 62
     65e:	89 83       	std	Y+1, r24	; 0x01
     660:	00 00       	nop
     662:	88 ec       	ldi	r24, 0xC8	; 200
     664:	90 e0       	ldi	r25, 0x00	; 0
     666:	fc 01       	movw	r30, r24
     668:	80 81       	ld	r24, Z
     66a:	88 2f       	mov	r24, r24
     66c:	90 e0       	ldi	r25, 0x00	; 0
     66e:	80 72       	andi	r24, 0x20	; 32
     670:	99 27       	eor	r25, r25
     672:	89 2b       	or	r24, r25
     674:	b1 f3       	breq	.-20     	; 0x662 <send_Byte_1+0xe>
     676:	8e ec       	ldi	r24, 0xCE	; 206
     678:	90 e0       	ldi	r25, 0x00	; 0
     67a:	29 81       	ldd	r18, Y+1	; 0x01
     67c:	fc 01       	movw	r30, r24
     67e:	20 83       	st	Z, r18
     680:	00 00       	nop
     682:	0f 90       	pop	r0
     684:	df 91       	pop	r29
     686:	cf 91       	pop	r28
     688:	08 95       	ret

0000068a <to_uARM>:
     68a:	cf 93       	push	r28
     68c:	df 93       	push	r29
     68e:	00 d0       	rcall	.+0      	; 0x690 <to_uARM+0x6>
     690:	cd b7       	in	r28, 0x3d	; 61
     692:	de b7       	in	r29, 0x3e	; 62
     694:	9a 83       	std	Y+2, r25	; 0x02
     696:	89 83       	std	Y+1, r24	; 0x01
     698:	0b c0       	rjmp	.+22     	; 0x6b0 <to_uARM+0x26>
     69a:	89 81       	ldd	r24, Y+1	; 0x01
     69c:	9a 81       	ldd	r25, Y+2	; 0x02
     69e:	fc 01       	movw	r30, r24
     6a0:	80 81       	ld	r24, Z
     6a2:	0e 94 2a 03 	call	0x654	; 0x654 <send_Byte_1>
     6a6:	89 81       	ldd	r24, Y+1	; 0x01
     6a8:	9a 81       	ldd	r25, Y+2	; 0x02
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	9a 83       	std	Y+2, r25	; 0x02
     6ae:	89 83       	std	Y+1, r24	; 0x01
     6b0:	89 81       	ldd	r24, Y+1	; 0x01
     6b2:	9a 81       	ldd	r25, Y+2	; 0x02
     6b4:	fc 01       	movw	r30, r24
     6b6:	80 81       	ld	r24, Z
     6b8:	88 23       	and	r24, r24
     6ba:	79 f7       	brne	.-34     	; 0x69a <to_uARM+0x10>
     6bc:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <uart_str_complete1>
     6c0:	00 00       	nop
     6c2:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <uart_str_complete1>
     6c6:	88 23       	and	r24, r24
     6c8:	e1 f3       	breq	.-8      	; 0x6c2 <to_uARM+0x38>
     6ca:	00 00       	nop
     6cc:	0f 90       	pop	r0
     6ce:	0f 90       	pop	r0
     6d0:	df 91       	pop	r29
     6d2:	cf 91       	pop	r28
     6d4:	08 95       	ret

000006d6 <send_to_uArm>:
     6d6:	cf 93       	push	r28
     6d8:	df 93       	push	r29
     6da:	00 d0       	rcall	.+0      	; 0x6dc <send_to_uArm+0x6>
     6dc:	cd b7       	in	r28, 0x3d	; 61
     6de:	de b7       	in	r29, 0x3e	; 62
     6e0:	9a 83       	std	Y+2, r25	; 0x02
     6e2:	89 83       	std	Y+1, r24	; 0x01
     6e4:	89 81       	ldd	r24, Y+1	; 0x01
     6e6:	9a 81       	ldd	r25, Y+2	; 0x02
     6e8:	0e 94 45 03 	call	0x68a	; 0x68a <to_uARM>
     6ec:	80 e0       	ldi	r24, 0x00	; 0
     6ee:	91 e0       	ldi	r25, 0x01	; 1
     6f0:	0e 94 45 03 	call	0x68a	; 0x68a <to_uARM>
     6f4:	04 c0       	rjmp	.+8      	; 0x6fe <send_to_uArm+0x28>
     6f6:	80 e0       	ldi	r24, 0x00	; 0
     6f8:	91 e0       	ldi	r25, 0x01	; 1
     6fa:	0e 94 45 03 	call	0x68a	; 0x68a <to_uARM>
     6fe:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <uart_string1+0x4>
     702:	81 33       	cpi	r24, 0x31	; 49
     704:	c1 f3       	breq	.-16     	; 0x6f6 <send_to_uArm+0x20>
     706:	00 00       	nop
     708:	0f 90       	pop	r0
     70a:	0f 90       	pop	r0
     70c:	df 91       	pop	r29
     70e:	cf 91       	pop	r28
     710:	08 95       	ret

00000712 <__vector_20>:
     712:	1f 92       	push	r1
     714:	0f 92       	push	r0
     716:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     71a:	0f 92       	push	r0
     71c:	11 24       	eor	r1, r1
     71e:	2f 93       	push	r18
     720:	3f 93       	push	r19
     722:	8f 93       	push	r24
     724:	9f 93       	push	r25
     726:	ef 93       	push	r30
     728:	ff 93       	push	r31
     72a:	cf 93       	push	r28
     72c:	df 93       	push	r29
     72e:	00 d0       	rcall	.+0      	; 0x730 <__vector_20+0x1e>
     730:	1f 92       	push	r1
     732:	cd b7       	in	r28, 0x3d	; 61
     734:	de b7       	in	r29, 0x3e	; 62
     736:	1a 82       	std	Y+2, r1	; 0x02
     738:	86 ec       	ldi	r24, 0xC6	; 198
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	fc 01       	movw	r30, r24
     73e:	80 81       	ld	r24, Z
     740:	8b 83       	std	Y+3, r24	; 0x03
     742:	8b 81       	ldd	r24, Y+3	; 0x03
     744:	8a 30       	cpi	r24, 0x0A	; 10
     746:	99 f0       	breq	.+38     	; 0x76e <__vector_20+0x5c>
     748:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <uart_str_count1>
     74c:	82 33       	cpi	r24, 0x32	; 50
     74e:	78 f4       	brcc	.+30     	; 0x76e <__vector_20+0x5c>
     750:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <data_bytes_recieved>
     754:	88 2f       	mov	r24, r24
     756:	90 e0       	ldi	r25, 0x00	; 0
     758:	8d 53       	subi	r24, 0x3D	; 61
     75a:	9d 4f       	sbci	r25, 0xFD	; 253
     75c:	2b 81       	ldd	r18, Y+3	; 0x03
     75e:	fc 01       	movw	r30, r24
     760:	20 83       	st	Z, r18
     762:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <data_bytes_recieved>
     766:	8f 5f       	subi	r24, 0xFF	; 255
     768:	80 93 35 02 	sts	0x0235, r24	; 0x800235 <data_bytes_recieved>
     76c:	1b c0       	rjmp	.+54     	; 0x7a4 <__vector_20+0x92>
     76e:	19 82       	std	Y+1, r1	; 0x01
     770:	11 c0       	rjmp	.+34     	; 0x794 <__vector_20+0x82>
     772:	89 81       	ldd	r24, Y+1	; 0x01
     774:	88 2f       	mov	r24, r24
     776:	90 e0       	ldi	r25, 0x00	; 0
     778:	29 81       	ldd	r18, Y+1	; 0x01
     77a:	22 2f       	mov	r18, r18
     77c:	30 e0       	ldi	r19, 0x00	; 0
     77e:	2d 53       	subi	r18, 0x3D	; 61
     780:	3d 4f       	sbci	r19, 0xFD	; 253
     782:	f9 01       	movw	r30, r18
     784:	20 81       	ld	r18, Z
     786:	8f 52       	subi	r24, 0x2F	; 47
     788:	9d 4f       	sbci	r25, 0xFD	; 253
     78a:	fc 01       	movw	r30, r24
     78c:	20 83       	st	Z, r18
     78e:	89 81       	ldd	r24, Y+1	; 0x01
     790:	8f 5f       	subi	r24, 0xFF	; 255
     792:	89 83       	std	Y+1, r24	; 0x01
     794:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <data_bytes_recieved>
     798:	99 81       	ldd	r25, Y+1	; 0x01
     79a:	89 17       	cp	r24, r25
     79c:	50 f7       	brcc	.-44     	; 0x772 <__vector_20+0x60>
     79e:	81 e0       	ldi	r24, 0x01	; 1
     7a0:	80 93 33 02 	sts	0x0233, r24	; 0x800233 <uart_str_complete>
     7a4:	00 00       	nop
     7a6:	0f 90       	pop	r0
     7a8:	0f 90       	pop	r0
     7aa:	0f 90       	pop	r0
     7ac:	df 91       	pop	r29
     7ae:	cf 91       	pop	r28
     7b0:	ff 91       	pop	r31
     7b2:	ef 91       	pop	r30
     7b4:	9f 91       	pop	r25
     7b6:	8f 91       	pop	r24
     7b8:	3f 91       	pop	r19
     7ba:	2f 91       	pop	r18
     7bc:	0f 90       	pop	r0
     7be:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     7c2:	0f 90       	pop	r0
     7c4:	1f 90       	pop	r1
     7c6:	18 95       	reti

000007c8 <__vector_28>:
     7c8:	1f 92       	push	r1
     7ca:	0f 92       	push	r0
     7cc:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     7d0:	0f 92       	push	r0
     7d2:	11 24       	eor	r1, r1
     7d4:	2f 93       	push	r18
     7d6:	8f 93       	push	r24
     7d8:	9f 93       	push	r25
     7da:	ef 93       	push	r30
     7dc:	ff 93       	push	r31
     7de:	cf 93       	push	r28
     7e0:	df 93       	push	r29
     7e2:	1f 92       	push	r1
     7e4:	cd b7       	in	r28, 0x3d	; 61
     7e6:	de b7       	in	r29, 0x3e	; 62
     7e8:	8e ec       	ldi	r24, 0xCE	; 206
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	fc 01       	movw	r30, r24
     7ee:	80 81       	ld	r24, Z
     7f0:	89 83       	std	Y+1, r24	; 0x01
     7f2:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <uart_str_complete1>
     7f6:	88 23       	and	r24, r24
     7f8:	31 f5       	brne	.+76     	; 0x846 <__vector_28+0x7e>
     7fa:	89 81       	ldd	r24, Y+1	; 0x01
     7fc:	8a 30       	cpi	r24, 0x0A	; 10
     7fe:	b1 f0       	breq	.+44     	; 0x82c <__vector_28+0x64>
     800:	89 81       	ldd	r24, Y+1	; 0x01
     802:	8d 30       	cpi	r24, 0x0D	; 13
     804:	99 f0       	breq	.+38     	; 0x82c <__vector_28+0x64>
     806:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <uart_str_count1>
     80a:	82 33       	cpi	r24, 0x32	; 50
     80c:	78 f4       	brcc	.+30     	; 0x82c <__vector_28+0x64>
     80e:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <uart_str_count1>
     812:	88 2f       	mov	r24, r24
     814:	90 e0       	ldi	r25, 0x00	; 0
     816:	89 5c       	subi	r24, 0xC9	; 201
     818:	9d 4f       	sbci	r25, 0xFD	; 253
     81a:	29 81       	ldd	r18, Y+1	; 0x01
     81c:	fc 01       	movw	r30, r24
     81e:	20 83       	st	Z, r18
     820:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <uart_str_count1>
     824:	8f 5f       	subi	r24, 0xFF	; 255
     826:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <uart_str_count1>
     82a:	0d c0       	rjmp	.+26     	; 0x846 <__vector_28+0x7e>
     82c:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <uart_str_count1>
     830:	88 2f       	mov	r24, r24
     832:	90 e0       	ldi	r25, 0x00	; 0
     834:	89 5c       	subi	r24, 0xC9	; 201
     836:	9d 4f       	sbci	r25, 0xFD	; 253
     838:	fc 01       	movw	r30, r24
     83a:	10 82       	st	Z, r1
     83c:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <uart_str_count1>
     840:	81 e0       	ldi	r24, 0x01	; 1
     842:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <uart_str_complete1>
     846:	00 00       	nop
     848:	0f 90       	pop	r0
     84a:	df 91       	pop	r29
     84c:	cf 91       	pop	r28
     84e:	ff 91       	pop	r31
     850:	ef 91       	pop	r30
     852:	9f 91       	pop	r25
     854:	8f 91       	pop	r24
     856:	2f 91       	pop	r18
     858:	0f 90       	pop	r0
     85a:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     85e:	0f 90       	pop	r0
     860:	1f 90       	pop	r1
     862:	18 95       	reti

00000864 <start_up_routine>:

void start_up_routine ()
{
     864:	cf 93       	push	r28
     866:	df 93       	push	r29
     868:	cd b7       	in	r28, 0x3d	; 61
     86a:	de b7       	in	r29, 0x3e	; 62
	init_BT_CAR_V2_0();			// Das Board wird hier initialisiert
     86c:	0e 94 d6 0f 	call	0x1fac	; 0x1fac <init_BT_CAR_V2_0>
	wait_1ms(1000);
     870:	68 ee       	ldi	r22, 0xE8	; 232
     872:	73 e0       	ldi	r23, 0x03	; 3
     874:	80 e0       	ldi	r24, 0x00	; 0
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <wait_1ms>
	init_ADC();
     87c:	0e 94 aa 02 	call	0x554	; 0x554 <init_ADC>
	init_UART0();
     880:	0e 94 cd 02 	call	0x59a	; 0x59a <init_UART0>
	init_UART1();
     884:	0e 94 ee 02 	call	0x5dc	; 0x5dc <init_UART1>
	wait_1ms(1000);
     888:	68 ee       	ldi	r22, 0xE8	; 232
     88a:	73 e0       	ldi	r23, 0x03	; 3
     88c:	80 e0       	ldi	r24, 0x00	; 0
     88e:	90 e0       	ldi	r25, 0x00	; 0
     890:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <wait_1ms>
	//while (final_data[0]!='D')
	//{
	//	to_pc('R');
	//}
	
}
     894:	00 00       	nop
     896:	df 91       	pop	r29
     898:	cf 91       	pop	r28
     89a:	08 95       	ret

0000089c <main>:

int main (void)
{
     89c:	cf 92       	push	r12
     89e:	ef 92       	push	r14
     8a0:	0f 93       	push	r16
     8a2:	1f 93       	push	r17
     8a4:	cf 93       	push	r28
     8a6:	df 93       	push	r29
     8a8:	cd b7       	in	r28, 0x3d	; 61
     8aa:	de b7       	in	r29, 0x3e	; 62
     8ac:	ca 50       	subi	r28, 0x0A	; 10
     8ae:	d1 40       	sbci	r29, 0x01	; 1
     8b0:	0f b6       	in	r0, 0x3f	; 63
     8b2:	f8 94       	cli
     8b4:	de bf       	out	0x3e, r29	; 62
     8b6:	0f be       	out	0x3f, r0	; 63
     8b8:	cd bf       	out	0x3d, r28	; 61
	start_up_routine();
     8ba:	0e 94 32 04 	call	0x864	; 0x864 <start_up_routine>
	unsigned char taster;
	unsigned char direction;
	int recieved_X; 
	int recieved_Y;
	int Z=-20;
     8be:	8c ee       	ldi	r24, 0xEC	; 236
     8c0:	9f ef       	ldi	r25, 0xFF	; 255
     8c2:	99 87       	std	Y+9, r25	; 0x09
     8c4:	88 87       	std	Y+8, r24	; 0x08
	unsigned char buffer [30];
	unsigned char check=0;
     8c6:	1d 82       	std	Y+5, r1	; 0x05
	unsigned char counter=0;
     8c8:	1e 82       	std	Y+6, r1	; 0x06
	unsigned char routine_done=0;
     8ca:	1f 82       	std	Y+7, r1	; 0x07
	unsigned int sound[14]={262,277,294,311,330,349,370,392,415,440,466,494,523,0};
     8cc:	ce 01       	movw	r24, r28
     8ce:	87 55       	subi	r24, 0x57	; 87
     8d0:	9f 4f       	sbci	r25, 0xFF	; 255
     8d2:	2c e1       	ldi	r18, 0x1C	; 28
     8d4:	e3 ee       	ldi	r30, 0xE3	; 227
     8d6:	f1 e0       	ldi	r31, 0x01	; 1
     8d8:	dc 01       	movw	r26, r24
     8da:	01 90       	ld	r0, Z+
     8dc:	0d 92       	st	X+, r0
     8de:	2a 95       	dec	r18
     8e0:	e1 f7       	brne	.-8      	; 0x8da <main+0x3e>
	unsigned char music[50]={0,0,2,2,0,0,5,5,4,4,4,4,0,0,2,2,0,0,7,7,5,5,5,5,0,0,12,12,9,9,5,5,4,4,2,2,10,10,9,9,5,5,7,7,5,5,5,5,5,5};
     8e2:	ce 01       	movw	r24, r28
     8e4:	8b 53       	subi	r24, 0x3B	; 59
     8e6:	9f 4f       	sbci	r25, 0xFF	; 255
     8e8:	22 e3       	ldi	r18, 0x32	; 50
     8ea:	ef ef       	ldi	r30, 0xFF	; 255
     8ec:	f1 e0       	ldi	r31, 0x01	; 1
     8ee:	dc 01       	movw	r26, r24
     8f0:	01 90       	ld	r0, Z+
     8f2:	0d 92       	st	X+, r0
     8f4:	2a 95       	dec	r18
     8f6:	e1 f7       	brne	.-8      	; 0x8f0 <main+0x54>
	unsigned char sound_buffer[20];
	unsigned int tone;
	unsigned char start=0;
     8f8:	1a 86       	std	Y+10, r1	; 0x0a
	unsigned char head=0;
     8fa:	1b 86       	std	Y+11, r1	; 0x0b
	unsigned int d;
	clear_lcd();
     8fc:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <clear_lcd>
	
	to_uARM("M2210 F500 T20\n");
     900:	8e e5       	ldi	r24, 0x5E	; 94
     902:	91 e0       	ldi	r25, 0x01	; 1
     904:	0e 94 45 03 	call	0x68a	; 0x68a <to_uARM>
     908:	80 e0       	ldi	r24, 0x00	; 0
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	a8 ec       	ldi	r26, 0xC8	; 200
     90e:	b2 e4       	ldi	r27, 0x42	; 66
     910:	8d a7       	std	Y+45, r24	; 0x2d
     912:	9e a7       	std	Y+46, r25	; 0x2e
     914:	af a7       	std	Y+47, r26	; 0x2f
     916:	b8 ab       	std	Y+48, r27	; 0x30

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     918:	20 e0       	ldi	r18, 0x00	; 0
     91a:	30 e0       	ldi	r19, 0x00	; 0
     91c:	4a e7       	ldi	r20, 0x7A	; 122
     91e:	55 e4       	ldi	r21, 0x45	; 69
     920:	6d a5       	ldd	r22, Y+45	; 0x2d
     922:	7e a5       	ldd	r23, Y+46	; 0x2e
     924:	8f a5       	ldd	r24, Y+47	; 0x2f
     926:	98 a9       	ldd	r25, Y+48	; 0x30
     928:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
     92c:	dc 01       	movw	r26, r24
     92e:	cb 01       	movw	r24, r22
     930:	89 ab       	std	Y+49, r24	; 0x31
     932:	9a ab       	std	Y+50, r25	; 0x32
     934:	ab ab       	std	Y+51, r26	; 0x33
     936:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     938:	20 e0       	ldi	r18, 0x00	; 0
     93a:	30 e0       	ldi	r19, 0x00	; 0
     93c:	40 e8       	ldi	r20, 0x80	; 128
     93e:	5f e3       	ldi	r21, 0x3F	; 63
     940:	69 a9       	ldd	r22, Y+49	; 0x31
     942:	7a a9       	ldd	r23, Y+50	; 0x32
     944:	8b a9       	ldd	r24, Y+51	; 0x33
     946:	9c a9       	ldd	r25, Y+52	; 0x34
     948:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <__cmpsf2>
     94c:	88 23       	and	r24, r24
     94e:	2c f4       	brge	.+10     	; 0x95a <main+0xbe>
		__ticks = 1;
     950:	81 e0       	ldi	r24, 0x01	; 1
     952:	90 e0       	ldi	r25, 0x00	; 0
     954:	9e ab       	std	Y+54, r25	; 0x36
     956:	8d ab       	std	Y+53, r24	; 0x35
     958:	3f c0       	rjmp	.+126    	; 0x9d8 <main+0x13c>
	else if (__tmp > 65535)
     95a:	20 e0       	ldi	r18, 0x00	; 0
     95c:	3f ef       	ldi	r19, 0xFF	; 255
     95e:	4f e7       	ldi	r20, 0x7F	; 127
     960:	57 e4       	ldi	r21, 0x47	; 71
     962:	69 a9       	ldd	r22, Y+49	; 0x31
     964:	7a a9       	ldd	r23, Y+50	; 0x32
     966:	8b a9       	ldd	r24, Y+51	; 0x33
     968:	9c a9       	ldd	r25, Y+52	; 0x34
     96a:	0e 94 0f 11 	call	0x221e	; 0x221e <__gesf2>
     96e:	18 16       	cp	r1, r24
     970:	4c f5       	brge	.+82     	; 0x9c4 <main+0x128>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     972:	20 e0       	ldi	r18, 0x00	; 0
     974:	30 e0       	ldi	r19, 0x00	; 0
     976:	40 e2       	ldi	r20, 0x20	; 32
     978:	51 e4       	ldi	r21, 0x41	; 65
     97a:	6d a5       	ldd	r22, Y+45	; 0x2d
     97c:	7e a5       	ldd	r23, Y+46	; 0x2e
     97e:	8f a5       	ldd	r24, Y+47	; 0x2f
     980:	98 a9       	ldd	r25, Y+48	; 0x30
     982:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
     986:	dc 01       	movw	r26, r24
     988:	cb 01       	movw	r24, r22
     98a:	bc 01       	movw	r22, r24
     98c:	cd 01       	movw	r24, r26
     98e:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
     992:	dc 01       	movw	r26, r24
     994:	cb 01       	movw	r24, r22
     996:	9e ab       	std	Y+54, r25	; 0x36
     998:	8d ab       	std	Y+53, r24	; 0x35
     99a:	0f c0       	rjmp	.+30     	; 0x9ba <main+0x11e>
     99c:	80 e9       	ldi	r24, 0x90	; 144
     99e:	91 e0       	ldi	r25, 0x01	; 1
     9a0:	98 af       	std	Y+56, r25	; 0x38
     9a2:	8f ab       	std	Y+55, r24	; 0x37
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     9a4:	8f a9       	ldd	r24, Y+55	; 0x37
     9a6:	98 ad       	ldd	r25, Y+56	; 0x38
     9a8:	01 97       	sbiw	r24, 0x01	; 1
     9aa:	f1 f7       	brne	.-4      	; 0x9a8 <main+0x10c>
     9ac:	98 af       	std	Y+56, r25	; 0x38
     9ae:	8f ab       	std	Y+55, r24	; 0x37
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9b0:	8d a9       	ldd	r24, Y+53	; 0x35
     9b2:	9e a9       	ldd	r25, Y+54	; 0x36
     9b4:	01 97       	sbiw	r24, 0x01	; 1
     9b6:	9e ab       	std	Y+54, r25	; 0x36
     9b8:	8d ab       	std	Y+53, r24	; 0x35
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9ba:	8d a9       	ldd	r24, Y+53	; 0x35
     9bc:	9e a9       	ldd	r25, Y+54	; 0x36
     9be:	89 2b       	or	r24, r25
     9c0:	69 f7       	brne	.-38     	; 0x99c <main+0x100>
     9c2:	14 c0       	rjmp	.+40     	; 0x9ec <main+0x150>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     9c4:	69 a9       	ldd	r22, Y+49	; 0x31
     9c6:	7a a9       	ldd	r23, Y+50	; 0x32
     9c8:	8b a9       	ldd	r24, Y+51	; 0x33
     9ca:	9c a9       	ldd	r25, Y+52	; 0x34
     9cc:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
     9d0:	dc 01       	movw	r26, r24
     9d2:	cb 01       	movw	r24, r22
     9d4:	9e ab       	std	Y+54, r25	; 0x36
     9d6:	8d ab       	std	Y+53, r24	; 0x35
     9d8:	8d a9       	ldd	r24, Y+53	; 0x35
     9da:	9e a9       	ldd	r25, Y+54	; 0x36
     9dc:	9a af       	std	Y+58, r25	; 0x3a
     9de:	89 af       	std	Y+57, r24	; 0x39
     9e0:	89 ad       	ldd	r24, Y+57	; 0x39
     9e2:	9a ad       	ldd	r25, Y+58	; 0x3a
     9e4:	01 97       	sbiw	r24, 0x01	; 1
     9e6:	f1 f7       	brne	.-4      	; 0x9e4 <main+0x148>
     9e8:	9a af       	std	Y+58, r25	; 0x3a
     9ea:	89 af       	std	Y+57, r24	; 0x39
	
	_delay_ms(100);
	send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
     9ec:	8e e6       	ldi	r24, 0x6E	; 110
     9ee:	91 e0       	ldi	r25, 0x01	; 1
     9f0:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <send_to_uArm>
	while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     9f4:	04 c0       	rjmp	.+8      	; 0x9fe <main+0x162>
	{
		to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
     9f6:	80 e0       	ldi	r24, 0x00	; 0
     9f8:	91 e0       	ldi	r25, 0x01	; 1
     9fa:	0e 94 45 03 	call	0x68a	; 0x68a <to_uARM>
	
	to_uARM("M2210 F500 T20\n");
	
	_delay_ms(100);
	send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
	while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     9fe:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <uart_string1+0x4>
     a02:	81 33       	cpi	r24, 0x31	; 49
     a04:	c1 f3       	breq	.-16     	; 0x9f6 <main+0x15a>
	{
		to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
	}
	to_uARM("M2210 F500 T200\n");
     a06:	85 e8       	ldi	r24, 0x85	; 133
     a08:	91 e0       	ldi	r25, 0x01	; 1
     a0a:	0e 94 45 03 	call	0x68a	; 0x68a <to_uARM>
     a0e:	80 e0       	ldi	r24, 0x00	; 0
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	a8 e4       	ldi	r26, 0x48	; 72
     a14:	b3 e4       	ldi	r27, 0x43	; 67
     a16:	8c 8b       	std	Y+20, r24	; 0x14
     a18:	9d 8b       	std	Y+21, r25	; 0x15
     a1a:	ae 8b       	std	Y+22, r26	; 0x16
     a1c:	bf 8b       	std	Y+23, r27	; 0x17

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     a1e:	8e 01       	movw	r16, r28
     a20:	0b 5b       	subi	r16, 0xBB	; 187
     a22:	1f 4f       	sbci	r17, 0xFF	; 255
     a24:	20 e0       	ldi	r18, 0x00	; 0
     a26:	30 e0       	ldi	r19, 0x00	; 0
     a28:	4a e7       	ldi	r20, 0x7A	; 122
     a2a:	55 e4       	ldi	r21, 0x45	; 69
     a2c:	6c 89       	ldd	r22, Y+20	; 0x14
     a2e:	7d 89       	ldd	r23, Y+21	; 0x15
     a30:	8e 89       	ldd	r24, Y+22	; 0x16
     a32:	9f 89       	ldd	r25, Y+23	; 0x17
     a34:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
     a38:	dc 01       	movw	r26, r24
     a3a:	cb 01       	movw	r24, r22
     a3c:	f8 01       	movw	r30, r16
     a3e:	80 83       	st	Z, r24
     a40:	91 83       	std	Z+1, r25	; 0x01
     a42:	a2 83       	std	Z+2, r26	; 0x02
     a44:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     a46:	ce 01       	movw	r24, r28
     a48:	8b 5b       	subi	r24, 0xBB	; 187
     a4a:	9f 4f       	sbci	r25, 0xFF	; 255
     a4c:	20 e0       	ldi	r18, 0x00	; 0
     a4e:	30 e0       	ldi	r19, 0x00	; 0
     a50:	40 e8       	ldi	r20, 0x80	; 128
     a52:	5f e3       	ldi	r21, 0x3F	; 63
     a54:	fc 01       	movw	r30, r24
     a56:	60 81       	ld	r22, Z
     a58:	71 81       	ldd	r23, Z+1	; 0x01
     a5a:	82 81       	ldd	r24, Z+2	; 0x02
     a5c:	93 81       	ldd	r25, Z+3	; 0x03
     a5e:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <__cmpsf2>
     a62:	88 23       	and	r24, r24
     a64:	4c f4       	brge	.+18     	; 0xa78 <main+0x1dc>
		__ticks = 1;
     a66:	ce 01       	movw	r24, r28
     a68:	87 5b       	subi	r24, 0xB7	; 183
     a6a:	9f 4f       	sbci	r25, 0xFF	; 255
     a6c:	21 e0       	ldi	r18, 0x01	; 1
     a6e:	30 e0       	ldi	r19, 0x00	; 0
     a70:	fc 01       	movw	r30, r24
     a72:	31 83       	std	Z+1, r19	; 0x01
     a74:	20 83       	st	Z, r18
     a76:	69 c0       	rjmp	.+210    	; 0xb4a <main+0x2ae>
	else if (__tmp > 65535)
     a78:	ce 01       	movw	r24, r28
     a7a:	8b 5b       	subi	r24, 0xBB	; 187
     a7c:	9f 4f       	sbci	r25, 0xFF	; 255
     a7e:	20 e0       	ldi	r18, 0x00	; 0
     a80:	3f ef       	ldi	r19, 0xFF	; 255
     a82:	4f e7       	ldi	r20, 0x7F	; 127
     a84:	57 e4       	ldi	r21, 0x47	; 71
     a86:	fc 01       	movw	r30, r24
     a88:	60 81       	ld	r22, Z
     a8a:	71 81       	ldd	r23, Z+1	; 0x01
     a8c:	82 81       	ldd	r24, Z+2	; 0x02
     a8e:	93 81       	ldd	r25, Z+3	; 0x03
     a90:	0e 94 0f 11 	call	0x221e	; 0x221e <__gesf2>
     a94:	18 16       	cp	r1, r24
     a96:	0c f0       	brlt	.+2      	; 0xa9a <main+0x1fe>
     a98:	46 c0       	rjmp	.+140    	; 0xb26 <main+0x28a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a9a:	20 e0       	ldi	r18, 0x00	; 0
     a9c:	30 e0       	ldi	r19, 0x00	; 0
     a9e:	40 e2       	ldi	r20, 0x20	; 32
     aa0:	51 e4       	ldi	r21, 0x41	; 65
     aa2:	6c 89       	ldd	r22, Y+20	; 0x14
     aa4:	7d 89       	ldd	r23, Y+21	; 0x15
     aa6:	8e 89       	ldd	r24, Y+22	; 0x16
     aa8:	9f 89       	ldd	r25, Y+23	; 0x17
     aaa:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
     aae:	dc 01       	movw	r26, r24
     ab0:	cb 01       	movw	r24, r22
     ab2:	8e 01       	movw	r16, r28
     ab4:	07 5b       	subi	r16, 0xB7	; 183
     ab6:	1f 4f       	sbci	r17, 0xFF	; 255
     ab8:	bc 01       	movw	r22, r24
     aba:	cd 01       	movw	r24, r26
     abc:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
     ac0:	dc 01       	movw	r26, r24
     ac2:	cb 01       	movw	r24, r22
     ac4:	f8 01       	movw	r30, r16
     ac6:	91 83       	std	Z+1, r25	; 0x01
     ac8:	80 83       	st	Z, r24
     aca:	24 c0       	rjmp	.+72     	; 0xb14 <main+0x278>
     acc:	ce 01       	movw	r24, r28
     ace:	85 5b       	subi	r24, 0xB5	; 181
     ad0:	9f 4f       	sbci	r25, 0xFF	; 255
     ad2:	20 e9       	ldi	r18, 0x90	; 144
     ad4:	31 e0       	ldi	r19, 0x01	; 1
     ad6:	fc 01       	movw	r30, r24
     ad8:	31 83       	std	Z+1, r19	; 0x01
     ada:	20 83       	st	Z, r18
     adc:	ce 01       	movw	r24, r28
     ade:	85 5b       	subi	r24, 0xB5	; 181
     ae0:	9f 4f       	sbci	r25, 0xFF	; 255
     ae2:	fc 01       	movw	r30, r24
     ae4:	80 81       	ld	r24, Z
     ae6:	91 81       	ldd	r25, Z+1	; 0x01
     ae8:	01 97       	sbiw	r24, 0x01	; 1
     aea:	f1 f7       	brne	.-4      	; 0xae8 <main+0x24c>
     aec:	9e 01       	movw	r18, r28
     aee:	25 5b       	subi	r18, 0xB5	; 181
     af0:	3f 4f       	sbci	r19, 0xFF	; 255
     af2:	f9 01       	movw	r30, r18
     af4:	91 83       	std	Z+1, r25	; 0x01
     af6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     af8:	ce 01       	movw	r24, r28
     afa:	87 5b       	subi	r24, 0xB7	; 183
     afc:	9f 4f       	sbci	r25, 0xFF	; 255
     afe:	9e 01       	movw	r18, r28
     b00:	27 5b       	subi	r18, 0xB7	; 183
     b02:	3f 4f       	sbci	r19, 0xFF	; 255
     b04:	f9 01       	movw	r30, r18
     b06:	20 81       	ld	r18, Z
     b08:	31 81       	ldd	r19, Z+1	; 0x01
     b0a:	21 50       	subi	r18, 0x01	; 1
     b0c:	31 09       	sbc	r19, r1
     b0e:	fc 01       	movw	r30, r24
     b10:	31 83       	std	Z+1, r19	; 0x01
     b12:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b14:	ce 01       	movw	r24, r28
     b16:	87 5b       	subi	r24, 0xB7	; 183
     b18:	9f 4f       	sbci	r25, 0xFF	; 255
     b1a:	fc 01       	movw	r30, r24
     b1c:	80 81       	ld	r24, Z
     b1e:	91 81       	ldd	r25, Z+1	; 0x01
     b20:	89 2b       	or	r24, r25
     b22:	a1 f6       	brne	.-88     	; 0xacc <main+0x230>
     b24:	2c c0       	rjmp	.+88     	; 0xb7e <main+0x2e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b26:	8e 01       	movw	r16, r28
     b28:	07 5b       	subi	r16, 0xB7	; 183
     b2a:	1f 4f       	sbci	r17, 0xFF	; 255
     b2c:	ce 01       	movw	r24, r28
     b2e:	8b 5b       	subi	r24, 0xBB	; 187
     b30:	9f 4f       	sbci	r25, 0xFF	; 255
     b32:	fc 01       	movw	r30, r24
     b34:	60 81       	ld	r22, Z
     b36:	71 81       	ldd	r23, Z+1	; 0x01
     b38:	82 81       	ldd	r24, Z+2	; 0x02
     b3a:	93 81       	ldd	r25, Z+3	; 0x03
     b3c:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
     b40:	dc 01       	movw	r26, r24
     b42:	cb 01       	movw	r24, r22
     b44:	f8 01       	movw	r30, r16
     b46:	91 83       	std	Z+1, r25	; 0x01
     b48:	80 83       	st	Z, r24
     b4a:	ce 01       	movw	r24, r28
     b4c:	83 5b       	subi	r24, 0xB3	; 179
     b4e:	9f 4f       	sbci	r25, 0xFF	; 255
     b50:	9e 01       	movw	r18, r28
     b52:	27 5b       	subi	r18, 0xB7	; 183
     b54:	3f 4f       	sbci	r19, 0xFF	; 255
     b56:	f9 01       	movw	r30, r18
     b58:	20 81       	ld	r18, Z
     b5a:	31 81       	ldd	r19, Z+1	; 0x01
     b5c:	fc 01       	movw	r30, r24
     b5e:	31 83       	std	Z+1, r19	; 0x01
     b60:	20 83       	st	Z, r18
     b62:	ce 01       	movw	r24, r28
     b64:	83 5b       	subi	r24, 0xB3	; 179
     b66:	9f 4f       	sbci	r25, 0xFF	; 255
     b68:	fc 01       	movw	r30, r24
     b6a:	80 81       	ld	r24, Z
     b6c:	91 81       	ldd	r25, Z+1	; 0x01
     b6e:	01 97       	sbiw	r24, 0x01	; 1
     b70:	f1 f7       	brne	.-4      	; 0xb6e <main+0x2d2>
     b72:	9e 01       	movw	r18, r28
     b74:	23 5b       	subi	r18, 0xB3	; 179
     b76:	3f 4f       	sbci	r19, 0xFF	; 255
     b78:	f9 01       	movw	r30, r18
     b7a:	91 83       	std	Z+1, r25	; 0x01
     b7c:	80 83       	st	Z, r24
	_delay_ms(200);
	to_uARM("M2210 F1000 T500\n");
     b7e:	86 e9       	ldi	r24, 0x96	; 150
     b80:	91 e0       	ldi	r25, 0x01	; 1
     b82:	0e 94 45 03 	call	0x68a	; 0x68a <to_uARM>
     b86:	80 e0       	ldi	r24, 0x00	; 0
     b88:	90 e0       	ldi	r25, 0x00	; 0
     b8a:	aa ef       	ldi	r26, 0xFA	; 250
     b8c:	b3 e4       	ldi	r27, 0x43	; 67
     b8e:	8c 87       	std	Y+12, r24	; 0x0c
     b90:	9d 87       	std	Y+13, r25	; 0x0d
     b92:	ae 87       	std	Y+14, r26	; 0x0e
     b94:	bf 87       	std	Y+15, r27	; 0x0f

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     b96:	20 e0       	ldi	r18, 0x00	; 0
     b98:	30 e0       	ldi	r19, 0x00	; 0
     b9a:	4a e7       	ldi	r20, 0x7A	; 122
     b9c:	55 e4       	ldi	r21, 0x45	; 69
     b9e:	6c 85       	ldd	r22, Y+12	; 0x0c
     ba0:	7d 85       	ldd	r23, Y+13	; 0x0d
     ba2:	8e 85       	ldd	r24, Y+14	; 0x0e
     ba4:	9f 85       	ldd	r25, Y+15	; 0x0f
     ba6:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
     baa:	dc 01       	movw	r26, r24
     bac:	cb 01       	movw	r24, r22
     bae:	8b af       	std	Y+59, r24	; 0x3b
     bb0:	9c af       	std	Y+60, r25	; 0x3c
     bb2:	ad af       	std	Y+61, r26	; 0x3d
     bb4:	be af       	std	Y+62, r27	; 0x3e
	if (__tmp < 1.0)
     bb6:	20 e0       	ldi	r18, 0x00	; 0
     bb8:	30 e0       	ldi	r19, 0x00	; 0
     bba:	40 e8       	ldi	r20, 0x80	; 128
     bbc:	5f e3       	ldi	r21, 0x3F	; 63
     bbe:	6b ad       	ldd	r22, Y+59	; 0x3b
     bc0:	7c ad       	ldd	r23, Y+60	; 0x3c
     bc2:	8d ad       	ldd	r24, Y+61	; 0x3d
     bc4:	9e ad       	ldd	r25, Y+62	; 0x3e
     bc6:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <__cmpsf2>
     bca:	88 23       	and	r24, r24
     bcc:	44 f4       	brge	.+16     	; 0xbde <main+0x342>
		__ticks = 1;
     bce:	21 e0       	ldi	r18, 0x01	; 1
     bd0:	30 e0       	ldi	r19, 0x00	; 0
     bd2:	ce 01       	movw	r24, r28
     bd4:	cf 96       	adiw	r24, 0x3f	; 63
     bd6:	fc 01       	movw	r30, r24
     bd8:	31 83       	std	Z+1, r19	; 0x01
     bda:	20 83       	st	Z, r18
     bdc:	5f c0       	rjmp	.+190    	; 0xc9c <main+0x400>
	else if (__tmp > 65535)
     bde:	20 e0       	ldi	r18, 0x00	; 0
     be0:	3f ef       	ldi	r19, 0xFF	; 255
     be2:	4f e7       	ldi	r20, 0x7F	; 127
     be4:	57 e4       	ldi	r21, 0x47	; 71
     be6:	6b ad       	ldd	r22, Y+59	; 0x3b
     be8:	7c ad       	ldd	r23, Y+60	; 0x3c
     bea:	8d ad       	ldd	r24, Y+61	; 0x3d
     bec:	9e ad       	ldd	r25, Y+62	; 0x3e
     bee:	0e 94 0f 11 	call	0x221e	; 0x221e <__gesf2>
     bf2:	18 16       	cp	r1, r24
     bf4:	0c f0       	brlt	.+2      	; 0xbf8 <main+0x35c>
     bf6:	44 c0       	rjmp	.+136    	; 0xc80 <main+0x3e4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bf8:	20 e0       	ldi	r18, 0x00	; 0
     bfa:	30 e0       	ldi	r19, 0x00	; 0
     bfc:	40 e2       	ldi	r20, 0x20	; 32
     bfe:	51 e4       	ldi	r21, 0x41	; 65
     c00:	6c 85       	ldd	r22, Y+12	; 0x0c
     c02:	7d 85       	ldd	r23, Y+13	; 0x0d
     c04:	8e 85       	ldd	r24, Y+14	; 0x0e
     c06:	9f 85       	ldd	r25, Y+15	; 0x0f
     c08:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
     c0c:	dc 01       	movw	r26, r24
     c0e:	cb 01       	movw	r24, r22
     c10:	bc 01       	movw	r22, r24
     c12:	cd 01       	movw	r24, r26
     c14:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
     c18:	dc 01       	movw	r26, r24
     c1a:	cb 01       	movw	r24, r22
     c1c:	9e 01       	movw	r18, r28
     c1e:	21 5c       	subi	r18, 0xC1	; 193
     c20:	3f 4f       	sbci	r19, 0xFF	; 255
     c22:	f9 01       	movw	r30, r18
     c24:	91 83       	std	Z+1, r25	; 0x01
     c26:	80 83       	st	Z, r24
     c28:	23 c0       	rjmp	.+70     	; 0xc70 <main+0x3d4>
     c2a:	ce 01       	movw	r24, r28
     c2c:	8f 5b       	subi	r24, 0xBF	; 191
     c2e:	9f 4f       	sbci	r25, 0xFF	; 255
     c30:	20 e9       	ldi	r18, 0x90	; 144
     c32:	31 e0       	ldi	r19, 0x01	; 1
     c34:	fc 01       	movw	r30, r24
     c36:	31 83       	std	Z+1, r19	; 0x01
     c38:	20 83       	st	Z, r18
     c3a:	ce 01       	movw	r24, r28
     c3c:	8f 5b       	subi	r24, 0xBF	; 191
     c3e:	9f 4f       	sbci	r25, 0xFF	; 255
     c40:	fc 01       	movw	r30, r24
     c42:	80 81       	ld	r24, Z
     c44:	91 81       	ldd	r25, Z+1	; 0x01
     c46:	01 97       	sbiw	r24, 0x01	; 1
     c48:	f1 f7       	brne	.-4      	; 0xc46 <main+0x3aa>
     c4a:	9e 01       	movw	r18, r28
     c4c:	2f 5b       	subi	r18, 0xBF	; 191
     c4e:	3f 4f       	sbci	r19, 0xFF	; 255
     c50:	f9 01       	movw	r30, r18
     c52:	91 83       	std	Z+1, r25	; 0x01
     c54:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c56:	ce 01       	movw	r24, r28
     c58:	cf 96       	adiw	r24, 0x3f	; 63
     c5a:	fc 01       	movw	r30, r24
     c5c:	80 81       	ld	r24, Z
     c5e:	91 81       	ldd	r25, Z+1	; 0x01
     c60:	9c 01       	movw	r18, r24
     c62:	21 50       	subi	r18, 0x01	; 1
     c64:	31 09       	sbc	r19, r1
     c66:	ce 01       	movw	r24, r28
     c68:	cf 96       	adiw	r24, 0x3f	; 63
     c6a:	fc 01       	movw	r30, r24
     c6c:	31 83       	std	Z+1, r19	; 0x01
     c6e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c70:	ce 01       	movw	r24, r28
     c72:	cf 96       	adiw	r24, 0x3f	; 63
     c74:	fc 01       	movw	r30, r24
     c76:	80 81       	ld	r24, Z
     c78:	91 81       	ldd	r25, Z+1	; 0x01
     c7a:	89 2b       	or	r24, r25
     c7c:	b1 f6       	brne	.-84     	; 0xc2a <main+0x38e>
     c7e:	28 c0       	rjmp	.+80     	; 0xcd0 <main+0x434>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c80:	6b ad       	ldd	r22, Y+59	; 0x3b
     c82:	7c ad       	ldd	r23, Y+60	; 0x3c
     c84:	8d ad       	ldd	r24, Y+61	; 0x3d
     c86:	9e ad       	ldd	r25, Y+62	; 0x3e
     c88:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
     c8c:	dc 01       	movw	r26, r24
     c8e:	cb 01       	movw	r24, r22
     c90:	9e 01       	movw	r18, r28
     c92:	21 5c       	subi	r18, 0xC1	; 193
     c94:	3f 4f       	sbci	r19, 0xFF	; 255
     c96:	f9 01       	movw	r30, r18
     c98:	91 83       	std	Z+1, r25	; 0x01
     c9a:	80 83       	st	Z, r24
     c9c:	ce 01       	movw	r24, r28
     c9e:	8d 5b       	subi	r24, 0xBD	; 189
     ca0:	9f 4f       	sbci	r25, 0xFF	; 255
     ca2:	9e 01       	movw	r18, r28
     ca4:	21 5c       	subi	r18, 0xC1	; 193
     ca6:	3f 4f       	sbci	r19, 0xFF	; 255
     ca8:	f9 01       	movw	r30, r18
     caa:	20 81       	ld	r18, Z
     cac:	31 81       	ldd	r19, Z+1	; 0x01
     cae:	fc 01       	movw	r30, r24
     cb0:	31 83       	std	Z+1, r19	; 0x01
     cb2:	20 83       	st	Z, r18
     cb4:	ce 01       	movw	r24, r28
     cb6:	8d 5b       	subi	r24, 0xBD	; 189
     cb8:	9f 4f       	sbci	r25, 0xFF	; 255
     cba:	fc 01       	movw	r30, r24
     cbc:	80 81       	ld	r24, Z
     cbe:	91 81       	ldd	r25, Z+1	; 0x01
     cc0:	01 97       	sbiw	r24, 0x01	; 1
     cc2:	f1 f7       	brne	.-4      	; 0xcc0 <main+0x424>
     cc4:	9e 01       	movw	r18, r28
     cc6:	2d 5b       	subi	r18, 0xBD	; 189
     cc8:	3f 4f       	sbci	r19, 0xFF	; 255
     cca:	f9 01       	movw	r30, r18
     ccc:	91 83       	std	Z+1, r25	; 0x01
     cce:	80 83       	st	Z, r24
	_delay_ms(500);
	to_uARM("M2210 F2000 T500\n");
     cd0:	88 ea       	ldi	r24, 0xA8	; 168
     cd2:	91 e0       	ldi	r25, 0x01	; 1
     cd4:	0e 94 45 03 	call	0x68a	; 0x68a <to_uARM>

led[0].r=0;
     cd8:	10 92 84 02 	sts	0x0284, r1	; 0x800284 <led+0x1>
led[0].g=255;
     cdc:	8f ef       	ldi	r24, 0xFF	; 255
     cde:	80 93 83 02 	sts	0x0283, r24	; 0x800283 <led>
led[0].b=0;
     ce2:	10 92 85 02 	sts	0x0285, r1	; 0x800285 <led+0x2>
led[1].r=0;
     ce6:	10 92 87 02 	sts	0x0287, r1	; 0x800287 <led+0x4>
led[1].g=0;
     cea:	10 92 86 02 	sts	0x0286, r1	; 0x800286 <led+0x3>
led[1].b=255;
     cee:	8f ef       	ldi	r24, 0xFF	; 255
     cf0:	80 93 88 02 	sts	0x0288, r24	; 0x800288 <led+0x5>
ws2812_setleds(led,2);
     cf4:	62 e0       	ldi	r22, 0x02	; 2
     cf6:	70 e0       	ldi	r23, 0x00	; 0
     cf8:	83 e8       	ldi	r24, 0x83	; 131
     cfa:	92 e0       	ldi	r25, 0x02	; 2
     cfc:	0e 94 5d 00 	call	0xba	; 0xba <ws2812_setleds>
	while(1)
	{
	//	direction=get_direction();
		taster = get_LCD_Taster();
     d00:	0e 94 7d 02 	call	0x4fa	; 0x4fa <get_LCD_Taster>
     d04:	88 8f       	std	Y+24, r24	; 0x18
		DIP_Switch=get_DIP_Switch();
     d06:	0e 94 1b 02 	call	0x436	; 0x436 <get_DIP_Switch>
     d0a:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <__data_end>
			//{
				//head=0;
			//}
		//}
		
		if (taster&0x08)
     d0e:	88 8d       	ldd	r24, Y+24	; 0x18
     d10:	88 2f       	mov	r24, r24
     d12:	90 e0       	ldi	r25, 0x00	; 0
     d14:	88 70       	andi	r24, 0x08	; 8
     d16:	99 27       	eor	r25, r25
     d18:	89 2b       	or	r24, r25
     d1a:	09 f4       	brne	.+2      	; 0xd1e <main+0x482>
     d1c:	92 c1       	rjmp	.+804    	; 0x1042 <main+0x7a6>
		{
			send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
     d1e:	8e e6       	ldi	r24, 0x6E	; 110
     d20:	91 e0       	ldi	r25, 0x01	; 1
     d22:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <send_to_uArm>
			while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     d26:	04 c0       	rjmp	.+8      	; 0xd30 <main+0x494>
			{
				to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
     d28:	80 e0       	ldi	r24, 0x00	; 0
     d2a:	91 e0       	ldi	r25, 0x01	; 1
     d2c:	0e 94 45 03 	call	0x68a	; 0x68a <to_uARM>
		//}
		
		if (taster&0x08)
		{
			send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
			while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     d30:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <uart_string1+0x4>
     d34:	81 33       	cpi	r24, 0x31	; 49
     d36:	c1 f3       	breq	.-16     	; 0xd28 <main+0x48c>
			{
				to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
			}
			//to_uARM("M2210 F2000 T200\n");
			if (DIP_Switch&0x01)
     d38:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <__data_end>
     d3c:	88 2f       	mov	r24, r24
     d3e:	90 e0       	ldi	r25, 0x00	; 0
     d40:	81 70       	andi	r24, 0x01	; 1
     d42:	99 27       	eor	r25, r25
     d44:	89 2b       	or	r24, r25
     d46:	09 f4       	brne	.+2      	; 0xd4a <main+0x4ae>
     d48:	7c c1       	rjmp	.+760    	; 0x1042 <main+0x7a6>
			{
				to_uARM("M2210 F500 T200\n");
     d4a:	85 e8       	ldi	r24, 0x85	; 133
     d4c:	91 e0       	ldi	r25, 0x01	; 1
     d4e:	0e 94 45 03 	call	0x68a	; 0x68a <to_uARM>
     d52:	80 e0       	ldi	r24, 0x00	; 0
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	a8 e4       	ldi	r26, 0x48	; 72
     d58:	b3 e4       	ldi	r27, 0x43	; 67
     d5a:	89 a7       	std	Y+41, r24	; 0x29
     d5c:	9a a7       	std	Y+42, r25	; 0x2a
     d5e:	ab a7       	std	Y+43, r26	; 0x2b
     d60:	bc a7       	std	Y+44, r27	; 0x2c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     d62:	8e 01       	movw	r16, r28
     d64:	07 5a       	subi	r16, 0xA7	; 167
     d66:	1f 4f       	sbci	r17, 0xFF	; 255
     d68:	20 e0       	ldi	r18, 0x00	; 0
     d6a:	30 e0       	ldi	r19, 0x00	; 0
     d6c:	4a e7       	ldi	r20, 0x7A	; 122
     d6e:	55 e4       	ldi	r21, 0x45	; 69
     d70:	69 a5       	ldd	r22, Y+41	; 0x29
     d72:	7a a5       	ldd	r23, Y+42	; 0x2a
     d74:	8b a5       	ldd	r24, Y+43	; 0x2b
     d76:	9c a5       	ldd	r25, Y+44	; 0x2c
     d78:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
     d7c:	dc 01       	movw	r26, r24
     d7e:	cb 01       	movw	r24, r22
     d80:	f8 01       	movw	r30, r16
     d82:	80 83       	st	Z, r24
     d84:	91 83       	std	Z+1, r25	; 0x01
     d86:	a2 83       	std	Z+2, r26	; 0x02
     d88:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d8a:	ce 01       	movw	r24, r28
     d8c:	87 5a       	subi	r24, 0xA7	; 167
     d8e:	9f 4f       	sbci	r25, 0xFF	; 255
     d90:	20 e0       	ldi	r18, 0x00	; 0
     d92:	30 e0       	ldi	r19, 0x00	; 0
     d94:	40 e8       	ldi	r20, 0x80	; 128
     d96:	5f e3       	ldi	r21, 0x3F	; 63
     d98:	fc 01       	movw	r30, r24
     d9a:	60 81       	ld	r22, Z
     d9c:	71 81       	ldd	r23, Z+1	; 0x01
     d9e:	82 81       	ldd	r24, Z+2	; 0x02
     da0:	93 81       	ldd	r25, Z+3	; 0x03
     da2:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <__cmpsf2>
     da6:	88 23       	and	r24, r24
     da8:	4c f4       	brge	.+18     	; 0xdbc <main+0x520>
		__ticks = 1;
     daa:	ce 01       	movw	r24, r28
     dac:	83 5a       	subi	r24, 0xA3	; 163
     dae:	9f 4f       	sbci	r25, 0xFF	; 255
     db0:	21 e0       	ldi	r18, 0x01	; 1
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	fc 01       	movw	r30, r24
     db6:	31 83       	std	Z+1, r19	; 0x01
     db8:	20 83       	st	Z, r18
     dba:	69 c0       	rjmp	.+210    	; 0xe8e <main+0x5f2>
	else if (__tmp > 65535)
     dbc:	ce 01       	movw	r24, r28
     dbe:	87 5a       	subi	r24, 0xA7	; 167
     dc0:	9f 4f       	sbci	r25, 0xFF	; 255
     dc2:	20 e0       	ldi	r18, 0x00	; 0
     dc4:	3f ef       	ldi	r19, 0xFF	; 255
     dc6:	4f e7       	ldi	r20, 0x7F	; 127
     dc8:	57 e4       	ldi	r21, 0x47	; 71
     dca:	fc 01       	movw	r30, r24
     dcc:	60 81       	ld	r22, Z
     dce:	71 81       	ldd	r23, Z+1	; 0x01
     dd0:	82 81       	ldd	r24, Z+2	; 0x02
     dd2:	93 81       	ldd	r25, Z+3	; 0x03
     dd4:	0e 94 0f 11 	call	0x221e	; 0x221e <__gesf2>
     dd8:	18 16       	cp	r1, r24
     dda:	0c f0       	brlt	.+2      	; 0xdde <main+0x542>
     ddc:	46 c0       	rjmp	.+140    	; 0xe6a <main+0x5ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     dde:	20 e0       	ldi	r18, 0x00	; 0
     de0:	30 e0       	ldi	r19, 0x00	; 0
     de2:	40 e2       	ldi	r20, 0x20	; 32
     de4:	51 e4       	ldi	r21, 0x41	; 65
     de6:	69 a5       	ldd	r22, Y+41	; 0x29
     de8:	7a a5       	ldd	r23, Y+42	; 0x2a
     dea:	8b a5       	ldd	r24, Y+43	; 0x2b
     dec:	9c a5       	ldd	r25, Y+44	; 0x2c
     dee:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
     df2:	dc 01       	movw	r26, r24
     df4:	cb 01       	movw	r24, r22
     df6:	8e 01       	movw	r16, r28
     df8:	03 5a       	subi	r16, 0xA3	; 163
     dfa:	1f 4f       	sbci	r17, 0xFF	; 255
     dfc:	bc 01       	movw	r22, r24
     dfe:	cd 01       	movw	r24, r26
     e00:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
     e04:	dc 01       	movw	r26, r24
     e06:	cb 01       	movw	r24, r22
     e08:	f8 01       	movw	r30, r16
     e0a:	91 83       	std	Z+1, r25	; 0x01
     e0c:	80 83       	st	Z, r24
     e0e:	24 c0       	rjmp	.+72     	; 0xe58 <main+0x5bc>
     e10:	ce 01       	movw	r24, r28
     e12:	81 5a       	subi	r24, 0xA1	; 161
     e14:	9f 4f       	sbci	r25, 0xFF	; 255
     e16:	20 e9       	ldi	r18, 0x90	; 144
     e18:	31 e0       	ldi	r19, 0x01	; 1
     e1a:	fc 01       	movw	r30, r24
     e1c:	31 83       	std	Z+1, r19	; 0x01
     e1e:	20 83       	st	Z, r18
     e20:	ce 01       	movw	r24, r28
     e22:	81 5a       	subi	r24, 0xA1	; 161
     e24:	9f 4f       	sbci	r25, 0xFF	; 255
     e26:	fc 01       	movw	r30, r24
     e28:	80 81       	ld	r24, Z
     e2a:	91 81       	ldd	r25, Z+1	; 0x01
     e2c:	01 97       	sbiw	r24, 0x01	; 1
     e2e:	f1 f7       	brne	.-4      	; 0xe2c <main+0x590>
     e30:	9e 01       	movw	r18, r28
     e32:	21 5a       	subi	r18, 0xA1	; 161
     e34:	3f 4f       	sbci	r19, 0xFF	; 255
     e36:	f9 01       	movw	r30, r18
     e38:	91 83       	std	Z+1, r25	; 0x01
     e3a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e3c:	ce 01       	movw	r24, r28
     e3e:	83 5a       	subi	r24, 0xA3	; 163
     e40:	9f 4f       	sbci	r25, 0xFF	; 255
     e42:	9e 01       	movw	r18, r28
     e44:	23 5a       	subi	r18, 0xA3	; 163
     e46:	3f 4f       	sbci	r19, 0xFF	; 255
     e48:	f9 01       	movw	r30, r18
     e4a:	20 81       	ld	r18, Z
     e4c:	31 81       	ldd	r19, Z+1	; 0x01
     e4e:	21 50       	subi	r18, 0x01	; 1
     e50:	31 09       	sbc	r19, r1
     e52:	fc 01       	movw	r30, r24
     e54:	31 83       	std	Z+1, r19	; 0x01
     e56:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e58:	ce 01       	movw	r24, r28
     e5a:	83 5a       	subi	r24, 0xA3	; 163
     e5c:	9f 4f       	sbci	r25, 0xFF	; 255
     e5e:	fc 01       	movw	r30, r24
     e60:	80 81       	ld	r24, Z
     e62:	91 81       	ldd	r25, Z+1	; 0x01
     e64:	89 2b       	or	r24, r25
     e66:	a1 f6       	brne	.-88     	; 0xe10 <main+0x574>
     e68:	2c c0       	rjmp	.+88     	; 0xec2 <main+0x626>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e6a:	8e 01       	movw	r16, r28
     e6c:	03 5a       	subi	r16, 0xA3	; 163
     e6e:	1f 4f       	sbci	r17, 0xFF	; 255
     e70:	ce 01       	movw	r24, r28
     e72:	87 5a       	subi	r24, 0xA7	; 167
     e74:	9f 4f       	sbci	r25, 0xFF	; 255
     e76:	fc 01       	movw	r30, r24
     e78:	60 81       	ld	r22, Z
     e7a:	71 81       	ldd	r23, Z+1	; 0x01
     e7c:	82 81       	ldd	r24, Z+2	; 0x02
     e7e:	93 81       	ldd	r25, Z+3	; 0x03
     e80:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
     e84:	dc 01       	movw	r26, r24
     e86:	cb 01       	movw	r24, r22
     e88:	f8 01       	movw	r30, r16
     e8a:	91 83       	std	Z+1, r25	; 0x01
     e8c:	80 83       	st	Z, r24
     e8e:	ce 01       	movw	r24, r28
     e90:	8f 59       	subi	r24, 0x9F	; 159
     e92:	9f 4f       	sbci	r25, 0xFF	; 255
     e94:	9e 01       	movw	r18, r28
     e96:	23 5a       	subi	r18, 0xA3	; 163
     e98:	3f 4f       	sbci	r19, 0xFF	; 255
     e9a:	f9 01       	movw	r30, r18
     e9c:	20 81       	ld	r18, Z
     e9e:	31 81       	ldd	r19, Z+1	; 0x01
     ea0:	fc 01       	movw	r30, r24
     ea2:	31 83       	std	Z+1, r19	; 0x01
     ea4:	20 83       	st	Z, r18
     ea6:	ce 01       	movw	r24, r28
     ea8:	8f 59       	subi	r24, 0x9F	; 159
     eaa:	9f 4f       	sbci	r25, 0xFF	; 255
     eac:	fc 01       	movw	r30, r24
     eae:	80 81       	ld	r24, Z
     eb0:	91 81       	ldd	r25, Z+1	; 0x01
     eb2:	01 97       	sbiw	r24, 0x01	; 1
     eb4:	f1 f7       	brne	.-4      	; 0xeb2 <main+0x616>
     eb6:	9e 01       	movw	r18, r28
     eb8:	2f 59       	subi	r18, 0x9F	; 159
     eba:	3f 4f       	sbci	r19, 0xFF	; 255
     ebc:	f9 01       	movw	r30, r18
     ebe:	91 83       	std	Z+1, r25	; 0x01
     ec0:	80 83       	st	Z, r24
				_delay_ms(200);
				to_uARM("M2210 F1000 T500\n");
     ec2:	86 e9       	ldi	r24, 0x96	; 150
     ec4:	91 e0       	ldi	r25, 0x01	; 1
     ec6:	0e 94 45 03 	call	0x68a	; 0x68a <to_uARM>
     eca:	80 e0       	ldi	r24, 0x00	; 0
     ecc:	90 e0       	ldi	r25, 0x00	; 0
     ece:	aa ef       	ldi	r26, 0xFA	; 250
     ed0:	b3 e4       	ldi	r27, 0x43	; 67
     ed2:	88 8b       	std	Y+16, r24	; 0x10
     ed4:	99 8b       	std	Y+17, r25	; 0x11
     ed6:	aa 8b       	std	Y+18, r26	; 0x12
     ed8:	bb 8b       	std	Y+19, r27	; 0x13

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     eda:	8e 01       	movw	r16, r28
     edc:	01 5b       	subi	r16, 0xB1	; 177
     ede:	1f 4f       	sbci	r17, 0xFF	; 255
     ee0:	20 e0       	ldi	r18, 0x00	; 0
     ee2:	30 e0       	ldi	r19, 0x00	; 0
     ee4:	4a e7       	ldi	r20, 0x7A	; 122
     ee6:	55 e4       	ldi	r21, 0x45	; 69
     ee8:	68 89       	ldd	r22, Y+16	; 0x10
     eea:	79 89       	ldd	r23, Y+17	; 0x11
     eec:	8a 89       	ldd	r24, Y+18	; 0x12
     eee:	9b 89       	ldd	r25, Y+19	; 0x13
     ef0:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
     ef4:	dc 01       	movw	r26, r24
     ef6:	cb 01       	movw	r24, r22
     ef8:	f8 01       	movw	r30, r16
     efa:	80 83       	st	Z, r24
     efc:	91 83       	std	Z+1, r25	; 0x01
     efe:	a2 83       	std	Z+2, r26	; 0x02
     f00:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     f02:	ce 01       	movw	r24, r28
     f04:	81 5b       	subi	r24, 0xB1	; 177
     f06:	9f 4f       	sbci	r25, 0xFF	; 255
     f08:	20 e0       	ldi	r18, 0x00	; 0
     f0a:	30 e0       	ldi	r19, 0x00	; 0
     f0c:	40 e8       	ldi	r20, 0x80	; 128
     f0e:	5f e3       	ldi	r21, 0x3F	; 63
     f10:	fc 01       	movw	r30, r24
     f12:	60 81       	ld	r22, Z
     f14:	71 81       	ldd	r23, Z+1	; 0x01
     f16:	82 81       	ldd	r24, Z+2	; 0x02
     f18:	93 81       	ldd	r25, Z+3	; 0x03
     f1a:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <__cmpsf2>
     f1e:	88 23       	and	r24, r24
     f20:	4c f4       	brge	.+18     	; 0xf34 <main+0x698>
		__ticks = 1;
     f22:	ce 01       	movw	r24, r28
     f24:	8d 5a       	subi	r24, 0xAD	; 173
     f26:	9f 4f       	sbci	r25, 0xFF	; 255
     f28:	21 e0       	ldi	r18, 0x01	; 1
     f2a:	30 e0       	ldi	r19, 0x00	; 0
     f2c:	fc 01       	movw	r30, r24
     f2e:	31 83       	std	Z+1, r19	; 0x01
     f30:	20 83       	st	Z, r18
     f32:	69 c0       	rjmp	.+210    	; 0x1006 <main+0x76a>
	else if (__tmp > 65535)
     f34:	ce 01       	movw	r24, r28
     f36:	81 5b       	subi	r24, 0xB1	; 177
     f38:	9f 4f       	sbci	r25, 0xFF	; 255
     f3a:	20 e0       	ldi	r18, 0x00	; 0
     f3c:	3f ef       	ldi	r19, 0xFF	; 255
     f3e:	4f e7       	ldi	r20, 0x7F	; 127
     f40:	57 e4       	ldi	r21, 0x47	; 71
     f42:	fc 01       	movw	r30, r24
     f44:	60 81       	ld	r22, Z
     f46:	71 81       	ldd	r23, Z+1	; 0x01
     f48:	82 81       	ldd	r24, Z+2	; 0x02
     f4a:	93 81       	ldd	r25, Z+3	; 0x03
     f4c:	0e 94 0f 11 	call	0x221e	; 0x221e <__gesf2>
     f50:	18 16       	cp	r1, r24
     f52:	0c f0       	brlt	.+2      	; 0xf56 <main+0x6ba>
     f54:	46 c0       	rjmp	.+140    	; 0xfe2 <main+0x746>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f56:	20 e0       	ldi	r18, 0x00	; 0
     f58:	30 e0       	ldi	r19, 0x00	; 0
     f5a:	40 e2       	ldi	r20, 0x20	; 32
     f5c:	51 e4       	ldi	r21, 0x41	; 65
     f5e:	68 89       	ldd	r22, Y+16	; 0x10
     f60:	79 89       	ldd	r23, Y+17	; 0x11
     f62:	8a 89       	ldd	r24, Y+18	; 0x12
     f64:	9b 89       	ldd	r25, Y+19	; 0x13
     f66:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
     f6a:	dc 01       	movw	r26, r24
     f6c:	cb 01       	movw	r24, r22
     f6e:	8e 01       	movw	r16, r28
     f70:	0d 5a       	subi	r16, 0xAD	; 173
     f72:	1f 4f       	sbci	r17, 0xFF	; 255
     f74:	bc 01       	movw	r22, r24
     f76:	cd 01       	movw	r24, r26
     f78:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
     f7c:	dc 01       	movw	r26, r24
     f7e:	cb 01       	movw	r24, r22
     f80:	f8 01       	movw	r30, r16
     f82:	91 83       	std	Z+1, r25	; 0x01
     f84:	80 83       	st	Z, r24
     f86:	24 c0       	rjmp	.+72     	; 0xfd0 <main+0x734>
     f88:	ce 01       	movw	r24, r28
     f8a:	8b 5a       	subi	r24, 0xAB	; 171
     f8c:	9f 4f       	sbci	r25, 0xFF	; 255
     f8e:	20 e9       	ldi	r18, 0x90	; 144
     f90:	31 e0       	ldi	r19, 0x01	; 1
     f92:	fc 01       	movw	r30, r24
     f94:	31 83       	std	Z+1, r19	; 0x01
     f96:	20 83       	st	Z, r18
     f98:	ce 01       	movw	r24, r28
     f9a:	8b 5a       	subi	r24, 0xAB	; 171
     f9c:	9f 4f       	sbci	r25, 0xFF	; 255
     f9e:	fc 01       	movw	r30, r24
     fa0:	80 81       	ld	r24, Z
     fa2:	91 81       	ldd	r25, Z+1	; 0x01
     fa4:	01 97       	sbiw	r24, 0x01	; 1
     fa6:	f1 f7       	brne	.-4      	; 0xfa4 <main+0x708>
     fa8:	9e 01       	movw	r18, r28
     faa:	2b 5a       	subi	r18, 0xAB	; 171
     fac:	3f 4f       	sbci	r19, 0xFF	; 255
     fae:	f9 01       	movw	r30, r18
     fb0:	91 83       	std	Z+1, r25	; 0x01
     fb2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fb4:	ce 01       	movw	r24, r28
     fb6:	8d 5a       	subi	r24, 0xAD	; 173
     fb8:	9f 4f       	sbci	r25, 0xFF	; 255
     fba:	9e 01       	movw	r18, r28
     fbc:	2d 5a       	subi	r18, 0xAD	; 173
     fbe:	3f 4f       	sbci	r19, 0xFF	; 255
     fc0:	f9 01       	movw	r30, r18
     fc2:	20 81       	ld	r18, Z
     fc4:	31 81       	ldd	r19, Z+1	; 0x01
     fc6:	21 50       	subi	r18, 0x01	; 1
     fc8:	31 09       	sbc	r19, r1
     fca:	fc 01       	movw	r30, r24
     fcc:	31 83       	std	Z+1, r19	; 0x01
     fce:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fd0:	ce 01       	movw	r24, r28
     fd2:	8d 5a       	subi	r24, 0xAD	; 173
     fd4:	9f 4f       	sbci	r25, 0xFF	; 255
     fd6:	fc 01       	movw	r30, r24
     fd8:	80 81       	ld	r24, Z
     fda:	91 81       	ldd	r25, Z+1	; 0x01
     fdc:	89 2b       	or	r24, r25
     fde:	a1 f6       	brne	.-88     	; 0xf88 <main+0x6ec>
     fe0:	2c c0       	rjmp	.+88     	; 0x103a <main+0x79e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fe2:	8e 01       	movw	r16, r28
     fe4:	0d 5a       	subi	r16, 0xAD	; 173
     fe6:	1f 4f       	sbci	r17, 0xFF	; 255
     fe8:	ce 01       	movw	r24, r28
     fea:	81 5b       	subi	r24, 0xB1	; 177
     fec:	9f 4f       	sbci	r25, 0xFF	; 255
     fee:	fc 01       	movw	r30, r24
     ff0:	60 81       	ld	r22, Z
     ff2:	71 81       	ldd	r23, Z+1	; 0x01
     ff4:	82 81       	ldd	r24, Z+2	; 0x02
     ff6:	93 81       	ldd	r25, Z+3	; 0x03
     ff8:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
     ffc:	dc 01       	movw	r26, r24
     ffe:	cb 01       	movw	r24, r22
    1000:	f8 01       	movw	r30, r16
    1002:	91 83       	std	Z+1, r25	; 0x01
    1004:	80 83       	st	Z, r24
    1006:	ce 01       	movw	r24, r28
    1008:	89 5a       	subi	r24, 0xA9	; 169
    100a:	9f 4f       	sbci	r25, 0xFF	; 255
    100c:	9e 01       	movw	r18, r28
    100e:	2d 5a       	subi	r18, 0xAD	; 173
    1010:	3f 4f       	sbci	r19, 0xFF	; 255
    1012:	f9 01       	movw	r30, r18
    1014:	20 81       	ld	r18, Z
    1016:	31 81       	ldd	r19, Z+1	; 0x01
    1018:	fc 01       	movw	r30, r24
    101a:	31 83       	std	Z+1, r19	; 0x01
    101c:	20 83       	st	Z, r18
    101e:	ce 01       	movw	r24, r28
    1020:	89 5a       	subi	r24, 0xA9	; 169
    1022:	9f 4f       	sbci	r25, 0xFF	; 255
    1024:	fc 01       	movw	r30, r24
    1026:	80 81       	ld	r24, Z
    1028:	91 81       	ldd	r25, Z+1	; 0x01
    102a:	01 97       	sbiw	r24, 0x01	; 1
    102c:	f1 f7       	brne	.-4      	; 0x102a <main+0x78e>
    102e:	9e 01       	movw	r18, r28
    1030:	29 5a       	subi	r18, 0xA9	; 169
    1032:	3f 4f       	sbci	r19, 0xFF	; 255
    1034:	f9 01       	movw	r30, r18
    1036:	91 83       	std	Z+1, r25	; 0x01
    1038:	80 83       	st	Z, r24
				_delay_ms(500);
				to_uARM("M2210 F2000 T500\n");
    103a:	88 ea       	ldi	r24, 0xA8	; 168
    103c:	91 e0       	ldi	r25, 0x01	; 1
    103e:	0e 94 45 03 	call	0x68a	; 0x68a <to_uARM>
			}
		}
		if (uart_str_complete!=0)
    1042:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <uart_str_complete>
    1046:	88 23       	and	r24, r24
    1048:	09 f4       	brne	.+2      	; 0x104c <main+0x7b0>
    104a:	5a ce       	rjmp	.-844    	; 0xd00 <main+0x464>
		{
			routine_done=0;
    104c:	1f 82       	std	Y+7, r1	; 0x07
			uart_str_complete=0;
    104e:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <uart_str_complete>
			send_Byte_0('1');	
    1052:	81 e3       	ldi	r24, 0x31	; 49
    1054:	0e 94 0f 03 	call	0x61e	; 0x61e <send_Byte_0>
			for (counter=0;counter<=data_bytes_recieved;counter++)
    1058:	1e 82       	std	Y+6, r1	; 0x06
    105a:	3b c2       	rjmp	.+1142   	; 0x14d2 <__stack+0x3d3>
			{
				switch (final_data[counter])//final data decoding
    105c:	8e 81       	ldd	r24, Y+6	; 0x06
    105e:	88 2f       	mov	r24, r24
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	8f 52       	subi	r24, 0x2F	; 47
    1064:	9d 4f       	sbci	r25, 0xFD	; 253
    1066:	fc 01       	movw	r30, r24
    1068:	80 81       	ld	r24, Z
    106a:	88 2f       	mov	r24, r24
    106c:	90 e0       	ldi	r25, 0x00	; 0
    106e:	88 35       	cpi	r24, 0x58	; 88
    1070:	91 05       	cpc	r25, r1
    1072:	49 f0       	breq	.+18     	; 0x1086 <main+0x7ea>
    1074:	89 35       	cpi	r24, 0x59	; 89
    1076:	91 05       	cpc	r25, r1
    1078:	09 f4       	brne	.+2      	; 0x107c <main+0x7e0>
    107a:	14 c1       	rjmp	.+552    	; 0x12a4 <__stack+0x1a5>
    107c:	8f 34       	cpi	r24, 0x4F	; 79
    107e:	91 05       	cpc	r25, r1
    1080:	09 f4       	brne	.+2      	; 0x1084 <main+0x7e8>
    1082:	1f c2       	rjmp	.+1086   	; 0x14c2 <__stack+0x3c3>
    1084:	23 c2       	rjmp	.+1094   	; 0x14cc <__stack+0x3cd>
				{
					case 'X':
						recieved_Y=(final_data[counter+1]-48)*1000+(final_data[counter+2]-48)*100+(final_data[counter+3]-48)*10+final_data[counter+4]-48;
    1086:	8e 81       	ldd	r24, Y+6	; 0x06
    1088:	88 2f       	mov	r24, r24
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	01 96       	adiw	r24, 0x01	; 1
    108e:	8f 52       	subi	r24, 0x2F	; 47
    1090:	9d 4f       	sbci	r25, 0xFD	; 253
    1092:	fc 01       	movw	r30, r24
    1094:	80 81       	ld	r24, Z
    1096:	88 2f       	mov	r24, r24
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	ac 01       	movw	r20, r24
    109c:	40 53       	subi	r20, 0x30	; 48
    109e:	51 09       	sbc	r21, r1
    10a0:	88 ee       	ldi	r24, 0xE8	; 232
    10a2:	93 e0       	ldi	r25, 0x03	; 3
    10a4:	48 9f       	mul	r20, r24
    10a6:	90 01       	movw	r18, r0
    10a8:	49 9f       	mul	r20, r25
    10aa:	30 0d       	add	r19, r0
    10ac:	58 9f       	mul	r21, r24
    10ae:	30 0d       	add	r19, r0
    10b0:	11 24       	eor	r1, r1
    10b2:	8e 81       	ldd	r24, Y+6	; 0x06
    10b4:	88 2f       	mov	r24, r24
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	02 96       	adiw	r24, 0x02	; 2
    10ba:	8f 52       	subi	r24, 0x2F	; 47
    10bc:	9d 4f       	sbci	r25, 0xFD	; 253
    10be:	fc 01       	movw	r30, r24
    10c0:	80 81       	ld	r24, Z
    10c2:	88 2f       	mov	r24, r24
    10c4:	90 e0       	ldi	r25, 0x00	; 0
    10c6:	ac 01       	movw	r20, r24
    10c8:	40 53       	subi	r20, 0x30	; 48
    10ca:	51 09       	sbc	r21, r1
    10cc:	64 e6       	ldi	r22, 0x64	; 100
    10ce:	64 9f       	mul	r22, r20
    10d0:	c0 01       	movw	r24, r0
    10d2:	65 9f       	mul	r22, r21
    10d4:	90 0d       	add	r25, r0
    10d6:	11 24       	eor	r1, r1
    10d8:	28 0f       	add	r18, r24
    10da:	39 1f       	adc	r19, r25
    10dc:	8e 81       	ldd	r24, Y+6	; 0x06
    10de:	88 2f       	mov	r24, r24
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	03 96       	adiw	r24, 0x03	; 3
    10e4:	8f 52       	subi	r24, 0x2F	; 47
    10e6:	9d 4f       	sbci	r25, 0xFD	; 253
    10e8:	fc 01       	movw	r30, r24
    10ea:	80 81       	ld	r24, Z
    10ec:	88 2f       	mov	r24, r24
    10ee:	90 e0       	ldi	r25, 0x00	; 0
    10f0:	c0 97       	sbiw	r24, 0x30	; 48
    10f2:	88 0f       	add	r24, r24
    10f4:	99 1f       	adc	r25, r25
    10f6:	ac 01       	movw	r20, r24
    10f8:	44 0f       	add	r20, r20
    10fa:	55 1f       	adc	r21, r21
    10fc:	44 0f       	add	r20, r20
    10fe:	55 1f       	adc	r21, r21
    1100:	84 0f       	add	r24, r20
    1102:	95 1f       	adc	r25, r21
    1104:	28 0f       	add	r18, r24
    1106:	39 1f       	adc	r19, r25
    1108:	8e 81       	ldd	r24, Y+6	; 0x06
    110a:	88 2f       	mov	r24, r24
    110c:	90 e0       	ldi	r25, 0x00	; 0
    110e:	04 96       	adiw	r24, 0x04	; 4
    1110:	8f 52       	subi	r24, 0x2F	; 47
    1112:	9d 4f       	sbci	r25, 0xFD	; 253
    1114:	fc 01       	movw	r30, r24
    1116:	80 81       	ld	r24, Z
    1118:	88 2f       	mov	r24, r24
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	82 0f       	add	r24, r18
    111e:	93 1f       	adc	r25, r19
    1120:	c0 97       	sbiw	r24, 0x30	; 48
    1122:	9c 83       	std	Y+4, r25	; 0x04
    1124:	8b 83       	std	Y+3, r24	; 0x03
						send_Byte_0('1');
    1126:	81 e3       	ldi	r24, 0x31	; 49
    1128:	0e 94 0f 03 	call	0x61e	; 0x61e <send_Byte_0>
    112c:	80 e0       	ldi	r24, 0x00	; 0
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	a0 e0       	ldi	r26, 0x00	; 0
    1132:	b0 e4       	ldi	r27, 0x40	; 64
    1134:	8d a3       	std	Y+37, r24	; 0x25
    1136:	9e a3       	std	Y+38, r25	; 0x26
    1138:	af a3       	std	Y+39, r26	; 0x27
    113a:	b8 a7       	std	Y+40, r27	; 0x28

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    113c:	8e 01       	movw	r16, r28
    113e:	0d 59       	subi	r16, 0x9D	; 157
    1140:	1f 4f       	sbci	r17, 0xFF	; 255
    1142:	20 e0       	ldi	r18, 0x00	; 0
    1144:	30 e0       	ldi	r19, 0x00	; 0
    1146:	4a e7       	ldi	r20, 0x7A	; 122
    1148:	55 e4       	ldi	r21, 0x45	; 69
    114a:	6d a1       	ldd	r22, Y+37	; 0x25
    114c:	7e a1       	ldd	r23, Y+38	; 0x26
    114e:	8f a1       	ldd	r24, Y+39	; 0x27
    1150:	98 a5       	ldd	r25, Y+40	; 0x28
    1152:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
    1156:	dc 01       	movw	r26, r24
    1158:	cb 01       	movw	r24, r22
    115a:	f8 01       	movw	r30, r16
    115c:	80 83       	st	Z, r24
    115e:	91 83       	std	Z+1, r25	; 0x01
    1160:	a2 83       	std	Z+2, r26	; 0x02
    1162:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1164:	ce 01       	movw	r24, r28
    1166:	8d 59       	subi	r24, 0x9D	; 157
    1168:	9f 4f       	sbci	r25, 0xFF	; 255
    116a:	20 e0       	ldi	r18, 0x00	; 0
    116c:	30 e0       	ldi	r19, 0x00	; 0
    116e:	40 e8       	ldi	r20, 0x80	; 128
    1170:	5f e3       	ldi	r21, 0x3F	; 63
    1172:	fc 01       	movw	r30, r24
    1174:	60 81       	ld	r22, Z
    1176:	71 81       	ldd	r23, Z+1	; 0x01
    1178:	82 81       	ldd	r24, Z+2	; 0x02
    117a:	93 81       	ldd	r25, Z+3	; 0x03
    117c:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <__cmpsf2>
    1180:	88 23       	and	r24, r24
    1182:	4c f4       	brge	.+18     	; 0x1196 <__stack+0x97>
		__ticks = 1;
    1184:	ce 01       	movw	r24, r28
    1186:	89 59       	subi	r24, 0x99	; 153
    1188:	9f 4f       	sbci	r25, 0xFF	; 255
    118a:	21 e0       	ldi	r18, 0x01	; 1
    118c:	30 e0       	ldi	r19, 0x00	; 0
    118e:	fc 01       	movw	r30, r24
    1190:	31 83       	std	Z+1, r19	; 0x01
    1192:	20 83       	st	Z, r18
    1194:	69 c0       	rjmp	.+210    	; 0x1268 <__stack+0x169>
	else if (__tmp > 65535)
    1196:	ce 01       	movw	r24, r28
    1198:	8d 59       	subi	r24, 0x9D	; 157
    119a:	9f 4f       	sbci	r25, 0xFF	; 255
    119c:	20 e0       	ldi	r18, 0x00	; 0
    119e:	3f ef       	ldi	r19, 0xFF	; 255
    11a0:	4f e7       	ldi	r20, 0x7F	; 127
    11a2:	57 e4       	ldi	r21, 0x47	; 71
    11a4:	fc 01       	movw	r30, r24
    11a6:	60 81       	ld	r22, Z
    11a8:	71 81       	ldd	r23, Z+1	; 0x01
    11aa:	82 81       	ldd	r24, Z+2	; 0x02
    11ac:	93 81       	ldd	r25, Z+3	; 0x03
    11ae:	0e 94 0f 11 	call	0x221e	; 0x221e <__gesf2>
    11b2:	18 16       	cp	r1, r24
    11b4:	0c f0       	brlt	.+2      	; 0x11b8 <__stack+0xb9>
    11b6:	46 c0       	rjmp	.+140    	; 0x1244 <__stack+0x145>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11b8:	20 e0       	ldi	r18, 0x00	; 0
    11ba:	30 e0       	ldi	r19, 0x00	; 0
    11bc:	40 e2       	ldi	r20, 0x20	; 32
    11be:	51 e4       	ldi	r21, 0x41	; 65
    11c0:	6d a1       	ldd	r22, Y+37	; 0x25
    11c2:	7e a1       	ldd	r23, Y+38	; 0x26
    11c4:	8f a1       	ldd	r24, Y+39	; 0x27
    11c6:	98 a5       	ldd	r25, Y+40	; 0x28
    11c8:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
    11cc:	dc 01       	movw	r26, r24
    11ce:	cb 01       	movw	r24, r22
    11d0:	8e 01       	movw	r16, r28
    11d2:	09 59       	subi	r16, 0x99	; 153
    11d4:	1f 4f       	sbci	r17, 0xFF	; 255
    11d6:	bc 01       	movw	r22, r24
    11d8:	cd 01       	movw	r24, r26
    11da:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
    11de:	dc 01       	movw	r26, r24
    11e0:	cb 01       	movw	r24, r22
    11e2:	f8 01       	movw	r30, r16
    11e4:	91 83       	std	Z+1, r25	; 0x01
    11e6:	80 83       	st	Z, r24
    11e8:	24 c0       	rjmp	.+72     	; 0x1232 <__stack+0x133>
    11ea:	ce 01       	movw	r24, r28
    11ec:	87 59       	subi	r24, 0x97	; 151
    11ee:	9f 4f       	sbci	r25, 0xFF	; 255
    11f0:	20 e9       	ldi	r18, 0x90	; 144
    11f2:	31 e0       	ldi	r19, 0x01	; 1
    11f4:	fc 01       	movw	r30, r24
    11f6:	31 83       	std	Z+1, r19	; 0x01
    11f8:	20 83       	st	Z, r18
    11fa:	ce 01       	movw	r24, r28
    11fc:	87 59       	subi	r24, 0x97	; 151
    11fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1200:	fc 01       	movw	r30, r24
    1202:	80 81       	ld	r24, Z
    1204:	91 81       	ldd	r25, Z+1	; 0x01
    1206:	01 97       	sbiw	r24, 0x01	; 1
    1208:	f1 f7       	brne	.-4      	; 0x1206 <__stack+0x107>
    120a:	9e 01       	movw	r18, r28
    120c:	27 59       	subi	r18, 0x97	; 151
    120e:	3f 4f       	sbci	r19, 0xFF	; 255
    1210:	f9 01       	movw	r30, r18
    1212:	91 83       	std	Z+1, r25	; 0x01
    1214:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1216:	ce 01       	movw	r24, r28
    1218:	89 59       	subi	r24, 0x99	; 153
    121a:	9f 4f       	sbci	r25, 0xFF	; 255
    121c:	9e 01       	movw	r18, r28
    121e:	29 59       	subi	r18, 0x99	; 153
    1220:	3f 4f       	sbci	r19, 0xFF	; 255
    1222:	f9 01       	movw	r30, r18
    1224:	20 81       	ld	r18, Z
    1226:	31 81       	ldd	r19, Z+1	; 0x01
    1228:	21 50       	subi	r18, 0x01	; 1
    122a:	31 09       	sbc	r19, r1
    122c:	fc 01       	movw	r30, r24
    122e:	31 83       	std	Z+1, r19	; 0x01
    1230:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1232:	ce 01       	movw	r24, r28
    1234:	89 59       	subi	r24, 0x99	; 153
    1236:	9f 4f       	sbci	r25, 0xFF	; 255
    1238:	fc 01       	movw	r30, r24
    123a:	80 81       	ld	r24, Z
    123c:	91 81       	ldd	r25, Z+1	; 0x01
    123e:	89 2b       	or	r24, r25
    1240:	a1 f6       	brne	.-88     	; 0x11ea <__stack+0xeb>
    1242:	2c c0       	rjmp	.+88     	; 0x129c <__stack+0x19d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1244:	8e 01       	movw	r16, r28
    1246:	09 59       	subi	r16, 0x99	; 153
    1248:	1f 4f       	sbci	r17, 0xFF	; 255
    124a:	ce 01       	movw	r24, r28
    124c:	8d 59       	subi	r24, 0x9D	; 157
    124e:	9f 4f       	sbci	r25, 0xFF	; 255
    1250:	fc 01       	movw	r30, r24
    1252:	60 81       	ld	r22, Z
    1254:	71 81       	ldd	r23, Z+1	; 0x01
    1256:	82 81       	ldd	r24, Z+2	; 0x02
    1258:	93 81       	ldd	r25, Z+3	; 0x03
    125a:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
    125e:	dc 01       	movw	r26, r24
    1260:	cb 01       	movw	r24, r22
    1262:	f8 01       	movw	r30, r16
    1264:	91 83       	std	Z+1, r25	; 0x01
    1266:	80 83       	st	Z, r24
    1268:	ce 01       	movw	r24, r28
    126a:	85 59       	subi	r24, 0x95	; 149
    126c:	9f 4f       	sbci	r25, 0xFF	; 255
    126e:	9e 01       	movw	r18, r28
    1270:	29 59       	subi	r18, 0x99	; 153
    1272:	3f 4f       	sbci	r19, 0xFF	; 255
    1274:	f9 01       	movw	r30, r18
    1276:	20 81       	ld	r18, Z
    1278:	31 81       	ldd	r19, Z+1	; 0x01
    127a:	fc 01       	movw	r30, r24
    127c:	31 83       	std	Z+1, r19	; 0x01
    127e:	20 83       	st	Z, r18
    1280:	ce 01       	movw	r24, r28
    1282:	85 59       	subi	r24, 0x95	; 149
    1284:	9f 4f       	sbci	r25, 0xFF	; 255
    1286:	fc 01       	movw	r30, r24
    1288:	80 81       	ld	r24, Z
    128a:	91 81       	ldd	r25, Z+1	; 0x01
    128c:	01 97       	sbiw	r24, 0x01	; 1
    128e:	f1 f7       	brne	.-4      	; 0x128c <__stack+0x18d>
    1290:	9e 01       	movw	r18, r28
    1292:	25 59       	subi	r18, 0x95	; 149
    1294:	3f 4f       	sbci	r19, 0xFF	; 255
    1296:	f9 01       	movw	r30, r18
    1298:	91 83       	std	Z+1, r25	; 0x01
    129a:	80 83       	st	Z, r24
						_delay_ms(2);
						check++;
    129c:	8d 81       	ldd	r24, Y+5	; 0x05
    129e:	8f 5f       	subi	r24, 0xFF	; 255
    12a0:	8d 83       	std	Y+5, r24	; 0x05
					break;
    12a2:	14 c1       	rjmp	.+552    	; 0x14cc <__stack+0x3cd>
				
					case 'Y':
						recieved_X=(final_data[counter+1]-48)*1000+(final_data[counter+2]-48)*100+(final_data[counter+3]-48)*10+final_data[counter+4]-48;
    12a4:	8e 81       	ldd	r24, Y+6	; 0x06
    12a6:	88 2f       	mov	r24, r24
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	01 96       	adiw	r24, 0x01	; 1
    12ac:	8f 52       	subi	r24, 0x2F	; 47
    12ae:	9d 4f       	sbci	r25, 0xFD	; 253
    12b0:	fc 01       	movw	r30, r24
    12b2:	80 81       	ld	r24, Z
    12b4:	88 2f       	mov	r24, r24
    12b6:	90 e0       	ldi	r25, 0x00	; 0
    12b8:	ac 01       	movw	r20, r24
    12ba:	40 53       	subi	r20, 0x30	; 48
    12bc:	51 09       	sbc	r21, r1
    12be:	88 ee       	ldi	r24, 0xE8	; 232
    12c0:	93 e0       	ldi	r25, 0x03	; 3
    12c2:	48 9f       	mul	r20, r24
    12c4:	90 01       	movw	r18, r0
    12c6:	49 9f       	mul	r20, r25
    12c8:	30 0d       	add	r19, r0
    12ca:	58 9f       	mul	r21, r24
    12cc:	30 0d       	add	r19, r0
    12ce:	11 24       	eor	r1, r1
    12d0:	8e 81       	ldd	r24, Y+6	; 0x06
    12d2:	88 2f       	mov	r24, r24
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	02 96       	adiw	r24, 0x02	; 2
    12d8:	8f 52       	subi	r24, 0x2F	; 47
    12da:	9d 4f       	sbci	r25, 0xFD	; 253
    12dc:	fc 01       	movw	r30, r24
    12de:	80 81       	ld	r24, Z
    12e0:	88 2f       	mov	r24, r24
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	ac 01       	movw	r20, r24
    12e6:	40 53       	subi	r20, 0x30	; 48
    12e8:	51 09       	sbc	r21, r1
    12ea:	64 e6       	ldi	r22, 0x64	; 100
    12ec:	64 9f       	mul	r22, r20
    12ee:	c0 01       	movw	r24, r0
    12f0:	65 9f       	mul	r22, r21
    12f2:	90 0d       	add	r25, r0
    12f4:	11 24       	eor	r1, r1
    12f6:	28 0f       	add	r18, r24
    12f8:	39 1f       	adc	r19, r25
    12fa:	8e 81       	ldd	r24, Y+6	; 0x06
    12fc:	88 2f       	mov	r24, r24
    12fe:	90 e0       	ldi	r25, 0x00	; 0
    1300:	03 96       	adiw	r24, 0x03	; 3
    1302:	8f 52       	subi	r24, 0x2F	; 47
    1304:	9d 4f       	sbci	r25, 0xFD	; 253
    1306:	fc 01       	movw	r30, r24
    1308:	80 81       	ld	r24, Z
    130a:	88 2f       	mov	r24, r24
    130c:	90 e0       	ldi	r25, 0x00	; 0
    130e:	c0 97       	sbiw	r24, 0x30	; 48
    1310:	88 0f       	add	r24, r24
    1312:	99 1f       	adc	r25, r25
    1314:	ac 01       	movw	r20, r24
    1316:	44 0f       	add	r20, r20
    1318:	55 1f       	adc	r21, r21
    131a:	44 0f       	add	r20, r20
    131c:	55 1f       	adc	r21, r21
    131e:	84 0f       	add	r24, r20
    1320:	95 1f       	adc	r25, r21
    1322:	28 0f       	add	r18, r24
    1324:	39 1f       	adc	r19, r25
    1326:	8e 81       	ldd	r24, Y+6	; 0x06
    1328:	88 2f       	mov	r24, r24
    132a:	90 e0       	ldi	r25, 0x00	; 0
    132c:	04 96       	adiw	r24, 0x04	; 4
    132e:	8f 52       	subi	r24, 0x2F	; 47
    1330:	9d 4f       	sbci	r25, 0xFD	; 253
    1332:	fc 01       	movw	r30, r24
    1334:	80 81       	ld	r24, Z
    1336:	88 2f       	mov	r24, r24
    1338:	90 e0       	ldi	r25, 0x00	; 0
    133a:	82 0f       	add	r24, r18
    133c:	93 1f       	adc	r25, r19
    133e:	c0 97       	sbiw	r24, 0x30	; 48
    1340:	9a 83       	std	Y+2, r25	; 0x02
    1342:	89 83       	std	Y+1, r24	; 0x01
						send_Byte_0('1');
    1344:	81 e3       	ldi	r24, 0x31	; 49
    1346:	0e 94 0f 03 	call	0x61e	; 0x61e <send_Byte_0>
    134a:	80 e0       	ldi	r24, 0x00	; 0
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	a0 e0       	ldi	r26, 0x00	; 0
    1350:	b0 e4       	ldi	r27, 0x40	; 64
    1352:	89 8f       	std	Y+25, r24	; 0x19
    1354:	9a 8f       	std	Y+26, r25	; 0x1a
    1356:	ab 8f       	std	Y+27, r26	; 0x1b
    1358:	bc 8f       	std	Y+28, r27	; 0x1c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    135a:	8e 01       	movw	r16, r28
    135c:	03 59       	subi	r16, 0x93	; 147
    135e:	1f 4f       	sbci	r17, 0xFF	; 255
    1360:	20 e0       	ldi	r18, 0x00	; 0
    1362:	30 e0       	ldi	r19, 0x00	; 0
    1364:	4a e7       	ldi	r20, 0x7A	; 122
    1366:	55 e4       	ldi	r21, 0x45	; 69
    1368:	69 8d       	ldd	r22, Y+25	; 0x19
    136a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    136c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    136e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1370:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
    1374:	dc 01       	movw	r26, r24
    1376:	cb 01       	movw	r24, r22
    1378:	f8 01       	movw	r30, r16
    137a:	80 83       	st	Z, r24
    137c:	91 83       	std	Z+1, r25	; 0x01
    137e:	a2 83       	std	Z+2, r26	; 0x02
    1380:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1382:	ce 01       	movw	r24, r28
    1384:	83 59       	subi	r24, 0x93	; 147
    1386:	9f 4f       	sbci	r25, 0xFF	; 255
    1388:	20 e0       	ldi	r18, 0x00	; 0
    138a:	30 e0       	ldi	r19, 0x00	; 0
    138c:	40 e8       	ldi	r20, 0x80	; 128
    138e:	5f e3       	ldi	r21, 0x3F	; 63
    1390:	fc 01       	movw	r30, r24
    1392:	60 81       	ld	r22, Z
    1394:	71 81       	ldd	r23, Z+1	; 0x01
    1396:	82 81       	ldd	r24, Z+2	; 0x02
    1398:	93 81       	ldd	r25, Z+3	; 0x03
    139a:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <__cmpsf2>
    139e:	88 23       	and	r24, r24
    13a0:	4c f4       	brge	.+18     	; 0x13b4 <__stack+0x2b5>
		__ticks = 1;
    13a2:	ce 01       	movw	r24, r28
    13a4:	8f 58       	subi	r24, 0x8F	; 143
    13a6:	9f 4f       	sbci	r25, 0xFF	; 255
    13a8:	21 e0       	ldi	r18, 0x01	; 1
    13aa:	30 e0       	ldi	r19, 0x00	; 0
    13ac:	fc 01       	movw	r30, r24
    13ae:	31 83       	std	Z+1, r19	; 0x01
    13b0:	20 83       	st	Z, r18
    13b2:	69 c0       	rjmp	.+210    	; 0x1486 <__stack+0x387>
	else if (__tmp > 65535)
    13b4:	ce 01       	movw	r24, r28
    13b6:	83 59       	subi	r24, 0x93	; 147
    13b8:	9f 4f       	sbci	r25, 0xFF	; 255
    13ba:	20 e0       	ldi	r18, 0x00	; 0
    13bc:	3f ef       	ldi	r19, 0xFF	; 255
    13be:	4f e7       	ldi	r20, 0x7F	; 127
    13c0:	57 e4       	ldi	r21, 0x47	; 71
    13c2:	fc 01       	movw	r30, r24
    13c4:	60 81       	ld	r22, Z
    13c6:	71 81       	ldd	r23, Z+1	; 0x01
    13c8:	82 81       	ldd	r24, Z+2	; 0x02
    13ca:	93 81       	ldd	r25, Z+3	; 0x03
    13cc:	0e 94 0f 11 	call	0x221e	; 0x221e <__gesf2>
    13d0:	18 16       	cp	r1, r24
    13d2:	0c f0       	brlt	.+2      	; 0x13d6 <__stack+0x2d7>
    13d4:	46 c0       	rjmp	.+140    	; 0x1462 <__stack+0x363>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13d6:	20 e0       	ldi	r18, 0x00	; 0
    13d8:	30 e0       	ldi	r19, 0x00	; 0
    13da:	40 e2       	ldi	r20, 0x20	; 32
    13dc:	51 e4       	ldi	r21, 0x41	; 65
    13de:	69 8d       	ldd	r22, Y+25	; 0x19
    13e0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    13e2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    13e4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    13e6:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
    13ea:	dc 01       	movw	r26, r24
    13ec:	cb 01       	movw	r24, r22
    13ee:	8e 01       	movw	r16, r28
    13f0:	0f 58       	subi	r16, 0x8F	; 143
    13f2:	1f 4f       	sbci	r17, 0xFF	; 255
    13f4:	bc 01       	movw	r22, r24
    13f6:	cd 01       	movw	r24, r26
    13f8:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
    13fc:	dc 01       	movw	r26, r24
    13fe:	cb 01       	movw	r24, r22
    1400:	f8 01       	movw	r30, r16
    1402:	91 83       	std	Z+1, r25	; 0x01
    1404:	80 83       	st	Z, r24
    1406:	24 c0       	rjmp	.+72     	; 0x1450 <__stack+0x351>
    1408:	ce 01       	movw	r24, r28
    140a:	8d 58       	subi	r24, 0x8D	; 141
    140c:	9f 4f       	sbci	r25, 0xFF	; 255
    140e:	20 e9       	ldi	r18, 0x90	; 144
    1410:	31 e0       	ldi	r19, 0x01	; 1
    1412:	fc 01       	movw	r30, r24
    1414:	31 83       	std	Z+1, r19	; 0x01
    1416:	20 83       	st	Z, r18
    1418:	ce 01       	movw	r24, r28
    141a:	8d 58       	subi	r24, 0x8D	; 141
    141c:	9f 4f       	sbci	r25, 0xFF	; 255
    141e:	fc 01       	movw	r30, r24
    1420:	80 81       	ld	r24, Z
    1422:	91 81       	ldd	r25, Z+1	; 0x01
    1424:	01 97       	sbiw	r24, 0x01	; 1
    1426:	f1 f7       	brne	.-4      	; 0x1424 <__stack+0x325>
    1428:	9e 01       	movw	r18, r28
    142a:	2d 58       	subi	r18, 0x8D	; 141
    142c:	3f 4f       	sbci	r19, 0xFF	; 255
    142e:	f9 01       	movw	r30, r18
    1430:	91 83       	std	Z+1, r25	; 0x01
    1432:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1434:	ce 01       	movw	r24, r28
    1436:	8f 58       	subi	r24, 0x8F	; 143
    1438:	9f 4f       	sbci	r25, 0xFF	; 255
    143a:	9e 01       	movw	r18, r28
    143c:	2f 58       	subi	r18, 0x8F	; 143
    143e:	3f 4f       	sbci	r19, 0xFF	; 255
    1440:	f9 01       	movw	r30, r18
    1442:	20 81       	ld	r18, Z
    1444:	31 81       	ldd	r19, Z+1	; 0x01
    1446:	21 50       	subi	r18, 0x01	; 1
    1448:	31 09       	sbc	r19, r1
    144a:	fc 01       	movw	r30, r24
    144c:	31 83       	std	Z+1, r19	; 0x01
    144e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1450:	ce 01       	movw	r24, r28
    1452:	8f 58       	subi	r24, 0x8F	; 143
    1454:	9f 4f       	sbci	r25, 0xFF	; 255
    1456:	fc 01       	movw	r30, r24
    1458:	80 81       	ld	r24, Z
    145a:	91 81       	ldd	r25, Z+1	; 0x01
    145c:	89 2b       	or	r24, r25
    145e:	a1 f6       	brne	.-88     	; 0x1408 <__stack+0x309>
    1460:	2c c0       	rjmp	.+88     	; 0x14ba <__stack+0x3bb>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1462:	8e 01       	movw	r16, r28
    1464:	0f 58       	subi	r16, 0x8F	; 143
    1466:	1f 4f       	sbci	r17, 0xFF	; 255
    1468:	ce 01       	movw	r24, r28
    146a:	83 59       	subi	r24, 0x93	; 147
    146c:	9f 4f       	sbci	r25, 0xFF	; 255
    146e:	fc 01       	movw	r30, r24
    1470:	60 81       	ld	r22, Z
    1472:	71 81       	ldd	r23, Z+1	; 0x01
    1474:	82 81       	ldd	r24, Z+2	; 0x02
    1476:	93 81       	ldd	r25, Z+3	; 0x03
    1478:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
    147c:	dc 01       	movw	r26, r24
    147e:	cb 01       	movw	r24, r22
    1480:	f8 01       	movw	r30, r16
    1482:	91 83       	std	Z+1, r25	; 0x01
    1484:	80 83       	st	Z, r24
    1486:	ce 01       	movw	r24, r28
    1488:	8b 58       	subi	r24, 0x8B	; 139
    148a:	9f 4f       	sbci	r25, 0xFF	; 255
    148c:	9e 01       	movw	r18, r28
    148e:	2f 58       	subi	r18, 0x8F	; 143
    1490:	3f 4f       	sbci	r19, 0xFF	; 255
    1492:	f9 01       	movw	r30, r18
    1494:	20 81       	ld	r18, Z
    1496:	31 81       	ldd	r19, Z+1	; 0x01
    1498:	fc 01       	movw	r30, r24
    149a:	31 83       	std	Z+1, r19	; 0x01
    149c:	20 83       	st	Z, r18
    149e:	ce 01       	movw	r24, r28
    14a0:	8b 58       	subi	r24, 0x8B	; 139
    14a2:	9f 4f       	sbci	r25, 0xFF	; 255
    14a4:	fc 01       	movw	r30, r24
    14a6:	80 81       	ld	r24, Z
    14a8:	91 81       	ldd	r25, Z+1	; 0x01
    14aa:	01 97       	sbiw	r24, 0x01	; 1
    14ac:	f1 f7       	brne	.-4      	; 0x14aa <__stack+0x3ab>
    14ae:	9e 01       	movw	r18, r28
    14b0:	2b 58       	subi	r18, 0x8B	; 139
    14b2:	3f 4f       	sbci	r19, 0xFF	; 255
    14b4:	f9 01       	movw	r30, r18
    14b6:	91 83       	std	Z+1, r25	; 0x01
    14b8:	80 83       	st	Z, r24
						_delay_ms(2);
						check++;
    14ba:	8d 81       	ldd	r24, Y+5	; 0x05
    14bc:	8f 5f       	subi	r24, 0xFF	; 255
    14be:	8d 83       	std	Y+5, r24	; 0x05
					break;
    14c0:	05 c0       	rjmp	.+10     	; 0x14cc <__stack+0x3cd>
						
					case 'O':
					routine_done=1;
    14c2:	81 e0       	ldi	r24, 0x01	; 1
    14c4:	8f 83       	std	Y+7, r24	; 0x07
					check++;	
    14c6:	8d 81       	ldd	r24, Y+5	; 0x05
    14c8:	8f 5f       	subi	r24, 0xFF	; 255
    14ca:	8d 83       	std	Y+5, r24	; 0x05
		if (uart_str_complete!=0)
		{
			routine_done=0;
			uart_str_complete=0;
			send_Byte_0('1');	
			for (counter=0;counter<=data_bytes_recieved;counter++)
    14cc:	8e 81       	ldd	r24, Y+6	; 0x06
    14ce:	8f 5f       	subi	r24, 0xFF	; 255
    14d0:	8e 83       	std	Y+6, r24	; 0x06
    14d2:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <data_bytes_recieved>
    14d6:	9e 81       	ldd	r25, Y+6	; 0x06
    14d8:	89 17       	cp	r24, r25
    14da:	08 f0       	brcs	.+2      	; 0x14de <__stack+0x3df>
    14dc:	bf cd       	rjmp	.-1154   	; 0x105c <main+0x7c0>
					case 'O':
					routine_done=1;
					check++;	
				}
			}
			data_bytes_recieved=0;
    14de:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <data_bytes_recieved>
			if ((check==0)||(check>2))
    14e2:	8d 81       	ldd	r24, Y+5	; 0x05
    14e4:	88 23       	and	r24, r24
    14e6:	19 f0       	breq	.+6      	; 0x14ee <__stack+0x3ef>
    14e8:	8d 81       	ldd	r24, Y+5	; 0x05
    14ea:	83 30       	cpi	r24, 0x03	; 3
    14ec:	20 f0       	brcs	.+8      	; 0x14f6 <__stack+0x3f7>
			{
				send_Byte_0('0');
    14ee:	80 e3       	ldi	r24, 0x30	; 48
    14f0:	0e 94 0f 03 	call	0x61e	; 0x61e <send_Byte_0>
    14f4:	01 c0       	rjmp	.+2      	; 0x14f8 <__stack+0x3f9>
			}
			else
			{
				check=0;
    14f6:	1d 82       	std	Y+5, r1	; 0x05
			}
			if (routine_done>=1)
    14f8:	8f 81       	ldd	r24, Y+7	; 0x07
    14fa:	88 23       	and	r24, r24
    14fc:	09 f4       	brne	.+2      	; 0x1500 <__stack+0x401>
    14fe:	94 c1       	rjmp	.+808    	; 0x1828 <__stack+0x729>
			{
				send_to_uArm("G0 X200 Y0 Z150 F6000\n");
    1500:	8e e6       	ldi	r24, 0x6E	; 110
    1502:	91 e0       	ldi	r25, 0x01	; 1
    1504:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <send_to_uArm>
				routine_done=0;
    1508:	1f 82       	std	Y+7, r1	; 0x07
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    150a:	04 c0       	rjmp	.+8      	; 0x1514 <__stack+0x415>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
    150c:	80 e0       	ldi	r24, 0x00	; 0
    150e:	91 e0       	ldi	r25, 0x01	; 1
    1510:	0e 94 45 03 	call	0x68a	; 0x68a <to_uARM>
			}
			if (routine_done>=1)
			{
				send_to_uArm("G0 X200 Y0 Z150 F6000\n");
				routine_done=0;
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    1514:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <uart_string1+0x4>
    1518:	81 33       	cpi	r24, 0x31	; 49
    151a:	c1 f3       	breq	.-16     	; 0x150c <__stack+0x40d>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
				}
				if (DIP_Switch&0x01)
    151c:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <__data_end>
    1520:	88 2f       	mov	r24, r24
    1522:	90 e0       	ldi	r25, 0x00	; 0
    1524:	81 70       	andi	r24, 0x01	; 1
    1526:	99 27       	eor	r25, r25
    1528:	89 2b       	or	r24, r25
    152a:	09 f4       	brne	.+2      	; 0x152e <__stack+0x42f>
    152c:	e9 cb       	rjmp	.-2094   	; 0xd00 <main+0x464>
				{
					to_uARM("M2210 F500 T200\n");
    152e:	85 e8       	ldi	r24, 0x85	; 133
    1530:	91 e0       	ldi	r25, 0x01	; 1
    1532:	0e 94 45 03 	call	0x68a	; 0x68a <to_uARM>
    1536:	80 e0       	ldi	r24, 0x00	; 0
    1538:	90 e0       	ldi	r25, 0x00	; 0
    153a:	a8 e4       	ldi	r26, 0x48	; 72
    153c:	b3 e4       	ldi	r27, 0x43	; 67
    153e:	89 a3       	std	Y+33, r24	; 0x21
    1540:	9a a3       	std	Y+34, r25	; 0x22
    1542:	ab a3       	std	Y+35, r26	; 0x23
    1544:	bc a3       	std	Y+36, r27	; 0x24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1546:	8e 01       	movw	r16, r28
    1548:	0f 57       	subi	r16, 0x7F	; 127
    154a:	1f 4f       	sbci	r17, 0xFF	; 255
    154c:	20 e0       	ldi	r18, 0x00	; 0
    154e:	30 e0       	ldi	r19, 0x00	; 0
    1550:	4a e7       	ldi	r20, 0x7A	; 122
    1552:	55 e4       	ldi	r21, 0x45	; 69
    1554:	69 a1       	ldd	r22, Y+33	; 0x21
    1556:	7a a1       	ldd	r23, Y+34	; 0x22
    1558:	8b a1       	ldd	r24, Y+35	; 0x23
    155a:	9c a1       	ldd	r25, Y+36	; 0x24
    155c:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
    1560:	dc 01       	movw	r26, r24
    1562:	cb 01       	movw	r24, r22
    1564:	f8 01       	movw	r30, r16
    1566:	80 83       	st	Z, r24
    1568:	91 83       	std	Z+1, r25	; 0x01
    156a:	a2 83       	std	Z+2, r26	; 0x02
    156c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    156e:	ce 01       	movw	r24, r28
    1570:	8f 57       	subi	r24, 0x7F	; 127
    1572:	9f 4f       	sbci	r25, 0xFF	; 255
    1574:	20 e0       	ldi	r18, 0x00	; 0
    1576:	30 e0       	ldi	r19, 0x00	; 0
    1578:	40 e8       	ldi	r20, 0x80	; 128
    157a:	5f e3       	ldi	r21, 0x3F	; 63
    157c:	fc 01       	movw	r30, r24
    157e:	60 81       	ld	r22, Z
    1580:	71 81       	ldd	r23, Z+1	; 0x01
    1582:	82 81       	ldd	r24, Z+2	; 0x02
    1584:	93 81       	ldd	r25, Z+3	; 0x03
    1586:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <__cmpsf2>
    158a:	88 23       	and	r24, r24
    158c:	4c f4       	brge	.+18     	; 0x15a0 <__stack+0x4a1>
		__ticks = 1;
    158e:	ce 01       	movw	r24, r28
    1590:	8b 57       	subi	r24, 0x7B	; 123
    1592:	9f 4f       	sbci	r25, 0xFF	; 255
    1594:	21 e0       	ldi	r18, 0x01	; 1
    1596:	30 e0       	ldi	r19, 0x00	; 0
    1598:	fc 01       	movw	r30, r24
    159a:	31 83       	std	Z+1, r19	; 0x01
    159c:	20 83       	st	Z, r18
    159e:	69 c0       	rjmp	.+210    	; 0x1672 <__stack+0x573>
	else if (__tmp > 65535)
    15a0:	ce 01       	movw	r24, r28
    15a2:	8f 57       	subi	r24, 0x7F	; 127
    15a4:	9f 4f       	sbci	r25, 0xFF	; 255
    15a6:	20 e0       	ldi	r18, 0x00	; 0
    15a8:	3f ef       	ldi	r19, 0xFF	; 255
    15aa:	4f e7       	ldi	r20, 0x7F	; 127
    15ac:	57 e4       	ldi	r21, 0x47	; 71
    15ae:	fc 01       	movw	r30, r24
    15b0:	60 81       	ld	r22, Z
    15b2:	71 81       	ldd	r23, Z+1	; 0x01
    15b4:	82 81       	ldd	r24, Z+2	; 0x02
    15b6:	93 81       	ldd	r25, Z+3	; 0x03
    15b8:	0e 94 0f 11 	call	0x221e	; 0x221e <__gesf2>
    15bc:	18 16       	cp	r1, r24
    15be:	0c f0       	brlt	.+2      	; 0x15c2 <__stack+0x4c3>
    15c0:	46 c0       	rjmp	.+140    	; 0x164e <__stack+0x54f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15c2:	20 e0       	ldi	r18, 0x00	; 0
    15c4:	30 e0       	ldi	r19, 0x00	; 0
    15c6:	40 e2       	ldi	r20, 0x20	; 32
    15c8:	51 e4       	ldi	r21, 0x41	; 65
    15ca:	69 a1       	ldd	r22, Y+33	; 0x21
    15cc:	7a a1       	ldd	r23, Y+34	; 0x22
    15ce:	8b a1       	ldd	r24, Y+35	; 0x23
    15d0:	9c a1       	ldd	r25, Y+36	; 0x24
    15d2:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
    15d6:	dc 01       	movw	r26, r24
    15d8:	cb 01       	movw	r24, r22
    15da:	8e 01       	movw	r16, r28
    15dc:	0b 57       	subi	r16, 0x7B	; 123
    15de:	1f 4f       	sbci	r17, 0xFF	; 255
    15e0:	bc 01       	movw	r22, r24
    15e2:	cd 01       	movw	r24, r26
    15e4:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
    15e8:	dc 01       	movw	r26, r24
    15ea:	cb 01       	movw	r24, r22
    15ec:	f8 01       	movw	r30, r16
    15ee:	91 83       	std	Z+1, r25	; 0x01
    15f0:	80 83       	st	Z, r24
    15f2:	24 c0       	rjmp	.+72     	; 0x163c <__stack+0x53d>
    15f4:	ce 01       	movw	r24, r28
    15f6:	89 57       	subi	r24, 0x79	; 121
    15f8:	9f 4f       	sbci	r25, 0xFF	; 255
    15fa:	20 e9       	ldi	r18, 0x90	; 144
    15fc:	31 e0       	ldi	r19, 0x01	; 1
    15fe:	fc 01       	movw	r30, r24
    1600:	31 83       	std	Z+1, r19	; 0x01
    1602:	20 83       	st	Z, r18
    1604:	ce 01       	movw	r24, r28
    1606:	89 57       	subi	r24, 0x79	; 121
    1608:	9f 4f       	sbci	r25, 0xFF	; 255
    160a:	fc 01       	movw	r30, r24
    160c:	80 81       	ld	r24, Z
    160e:	91 81       	ldd	r25, Z+1	; 0x01
    1610:	01 97       	sbiw	r24, 0x01	; 1
    1612:	f1 f7       	brne	.-4      	; 0x1610 <__stack+0x511>
    1614:	9e 01       	movw	r18, r28
    1616:	29 57       	subi	r18, 0x79	; 121
    1618:	3f 4f       	sbci	r19, 0xFF	; 255
    161a:	f9 01       	movw	r30, r18
    161c:	91 83       	std	Z+1, r25	; 0x01
    161e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1620:	ce 01       	movw	r24, r28
    1622:	8b 57       	subi	r24, 0x7B	; 123
    1624:	9f 4f       	sbci	r25, 0xFF	; 255
    1626:	9e 01       	movw	r18, r28
    1628:	2b 57       	subi	r18, 0x7B	; 123
    162a:	3f 4f       	sbci	r19, 0xFF	; 255
    162c:	f9 01       	movw	r30, r18
    162e:	20 81       	ld	r18, Z
    1630:	31 81       	ldd	r19, Z+1	; 0x01
    1632:	21 50       	subi	r18, 0x01	; 1
    1634:	31 09       	sbc	r19, r1
    1636:	fc 01       	movw	r30, r24
    1638:	31 83       	std	Z+1, r19	; 0x01
    163a:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    163c:	ce 01       	movw	r24, r28
    163e:	8b 57       	subi	r24, 0x7B	; 123
    1640:	9f 4f       	sbci	r25, 0xFF	; 255
    1642:	fc 01       	movw	r30, r24
    1644:	80 81       	ld	r24, Z
    1646:	91 81       	ldd	r25, Z+1	; 0x01
    1648:	89 2b       	or	r24, r25
    164a:	a1 f6       	brne	.-88     	; 0x15f4 <__stack+0x4f5>
    164c:	2c c0       	rjmp	.+88     	; 0x16a6 <__stack+0x5a7>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    164e:	8e 01       	movw	r16, r28
    1650:	0b 57       	subi	r16, 0x7B	; 123
    1652:	1f 4f       	sbci	r17, 0xFF	; 255
    1654:	ce 01       	movw	r24, r28
    1656:	8f 57       	subi	r24, 0x7F	; 127
    1658:	9f 4f       	sbci	r25, 0xFF	; 255
    165a:	fc 01       	movw	r30, r24
    165c:	60 81       	ld	r22, Z
    165e:	71 81       	ldd	r23, Z+1	; 0x01
    1660:	82 81       	ldd	r24, Z+2	; 0x02
    1662:	93 81       	ldd	r25, Z+3	; 0x03
    1664:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
    1668:	dc 01       	movw	r26, r24
    166a:	cb 01       	movw	r24, r22
    166c:	f8 01       	movw	r30, r16
    166e:	91 83       	std	Z+1, r25	; 0x01
    1670:	80 83       	st	Z, r24
    1672:	ce 01       	movw	r24, r28
    1674:	87 57       	subi	r24, 0x77	; 119
    1676:	9f 4f       	sbci	r25, 0xFF	; 255
    1678:	9e 01       	movw	r18, r28
    167a:	2b 57       	subi	r18, 0x7B	; 123
    167c:	3f 4f       	sbci	r19, 0xFF	; 255
    167e:	f9 01       	movw	r30, r18
    1680:	20 81       	ld	r18, Z
    1682:	31 81       	ldd	r19, Z+1	; 0x01
    1684:	fc 01       	movw	r30, r24
    1686:	31 83       	std	Z+1, r19	; 0x01
    1688:	20 83       	st	Z, r18
    168a:	ce 01       	movw	r24, r28
    168c:	87 57       	subi	r24, 0x77	; 119
    168e:	9f 4f       	sbci	r25, 0xFF	; 255
    1690:	fc 01       	movw	r30, r24
    1692:	80 81       	ld	r24, Z
    1694:	91 81       	ldd	r25, Z+1	; 0x01
    1696:	01 97       	sbiw	r24, 0x01	; 1
    1698:	f1 f7       	brne	.-4      	; 0x1696 <__stack+0x597>
    169a:	9e 01       	movw	r18, r28
    169c:	27 57       	subi	r18, 0x77	; 119
    169e:	3f 4f       	sbci	r19, 0xFF	; 255
    16a0:	f9 01       	movw	r30, r18
    16a2:	91 83       	std	Z+1, r25	; 0x01
    16a4:	80 83       	st	Z, r24
					_delay_ms(200);
					to_uARM("M2210 F1000 T500\n");
    16a6:	86 e9       	ldi	r24, 0x96	; 150
    16a8:	91 e0       	ldi	r25, 0x01	; 1
    16aa:	0e 94 45 03 	call	0x68a	; 0x68a <to_uARM>
    16ae:	80 e0       	ldi	r24, 0x00	; 0
    16b0:	90 e0       	ldi	r25, 0x00	; 0
    16b2:	aa ef       	ldi	r26, 0xFA	; 250
    16b4:	b3 e4       	ldi	r27, 0x43	; 67
    16b6:	8d 8f       	std	Y+29, r24	; 0x1d
    16b8:	9e 8f       	std	Y+30, r25	; 0x1e
    16ba:	af 8f       	std	Y+31, r26	; 0x1f
    16bc:	b8 a3       	std	Y+32, r27	; 0x20

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    16be:	8e 01       	movw	r16, r28
    16c0:	09 58       	subi	r16, 0x89	; 137
    16c2:	1f 4f       	sbci	r17, 0xFF	; 255
    16c4:	20 e0       	ldi	r18, 0x00	; 0
    16c6:	30 e0       	ldi	r19, 0x00	; 0
    16c8:	4a e7       	ldi	r20, 0x7A	; 122
    16ca:	55 e4       	ldi	r21, 0x45	; 69
    16cc:	6d 8d       	ldd	r22, Y+29	; 0x1d
    16ce:	7e 8d       	ldd	r23, Y+30	; 0x1e
    16d0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    16d2:	98 a1       	ldd	r25, Y+32	; 0x20
    16d4:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
    16d8:	dc 01       	movw	r26, r24
    16da:	cb 01       	movw	r24, r22
    16dc:	f8 01       	movw	r30, r16
    16de:	80 83       	st	Z, r24
    16e0:	91 83       	std	Z+1, r25	; 0x01
    16e2:	a2 83       	std	Z+2, r26	; 0x02
    16e4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    16e6:	ce 01       	movw	r24, r28
    16e8:	89 58       	subi	r24, 0x89	; 137
    16ea:	9f 4f       	sbci	r25, 0xFF	; 255
    16ec:	20 e0       	ldi	r18, 0x00	; 0
    16ee:	30 e0       	ldi	r19, 0x00	; 0
    16f0:	40 e8       	ldi	r20, 0x80	; 128
    16f2:	5f e3       	ldi	r21, 0x3F	; 63
    16f4:	fc 01       	movw	r30, r24
    16f6:	60 81       	ld	r22, Z
    16f8:	71 81       	ldd	r23, Z+1	; 0x01
    16fa:	82 81       	ldd	r24, Z+2	; 0x02
    16fc:	93 81       	ldd	r25, Z+3	; 0x03
    16fe:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <__cmpsf2>
    1702:	88 23       	and	r24, r24
    1704:	4c f4       	brge	.+18     	; 0x1718 <__stack+0x619>
		__ticks = 1;
    1706:	ce 01       	movw	r24, r28
    1708:	85 58       	subi	r24, 0x85	; 133
    170a:	9f 4f       	sbci	r25, 0xFF	; 255
    170c:	21 e0       	ldi	r18, 0x01	; 1
    170e:	30 e0       	ldi	r19, 0x00	; 0
    1710:	fc 01       	movw	r30, r24
    1712:	31 83       	std	Z+1, r19	; 0x01
    1714:	20 83       	st	Z, r18
    1716:	69 c0       	rjmp	.+210    	; 0x17ea <__stack+0x6eb>
	else if (__tmp > 65535)
    1718:	ce 01       	movw	r24, r28
    171a:	89 58       	subi	r24, 0x89	; 137
    171c:	9f 4f       	sbci	r25, 0xFF	; 255
    171e:	20 e0       	ldi	r18, 0x00	; 0
    1720:	3f ef       	ldi	r19, 0xFF	; 255
    1722:	4f e7       	ldi	r20, 0x7F	; 127
    1724:	57 e4       	ldi	r21, 0x47	; 71
    1726:	fc 01       	movw	r30, r24
    1728:	60 81       	ld	r22, Z
    172a:	71 81       	ldd	r23, Z+1	; 0x01
    172c:	82 81       	ldd	r24, Z+2	; 0x02
    172e:	93 81       	ldd	r25, Z+3	; 0x03
    1730:	0e 94 0f 11 	call	0x221e	; 0x221e <__gesf2>
    1734:	18 16       	cp	r1, r24
    1736:	0c f0       	brlt	.+2      	; 0x173a <__stack+0x63b>
    1738:	46 c0       	rjmp	.+140    	; 0x17c6 <__stack+0x6c7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    173a:	20 e0       	ldi	r18, 0x00	; 0
    173c:	30 e0       	ldi	r19, 0x00	; 0
    173e:	40 e2       	ldi	r20, 0x20	; 32
    1740:	51 e4       	ldi	r21, 0x41	; 65
    1742:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1744:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1746:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1748:	98 a1       	ldd	r25, Y+32	; 0x20
    174a:	0e 94 14 11 	call	0x2228	; 0x2228 <__mulsf3>
    174e:	dc 01       	movw	r26, r24
    1750:	cb 01       	movw	r24, r22
    1752:	8e 01       	movw	r16, r28
    1754:	05 58       	subi	r16, 0x85	; 133
    1756:	1f 4f       	sbci	r17, 0xFF	; 255
    1758:	bc 01       	movw	r22, r24
    175a:	cd 01       	movw	r24, r26
    175c:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
    1760:	dc 01       	movw	r26, r24
    1762:	cb 01       	movw	r24, r22
    1764:	f8 01       	movw	r30, r16
    1766:	91 83       	std	Z+1, r25	; 0x01
    1768:	80 83       	st	Z, r24
    176a:	24 c0       	rjmp	.+72     	; 0x17b4 <__stack+0x6b5>
    176c:	ce 01       	movw	r24, r28
    176e:	83 58       	subi	r24, 0x83	; 131
    1770:	9f 4f       	sbci	r25, 0xFF	; 255
    1772:	20 e9       	ldi	r18, 0x90	; 144
    1774:	31 e0       	ldi	r19, 0x01	; 1
    1776:	fc 01       	movw	r30, r24
    1778:	31 83       	std	Z+1, r19	; 0x01
    177a:	20 83       	st	Z, r18
    177c:	ce 01       	movw	r24, r28
    177e:	83 58       	subi	r24, 0x83	; 131
    1780:	9f 4f       	sbci	r25, 0xFF	; 255
    1782:	fc 01       	movw	r30, r24
    1784:	80 81       	ld	r24, Z
    1786:	91 81       	ldd	r25, Z+1	; 0x01
    1788:	01 97       	sbiw	r24, 0x01	; 1
    178a:	f1 f7       	brne	.-4      	; 0x1788 <__stack+0x689>
    178c:	9e 01       	movw	r18, r28
    178e:	23 58       	subi	r18, 0x83	; 131
    1790:	3f 4f       	sbci	r19, 0xFF	; 255
    1792:	f9 01       	movw	r30, r18
    1794:	91 83       	std	Z+1, r25	; 0x01
    1796:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1798:	ce 01       	movw	r24, r28
    179a:	85 58       	subi	r24, 0x85	; 133
    179c:	9f 4f       	sbci	r25, 0xFF	; 255
    179e:	9e 01       	movw	r18, r28
    17a0:	25 58       	subi	r18, 0x85	; 133
    17a2:	3f 4f       	sbci	r19, 0xFF	; 255
    17a4:	f9 01       	movw	r30, r18
    17a6:	20 81       	ld	r18, Z
    17a8:	31 81       	ldd	r19, Z+1	; 0x01
    17aa:	21 50       	subi	r18, 0x01	; 1
    17ac:	31 09       	sbc	r19, r1
    17ae:	fc 01       	movw	r30, r24
    17b0:	31 83       	std	Z+1, r19	; 0x01
    17b2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17b4:	ce 01       	movw	r24, r28
    17b6:	85 58       	subi	r24, 0x85	; 133
    17b8:	9f 4f       	sbci	r25, 0xFF	; 255
    17ba:	fc 01       	movw	r30, r24
    17bc:	80 81       	ld	r24, Z
    17be:	91 81       	ldd	r25, Z+1	; 0x01
    17c0:	89 2b       	or	r24, r25
    17c2:	a1 f6       	brne	.-88     	; 0x176c <__stack+0x66d>
    17c4:	2c c0       	rjmp	.+88     	; 0x181e <__stack+0x71f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17c6:	8e 01       	movw	r16, r28
    17c8:	05 58       	subi	r16, 0x85	; 133
    17ca:	1f 4f       	sbci	r17, 0xFF	; 255
    17cc:	ce 01       	movw	r24, r28
    17ce:	89 58       	subi	r24, 0x89	; 137
    17d0:	9f 4f       	sbci	r25, 0xFF	; 255
    17d2:	fc 01       	movw	r30, r24
    17d4:	60 81       	ld	r22, Z
    17d6:	71 81       	ldd	r23, Z+1	; 0x01
    17d8:	82 81       	ldd	r24, Z+2	; 0x02
    17da:	93 81       	ldd	r25, Z+3	; 0x03
    17dc:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fixunssfsi>
    17e0:	dc 01       	movw	r26, r24
    17e2:	cb 01       	movw	r24, r22
    17e4:	f8 01       	movw	r30, r16
    17e6:	91 83       	std	Z+1, r25	; 0x01
    17e8:	80 83       	st	Z, r24
    17ea:	ce 01       	movw	r24, r28
    17ec:	81 58       	subi	r24, 0x81	; 129
    17ee:	9f 4f       	sbci	r25, 0xFF	; 255
    17f0:	9e 01       	movw	r18, r28
    17f2:	25 58       	subi	r18, 0x85	; 133
    17f4:	3f 4f       	sbci	r19, 0xFF	; 255
    17f6:	f9 01       	movw	r30, r18
    17f8:	20 81       	ld	r18, Z
    17fa:	31 81       	ldd	r19, Z+1	; 0x01
    17fc:	fc 01       	movw	r30, r24
    17fe:	31 83       	std	Z+1, r19	; 0x01
    1800:	20 83       	st	Z, r18
    1802:	ce 01       	movw	r24, r28
    1804:	81 58       	subi	r24, 0x81	; 129
    1806:	9f 4f       	sbci	r25, 0xFF	; 255
    1808:	fc 01       	movw	r30, r24
    180a:	80 81       	ld	r24, Z
    180c:	91 81       	ldd	r25, Z+1	; 0x01
    180e:	01 97       	sbiw	r24, 0x01	; 1
    1810:	f1 f7       	brne	.-4      	; 0x180e <__stack+0x70f>
    1812:	9e 01       	movw	r18, r28
    1814:	21 58       	subi	r18, 0x81	; 129
    1816:	3f 4f       	sbci	r19, 0xFF	; 255
    1818:	f9 01       	movw	r30, r18
    181a:	91 83       	std	Z+1, r25	; 0x01
    181c:	80 83       	st	Z, r24
					_delay_ms(500);
					to_uARM("M2210 F2000 T500\n");
    181e:	88 ea       	ldi	r24, 0xA8	; 168
    1820:	91 e0       	ldi	r25, 0x01	; 1
    1822:	0e 94 45 03 	call	0x68a	; 0x68a <to_uARM>
    1826:	6c ca       	rjmp	.-2856   	; 0xd00 <main+0x464>
				}
			}
			else
			{
				if (DIP_Switch&0x80)
    1828:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <__data_end>
    182c:	88 23       	and	r24, r24
    182e:	f4 f4       	brge	.+60     	; 0x186c <__stack+0x76d>
				{
					write_zahl(2,10,recieved_X,4,0,0);
    1830:	89 81       	ldd	r24, Y+1	; 0x01
    1832:	9a 81       	ldd	r25, Y+2	; 0x02
    1834:	09 2e       	mov	r0, r25
    1836:	00 0c       	add	r0, r0
    1838:	aa 0b       	sbc	r26, r26
    183a:	bb 0b       	sbc	r27, r27
    183c:	c1 2c       	mov	r12, r1
    183e:	e1 2c       	mov	r14, r1
    1840:	04 e0       	ldi	r16, 0x04	; 4
    1842:	9c 01       	movw	r18, r24
    1844:	ad 01       	movw	r20, r26
    1846:	6a e0       	ldi	r22, 0x0A	; 10
    1848:	82 e0       	ldi	r24, 0x02	; 2
    184a:	0e 94 36 0e 	call	0x1c6c	; 0x1c6c <write_zahl>
					write_zahl(3,10,recieved_Y,4,0,0);
    184e:	8b 81       	ldd	r24, Y+3	; 0x03
    1850:	9c 81       	ldd	r25, Y+4	; 0x04
    1852:	09 2e       	mov	r0, r25
    1854:	00 0c       	add	r0, r0
    1856:	aa 0b       	sbc	r26, r26
    1858:	bb 0b       	sbc	r27, r27
    185a:	c1 2c       	mov	r12, r1
    185c:	e1 2c       	mov	r14, r1
    185e:	04 e0       	ldi	r16, 0x04	; 4
    1860:	9c 01       	movw	r18, r24
    1862:	ad 01       	movw	r20, r26
    1864:	6a e0       	ldi	r22, 0x0A	; 10
    1866:	83 e0       	ldi	r24, 0x03	; 3
    1868:	0e 94 36 0e 	call	0x1c6c	; 0x1c6c <write_zahl>
				}	
				//Grid anpassung
				recieved_X-=384;
    186c:	89 81       	ldd	r24, Y+1	; 0x01
    186e:	9a 81       	ldd	r25, Y+2	; 0x02
    1870:	80 58       	subi	r24, 0x80	; 128
    1872:	91 40       	sbci	r25, 0x01	; 1
    1874:	9a 83       	std	Y+2, r25	; 0x02
    1876:	89 83       	std	Y+1, r24	; 0x01
				recieved_Y-=512;				
    1878:	8b 81       	ldd	r24, Y+3	; 0x03
    187a:	9c 81       	ldd	r25, Y+4	; 0x04
    187c:	92 50       	subi	r25, 0x02	; 2
    187e:	9c 83       	std	Y+4, r25	; 0x04
    1880:	8b 83       	std	Y+3, r24	; 0x03
				recieved_X=((recieved_X/5)*-1)+200;
    1882:	89 81       	ldd	r24, Y+1	; 0x01
    1884:	9a 81       	ldd	r25, Y+2	; 0x02
    1886:	25 e0       	ldi	r18, 0x05	; 5
    1888:	30 e0       	ldi	r19, 0x00	; 0
    188a:	b9 01       	movw	r22, r18
    188c:	0e 94 81 11 	call	0x2302	; 0x2302 <__divmodhi4>
    1890:	cb 01       	movw	r24, r22
    1892:	9c 01       	movw	r18, r24
    1894:	88 ec       	ldi	r24, 0xC8	; 200
    1896:	90 e0       	ldi	r25, 0x00	; 0
    1898:	82 1b       	sub	r24, r18
    189a:	93 0b       	sbc	r25, r19
    189c:	9a 83       	std	Y+2, r25	; 0x02
    189e:	89 83       	std	Y+1, r24	; 0x01
				recieved_Y=(recieved_Y/5)*-1;	
    18a0:	8b 81       	ldd	r24, Y+3	; 0x03
    18a2:	9c 81       	ldd	r25, Y+4	; 0x04
    18a4:	25 e0       	ldi	r18, 0x05	; 5
    18a6:	30 e0       	ldi	r19, 0x00	; 0
    18a8:	b9 01       	movw	r22, r18
    18aa:	0e 94 81 11 	call	0x2302	; 0x2302 <__divmodhi4>
    18ae:	cb 01       	movw	r24, r22
    18b0:	91 95       	neg	r25
    18b2:	81 95       	neg	r24
    18b4:	91 09       	sbc	r25, r1
    18b6:	9c 83       	std	Y+4, r25	; 0x04
    18b8:	8b 83       	std	Y+3, r24	; 0x03
				////////////////
							
				snprintf(buffer,30,"G0 X%d Y%d Z-20 F6000\n",recieved_X,recieved_Y);
    18ba:	8c 81       	ldd	r24, Y+4	; 0x04
    18bc:	8f 93       	push	r24
    18be:	8b 81       	ldd	r24, Y+3	; 0x03
    18c0:	8f 93       	push	r24
    18c2:	8a 81       	ldd	r24, Y+2	; 0x02
    18c4:	8f 93       	push	r24
    18c6:	89 81       	ldd	r24, Y+1	; 0x01
    18c8:	8f 93       	push	r24
    18ca:	8a eb       	ldi	r24, 0xBA	; 186
    18cc:	91 e0       	ldi	r25, 0x01	; 1
    18ce:	89 2f       	mov	r24, r25
    18d0:	8f 93       	push	r24
    18d2:	8a eb       	ldi	r24, 0xBA	; 186
    18d4:	91 e0       	ldi	r25, 0x01	; 1
    18d6:	8f 93       	push	r24
    18d8:	1f 92       	push	r1
    18da:	8e e1       	ldi	r24, 0x1E	; 30
    18dc:	8f 93       	push	r24
    18de:	ce 01       	movw	r24, r28
    18e0:	85 57       	subi	r24, 0x75	; 117
    18e2:	9f 4f       	sbci	r25, 0xFF	; 255
    18e4:	29 2f       	mov	r18, r25
    18e6:	2f 93       	push	r18
    18e8:	8f 93       	push	r24
    18ea:	0e 94 cb 11 	call	0x2396	; 0x2396 <snprintf>
    18ee:	8d b7       	in	r24, 0x3d	; 61
    18f0:	9e b7       	in	r25, 0x3e	; 62
    18f2:	0a 96       	adiw	r24, 0x0a	; 10
    18f4:	0f b6       	in	r0, 0x3f	; 63
    18f6:	f8 94       	cli
    18f8:	de bf       	out	0x3e, r29	; 62
    18fa:	0f be       	out	0x3f, r0	; 63
    18fc:	cd bf       	out	0x3d, r28	; 61
				if (DIP_Switch&0x80)
    18fe:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <__data_end>
    1902:	88 23       	and	r24, r24
    1904:	f4 f4       	brge	.+60     	; 0x1942 <__stack+0x843>
				{
					write_zahl(2,0,recieved_X,4,0,0);
    1906:	89 81       	ldd	r24, Y+1	; 0x01
    1908:	9a 81       	ldd	r25, Y+2	; 0x02
    190a:	09 2e       	mov	r0, r25
    190c:	00 0c       	add	r0, r0
    190e:	aa 0b       	sbc	r26, r26
    1910:	bb 0b       	sbc	r27, r27
    1912:	c1 2c       	mov	r12, r1
    1914:	e1 2c       	mov	r14, r1
    1916:	04 e0       	ldi	r16, 0x04	; 4
    1918:	9c 01       	movw	r18, r24
    191a:	ad 01       	movw	r20, r26
    191c:	60 e0       	ldi	r22, 0x00	; 0
    191e:	82 e0       	ldi	r24, 0x02	; 2
    1920:	0e 94 36 0e 	call	0x1c6c	; 0x1c6c <write_zahl>
					write_zahl(3,0,recieved_Y,4,0,0);
    1924:	8b 81       	ldd	r24, Y+3	; 0x03
    1926:	9c 81       	ldd	r25, Y+4	; 0x04
    1928:	09 2e       	mov	r0, r25
    192a:	00 0c       	add	r0, r0
    192c:	aa 0b       	sbc	r26, r26
    192e:	bb 0b       	sbc	r27, r27
    1930:	c1 2c       	mov	r12, r1
    1932:	e1 2c       	mov	r14, r1
    1934:	04 e0       	ldi	r16, 0x04	; 4
    1936:	9c 01       	movw	r18, r24
    1938:	ad 01       	movw	r20, r26
    193a:	60 e0       	ldi	r22, 0x00	; 0
    193c:	83 e0       	ldi	r24, 0x03	; 3
    193e:	0e 94 36 0e 	call	0x1c6c	; 0x1c6c <write_zahl>
				}
				send_to_uArm(buffer);
    1942:	ce 01       	movw	r24, r28
    1944:	85 57       	subi	r24, 0x75	; 117
    1946:	9f 4f       	sbci	r25, 0xFF	; 255
    1948:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <send_to_uArm>
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    194c:	04 c0       	rjmp	.+8      	; 0x1956 <__stack+0x857>
				{
					
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
    194e:	80 e0       	ldi	r24, 0x00	; 0
    1950:	91 e0       	ldi	r25, 0x01	; 1
    1952:	0e 94 45 03 	call	0x68a	; 0x68a <to_uARM>
				{
					write_zahl(2,0,recieved_X,4,0,0);
					write_zahl(3,0,recieved_Y,4,0,0);
				}
				send_to_uArm(buffer);
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    1956:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <uart_string1+0x4>
    195a:	81 33       	cpi	r24, 0x31	; 49
    195c:	c1 f3       	breq	.-16     	; 0x194e <__stack+0x84f>
				{
					
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
				}
				if (DIP_Switch&0x01)
    195e:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <__data_end>
    1962:	88 2f       	mov	r24, r24
    1964:	90 e0       	ldi	r25, 0x00	; 0
    1966:	81 70       	andi	r24, 0x01	; 1
    1968:	99 27       	eor	r25, r25
    196a:	89 2b       	or	r24, r25
    196c:	21 f0       	breq	.+8      	; 0x1976 <__stack+0x877>
				{
					to_uARM("M2210 F2000 T200\n");
    196e:	81 ed       	ldi	r24, 0xD1	; 209
    1970:	91 e0       	ldi	r25, 0x01	; 1
    1972:	0e 94 45 03 	call	0x68a	; 0x68a <to_uARM>
					
				}
				send_Byte_0('1');
    1976:	81 e3       	ldi	r24, 0x31	; 49
    1978:	0e 94 0f 03 	call	0x61e	; 0x61e <send_Byte_0>
			}	
		}
	} //end while(1)
    197c:	c1 c9       	rjmp	.-3198   	; 0xd00 <main+0x464>

0000197e <init_Timer0_1ms_int>:
    197e:	cf 93       	push	r28
    1980:	df 93       	push	r29
    1982:	cd b7       	in	r28, 0x3d	; 61
    1984:	de b7       	in	r29, 0x3e	; 62
    1986:	84 e4       	ldi	r24, 0x44	; 68
    1988:	90 e0       	ldi	r25, 0x00	; 0
    198a:	24 e4       	ldi	r18, 0x44	; 68
    198c:	30 e0       	ldi	r19, 0x00	; 0
    198e:	f9 01       	movw	r30, r18
    1990:	20 81       	ld	r18, Z
    1992:	22 60       	ori	r18, 0x02	; 2
    1994:	fc 01       	movw	r30, r24
    1996:	20 83       	st	Z, r18
    1998:	85 e4       	ldi	r24, 0x45	; 69
    199a:	90 e0       	ldi	r25, 0x00	; 0
    199c:	25 e4       	ldi	r18, 0x45	; 69
    199e:	30 e0       	ldi	r19, 0x00	; 0
    19a0:	f9 01       	movw	r30, r18
    19a2:	20 81       	ld	r18, Z
    19a4:	23 60       	ori	r18, 0x03	; 3
    19a6:	fc 01       	movw	r30, r24
    19a8:	20 83       	st	Z, r18
    19aa:	87 e4       	ldi	r24, 0x47	; 71
    19ac:	90 e0       	ldi	r25, 0x00	; 0
    19ae:	29 ef       	ldi	r18, 0xF9	; 249
    19b0:	fc 01       	movw	r30, r24
    19b2:	20 83       	st	Z, r18
    19b4:	8e e6       	ldi	r24, 0x6E	; 110
    19b6:	90 e0       	ldi	r25, 0x00	; 0
    19b8:	2e e6       	ldi	r18, 0x6E	; 110
    19ba:	30 e0       	ldi	r19, 0x00	; 0
    19bc:	f9 01       	movw	r30, r18
    19be:	20 81       	ld	r18, Z
    19c0:	22 60       	ori	r18, 0x02	; 2
    19c2:	fc 01       	movw	r30, r24
    19c4:	20 83       	st	Z, r18
    19c6:	00 00       	nop
    19c8:	df 91       	pop	r29
    19ca:	cf 91       	pop	r28
    19cc:	08 95       	ret

000019ce <__vector_16>:
    19ce:	1f 92       	push	r1
    19d0:	0f 92       	push	r0
    19d2:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    19d6:	0f 92       	push	r0
    19d8:	11 24       	eor	r1, r1
    19da:	2f 93       	push	r18
    19dc:	3f 93       	push	r19
    19de:	4f 93       	push	r20
    19e0:	5f 93       	push	r21
    19e2:	6f 93       	push	r22
    19e4:	7f 93       	push	r23
    19e6:	8f 93       	push	r24
    19e8:	9f 93       	push	r25
    19ea:	af 93       	push	r26
    19ec:	bf 93       	push	r27
    19ee:	ef 93       	push	r30
    19f0:	ff 93       	push	r31
    19f2:	cf 93       	push	r28
    19f4:	df 93       	push	r29
    19f6:	cd b7       	in	r28, 0x3d	; 61
    19f8:	de b7       	in	r29, 0x3e	; 62
    19fa:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <tick_1ms>
    19fe:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <tick_1ms+0x1>
    1a02:	a0 91 70 02 	lds	r26, 0x0270	; 0x800270 <tick_1ms+0x2>
    1a06:	b0 91 71 02 	lds	r27, 0x0271	; 0x800271 <tick_1ms+0x3>
    1a0a:	01 96       	adiw	r24, 0x01	; 1
    1a0c:	a1 1d       	adc	r26, r1
    1a0e:	b1 1d       	adc	r27, r1
    1a10:	80 93 6e 02 	sts	0x026E, r24	; 0x80026e <tick_1ms>
    1a14:	90 93 6f 02 	sts	0x026F, r25	; 0x80026f <tick_1ms+0x1>
    1a18:	a0 93 70 02 	sts	0x0270, r26	; 0x800270 <tick_1ms+0x2>
    1a1c:	b0 93 71 02 	sts	0x0271, r27	; 0x800271 <tick_1ms+0x3>
    1a20:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <tick_1ms>
    1a24:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <tick_1ms+0x1>
    1a28:	a0 91 70 02 	lds	r26, 0x0270	; 0x800270 <tick_1ms+0x2>
    1a2c:	b0 91 71 02 	lds	r27, 0x0271	; 0x800271 <tick_1ms+0x3>
    1a30:	28 ee       	ldi	r18, 0xE8	; 232
    1a32:	33 e0       	ldi	r19, 0x03	; 3
    1a34:	40 e0       	ldi	r20, 0x00	; 0
    1a36:	50 e0       	ldi	r21, 0x00	; 0
    1a38:	bc 01       	movw	r22, r24
    1a3a:	cd 01       	movw	r24, r26
    1a3c:	0e 94 95 11 	call	0x232a	; 0x232a <__udivmodsi4>
    1a40:	dc 01       	movw	r26, r24
    1a42:	cb 01       	movw	r24, r22
    1a44:	89 2b       	or	r24, r25
    1a46:	8a 2b       	or	r24, r26
    1a48:	8b 2b       	or	r24, r27
    1a4a:	99 f4       	brne	.+38     	; 0x1a72 <__vector_16+0xa4>
    1a4c:	80 91 72 02 	lds	r24, 0x0272	; 0x800272 <tick_1s>
    1a50:	90 91 73 02 	lds	r25, 0x0273	; 0x800273 <tick_1s+0x1>
    1a54:	a0 91 74 02 	lds	r26, 0x0274	; 0x800274 <tick_1s+0x2>
    1a58:	b0 91 75 02 	lds	r27, 0x0275	; 0x800275 <tick_1s+0x3>
    1a5c:	01 96       	adiw	r24, 0x01	; 1
    1a5e:	a1 1d       	adc	r26, r1
    1a60:	b1 1d       	adc	r27, r1
    1a62:	80 93 72 02 	sts	0x0272, r24	; 0x800272 <tick_1s>
    1a66:	90 93 73 02 	sts	0x0273, r25	; 0x800273 <tick_1s+0x1>
    1a6a:	a0 93 74 02 	sts	0x0274, r26	; 0x800274 <tick_1s+0x2>
    1a6e:	b0 93 75 02 	sts	0x0275, r27	; 0x800275 <tick_1s+0x3>
    1a72:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <tick_1ms_cnt>
    1a76:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <tick_1ms_cnt+0x1>
    1a7a:	a0 91 6c 02 	lds	r26, 0x026C	; 0x80026c <tick_1ms_cnt+0x2>
    1a7e:	b0 91 6d 02 	lds	r27, 0x026D	; 0x80026d <tick_1ms_cnt+0x3>
    1a82:	89 2b       	or	r24, r25
    1a84:	8a 2b       	or	r24, r26
    1a86:	8b 2b       	or	r24, r27
    1a88:	99 f0       	breq	.+38     	; 0x1ab0 <__vector_16+0xe2>
    1a8a:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <tick_1ms_cnt>
    1a8e:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <tick_1ms_cnt+0x1>
    1a92:	a0 91 6c 02 	lds	r26, 0x026C	; 0x80026c <tick_1ms_cnt+0x2>
    1a96:	b0 91 6d 02 	lds	r27, 0x026D	; 0x80026d <tick_1ms_cnt+0x3>
    1a9a:	01 97       	sbiw	r24, 0x01	; 1
    1a9c:	a1 09       	sbc	r26, r1
    1a9e:	b1 09       	sbc	r27, r1
    1aa0:	80 93 6a 02 	sts	0x026A, r24	; 0x80026a <tick_1ms_cnt>
    1aa4:	90 93 6b 02 	sts	0x026B, r25	; 0x80026b <tick_1ms_cnt+0x1>
    1aa8:	a0 93 6c 02 	sts	0x026C, r26	; 0x80026c <tick_1ms_cnt+0x2>
    1aac:	b0 93 6d 02 	sts	0x026D, r27	; 0x80026d <tick_1ms_cnt+0x3>
    1ab0:	00 00       	nop
    1ab2:	df 91       	pop	r29
    1ab4:	cf 91       	pop	r28
    1ab6:	ff 91       	pop	r31
    1ab8:	ef 91       	pop	r30
    1aba:	bf 91       	pop	r27
    1abc:	af 91       	pop	r26
    1abe:	9f 91       	pop	r25
    1ac0:	8f 91       	pop	r24
    1ac2:	7f 91       	pop	r23
    1ac4:	6f 91       	pop	r22
    1ac6:	5f 91       	pop	r21
    1ac8:	4f 91       	pop	r20
    1aca:	3f 91       	pop	r19
    1acc:	2f 91       	pop	r18
    1ace:	0f 90       	pop	r0
    1ad0:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1ad4:	0f 90       	pop	r0
    1ad6:	1f 90       	pop	r1
    1ad8:	18 95       	reti

00001ada <wait_1ms>:
    1ada:	cf 93       	push	r28
    1adc:	df 93       	push	r29
    1ade:	00 d0       	rcall	.+0      	; 0x1ae0 <wait_1ms+0x6>
    1ae0:	00 d0       	rcall	.+0      	; 0x1ae2 <wait_1ms+0x8>
    1ae2:	cd b7       	in	r28, 0x3d	; 61
    1ae4:	de b7       	in	r29, 0x3e	; 62
    1ae6:	69 83       	std	Y+1, r22	; 0x01
    1ae8:	7a 83       	std	Y+2, r23	; 0x02
    1aea:	8b 83       	std	Y+3, r24	; 0x03
    1aec:	9c 83       	std	Y+4, r25	; 0x04
    1aee:	89 81       	ldd	r24, Y+1	; 0x01
    1af0:	9a 81       	ldd	r25, Y+2	; 0x02
    1af2:	ab 81       	ldd	r26, Y+3	; 0x03
    1af4:	bc 81       	ldd	r27, Y+4	; 0x04
    1af6:	89 2b       	or	r24, r25
    1af8:	8a 2b       	or	r24, r26
    1afa:	8b 2b       	or	r24, r27
    1afc:	69 f0       	breq	.+26     	; 0x1b18 <wait_1ms+0x3e>
    1afe:	89 81       	ldd	r24, Y+1	; 0x01
    1b00:	9a 81       	ldd	r25, Y+2	; 0x02
    1b02:	ab 81       	ldd	r26, Y+3	; 0x03
    1b04:	bc 81       	ldd	r27, Y+4	; 0x04
    1b06:	80 93 6a 02 	sts	0x026A, r24	; 0x80026a <tick_1ms_cnt>
    1b0a:	90 93 6b 02 	sts	0x026B, r25	; 0x80026b <tick_1ms_cnt+0x1>
    1b0e:	a0 93 6c 02 	sts	0x026C, r26	; 0x80026c <tick_1ms_cnt+0x2>
    1b12:	b0 93 6d 02 	sts	0x026D, r27	; 0x80026d <tick_1ms_cnt+0x3>
    1b16:	0c c0       	rjmp	.+24     	; 0x1b30 <wait_1ms+0x56>
    1b18:	81 e0       	ldi	r24, 0x01	; 1
    1b1a:	90 e0       	ldi	r25, 0x00	; 0
    1b1c:	a0 e0       	ldi	r26, 0x00	; 0
    1b1e:	b0 e0       	ldi	r27, 0x00	; 0
    1b20:	80 93 6a 02 	sts	0x026A, r24	; 0x80026a <tick_1ms_cnt>
    1b24:	90 93 6b 02 	sts	0x026B, r25	; 0x80026b <tick_1ms_cnt+0x1>
    1b28:	a0 93 6c 02 	sts	0x026C, r26	; 0x80026c <tick_1ms_cnt+0x2>
    1b2c:	b0 93 6d 02 	sts	0x026D, r27	; 0x80026d <tick_1ms_cnt+0x3>
    1b30:	00 00       	nop
    1b32:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <tick_1ms_cnt>
    1b36:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <tick_1ms_cnt+0x1>
    1b3a:	a0 91 6c 02 	lds	r26, 0x026C	; 0x80026c <tick_1ms_cnt+0x2>
    1b3e:	b0 91 6d 02 	lds	r27, 0x026D	; 0x80026d <tick_1ms_cnt+0x3>
    1b42:	89 2b       	or	r24, r25
    1b44:	8a 2b       	or	r24, r26
    1b46:	8b 2b       	or	r24, r27
    1b48:	a1 f7       	brne	.-24     	; 0x1b32 <wait_1ms+0x58>
    1b4a:	00 00       	nop
    1b4c:	0f 90       	pop	r0
    1b4e:	0f 90       	pop	r0
    1b50:	0f 90       	pop	r0
    1b52:	0f 90       	pop	r0
    1b54:	df 91       	pop	r29
    1b56:	cf 91       	pop	r28
    1b58:	08 95       	ret

00001b5a <delay_nop>:
    1b5a:	cf 93       	push	r28
    1b5c:	df 93       	push	r29
    1b5e:	00 d0       	rcall	.+0      	; 0x1b60 <delay_nop+0x6>
    1b60:	cd b7       	in	r28, 0x3d	; 61
    1b62:	de b7       	in	r29, 0x3e	; 62
    1b64:	8a 83       	std	Y+2, r24	; 0x02
    1b66:	19 82       	std	Y+1, r1	; 0x01
    1b68:	04 c0       	rjmp	.+8      	; 0x1b72 <delay_nop+0x18>
    1b6a:	00 00       	nop
    1b6c:	89 81       	ldd	r24, Y+1	; 0x01
    1b6e:	8f 5f       	subi	r24, 0xFF	; 255
    1b70:	89 83       	std	Y+1, r24	; 0x01
    1b72:	99 81       	ldd	r25, Y+1	; 0x01
    1b74:	8a 81       	ldd	r24, Y+2	; 0x02
    1b76:	98 17       	cp	r25, r24
    1b78:	c0 f3       	brcs	.-16     	; 0x1b6a <delay_nop+0x10>
    1b7a:	00 00       	nop
    1b7c:	0f 90       	pop	r0
    1b7e:	0f 90       	pop	r0
    1b80:	df 91       	pop	r29
    1b82:	cf 91       	pop	r28
    1b84:	08 95       	ret

00001b86 <write_lcd_f>:
    1b86:	91 e0       	ldi	r25, 0x01	; 1
    1b88:	90 93 76 02 	sts	0x0276, r25	; 0x800276 <write_RGB_LCD_activ>
    1b8c:	40 9a       	sbi	0x08, 0	; 8
    1b8e:	41 98       	cbi	0x08, 1	; 8
    1b90:	41 98       	cbi	0x08, 1	; 8
    1b92:	41 9a       	sbi	0x08, 1	; 8
    1b94:	41 9a       	sbi	0x08, 1	; 8
    1b96:	41 98       	cbi	0x08, 1	; 8
    1b98:	41 98       	cbi	0x08, 1	; 8
    1b9a:	41 9a       	sbi	0x08, 1	; 8
    1b9c:	41 9a       	sbi	0x08, 1	; 8
    1b9e:	41 98       	cbi	0x08, 1	; 8
    1ba0:	41 98       	cbi	0x08, 1	; 8
    1ba2:	41 9a       	sbi	0x08, 1	; 8
    1ba4:	41 9a       	sbi	0x08, 1	; 8
    1ba6:	41 98       	cbi	0x08, 1	; 8
    1ba8:	41 98       	cbi	0x08, 1	; 8
    1baa:	41 9a       	sbi	0x08, 1	; 8
    1bac:	41 9a       	sbi	0x08, 1	; 8
    1bae:	41 98       	cbi	0x08, 1	; 8
    1bb0:	41 98       	cbi	0x08, 1	; 8
    1bb2:	41 9a       	sbi	0x08, 1	; 8
    1bb4:	40 98       	cbi	0x08, 0	; 8
    1bb6:	41 98       	cbi	0x08, 1	; 8
    1bb8:	41 98       	cbi	0x08, 1	; 8
    1bba:	41 9a       	sbi	0x08, 1	; 8
    1bbc:	83 34       	cpi	r24, 0x43	; 67
    1bbe:	a9 f1       	breq	.+106    	; 0x1c2a <write_lcd_f+0xa4>
    1bc0:	40 9a       	sbi	0x08, 0	; 8
    1bc2:	41 98       	cbi	0x08, 1	; 8
    1bc4:	41 98       	cbi	0x08, 1	; 8
    1bc6:	41 9a       	sbi	0x08, 1	; 8
    1bc8:	40 98       	cbi	0x08, 0	; 8
    1bca:	41 98       	cbi	0x08, 1	; 8
    1bcc:	41 98       	cbi	0x08, 1	; 8
    1bce:	41 9a       	sbi	0x08, 1	; 8
    1bd0:	84 e0       	ldi	r24, 0x04	; 4
    1bd2:	41 98       	cbi	0x08, 1	; 8
    1bd4:	60 ff       	sbrs	r22, 0
    1bd6:	27 c0       	rjmp	.+78     	; 0x1c26 <write_lcd_f+0xa0>
    1bd8:	40 9a       	sbi	0x08, 0	; 8
    1bda:	66 95       	lsr	r22
    1bdc:	41 98       	cbi	0x08, 1	; 8
    1bde:	41 9a       	sbi	0x08, 1	; 8
    1be0:	81 50       	subi	r24, 0x01	; 1
    1be2:	b9 f7       	brne	.-18     	; 0x1bd2 <write_lcd_f+0x4c>
    1be4:	40 98       	cbi	0x08, 0	; 8
    1be6:	84 e0       	ldi	r24, 0x04	; 4
    1be8:	41 98       	cbi	0x08, 1	; 8
    1bea:	41 98       	cbi	0x08, 1	; 8
    1bec:	41 9a       	sbi	0x08, 1	; 8
    1bee:	81 50       	subi	r24, 0x01	; 1
    1bf0:	d9 f7       	brne	.-10     	; 0x1be8 <write_lcd_f+0x62>
    1bf2:	84 e0       	ldi	r24, 0x04	; 4
    1bf4:	41 98       	cbi	0x08, 1	; 8
    1bf6:	60 ff       	sbrs	r22, 0
    1bf8:	14 c0       	rjmp	.+40     	; 0x1c22 <write_lcd_f+0x9c>
    1bfa:	40 9a       	sbi	0x08, 0	; 8
    1bfc:	66 95       	lsr	r22
    1bfe:	41 98       	cbi	0x08, 1	; 8
    1c00:	41 9a       	sbi	0x08, 1	; 8
    1c02:	81 50       	subi	r24, 0x01	; 1
    1c04:	b9 f7       	brne	.-18     	; 0x1bf4 <write_lcd_f+0x6e>
    1c06:	40 98       	cbi	0x08, 0	; 8
    1c08:	84 e0       	ldi	r24, 0x04	; 4
    1c0a:	41 98       	cbi	0x08, 1	; 8
    1c0c:	41 98       	cbi	0x08, 1	; 8
    1c0e:	41 9a       	sbi	0x08, 1	; 8
    1c10:	81 50       	subi	r24, 0x01	; 1
    1c12:	d9 f7       	brne	.-10     	; 0x1c0a <write_lcd_f+0x84>
    1c14:	84 e1       	ldi	r24, 0x14	; 20
    1c16:	40 9a       	sbi	0x08, 0	; 8
    1c18:	81 50       	subi	r24, 0x01	; 1
    1c1a:	e9 f7       	brne	.-6      	; 0x1c16 <write_lcd_f+0x90>
    1c1c:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <write_RGB_LCD_activ>
    1c20:	08 95       	ret
    1c22:	40 98       	cbi	0x08, 0	; 8
    1c24:	eb cf       	rjmp	.-42     	; 0x1bfc <write_lcd_f+0x76>
    1c26:	40 98       	cbi	0x08, 0	; 8
    1c28:	d8 cf       	rjmp	.-80     	; 0x1bda <write_lcd_f+0x54>
    1c2a:	40 98       	cbi	0x08, 0	; 8
    1c2c:	ca cf       	rjmp	.-108    	; 0x1bc2 <write_lcd_f+0x3c>

00001c2e <write_text_ram>:
    1c2e:	0f 93       	push	r16
    1c30:	1f 93       	push	r17
    1c32:	df 93       	push	r29
    1c34:	8a 01       	movw	r16, r20
    1c36:	90 e2       	ldi	r25, 0x20	; 32
    1c38:	89 9f       	mul	r24, r25
    1c3a:	60 0d       	add	r22, r0
    1c3c:	11 24       	eor	r1, r1
    1c3e:	60 68       	ori	r22, 0x80	; 128
    1c40:	83 e4       	ldi	r24, 0x43	; 67
    1c42:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <write_lcd_f>
    1c46:	f8 01       	movw	r30, r16
    1c48:	60 81       	ld	r22, Z
    1c4a:	66 23       	and	r22, r22
    1c4c:	59 f0       	breq	.+22     	; 0x1c64 <write_text_ram+0x36>
    1c4e:	d0 e0       	ldi	r29, 0x00	; 0
    1c50:	df 5f       	subi	r29, 0xFF	; 255
    1c52:	84 e4       	ldi	r24, 0x44	; 68
    1c54:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <write_lcd_f>
    1c58:	f8 01       	movw	r30, r16
    1c5a:	ed 0f       	add	r30, r29
    1c5c:	f1 1d       	adc	r31, r1
    1c5e:	60 81       	ld	r22, Z
    1c60:	61 11       	cpse	r22, r1
    1c62:	f6 cf       	rjmp	.-20     	; 0x1c50 <write_text_ram+0x22>
    1c64:	df 91       	pop	r29
    1c66:	1f 91       	pop	r17
    1c68:	0f 91       	pop	r16
    1c6a:	08 95       	ret

00001c6c <write_zahl>:
    1c6c:	2f 92       	push	r2
    1c6e:	3f 92       	push	r3
    1c70:	4f 92       	push	r4
    1c72:	5f 92       	push	r5
    1c74:	6f 92       	push	r6
    1c76:	7f 92       	push	r7
    1c78:	8f 92       	push	r8
    1c7a:	9f 92       	push	r9
    1c7c:	af 92       	push	r10
    1c7e:	bf 92       	push	r11
    1c80:	cf 92       	push	r12
    1c82:	df 92       	push	r13
    1c84:	ef 92       	push	r14
    1c86:	ff 92       	push	r15
    1c88:	0f 93       	push	r16
    1c8a:	1f 93       	push	r17
    1c8c:	cf 93       	push	r28
    1c8e:	df 93       	push	r29
    1c90:	cd b7       	in	r28, 0x3d	; 61
    1c92:	de b7       	in	r29, 0x3e	; 62
    1c94:	63 97       	sbiw	r28, 0x13	; 19
    1c96:	0f b6       	in	r0, 0x3f	; 63
    1c98:	f8 94       	cli
    1c9a:	de bf       	out	0x3e, r29	; 62
    1c9c:	0f be       	out	0x3f, r0	; 63
    1c9e:	cd bf       	out	0x3d, r28	; 61
    1ca0:	8a 8b       	std	Y+18, r24	; 0x12
    1ca2:	6b 8b       	std	Y+19, r22	; 0x13
    1ca4:	29 01       	movw	r4, r18
    1ca6:	3a 01       	movw	r6, r20
    1ca8:	c8 8a       	std	Y+16, r12	; 0x10
    1caa:	04 36       	cpi	r16, 0x64	; 100
    1cac:	08 f4       	brcc	.+2      	; 0x1cb0 <write_zahl+0x44>
    1cae:	bd c0       	rjmp	.+378    	; 0x1e2a <write_zahl+0x1be>
    1cb0:	04 56       	subi	r16, 0x64	; 100
    1cb2:	19 8a       	std	Y+17, r1	; 0x11
    1cb4:	0b 30       	cpi	r16, 0x0B	; 11
    1cb6:	08 f0       	brcs	.+2      	; 0x1cba <write_zahl+0x4e>
    1cb8:	0a e0       	ldi	r16, 0x0A	; 10
    1cba:	ef 86       	std	Y+15, r14	; 0x0f
    1cbc:	88 89       	ldd	r24, Y+16	; 0x10
    1cbe:	8e 15       	cp	r24, r14
    1cc0:	08 f4       	brcc	.+2      	; 0x1cc4 <write_zahl+0x58>
    1cc2:	8f 87       	std	Y+15, r24	; 0x0f
    1cc4:	20 2e       	mov	r2, r16
    1cc6:	31 2c       	mov	r3, r1
    1cc8:	c1 01       	movw	r24, r2
    1cca:	ef 85       	ldd	r30, Y+15	; 0x0f
    1ccc:	8e 0f       	add	r24, r30
    1cce:	91 1d       	adc	r25, r1
    1cd0:	0b 97       	sbiw	r24, 0x0b	; 11
    1cd2:	1c f0       	brlt	.+6      	; 0x1cda <write_zahl+0x6e>
    1cd4:	8a e0       	ldi	r24, 0x0A	; 10
    1cd6:	80 1b       	sub	r24, r16
    1cd8:	8f 87       	std	Y+15, r24	; 0x0f
    1cda:	c3 01       	movw	r24, r6
    1cdc:	b2 01       	movw	r22, r4
    1cde:	2a e0       	ldi	r18, 0x0A	; 10
    1ce0:	30 e0       	ldi	r19, 0x00	; 0
    1ce2:	40 e0       	ldi	r20, 0x00	; 0
    1ce4:	50 e0       	ldi	r21, 0x00	; 0
    1ce6:	0e 94 95 11 	call	0x232a	; 0x232a <__udivmodsi4>
    1cea:	60 5d       	subi	r22, 0xD0	; 208
    1cec:	6c 87       	std	Y+12, r22	; 0x0c
    1cee:	1a e0       	ldi	r17, 0x0A	; 10
    1cf0:	3a e0       	ldi	r19, 0x0A	; 10
    1cf2:	c3 2e       	mov	r12, r19
    1cf4:	d1 2c       	mov	r13, r1
    1cf6:	e1 2c       	mov	r14, r1
    1cf8:	f1 2c       	mov	r15, r1
    1cfa:	4a e0       	ldi	r20, 0x0A	; 10
    1cfc:	84 2e       	mov	r8, r20
    1cfe:	91 2c       	mov	r9, r1
    1d00:	a1 2c       	mov	r10, r1
    1d02:	b1 2c       	mov	r11, r1
    1d04:	81 e0       	ldi	r24, 0x01	; 1
    1d06:	90 e0       	ldi	r25, 0x00	; 0
    1d08:	8c 0f       	add	r24, r28
    1d0a:	9d 1f       	adc	r25, r29
    1d0c:	81 0f       	add	r24, r17
    1d0e:	91 1d       	adc	r25, r1
    1d10:	9e 87       	std	Y+14, r25	; 0x0e
    1d12:	8d 87       	std	Y+13, r24	; 0x0d
    1d14:	c3 01       	movw	r24, r6
    1d16:	b2 01       	movw	r22, r4
    1d18:	a7 01       	movw	r20, r14
    1d1a:	96 01       	movw	r18, r12
    1d1c:	0e 94 95 11 	call	0x232a	; 0x232a <__udivmodsi4>
    1d20:	ca 01       	movw	r24, r20
    1d22:	b9 01       	movw	r22, r18
    1d24:	a5 01       	movw	r20, r10
    1d26:	94 01       	movw	r18, r8
    1d28:	0e 94 95 11 	call	0x232a	; 0x232a <__udivmodsi4>
    1d2c:	60 5d       	subi	r22, 0xD0	; 208
    1d2e:	ed 85       	ldd	r30, Y+13	; 0x0d
    1d30:	fe 85       	ldd	r31, Y+14	; 0x0e
    1d32:	60 83       	st	Z, r22
    1d34:	cc 0c       	add	r12, r12
    1d36:	dd 1c       	adc	r13, r13
    1d38:	ee 1c       	adc	r14, r14
    1d3a:	ff 1c       	adc	r15, r15
    1d3c:	d7 01       	movw	r26, r14
    1d3e:	c6 01       	movw	r24, r12
    1d40:	88 0f       	add	r24, r24
    1d42:	99 1f       	adc	r25, r25
    1d44:	aa 1f       	adc	r26, r26
    1d46:	bb 1f       	adc	r27, r27
    1d48:	88 0f       	add	r24, r24
    1d4a:	99 1f       	adc	r25, r25
    1d4c:	aa 1f       	adc	r26, r26
    1d4e:	bb 1f       	adc	r27, r27
    1d50:	c8 0e       	add	r12, r24
    1d52:	d9 1e       	adc	r13, r25
    1d54:	ea 1e       	adc	r14, r26
    1d56:	fb 1e       	adc	r15, r27
    1d58:	11 50       	subi	r17, 0x01	; 1
    1d5a:	a0 f6       	brcc	.-88     	; 0x1d04 <write_zahl+0x98>
    1d5c:	2c e0       	ldi	r18, 0x0C	; 12
    1d5e:	f8 89       	ldd	r31, Y+16	; 0x10
    1d60:	2f 1b       	sub	r18, r31
    1d62:	82 2f       	mov	r24, r18
    1d64:	80 1b       	sub	r24, r16
    1d66:	00 23       	and	r16, r16
    1d68:	09 f4       	brne	.+2      	; 0x1d6c <write_zahl+0x100>
    1d6a:	85 c0       	rjmp	.+266    	; 0x1e76 <write_zahl+0x20a>
    1d6c:	fe 01       	movw	r30, r28
    1d6e:	31 96       	adiw	r30, 0x01	; 1
    1d70:	a1 e0       	ldi	r26, 0x01	; 1
    1d72:	b0 e0       	ldi	r27, 0x00	; 0
    1d74:	ac 0f       	add	r26, r28
    1d76:	bd 1f       	adc	r27, r29
    1d78:	a8 0f       	add	r26, r24
    1d7a:	b1 1d       	adc	r27, r1
    1d7c:	9c 91       	ld	r25, X
    1d7e:	91 93       	st	Z+, r25
    1d80:	8f 5f       	subi	r24, 0xFF	; 255
    1d82:	28 13       	cpse	r18, r24
    1d84:	f5 cf       	rjmp	.-22     	; 0x1d70 <write_zahl+0x104>
    1d86:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d88:	81 11       	cpse	r24, r1
    1d8a:	52 c0       	rjmp	.+164    	; 0x1e30 <write_zahl+0x1c4>
    1d8c:	f1 01       	movw	r30, r2
    1d8e:	81 e0       	ldi	r24, 0x01	; 1
    1d90:	90 e0       	ldi	r25, 0x00	; 0
    1d92:	8c 0f       	add	r24, r28
    1d94:	9d 1f       	adc	r25, r29
    1d96:	e8 0f       	add	r30, r24
    1d98:	f9 1f       	adc	r31, r25
    1d9a:	10 82       	st	Z, r1
    1d9c:	99 89       	ldd	r25, Y+17	; 0x11
    1d9e:	99 23       	and	r25, r25
    1da0:	21 f1       	breq	.+72     	; 0x1dea <write_zahl+0x17e>
    1da2:	89 81       	ldd	r24, Y+1	; 0x01
    1da4:	80 33       	cpi	r24, 0x30	; 48
    1da6:	09 f5       	brne	.+66     	; 0x1dea <write_zahl+0x17e>
    1da8:	a1 01       	movw	r20, r2
    1daa:	41 50       	subi	r20, 0x01	; 1
    1dac:	51 09       	sbc	r21, r1
    1dae:	14 16       	cp	r1, r20
    1db0:	15 06       	cpc	r1, r21
    1db2:	dc f4       	brge	.+54     	; 0x1dea <write_zahl+0x17e>
    1db4:	80 e0       	ldi	r24, 0x00	; 0
    1db6:	90 e0       	ldi	r25, 0x00	; 0
    1db8:	20 e0       	ldi	r18, 0x00	; 0
    1dba:	60 e2       	ldi	r22, 0x20	; 32
    1dbc:	03 c0       	rjmp	.+6      	; 0x1dc4 <write_zahl+0x158>
    1dbe:	84 17       	cp	r24, r20
    1dc0:	95 07       	cpc	r25, r21
    1dc2:	9c f4       	brge	.+38     	; 0x1dea <write_zahl+0x17e>
    1dc4:	2f 5f       	subi	r18, 0xFF	; 255
    1dc6:	e1 e0       	ldi	r30, 0x01	; 1
    1dc8:	f0 e0       	ldi	r31, 0x00	; 0
    1dca:	ec 0f       	add	r30, r28
    1dcc:	fd 1f       	adc	r31, r29
    1dce:	e8 0f       	add	r30, r24
    1dd0:	f9 1f       	adc	r31, r25
    1dd2:	60 83       	st	Z, r22
    1dd4:	82 2f       	mov	r24, r18
    1dd6:	90 e0       	ldi	r25, 0x00	; 0
    1dd8:	e1 e0       	ldi	r30, 0x01	; 1
    1dda:	f0 e0       	ldi	r31, 0x00	; 0
    1ddc:	ec 0f       	add	r30, r28
    1dde:	fd 1f       	adc	r31, r29
    1de0:	e8 0f       	add	r30, r24
    1de2:	f9 1f       	adc	r31, r25
    1de4:	30 81       	ld	r19, Z
    1de6:	30 33       	cpi	r19, 0x30	; 48
    1de8:	51 f3       	breq	.-44     	; 0x1dbe <write_zahl+0x152>
    1dea:	ae 01       	movw	r20, r28
    1dec:	4f 5f       	subi	r20, 0xFF	; 255
    1dee:	5f 4f       	sbci	r21, 0xFF	; 255
    1df0:	6b 89       	ldd	r22, Y+19	; 0x13
    1df2:	8a 89       	ldd	r24, Y+18	; 0x12
    1df4:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <write_text_ram>
    1df8:	63 96       	adiw	r28, 0x13	; 19
    1dfa:	0f b6       	in	r0, 0x3f	; 63
    1dfc:	f8 94       	cli
    1dfe:	de bf       	out	0x3e, r29	; 62
    1e00:	0f be       	out	0x3f, r0	; 63
    1e02:	cd bf       	out	0x3d, r28	; 61
    1e04:	df 91       	pop	r29
    1e06:	cf 91       	pop	r28
    1e08:	1f 91       	pop	r17
    1e0a:	0f 91       	pop	r16
    1e0c:	ff 90       	pop	r15
    1e0e:	ef 90       	pop	r14
    1e10:	df 90       	pop	r13
    1e12:	cf 90       	pop	r12
    1e14:	bf 90       	pop	r11
    1e16:	af 90       	pop	r10
    1e18:	9f 90       	pop	r9
    1e1a:	8f 90       	pop	r8
    1e1c:	7f 90       	pop	r7
    1e1e:	6f 90       	pop	r6
    1e20:	5f 90       	pop	r5
    1e22:	4f 90       	pop	r4
    1e24:	3f 90       	pop	r3
    1e26:	2f 90       	pop	r2
    1e28:	08 95       	ret
    1e2a:	21 e0       	ldi	r18, 0x01	; 1
    1e2c:	29 8b       	std	Y+17, r18	; 0x11
    1e2e:	42 cf       	rjmp	.-380    	; 0x1cb4 <write_zahl+0x48>
    1e30:	0f 5f       	subi	r16, 0xFF	; 255
    1e32:	8e e2       	ldi	r24, 0x2E	; 46
    1e34:	e1 e0       	ldi	r30, 0x01	; 1
    1e36:	f0 e0       	ldi	r31, 0x00	; 0
    1e38:	ec 0f       	add	r30, r28
    1e3a:	fd 1f       	adc	r31, r29
    1e3c:	e2 0d       	add	r30, r2
    1e3e:	f3 1d       	adc	r31, r3
    1e40:	80 83       	st	Z, r24
    1e42:	e0 2f       	mov	r30, r16
    1e44:	20 1b       	sub	r18, r16
    1e46:	82 2f       	mov	r24, r18
    1e48:	8e 0f       	add	r24, r30
    1e4a:	a1 e0       	ldi	r26, 0x01	; 1
    1e4c:	b0 e0       	ldi	r27, 0x00	; 0
    1e4e:	ac 0f       	add	r26, r28
    1e50:	bd 1f       	adc	r27, r29
    1e52:	a8 0f       	add	r26, r24
    1e54:	b1 1d       	adc	r27, r1
    1e56:	8c 91       	ld	r24, X
    1e58:	a1 e0       	ldi	r26, 0x01	; 1
    1e5a:	b0 e0       	ldi	r27, 0x00	; 0
    1e5c:	ac 0f       	add	r26, r28
    1e5e:	bd 1f       	adc	r27, r29
    1e60:	ae 0f       	add	r26, r30
    1e62:	b1 1d       	adc	r27, r1
    1e64:	8c 93       	st	X, r24
    1e66:	ef 5f       	subi	r30, 0xFF	; 255
    1e68:	8e 2f       	mov	r24, r30
    1e6a:	80 1b       	sub	r24, r16
    1e6c:	9f 85       	ldd	r25, Y+15	; 0x0f
    1e6e:	89 17       	cp	r24, r25
    1e70:	50 f3       	brcs	.-44     	; 0x1e46 <write_zahl+0x1da>
    1e72:	f0 e0       	ldi	r31, 0x00	; 0
    1e74:	8c cf       	rjmp	.-232    	; 0x1d8e <write_zahl+0x122>
    1e76:	ef 85       	ldd	r30, Y+15	; 0x0f
    1e78:	ee 23       	and	r30, r30
    1e7a:	21 f0       	breq	.+8      	; 0x1e84 <write_zahl+0x218>
    1e7c:	8e e2       	ldi	r24, 0x2E	; 46
    1e7e:	89 83       	std	Y+1, r24	; 0x01
    1e80:	01 e0       	ldi	r16, 0x01	; 1
    1e82:	df cf       	rjmp	.-66     	; 0x1e42 <write_zahl+0x1d6>
    1e84:	e0 e0       	ldi	r30, 0x00	; 0
    1e86:	f0 e0       	ldi	r31, 0x00	; 0
    1e88:	82 cf       	rjmp	.-252    	; 0x1d8e <write_zahl+0x122>

00001e8a <lcd_init>:
    1e8a:	df 93       	push	r29
    1e8c:	38 9a       	sbi	0x07, 0	; 7
    1e8e:	39 9a       	sbi	0x07, 1	; 7
    1e90:	d2 e3       	ldi	r29, 0x32	; 50
    1e92:	88 e7       	ldi	r24, 0x78	; 120
    1e94:	0e 94 ad 0d 	call	0x1b5a	; 0x1b5a <delay_nop>
    1e98:	d1 50       	subi	r29, 0x01	; 1
    1e9a:	d9 f7       	brne	.-10     	; 0x1e92 <lcd_init+0x8>
    1e9c:	64 e3       	ldi	r22, 0x34	; 52
    1e9e:	83 e4       	ldi	r24, 0x43	; 67
    1ea0:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <write_lcd_f>
    1ea4:	64 e3       	ldi	r22, 0x34	; 52
    1ea6:	83 e4       	ldi	r24, 0x43	; 67
    1ea8:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <write_lcd_f>
    1eac:	69 e0       	ldi	r22, 0x09	; 9
    1eae:	83 e4       	ldi	r24, 0x43	; 67
    1eb0:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <write_lcd_f>
    1eb4:	60 e3       	ldi	r22, 0x30	; 48
    1eb6:	83 e4       	ldi	r24, 0x43	; 67
    1eb8:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <write_lcd_f>
    1ebc:	6c e0       	ldi	r22, 0x0C	; 12
    1ebe:	83 e4       	ldi	r24, 0x43	; 67
    1ec0:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <write_lcd_f>
    1ec4:	61 e0       	ldi	r22, 0x01	; 1
    1ec6:	83 e4       	ldi	r24, 0x43	; 67
    1ec8:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <write_lcd_f>
    1ecc:	d8 e0       	ldi	r29, 0x08	; 8
    1ece:	88 e7       	ldi	r24, 0x78	; 120
    1ed0:	0e 94 ad 0d 	call	0x1b5a	; 0x1b5a <delay_nop>
    1ed4:	d1 50       	subi	r29, 0x01	; 1
    1ed6:	d9 f7       	brne	.-10     	; 0x1ece <lcd_init+0x44>
    1ed8:	67 e0       	ldi	r22, 0x07	; 7
    1eda:	83 e4       	ldi	r24, 0x43	; 67
    1edc:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <write_lcd_f>
    1ee0:	df 91       	pop	r29
    1ee2:	0c 94 bf 0c 	jmp	0x197e	; 0x197e <init_Timer0_1ms_int>

00001ee6 <clear_lcd>:
    1ee6:	df 93       	push	r29
    1ee8:	61 e0       	ldi	r22, 0x01	; 1
    1eea:	83 e4       	ldi	r24, 0x43	; 67
    1eec:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <write_lcd_f>
    1ef0:	d8 e0       	ldi	r29, 0x08	; 8
    1ef2:	88 e7       	ldi	r24, 0x78	; 120
    1ef4:	0e 94 ad 0d 	call	0x1b5a	; 0x1b5a <delay_nop>
    1ef8:	d1 50       	subi	r29, 0x01	; 1
    1efa:	d9 f7       	brne	.-10     	; 0x1ef2 <clear_lcd+0xc>
    1efc:	df 91       	pop	r29
    1efe:	08 95       	ret

00001f00 <LED_Show>:
    1f00:	cf 93       	push	r28
    1f02:	df 93       	push	r29
    1f04:	1f 92       	push	r1
    1f06:	cd b7       	in	r28, 0x3d	; 61
    1f08:	de b7       	in	r29, 0x3e	; 62
    1f0a:	85 e2       	ldi	r24, 0x25	; 37
    1f0c:	90 e0       	ldi	r25, 0x00	; 0
    1f0e:	21 e0       	ldi	r18, 0x01	; 1
    1f10:	fc 01       	movw	r30, r24
    1f12:	20 83       	st	Z, r18
    1f14:	19 82       	std	Y+1, r1	; 0x01
    1f16:	17 c0       	rjmp	.+46     	; 0x1f46 <LED_Show+0x46>
    1f18:	62 e3       	ldi	r22, 0x32	; 50
    1f1a:	70 e0       	ldi	r23, 0x00	; 0
    1f1c:	80 e0       	ldi	r24, 0x00	; 0
    1f1e:	90 e0       	ldi	r25, 0x00	; 0
    1f20:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <wait_1ms>
    1f24:	85 e2       	ldi	r24, 0x25	; 37
    1f26:	90 e0       	ldi	r25, 0x00	; 0
    1f28:	29 81       	ldd	r18, Y+1	; 0x01
    1f2a:	42 2f       	mov	r20, r18
    1f2c:	50 e0       	ldi	r21, 0x00	; 0
    1f2e:	21 e0       	ldi	r18, 0x01	; 1
    1f30:	30 e0       	ldi	r19, 0x00	; 0
    1f32:	02 c0       	rjmp	.+4      	; 0x1f38 <LED_Show+0x38>
    1f34:	22 0f       	add	r18, r18
    1f36:	33 1f       	adc	r19, r19
    1f38:	4a 95       	dec	r20
    1f3a:	e2 f7       	brpl	.-8      	; 0x1f34 <LED_Show+0x34>
    1f3c:	fc 01       	movw	r30, r24
    1f3e:	20 83       	st	Z, r18
    1f40:	89 81       	ldd	r24, Y+1	; 0x01
    1f42:	8f 5f       	subi	r24, 0xFF	; 255
    1f44:	89 83       	std	Y+1, r24	; 0x01
    1f46:	89 81       	ldd	r24, Y+1	; 0x01
    1f48:	88 30       	cpi	r24, 0x08	; 8
    1f4a:	30 f3       	brcs	.-52     	; 0x1f18 <LED_Show+0x18>
    1f4c:	85 e2       	ldi	r24, 0x25	; 37
    1f4e:	90 e0       	ldi	r25, 0x00	; 0
    1f50:	20 e8       	ldi	r18, 0x80	; 128
    1f52:	fc 01       	movw	r30, r24
    1f54:	20 83       	st	Z, r18
    1f56:	19 82       	std	Y+1, r1	; 0x01
    1f58:	17 c0       	rjmp	.+46     	; 0x1f88 <LED_Show+0x88>
    1f5a:	62 e3       	ldi	r22, 0x32	; 50
    1f5c:	70 e0       	ldi	r23, 0x00	; 0
    1f5e:	80 e0       	ldi	r24, 0x00	; 0
    1f60:	90 e0       	ldi	r25, 0x00	; 0
    1f62:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <wait_1ms>
    1f66:	85 e2       	ldi	r24, 0x25	; 37
    1f68:	90 e0       	ldi	r25, 0x00	; 0
    1f6a:	29 81       	ldd	r18, Y+1	; 0x01
    1f6c:	42 2f       	mov	r20, r18
    1f6e:	50 e0       	ldi	r21, 0x00	; 0
    1f70:	20 e8       	ldi	r18, 0x80	; 128
    1f72:	30 e0       	ldi	r19, 0x00	; 0
    1f74:	02 c0       	rjmp	.+4      	; 0x1f7a <LED_Show+0x7a>
    1f76:	35 95       	asr	r19
    1f78:	27 95       	ror	r18
    1f7a:	4a 95       	dec	r20
    1f7c:	e2 f7       	brpl	.-8      	; 0x1f76 <LED_Show+0x76>
    1f7e:	fc 01       	movw	r30, r24
    1f80:	20 83       	st	Z, r18
    1f82:	89 81       	ldd	r24, Y+1	; 0x01
    1f84:	8f 5f       	subi	r24, 0xFF	; 255
    1f86:	89 83       	std	Y+1, r24	; 0x01
    1f88:	89 81       	ldd	r24, Y+1	; 0x01
    1f8a:	88 30       	cpi	r24, 0x08	; 8
    1f8c:	30 f3       	brcs	.-52     	; 0x1f5a <LED_Show+0x5a>
    1f8e:	64 e6       	ldi	r22, 0x64	; 100
    1f90:	70 e0       	ldi	r23, 0x00	; 0
    1f92:	80 e0       	ldi	r24, 0x00	; 0
    1f94:	90 e0       	ldi	r25, 0x00	; 0
    1f96:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <wait_1ms>
    1f9a:	85 e2       	ldi	r24, 0x25	; 37
    1f9c:	90 e0       	ldi	r25, 0x00	; 0
    1f9e:	fc 01       	movw	r30, r24
    1fa0:	10 82       	st	Z, r1
    1fa2:	00 00       	nop
    1fa4:	0f 90       	pop	r0
    1fa6:	df 91       	pop	r29
    1fa8:	cf 91       	pop	r28
    1faa:	08 95       	ret

00001fac <init_BT_CAR_V2_0>:
    1fac:	cf 93       	push	r28
    1fae:	df 93       	push	r29
    1fb0:	cd b7       	in	r28, 0x3d	; 61
    1fb2:	de b7       	in	r29, 0x3e	; 62
    1fb4:	81 e2       	ldi	r24, 0x21	; 33
    1fb6:	90 e0       	ldi	r25, 0x00	; 0
    1fb8:	20 e6       	ldi	r18, 0x60	; 96
    1fba:	fc 01       	movw	r30, r24
    1fbc:	20 83       	st	Z, r18
    1fbe:	84 e2       	ldi	r24, 0x24	; 36
    1fc0:	90 e0       	ldi	r25, 0x00	; 0
    1fc2:	2f ef       	ldi	r18, 0xFF	; 255
    1fc4:	fc 01       	movw	r30, r24
    1fc6:	20 83       	st	Z, r18
    1fc8:	8a e2       	ldi	r24, 0x2A	; 42
    1fca:	90 e0       	ldi	r25, 0x00	; 0
    1fcc:	2c ef       	ldi	r18, 0xFC	; 252
    1fce:	fc 01       	movw	r30, r24
    1fd0:	20 83       	st	Z, r18
    1fd2:	78 94       	sei
    1fd4:	0e 94 45 0f 	call	0x1e8a	; 0x1e8a <lcd_init>
    1fd8:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <clear_lcd>
    1fdc:	0e 94 80 0f 	call	0x1f00	; 0x1f00 <LED_Show>
    1fe0:	00 00       	nop
    1fe2:	df 91       	pop	r29
    1fe4:	cf 91       	pop	r28
    1fe6:	08 95       	ret

00001fe8 <__cmpsf2>:
    1fe8:	0e 94 9a 10 	call	0x2134	; 0x2134 <__fp_cmp>
    1fec:	08 f4       	brcc	.+2      	; 0x1ff0 <__cmpsf2+0x8>
    1fee:	81 e0       	ldi	r24, 0x01	; 1
    1ff0:	08 95       	ret

00001ff2 <__divsf3>:
    1ff2:	0e 94 0d 10 	call	0x201a	; 0x201a <__divsf3x>
    1ff6:	0c 94 d5 10 	jmp	0x21aa	; 0x21aa <__fp_round>
    1ffa:	0e 94 ce 10 	call	0x219c	; 0x219c <__fp_pscB>
    1ffe:	58 f0       	brcs	.+22     	; 0x2016 <__divsf3+0x24>
    2000:	0e 94 c7 10 	call	0x218e	; 0x218e <__fp_pscA>
    2004:	40 f0       	brcs	.+16     	; 0x2016 <__divsf3+0x24>
    2006:	29 f4       	brne	.+10     	; 0x2012 <__divsf3+0x20>
    2008:	5f 3f       	cpi	r21, 0xFF	; 255
    200a:	29 f0       	breq	.+10     	; 0x2016 <__divsf3+0x24>
    200c:	0c 94 be 10 	jmp	0x217c	; 0x217c <__fp_inf>
    2010:	51 11       	cpse	r21, r1
    2012:	0c 94 09 11 	jmp	0x2212	; 0x2212 <__fp_szero>
    2016:	0c 94 c4 10 	jmp	0x2188	; 0x2188 <__fp_nan>

0000201a <__divsf3x>:
    201a:	0e 94 e6 10 	call	0x21cc	; 0x21cc <__fp_split3>
    201e:	68 f3       	brcs	.-38     	; 0x1ffa <__divsf3+0x8>

00002020 <__divsf3_pse>:
    2020:	99 23       	and	r25, r25
    2022:	b1 f3       	breq	.-20     	; 0x2010 <__divsf3+0x1e>
    2024:	55 23       	and	r21, r21
    2026:	91 f3       	breq	.-28     	; 0x200c <__divsf3+0x1a>
    2028:	95 1b       	sub	r25, r21
    202a:	55 0b       	sbc	r21, r21
    202c:	bb 27       	eor	r27, r27
    202e:	aa 27       	eor	r26, r26
    2030:	62 17       	cp	r22, r18
    2032:	73 07       	cpc	r23, r19
    2034:	84 07       	cpc	r24, r20
    2036:	38 f0       	brcs	.+14     	; 0x2046 <__divsf3_pse+0x26>
    2038:	9f 5f       	subi	r25, 0xFF	; 255
    203a:	5f 4f       	sbci	r21, 0xFF	; 255
    203c:	22 0f       	add	r18, r18
    203e:	33 1f       	adc	r19, r19
    2040:	44 1f       	adc	r20, r20
    2042:	aa 1f       	adc	r26, r26
    2044:	a9 f3       	breq	.-22     	; 0x2030 <__divsf3_pse+0x10>
    2046:	35 d0       	rcall	.+106    	; 0x20b2 <__divsf3_pse+0x92>
    2048:	0e 2e       	mov	r0, r30
    204a:	3a f0       	brmi	.+14     	; 0x205a <__divsf3_pse+0x3a>
    204c:	e0 e8       	ldi	r30, 0x80	; 128
    204e:	32 d0       	rcall	.+100    	; 0x20b4 <__divsf3_pse+0x94>
    2050:	91 50       	subi	r25, 0x01	; 1
    2052:	50 40       	sbci	r21, 0x00	; 0
    2054:	e6 95       	lsr	r30
    2056:	00 1c       	adc	r0, r0
    2058:	ca f7       	brpl	.-14     	; 0x204c <__divsf3_pse+0x2c>
    205a:	2b d0       	rcall	.+86     	; 0x20b2 <__divsf3_pse+0x92>
    205c:	fe 2f       	mov	r31, r30
    205e:	29 d0       	rcall	.+82     	; 0x20b2 <__divsf3_pse+0x92>
    2060:	66 0f       	add	r22, r22
    2062:	77 1f       	adc	r23, r23
    2064:	88 1f       	adc	r24, r24
    2066:	bb 1f       	adc	r27, r27
    2068:	26 17       	cp	r18, r22
    206a:	37 07       	cpc	r19, r23
    206c:	48 07       	cpc	r20, r24
    206e:	ab 07       	cpc	r26, r27
    2070:	b0 e8       	ldi	r27, 0x80	; 128
    2072:	09 f0       	breq	.+2      	; 0x2076 <__divsf3_pse+0x56>
    2074:	bb 0b       	sbc	r27, r27
    2076:	80 2d       	mov	r24, r0
    2078:	bf 01       	movw	r22, r30
    207a:	ff 27       	eor	r31, r31
    207c:	93 58       	subi	r25, 0x83	; 131
    207e:	5f 4f       	sbci	r21, 0xFF	; 255
    2080:	3a f0       	brmi	.+14     	; 0x2090 <__divsf3_pse+0x70>
    2082:	9e 3f       	cpi	r25, 0xFE	; 254
    2084:	51 05       	cpc	r21, r1
    2086:	78 f0       	brcs	.+30     	; 0x20a6 <__divsf3_pse+0x86>
    2088:	0c 94 be 10 	jmp	0x217c	; 0x217c <__fp_inf>
    208c:	0c 94 09 11 	jmp	0x2212	; 0x2212 <__fp_szero>
    2090:	5f 3f       	cpi	r21, 0xFF	; 255
    2092:	e4 f3       	brlt	.-8      	; 0x208c <__divsf3_pse+0x6c>
    2094:	98 3e       	cpi	r25, 0xE8	; 232
    2096:	d4 f3       	brlt	.-12     	; 0x208c <__divsf3_pse+0x6c>
    2098:	86 95       	lsr	r24
    209a:	77 95       	ror	r23
    209c:	67 95       	ror	r22
    209e:	b7 95       	ror	r27
    20a0:	f7 95       	ror	r31
    20a2:	9f 5f       	subi	r25, 0xFF	; 255
    20a4:	c9 f7       	brne	.-14     	; 0x2098 <__divsf3_pse+0x78>
    20a6:	88 0f       	add	r24, r24
    20a8:	91 1d       	adc	r25, r1
    20aa:	96 95       	lsr	r25
    20ac:	87 95       	ror	r24
    20ae:	97 f9       	bld	r25, 7
    20b0:	08 95       	ret
    20b2:	e1 e0       	ldi	r30, 0x01	; 1
    20b4:	66 0f       	add	r22, r22
    20b6:	77 1f       	adc	r23, r23
    20b8:	88 1f       	adc	r24, r24
    20ba:	bb 1f       	adc	r27, r27
    20bc:	62 17       	cp	r22, r18
    20be:	73 07       	cpc	r23, r19
    20c0:	84 07       	cpc	r24, r20
    20c2:	ba 07       	cpc	r27, r26
    20c4:	20 f0       	brcs	.+8      	; 0x20ce <__divsf3_pse+0xae>
    20c6:	62 1b       	sub	r22, r18
    20c8:	73 0b       	sbc	r23, r19
    20ca:	84 0b       	sbc	r24, r20
    20cc:	ba 0b       	sbc	r27, r26
    20ce:	ee 1f       	adc	r30, r30
    20d0:	88 f7       	brcc	.-30     	; 0x20b4 <__divsf3_pse+0x94>
    20d2:	e0 95       	com	r30
    20d4:	08 95       	ret

000020d6 <__fixunssfsi>:
    20d6:	0e 94 ee 10 	call	0x21dc	; 0x21dc <__fp_splitA>
    20da:	88 f0       	brcs	.+34     	; 0x20fe <__fixunssfsi+0x28>
    20dc:	9f 57       	subi	r25, 0x7F	; 127
    20de:	98 f0       	brcs	.+38     	; 0x2106 <__fixunssfsi+0x30>
    20e0:	b9 2f       	mov	r27, r25
    20e2:	99 27       	eor	r25, r25
    20e4:	b7 51       	subi	r27, 0x17	; 23
    20e6:	b0 f0       	brcs	.+44     	; 0x2114 <__fixunssfsi+0x3e>
    20e8:	e1 f0       	breq	.+56     	; 0x2122 <__fixunssfsi+0x4c>
    20ea:	66 0f       	add	r22, r22
    20ec:	77 1f       	adc	r23, r23
    20ee:	88 1f       	adc	r24, r24
    20f0:	99 1f       	adc	r25, r25
    20f2:	1a f0       	brmi	.+6      	; 0x20fa <__fixunssfsi+0x24>
    20f4:	ba 95       	dec	r27
    20f6:	c9 f7       	brne	.-14     	; 0x20ea <__fixunssfsi+0x14>
    20f8:	14 c0       	rjmp	.+40     	; 0x2122 <__fixunssfsi+0x4c>
    20fa:	b1 30       	cpi	r27, 0x01	; 1
    20fc:	91 f0       	breq	.+36     	; 0x2122 <__fixunssfsi+0x4c>
    20fe:	0e 94 08 11 	call	0x2210	; 0x2210 <__fp_zero>
    2102:	b1 e0       	ldi	r27, 0x01	; 1
    2104:	08 95       	ret
    2106:	0c 94 08 11 	jmp	0x2210	; 0x2210 <__fp_zero>
    210a:	67 2f       	mov	r22, r23
    210c:	78 2f       	mov	r23, r24
    210e:	88 27       	eor	r24, r24
    2110:	b8 5f       	subi	r27, 0xF8	; 248
    2112:	39 f0       	breq	.+14     	; 0x2122 <__fixunssfsi+0x4c>
    2114:	b9 3f       	cpi	r27, 0xF9	; 249
    2116:	cc f3       	brlt	.-14     	; 0x210a <__fixunssfsi+0x34>
    2118:	86 95       	lsr	r24
    211a:	77 95       	ror	r23
    211c:	67 95       	ror	r22
    211e:	b3 95       	inc	r27
    2120:	d9 f7       	brne	.-10     	; 0x2118 <__fixunssfsi+0x42>
    2122:	3e f4       	brtc	.+14     	; 0x2132 <__fixunssfsi+0x5c>
    2124:	90 95       	com	r25
    2126:	80 95       	com	r24
    2128:	70 95       	com	r23
    212a:	61 95       	neg	r22
    212c:	7f 4f       	sbci	r23, 0xFF	; 255
    212e:	8f 4f       	sbci	r24, 0xFF	; 255
    2130:	9f 4f       	sbci	r25, 0xFF	; 255
    2132:	08 95       	ret

00002134 <__fp_cmp>:
    2134:	99 0f       	add	r25, r25
    2136:	00 08       	sbc	r0, r0
    2138:	55 0f       	add	r21, r21
    213a:	aa 0b       	sbc	r26, r26
    213c:	e0 e8       	ldi	r30, 0x80	; 128
    213e:	fe ef       	ldi	r31, 0xFE	; 254
    2140:	16 16       	cp	r1, r22
    2142:	17 06       	cpc	r1, r23
    2144:	e8 07       	cpc	r30, r24
    2146:	f9 07       	cpc	r31, r25
    2148:	c0 f0       	brcs	.+48     	; 0x217a <__fp_cmp+0x46>
    214a:	12 16       	cp	r1, r18
    214c:	13 06       	cpc	r1, r19
    214e:	e4 07       	cpc	r30, r20
    2150:	f5 07       	cpc	r31, r21
    2152:	98 f0       	brcs	.+38     	; 0x217a <__fp_cmp+0x46>
    2154:	62 1b       	sub	r22, r18
    2156:	73 0b       	sbc	r23, r19
    2158:	84 0b       	sbc	r24, r20
    215a:	95 0b       	sbc	r25, r21
    215c:	39 f4       	brne	.+14     	; 0x216c <__fp_cmp+0x38>
    215e:	0a 26       	eor	r0, r26
    2160:	61 f0       	breq	.+24     	; 0x217a <__fp_cmp+0x46>
    2162:	23 2b       	or	r18, r19
    2164:	24 2b       	or	r18, r20
    2166:	25 2b       	or	r18, r21
    2168:	21 f4       	brne	.+8      	; 0x2172 <__fp_cmp+0x3e>
    216a:	08 95       	ret
    216c:	0a 26       	eor	r0, r26
    216e:	09 f4       	brne	.+2      	; 0x2172 <__fp_cmp+0x3e>
    2170:	a1 40       	sbci	r26, 0x01	; 1
    2172:	a6 95       	lsr	r26
    2174:	8f ef       	ldi	r24, 0xFF	; 255
    2176:	81 1d       	adc	r24, r1
    2178:	81 1d       	adc	r24, r1
    217a:	08 95       	ret

0000217c <__fp_inf>:
    217c:	97 f9       	bld	r25, 7
    217e:	9f 67       	ori	r25, 0x7F	; 127
    2180:	80 e8       	ldi	r24, 0x80	; 128
    2182:	70 e0       	ldi	r23, 0x00	; 0
    2184:	60 e0       	ldi	r22, 0x00	; 0
    2186:	08 95       	ret

00002188 <__fp_nan>:
    2188:	9f ef       	ldi	r25, 0xFF	; 255
    218a:	80 ec       	ldi	r24, 0xC0	; 192
    218c:	08 95       	ret

0000218e <__fp_pscA>:
    218e:	00 24       	eor	r0, r0
    2190:	0a 94       	dec	r0
    2192:	16 16       	cp	r1, r22
    2194:	17 06       	cpc	r1, r23
    2196:	18 06       	cpc	r1, r24
    2198:	09 06       	cpc	r0, r25
    219a:	08 95       	ret

0000219c <__fp_pscB>:
    219c:	00 24       	eor	r0, r0
    219e:	0a 94       	dec	r0
    21a0:	12 16       	cp	r1, r18
    21a2:	13 06       	cpc	r1, r19
    21a4:	14 06       	cpc	r1, r20
    21a6:	05 06       	cpc	r0, r21
    21a8:	08 95       	ret

000021aa <__fp_round>:
    21aa:	09 2e       	mov	r0, r25
    21ac:	03 94       	inc	r0
    21ae:	00 0c       	add	r0, r0
    21b0:	11 f4       	brne	.+4      	; 0x21b6 <__fp_round+0xc>
    21b2:	88 23       	and	r24, r24
    21b4:	52 f0       	brmi	.+20     	; 0x21ca <__fp_round+0x20>
    21b6:	bb 0f       	add	r27, r27
    21b8:	40 f4       	brcc	.+16     	; 0x21ca <__fp_round+0x20>
    21ba:	bf 2b       	or	r27, r31
    21bc:	11 f4       	brne	.+4      	; 0x21c2 <__fp_round+0x18>
    21be:	60 ff       	sbrs	r22, 0
    21c0:	04 c0       	rjmp	.+8      	; 0x21ca <__fp_round+0x20>
    21c2:	6f 5f       	subi	r22, 0xFF	; 255
    21c4:	7f 4f       	sbci	r23, 0xFF	; 255
    21c6:	8f 4f       	sbci	r24, 0xFF	; 255
    21c8:	9f 4f       	sbci	r25, 0xFF	; 255
    21ca:	08 95       	ret

000021cc <__fp_split3>:
    21cc:	57 fd       	sbrc	r21, 7
    21ce:	90 58       	subi	r25, 0x80	; 128
    21d0:	44 0f       	add	r20, r20
    21d2:	55 1f       	adc	r21, r21
    21d4:	59 f0       	breq	.+22     	; 0x21ec <__fp_splitA+0x10>
    21d6:	5f 3f       	cpi	r21, 0xFF	; 255
    21d8:	71 f0       	breq	.+28     	; 0x21f6 <__fp_splitA+0x1a>
    21da:	47 95       	ror	r20

000021dc <__fp_splitA>:
    21dc:	88 0f       	add	r24, r24
    21de:	97 fb       	bst	r25, 7
    21e0:	99 1f       	adc	r25, r25
    21e2:	61 f0       	breq	.+24     	; 0x21fc <__fp_splitA+0x20>
    21e4:	9f 3f       	cpi	r25, 0xFF	; 255
    21e6:	79 f0       	breq	.+30     	; 0x2206 <__fp_splitA+0x2a>
    21e8:	87 95       	ror	r24
    21ea:	08 95       	ret
    21ec:	12 16       	cp	r1, r18
    21ee:	13 06       	cpc	r1, r19
    21f0:	14 06       	cpc	r1, r20
    21f2:	55 1f       	adc	r21, r21
    21f4:	f2 cf       	rjmp	.-28     	; 0x21da <__fp_split3+0xe>
    21f6:	46 95       	lsr	r20
    21f8:	f1 df       	rcall	.-30     	; 0x21dc <__fp_splitA>
    21fa:	08 c0       	rjmp	.+16     	; 0x220c <__fp_splitA+0x30>
    21fc:	16 16       	cp	r1, r22
    21fe:	17 06       	cpc	r1, r23
    2200:	18 06       	cpc	r1, r24
    2202:	99 1f       	adc	r25, r25
    2204:	f1 cf       	rjmp	.-30     	; 0x21e8 <__fp_splitA+0xc>
    2206:	86 95       	lsr	r24
    2208:	71 05       	cpc	r23, r1
    220a:	61 05       	cpc	r22, r1
    220c:	08 94       	sec
    220e:	08 95       	ret

00002210 <__fp_zero>:
    2210:	e8 94       	clt

00002212 <__fp_szero>:
    2212:	bb 27       	eor	r27, r27
    2214:	66 27       	eor	r22, r22
    2216:	77 27       	eor	r23, r23
    2218:	cb 01       	movw	r24, r22
    221a:	97 f9       	bld	r25, 7
    221c:	08 95       	ret

0000221e <__gesf2>:
    221e:	0e 94 9a 10 	call	0x2134	; 0x2134 <__fp_cmp>
    2222:	08 f4       	brcc	.+2      	; 0x2226 <__gesf2+0x8>
    2224:	8f ef       	ldi	r24, 0xFF	; 255
    2226:	08 95       	ret

00002228 <__mulsf3>:
    2228:	0e 94 27 11 	call	0x224e	; 0x224e <__mulsf3x>
    222c:	0c 94 d5 10 	jmp	0x21aa	; 0x21aa <__fp_round>
    2230:	0e 94 c7 10 	call	0x218e	; 0x218e <__fp_pscA>
    2234:	38 f0       	brcs	.+14     	; 0x2244 <__mulsf3+0x1c>
    2236:	0e 94 ce 10 	call	0x219c	; 0x219c <__fp_pscB>
    223a:	20 f0       	brcs	.+8      	; 0x2244 <__mulsf3+0x1c>
    223c:	95 23       	and	r25, r21
    223e:	11 f0       	breq	.+4      	; 0x2244 <__mulsf3+0x1c>
    2240:	0c 94 be 10 	jmp	0x217c	; 0x217c <__fp_inf>
    2244:	0c 94 c4 10 	jmp	0x2188	; 0x2188 <__fp_nan>
    2248:	11 24       	eor	r1, r1
    224a:	0c 94 09 11 	jmp	0x2212	; 0x2212 <__fp_szero>

0000224e <__mulsf3x>:
    224e:	0e 94 e6 10 	call	0x21cc	; 0x21cc <__fp_split3>
    2252:	70 f3       	brcs	.-36     	; 0x2230 <__mulsf3+0x8>

00002254 <__mulsf3_pse>:
    2254:	95 9f       	mul	r25, r21
    2256:	c1 f3       	breq	.-16     	; 0x2248 <__mulsf3+0x20>
    2258:	95 0f       	add	r25, r21
    225a:	50 e0       	ldi	r21, 0x00	; 0
    225c:	55 1f       	adc	r21, r21
    225e:	62 9f       	mul	r22, r18
    2260:	f0 01       	movw	r30, r0
    2262:	72 9f       	mul	r23, r18
    2264:	bb 27       	eor	r27, r27
    2266:	f0 0d       	add	r31, r0
    2268:	b1 1d       	adc	r27, r1
    226a:	63 9f       	mul	r22, r19
    226c:	aa 27       	eor	r26, r26
    226e:	f0 0d       	add	r31, r0
    2270:	b1 1d       	adc	r27, r1
    2272:	aa 1f       	adc	r26, r26
    2274:	64 9f       	mul	r22, r20
    2276:	66 27       	eor	r22, r22
    2278:	b0 0d       	add	r27, r0
    227a:	a1 1d       	adc	r26, r1
    227c:	66 1f       	adc	r22, r22
    227e:	82 9f       	mul	r24, r18
    2280:	22 27       	eor	r18, r18
    2282:	b0 0d       	add	r27, r0
    2284:	a1 1d       	adc	r26, r1
    2286:	62 1f       	adc	r22, r18
    2288:	73 9f       	mul	r23, r19
    228a:	b0 0d       	add	r27, r0
    228c:	a1 1d       	adc	r26, r1
    228e:	62 1f       	adc	r22, r18
    2290:	83 9f       	mul	r24, r19
    2292:	a0 0d       	add	r26, r0
    2294:	61 1d       	adc	r22, r1
    2296:	22 1f       	adc	r18, r18
    2298:	74 9f       	mul	r23, r20
    229a:	33 27       	eor	r19, r19
    229c:	a0 0d       	add	r26, r0
    229e:	61 1d       	adc	r22, r1
    22a0:	23 1f       	adc	r18, r19
    22a2:	84 9f       	mul	r24, r20
    22a4:	60 0d       	add	r22, r0
    22a6:	21 1d       	adc	r18, r1
    22a8:	82 2f       	mov	r24, r18
    22aa:	76 2f       	mov	r23, r22
    22ac:	6a 2f       	mov	r22, r26
    22ae:	11 24       	eor	r1, r1
    22b0:	9f 57       	subi	r25, 0x7F	; 127
    22b2:	50 40       	sbci	r21, 0x00	; 0
    22b4:	9a f0       	brmi	.+38     	; 0x22dc <__mulsf3_pse+0x88>
    22b6:	f1 f0       	breq	.+60     	; 0x22f4 <__mulsf3_pse+0xa0>
    22b8:	88 23       	and	r24, r24
    22ba:	4a f0       	brmi	.+18     	; 0x22ce <__mulsf3_pse+0x7a>
    22bc:	ee 0f       	add	r30, r30
    22be:	ff 1f       	adc	r31, r31
    22c0:	bb 1f       	adc	r27, r27
    22c2:	66 1f       	adc	r22, r22
    22c4:	77 1f       	adc	r23, r23
    22c6:	88 1f       	adc	r24, r24
    22c8:	91 50       	subi	r25, 0x01	; 1
    22ca:	50 40       	sbci	r21, 0x00	; 0
    22cc:	a9 f7       	brne	.-22     	; 0x22b8 <__mulsf3_pse+0x64>
    22ce:	9e 3f       	cpi	r25, 0xFE	; 254
    22d0:	51 05       	cpc	r21, r1
    22d2:	80 f0       	brcs	.+32     	; 0x22f4 <__mulsf3_pse+0xa0>
    22d4:	0c 94 be 10 	jmp	0x217c	; 0x217c <__fp_inf>
    22d8:	0c 94 09 11 	jmp	0x2212	; 0x2212 <__fp_szero>
    22dc:	5f 3f       	cpi	r21, 0xFF	; 255
    22de:	e4 f3       	brlt	.-8      	; 0x22d8 <__mulsf3_pse+0x84>
    22e0:	98 3e       	cpi	r25, 0xE8	; 232
    22e2:	d4 f3       	brlt	.-12     	; 0x22d8 <__mulsf3_pse+0x84>
    22e4:	86 95       	lsr	r24
    22e6:	77 95       	ror	r23
    22e8:	67 95       	ror	r22
    22ea:	b7 95       	ror	r27
    22ec:	f7 95       	ror	r31
    22ee:	e7 95       	ror	r30
    22f0:	9f 5f       	subi	r25, 0xFF	; 255
    22f2:	c1 f7       	brne	.-16     	; 0x22e4 <__mulsf3_pse+0x90>
    22f4:	fe 2b       	or	r31, r30
    22f6:	88 0f       	add	r24, r24
    22f8:	91 1d       	adc	r25, r1
    22fa:	96 95       	lsr	r25
    22fc:	87 95       	ror	r24
    22fe:	97 f9       	bld	r25, 7
    2300:	08 95       	ret

00002302 <__divmodhi4>:
    2302:	97 fb       	bst	r25, 7
    2304:	07 2e       	mov	r0, r23
    2306:	16 f4       	brtc	.+4      	; 0x230c <__divmodhi4+0xa>
    2308:	00 94       	com	r0
    230a:	07 d0       	rcall	.+14     	; 0x231a <__divmodhi4_neg1>
    230c:	77 fd       	sbrc	r23, 7
    230e:	09 d0       	rcall	.+18     	; 0x2322 <__divmodhi4_neg2>
    2310:	0e 94 b7 11 	call	0x236e	; 0x236e <__udivmodhi4>
    2314:	07 fc       	sbrc	r0, 7
    2316:	05 d0       	rcall	.+10     	; 0x2322 <__divmodhi4_neg2>
    2318:	3e f4       	brtc	.+14     	; 0x2328 <__divmodhi4_exit>

0000231a <__divmodhi4_neg1>:
    231a:	90 95       	com	r25
    231c:	81 95       	neg	r24
    231e:	9f 4f       	sbci	r25, 0xFF	; 255
    2320:	08 95       	ret

00002322 <__divmodhi4_neg2>:
    2322:	70 95       	com	r23
    2324:	61 95       	neg	r22
    2326:	7f 4f       	sbci	r23, 0xFF	; 255

00002328 <__divmodhi4_exit>:
    2328:	08 95       	ret

0000232a <__udivmodsi4>:
    232a:	a1 e2       	ldi	r26, 0x21	; 33
    232c:	1a 2e       	mov	r1, r26
    232e:	aa 1b       	sub	r26, r26
    2330:	bb 1b       	sub	r27, r27
    2332:	fd 01       	movw	r30, r26
    2334:	0d c0       	rjmp	.+26     	; 0x2350 <__udivmodsi4_ep>

00002336 <__udivmodsi4_loop>:
    2336:	aa 1f       	adc	r26, r26
    2338:	bb 1f       	adc	r27, r27
    233a:	ee 1f       	adc	r30, r30
    233c:	ff 1f       	adc	r31, r31
    233e:	a2 17       	cp	r26, r18
    2340:	b3 07       	cpc	r27, r19
    2342:	e4 07       	cpc	r30, r20
    2344:	f5 07       	cpc	r31, r21
    2346:	20 f0       	brcs	.+8      	; 0x2350 <__udivmodsi4_ep>
    2348:	a2 1b       	sub	r26, r18
    234a:	b3 0b       	sbc	r27, r19
    234c:	e4 0b       	sbc	r30, r20
    234e:	f5 0b       	sbc	r31, r21

00002350 <__udivmodsi4_ep>:
    2350:	66 1f       	adc	r22, r22
    2352:	77 1f       	adc	r23, r23
    2354:	88 1f       	adc	r24, r24
    2356:	99 1f       	adc	r25, r25
    2358:	1a 94       	dec	r1
    235a:	69 f7       	brne	.-38     	; 0x2336 <__udivmodsi4_loop>
    235c:	60 95       	com	r22
    235e:	70 95       	com	r23
    2360:	80 95       	com	r24
    2362:	90 95       	com	r25
    2364:	9b 01       	movw	r18, r22
    2366:	ac 01       	movw	r20, r24
    2368:	bd 01       	movw	r22, r26
    236a:	cf 01       	movw	r24, r30
    236c:	08 95       	ret

0000236e <__udivmodhi4>:
    236e:	aa 1b       	sub	r26, r26
    2370:	bb 1b       	sub	r27, r27
    2372:	51 e1       	ldi	r21, 0x11	; 17
    2374:	07 c0       	rjmp	.+14     	; 0x2384 <__udivmodhi4_ep>

00002376 <__udivmodhi4_loop>:
    2376:	aa 1f       	adc	r26, r26
    2378:	bb 1f       	adc	r27, r27
    237a:	a6 17       	cp	r26, r22
    237c:	b7 07       	cpc	r27, r23
    237e:	10 f0       	brcs	.+4      	; 0x2384 <__udivmodhi4_ep>
    2380:	a6 1b       	sub	r26, r22
    2382:	b7 0b       	sbc	r27, r23

00002384 <__udivmodhi4_ep>:
    2384:	88 1f       	adc	r24, r24
    2386:	99 1f       	adc	r25, r25
    2388:	5a 95       	dec	r21
    238a:	a9 f7       	brne	.-22     	; 0x2376 <__udivmodhi4_loop>
    238c:	80 95       	com	r24
    238e:	90 95       	com	r25
    2390:	bc 01       	movw	r22, r24
    2392:	cd 01       	movw	r24, r26
    2394:	08 95       	ret

00002396 <snprintf>:
    2396:	ae e0       	ldi	r26, 0x0E	; 14
    2398:	b0 e0       	ldi	r27, 0x00	; 0
    239a:	e1 ed       	ldi	r30, 0xD1	; 209
    239c:	f1 e1       	ldi	r31, 0x11	; 17
    239e:	0c 94 9a 14 	jmp	0x2934	; 0x2934 <__prologue_saves__+0x1c>
    23a2:	0d 89       	ldd	r16, Y+21	; 0x15
    23a4:	1e 89       	ldd	r17, Y+22	; 0x16
    23a6:	8f 89       	ldd	r24, Y+23	; 0x17
    23a8:	98 8d       	ldd	r25, Y+24	; 0x18
    23aa:	26 e0       	ldi	r18, 0x06	; 6
    23ac:	2c 83       	std	Y+4, r18	; 0x04
    23ae:	1a 83       	std	Y+2, r17	; 0x02
    23b0:	09 83       	std	Y+1, r16	; 0x01
    23b2:	97 ff       	sbrs	r25, 7
    23b4:	02 c0       	rjmp	.+4      	; 0x23ba <snprintf+0x24>
    23b6:	80 e0       	ldi	r24, 0x00	; 0
    23b8:	90 e8       	ldi	r25, 0x80	; 128
    23ba:	01 97       	sbiw	r24, 0x01	; 1
    23bc:	9e 83       	std	Y+6, r25	; 0x06
    23be:	8d 83       	std	Y+5, r24	; 0x05
    23c0:	ae 01       	movw	r20, r28
    23c2:	45 5e       	subi	r20, 0xE5	; 229
    23c4:	5f 4f       	sbci	r21, 0xFF	; 255
    23c6:	69 8d       	ldd	r22, Y+25	; 0x19
    23c8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    23ca:	ce 01       	movw	r24, r28
    23cc:	01 96       	adiw	r24, 0x01	; 1
    23ce:	0e 94 fb 11 	call	0x23f6	; 0x23f6 <vfprintf>
    23d2:	4d 81       	ldd	r20, Y+5	; 0x05
    23d4:	5e 81       	ldd	r21, Y+6	; 0x06
    23d6:	57 fd       	sbrc	r21, 7
    23d8:	0a c0       	rjmp	.+20     	; 0x23ee <snprintf+0x58>
    23da:	2f 81       	ldd	r18, Y+7	; 0x07
    23dc:	38 85       	ldd	r19, Y+8	; 0x08
    23de:	42 17       	cp	r20, r18
    23e0:	53 07       	cpc	r21, r19
    23e2:	0c f4       	brge	.+2      	; 0x23e6 <snprintf+0x50>
    23e4:	9a 01       	movw	r18, r20
    23e6:	f8 01       	movw	r30, r16
    23e8:	e2 0f       	add	r30, r18
    23ea:	f3 1f       	adc	r31, r19
    23ec:	10 82       	st	Z, r1
    23ee:	2e 96       	adiw	r28, 0x0e	; 14
    23f0:	e4 e0       	ldi	r30, 0x04	; 4
    23f2:	0c 94 b6 14 	jmp	0x296c	; 0x296c <__epilogue_restores__+0x1c>

000023f6 <vfprintf>:
    23f6:	ab e0       	ldi	r26, 0x0B	; 11
    23f8:	b0 e0       	ldi	r27, 0x00	; 0
    23fa:	e1 e0       	ldi	r30, 0x01	; 1
    23fc:	f2 e1       	ldi	r31, 0x12	; 18
    23fe:	0c 94 8c 14 	jmp	0x2918	; 0x2918 <__prologue_saves__>
    2402:	6c 01       	movw	r12, r24
    2404:	7b 01       	movw	r14, r22
    2406:	8a 01       	movw	r16, r20
    2408:	fc 01       	movw	r30, r24
    240a:	17 82       	std	Z+7, r1	; 0x07
    240c:	16 82       	std	Z+6, r1	; 0x06
    240e:	83 81       	ldd	r24, Z+3	; 0x03
    2410:	81 ff       	sbrs	r24, 1
    2412:	cc c1       	rjmp	.+920    	; 0x27ac <vfprintf+0x3b6>
    2414:	ce 01       	movw	r24, r28
    2416:	01 96       	adiw	r24, 0x01	; 1
    2418:	3c 01       	movw	r6, r24
    241a:	f6 01       	movw	r30, r12
    241c:	93 81       	ldd	r25, Z+3	; 0x03
    241e:	f7 01       	movw	r30, r14
    2420:	93 fd       	sbrc	r25, 3
    2422:	85 91       	lpm	r24, Z+
    2424:	93 ff       	sbrs	r25, 3
    2426:	81 91       	ld	r24, Z+
    2428:	7f 01       	movw	r14, r30
    242a:	88 23       	and	r24, r24
    242c:	09 f4       	brne	.+2      	; 0x2430 <vfprintf+0x3a>
    242e:	ba c1       	rjmp	.+884    	; 0x27a4 <vfprintf+0x3ae>
    2430:	85 32       	cpi	r24, 0x25	; 37
    2432:	39 f4       	brne	.+14     	; 0x2442 <vfprintf+0x4c>
    2434:	93 fd       	sbrc	r25, 3
    2436:	85 91       	lpm	r24, Z+
    2438:	93 ff       	sbrs	r25, 3
    243a:	81 91       	ld	r24, Z+
    243c:	7f 01       	movw	r14, r30
    243e:	85 32       	cpi	r24, 0x25	; 37
    2440:	29 f4       	brne	.+10     	; 0x244c <vfprintf+0x56>
    2442:	b6 01       	movw	r22, r12
    2444:	90 e0       	ldi	r25, 0x00	; 0
    2446:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <fputc>
    244a:	e7 cf       	rjmp	.-50     	; 0x241a <vfprintf+0x24>
    244c:	91 2c       	mov	r9, r1
    244e:	21 2c       	mov	r2, r1
    2450:	31 2c       	mov	r3, r1
    2452:	ff e1       	ldi	r31, 0x1F	; 31
    2454:	f3 15       	cp	r31, r3
    2456:	d8 f0       	brcs	.+54     	; 0x248e <vfprintf+0x98>
    2458:	8b 32       	cpi	r24, 0x2B	; 43
    245a:	79 f0       	breq	.+30     	; 0x247a <vfprintf+0x84>
    245c:	38 f4       	brcc	.+14     	; 0x246c <vfprintf+0x76>
    245e:	80 32       	cpi	r24, 0x20	; 32
    2460:	79 f0       	breq	.+30     	; 0x2480 <vfprintf+0x8a>
    2462:	83 32       	cpi	r24, 0x23	; 35
    2464:	a1 f4       	brne	.+40     	; 0x248e <vfprintf+0x98>
    2466:	23 2d       	mov	r18, r3
    2468:	20 61       	ori	r18, 0x10	; 16
    246a:	1d c0       	rjmp	.+58     	; 0x24a6 <vfprintf+0xb0>
    246c:	8d 32       	cpi	r24, 0x2D	; 45
    246e:	61 f0       	breq	.+24     	; 0x2488 <vfprintf+0x92>
    2470:	80 33       	cpi	r24, 0x30	; 48
    2472:	69 f4       	brne	.+26     	; 0x248e <vfprintf+0x98>
    2474:	23 2d       	mov	r18, r3
    2476:	21 60       	ori	r18, 0x01	; 1
    2478:	16 c0       	rjmp	.+44     	; 0x24a6 <vfprintf+0xb0>
    247a:	83 2d       	mov	r24, r3
    247c:	82 60       	ori	r24, 0x02	; 2
    247e:	38 2e       	mov	r3, r24
    2480:	e3 2d       	mov	r30, r3
    2482:	e4 60       	ori	r30, 0x04	; 4
    2484:	3e 2e       	mov	r3, r30
    2486:	2a c0       	rjmp	.+84     	; 0x24dc <vfprintf+0xe6>
    2488:	f3 2d       	mov	r31, r3
    248a:	f8 60       	ori	r31, 0x08	; 8
    248c:	1d c0       	rjmp	.+58     	; 0x24c8 <vfprintf+0xd2>
    248e:	37 fc       	sbrc	r3, 7
    2490:	2d c0       	rjmp	.+90     	; 0x24ec <vfprintf+0xf6>
    2492:	20 ed       	ldi	r18, 0xD0	; 208
    2494:	28 0f       	add	r18, r24
    2496:	2a 30       	cpi	r18, 0x0A	; 10
    2498:	40 f0       	brcs	.+16     	; 0x24aa <vfprintf+0xb4>
    249a:	8e 32       	cpi	r24, 0x2E	; 46
    249c:	b9 f4       	brne	.+46     	; 0x24cc <vfprintf+0xd6>
    249e:	36 fc       	sbrc	r3, 6
    24a0:	81 c1       	rjmp	.+770    	; 0x27a4 <vfprintf+0x3ae>
    24a2:	23 2d       	mov	r18, r3
    24a4:	20 64       	ori	r18, 0x40	; 64
    24a6:	32 2e       	mov	r3, r18
    24a8:	19 c0       	rjmp	.+50     	; 0x24dc <vfprintf+0xe6>
    24aa:	36 fe       	sbrs	r3, 6
    24ac:	06 c0       	rjmp	.+12     	; 0x24ba <vfprintf+0xc4>
    24ae:	8a e0       	ldi	r24, 0x0A	; 10
    24b0:	98 9e       	mul	r9, r24
    24b2:	20 0d       	add	r18, r0
    24b4:	11 24       	eor	r1, r1
    24b6:	92 2e       	mov	r9, r18
    24b8:	11 c0       	rjmp	.+34     	; 0x24dc <vfprintf+0xe6>
    24ba:	ea e0       	ldi	r30, 0x0A	; 10
    24bc:	2e 9e       	mul	r2, r30
    24be:	20 0d       	add	r18, r0
    24c0:	11 24       	eor	r1, r1
    24c2:	22 2e       	mov	r2, r18
    24c4:	f3 2d       	mov	r31, r3
    24c6:	f0 62       	ori	r31, 0x20	; 32
    24c8:	3f 2e       	mov	r3, r31
    24ca:	08 c0       	rjmp	.+16     	; 0x24dc <vfprintf+0xe6>
    24cc:	8c 36       	cpi	r24, 0x6C	; 108
    24ce:	21 f4       	brne	.+8      	; 0x24d8 <vfprintf+0xe2>
    24d0:	83 2d       	mov	r24, r3
    24d2:	80 68       	ori	r24, 0x80	; 128
    24d4:	38 2e       	mov	r3, r24
    24d6:	02 c0       	rjmp	.+4      	; 0x24dc <vfprintf+0xe6>
    24d8:	88 36       	cpi	r24, 0x68	; 104
    24da:	41 f4       	brne	.+16     	; 0x24ec <vfprintf+0xf6>
    24dc:	f7 01       	movw	r30, r14
    24de:	93 fd       	sbrc	r25, 3
    24e0:	85 91       	lpm	r24, Z+
    24e2:	93 ff       	sbrs	r25, 3
    24e4:	81 91       	ld	r24, Z+
    24e6:	7f 01       	movw	r14, r30
    24e8:	81 11       	cpse	r24, r1
    24ea:	b3 cf       	rjmp	.-154    	; 0x2452 <vfprintf+0x5c>
    24ec:	98 2f       	mov	r25, r24
    24ee:	9f 7d       	andi	r25, 0xDF	; 223
    24f0:	95 54       	subi	r25, 0x45	; 69
    24f2:	93 30       	cpi	r25, 0x03	; 3
    24f4:	28 f4       	brcc	.+10     	; 0x2500 <vfprintf+0x10a>
    24f6:	0c 5f       	subi	r16, 0xFC	; 252
    24f8:	1f 4f       	sbci	r17, 0xFF	; 255
    24fa:	9f e3       	ldi	r25, 0x3F	; 63
    24fc:	99 83       	std	Y+1, r25	; 0x01
    24fe:	0d c0       	rjmp	.+26     	; 0x251a <vfprintf+0x124>
    2500:	83 36       	cpi	r24, 0x63	; 99
    2502:	31 f0       	breq	.+12     	; 0x2510 <vfprintf+0x11a>
    2504:	83 37       	cpi	r24, 0x73	; 115
    2506:	71 f0       	breq	.+28     	; 0x2524 <vfprintf+0x12e>
    2508:	83 35       	cpi	r24, 0x53	; 83
    250a:	09 f0       	breq	.+2      	; 0x250e <vfprintf+0x118>
    250c:	59 c0       	rjmp	.+178    	; 0x25c0 <vfprintf+0x1ca>
    250e:	21 c0       	rjmp	.+66     	; 0x2552 <vfprintf+0x15c>
    2510:	f8 01       	movw	r30, r16
    2512:	80 81       	ld	r24, Z
    2514:	89 83       	std	Y+1, r24	; 0x01
    2516:	0e 5f       	subi	r16, 0xFE	; 254
    2518:	1f 4f       	sbci	r17, 0xFF	; 255
    251a:	88 24       	eor	r8, r8
    251c:	83 94       	inc	r8
    251e:	91 2c       	mov	r9, r1
    2520:	53 01       	movw	r10, r6
    2522:	13 c0       	rjmp	.+38     	; 0x254a <vfprintf+0x154>
    2524:	28 01       	movw	r4, r16
    2526:	f2 e0       	ldi	r31, 0x02	; 2
    2528:	4f 0e       	add	r4, r31
    252a:	51 1c       	adc	r5, r1
    252c:	f8 01       	movw	r30, r16
    252e:	a0 80       	ld	r10, Z
    2530:	b1 80       	ldd	r11, Z+1	; 0x01
    2532:	36 fe       	sbrs	r3, 6
    2534:	03 c0       	rjmp	.+6      	; 0x253c <vfprintf+0x146>
    2536:	69 2d       	mov	r22, r9
    2538:	70 e0       	ldi	r23, 0x00	; 0
    253a:	02 c0       	rjmp	.+4      	; 0x2540 <vfprintf+0x14a>
    253c:	6f ef       	ldi	r22, 0xFF	; 255
    253e:	7f ef       	ldi	r23, 0xFF	; 255
    2540:	c5 01       	movw	r24, r10
    2542:	0e 94 e7 13 	call	0x27ce	; 0x27ce <strnlen>
    2546:	4c 01       	movw	r8, r24
    2548:	82 01       	movw	r16, r4
    254a:	f3 2d       	mov	r31, r3
    254c:	ff 77       	andi	r31, 0x7F	; 127
    254e:	3f 2e       	mov	r3, r31
    2550:	16 c0       	rjmp	.+44     	; 0x257e <vfprintf+0x188>
    2552:	28 01       	movw	r4, r16
    2554:	22 e0       	ldi	r18, 0x02	; 2
    2556:	42 0e       	add	r4, r18
    2558:	51 1c       	adc	r5, r1
    255a:	f8 01       	movw	r30, r16
    255c:	a0 80       	ld	r10, Z
    255e:	b1 80       	ldd	r11, Z+1	; 0x01
    2560:	36 fe       	sbrs	r3, 6
    2562:	03 c0       	rjmp	.+6      	; 0x256a <vfprintf+0x174>
    2564:	69 2d       	mov	r22, r9
    2566:	70 e0       	ldi	r23, 0x00	; 0
    2568:	02 c0       	rjmp	.+4      	; 0x256e <vfprintf+0x178>
    256a:	6f ef       	ldi	r22, 0xFF	; 255
    256c:	7f ef       	ldi	r23, 0xFF	; 255
    256e:	c5 01       	movw	r24, r10
    2570:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <strnlen_P>
    2574:	4c 01       	movw	r8, r24
    2576:	f3 2d       	mov	r31, r3
    2578:	f0 68       	ori	r31, 0x80	; 128
    257a:	3f 2e       	mov	r3, r31
    257c:	82 01       	movw	r16, r4
    257e:	33 fc       	sbrc	r3, 3
    2580:	1b c0       	rjmp	.+54     	; 0x25b8 <vfprintf+0x1c2>
    2582:	82 2d       	mov	r24, r2
    2584:	90 e0       	ldi	r25, 0x00	; 0
    2586:	88 16       	cp	r8, r24
    2588:	99 06       	cpc	r9, r25
    258a:	b0 f4       	brcc	.+44     	; 0x25b8 <vfprintf+0x1c2>
    258c:	b6 01       	movw	r22, r12
    258e:	80 e2       	ldi	r24, 0x20	; 32
    2590:	90 e0       	ldi	r25, 0x00	; 0
    2592:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <fputc>
    2596:	2a 94       	dec	r2
    2598:	f4 cf       	rjmp	.-24     	; 0x2582 <vfprintf+0x18c>
    259a:	f5 01       	movw	r30, r10
    259c:	37 fc       	sbrc	r3, 7
    259e:	85 91       	lpm	r24, Z+
    25a0:	37 fe       	sbrs	r3, 7
    25a2:	81 91       	ld	r24, Z+
    25a4:	5f 01       	movw	r10, r30
    25a6:	b6 01       	movw	r22, r12
    25a8:	90 e0       	ldi	r25, 0x00	; 0
    25aa:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <fputc>
    25ae:	21 10       	cpse	r2, r1
    25b0:	2a 94       	dec	r2
    25b2:	21 e0       	ldi	r18, 0x01	; 1
    25b4:	82 1a       	sub	r8, r18
    25b6:	91 08       	sbc	r9, r1
    25b8:	81 14       	cp	r8, r1
    25ba:	91 04       	cpc	r9, r1
    25bc:	71 f7       	brne	.-36     	; 0x259a <vfprintf+0x1a4>
    25be:	e8 c0       	rjmp	.+464    	; 0x2790 <vfprintf+0x39a>
    25c0:	84 36       	cpi	r24, 0x64	; 100
    25c2:	11 f0       	breq	.+4      	; 0x25c8 <vfprintf+0x1d2>
    25c4:	89 36       	cpi	r24, 0x69	; 105
    25c6:	41 f5       	brne	.+80     	; 0x2618 <vfprintf+0x222>
    25c8:	f8 01       	movw	r30, r16
    25ca:	37 fe       	sbrs	r3, 7
    25cc:	07 c0       	rjmp	.+14     	; 0x25dc <vfprintf+0x1e6>
    25ce:	60 81       	ld	r22, Z
    25d0:	71 81       	ldd	r23, Z+1	; 0x01
    25d2:	82 81       	ldd	r24, Z+2	; 0x02
    25d4:	93 81       	ldd	r25, Z+3	; 0x03
    25d6:	0c 5f       	subi	r16, 0xFC	; 252
    25d8:	1f 4f       	sbci	r17, 0xFF	; 255
    25da:	08 c0       	rjmp	.+16     	; 0x25ec <vfprintf+0x1f6>
    25dc:	60 81       	ld	r22, Z
    25de:	71 81       	ldd	r23, Z+1	; 0x01
    25e0:	07 2e       	mov	r0, r23
    25e2:	00 0c       	add	r0, r0
    25e4:	88 0b       	sbc	r24, r24
    25e6:	99 0b       	sbc	r25, r25
    25e8:	0e 5f       	subi	r16, 0xFE	; 254
    25ea:	1f 4f       	sbci	r17, 0xFF	; 255
    25ec:	f3 2d       	mov	r31, r3
    25ee:	ff 76       	andi	r31, 0x6F	; 111
    25f0:	3f 2e       	mov	r3, r31
    25f2:	97 ff       	sbrs	r25, 7
    25f4:	09 c0       	rjmp	.+18     	; 0x2608 <vfprintf+0x212>
    25f6:	90 95       	com	r25
    25f8:	80 95       	com	r24
    25fa:	70 95       	com	r23
    25fc:	61 95       	neg	r22
    25fe:	7f 4f       	sbci	r23, 0xFF	; 255
    2600:	8f 4f       	sbci	r24, 0xFF	; 255
    2602:	9f 4f       	sbci	r25, 0xFF	; 255
    2604:	f0 68       	ori	r31, 0x80	; 128
    2606:	3f 2e       	mov	r3, r31
    2608:	2a e0       	ldi	r18, 0x0A	; 10
    260a:	30 e0       	ldi	r19, 0x00	; 0
    260c:	a3 01       	movw	r20, r6
    260e:	0e 94 2e 14 	call	0x285c	; 0x285c <__ultoa_invert>
    2612:	88 2e       	mov	r8, r24
    2614:	86 18       	sub	r8, r6
    2616:	45 c0       	rjmp	.+138    	; 0x26a2 <vfprintf+0x2ac>
    2618:	85 37       	cpi	r24, 0x75	; 117
    261a:	31 f4       	brne	.+12     	; 0x2628 <vfprintf+0x232>
    261c:	23 2d       	mov	r18, r3
    261e:	2f 7e       	andi	r18, 0xEF	; 239
    2620:	b2 2e       	mov	r11, r18
    2622:	2a e0       	ldi	r18, 0x0A	; 10
    2624:	30 e0       	ldi	r19, 0x00	; 0
    2626:	25 c0       	rjmp	.+74     	; 0x2672 <vfprintf+0x27c>
    2628:	93 2d       	mov	r25, r3
    262a:	99 7f       	andi	r25, 0xF9	; 249
    262c:	b9 2e       	mov	r11, r25
    262e:	8f 36       	cpi	r24, 0x6F	; 111
    2630:	c1 f0       	breq	.+48     	; 0x2662 <vfprintf+0x26c>
    2632:	18 f4       	brcc	.+6      	; 0x263a <vfprintf+0x244>
    2634:	88 35       	cpi	r24, 0x58	; 88
    2636:	79 f0       	breq	.+30     	; 0x2656 <vfprintf+0x260>
    2638:	b5 c0       	rjmp	.+362    	; 0x27a4 <vfprintf+0x3ae>
    263a:	80 37       	cpi	r24, 0x70	; 112
    263c:	19 f0       	breq	.+6      	; 0x2644 <vfprintf+0x24e>
    263e:	88 37       	cpi	r24, 0x78	; 120
    2640:	21 f0       	breq	.+8      	; 0x264a <vfprintf+0x254>
    2642:	b0 c0       	rjmp	.+352    	; 0x27a4 <vfprintf+0x3ae>
    2644:	e9 2f       	mov	r30, r25
    2646:	e0 61       	ori	r30, 0x10	; 16
    2648:	be 2e       	mov	r11, r30
    264a:	b4 fe       	sbrs	r11, 4
    264c:	0d c0       	rjmp	.+26     	; 0x2668 <vfprintf+0x272>
    264e:	fb 2d       	mov	r31, r11
    2650:	f4 60       	ori	r31, 0x04	; 4
    2652:	bf 2e       	mov	r11, r31
    2654:	09 c0       	rjmp	.+18     	; 0x2668 <vfprintf+0x272>
    2656:	34 fe       	sbrs	r3, 4
    2658:	0a c0       	rjmp	.+20     	; 0x266e <vfprintf+0x278>
    265a:	29 2f       	mov	r18, r25
    265c:	26 60       	ori	r18, 0x06	; 6
    265e:	b2 2e       	mov	r11, r18
    2660:	06 c0       	rjmp	.+12     	; 0x266e <vfprintf+0x278>
    2662:	28 e0       	ldi	r18, 0x08	; 8
    2664:	30 e0       	ldi	r19, 0x00	; 0
    2666:	05 c0       	rjmp	.+10     	; 0x2672 <vfprintf+0x27c>
    2668:	20 e1       	ldi	r18, 0x10	; 16
    266a:	30 e0       	ldi	r19, 0x00	; 0
    266c:	02 c0       	rjmp	.+4      	; 0x2672 <vfprintf+0x27c>
    266e:	20 e1       	ldi	r18, 0x10	; 16
    2670:	32 e0       	ldi	r19, 0x02	; 2
    2672:	f8 01       	movw	r30, r16
    2674:	b7 fe       	sbrs	r11, 7
    2676:	07 c0       	rjmp	.+14     	; 0x2686 <vfprintf+0x290>
    2678:	60 81       	ld	r22, Z
    267a:	71 81       	ldd	r23, Z+1	; 0x01
    267c:	82 81       	ldd	r24, Z+2	; 0x02
    267e:	93 81       	ldd	r25, Z+3	; 0x03
    2680:	0c 5f       	subi	r16, 0xFC	; 252
    2682:	1f 4f       	sbci	r17, 0xFF	; 255
    2684:	06 c0       	rjmp	.+12     	; 0x2692 <vfprintf+0x29c>
    2686:	60 81       	ld	r22, Z
    2688:	71 81       	ldd	r23, Z+1	; 0x01
    268a:	80 e0       	ldi	r24, 0x00	; 0
    268c:	90 e0       	ldi	r25, 0x00	; 0
    268e:	0e 5f       	subi	r16, 0xFE	; 254
    2690:	1f 4f       	sbci	r17, 0xFF	; 255
    2692:	a3 01       	movw	r20, r6
    2694:	0e 94 2e 14 	call	0x285c	; 0x285c <__ultoa_invert>
    2698:	88 2e       	mov	r8, r24
    269a:	86 18       	sub	r8, r6
    269c:	fb 2d       	mov	r31, r11
    269e:	ff 77       	andi	r31, 0x7F	; 127
    26a0:	3f 2e       	mov	r3, r31
    26a2:	36 fe       	sbrs	r3, 6
    26a4:	0d c0       	rjmp	.+26     	; 0x26c0 <vfprintf+0x2ca>
    26a6:	23 2d       	mov	r18, r3
    26a8:	2e 7f       	andi	r18, 0xFE	; 254
    26aa:	a2 2e       	mov	r10, r18
    26ac:	89 14       	cp	r8, r9
    26ae:	58 f4       	brcc	.+22     	; 0x26c6 <vfprintf+0x2d0>
    26b0:	34 fe       	sbrs	r3, 4
    26b2:	0b c0       	rjmp	.+22     	; 0x26ca <vfprintf+0x2d4>
    26b4:	32 fc       	sbrc	r3, 2
    26b6:	09 c0       	rjmp	.+18     	; 0x26ca <vfprintf+0x2d4>
    26b8:	83 2d       	mov	r24, r3
    26ba:	8e 7e       	andi	r24, 0xEE	; 238
    26bc:	a8 2e       	mov	r10, r24
    26be:	05 c0       	rjmp	.+10     	; 0x26ca <vfprintf+0x2d4>
    26c0:	b8 2c       	mov	r11, r8
    26c2:	a3 2c       	mov	r10, r3
    26c4:	03 c0       	rjmp	.+6      	; 0x26cc <vfprintf+0x2d6>
    26c6:	b8 2c       	mov	r11, r8
    26c8:	01 c0       	rjmp	.+2      	; 0x26cc <vfprintf+0x2d6>
    26ca:	b9 2c       	mov	r11, r9
    26cc:	a4 fe       	sbrs	r10, 4
    26ce:	0f c0       	rjmp	.+30     	; 0x26ee <vfprintf+0x2f8>
    26d0:	fe 01       	movw	r30, r28
    26d2:	e8 0d       	add	r30, r8
    26d4:	f1 1d       	adc	r31, r1
    26d6:	80 81       	ld	r24, Z
    26d8:	80 33       	cpi	r24, 0x30	; 48
    26da:	21 f4       	brne	.+8      	; 0x26e4 <vfprintf+0x2ee>
    26dc:	9a 2d       	mov	r25, r10
    26de:	99 7e       	andi	r25, 0xE9	; 233
    26e0:	a9 2e       	mov	r10, r25
    26e2:	09 c0       	rjmp	.+18     	; 0x26f6 <vfprintf+0x300>
    26e4:	a2 fe       	sbrs	r10, 2
    26e6:	06 c0       	rjmp	.+12     	; 0x26f4 <vfprintf+0x2fe>
    26e8:	b3 94       	inc	r11
    26ea:	b3 94       	inc	r11
    26ec:	04 c0       	rjmp	.+8      	; 0x26f6 <vfprintf+0x300>
    26ee:	8a 2d       	mov	r24, r10
    26f0:	86 78       	andi	r24, 0x86	; 134
    26f2:	09 f0       	breq	.+2      	; 0x26f6 <vfprintf+0x300>
    26f4:	b3 94       	inc	r11
    26f6:	a3 fc       	sbrc	r10, 3
    26f8:	11 c0       	rjmp	.+34     	; 0x271c <vfprintf+0x326>
    26fa:	a0 fe       	sbrs	r10, 0
    26fc:	06 c0       	rjmp	.+12     	; 0x270a <vfprintf+0x314>
    26fe:	b2 14       	cp	r11, r2
    2700:	88 f4       	brcc	.+34     	; 0x2724 <vfprintf+0x32e>
    2702:	28 0c       	add	r2, r8
    2704:	92 2c       	mov	r9, r2
    2706:	9b 18       	sub	r9, r11
    2708:	0e c0       	rjmp	.+28     	; 0x2726 <vfprintf+0x330>
    270a:	b2 14       	cp	r11, r2
    270c:	60 f4       	brcc	.+24     	; 0x2726 <vfprintf+0x330>
    270e:	b6 01       	movw	r22, r12
    2710:	80 e2       	ldi	r24, 0x20	; 32
    2712:	90 e0       	ldi	r25, 0x00	; 0
    2714:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <fputc>
    2718:	b3 94       	inc	r11
    271a:	f7 cf       	rjmp	.-18     	; 0x270a <vfprintf+0x314>
    271c:	b2 14       	cp	r11, r2
    271e:	18 f4       	brcc	.+6      	; 0x2726 <vfprintf+0x330>
    2720:	2b 18       	sub	r2, r11
    2722:	02 c0       	rjmp	.+4      	; 0x2728 <vfprintf+0x332>
    2724:	98 2c       	mov	r9, r8
    2726:	21 2c       	mov	r2, r1
    2728:	a4 fe       	sbrs	r10, 4
    272a:	10 c0       	rjmp	.+32     	; 0x274c <vfprintf+0x356>
    272c:	b6 01       	movw	r22, r12
    272e:	80 e3       	ldi	r24, 0x30	; 48
    2730:	90 e0       	ldi	r25, 0x00	; 0
    2732:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <fputc>
    2736:	a2 fe       	sbrs	r10, 2
    2738:	17 c0       	rjmp	.+46     	; 0x2768 <vfprintf+0x372>
    273a:	a1 fc       	sbrc	r10, 1
    273c:	03 c0       	rjmp	.+6      	; 0x2744 <vfprintf+0x34e>
    273e:	88 e7       	ldi	r24, 0x78	; 120
    2740:	90 e0       	ldi	r25, 0x00	; 0
    2742:	02 c0       	rjmp	.+4      	; 0x2748 <vfprintf+0x352>
    2744:	88 e5       	ldi	r24, 0x58	; 88
    2746:	90 e0       	ldi	r25, 0x00	; 0
    2748:	b6 01       	movw	r22, r12
    274a:	0c c0       	rjmp	.+24     	; 0x2764 <vfprintf+0x36e>
    274c:	8a 2d       	mov	r24, r10
    274e:	86 78       	andi	r24, 0x86	; 134
    2750:	59 f0       	breq	.+22     	; 0x2768 <vfprintf+0x372>
    2752:	a1 fe       	sbrs	r10, 1
    2754:	02 c0       	rjmp	.+4      	; 0x275a <vfprintf+0x364>
    2756:	8b e2       	ldi	r24, 0x2B	; 43
    2758:	01 c0       	rjmp	.+2      	; 0x275c <vfprintf+0x366>
    275a:	80 e2       	ldi	r24, 0x20	; 32
    275c:	a7 fc       	sbrc	r10, 7
    275e:	8d e2       	ldi	r24, 0x2D	; 45
    2760:	b6 01       	movw	r22, r12
    2762:	90 e0       	ldi	r25, 0x00	; 0
    2764:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <fputc>
    2768:	89 14       	cp	r8, r9
    276a:	38 f4       	brcc	.+14     	; 0x277a <vfprintf+0x384>
    276c:	b6 01       	movw	r22, r12
    276e:	80 e3       	ldi	r24, 0x30	; 48
    2770:	90 e0       	ldi	r25, 0x00	; 0
    2772:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <fputc>
    2776:	9a 94       	dec	r9
    2778:	f7 cf       	rjmp	.-18     	; 0x2768 <vfprintf+0x372>
    277a:	8a 94       	dec	r8
    277c:	f3 01       	movw	r30, r6
    277e:	e8 0d       	add	r30, r8
    2780:	f1 1d       	adc	r31, r1
    2782:	80 81       	ld	r24, Z
    2784:	b6 01       	movw	r22, r12
    2786:	90 e0       	ldi	r25, 0x00	; 0
    2788:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <fputc>
    278c:	81 10       	cpse	r8, r1
    278e:	f5 cf       	rjmp	.-22     	; 0x277a <vfprintf+0x384>
    2790:	22 20       	and	r2, r2
    2792:	09 f4       	brne	.+2      	; 0x2796 <vfprintf+0x3a0>
    2794:	42 ce       	rjmp	.-892    	; 0x241a <vfprintf+0x24>
    2796:	b6 01       	movw	r22, r12
    2798:	80 e2       	ldi	r24, 0x20	; 32
    279a:	90 e0       	ldi	r25, 0x00	; 0
    279c:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <fputc>
    27a0:	2a 94       	dec	r2
    27a2:	f6 cf       	rjmp	.-20     	; 0x2790 <vfprintf+0x39a>
    27a4:	f6 01       	movw	r30, r12
    27a6:	86 81       	ldd	r24, Z+6	; 0x06
    27a8:	97 81       	ldd	r25, Z+7	; 0x07
    27aa:	02 c0       	rjmp	.+4      	; 0x27b0 <vfprintf+0x3ba>
    27ac:	8f ef       	ldi	r24, 0xFF	; 255
    27ae:	9f ef       	ldi	r25, 0xFF	; 255
    27b0:	2b 96       	adiw	r28, 0x0b	; 11
    27b2:	e2 e1       	ldi	r30, 0x12	; 18
    27b4:	0c 94 a8 14 	jmp	0x2950	; 0x2950 <__epilogue_restores__>

000027b8 <strnlen_P>:
    27b8:	fc 01       	movw	r30, r24
    27ba:	05 90       	lpm	r0, Z+
    27bc:	61 50       	subi	r22, 0x01	; 1
    27be:	70 40       	sbci	r23, 0x00	; 0
    27c0:	01 10       	cpse	r0, r1
    27c2:	d8 f7       	brcc	.-10     	; 0x27ba <strnlen_P+0x2>
    27c4:	80 95       	com	r24
    27c6:	90 95       	com	r25
    27c8:	8e 0f       	add	r24, r30
    27ca:	9f 1f       	adc	r25, r31
    27cc:	08 95       	ret

000027ce <strnlen>:
    27ce:	fc 01       	movw	r30, r24
    27d0:	61 50       	subi	r22, 0x01	; 1
    27d2:	70 40       	sbci	r23, 0x00	; 0
    27d4:	01 90       	ld	r0, Z+
    27d6:	01 10       	cpse	r0, r1
    27d8:	d8 f7       	brcc	.-10     	; 0x27d0 <strnlen+0x2>
    27da:	80 95       	com	r24
    27dc:	90 95       	com	r25
    27de:	8e 0f       	add	r24, r30
    27e0:	9f 1f       	adc	r25, r31
    27e2:	08 95       	ret

000027e4 <fputc>:
    27e4:	0f 93       	push	r16
    27e6:	1f 93       	push	r17
    27e8:	cf 93       	push	r28
    27ea:	df 93       	push	r29
    27ec:	fb 01       	movw	r30, r22
    27ee:	23 81       	ldd	r18, Z+3	; 0x03
    27f0:	21 fd       	sbrc	r18, 1
    27f2:	03 c0       	rjmp	.+6      	; 0x27fa <fputc+0x16>
    27f4:	8f ef       	ldi	r24, 0xFF	; 255
    27f6:	9f ef       	ldi	r25, 0xFF	; 255
    27f8:	2c c0       	rjmp	.+88     	; 0x2852 <fputc+0x6e>
    27fa:	22 ff       	sbrs	r18, 2
    27fc:	16 c0       	rjmp	.+44     	; 0x282a <fputc+0x46>
    27fe:	46 81       	ldd	r20, Z+6	; 0x06
    2800:	57 81       	ldd	r21, Z+7	; 0x07
    2802:	24 81       	ldd	r18, Z+4	; 0x04
    2804:	35 81       	ldd	r19, Z+5	; 0x05
    2806:	42 17       	cp	r20, r18
    2808:	53 07       	cpc	r21, r19
    280a:	44 f4       	brge	.+16     	; 0x281c <fputc+0x38>
    280c:	a0 81       	ld	r26, Z
    280e:	b1 81       	ldd	r27, Z+1	; 0x01
    2810:	9d 01       	movw	r18, r26
    2812:	2f 5f       	subi	r18, 0xFF	; 255
    2814:	3f 4f       	sbci	r19, 0xFF	; 255
    2816:	31 83       	std	Z+1, r19	; 0x01
    2818:	20 83       	st	Z, r18
    281a:	8c 93       	st	X, r24
    281c:	26 81       	ldd	r18, Z+6	; 0x06
    281e:	37 81       	ldd	r19, Z+7	; 0x07
    2820:	2f 5f       	subi	r18, 0xFF	; 255
    2822:	3f 4f       	sbci	r19, 0xFF	; 255
    2824:	37 83       	std	Z+7, r19	; 0x07
    2826:	26 83       	std	Z+6, r18	; 0x06
    2828:	14 c0       	rjmp	.+40     	; 0x2852 <fputc+0x6e>
    282a:	8b 01       	movw	r16, r22
    282c:	ec 01       	movw	r28, r24
    282e:	fb 01       	movw	r30, r22
    2830:	00 84       	ldd	r0, Z+8	; 0x08
    2832:	f1 85       	ldd	r31, Z+9	; 0x09
    2834:	e0 2d       	mov	r30, r0
    2836:	09 95       	icall
    2838:	89 2b       	or	r24, r25
    283a:	e1 f6       	brne	.-72     	; 0x27f4 <fputc+0x10>
    283c:	d8 01       	movw	r26, r16
    283e:	16 96       	adiw	r26, 0x06	; 6
    2840:	8d 91       	ld	r24, X+
    2842:	9c 91       	ld	r25, X
    2844:	17 97       	sbiw	r26, 0x07	; 7
    2846:	01 96       	adiw	r24, 0x01	; 1
    2848:	17 96       	adiw	r26, 0x07	; 7
    284a:	9c 93       	st	X, r25
    284c:	8e 93       	st	-X, r24
    284e:	16 97       	sbiw	r26, 0x06	; 6
    2850:	ce 01       	movw	r24, r28
    2852:	df 91       	pop	r29
    2854:	cf 91       	pop	r28
    2856:	1f 91       	pop	r17
    2858:	0f 91       	pop	r16
    285a:	08 95       	ret

0000285c <__ultoa_invert>:
    285c:	fa 01       	movw	r30, r20
    285e:	aa 27       	eor	r26, r26
    2860:	28 30       	cpi	r18, 0x08	; 8
    2862:	51 f1       	breq	.+84     	; 0x28b8 <__ultoa_invert+0x5c>
    2864:	20 31       	cpi	r18, 0x10	; 16
    2866:	81 f1       	breq	.+96     	; 0x28c8 <__ultoa_invert+0x6c>
    2868:	e8 94       	clt
    286a:	6f 93       	push	r22
    286c:	6e 7f       	andi	r22, 0xFE	; 254
    286e:	6e 5f       	subi	r22, 0xFE	; 254
    2870:	7f 4f       	sbci	r23, 0xFF	; 255
    2872:	8f 4f       	sbci	r24, 0xFF	; 255
    2874:	9f 4f       	sbci	r25, 0xFF	; 255
    2876:	af 4f       	sbci	r26, 0xFF	; 255
    2878:	b1 e0       	ldi	r27, 0x01	; 1
    287a:	3e d0       	rcall	.+124    	; 0x28f8 <__ultoa_invert+0x9c>
    287c:	b4 e0       	ldi	r27, 0x04	; 4
    287e:	3c d0       	rcall	.+120    	; 0x28f8 <__ultoa_invert+0x9c>
    2880:	67 0f       	add	r22, r23
    2882:	78 1f       	adc	r23, r24
    2884:	89 1f       	adc	r24, r25
    2886:	9a 1f       	adc	r25, r26
    2888:	a1 1d       	adc	r26, r1
    288a:	68 0f       	add	r22, r24
    288c:	79 1f       	adc	r23, r25
    288e:	8a 1f       	adc	r24, r26
    2890:	91 1d       	adc	r25, r1
    2892:	a1 1d       	adc	r26, r1
    2894:	6a 0f       	add	r22, r26
    2896:	71 1d       	adc	r23, r1
    2898:	81 1d       	adc	r24, r1
    289a:	91 1d       	adc	r25, r1
    289c:	a1 1d       	adc	r26, r1
    289e:	20 d0       	rcall	.+64     	; 0x28e0 <__ultoa_invert+0x84>
    28a0:	09 f4       	brne	.+2      	; 0x28a4 <__ultoa_invert+0x48>
    28a2:	68 94       	set
    28a4:	3f 91       	pop	r19
    28a6:	2a e0       	ldi	r18, 0x0A	; 10
    28a8:	26 9f       	mul	r18, r22
    28aa:	11 24       	eor	r1, r1
    28ac:	30 19       	sub	r19, r0
    28ae:	30 5d       	subi	r19, 0xD0	; 208
    28b0:	31 93       	st	Z+, r19
    28b2:	de f6       	brtc	.-74     	; 0x286a <__ultoa_invert+0xe>
    28b4:	cf 01       	movw	r24, r30
    28b6:	08 95       	ret
    28b8:	46 2f       	mov	r20, r22
    28ba:	47 70       	andi	r20, 0x07	; 7
    28bc:	40 5d       	subi	r20, 0xD0	; 208
    28be:	41 93       	st	Z+, r20
    28c0:	b3 e0       	ldi	r27, 0x03	; 3
    28c2:	0f d0       	rcall	.+30     	; 0x28e2 <__ultoa_invert+0x86>
    28c4:	c9 f7       	brne	.-14     	; 0x28b8 <__ultoa_invert+0x5c>
    28c6:	f6 cf       	rjmp	.-20     	; 0x28b4 <__ultoa_invert+0x58>
    28c8:	46 2f       	mov	r20, r22
    28ca:	4f 70       	andi	r20, 0x0F	; 15
    28cc:	40 5d       	subi	r20, 0xD0	; 208
    28ce:	4a 33       	cpi	r20, 0x3A	; 58
    28d0:	18 f0       	brcs	.+6      	; 0x28d8 <__ultoa_invert+0x7c>
    28d2:	49 5d       	subi	r20, 0xD9	; 217
    28d4:	31 fd       	sbrc	r19, 1
    28d6:	40 52       	subi	r20, 0x20	; 32
    28d8:	41 93       	st	Z+, r20
    28da:	02 d0       	rcall	.+4      	; 0x28e0 <__ultoa_invert+0x84>
    28dc:	a9 f7       	brne	.-22     	; 0x28c8 <__ultoa_invert+0x6c>
    28de:	ea cf       	rjmp	.-44     	; 0x28b4 <__ultoa_invert+0x58>
    28e0:	b4 e0       	ldi	r27, 0x04	; 4
    28e2:	a6 95       	lsr	r26
    28e4:	97 95       	ror	r25
    28e6:	87 95       	ror	r24
    28e8:	77 95       	ror	r23
    28ea:	67 95       	ror	r22
    28ec:	ba 95       	dec	r27
    28ee:	c9 f7       	brne	.-14     	; 0x28e2 <__ultoa_invert+0x86>
    28f0:	00 97       	sbiw	r24, 0x00	; 0
    28f2:	61 05       	cpc	r22, r1
    28f4:	71 05       	cpc	r23, r1
    28f6:	08 95       	ret
    28f8:	9b 01       	movw	r18, r22
    28fa:	ac 01       	movw	r20, r24
    28fc:	0a 2e       	mov	r0, r26
    28fe:	06 94       	lsr	r0
    2900:	57 95       	ror	r21
    2902:	47 95       	ror	r20
    2904:	37 95       	ror	r19
    2906:	27 95       	ror	r18
    2908:	ba 95       	dec	r27
    290a:	c9 f7       	brne	.-14     	; 0x28fe <__ultoa_invert+0xa2>
    290c:	62 0f       	add	r22, r18
    290e:	73 1f       	adc	r23, r19
    2910:	84 1f       	adc	r24, r20
    2912:	95 1f       	adc	r25, r21
    2914:	a0 1d       	adc	r26, r0
    2916:	08 95       	ret

00002918 <__prologue_saves__>:
    2918:	2f 92       	push	r2
    291a:	3f 92       	push	r3
    291c:	4f 92       	push	r4
    291e:	5f 92       	push	r5
    2920:	6f 92       	push	r6
    2922:	7f 92       	push	r7
    2924:	8f 92       	push	r8
    2926:	9f 92       	push	r9
    2928:	af 92       	push	r10
    292a:	bf 92       	push	r11
    292c:	cf 92       	push	r12
    292e:	df 92       	push	r13
    2930:	ef 92       	push	r14
    2932:	ff 92       	push	r15
    2934:	0f 93       	push	r16
    2936:	1f 93       	push	r17
    2938:	cf 93       	push	r28
    293a:	df 93       	push	r29
    293c:	cd b7       	in	r28, 0x3d	; 61
    293e:	de b7       	in	r29, 0x3e	; 62
    2940:	ca 1b       	sub	r28, r26
    2942:	db 0b       	sbc	r29, r27
    2944:	0f b6       	in	r0, 0x3f	; 63
    2946:	f8 94       	cli
    2948:	de bf       	out	0x3e, r29	; 62
    294a:	0f be       	out	0x3f, r0	; 63
    294c:	cd bf       	out	0x3d, r28	; 61
    294e:	09 94       	ijmp

00002950 <__epilogue_restores__>:
    2950:	2a 88       	ldd	r2, Y+18	; 0x12
    2952:	39 88       	ldd	r3, Y+17	; 0x11
    2954:	48 88       	ldd	r4, Y+16	; 0x10
    2956:	5f 84       	ldd	r5, Y+15	; 0x0f
    2958:	6e 84       	ldd	r6, Y+14	; 0x0e
    295a:	7d 84       	ldd	r7, Y+13	; 0x0d
    295c:	8c 84       	ldd	r8, Y+12	; 0x0c
    295e:	9b 84       	ldd	r9, Y+11	; 0x0b
    2960:	aa 84       	ldd	r10, Y+10	; 0x0a
    2962:	b9 84       	ldd	r11, Y+9	; 0x09
    2964:	c8 84       	ldd	r12, Y+8	; 0x08
    2966:	df 80       	ldd	r13, Y+7	; 0x07
    2968:	ee 80       	ldd	r14, Y+6	; 0x06
    296a:	fd 80       	ldd	r15, Y+5	; 0x05
    296c:	0c 81       	ldd	r16, Y+4	; 0x04
    296e:	1b 81       	ldd	r17, Y+3	; 0x03
    2970:	aa 81       	ldd	r26, Y+2	; 0x02
    2972:	b9 81       	ldd	r27, Y+1	; 0x01
    2974:	ce 0f       	add	r28, r30
    2976:	d1 1d       	adc	r29, r1
    2978:	0f b6       	in	r0, 0x3f	; 63
    297a:	f8 94       	cli
    297c:	de bf       	out	0x3e, r29	; 62
    297e:	0f be       	out	0x3f, r0	; 63
    2980:	cd bf       	out	0x3d, r28	; 61
    2982:	ed 01       	movw	r28, r26
    2984:	08 95       	ret

00002986 <_exit>:
    2986:	f8 94       	cli

00002988 <__stop_program>:
    2988:	ff cf       	rjmp	.-2      	; 0x2988 <__stop_program>
