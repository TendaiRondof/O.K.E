
My_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001fc  00800100  00006618  000066ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00006618  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006c  008002fc  008002fc  000068a8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000068a8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00006904  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  00006944  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002a7c  00000000  00000000  00006ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b69  00000000  00000000  00009530  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002115  00000000  00000000  0000a099  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005e4  00000000  00000000  0000c1b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000091b  00000000  00000000  0000c794  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c2a  00000000  00000000  0000d0af  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  0000dcd9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__ctors_end>
       4:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
       8:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
       c:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      10:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      14:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      18:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      1c:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      20:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      24:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      28:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      2c:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      30:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      34:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      38:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      3c:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      40:	0c 94 79 2b 	jmp	0x56f2	; 0x56f2 <__vector_16>
      44:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      48:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      4c:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      50:	0c 94 90 02 	jmp	0x520	; 0x520 <__vector_20>
      54:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      58:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      5c:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      60:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      64:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      68:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      6c:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      70:	0c 94 25 03 	jmp	0x64a	; 0x64a <__vector_28>
      74:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      78:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      7c:	d7 02       	muls	r29, r23
      7e:	f7 02       	muls	r31, r23
      80:	f7 02       	muls	r31, r23
      82:	f7 02       	muls	r31, r23
      84:	f7 02       	muls	r31, r23
      86:	f7 02       	muls	r31, r23
      88:	f7 02       	muls	r31, r23
      8a:	f7 02       	muls	r31, r23
      8c:	f7 02       	muls	r31, r23
      8e:	f7 02       	muls	r31, r23
      90:	f7 02       	muls	r31, r23
      92:	f7 02       	muls	r31, r23
      94:	f7 02       	muls	r31, r23
      96:	f7 02       	muls	r31, r23
      98:	f7 02       	muls	r31, r23
      9a:	f7 02       	muls	r31, r23
      9c:	f7 02       	muls	r31, r23
      9e:	f7 02       	muls	r31, r23
      a0:	f7 02       	muls	r31, r23
      a2:	f7 02       	muls	r31, r23
      a4:	f7 02       	muls	r31, r23
      a6:	f7 02       	muls	r31, r23
      a8:	f7 02       	muls	r31, r23
      aa:	f7 02       	muls	r31, r23
      ac:	f7 02       	muls	r31, r23
      ae:	f7 02       	muls	r31, r23
      b0:	f7 02       	muls	r31, r23
      b2:	f7 02       	muls	r31, r23
      b4:	f7 02       	muls	r31, r23
      b6:	f7 02       	muls	r31, r23
      b8:	f7 02       	muls	r31, r23
      ba:	f7 02       	muls	r31, r23
      bc:	f7 02       	muls	r31, r23
      be:	f7 02       	muls	r31, r23
      c0:	f7 02       	muls	r31, r23
      c2:	f7 02       	muls	r31, r23
      c4:	f7 02       	muls	r31, r23
      c6:	f7 02       	muls	r31, r23
      c8:	f7 02       	muls	r31, r23
      ca:	f7 02       	muls	r31, r23
      cc:	f7 02       	muls	r31, r23
      ce:	f7 02       	muls	r31, r23
      d0:	f7 02       	muls	r31, r23
      d2:	f7 02       	muls	r31, r23
      d4:	f7 02       	muls	r31, r23
      d6:	f7 02       	muls	r31, r23
      d8:	f7 02       	muls	r31, r23
      da:	f7 02       	muls	r31, r23
      dc:	f7 02       	muls	r31, r23
      de:	f7 02       	muls	r31, r23
      e0:	f7 02       	muls	r31, r23
      e2:	f7 02       	muls	r31, r23
      e4:	f7 02       	muls	r31, r23
      e6:	f7 02       	muls	r31, r23
      e8:	f7 02       	muls	r31, r23
      ea:	c1 02       	muls	r28, r17
      ec:	f7 02       	muls	r31, r23
      ee:	ca 02       	muls	r28, r26
      f0:	ef 02       	muls	r30, r31
      f2:	eb 02       	muls	r30, r27
      f4:	f7 02       	muls	r31, r23
      f6:	e7 02       	muls	r30, r23
      f8:	f7 02       	muls	r31, r23
      fa:	f7 02       	muls	r31, r23
      fc:	f7 02       	muls	r31, r23
      fe:	f7 02       	muls	r31, r23
     100:	f7 02       	muls	r31, r23
     102:	f3 02       	muls	r31, r19
     104:	f7 02       	muls	r31, r23
     106:	dd 02       	muls	r29, r29
     108:	f7 02       	muls	r31, r23
     10a:	f7 02       	muls	r31, r23
     10c:	f7 02       	muls	r31, r23
     10e:	d2 02       	muls	r29, r18

00000110 <__trampolines_end>:
     110:	20 20       	and	r2, r0
     112:	20 20       	and	r2, r0
     114:	20 20       	and	r2, r0
     116:	20 20       	and	r2, r0
     118:	4f 4b       	sbci	r20, 0xBF	; 191
     11a:	45 20       	and	r4, r5
     11c:	20 20       	and	r2, r0
     11e:	20 20       	and	r2, r0
     120:	20 20       	and	r2, r0
     122:	20 20       	and	r2, r0
	...

00000125 <__c.2562>:
     125:	20 20 20 20 20 20 20 20 42 59 20 20 20 20 20 20             BY      
     135:	20 20 20 20 00                                          .

0000013a <__c.2564>:
     13a:	20 20 20 20 20 20 20 20 4a 41 4e 20 20 20 20 20             JAN     
     14a:	20 20 20 20 00                                          .

0000014f <__c.2566>:
     14f:	20 20 20 20 20 20 20 54 45 4e 44 41 49 20 20 20            TENDAI   
     15f:	20 20 20 20 00                                          .

00000164 <__c.2584>:
     164:	20 20 20 20 20 20 20 20 4f 4b 45 20 20 20 20 20             OKE     
     174:	20 20 20 20 00                                          .

00000179 <__c.2586>:
     179:	20 20 20 20 20 20 20 20 42 59 20 20 20 20 20 20             BY      
     189:	20 20 20 20 00                                          .

0000018e <__c.2588>:
     18e:	20 20 20 20 20 20 20 20 4a 41 4e 20 20 20 20 20             JAN     
     19e:	20 20 20 20 00                                          .

000001a3 <__c.2590>:
     1a3:	20 20 20 20 20 20 20 54 45 4e 44 41 49 20 20 20            TENDAI   
     1b3:	20 20 20 20 00                                          .

000001b8 <__ctors_end>:
     1b8:	11 24       	eor	r1, r1
     1ba:	1f be       	out	0x3f, r1	; 63
     1bc:	cf ef       	ldi	r28, 0xFF	; 255
     1be:	d0 e1       	ldi	r29, 0x10	; 16
     1c0:	de bf       	out	0x3e, r29	; 62
     1c2:	cd bf       	out	0x3d, r28	; 61

000001c4 <__do_copy_data>:
     1c4:	12 e0       	ldi	r17, 0x02	; 2
     1c6:	a0 e0       	ldi	r26, 0x00	; 0
     1c8:	b1 e0       	ldi	r27, 0x01	; 1
     1ca:	e8 e1       	ldi	r30, 0x18	; 24
     1cc:	f6 e6       	ldi	r31, 0x66	; 102
     1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <__do_copy_data+0x10>
     1d0:	05 90       	lpm	r0, Z+
     1d2:	0d 92       	st	X+, r0
     1d4:	ac 3f       	cpi	r26, 0xFC	; 252
     1d6:	b1 07       	cpc	r27, r17
     1d8:	d9 f7       	brne	.-10     	; 0x1d0 <__do_copy_data+0xc>

000001da <__do_clear_bss>:
     1da:	23 e0       	ldi	r18, 0x03	; 3
     1dc:	ac ef       	ldi	r26, 0xFC	; 252
     1de:	b2 e0       	ldi	r27, 0x02	; 2
     1e0:	01 c0       	rjmp	.+2      	; 0x1e4 <.do_clear_bss_start>

000001e2 <.do_clear_bss_loop>:
     1e2:	1d 92       	st	X+, r1

000001e4 <.do_clear_bss_start>:
     1e4:	a8 36       	cpi	r26, 0x68	; 104
     1e6:	b2 07       	cpc	r27, r18
     1e8:	e1 f7       	brne	.-8      	; 0x1e2 <.do_clear_bss_loop>
     1ea:	0e 94 21 28 	call	0x5042	; 0x5042 <main>
     1ee:	0c 94 0a 33 	jmp	0x6614	; 0x6614 <_exit>

000001f2 <__bad_interrupt>:
     1f2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001f6 <get_DIP_Switch>:
	}
	if ((x>300)&&(x<700)&&(y<700)&&(y>300))
	{
		return 0;
	}
}
     1f6:	cf 93       	push	r28
     1f8:	df 93       	push	r29
     1fa:	00 d0       	rcall	.+0      	; 0x1fc <get_DIP_Switch+0x6>
     1fc:	1f 92       	push	r1
     1fe:	cd b7       	in	r28, 0x3d	; 61
     200:	de b7       	in	r29, 0x3e	; 62
     202:	19 82       	std	Y+1, r1	; 0x01
     204:	82 e2       	ldi	r24, 0x22	; 34
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	22 e2       	ldi	r18, 0x22	; 34
     20a:	30 e0       	ldi	r19, 0x00	; 0
     20c:	f9 01       	movw	r30, r18
     20e:	20 81       	ld	r18, Z
     210:	20 62       	ori	r18, 0x20	; 32
     212:	fc 01       	movw	r30, r24
     214:	20 83       	st	Z, r18
     216:	82 e2       	ldi	r24, 0x22	; 34
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	22 e2       	ldi	r18, 0x22	; 34
     21c:	30 e0       	ldi	r19, 0x00	; 0
     21e:	f9 01       	movw	r30, r18
     220:	20 81       	ld	r18, Z
     222:	2f 7d       	andi	r18, 0xDF	; 223
     224:	fc 01       	movw	r30, r24
     226:	20 83       	st	Z, r18
     228:	82 e2       	ldi	r24, 0x22	; 34
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	22 e2       	ldi	r18, 0x22	; 34
     22e:	30 e0       	ldi	r19, 0x00	; 0
     230:	f9 01       	movw	r30, r18
     232:	20 81       	ld	r18, Z
     234:	20 62       	ori	r18, 0x20	; 32
     236:	fc 01       	movw	r30, r24
     238:	20 83       	st	Z, r18
     23a:	87 e0       	ldi	r24, 0x07	; 7
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	9b 83       	std	Y+3, r25	; 0x03
     240:	8a 83       	std	Y+2, r24	; 0x02
     242:	30 c0       	rjmp	.+96     	; 0x2a4 <get_DIP_Switch+0xae>
     244:	80 e2       	ldi	r24, 0x20	; 32
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	fc 01       	movw	r30, r24
     24a:	80 81       	ld	r24, Z
     24c:	88 2f       	mov	r24, r24
     24e:	90 e0       	ldi	r25, 0x00	; 0
     250:	80 78       	andi	r24, 0x80	; 128
     252:	99 27       	eor	r25, r25
     254:	47 e0       	ldi	r20, 0x07	; 7
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	2a 81       	ldd	r18, Y+2	; 0x02
     25a:	3b 81       	ldd	r19, Y+3	; 0x03
     25c:	ba 01       	movw	r22, r20
     25e:	62 1b       	sub	r22, r18
     260:	73 0b       	sbc	r23, r19
     262:	9b 01       	movw	r18, r22
     264:	02 c0       	rjmp	.+4      	; 0x26a <get_DIP_Switch+0x74>
     266:	95 95       	asr	r25
     268:	87 95       	ror	r24
     26a:	2a 95       	dec	r18
     26c:	e2 f7       	brpl	.-8      	; 0x266 <get_DIP_Switch+0x70>
     26e:	98 2f       	mov	r25, r24
     270:	89 81       	ldd	r24, Y+1	; 0x01
     272:	89 2b       	or	r24, r25
     274:	89 83       	std	Y+1, r24	; 0x01
     276:	82 e2       	ldi	r24, 0x22	; 34
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	22 e2       	ldi	r18, 0x22	; 34
     27c:	30 e0       	ldi	r19, 0x00	; 0
     27e:	f9 01       	movw	r30, r18
     280:	20 81       	ld	r18, Z
     282:	2f 7b       	andi	r18, 0xBF	; 191
     284:	fc 01       	movw	r30, r24
     286:	20 83       	st	Z, r18
     288:	82 e2       	ldi	r24, 0x22	; 34
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	22 e2       	ldi	r18, 0x22	; 34
     28e:	30 e0       	ldi	r19, 0x00	; 0
     290:	f9 01       	movw	r30, r18
     292:	20 81       	ld	r18, Z
     294:	20 64       	ori	r18, 0x40	; 64
     296:	fc 01       	movw	r30, r24
     298:	20 83       	st	Z, r18
     29a:	8a 81       	ldd	r24, Y+2	; 0x02
     29c:	9b 81       	ldd	r25, Y+3	; 0x03
     29e:	01 97       	sbiw	r24, 0x01	; 1
     2a0:	9b 83       	std	Y+3, r25	; 0x03
     2a2:	8a 83       	std	Y+2, r24	; 0x02
     2a4:	8a 81       	ldd	r24, Y+2	; 0x02
     2a6:	9b 81       	ldd	r25, Y+3	; 0x03
     2a8:	99 23       	and	r25, r25
     2aa:	64 f6       	brge	.-104    	; 0x244 <get_DIP_Switch+0x4e>
     2ac:	89 81       	ldd	r24, Y+1	; 0x01
     2ae:	0f 90       	pop	r0
     2b0:	0f 90       	pop	r0
     2b2:	0f 90       	pop	r0
     2b4:	df 91       	pop	r29
     2b6:	cf 91       	pop	r28
     2b8:	08 95       	ret

000002ba <get_LCD_Taster>:
     2ba:	cf 93       	push	r28
     2bc:	df 93       	push	r29
     2be:	00 d0       	rcall	.+0      	; 0x2c0 <get_LCD_Taster+0x6>
     2c0:	cd b7       	in	r28, 0x3d	; 61
     2c2:	de b7       	in	r29, 0x3e	; 62
     2c4:	83 e2       	ldi	r24, 0x23	; 35
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	fc 01       	movw	r30, r24
     2ca:	80 81       	ld	r24, Z
     2cc:	89 83       	std	Y+1, r24	; 0x01
     2ce:	85 e2       	ldi	r24, 0x25	; 37
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	25 e2       	ldi	r18, 0x25	; 37
     2d4:	30 e0       	ldi	r19, 0x00	; 0
     2d6:	f9 01       	movw	r30, r18
     2d8:	20 81       	ld	r18, Z
     2da:	20 7f       	andi	r18, 0xF0	; 240
     2dc:	fc 01       	movw	r30, r24
     2de:	20 83       	st	Z, r18
     2e0:	84 e2       	ldi	r24, 0x24	; 36
     2e2:	90 e0       	ldi	r25, 0x00	; 0
     2e4:	20 ef       	ldi	r18, 0xF0	; 240
     2e6:	fc 01       	movw	r30, r24
     2e8:	20 83       	st	Z, r18
	...
     2fe:	83 e2       	ldi	r24, 0x23	; 35
     300:	90 e0       	ldi	r25, 0x00	; 0
     302:	fc 01       	movw	r30, r24
     304:	80 81       	ld	r24, Z
     306:	8f 70       	andi	r24, 0x0F	; 15
     308:	8a 83       	std	Y+2, r24	; 0x02
     30a:	84 e2       	ldi	r24, 0x24	; 36
     30c:	90 e0       	ldi	r25, 0x00	; 0
     30e:	2f ef       	ldi	r18, 0xFF	; 255
     310:	fc 01       	movw	r30, r24
     312:	20 83       	st	Z, r18
     314:	85 e2       	ldi	r24, 0x25	; 37
     316:	90 e0       	ldi	r25, 0x00	; 0
     318:	29 81       	ldd	r18, Y+1	; 0x01
     31a:	fc 01       	movw	r30, r24
     31c:	20 83       	st	Z, r18
     31e:	8a 81       	ldd	r24, Y+2	; 0x02
     320:	0f 90       	pop	r0
     322:	0f 90       	pop	r0
     324:	df 91       	pop	r29
     326:	cf 91       	pop	r28
     328:	08 95       	ret

0000032a <init_ADC>:
     32a:	cf 93       	push	r28
     32c:	df 93       	push	r29
     32e:	cd b7       	in	r28, 0x3d	; 61
     330:	de b7       	in	r29, 0x3e	; 62
     332:	8a e7       	ldi	r24, 0x7A	; 122
     334:	90 e0       	ldi	r25, 0x00	; 0
     336:	2a e7       	ldi	r18, 0x7A	; 122
     338:	30 e0       	ldi	r19, 0x00	; 0
     33a:	f9 01       	movw	r30, r18
     33c:	20 81       	ld	r18, Z
     33e:	20 68       	ori	r18, 0x80	; 128
     340:	fc 01       	movw	r30, r24
     342:	20 83       	st	Z, r18
     344:	8c e7       	ldi	r24, 0x7C	; 124
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	2c e7       	ldi	r18, 0x7C	; 124
     34a:	30 e0       	ldi	r19, 0x00	; 0
     34c:	f9 01       	movw	r30, r18
     34e:	20 81       	ld	r18, Z
     350:	20 64       	ori	r18, 0x40	; 64
     352:	fc 01       	movw	r30, r24
     354:	20 83       	st	Z, r18
     356:	8a e7       	ldi	r24, 0x7A	; 122
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	2a e7       	ldi	r18, 0x7A	; 122
     35c:	30 e0       	ldi	r19, 0x00	; 0
     35e:	f9 01       	movw	r30, r18
     360:	20 81       	ld	r18, Z
     362:	27 60       	ori	r18, 0x07	; 7
     364:	fc 01       	movw	r30, r24
     366:	20 83       	st	Z, r18
     368:	00 00       	nop
     36a:	df 91       	pop	r29
     36c:	cf 91       	pop	r28
     36e:	08 95       	ret

00000370 <init_UART0>:
     370:	cf 93       	push	r28
     372:	df 93       	push	r29
     374:	cd b7       	in	r28, 0x3d	; 61
     376:	de b7       	in	r29, 0x3e	; 62
     378:	84 ec       	ldi	r24, 0xC4	; 196
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	20 e1       	ldi	r18, 0x10	; 16
     37e:	30 e0       	ldi	r19, 0x00	; 0
     380:	fc 01       	movw	r30, r24
     382:	31 83       	std	Z+1, r19	; 0x01
     384:	20 83       	st	Z, r18
     386:	80 ec       	ldi	r24, 0xC0	; 192
     388:	90 e0       	ldi	r25, 0x00	; 0
     38a:	20 ec       	ldi	r18, 0xC0	; 192
     38c:	30 e0       	ldi	r19, 0x00	; 0
     38e:	f9 01       	movw	r30, r18
     390:	20 81       	ld	r18, Z
     392:	22 60       	ori	r18, 0x02	; 2
     394:	fc 01       	movw	r30, r24
     396:	20 83       	st	Z, r18
     398:	81 ec       	ldi	r24, 0xC1	; 193
     39a:	90 e0       	ldi	r25, 0x00	; 0
     39c:	21 ec       	ldi	r18, 0xC1	; 193
     39e:	30 e0       	ldi	r19, 0x00	; 0
     3a0:	f9 01       	movw	r30, r18
     3a2:	20 81       	ld	r18, Z
     3a4:	28 69       	ori	r18, 0x98	; 152
     3a6:	fc 01       	movw	r30, r24
     3a8:	20 83       	st	Z, r18
     3aa:	00 00       	nop
     3ac:	df 91       	pop	r29
     3ae:	cf 91       	pop	r28
     3b0:	08 95       	ret

000003b2 <init_UART1>:
     3b2:	cf 93       	push	r28
     3b4:	df 93       	push	r29
     3b6:	cd b7       	in	r28, 0x3d	; 61
     3b8:	de b7       	in	r29, 0x3e	; 62
     3ba:	8c ec       	ldi	r24, 0xCC	; 204
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	20 e1       	ldi	r18, 0x10	; 16
     3c0:	30 e0       	ldi	r19, 0x00	; 0
     3c2:	fc 01       	movw	r30, r24
     3c4:	31 83       	std	Z+1, r19	; 0x01
     3c6:	20 83       	st	Z, r18
     3c8:	88 ec       	ldi	r24, 0xC8	; 200
     3ca:	90 e0       	ldi	r25, 0x00	; 0
     3cc:	28 ec       	ldi	r18, 0xC8	; 200
     3ce:	30 e0       	ldi	r19, 0x00	; 0
     3d0:	f9 01       	movw	r30, r18
     3d2:	20 81       	ld	r18, Z
     3d4:	22 60       	ori	r18, 0x02	; 2
     3d6:	fc 01       	movw	r30, r24
     3d8:	20 83       	st	Z, r18
     3da:	89 ec       	ldi	r24, 0xC9	; 201
     3dc:	90 e0       	ldi	r25, 0x00	; 0
     3de:	29 ec       	ldi	r18, 0xC9	; 201
     3e0:	30 e0       	ldi	r19, 0x00	; 0
     3e2:	f9 01       	movw	r30, r18
     3e4:	20 81       	ld	r18, Z
     3e6:	28 69       	ori	r18, 0x98	; 152
     3e8:	fc 01       	movw	r30, r24
     3ea:	20 83       	st	Z, r18
     3ec:	00 00       	nop
     3ee:	df 91       	pop	r29
     3f0:	cf 91       	pop	r28
     3f2:	08 95       	ret

000003f4 <send_Byte_0>:
     3f4:	cf 93       	push	r28
     3f6:	df 93       	push	r29
     3f8:	1f 92       	push	r1
     3fa:	cd b7       	in	r28, 0x3d	; 61
     3fc:	de b7       	in	r29, 0x3e	; 62
     3fe:	89 83       	std	Y+1, r24	; 0x01
     400:	00 00       	nop
     402:	80 ec       	ldi	r24, 0xC0	; 192
     404:	90 e0       	ldi	r25, 0x00	; 0
     406:	fc 01       	movw	r30, r24
     408:	80 81       	ld	r24, Z
     40a:	88 2f       	mov	r24, r24
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	80 72       	andi	r24, 0x20	; 32
     410:	99 27       	eor	r25, r25
     412:	89 2b       	or	r24, r25
     414:	b1 f3       	breq	.-20     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     416:	86 ec       	ldi	r24, 0xC6	; 198
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	29 81       	ldd	r18, Y+1	; 0x01
     41c:	fc 01       	movw	r30, r24
     41e:	20 83       	st	Z, r18
     420:	00 00       	nop
     422:	0f 90       	pop	r0
     424:	df 91       	pop	r29
     426:	cf 91       	pop	r28
     428:	08 95       	ret

0000042a <send_Byte_1>:
     42a:	cf 93       	push	r28
     42c:	df 93       	push	r29
     42e:	1f 92       	push	r1
     430:	cd b7       	in	r28, 0x3d	; 61
     432:	de b7       	in	r29, 0x3e	; 62
     434:	89 83       	std	Y+1, r24	; 0x01
     436:	00 00       	nop
     438:	88 ec       	ldi	r24, 0xC8	; 200
     43a:	90 e0       	ldi	r25, 0x00	; 0
     43c:	fc 01       	movw	r30, r24
     43e:	80 81       	ld	r24, Z
     440:	88 2f       	mov	r24, r24
     442:	90 e0       	ldi	r25, 0x00	; 0
     444:	80 72       	andi	r24, 0x20	; 32
     446:	99 27       	eor	r25, r25
     448:	89 2b       	or	r24, r25
     44a:	b1 f3       	breq	.-20     	; 0x438 <send_Byte_1+0xe>
     44c:	8e ec       	ldi	r24, 0xCE	; 206
     44e:	90 e0       	ldi	r25, 0x00	; 0
     450:	29 81       	ldd	r18, Y+1	; 0x01
     452:	fc 01       	movw	r30, r24
     454:	20 83       	st	Z, r18
     456:	00 00       	nop
     458:	0f 90       	pop	r0
     45a:	df 91       	pop	r29
     45c:	cf 91       	pop	r28
     45e:	08 95       	ret

00000460 <to_pc>:
     460:	cf 93       	push	r28
     462:	df 93       	push	r29
     464:	00 d0       	rcall	.+0      	; 0x466 <to_pc+0x6>
     466:	cd b7       	in	r28, 0x3d	; 61
     468:	de b7       	in	r29, 0x3e	; 62
     46a:	9a 83       	std	Y+2, r25	; 0x02
     46c:	89 83       	std	Y+1, r24	; 0x01
     46e:	0b c0       	rjmp	.+22     	; 0x486 <to_pc+0x26>
     470:	89 81       	ldd	r24, Y+1	; 0x01
     472:	9a 81       	ldd	r25, Y+2	; 0x02
     474:	fc 01       	movw	r30, r24
     476:	80 81       	ld	r24, Z
     478:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <send_Byte_0>
     47c:	89 81       	ldd	r24, Y+1	; 0x01
     47e:	9a 81       	ldd	r25, Y+2	; 0x02
     480:	01 96       	adiw	r24, 0x01	; 1
     482:	9a 83       	std	Y+2, r25	; 0x02
     484:	89 83       	std	Y+1, r24	; 0x01
     486:	89 81       	ldd	r24, Y+1	; 0x01
     488:	9a 81       	ldd	r25, Y+2	; 0x02
     48a:	fc 01       	movw	r30, r24
     48c:	80 81       	ld	r24, Z
     48e:	88 23       	and	r24, r24
     490:	79 f7       	brne	.-34     	; 0x470 <to_pc+0x10>
     492:	10 92 43 03 	sts	0x0343, r1	; 0x800343 <uart_str_complete>
     496:	00 00       	nop
     498:	0f 90       	pop	r0
     49a:	0f 90       	pop	r0
     49c:	df 91       	pop	r29
     49e:	cf 91       	pop	r28
     4a0:	08 95       	ret

000004a2 <to_uARM>:
     4a2:	cf 93       	push	r28
     4a4:	df 93       	push	r29
     4a6:	00 d0       	rcall	.+0      	; 0x4a8 <to_uARM+0x6>
     4a8:	cd b7       	in	r28, 0x3d	; 61
     4aa:	de b7       	in	r29, 0x3e	; 62
     4ac:	9a 83       	std	Y+2, r25	; 0x02
     4ae:	89 83       	std	Y+1, r24	; 0x01
     4b0:	0b c0       	rjmp	.+22     	; 0x4c8 <to_uARM+0x26>
     4b2:	89 81       	ldd	r24, Y+1	; 0x01
     4b4:	9a 81       	ldd	r25, Y+2	; 0x02
     4b6:	fc 01       	movw	r30, r24
     4b8:	80 81       	ld	r24, Z
     4ba:	0e 94 15 02 	call	0x42a	; 0x42a <send_Byte_1>
     4be:	89 81       	ldd	r24, Y+1	; 0x01
     4c0:	9a 81       	ldd	r25, Y+2	; 0x02
     4c2:	01 96       	adiw	r24, 0x01	; 1
     4c4:	9a 83       	std	Y+2, r25	; 0x02
     4c6:	89 83       	std	Y+1, r24	; 0x01
     4c8:	89 81       	ldd	r24, Y+1	; 0x01
     4ca:	9a 81       	ldd	r25, Y+2	; 0x02
     4cc:	fc 01       	movw	r30, r24
     4ce:	80 81       	ld	r24, Z
     4d0:	88 23       	and	r24, r24
     4d2:	79 f7       	brne	.-34     	; 0x4b2 <to_uARM+0x10>
     4d4:	10 92 fd 02 	sts	0x02FD, r1	; 0x8002fd <uart_str_complete1>
     4d8:	00 00       	nop
     4da:	0f 90       	pop	r0
     4dc:	0f 90       	pop	r0
     4de:	df 91       	pop	r29
     4e0:	cf 91       	pop	r28
     4e2:	08 95       	ret

000004e4 <send_to_uArm>:
     4e4:	cf 93       	push	r28
     4e6:	df 93       	push	r29
     4e8:	00 d0       	rcall	.+0      	; 0x4ea <send_to_uArm+0x6>
     4ea:	cd b7       	in	r28, 0x3d	; 61
     4ec:	de b7       	in	r29, 0x3e	; 62
     4ee:	9a 83       	std	Y+2, r25	; 0x02
     4f0:	89 83       	std	Y+1, r24	; 0x01
     4f2:	89 81       	ldd	r24, Y+1	; 0x01
     4f4:	9a 81       	ldd	r25, Y+2	; 0x02
     4f6:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
     4fa:	80 e0       	ldi	r24, 0x00	; 0
     4fc:	91 e0       	ldi	r25, 0x01	; 1
     4fe:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
     502:	04 c0       	rjmp	.+8      	; 0x50c <send_to_uArm+0x28>
     504:	80 e0       	ldi	r24, 0x00	; 0
     506:	91 e0       	ldi	r25, 0x01	; 1
     508:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
     50c:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <uart_string1+0x4>
     510:	81 33       	cpi	r24, 0x31	; 49
     512:	c1 f3       	breq	.-16     	; 0x504 <send_to_uArm+0x20>
     514:	00 00       	nop
     516:	0f 90       	pop	r0
     518:	0f 90       	pop	r0
     51a:	df 91       	pop	r29
     51c:	cf 91       	pop	r28
     51e:	08 95       	ret

00000520 <__vector_20>:
     520:	1f 92       	push	r1
     522:	0f 92       	push	r0
     524:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     528:	0f 92       	push	r0
     52a:	11 24       	eor	r1, r1
     52c:	2f 93       	push	r18
     52e:	3f 93       	push	r19
     530:	4f 93       	push	r20
     532:	5f 93       	push	r21
     534:	6f 93       	push	r22
     536:	7f 93       	push	r23
     538:	8f 93       	push	r24
     53a:	9f 93       	push	r25
     53c:	af 93       	push	r26
     53e:	bf 93       	push	r27
     540:	ef 93       	push	r30
     542:	ff 93       	push	r31
     544:	cf 93       	push	r28
     546:	df 93       	push	r29
     548:	1f 92       	push	r1
     54a:	cd b7       	in	r28, 0x3d	; 61
     54c:	de b7       	in	r29, 0x3e	; 62
     54e:	86 ec       	ldi	r24, 0xC6	; 198
     550:	90 e0       	ldi	r25, 0x00	; 0
     552:	fc 01       	movw	r30, r24
     554:	80 81       	ld	r24, Z
     556:	89 83       	std	Y+1, r24	; 0x01
     558:	89 81       	ldd	r24, Y+1	; 0x01
     55a:	88 2f       	mov	r24, r24
     55c:	90 e0       	ldi	r25, 0x00	; 0
     55e:	09 2e       	mov	r0, r25
     560:	00 0c       	add	r0, r0
     562:	aa 0b       	sbc	r26, r26
     564:	bb 0b       	sbc	r27, r27
     566:	4a e0       	ldi	r20, 0x0A	; 10
     568:	50 e0       	ldi	r21, 0x00	; 0
     56a:	29 e4       	ldi	r18, 0x49	; 73
     56c:	30 e0       	ldi	r19, 0x00	; 0
     56e:	84 1b       	sub	r24, r20
     570:	95 0b       	sbc	r25, r21
     572:	28 17       	cp	r18, r24
     574:	39 07       	cpc	r19, r25
     576:	d8 f1       	brcs	.+118    	; 0x5ee <__vector_20+0xce>
     578:	82 5c       	subi	r24, 0xC2	; 194
     57a:	9f 4f       	sbci	r25, 0xFF	; 255
     57c:	fc 01       	movw	r30, r24
     57e:	0c 94 f8 2f 	jmp	0x5ff0	; 0x5ff0 <__tablejump2__>
     582:	80 e3       	ldi	r24, 0x30	; 48
     584:	90 e0       	ldi	r25, 0x00	; 0
     586:	0e 94 84 03 	call	0x708	; 0x708 <set_led_mode>
     58a:	87 e0       	ldi	r24, 0x07	; 7
     58c:	91 e0       	ldi	r25, 0x01	; 1
     58e:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
     592:	45 c0       	rjmp	.+138    	; 0x61e <__vector_20+0xfe>
     594:	80 e1       	ldi	r24, 0x10	; 16
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	0e 94 84 03 	call	0x708	; 0x708 <set_led_mode>
     59c:	81 e0       	ldi	r24, 0x01	; 1
     59e:	80 93 45 03 	sts	0x0345, r24	; 0x800345 <play_sound>
     5a2:	3d c0       	rjmp	.+122    	; 0x61e <__vector_20+0xfe>
     5a4:	80 e4       	ldi	r24, 0x40	; 64
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	0e 94 84 03 	call	0x708	; 0x708 <set_led_mode>
     5ac:	38 c0       	rjmp	.+112    	; 0x61e <__vector_20+0xfe>
     5ae:	10 92 4b 03 	sts	0x034B, r1	; 0x80034b <data_bytes_recieved>
     5b2:	81 e0       	ldi	r24, 0x01	; 1
     5b4:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <uart_str_complete>
     5b8:	32 c0       	rjmp	.+100    	; 0x61e <__vector_20+0xfe>
     5ba:	80 e2       	ldi	r24, 0x20	; 32
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	0e 94 84 03 	call	0x708	; 0x708 <set_led_mode>
     5c2:	0e 94 ca 04 	call	0x994	; 0x994 <start_nowait>
     5c6:	81 e0       	ldi	r24, 0x01	; 1
     5c8:	80 93 44 03 	sts	0x0344, r24	; 0x800344 <routine_done>
     5cc:	28 c0       	rjmp	.+80     	; 0x61e <__vector_20+0xfe>
     5ce:	81 e0       	ldi	r24, 0x01	; 1
     5d0:	80 93 48 03 	sts	0x0348, r24	; 0x800348 <good>
     5d4:	24 c0       	rjmp	.+72     	; 0x61e <__vector_20+0xfe>
     5d6:	81 e0       	ldi	r24, 0x01	; 1
     5d8:	80 93 32 03 	sts	0x0332, r24	; 0x800332 <false_state>
     5dc:	20 c0       	rjmp	.+64     	; 0x61e <__vector_20+0xfe>
     5de:	81 e0       	ldi	r24, 0x01	; 1
     5e0:	80 93 33 03 	sts	0x0333, r24	; 0x800333 <pc_ready>
     5e4:	1c c0       	rjmp	.+56     	; 0x61e <__vector_20+0xfe>
     5e6:	81 e0       	ldi	r24, 0x01	; 1
     5e8:	80 93 45 03 	sts	0x0345, r24	; 0x800345 <play_sound>
     5ec:	18 c0       	rjmp	.+48     	; 0x61e <__vector_20+0xfe>
     5ee:	85 e2       	ldi	r24, 0x25	; 37
     5f0:	90 e0       	ldi	r25, 0x00	; 0
     5f2:	25 e2       	ldi	r18, 0x25	; 37
     5f4:	30 e0       	ldi	r19, 0x00	; 0
     5f6:	f9 01       	movw	r30, r18
     5f8:	20 81       	ld	r18, Z
     5fa:	21 60       	ori	r18, 0x01	; 1
     5fc:	fc 01       	movw	r30, r24
     5fe:	20 83       	st	Z, r18
     600:	80 91 4b 03 	lds	r24, 0x034B	; 0x80034b <data_bytes_recieved>
     604:	88 2f       	mov	r24, r24
     606:	90 e0       	ldi	r25, 0x00	; 0
     608:	83 5b       	subi	r24, 0xB3	; 179
     60a:	9c 4f       	sbci	r25, 0xFC	; 252
     60c:	29 81       	ldd	r18, Y+1	; 0x01
     60e:	fc 01       	movw	r30, r24
     610:	20 83       	st	Z, r18
     612:	80 91 4b 03 	lds	r24, 0x034B	; 0x80034b <data_bytes_recieved>
     616:	8f 5f       	subi	r24, 0xFF	; 255
     618:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <data_bytes_recieved>
     61c:	00 00       	nop
     61e:	00 00       	nop
     620:	0f 90       	pop	r0
     622:	df 91       	pop	r29
     624:	cf 91       	pop	r28
     626:	ff 91       	pop	r31
     628:	ef 91       	pop	r30
     62a:	bf 91       	pop	r27
     62c:	af 91       	pop	r26
     62e:	9f 91       	pop	r25
     630:	8f 91       	pop	r24
     632:	7f 91       	pop	r23
     634:	6f 91       	pop	r22
     636:	5f 91       	pop	r21
     638:	4f 91       	pop	r20
     63a:	3f 91       	pop	r19
     63c:	2f 91       	pop	r18
     63e:	0f 90       	pop	r0
     640:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     644:	0f 90       	pop	r0
     646:	1f 90       	pop	r1
     648:	18 95       	reti

0000064a <__vector_28>:
     64a:	1f 92       	push	r1
     64c:	0f 92       	push	r0
     64e:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     652:	0f 92       	push	r0
     654:	11 24       	eor	r1, r1
     656:	2f 93       	push	r18
     658:	8f 93       	push	r24
     65a:	9f 93       	push	r25
     65c:	ef 93       	push	r30
     65e:	ff 93       	push	r31
     660:	cf 93       	push	r28
     662:	df 93       	push	r29
     664:	1f 92       	push	r1
     666:	cd b7       	in	r28, 0x3d	; 61
     668:	de b7       	in	r29, 0x3e	; 62
     66a:	8e ec       	ldi	r24, 0xCE	; 206
     66c:	90 e0       	ldi	r25, 0x00	; 0
     66e:	fc 01       	movw	r30, r24
     670:	80 81       	ld	r24, Z
     672:	89 83       	std	Y+1, r24	; 0x01
     674:	80 91 fd 02 	lds	r24, 0x02FD	; 0x8002fd <uart_str_complete1>
     678:	88 23       	and	r24, r24
     67a:	31 f5       	brne	.+76     	; 0x6c8 <__vector_28+0x7e>
     67c:	89 81       	ldd	r24, Y+1	; 0x01
     67e:	8a 30       	cpi	r24, 0x0A	; 10
     680:	b1 f0       	breq	.+44     	; 0x6ae <__vector_28+0x64>
     682:	89 81       	ldd	r24, Y+1	; 0x01
     684:	8d 30       	cpi	r24, 0x0D	; 13
     686:	99 f0       	breq	.+38     	; 0x6ae <__vector_28+0x64>
     688:	80 91 fe 02 	lds	r24, 0x02FE	; 0x8002fe <uart_str_count1>
     68c:	82 33       	cpi	r24, 0x32	; 50
     68e:	78 f4       	brcc	.+30     	; 0x6ae <__vector_28+0x64>
     690:	80 91 fe 02 	lds	r24, 0x02FE	; 0x8002fe <uart_str_count1>
     694:	88 2f       	mov	r24, r24
     696:	90 e0       	ldi	r25, 0x00	; 0
     698:	81 50       	subi	r24, 0x01	; 1
     69a:	9d 4f       	sbci	r25, 0xFD	; 253
     69c:	29 81       	ldd	r18, Y+1	; 0x01
     69e:	fc 01       	movw	r30, r24
     6a0:	20 83       	st	Z, r18
     6a2:	80 91 fe 02 	lds	r24, 0x02FE	; 0x8002fe <uart_str_count1>
     6a6:	8f 5f       	subi	r24, 0xFF	; 255
     6a8:	80 93 fe 02 	sts	0x02FE, r24	; 0x8002fe <uart_str_count1>
     6ac:	0d c0       	rjmp	.+26     	; 0x6c8 <__vector_28+0x7e>
     6ae:	80 91 fe 02 	lds	r24, 0x02FE	; 0x8002fe <uart_str_count1>
     6b2:	88 2f       	mov	r24, r24
     6b4:	90 e0       	ldi	r25, 0x00	; 0
     6b6:	81 50       	subi	r24, 0x01	; 1
     6b8:	9d 4f       	sbci	r25, 0xFD	; 253
     6ba:	fc 01       	movw	r30, r24
     6bc:	10 82       	st	Z, r1
     6be:	10 92 fe 02 	sts	0x02FE, r1	; 0x8002fe <uart_str_count1>
     6c2:	81 e0       	ldi	r24, 0x01	; 1
     6c4:	80 93 fd 02 	sts	0x02FD, r24	; 0x8002fd <uart_str_complete1>
     6c8:	00 00       	nop
     6ca:	0f 90       	pop	r0
     6cc:	df 91       	pop	r29
     6ce:	cf 91       	pop	r28
     6d0:	ff 91       	pop	r31
     6d2:	ef 91       	pop	r30
     6d4:	9f 91       	pop	r25
     6d6:	8f 91       	pop	r24
     6d8:	2f 91       	pop	r18
     6da:	0f 90       	pop	r0
     6dc:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     6e0:	0f 90       	pop	r0
     6e2:	1f 90       	pop	r1
     6e4:	18 95       	reti

000006e6 <clear_port>:
void clear_port()
{
     6e6:	cf 93       	push	r28
     6e8:	df 93       	push	r29
     6ea:	cd b7       	in	r28, 0x3d	; 61
     6ec:	de b7       	in	r29, 0x3e	; 62
	PORTD&=~0x70;
     6ee:	8b e2       	ldi	r24, 0x2B	; 43
     6f0:	90 e0       	ldi	r25, 0x00	; 0
     6f2:	2b e2       	ldi	r18, 0x2B	; 43
     6f4:	30 e0       	ldi	r19, 0x00	; 0
     6f6:	f9 01       	movw	r30, r18
     6f8:	20 81       	ld	r18, Z
     6fa:	2f 78       	andi	r18, 0x8F	; 143
     6fc:	fc 01       	movw	r30, r24
     6fe:	20 83       	st	Z, r18
}
     700:	00 00       	nop
     702:	df 91       	pop	r29
     704:	cf 91       	pop	r28
     706:	08 95       	ret

00000708 <set_led_mode>:
void set_led_mode (unsigned char modus)
{
     708:	cf 93       	push	r28
     70a:	df 93       	push	r29
     70c:	1f 92       	push	r1
     70e:	cd b7       	in	r28, 0x3d	; 61
     710:	de b7       	in	r29, 0x3e	; 62
     712:	89 83       	std	Y+1, r24	; 0x01
	clear_port();
     714:	0e 94 73 03 	call	0x6e6	; 0x6e6 <clear_port>
	PORTD|=modus;
     718:	8b e2       	ldi	r24, 0x2B	; 43
     71a:	90 e0       	ldi	r25, 0x00	; 0
     71c:	2b e2       	ldi	r18, 0x2B	; 43
     71e:	30 e0       	ldi	r19, 0x00	; 0
     720:	f9 01       	movw	r30, r18
     722:	30 81       	ld	r19, Z
     724:	29 81       	ldd	r18, Y+1	; 0x01
     726:	23 2b       	or	r18, r19
     728:	fc 01       	movw	r30, r24
     72a:	20 83       	st	Z, r18
}
     72c:	00 00       	nop
     72e:	0f 90       	pop	r0
     730:	df 91       	pop	r29
     732:	cf 91       	pop	r28
     734:	08 95       	ret

00000736 <make_sound>:
void make_sound()
{
     736:	cf 93       	push	r28
     738:	df 93       	push	r29
     73a:	cd b7       	in	r28, 0x3d	; 61
     73c:	de b7       	in	r29, 0x3e	; 62
     73e:	6c 97       	sbiw	r28, 0x1c	; 28
     740:	0f b6       	in	r0, 0x3f	; 63
     742:	f8 94       	cli
     744:	de bf       	out	0x3e, r29	; 62
     746:	0f be       	out	0x3f, r0	; 63
     748:	cd bf       	out	0x3d, r28	; 61
	to_uARM("M2210 F500 T200\n");
     74a:	89 e6       	ldi	r24, 0x69	; 105
     74c:	91 e0       	ldi	r25, 0x01	; 1
     74e:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
     752:	80 e0       	ldi	r24, 0x00	; 0
     754:	90 e0       	ldi	r25, 0x00	; 0
     756:	a8 e4       	ldi	r26, 0x48	; 72
     758:	b3 e4       	ldi	r27, 0x43	; 67
     75a:	89 83       	std	Y+1, r24	; 0x01
     75c:	9a 83       	std	Y+2, r25	; 0x02
     75e:	ab 83       	std	Y+3, r26	; 0x03
     760:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     762:	20 e0       	ldi	r18, 0x00	; 0
     764:	30 e0       	ldi	r19, 0x00	; 0
     766:	4a e7       	ldi	r20, 0x7A	; 122
     768:	55 e4       	ldi	r21, 0x45	; 69
     76a:	69 81       	ldd	r22, Y+1	; 0x01
     76c:	7a 81       	ldd	r23, Y+2	; 0x02
     76e:	8b 81       	ldd	r24, Y+3	; 0x03
     770:	9c 81       	ldd	r25, Y+4	; 0x04
     772:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
     776:	dc 01       	movw	r26, r24
     778:	cb 01       	movw	r24, r22
     77a:	8b 8b       	std	Y+19, r24	; 0x13
     77c:	9c 8b       	std	Y+20, r25	; 0x14
     77e:	ad 8b       	std	Y+21, r26	; 0x15
     780:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     782:	20 e0       	ldi	r18, 0x00	; 0
     784:	30 e0       	ldi	r19, 0x00	; 0
     786:	40 e8       	ldi	r20, 0x80	; 128
     788:	5f e3       	ldi	r21, 0x3F	; 63
     78a:	6b 89       	ldd	r22, Y+19	; 0x13
     78c:	7c 89       	ldd	r23, Y+20	; 0x14
     78e:	8d 89       	ldd	r24, Y+21	; 0x15
     790:	9e 89       	ldd	r25, Y+22	; 0x16
     792:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
     796:	88 23       	and	r24, r24
     798:	2c f4       	brge	.+10     	; 0x7a4 <make_sound+0x6e>
		__ticks = 1;
     79a:	81 e0       	ldi	r24, 0x01	; 1
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	98 8f       	std	Y+24, r25	; 0x18
     7a0:	8f 8b       	std	Y+23, r24	; 0x17
     7a2:	3f c0       	rjmp	.+126    	; 0x822 <make_sound+0xec>
	else if (__tmp > 65535)
     7a4:	20 e0       	ldi	r18, 0x00	; 0
     7a6:	3f ef       	ldi	r19, 0xFF	; 255
     7a8:	4f e7       	ldi	r20, 0x7F	; 127
     7aa:	57 e4       	ldi	r21, 0x47	; 71
     7ac:	6b 89       	ldd	r22, Y+19	; 0x13
     7ae:	7c 89       	ldd	r23, Y+20	; 0x14
     7b0:	8d 89       	ldd	r24, Y+21	; 0x15
     7b2:	9e 89       	ldd	r25, Y+22	; 0x16
     7b4:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
     7b8:	18 16       	cp	r1, r24
     7ba:	4c f5       	brge	.+82     	; 0x80e <make_sound+0xd8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7bc:	20 e0       	ldi	r18, 0x00	; 0
     7be:	30 e0       	ldi	r19, 0x00	; 0
     7c0:	40 e2       	ldi	r20, 0x20	; 32
     7c2:	51 e4       	ldi	r21, 0x41	; 65
     7c4:	69 81       	ldd	r22, Y+1	; 0x01
     7c6:	7a 81       	ldd	r23, Y+2	; 0x02
     7c8:	8b 81       	ldd	r24, Y+3	; 0x03
     7ca:	9c 81       	ldd	r25, Y+4	; 0x04
     7cc:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
     7d0:	dc 01       	movw	r26, r24
     7d2:	cb 01       	movw	r24, r22
     7d4:	bc 01       	movw	r22, r24
     7d6:	cd 01       	movw	r24, r26
     7d8:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
     7dc:	dc 01       	movw	r26, r24
     7de:	cb 01       	movw	r24, r22
     7e0:	98 8f       	std	Y+24, r25	; 0x18
     7e2:	8f 8b       	std	Y+23, r24	; 0x17
     7e4:	0f c0       	rjmp	.+30     	; 0x804 <make_sound+0xce>
     7e6:	80 e9       	ldi	r24, 0x90	; 144
     7e8:	91 e0       	ldi	r25, 0x01	; 1
     7ea:	9a 8f       	std	Y+26, r25	; 0x1a
     7ec:	89 8f       	std	Y+25, r24	; 0x19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     7ee:	89 8d       	ldd	r24, Y+25	; 0x19
     7f0:	9a 8d       	ldd	r25, Y+26	; 0x1a
     7f2:	01 97       	sbiw	r24, 0x01	; 1
     7f4:	f1 f7       	brne	.-4      	; 0x7f2 <make_sound+0xbc>
     7f6:	9a 8f       	std	Y+26, r25	; 0x1a
     7f8:	89 8f       	std	Y+25, r24	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     7fa:	8f 89       	ldd	r24, Y+23	; 0x17
     7fc:	98 8d       	ldd	r25, Y+24	; 0x18
     7fe:	01 97       	sbiw	r24, 0x01	; 1
     800:	98 8f       	std	Y+24, r25	; 0x18
     802:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     804:	8f 89       	ldd	r24, Y+23	; 0x17
     806:	98 8d       	ldd	r25, Y+24	; 0x18
     808:	89 2b       	or	r24, r25
     80a:	69 f7       	brne	.-38     	; 0x7e6 <make_sound+0xb0>
     80c:	14 c0       	rjmp	.+40     	; 0x836 <make_sound+0x100>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     80e:	6b 89       	ldd	r22, Y+19	; 0x13
     810:	7c 89       	ldd	r23, Y+20	; 0x14
     812:	8d 89       	ldd	r24, Y+21	; 0x15
     814:	9e 89       	ldd	r25, Y+22	; 0x16
     816:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
     81a:	dc 01       	movw	r26, r24
     81c:	cb 01       	movw	r24, r22
     81e:	98 8f       	std	Y+24, r25	; 0x18
     820:	8f 8b       	std	Y+23, r24	; 0x17
     822:	8f 89       	ldd	r24, Y+23	; 0x17
     824:	98 8d       	ldd	r25, Y+24	; 0x18
     826:	9c 8f       	std	Y+28, r25	; 0x1c
     828:	8b 8f       	std	Y+27, r24	; 0x1b
     82a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     82c:	9c 8d       	ldd	r25, Y+28	; 0x1c
     82e:	01 97       	sbiw	r24, 0x01	; 1
     830:	f1 f7       	brne	.-4      	; 0x82e <make_sound+0xf8>
     832:	9c 8f       	std	Y+28, r25	; 0x1c
     834:	8b 8f       	std	Y+27, r24	; 0x1b
	_delay_ms(200);
	to_uARM("M2210 F1000 T500\n");
     836:	8a e7       	ldi	r24, 0x7A	; 122
     838:	91 e0       	ldi	r25, 0x01	; 1
     83a:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
     83e:	80 e0       	ldi	r24, 0x00	; 0
     840:	90 e0       	ldi	r25, 0x00	; 0
     842:	aa ef       	ldi	r26, 0xFA	; 250
     844:	b3 e4       	ldi	r27, 0x43	; 67
     846:	8d 83       	std	Y+5, r24	; 0x05
     848:	9e 83       	std	Y+6, r25	; 0x06
     84a:	af 83       	std	Y+7, r26	; 0x07
     84c:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     84e:	20 e0       	ldi	r18, 0x00	; 0
     850:	30 e0       	ldi	r19, 0x00	; 0
     852:	4a e7       	ldi	r20, 0x7A	; 122
     854:	55 e4       	ldi	r21, 0x45	; 69
     856:	6d 81       	ldd	r22, Y+5	; 0x05
     858:	7e 81       	ldd	r23, Y+6	; 0x06
     85a:	8f 81       	ldd	r24, Y+7	; 0x07
     85c:	98 85       	ldd	r25, Y+8	; 0x08
     85e:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
     862:	dc 01       	movw	r26, r24
     864:	cb 01       	movw	r24, r22
     866:	89 87       	std	Y+9, r24	; 0x09
     868:	9a 87       	std	Y+10, r25	; 0x0a
     86a:	ab 87       	std	Y+11, r26	; 0x0b
     86c:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     86e:	20 e0       	ldi	r18, 0x00	; 0
     870:	30 e0       	ldi	r19, 0x00	; 0
     872:	40 e8       	ldi	r20, 0x80	; 128
     874:	5f e3       	ldi	r21, 0x3F	; 63
     876:	69 85       	ldd	r22, Y+9	; 0x09
     878:	7a 85       	ldd	r23, Y+10	; 0x0a
     87a:	8b 85       	ldd	r24, Y+11	; 0x0b
     87c:	9c 85       	ldd	r25, Y+12	; 0x0c
     87e:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
     882:	88 23       	and	r24, r24
     884:	2c f4       	brge	.+10     	; 0x890 <make_sound+0x15a>
		__ticks = 1;
     886:	81 e0       	ldi	r24, 0x01	; 1
     888:	90 e0       	ldi	r25, 0x00	; 0
     88a:	9e 87       	std	Y+14, r25	; 0x0e
     88c:	8d 87       	std	Y+13, r24	; 0x0d
     88e:	3f c0       	rjmp	.+126    	; 0x90e <make_sound+0x1d8>
	else if (__tmp > 65535)
     890:	20 e0       	ldi	r18, 0x00	; 0
     892:	3f ef       	ldi	r19, 0xFF	; 255
     894:	4f e7       	ldi	r20, 0x7F	; 127
     896:	57 e4       	ldi	r21, 0x47	; 71
     898:	69 85       	ldd	r22, Y+9	; 0x09
     89a:	7a 85       	ldd	r23, Y+10	; 0x0a
     89c:	8b 85       	ldd	r24, Y+11	; 0x0b
     89e:	9c 85       	ldd	r25, Y+12	; 0x0c
     8a0:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
     8a4:	18 16       	cp	r1, r24
     8a6:	4c f5       	brge	.+82     	; 0x8fa <make_sound+0x1c4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     8a8:	20 e0       	ldi	r18, 0x00	; 0
     8aa:	30 e0       	ldi	r19, 0x00	; 0
     8ac:	40 e2       	ldi	r20, 0x20	; 32
     8ae:	51 e4       	ldi	r21, 0x41	; 65
     8b0:	6d 81       	ldd	r22, Y+5	; 0x05
     8b2:	7e 81       	ldd	r23, Y+6	; 0x06
     8b4:	8f 81       	ldd	r24, Y+7	; 0x07
     8b6:	98 85       	ldd	r25, Y+8	; 0x08
     8b8:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
     8bc:	dc 01       	movw	r26, r24
     8be:	cb 01       	movw	r24, r22
     8c0:	bc 01       	movw	r22, r24
     8c2:	cd 01       	movw	r24, r26
     8c4:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
     8c8:	dc 01       	movw	r26, r24
     8ca:	cb 01       	movw	r24, r22
     8cc:	9e 87       	std	Y+14, r25	; 0x0e
     8ce:	8d 87       	std	Y+13, r24	; 0x0d
     8d0:	0f c0       	rjmp	.+30     	; 0x8f0 <make_sound+0x1ba>
     8d2:	80 e9       	ldi	r24, 0x90	; 144
     8d4:	91 e0       	ldi	r25, 0x01	; 1
     8d6:	98 8b       	std	Y+16, r25	; 0x10
     8d8:	8f 87       	std	Y+15, r24	; 0x0f
     8da:	8f 85       	ldd	r24, Y+15	; 0x0f
     8dc:	98 89       	ldd	r25, Y+16	; 0x10
     8de:	01 97       	sbiw	r24, 0x01	; 1
     8e0:	f1 f7       	brne	.-4      	; 0x8de <make_sound+0x1a8>
     8e2:	98 8b       	std	Y+16, r25	; 0x10
     8e4:	8f 87       	std	Y+15, r24	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8e6:	8d 85       	ldd	r24, Y+13	; 0x0d
     8e8:	9e 85       	ldd	r25, Y+14	; 0x0e
     8ea:	01 97       	sbiw	r24, 0x01	; 1
     8ec:	9e 87       	std	Y+14, r25	; 0x0e
     8ee:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8f0:	8d 85       	ldd	r24, Y+13	; 0x0d
     8f2:	9e 85       	ldd	r25, Y+14	; 0x0e
     8f4:	89 2b       	or	r24, r25
     8f6:	69 f7       	brne	.-38     	; 0x8d2 <make_sound+0x19c>
     8f8:	14 c0       	rjmp	.+40     	; 0x922 <make_sound+0x1ec>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     8fa:	69 85       	ldd	r22, Y+9	; 0x09
     8fc:	7a 85       	ldd	r23, Y+10	; 0x0a
     8fe:	8b 85       	ldd	r24, Y+11	; 0x0b
     900:	9c 85       	ldd	r25, Y+12	; 0x0c
     902:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
     906:	dc 01       	movw	r26, r24
     908:	cb 01       	movw	r24, r22
     90a:	9e 87       	std	Y+14, r25	; 0x0e
     90c:	8d 87       	std	Y+13, r24	; 0x0d
     90e:	8d 85       	ldd	r24, Y+13	; 0x0d
     910:	9e 85       	ldd	r25, Y+14	; 0x0e
     912:	9a 8b       	std	Y+18, r25	; 0x12
     914:	89 8b       	std	Y+17, r24	; 0x11
     916:	89 89       	ldd	r24, Y+17	; 0x11
     918:	9a 89       	ldd	r25, Y+18	; 0x12
     91a:	01 97       	sbiw	r24, 0x01	; 1
     91c:	f1 f7       	brne	.-4      	; 0x91a <make_sound+0x1e4>
     91e:	9a 8b       	std	Y+18, r25	; 0x12
     920:	89 8b       	std	Y+17, r24	; 0x11
	_delay_ms(500);
	to_uARM("M2210 F2000 T500\n");
     922:	8c e8       	ldi	r24, 0x8C	; 140
     924:	91 e0       	ldi	r25, 0x01	; 1
     926:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
}
     92a:	00 00       	nop
     92c:	6c 96       	adiw	r28, 0x1c	; 28
     92e:	0f b6       	in	r0, 0x3f	; 63
     930:	f8 94       	cli
     932:	de bf       	out	0x3e, r29	; 62
     934:	0f be       	out	0x3f, r0	; 63
     936:	cd bf       	out	0x3d, r28	; 61
     938:	df 91       	pop	r29
     93a:	cf 91       	pop	r28
     93c:	08 95       	ret

0000093e <goto_start>:
void goto_start()
{
     93e:	cf 93       	push	r28
     940:	df 93       	push	r29
     942:	cd b7       	in	r28, 0x3d	; 61
     944:	de b7       	in	r29, 0x3e	; 62
	send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
     946:	8e e9       	ldi	r24, 0x9E	; 158
     948:	91 e0       	ldi	r25, 0x01	; 1
     94a:	0e 94 72 02 	call	0x4e4	; 0x4e4 <send_to_uArm>
	while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     94e:	04 c0       	rjmp	.+8      	; 0x958 <goto_start+0x1a>
	{
		to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
     950:	80 e0       	ldi	r24, 0x00	; 0
     952:	91 e0       	ldi	r25, 0x01	; 1
     954:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
	to_uARM("M2210 F2000 T500\n");
}
void goto_start()
{
	send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
	while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     958:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <uart_string1+0x4>
     95c:	81 33       	cpi	r24, 0x31	; 49
     95e:	c1 f3       	breq	.-16     	; 0x950 <goto_start+0x12>
	{
		to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
	}
}
     960:	00 00       	nop
     962:	df 91       	pop	r29
     964:	cf 91       	pop	r28
     966:	08 95       	ret

00000968 <beep>:
void beep(unsigned char dipswitch)
{
     968:	cf 93       	push	r28
     96a:	df 93       	push	r29
     96c:	1f 92       	push	r1
     96e:	cd b7       	in	r28, 0x3d	; 61
     970:	de b7       	in	r29, 0x3e	; 62
     972:	89 83       	std	Y+1, r24	; 0x01
	if (dipswitch&0x01)
     974:	89 81       	ldd	r24, Y+1	; 0x01
     976:	88 2f       	mov	r24, r24
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	81 70       	andi	r24, 0x01	; 1
     97c:	99 27       	eor	r25, r25
     97e:	89 2b       	or	r24, r25
     980:	21 f0       	breq	.+8      	; 0x98a <beep+0x22>
	{
		to_uARM("M2210 F2000 T200\n");
     982:	85 eb       	ldi	r24, 0xB5	; 181
     984:	91 e0       	ldi	r25, 0x01	; 1
     986:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
	}
}
     98a:	00 00       	nop
     98c:	0f 90       	pop	r0
     98e:	df 91       	pop	r29
     990:	cf 91       	pop	r28
     992:	08 95       	ret

00000994 <start_nowait>:
void start_nowait()
{
     994:	cf 93       	push	r28
     996:	df 93       	push	r29
     998:	cd b7       	in	r28, 0x3d	; 61
     99a:	de b7       	in	r29, 0x3e	; 62
	send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
     99c:	8e e9       	ldi	r24, 0x9E	; 158
     99e:	91 e0       	ldi	r25, 0x01	; 1
     9a0:	0e 94 72 02 	call	0x4e4	; 0x4e4 <send_to_uArm>
}
     9a4:	00 00       	nop
     9a6:	df 91       	pop	r29
     9a8:	cf 91       	pop	r28
     9aa:	08 95       	ret

000009ac <start_up_routine>:
void start_up_routine ()
{
     9ac:	cf 93       	push	r28
     9ae:	df 93       	push	r29
     9b0:	cd b7       	in	r28, 0x3d	; 61
     9b2:	de b7       	in	r29, 0x3e	; 62
	init_BT_CAR_V2_0();			// Das Board wird hier initialisiern
     9b4:	0e 94 89 2e 	call	0x5d12	; 0x5d12 <init_BT_CAR_V2_0>
	wait_1ms(10);
     9b8:	6a e0       	ldi	r22, 0x0A	; 10
     9ba:	70 e0       	ldi	r23, 0x00	; 0
     9bc:	80 e0       	ldi	r24, 0x00	; 0
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	0e 94 ff 2b 	call	0x57fe	; 0x57fe <wait_1ms>
	init_ADC();
     9c4:	0e 94 95 01 	call	0x32a	; 0x32a <init_ADC>
	init_UART0();
     9c8:	0e 94 b8 01 	call	0x370	; 0x370 <init_UART0>
	init_UART1();
     9cc:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <init_UART1>
	wait_1ms(10);
     9d0:	6a e0       	ldi	r22, 0x0A	; 10
     9d2:	70 e0       	ldi	r23, 0x00	; 0
     9d4:	80 e0       	ldi	r24, 0x00	; 0
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	0e 94 ff 2b 	call	0x57fe	; 0x57fe <wait_1ms>
	wait_1ms(50);
     9dc:	62 e3       	ldi	r22, 0x32	; 50
     9de:	70 e0       	ldi	r23, 0x00	; 0
     9e0:	80 e0       	ldi	r24, 0x00	; 0
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	0e 94 ff 2b 	call	0x57fe	; 0x57fe <wait_1ms>
	write_text(0,0,PSTR("        OKE         "));
     9e8:	80 e1       	ldi	r24, 0x10	; 16
     9ea:	91 e0       	ldi	r25, 0x01	; 1
     9ec:	ac 01       	movw	r20, r24
     9ee:	60 e0       	ldi	r22, 0x00	; 0
     9f0:	80 e0       	ldi	r24, 0x00	; 0
     9f2:	0e 94 a9 2c 	call	0x5952	; 0x5952 <write_text>
	write_text(1,0,PSTR("        BY          "));
     9f6:	85 e2       	ldi	r24, 0x25	; 37
     9f8:	91 e0       	ldi	r25, 0x01	; 1
     9fa:	ac 01       	movw	r20, r24
     9fc:	60 e0       	ldi	r22, 0x00	; 0
     9fe:	81 e0       	ldi	r24, 0x01	; 1
     a00:	0e 94 a9 2c 	call	0x5952	; 0x5952 <write_text>
	write_text(2,0,PSTR("        JAN         "));
     a04:	8a e3       	ldi	r24, 0x3A	; 58
     a06:	91 e0       	ldi	r25, 0x01	; 1
     a08:	ac 01       	movw	r20, r24
     a0a:	60 e0       	ldi	r22, 0x00	; 0
     a0c:	82 e0       	ldi	r24, 0x02	; 2
     a0e:	0e 94 a9 2c 	call	0x5952	; 0x5952 <write_text>
	write_text(3,0,PSTR("       TENDAI       "));
     a12:	8f e4       	ldi	r24, 0x4F	; 79
     a14:	91 e0       	ldi	r25, 0x01	; 1
     a16:	ac 01       	movw	r20, r24
     a18:	60 e0       	ldi	r22, 0x00	; 0
     a1a:	83 e0       	ldi	r24, 0x03	; 3
     a1c:	0e 94 a9 2c 	call	0x5952	; 0x5952 <write_text>
	set_led_mode(IDLE);
     a20:	80 e4       	ldi	r24, 0x40	; 64
     a22:	0e 94 84 03 	call	0x708	; 0x708 <set_led_mode>
	goto_start();
     a26:	0e 94 9f 04 	call	0x93e	; 0x93e <goto_start>
	make_sound();
     a2a:	0e 94 9b 03 	call	0x736	; 0x736 <make_sound>
	//while(pc_ready==0)
	//{
		//send_Byte_0('D');
		//wait_1ms(500);
	//}
	goto_start();
     a2e:	0e 94 9f 04 	call	0x93e	; 0x93e <goto_start>
	set_led_mode(FINISHED);
     a32:	80 e2       	ldi	r24, 0x20	; 32
     a34:	0e 94 84 03 	call	0x708	; 0x708 <set_led_mode>
}
     a38:	00 00       	nop
     a3a:	df 91       	pop	r29
     a3c:	cf 91       	pop	r28
     a3e:	08 95       	ret

00000a40 <play_somthin_booy>:
void play_somthin_booy()
{
     a40:	0f 93       	push	r16
     a42:	1f 93       	push	r17
     a44:	cf 93       	push	r28
     a46:	df 93       	push	r29
     a48:	cd b7       	in	r28, 0x3d	; 61
     a4a:	de b7       	in	r29, 0x3e	; 62
     a4c:	c0 53       	subi	r28, 0x30	; 48
     a4e:	d2 40       	sbci	r29, 0x02	; 2
     a50:	0f b6       	in	r0, 0x3f	; 63
     a52:	f8 94       	cli
     a54:	de bf       	out	0x3e, r29	; 62
     a56:	0f be       	out	0x3f, r0	; 63
     a58:	cd bf       	out	0x3d, r28	; 61
	to_uARM("M2210 F660 T100\n");
     a5a:	87 ec       	ldi	r24, 0xC7	; 199
     a5c:	91 e0       	ldi	r25, 0x01	; 1
     a5e:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
     a62:	80 e0       	ldi	r24, 0x00	; 0
     a64:	90 e0       	ldi	r25, 0x00	; 0
     a66:	a6 e1       	ldi	r26, 0x16	; 22
     a68:	b3 e4       	ldi	r27, 0x43	; 67
     a6a:	89 83       	std	Y+1, r24	; 0x01
     a6c:	9a 83       	std	Y+2, r25	; 0x02
     a6e:	ab 83       	std	Y+3, r26	; 0x03
     a70:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     a72:	8e 01       	movw	r16, r28
     a74:	09 5d       	subi	r16, 0xD9	; 217
     a76:	1d 4f       	sbci	r17, 0xFD	; 253
     a78:	20 e0       	ldi	r18, 0x00	; 0
     a7a:	30 e0       	ldi	r19, 0x00	; 0
     a7c:	4a e7       	ldi	r20, 0x7A	; 122
     a7e:	55 e4       	ldi	r21, 0x45	; 69
     a80:	69 81       	ldd	r22, Y+1	; 0x01
     a82:	7a 81       	ldd	r23, Y+2	; 0x02
     a84:	8b 81       	ldd	r24, Y+3	; 0x03
     a86:	9c 81       	ldd	r25, Y+4	; 0x04
     a88:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
     a8c:	dc 01       	movw	r26, r24
     a8e:	cb 01       	movw	r24, r22
     a90:	f8 01       	movw	r30, r16
     a92:	80 83       	st	Z, r24
     a94:	91 83       	std	Z+1, r25	; 0x01
     a96:	a2 83       	std	Z+2, r26	; 0x02
     a98:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     a9a:	ce 01       	movw	r24, r28
     a9c:	89 5d       	subi	r24, 0xD9	; 217
     a9e:	9d 4f       	sbci	r25, 0xFD	; 253
     aa0:	20 e0       	ldi	r18, 0x00	; 0
     aa2:	30 e0       	ldi	r19, 0x00	; 0
     aa4:	40 e8       	ldi	r20, 0x80	; 128
     aa6:	5f e3       	ldi	r21, 0x3F	; 63
     aa8:	fc 01       	movw	r30, r24
     aaa:	60 81       	ld	r22, Z
     aac:	71 81       	ldd	r23, Z+1	; 0x01
     aae:	82 81       	ldd	r24, Z+2	; 0x02
     ab0:	93 81       	ldd	r25, Z+3	; 0x03
     ab2:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
     ab6:	88 23       	and	r24, r24
     ab8:	4c f4       	brge	.+18     	; 0xacc <play_somthin_booy+0x8c>
		__ticks = 1;
     aba:	ce 01       	movw	r24, r28
     abc:	85 5d       	subi	r24, 0xD5	; 213
     abe:	9d 4f       	sbci	r25, 0xFD	; 253
     ac0:	21 e0       	ldi	r18, 0x01	; 1
     ac2:	30 e0       	ldi	r19, 0x00	; 0
     ac4:	fc 01       	movw	r30, r24
     ac6:	31 83       	std	Z+1, r19	; 0x01
     ac8:	20 83       	st	Z, r18
     aca:	69 c0       	rjmp	.+210    	; 0xb9e <play_somthin_booy+0x15e>
	else if (__tmp > 65535)
     acc:	ce 01       	movw	r24, r28
     ace:	89 5d       	subi	r24, 0xD9	; 217
     ad0:	9d 4f       	sbci	r25, 0xFD	; 253
     ad2:	20 e0       	ldi	r18, 0x00	; 0
     ad4:	3f ef       	ldi	r19, 0xFF	; 255
     ad6:	4f e7       	ldi	r20, 0x7F	; 127
     ad8:	57 e4       	ldi	r21, 0x47	; 71
     ada:	fc 01       	movw	r30, r24
     adc:	60 81       	ld	r22, Z
     ade:	71 81       	ldd	r23, Z+1	; 0x01
     ae0:	82 81       	ldd	r24, Z+2	; 0x02
     ae2:	93 81       	ldd	r25, Z+3	; 0x03
     ae4:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
     ae8:	18 16       	cp	r1, r24
     aea:	0c f0       	brlt	.+2      	; 0xaee <play_somthin_booy+0xae>
     aec:	46 c0       	rjmp	.+140    	; 0xb7a <play_somthin_booy+0x13a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     aee:	20 e0       	ldi	r18, 0x00	; 0
     af0:	30 e0       	ldi	r19, 0x00	; 0
     af2:	40 e2       	ldi	r20, 0x20	; 32
     af4:	51 e4       	ldi	r21, 0x41	; 65
     af6:	69 81       	ldd	r22, Y+1	; 0x01
     af8:	7a 81       	ldd	r23, Y+2	; 0x02
     afa:	8b 81       	ldd	r24, Y+3	; 0x03
     afc:	9c 81       	ldd	r25, Y+4	; 0x04
     afe:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
     b02:	dc 01       	movw	r26, r24
     b04:	cb 01       	movw	r24, r22
     b06:	8e 01       	movw	r16, r28
     b08:	05 5d       	subi	r16, 0xD5	; 213
     b0a:	1d 4f       	sbci	r17, 0xFD	; 253
     b0c:	bc 01       	movw	r22, r24
     b0e:	cd 01       	movw	r24, r26
     b10:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
     b14:	dc 01       	movw	r26, r24
     b16:	cb 01       	movw	r24, r22
     b18:	f8 01       	movw	r30, r16
     b1a:	91 83       	std	Z+1, r25	; 0x01
     b1c:	80 83       	st	Z, r24
     b1e:	24 c0       	rjmp	.+72     	; 0xb68 <play_somthin_booy+0x128>
     b20:	ce 01       	movw	r24, r28
     b22:	83 5d       	subi	r24, 0xD3	; 211
     b24:	9d 4f       	sbci	r25, 0xFD	; 253
     b26:	20 e9       	ldi	r18, 0x90	; 144
     b28:	31 e0       	ldi	r19, 0x01	; 1
     b2a:	fc 01       	movw	r30, r24
     b2c:	31 83       	std	Z+1, r19	; 0x01
     b2e:	20 83       	st	Z, r18
     b30:	ce 01       	movw	r24, r28
     b32:	83 5d       	subi	r24, 0xD3	; 211
     b34:	9d 4f       	sbci	r25, 0xFD	; 253
     b36:	fc 01       	movw	r30, r24
     b38:	80 81       	ld	r24, Z
     b3a:	91 81       	ldd	r25, Z+1	; 0x01
     b3c:	01 97       	sbiw	r24, 0x01	; 1
     b3e:	f1 f7       	brne	.-4      	; 0xb3c <play_somthin_booy+0xfc>
     b40:	9e 01       	movw	r18, r28
     b42:	23 5d       	subi	r18, 0xD3	; 211
     b44:	3d 4f       	sbci	r19, 0xFD	; 253
     b46:	f9 01       	movw	r30, r18
     b48:	91 83       	std	Z+1, r25	; 0x01
     b4a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b4c:	ce 01       	movw	r24, r28
     b4e:	85 5d       	subi	r24, 0xD5	; 213
     b50:	9d 4f       	sbci	r25, 0xFD	; 253
     b52:	9e 01       	movw	r18, r28
     b54:	25 5d       	subi	r18, 0xD5	; 213
     b56:	3d 4f       	sbci	r19, 0xFD	; 253
     b58:	f9 01       	movw	r30, r18
     b5a:	20 81       	ld	r18, Z
     b5c:	31 81       	ldd	r19, Z+1	; 0x01
     b5e:	21 50       	subi	r18, 0x01	; 1
     b60:	31 09       	sbc	r19, r1
     b62:	fc 01       	movw	r30, r24
     b64:	31 83       	std	Z+1, r19	; 0x01
     b66:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b68:	ce 01       	movw	r24, r28
     b6a:	85 5d       	subi	r24, 0xD5	; 213
     b6c:	9d 4f       	sbci	r25, 0xFD	; 253
     b6e:	fc 01       	movw	r30, r24
     b70:	80 81       	ld	r24, Z
     b72:	91 81       	ldd	r25, Z+1	; 0x01
     b74:	89 2b       	or	r24, r25
     b76:	a1 f6       	brne	.-88     	; 0xb20 <play_somthin_booy+0xe0>
     b78:	2c c0       	rjmp	.+88     	; 0xbd2 <play_somthin_booy+0x192>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b7a:	8e 01       	movw	r16, r28
     b7c:	05 5d       	subi	r16, 0xD5	; 213
     b7e:	1d 4f       	sbci	r17, 0xFD	; 253
     b80:	ce 01       	movw	r24, r28
     b82:	89 5d       	subi	r24, 0xD9	; 217
     b84:	9d 4f       	sbci	r25, 0xFD	; 253
     b86:	fc 01       	movw	r30, r24
     b88:	60 81       	ld	r22, Z
     b8a:	71 81       	ldd	r23, Z+1	; 0x01
     b8c:	82 81       	ldd	r24, Z+2	; 0x02
     b8e:	93 81       	ldd	r25, Z+3	; 0x03
     b90:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
     b94:	dc 01       	movw	r26, r24
     b96:	cb 01       	movw	r24, r22
     b98:	f8 01       	movw	r30, r16
     b9a:	91 83       	std	Z+1, r25	; 0x01
     b9c:	80 83       	st	Z, r24
     b9e:	ce 01       	movw	r24, r28
     ba0:	81 5d       	subi	r24, 0xD1	; 209
     ba2:	9d 4f       	sbci	r25, 0xFD	; 253
     ba4:	9e 01       	movw	r18, r28
     ba6:	25 5d       	subi	r18, 0xD5	; 213
     ba8:	3d 4f       	sbci	r19, 0xFD	; 253
     baa:	f9 01       	movw	r30, r18
     bac:	20 81       	ld	r18, Z
     bae:	31 81       	ldd	r19, Z+1	; 0x01
     bb0:	fc 01       	movw	r30, r24
     bb2:	31 83       	std	Z+1, r19	; 0x01
     bb4:	20 83       	st	Z, r18
     bb6:	ce 01       	movw	r24, r28
     bb8:	81 5d       	subi	r24, 0xD1	; 209
     bba:	9d 4f       	sbci	r25, 0xFD	; 253
     bbc:	fc 01       	movw	r30, r24
     bbe:	80 81       	ld	r24, Z
     bc0:	91 81       	ldd	r25, Z+1	; 0x01
     bc2:	01 97       	sbiw	r24, 0x01	; 1
     bc4:	f1 f7       	brne	.-4      	; 0xbc2 <play_somthin_booy+0x182>
     bc6:	9e 01       	movw	r18, r28
     bc8:	21 5d       	subi	r18, 0xD1	; 209
     bca:	3d 4f       	sbci	r19, 0xFD	; 253
     bcc:	f9 01       	movw	r30, r18
     bce:	91 83       	std	Z+1, r25	; 0x01
     bd0:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F660 T100\n");
     bd2:	87 ec       	ldi	r24, 0xC7	; 199
     bd4:	91 e0       	ldi	r25, 0x01	; 1
     bd6:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
     bda:	80 e0       	ldi	r24, 0x00	; 0
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	a6 e9       	ldi	r26, 0x96	; 150
     be0:	b3 e4       	ldi	r27, 0x43	; 67
     be2:	8d 83       	std	Y+5, r24	; 0x05
     be4:	9e 83       	std	Y+6, r25	; 0x06
     be6:	af 83       	std	Y+7, r26	; 0x07
     be8:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     bea:	8e 01       	movw	r16, r28
     bec:	03 5e       	subi	r16, 0xE3	; 227
     bee:	1d 4f       	sbci	r17, 0xFD	; 253
     bf0:	20 e0       	ldi	r18, 0x00	; 0
     bf2:	30 e0       	ldi	r19, 0x00	; 0
     bf4:	4a e7       	ldi	r20, 0x7A	; 122
     bf6:	55 e4       	ldi	r21, 0x45	; 69
     bf8:	6d 81       	ldd	r22, Y+5	; 0x05
     bfa:	7e 81       	ldd	r23, Y+6	; 0x06
     bfc:	8f 81       	ldd	r24, Y+7	; 0x07
     bfe:	98 85       	ldd	r25, Y+8	; 0x08
     c00:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
     c04:	dc 01       	movw	r26, r24
     c06:	cb 01       	movw	r24, r22
     c08:	f8 01       	movw	r30, r16
     c0a:	80 83       	st	Z, r24
     c0c:	91 83       	std	Z+1, r25	; 0x01
     c0e:	a2 83       	std	Z+2, r26	; 0x02
     c10:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     c12:	ce 01       	movw	r24, r28
     c14:	83 5e       	subi	r24, 0xE3	; 227
     c16:	9d 4f       	sbci	r25, 0xFD	; 253
     c18:	20 e0       	ldi	r18, 0x00	; 0
     c1a:	30 e0       	ldi	r19, 0x00	; 0
     c1c:	40 e8       	ldi	r20, 0x80	; 128
     c1e:	5f e3       	ldi	r21, 0x3F	; 63
     c20:	fc 01       	movw	r30, r24
     c22:	60 81       	ld	r22, Z
     c24:	71 81       	ldd	r23, Z+1	; 0x01
     c26:	82 81       	ldd	r24, Z+2	; 0x02
     c28:	93 81       	ldd	r25, Z+3	; 0x03
     c2a:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
     c2e:	88 23       	and	r24, r24
     c30:	4c f4       	brge	.+18     	; 0xc44 <play_somthin_booy+0x204>
		__ticks = 1;
     c32:	ce 01       	movw	r24, r28
     c34:	8f 5d       	subi	r24, 0xDF	; 223
     c36:	9d 4f       	sbci	r25, 0xFD	; 253
     c38:	21 e0       	ldi	r18, 0x01	; 1
     c3a:	30 e0       	ldi	r19, 0x00	; 0
     c3c:	fc 01       	movw	r30, r24
     c3e:	31 83       	std	Z+1, r19	; 0x01
     c40:	20 83       	st	Z, r18
     c42:	69 c0       	rjmp	.+210    	; 0xd16 <play_somthin_booy+0x2d6>
	else if (__tmp > 65535)
     c44:	ce 01       	movw	r24, r28
     c46:	83 5e       	subi	r24, 0xE3	; 227
     c48:	9d 4f       	sbci	r25, 0xFD	; 253
     c4a:	20 e0       	ldi	r18, 0x00	; 0
     c4c:	3f ef       	ldi	r19, 0xFF	; 255
     c4e:	4f e7       	ldi	r20, 0x7F	; 127
     c50:	57 e4       	ldi	r21, 0x47	; 71
     c52:	fc 01       	movw	r30, r24
     c54:	60 81       	ld	r22, Z
     c56:	71 81       	ldd	r23, Z+1	; 0x01
     c58:	82 81       	ldd	r24, Z+2	; 0x02
     c5a:	93 81       	ldd	r25, Z+3	; 0x03
     c5c:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
     c60:	18 16       	cp	r1, r24
     c62:	0c f0       	brlt	.+2      	; 0xc66 <play_somthin_booy+0x226>
     c64:	46 c0       	rjmp	.+140    	; 0xcf2 <play_somthin_booy+0x2b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c66:	20 e0       	ldi	r18, 0x00	; 0
     c68:	30 e0       	ldi	r19, 0x00	; 0
     c6a:	40 e2       	ldi	r20, 0x20	; 32
     c6c:	51 e4       	ldi	r21, 0x41	; 65
     c6e:	6d 81       	ldd	r22, Y+5	; 0x05
     c70:	7e 81       	ldd	r23, Y+6	; 0x06
     c72:	8f 81       	ldd	r24, Y+7	; 0x07
     c74:	98 85       	ldd	r25, Y+8	; 0x08
     c76:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
     c7a:	dc 01       	movw	r26, r24
     c7c:	cb 01       	movw	r24, r22
     c7e:	8e 01       	movw	r16, r28
     c80:	0f 5d       	subi	r16, 0xDF	; 223
     c82:	1d 4f       	sbci	r17, 0xFD	; 253
     c84:	bc 01       	movw	r22, r24
     c86:	cd 01       	movw	r24, r26
     c88:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
     c8c:	dc 01       	movw	r26, r24
     c8e:	cb 01       	movw	r24, r22
     c90:	f8 01       	movw	r30, r16
     c92:	91 83       	std	Z+1, r25	; 0x01
     c94:	80 83       	st	Z, r24
     c96:	24 c0       	rjmp	.+72     	; 0xce0 <play_somthin_booy+0x2a0>
     c98:	ce 01       	movw	r24, r28
     c9a:	8d 5d       	subi	r24, 0xDD	; 221
     c9c:	9d 4f       	sbci	r25, 0xFD	; 253
     c9e:	20 e9       	ldi	r18, 0x90	; 144
     ca0:	31 e0       	ldi	r19, 0x01	; 1
     ca2:	fc 01       	movw	r30, r24
     ca4:	31 83       	std	Z+1, r19	; 0x01
     ca6:	20 83       	st	Z, r18
     ca8:	ce 01       	movw	r24, r28
     caa:	8d 5d       	subi	r24, 0xDD	; 221
     cac:	9d 4f       	sbci	r25, 0xFD	; 253
     cae:	fc 01       	movw	r30, r24
     cb0:	80 81       	ld	r24, Z
     cb2:	91 81       	ldd	r25, Z+1	; 0x01
     cb4:	01 97       	sbiw	r24, 0x01	; 1
     cb6:	f1 f7       	brne	.-4      	; 0xcb4 <play_somthin_booy+0x274>
     cb8:	9e 01       	movw	r18, r28
     cba:	2d 5d       	subi	r18, 0xDD	; 221
     cbc:	3d 4f       	sbci	r19, 0xFD	; 253
     cbe:	f9 01       	movw	r30, r18
     cc0:	91 83       	std	Z+1, r25	; 0x01
     cc2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     cc4:	ce 01       	movw	r24, r28
     cc6:	8f 5d       	subi	r24, 0xDF	; 223
     cc8:	9d 4f       	sbci	r25, 0xFD	; 253
     cca:	9e 01       	movw	r18, r28
     ccc:	2f 5d       	subi	r18, 0xDF	; 223
     cce:	3d 4f       	sbci	r19, 0xFD	; 253
     cd0:	f9 01       	movw	r30, r18
     cd2:	20 81       	ld	r18, Z
     cd4:	31 81       	ldd	r19, Z+1	; 0x01
     cd6:	21 50       	subi	r18, 0x01	; 1
     cd8:	31 09       	sbc	r19, r1
     cda:	fc 01       	movw	r30, r24
     cdc:	31 83       	std	Z+1, r19	; 0x01
     cde:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ce0:	ce 01       	movw	r24, r28
     ce2:	8f 5d       	subi	r24, 0xDF	; 223
     ce4:	9d 4f       	sbci	r25, 0xFD	; 253
     ce6:	fc 01       	movw	r30, r24
     ce8:	80 81       	ld	r24, Z
     cea:	91 81       	ldd	r25, Z+1	; 0x01
     cec:	89 2b       	or	r24, r25
     cee:	a1 f6       	brne	.-88     	; 0xc98 <play_somthin_booy+0x258>
     cf0:	2c c0       	rjmp	.+88     	; 0xd4a <play_somthin_booy+0x30a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     cf2:	8e 01       	movw	r16, r28
     cf4:	0f 5d       	subi	r16, 0xDF	; 223
     cf6:	1d 4f       	sbci	r17, 0xFD	; 253
     cf8:	ce 01       	movw	r24, r28
     cfa:	83 5e       	subi	r24, 0xE3	; 227
     cfc:	9d 4f       	sbci	r25, 0xFD	; 253
     cfe:	fc 01       	movw	r30, r24
     d00:	60 81       	ld	r22, Z
     d02:	71 81       	ldd	r23, Z+1	; 0x01
     d04:	82 81       	ldd	r24, Z+2	; 0x02
     d06:	93 81       	ldd	r25, Z+3	; 0x03
     d08:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
     d0c:	dc 01       	movw	r26, r24
     d0e:	cb 01       	movw	r24, r22
     d10:	f8 01       	movw	r30, r16
     d12:	91 83       	std	Z+1, r25	; 0x01
     d14:	80 83       	st	Z, r24
     d16:	ce 01       	movw	r24, r28
     d18:	8b 5d       	subi	r24, 0xDB	; 219
     d1a:	9d 4f       	sbci	r25, 0xFD	; 253
     d1c:	9e 01       	movw	r18, r28
     d1e:	2f 5d       	subi	r18, 0xDF	; 223
     d20:	3d 4f       	sbci	r19, 0xFD	; 253
     d22:	f9 01       	movw	r30, r18
     d24:	20 81       	ld	r18, Z
     d26:	31 81       	ldd	r19, Z+1	; 0x01
     d28:	fc 01       	movw	r30, r24
     d2a:	31 83       	std	Z+1, r19	; 0x01
     d2c:	20 83       	st	Z, r18
     d2e:	ce 01       	movw	r24, r28
     d30:	8b 5d       	subi	r24, 0xDB	; 219
     d32:	9d 4f       	sbci	r25, 0xFD	; 253
     d34:	fc 01       	movw	r30, r24
     d36:	80 81       	ld	r24, Z
     d38:	91 81       	ldd	r25, Z+1	; 0x01
     d3a:	01 97       	sbiw	r24, 0x01	; 1
     d3c:	f1 f7       	brne	.-4      	; 0xd3a <play_somthin_booy+0x2fa>
     d3e:	9e 01       	movw	r18, r28
     d40:	2b 5d       	subi	r18, 0xDB	; 219
     d42:	3d 4f       	sbci	r19, 0xFD	; 253
     d44:	f9 01       	movw	r30, r18
     d46:	91 83       	std	Z+1, r25	; 0x01
     d48:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F660 T100\n");
     d4a:	87 ec       	ldi	r24, 0xC7	; 199
     d4c:	91 e0       	ldi	r25, 0x01	; 1
     d4e:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
     d52:	80 e0       	ldi	r24, 0x00	; 0
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	a6 e9       	ldi	r26, 0x96	; 150
     d58:	b3 e4       	ldi	r27, 0x43	; 67
     d5a:	89 87       	std	Y+9, r24	; 0x09
     d5c:	9a 87       	std	Y+10, r25	; 0x0a
     d5e:	ab 87       	std	Y+11, r26	; 0x0b
     d60:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     d62:	8e 01       	movw	r16, r28
     d64:	0d 5e       	subi	r16, 0xED	; 237
     d66:	1d 4f       	sbci	r17, 0xFD	; 253
     d68:	20 e0       	ldi	r18, 0x00	; 0
     d6a:	30 e0       	ldi	r19, 0x00	; 0
     d6c:	4a e7       	ldi	r20, 0x7A	; 122
     d6e:	55 e4       	ldi	r21, 0x45	; 69
     d70:	69 85       	ldd	r22, Y+9	; 0x09
     d72:	7a 85       	ldd	r23, Y+10	; 0x0a
     d74:	8b 85       	ldd	r24, Y+11	; 0x0b
     d76:	9c 85       	ldd	r25, Y+12	; 0x0c
     d78:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
     d7c:	dc 01       	movw	r26, r24
     d7e:	cb 01       	movw	r24, r22
     d80:	f8 01       	movw	r30, r16
     d82:	80 83       	st	Z, r24
     d84:	91 83       	std	Z+1, r25	; 0x01
     d86:	a2 83       	std	Z+2, r26	; 0x02
     d88:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d8a:	ce 01       	movw	r24, r28
     d8c:	8d 5e       	subi	r24, 0xED	; 237
     d8e:	9d 4f       	sbci	r25, 0xFD	; 253
     d90:	20 e0       	ldi	r18, 0x00	; 0
     d92:	30 e0       	ldi	r19, 0x00	; 0
     d94:	40 e8       	ldi	r20, 0x80	; 128
     d96:	5f e3       	ldi	r21, 0x3F	; 63
     d98:	fc 01       	movw	r30, r24
     d9a:	60 81       	ld	r22, Z
     d9c:	71 81       	ldd	r23, Z+1	; 0x01
     d9e:	82 81       	ldd	r24, Z+2	; 0x02
     da0:	93 81       	ldd	r25, Z+3	; 0x03
     da2:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
     da6:	88 23       	and	r24, r24
     da8:	4c f4       	brge	.+18     	; 0xdbc <play_somthin_booy+0x37c>
		__ticks = 1;
     daa:	ce 01       	movw	r24, r28
     dac:	89 5e       	subi	r24, 0xE9	; 233
     dae:	9d 4f       	sbci	r25, 0xFD	; 253
     db0:	21 e0       	ldi	r18, 0x01	; 1
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	fc 01       	movw	r30, r24
     db6:	31 83       	std	Z+1, r19	; 0x01
     db8:	20 83       	st	Z, r18
     dba:	69 c0       	rjmp	.+210    	; 0xe8e <play_somthin_booy+0x44e>
	else if (__tmp > 65535)
     dbc:	ce 01       	movw	r24, r28
     dbe:	8d 5e       	subi	r24, 0xED	; 237
     dc0:	9d 4f       	sbci	r25, 0xFD	; 253
     dc2:	20 e0       	ldi	r18, 0x00	; 0
     dc4:	3f ef       	ldi	r19, 0xFF	; 255
     dc6:	4f e7       	ldi	r20, 0x7F	; 127
     dc8:	57 e4       	ldi	r21, 0x47	; 71
     dca:	fc 01       	movw	r30, r24
     dcc:	60 81       	ld	r22, Z
     dce:	71 81       	ldd	r23, Z+1	; 0x01
     dd0:	82 81       	ldd	r24, Z+2	; 0x02
     dd2:	93 81       	ldd	r25, Z+3	; 0x03
     dd4:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
     dd8:	18 16       	cp	r1, r24
     dda:	0c f0       	brlt	.+2      	; 0xdde <play_somthin_booy+0x39e>
     ddc:	46 c0       	rjmp	.+140    	; 0xe6a <play_somthin_booy+0x42a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     dde:	20 e0       	ldi	r18, 0x00	; 0
     de0:	30 e0       	ldi	r19, 0x00	; 0
     de2:	40 e2       	ldi	r20, 0x20	; 32
     de4:	51 e4       	ldi	r21, 0x41	; 65
     de6:	69 85       	ldd	r22, Y+9	; 0x09
     de8:	7a 85       	ldd	r23, Y+10	; 0x0a
     dea:	8b 85       	ldd	r24, Y+11	; 0x0b
     dec:	9c 85       	ldd	r25, Y+12	; 0x0c
     dee:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
     df2:	dc 01       	movw	r26, r24
     df4:	cb 01       	movw	r24, r22
     df6:	8e 01       	movw	r16, r28
     df8:	09 5e       	subi	r16, 0xE9	; 233
     dfa:	1d 4f       	sbci	r17, 0xFD	; 253
     dfc:	bc 01       	movw	r22, r24
     dfe:	cd 01       	movw	r24, r26
     e00:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
     e04:	dc 01       	movw	r26, r24
     e06:	cb 01       	movw	r24, r22
     e08:	f8 01       	movw	r30, r16
     e0a:	91 83       	std	Z+1, r25	; 0x01
     e0c:	80 83       	st	Z, r24
     e0e:	24 c0       	rjmp	.+72     	; 0xe58 <play_somthin_booy+0x418>
     e10:	ce 01       	movw	r24, r28
     e12:	87 5e       	subi	r24, 0xE7	; 231
     e14:	9d 4f       	sbci	r25, 0xFD	; 253
     e16:	20 e9       	ldi	r18, 0x90	; 144
     e18:	31 e0       	ldi	r19, 0x01	; 1
     e1a:	fc 01       	movw	r30, r24
     e1c:	31 83       	std	Z+1, r19	; 0x01
     e1e:	20 83       	st	Z, r18
     e20:	ce 01       	movw	r24, r28
     e22:	87 5e       	subi	r24, 0xE7	; 231
     e24:	9d 4f       	sbci	r25, 0xFD	; 253
     e26:	fc 01       	movw	r30, r24
     e28:	80 81       	ld	r24, Z
     e2a:	91 81       	ldd	r25, Z+1	; 0x01
     e2c:	01 97       	sbiw	r24, 0x01	; 1
     e2e:	f1 f7       	brne	.-4      	; 0xe2c <play_somthin_booy+0x3ec>
     e30:	9e 01       	movw	r18, r28
     e32:	27 5e       	subi	r18, 0xE7	; 231
     e34:	3d 4f       	sbci	r19, 0xFD	; 253
     e36:	f9 01       	movw	r30, r18
     e38:	91 83       	std	Z+1, r25	; 0x01
     e3a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e3c:	ce 01       	movw	r24, r28
     e3e:	89 5e       	subi	r24, 0xE9	; 233
     e40:	9d 4f       	sbci	r25, 0xFD	; 253
     e42:	9e 01       	movw	r18, r28
     e44:	29 5e       	subi	r18, 0xE9	; 233
     e46:	3d 4f       	sbci	r19, 0xFD	; 253
     e48:	f9 01       	movw	r30, r18
     e4a:	20 81       	ld	r18, Z
     e4c:	31 81       	ldd	r19, Z+1	; 0x01
     e4e:	21 50       	subi	r18, 0x01	; 1
     e50:	31 09       	sbc	r19, r1
     e52:	fc 01       	movw	r30, r24
     e54:	31 83       	std	Z+1, r19	; 0x01
     e56:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e58:	ce 01       	movw	r24, r28
     e5a:	89 5e       	subi	r24, 0xE9	; 233
     e5c:	9d 4f       	sbci	r25, 0xFD	; 253
     e5e:	fc 01       	movw	r30, r24
     e60:	80 81       	ld	r24, Z
     e62:	91 81       	ldd	r25, Z+1	; 0x01
     e64:	89 2b       	or	r24, r25
     e66:	a1 f6       	brne	.-88     	; 0xe10 <play_somthin_booy+0x3d0>
     e68:	2c c0       	rjmp	.+88     	; 0xec2 <play_somthin_booy+0x482>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e6a:	8e 01       	movw	r16, r28
     e6c:	09 5e       	subi	r16, 0xE9	; 233
     e6e:	1d 4f       	sbci	r17, 0xFD	; 253
     e70:	ce 01       	movw	r24, r28
     e72:	8d 5e       	subi	r24, 0xED	; 237
     e74:	9d 4f       	sbci	r25, 0xFD	; 253
     e76:	fc 01       	movw	r30, r24
     e78:	60 81       	ld	r22, Z
     e7a:	71 81       	ldd	r23, Z+1	; 0x01
     e7c:	82 81       	ldd	r24, Z+2	; 0x02
     e7e:	93 81       	ldd	r25, Z+3	; 0x03
     e80:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
     e84:	dc 01       	movw	r26, r24
     e86:	cb 01       	movw	r24, r22
     e88:	f8 01       	movw	r30, r16
     e8a:	91 83       	std	Z+1, r25	; 0x01
     e8c:	80 83       	st	Z, r24
     e8e:	ce 01       	movw	r24, r28
     e90:	85 5e       	subi	r24, 0xE5	; 229
     e92:	9d 4f       	sbci	r25, 0xFD	; 253
     e94:	9e 01       	movw	r18, r28
     e96:	29 5e       	subi	r18, 0xE9	; 233
     e98:	3d 4f       	sbci	r19, 0xFD	; 253
     e9a:	f9 01       	movw	r30, r18
     e9c:	20 81       	ld	r18, Z
     e9e:	31 81       	ldd	r19, Z+1	; 0x01
     ea0:	fc 01       	movw	r30, r24
     ea2:	31 83       	std	Z+1, r19	; 0x01
     ea4:	20 83       	st	Z, r18
     ea6:	ce 01       	movw	r24, r28
     ea8:	85 5e       	subi	r24, 0xE5	; 229
     eaa:	9d 4f       	sbci	r25, 0xFD	; 253
     eac:	fc 01       	movw	r30, r24
     eae:	80 81       	ld	r24, Z
     eb0:	91 81       	ldd	r25, Z+1	; 0x01
     eb2:	01 97       	sbiw	r24, 0x01	; 1
     eb4:	f1 f7       	brne	.-4      	; 0xeb2 <play_somthin_booy+0x472>
     eb6:	9e 01       	movw	r18, r28
     eb8:	25 5e       	subi	r18, 0xE5	; 229
     eba:	3d 4f       	sbci	r19, 0xFD	; 253
     ebc:	f9 01       	movw	r30, r18
     ebe:	91 83       	std	Z+1, r25	; 0x01
     ec0:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F510 T100\n");
     ec2:	88 ed       	ldi	r24, 0xD8	; 216
     ec4:	91 e0       	ldi	r25, 0x01	; 1
     ec6:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
     eca:	80 e0       	ldi	r24, 0x00	; 0
     ecc:	90 e0       	ldi	r25, 0x00	; 0
     ece:	a8 ec       	ldi	r26, 0xC8	; 200
     ed0:	b2 e4       	ldi	r27, 0x42	; 66
     ed2:	8d 87       	std	Y+13, r24	; 0x0d
     ed4:	9e 87       	std	Y+14, r25	; 0x0e
     ed6:	af 87       	std	Y+15, r26	; 0x0f
     ed8:	b8 8b       	std	Y+16, r27	; 0x10

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     eda:	8e 01       	movw	r16, r28
     edc:	07 5f       	subi	r16, 0xF7	; 247
     ede:	1d 4f       	sbci	r17, 0xFD	; 253
     ee0:	20 e0       	ldi	r18, 0x00	; 0
     ee2:	30 e0       	ldi	r19, 0x00	; 0
     ee4:	4a e7       	ldi	r20, 0x7A	; 122
     ee6:	55 e4       	ldi	r21, 0x45	; 69
     ee8:	6d 85       	ldd	r22, Y+13	; 0x0d
     eea:	7e 85       	ldd	r23, Y+14	; 0x0e
     eec:	8f 85       	ldd	r24, Y+15	; 0x0f
     eee:	98 89       	ldd	r25, Y+16	; 0x10
     ef0:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
     ef4:	dc 01       	movw	r26, r24
     ef6:	cb 01       	movw	r24, r22
     ef8:	f8 01       	movw	r30, r16
     efa:	80 83       	st	Z, r24
     efc:	91 83       	std	Z+1, r25	; 0x01
     efe:	a2 83       	std	Z+2, r26	; 0x02
     f00:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     f02:	ce 01       	movw	r24, r28
     f04:	87 5f       	subi	r24, 0xF7	; 247
     f06:	9d 4f       	sbci	r25, 0xFD	; 253
     f08:	20 e0       	ldi	r18, 0x00	; 0
     f0a:	30 e0       	ldi	r19, 0x00	; 0
     f0c:	40 e8       	ldi	r20, 0x80	; 128
     f0e:	5f e3       	ldi	r21, 0x3F	; 63
     f10:	fc 01       	movw	r30, r24
     f12:	60 81       	ld	r22, Z
     f14:	71 81       	ldd	r23, Z+1	; 0x01
     f16:	82 81       	ldd	r24, Z+2	; 0x02
     f18:	93 81       	ldd	r25, Z+3	; 0x03
     f1a:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
     f1e:	88 23       	and	r24, r24
     f20:	4c f4       	brge	.+18     	; 0xf34 <play_somthin_booy+0x4f4>
		__ticks = 1;
     f22:	ce 01       	movw	r24, r28
     f24:	83 5f       	subi	r24, 0xF3	; 243
     f26:	9d 4f       	sbci	r25, 0xFD	; 253
     f28:	21 e0       	ldi	r18, 0x01	; 1
     f2a:	30 e0       	ldi	r19, 0x00	; 0
     f2c:	fc 01       	movw	r30, r24
     f2e:	31 83       	std	Z+1, r19	; 0x01
     f30:	20 83       	st	Z, r18
     f32:	69 c0       	rjmp	.+210    	; 0x1006 <play_somthin_booy+0x5c6>
	else if (__tmp > 65535)
     f34:	ce 01       	movw	r24, r28
     f36:	87 5f       	subi	r24, 0xF7	; 247
     f38:	9d 4f       	sbci	r25, 0xFD	; 253
     f3a:	20 e0       	ldi	r18, 0x00	; 0
     f3c:	3f ef       	ldi	r19, 0xFF	; 255
     f3e:	4f e7       	ldi	r20, 0x7F	; 127
     f40:	57 e4       	ldi	r21, 0x47	; 71
     f42:	fc 01       	movw	r30, r24
     f44:	60 81       	ld	r22, Z
     f46:	71 81       	ldd	r23, Z+1	; 0x01
     f48:	82 81       	ldd	r24, Z+2	; 0x02
     f4a:	93 81       	ldd	r25, Z+3	; 0x03
     f4c:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
     f50:	18 16       	cp	r1, r24
     f52:	0c f0       	brlt	.+2      	; 0xf56 <play_somthin_booy+0x516>
     f54:	46 c0       	rjmp	.+140    	; 0xfe2 <play_somthin_booy+0x5a2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f56:	20 e0       	ldi	r18, 0x00	; 0
     f58:	30 e0       	ldi	r19, 0x00	; 0
     f5a:	40 e2       	ldi	r20, 0x20	; 32
     f5c:	51 e4       	ldi	r21, 0x41	; 65
     f5e:	6d 85       	ldd	r22, Y+13	; 0x0d
     f60:	7e 85       	ldd	r23, Y+14	; 0x0e
     f62:	8f 85       	ldd	r24, Y+15	; 0x0f
     f64:	98 89       	ldd	r25, Y+16	; 0x10
     f66:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
     f6a:	dc 01       	movw	r26, r24
     f6c:	cb 01       	movw	r24, r22
     f6e:	8e 01       	movw	r16, r28
     f70:	03 5f       	subi	r16, 0xF3	; 243
     f72:	1d 4f       	sbci	r17, 0xFD	; 253
     f74:	bc 01       	movw	r22, r24
     f76:	cd 01       	movw	r24, r26
     f78:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
     f7c:	dc 01       	movw	r26, r24
     f7e:	cb 01       	movw	r24, r22
     f80:	f8 01       	movw	r30, r16
     f82:	91 83       	std	Z+1, r25	; 0x01
     f84:	80 83       	st	Z, r24
     f86:	24 c0       	rjmp	.+72     	; 0xfd0 <play_somthin_booy+0x590>
     f88:	ce 01       	movw	r24, r28
     f8a:	81 5f       	subi	r24, 0xF1	; 241
     f8c:	9d 4f       	sbci	r25, 0xFD	; 253
     f8e:	20 e9       	ldi	r18, 0x90	; 144
     f90:	31 e0       	ldi	r19, 0x01	; 1
     f92:	fc 01       	movw	r30, r24
     f94:	31 83       	std	Z+1, r19	; 0x01
     f96:	20 83       	st	Z, r18
     f98:	ce 01       	movw	r24, r28
     f9a:	81 5f       	subi	r24, 0xF1	; 241
     f9c:	9d 4f       	sbci	r25, 0xFD	; 253
     f9e:	fc 01       	movw	r30, r24
     fa0:	80 81       	ld	r24, Z
     fa2:	91 81       	ldd	r25, Z+1	; 0x01
     fa4:	01 97       	sbiw	r24, 0x01	; 1
     fa6:	f1 f7       	brne	.-4      	; 0xfa4 <play_somthin_booy+0x564>
     fa8:	9e 01       	movw	r18, r28
     faa:	21 5f       	subi	r18, 0xF1	; 241
     fac:	3d 4f       	sbci	r19, 0xFD	; 253
     fae:	f9 01       	movw	r30, r18
     fb0:	91 83       	std	Z+1, r25	; 0x01
     fb2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fb4:	ce 01       	movw	r24, r28
     fb6:	83 5f       	subi	r24, 0xF3	; 243
     fb8:	9d 4f       	sbci	r25, 0xFD	; 253
     fba:	9e 01       	movw	r18, r28
     fbc:	23 5f       	subi	r18, 0xF3	; 243
     fbe:	3d 4f       	sbci	r19, 0xFD	; 253
     fc0:	f9 01       	movw	r30, r18
     fc2:	20 81       	ld	r18, Z
     fc4:	31 81       	ldd	r19, Z+1	; 0x01
     fc6:	21 50       	subi	r18, 0x01	; 1
     fc8:	31 09       	sbc	r19, r1
     fca:	fc 01       	movw	r30, r24
     fcc:	31 83       	std	Z+1, r19	; 0x01
     fce:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fd0:	ce 01       	movw	r24, r28
     fd2:	83 5f       	subi	r24, 0xF3	; 243
     fd4:	9d 4f       	sbci	r25, 0xFD	; 253
     fd6:	fc 01       	movw	r30, r24
     fd8:	80 81       	ld	r24, Z
     fda:	91 81       	ldd	r25, Z+1	; 0x01
     fdc:	89 2b       	or	r24, r25
     fde:	a1 f6       	brne	.-88     	; 0xf88 <play_somthin_booy+0x548>
     fe0:	2c c0       	rjmp	.+88     	; 0x103a <play_somthin_booy+0x5fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fe2:	8e 01       	movw	r16, r28
     fe4:	03 5f       	subi	r16, 0xF3	; 243
     fe6:	1d 4f       	sbci	r17, 0xFD	; 253
     fe8:	ce 01       	movw	r24, r28
     fea:	87 5f       	subi	r24, 0xF7	; 247
     fec:	9d 4f       	sbci	r25, 0xFD	; 253
     fee:	fc 01       	movw	r30, r24
     ff0:	60 81       	ld	r22, Z
     ff2:	71 81       	ldd	r23, Z+1	; 0x01
     ff4:	82 81       	ldd	r24, Z+2	; 0x02
     ff6:	93 81       	ldd	r25, Z+3	; 0x03
     ff8:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
     ffc:	dc 01       	movw	r26, r24
     ffe:	cb 01       	movw	r24, r22
    1000:	f8 01       	movw	r30, r16
    1002:	91 83       	std	Z+1, r25	; 0x01
    1004:	80 83       	st	Z, r24
    1006:	ce 01       	movw	r24, r28
    1008:	8f 5e       	subi	r24, 0xEF	; 239
    100a:	9d 4f       	sbci	r25, 0xFD	; 253
    100c:	9e 01       	movw	r18, r28
    100e:	23 5f       	subi	r18, 0xF3	; 243
    1010:	3d 4f       	sbci	r19, 0xFD	; 253
    1012:	f9 01       	movw	r30, r18
    1014:	20 81       	ld	r18, Z
    1016:	31 81       	ldd	r19, Z+1	; 0x01
    1018:	fc 01       	movw	r30, r24
    101a:	31 83       	std	Z+1, r19	; 0x01
    101c:	20 83       	st	Z, r18
    101e:	ce 01       	movw	r24, r28
    1020:	8f 5e       	subi	r24, 0xEF	; 239
    1022:	9d 4f       	sbci	r25, 0xFD	; 253
    1024:	fc 01       	movw	r30, r24
    1026:	80 81       	ld	r24, Z
    1028:	91 81       	ldd	r25, Z+1	; 0x01
    102a:	01 97       	sbiw	r24, 0x01	; 1
    102c:	f1 f7       	brne	.-4      	; 0x102a <play_somthin_booy+0x5ea>
    102e:	9e 01       	movw	r18, r28
    1030:	2f 5e       	subi	r18, 0xEF	; 239
    1032:	3d 4f       	sbci	r19, 0xFD	; 253
    1034:	f9 01       	movw	r30, r18
    1036:	91 83       	std	Z+1, r25	; 0x01
    1038:	80 83       	st	Z, r24
	_delay_ms(100);
	to_uARM("M2210 F660 T100\n");
    103a:	87 ec       	ldi	r24, 0xC7	; 199
    103c:	91 e0       	ldi	r25, 0x01	; 1
    103e:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    1042:	80 e0       	ldi	r24, 0x00	; 0
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	a6 e9       	ldi	r26, 0x96	; 150
    1048:	b3 e4       	ldi	r27, 0x43	; 67
    104a:	89 8b       	std	Y+17, r24	; 0x11
    104c:	9a 8b       	std	Y+18, r25	; 0x12
    104e:	ab 8b       	std	Y+19, r26	; 0x13
    1050:	bc 8b       	std	Y+20, r27	; 0x14

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1052:	8e 01       	movw	r16, r28
    1054:	01 50       	subi	r16, 0x01	; 1
    1056:	1e 4f       	sbci	r17, 0xFE	; 254
    1058:	20 e0       	ldi	r18, 0x00	; 0
    105a:	30 e0       	ldi	r19, 0x00	; 0
    105c:	4a e7       	ldi	r20, 0x7A	; 122
    105e:	55 e4       	ldi	r21, 0x45	; 69
    1060:	69 89       	ldd	r22, Y+17	; 0x11
    1062:	7a 89       	ldd	r23, Y+18	; 0x12
    1064:	8b 89       	ldd	r24, Y+19	; 0x13
    1066:	9c 89       	ldd	r25, Y+20	; 0x14
    1068:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    106c:	dc 01       	movw	r26, r24
    106e:	cb 01       	movw	r24, r22
    1070:	f8 01       	movw	r30, r16
    1072:	80 83       	st	Z, r24
    1074:	91 83       	std	Z+1, r25	; 0x01
    1076:	a2 83       	std	Z+2, r26	; 0x02
    1078:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    107a:	ce 01       	movw	r24, r28
    107c:	81 50       	subi	r24, 0x01	; 1
    107e:	9e 4f       	sbci	r25, 0xFE	; 254
    1080:	20 e0       	ldi	r18, 0x00	; 0
    1082:	30 e0       	ldi	r19, 0x00	; 0
    1084:	40 e8       	ldi	r20, 0x80	; 128
    1086:	5f e3       	ldi	r21, 0x3F	; 63
    1088:	fc 01       	movw	r30, r24
    108a:	60 81       	ld	r22, Z
    108c:	71 81       	ldd	r23, Z+1	; 0x01
    108e:	82 81       	ldd	r24, Z+2	; 0x02
    1090:	93 81       	ldd	r25, Z+3	; 0x03
    1092:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    1096:	88 23       	and	r24, r24
    1098:	4c f4       	brge	.+18     	; 0x10ac <play_somthin_booy+0x66c>
		__ticks = 1;
    109a:	ce 01       	movw	r24, r28
    109c:	8d 5f       	subi	r24, 0xFD	; 253
    109e:	9d 4f       	sbci	r25, 0xFD	; 253
    10a0:	21 e0       	ldi	r18, 0x01	; 1
    10a2:	30 e0       	ldi	r19, 0x00	; 0
    10a4:	fc 01       	movw	r30, r24
    10a6:	31 83       	std	Z+1, r19	; 0x01
    10a8:	20 83       	st	Z, r18
    10aa:	69 c0       	rjmp	.+210    	; 0x117e <__stack+0x7f>
	else if (__tmp > 65535)
    10ac:	ce 01       	movw	r24, r28
    10ae:	81 50       	subi	r24, 0x01	; 1
    10b0:	9e 4f       	sbci	r25, 0xFE	; 254
    10b2:	20 e0       	ldi	r18, 0x00	; 0
    10b4:	3f ef       	ldi	r19, 0xFF	; 255
    10b6:	4f e7       	ldi	r20, 0x7F	; 127
    10b8:	57 e4       	ldi	r21, 0x47	; 71
    10ba:	fc 01       	movw	r30, r24
    10bc:	60 81       	ld	r22, Z
    10be:	71 81       	ldd	r23, Z+1	; 0x01
    10c0:	82 81       	ldd	r24, Z+2	; 0x02
    10c2:	93 81       	ldd	r25, Z+3	; 0x03
    10c4:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    10c8:	18 16       	cp	r1, r24
    10ca:	0c f0       	brlt	.+2      	; 0x10ce <play_somthin_booy+0x68e>
    10cc:	46 c0       	rjmp	.+140    	; 0x115a <__stack+0x5b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    10ce:	20 e0       	ldi	r18, 0x00	; 0
    10d0:	30 e0       	ldi	r19, 0x00	; 0
    10d2:	40 e2       	ldi	r20, 0x20	; 32
    10d4:	51 e4       	ldi	r21, 0x41	; 65
    10d6:	69 89       	ldd	r22, Y+17	; 0x11
    10d8:	7a 89       	ldd	r23, Y+18	; 0x12
    10da:	8b 89       	ldd	r24, Y+19	; 0x13
    10dc:	9c 89       	ldd	r25, Y+20	; 0x14
    10de:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    10e2:	dc 01       	movw	r26, r24
    10e4:	cb 01       	movw	r24, r22
    10e6:	8e 01       	movw	r16, r28
    10e8:	0d 5f       	subi	r16, 0xFD	; 253
    10ea:	1d 4f       	sbci	r17, 0xFD	; 253
    10ec:	bc 01       	movw	r22, r24
    10ee:	cd 01       	movw	r24, r26
    10f0:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    10f4:	dc 01       	movw	r26, r24
    10f6:	cb 01       	movw	r24, r22
    10f8:	f8 01       	movw	r30, r16
    10fa:	91 83       	std	Z+1, r25	; 0x01
    10fc:	80 83       	st	Z, r24
    10fe:	24 c0       	rjmp	.+72     	; 0x1148 <__stack+0x49>
    1100:	ce 01       	movw	r24, r28
    1102:	8b 5f       	subi	r24, 0xFB	; 251
    1104:	9d 4f       	sbci	r25, 0xFD	; 253
    1106:	20 e9       	ldi	r18, 0x90	; 144
    1108:	31 e0       	ldi	r19, 0x01	; 1
    110a:	fc 01       	movw	r30, r24
    110c:	31 83       	std	Z+1, r19	; 0x01
    110e:	20 83       	st	Z, r18
    1110:	ce 01       	movw	r24, r28
    1112:	8b 5f       	subi	r24, 0xFB	; 251
    1114:	9d 4f       	sbci	r25, 0xFD	; 253
    1116:	fc 01       	movw	r30, r24
    1118:	80 81       	ld	r24, Z
    111a:	91 81       	ldd	r25, Z+1	; 0x01
    111c:	01 97       	sbiw	r24, 0x01	; 1
    111e:	f1 f7       	brne	.-4      	; 0x111c <__stack+0x1d>
    1120:	9e 01       	movw	r18, r28
    1122:	2b 5f       	subi	r18, 0xFB	; 251
    1124:	3d 4f       	sbci	r19, 0xFD	; 253
    1126:	f9 01       	movw	r30, r18
    1128:	91 83       	std	Z+1, r25	; 0x01
    112a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    112c:	ce 01       	movw	r24, r28
    112e:	8d 5f       	subi	r24, 0xFD	; 253
    1130:	9d 4f       	sbci	r25, 0xFD	; 253
    1132:	9e 01       	movw	r18, r28
    1134:	2d 5f       	subi	r18, 0xFD	; 253
    1136:	3d 4f       	sbci	r19, 0xFD	; 253
    1138:	f9 01       	movw	r30, r18
    113a:	20 81       	ld	r18, Z
    113c:	31 81       	ldd	r19, Z+1	; 0x01
    113e:	21 50       	subi	r18, 0x01	; 1
    1140:	31 09       	sbc	r19, r1
    1142:	fc 01       	movw	r30, r24
    1144:	31 83       	std	Z+1, r19	; 0x01
    1146:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1148:	ce 01       	movw	r24, r28
    114a:	8d 5f       	subi	r24, 0xFD	; 253
    114c:	9d 4f       	sbci	r25, 0xFD	; 253
    114e:	fc 01       	movw	r30, r24
    1150:	80 81       	ld	r24, Z
    1152:	91 81       	ldd	r25, Z+1	; 0x01
    1154:	89 2b       	or	r24, r25
    1156:	a1 f6       	brne	.-88     	; 0x1100 <__stack+0x1>
    1158:	2c c0       	rjmp	.+88     	; 0x11b2 <__stack+0xb3>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    115a:	8e 01       	movw	r16, r28
    115c:	0d 5f       	subi	r16, 0xFD	; 253
    115e:	1d 4f       	sbci	r17, 0xFD	; 253
    1160:	ce 01       	movw	r24, r28
    1162:	81 50       	subi	r24, 0x01	; 1
    1164:	9e 4f       	sbci	r25, 0xFE	; 254
    1166:	fc 01       	movw	r30, r24
    1168:	60 81       	ld	r22, Z
    116a:	71 81       	ldd	r23, Z+1	; 0x01
    116c:	82 81       	ldd	r24, Z+2	; 0x02
    116e:	93 81       	ldd	r25, Z+3	; 0x03
    1170:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    1174:	dc 01       	movw	r26, r24
    1176:	cb 01       	movw	r24, r22
    1178:	f8 01       	movw	r30, r16
    117a:	91 83       	std	Z+1, r25	; 0x01
    117c:	80 83       	st	Z, r24
    117e:	ce 01       	movw	r24, r28
    1180:	89 5f       	subi	r24, 0xF9	; 249
    1182:	9d 4f       	sbci	r25, 0xFD	; 253
    1184:	9e 01       	movw	r18, r28
    1186:	2d 5f       	subi	r18, 0xFD	; 253
    1188:	3d 4f       	sbci	r19, 0xFD	; 253
    118a:	f9 01       	movw	r30, r18
    118c:	20 81       	ld	r18, Z
    118e:	31 81       	ldd	r19, Z+1	; 0x01
    1190:	fc 01       	movw	r30, r24
    1192:	31 83       	std	Z+1, r19	; 0x01
    1194:	20 83       	st	Z, r18
    1196:	ce 01       	movw	r24, r28
    1198:	89 5f       	subi	r24, 0xF9	; 249
    119a:	9d 4f       	sbci	r25, 0xFD	; 253
    119c:	fc 01       	movw	r30, r24
    119e:	80 81       	ld	r24, Z
    11a0:	91 81       	ldd	r25, Z+1	; 0x01
    11a2:	01 97       	sbiw	r24, 0x01	; 1
    11a4:	f1 f7       	brne	.-4      	; 0x11a2 <__stack+0xa3>
    11a6:	9e 01       	movw	r18, r28
    11a8:	29 5f       	subi	r18, 0xF9	; 249
    11aa:	3d 4f       	sbci	r19, 0xFD	; 253
    11ac:	f9 01       	movw	r30, r18
    11ae:	91 83       	std	Z+1, r25	; 0x01
    11b0:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F770 T100\n");
    11b2:	89 ee       	ldi	r24, 0xE9	; 233
    11b4:	91 e0       	ldi	r25, 0x01	; 1
    11b6:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    11ba:	80 e0       	ldi	r24, 0x00	; 0
    11bc:	90 e8       	ldi	r25, 0x80	; 128
    11be:	a9 e0       	ldi	r26, 0x09	; 9
    11c0:	b4 e4       	ldi	r27, 0x44	; 68
    11c2:	8d 8b       	std	Y+21, r24	; 0x15
    11c4:	9e 8b       	std	Y+22, r25	; 0x16
    11c6:	af 8b       	std	Y+23, r26	; 0x17
    11c8:	b8 8f       	std	Y+24, r27	; 0x18

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    11ca:	8e 01       	movw	r16, r28
    11cc:	0b 50       	subi	r16, 0x0B	; 11
    11ce:	1e 4f       	sbci	r17, 0xFE	; 254
    11d0:	20 e0       	ldi	r18, 0x00	; 0
    11d2:	30 e0       	ldi	r19, 0x00	; 0
    11d4:	4a e7       	ldi	r20, 0x7A	; 122
    11d6:	55 e4       	ldi	r21, 0x45	; 69
    11d8:	6d 89       	ldd	r22, Y+21	; 0x15
    11da:	7e 89       	ldd	r23, Y+22	; 0x16
    11dc:	8f 89       	ldd	r24, Y+23	; 0x17
    11de:	98 8d       	ldd	r25, Y+24	; 0x18
    11e0:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    11e4:	dc 01       	movw	r26, r24
    11e6:	cb 01       	movw	r24, r22
    11e8:	f8 01       	movw	r30, r16
    11ea:	80 83       	st	Z, r24
    11ec:	91 83       	std	Z+1, r25	; 0x01
    11ee:	a2 83       	std	Z+2, r26	; 0x02
    11f0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    11f2:	ce 01       	movw	r24, r28
    11f4:	8b 50       	subi	r24, 0x0B	; 11
    11f6:	9e 4f       	sbci	r25, 0xFE	; 254
    11f8:	20 e0       	ldi	r18, 0x00	; 0
    11fa:	30 e0       	ldi	r19, 0x00	; 0
    11fc:	40 e8       	ldi	r20, 0x80	; 128
    11fe:	5f e3       	ldi	r21, 0x3F	; 63
    1200:	fc 01       	movw	r30, r24
    1202:	60 81       	ld	r22, Z
    1204:	71 81       	ldd	r23, Z+1	; 0x01
    1206:	82 81       	ldd	r24, Z+2	; 0x02
    1208:	93 81       	ldd	r25, Z+3	; 0x03
    120a:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    120e:	88 23       	and	r24, r24
    1210:	4c f4       	brge	.+18     	; 0x1224 <__stack+0x125>
		__ticks = 1;
    1212:	ce 01       	movw	r24, r28
    1214:	87 50       	subi	r24, 0x07	; 7
    1216:	9e 4f       	sbci	r25, 0xFE	; 254
    1218:	21 e0       	ldi	r18, 0x01	; 1
    121a:	30 e0       	ldi	r19, 0x00	; 0
    121c:	fc 01       	movw	r30, r24
    121e:	31 83       	std	Z+1, r19	; 0x01
    1220:	20 83       	st	Z, r18
    1222:	69 c0       	rjmp	.+210    	; 0x12f6 <__stack+0x1f7>
	else if (__tmp > 65535)
    1224:	ce 01       	movw	r24, r28
    1226:	8b 50       	subi	r24, 0x0B	; 11
    1228:	9e 4f       	sbci	r25, 0xFE	; 254
    122a:	20 e0       	ldi	r18, 0x00	; 0
    122c:	3f ef       	ldi	r19, 0xFF	; 255
    122e:	4f e7       	ldi	r20, 0x7F	; 127
    1230:	57 e4       	ldi	r21, 0x47	; 71
    1232:	fc 01       	movw	r30, r24
    1234:	60 81       	ld	r22, Z
    1236:	71 81       	ldd	r23, Z+1	; 0x01
    1238:	82 81       	ldd	r24, Z+2	; 0x02
    123a:	93 81       	ldd	r25, Z+3	; 0x03
    123c:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    1240:	18 16       	cp	r1, r24
    1242:	0c f0       	brlt	.+2      	; 0x1246 <__stack+0x147>
    1244:	46 c0       	rjmp	.+140    	; 0x12d2 <__stack+0x1d3>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1246:	20 e0       	ldi	r18, 0x00	; 0
    1248:	30 e0       	ldi	r19, 0x00	; 0
    124a:	40 e2       	ldi	r20, 0x20	; 32
    124c:	51 e4       	ldi	r21, 0x41	; 65
    124e:	6d 89       	ldd	r22, Y+21	; 0x15
    1250:	7e 89       	ldd	r23, Y+22	; 0x16
    1252:	8f 89       	ldd	r24, Y+23	; 0x17
    1254:	98 8d       	ldd	r25, Y+24	; 0x18
    1256:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    125a:	dc 01       	movw	r26, r24
    125c:	cb 01       	movw	r24, r22
    125e:	8e 01       	movw	r16, r28
    1260:	07 50       	subi	r16, 0x07	; 7
    1262:	1e 4f       	sbci	r17, 0xFE	; 254
    1264:	bc 01       	movw	r22, r24
    1266:	cd 01       	movw	r24, r26
    1268:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    126c:	dc 01       	movw	r26, r24
    126e:	cb 01       	movw	r24, r22
    1270:	f8 01       	movw	r30, r16
    1272:	91 83       	std	Z+1, r25	; 0x01
    1274:	80 83       	st	Z, r24
    1276:	24 c0       	rjmp	.+72     	; 0x12c0 <__stack+0x1c1>
    1278:	ce 01       	movw	r24, r28
    127a:	85 50       	subi	r24, 0x05	; 5
    127c:	9e 4f       	sbci	r25, 0xFE	; 254
    127e:	20 e9       	ldi	r18, 0x90	; 144
    1280:	31 e0       	ldi	r19, 0x01	; 1
    1282:	fc 01       	movw	r30, r24
    1284:	31 83       	std	Z+1, r19	; 0x01
    1286:	20 83       	st	Z, r18
    1288:	ce 01       	movw	r24, r28
    128a:	85 50       	subi	r24, 0x05	; 5
    128c:	9e 4f       	sbci	r25, 0xFE	; 254
    128e:	fc 01       	movw	r30, r24
    1290:	80 81       	ld	r24, Z
    1292:	91 81       	ldd	r25, Z+1	; 0x01
    1294:	01 97       	sbiw	r24, 0x01	; 1
    1296:	f1 f7       	brne	.-4      	; 0x1294 <__stack+0x195>
    1298:	9e 01       	movw	r18, r28
    129a:	25 50       	subi	r18, 0x05	; 5
    129c:	3e 4f       	sbci	r19, 0xFE	; 254
    129e:	f9 01       	movw	r30, r18
    12a0:	91 83       	std	Z+1, r25	; 0x01
    12a2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12a4:	ce 01       	movw	r24, r28
    12a6:	87 50       	subi	r24, 0x07	; 7
    12a8:	9e 4f       	sbci	r25, 0xFE	; 254
    12aa:	9e 01       	movw	r18, r28
    12ac:	27 50       	subi	r18, 0x07	; 7
    12ae:	3e 4f       	sbci	r19, 0xFE	; 254
    12b0:	f9 01       	movw	r30, r18
    12b2:	20 81       	ld	r18, Z
    12b4:	31 81       	ldd	r19, Z+1	; 0x01
    12b6:	21 50       	subi	r18, 0x01	; 1
    12b8:	31 09       	sbc	r19, r1
    12ba:	fc 01       	movw	r30, r24
    12bc:	31 83       	std	Z+1, r19	; 0x01
    12be:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12c0:	ce 01       	movw	r24, r28
    12c2:	87 50       	subi	r24, 0x07	; 7
    12c4:	9e 4f       	sbci	r25, 0xFE	; 254
    12c6:	fc 01       	movw	r30, r24
    12c8:	80 81       	ld	r24, Z
    12ca:	91 81       	ldd	r25, Z+1	; 0x01
    12cc:	89 2b       	or	r24, r25
    12ce:	a1 f6       	brne	.-88     	; 0x1278 <__stack+0x179>
    12d0:	2c c0       	rjmp	.+88     	; 0x132a <__stack+0x22b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12d2:	8e 01       	movw	r16, r28
    12d4:	07 50       	subi	r16, 0x07	; 7
    12d6:	1e 4f       	sbci	r17, 0xFE	; 254
    12d8:	ce 01       	movw	r24, r28
    12da:	8b 50       	subi	r24, 0x0B	; 11
    12dc:	9e 4f       	sbci	r25, 0xFE	; 254
    12de:	fc 01       	movw	r30, r24
    12e0:	60 81       	ld	r22, Z
    12e2:	71 81       	ldd	r23, Z+1	; 0x01
    12e4:	82 81       	ldd	r24, Z+2	; 0x02
    12e6:	93 81       	ldd	r25, Z+3	; 0x03
    12e8:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    12ec:	dc 01       	movw	r26, r24
    12ee:	cb 01       	movw	r24, r22
    12f0:	f8 01       	movw	r30, r16
    12f2:	91 83       	std	Z+1, r25	; 0x01
    12f4:	80 83       	st	Z, r24
    12f6:	ce 01       	movw	r24, r28
    12f8:	83 50       	subi	r24, 0x03	; 3
    12fa:	9e 4f       	sbci	r25, 0xFE	; 254
    12fc:	9e 01       	movw	r18, r28
    12fe:	27 50       	subi	r18, 0x07	; 7
    1300:	3e 4f       	sbci	r19, 0xFE	; 254
    1302:	f9 01       	movw	r30, r18
    1304:	20 81       	ld	r18, Z
    1306:	31 81       	ldd	r19, Z+1	; 0x01
    1308:	fc 01       	movw	r30, r24
    130a:	31 83       	std	Z+1, r19	; 0x01
    130c:	20 83       	st	Z, r18
    130e:	ce 01       	movw	r24, r28
    1310:	83 50       	subi	r24, 0x03	; 3
    1312:	9e 4f       	sbci	r25, 0xFE	; 254
    1314:	fc 01       	movw	r30, r24
    1316:	80 81       	ld	r24, Z
    1318:	91 81       	ldd	r25, Z+1	; 0x01
    131a:	01 97       	sbiw	r24, 0x01	; 1
    131c:	f1 f7       	brne	.-4      	; 0x131a <__stack+0x21b>
    131e:	9e 01       	movw	r18, r28
    1320:	23 50       	subi	r18, 0x03	; 3
    1322:	3e 4f       	sbci	r19, 0xFE	; 254
    1324:	f9 01       	movw	r30, r18
    1326:	91 83       	std	Z+1, r25	; 0x01
    1328:	80 83       	st	Z, r24
	_delay_ms(550);
	to_uARM("M2210 F380 T100\n");
    132a:	8a ef       	ldi	r24, 0xFA	; 250
    132c:	91 e0       	ldi	r25, 0x01	; 1
    132e:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    1332:	80 e0       	ldi	r24, 0x00	; 0
    1334:	90 ec       	ldi	r25, 0xC0	; 192
    1336:	af e0       	ldi	r26, 0x0F	; 15
    1338:	b4 e4       	ldi	r27, 0x44	; 68
    133a:	89 8f       	std	Y+25, r24	; 0x19
    133c:	9a 8f       	std	Y+26, r25	; 0x1a
    133e:	ab 8f       	std	Y+27, r26	; 0x1b
    1340:	bc 8f       	std	Y+28, r27	; 0x1c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1342:	8e 01       	movw	r16, r28
    1344:	05 51       	subi	r16, 0x15	; 21
    1346:	1e 4f       	sbci	r17, 0xFE	; 254
    1348:	20 e0       	ldi	r18, 0x00	; 0
    134a:	30 e0       	ldi	r19, 0x00	; 0
    134c:	4a e7       	ldi	r20, 0x7A	; 122
    134e:	55 e4       	ldi	r21, 0x45	; 69
    1350:	69 8d       	ldd	r22, Y+25	; 0x19
    1352:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1354:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1356:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1358:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    135c:	dc 01       	movw	r26, r24
    135e:	cb 01       	movw	r24, r22
    1360:	f8 01       	movw	r30, r16
    1362:	80 83       	st	Z, r24
    1364:	91 83       	std	Z+1, r25	; 0x01
    1366:	a2 83       	std	Z+2, r26	; 0x02
    1368:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    136a:	ce 01       	movw	r24, r28
    136c:	85 51       	subi	r24, 0x15	; 21
    136e:	9e 4f       	sbci	r25, 0xFE	; 254
    1370:	20 e0       	ldi	r18, 0x00	; 0
    1372:	30 e0       	ldi	r19, 0x00	; 0
    1374:	40 e8       	ldi	r20, 0x80	; 128
    1376:	5f e3       	ldi	r21, 0x3F	; 63
    1378:	fc 01       	movw	r30, r24
    137a:	60 81       	ld	r22, Z
    137c:	71 81       	ldd	r23, Z+1	; 0x01
    137e:	82 81       	ldd	r24, Z+2	; 0x02
    1380:	93 81       	ldd	r25, Z+3	; 0x03
    1382:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    1386:	88 23       	and	r24, r24
    1388:	4c f4       	brge	.+18     	; 0x139c <__stack+0x29d>
		__ticks = 1;
    138a:	ce 01       	movw	r24, r28
    138c:	81 51       	subi	r24, 0x11	; 17
    138e:	9e 4f       	sbci	r25, 0xFE	; 254
    1390:	21 e0       	ldi	r18, 0x01	; 1
    1392:	30 e0       	ldi	r19, 0x00	; 0
    1394:	fc 01       	movw	r30, r24
    1396:	31 83       	std	Z+1, r19	; 0x01
    1398:	20 83       	st	Z, r18
    139a:	69 c0       	rjmp	.+210    	; 0x146e <__stack+0x36f>
	else if (__tmp > 65535)
    139c:	ce 01       	movw	r24, r28
    139e:	85 51       	subi	r24, 0x15	; 21
    13a0:	9e 4f       	sbci	r25, 0xFE	; 254
    13a2:	20 e0       	ldi	r18, 0x00	; 0
    13a4:	3f ef       	ldi	r19, 0xFF	; 255
    13a6:	4f e7       	ldi	r20, 0x7F	; 127
    13a8:	57 e4       	ldi	r21, 0x47	; 71
    13aa:	fc 01       	movw	r30, r24
    13ac:	60 81       	ld	r22, Z
    13ae:	71 81       	ldd	r23, Z+1	; 0x01
    13b0:	82 81       	ldd	r24, Z+2	; 0x02
    13b2:	93 81       	ldd	r25, Z+3	; 0x03
    13b4:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    13b8:	18 16       	cp	r1, r24
    13ba:	0c f0       	brlt	.+2      	; 0x13be <__stack+0x2bf>
    13bc:	46 c0       	rjmp	.+140    	; 0x144a <__stack+0x34b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13be:	20 e0       	ldi	r18, 0x00	; 0
    13c0:	30 e0       	ldi	r19, 0x00	; 0
    13c2:	40 e2       	ldi	r20, 0x20	; 32
    13c4:	51 e4       	ldi	r21, 0x41	; 65
    13c6:	69 8d       	ldd	r22, Y+25	; 0x19
    13c8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    13ca:	8b 8d       	ldd	r24, Y+27	; 0x1b
    13cc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    13ce:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    13d2:	dc 01       	movw	r26, r24
    13d4:	cb 01       	movw	r24, r22
    13d6:	8e 01       	movw	r16, r28
    13d8:	01 51       	subi	r16, 0x11	; 17
    13da:	1e 4f       	sbci	r17, 0xFE	; 254
    13dc:	bc 01       	movw	r22, r24
    13de:	cd 01       	movw	r24, r26
    13e0:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    13e4:	dc 01       	movw	r26, r24
    13e6:	cb 01       	movw	r24, r22
    13e8:	f8 01       	movw	r30, r16
    13ea:	91 83       	std	Z+1, r25	; 0x01
    13ec:	80 83       	st	Z, r24
    13ee:	24 c0       	rjmp	.+72     	; 0x1438 <__stack+0x339>
    13f0:	ce 01       	movw	r24, r28
    13f2:	8f 50       	subi	r24, 0x0F	; 15
    13f4:	9e 4f       	sbci	r25, 0xFE	; 254
    13f6:	20 e9       	ldi	r18, 0x90	; 144
    13f8:	31 e0       	ldi	r19, 0x01	; 1
    13fa:	fc 01       	movw	r30, r24
    13fc:	31 83       	std	Z+1, r19	; 0x01
    13fe:	20 83       	st	Z, r18
    1400:	ce 01       	movw	r24, r28
    1402:	8f 50       	subi	r24, 0x0F	; 15
    1404:	9e 4f       	sbci	r25, 0xFE	; 254
    1406:	fc 01       	movw	r30, r24
    1408:	80 81       	ld	r24, Z
    140a:	91 81       	ldd	r25, Z+1	; 0x01
    140c:	01 97       	sbiw	r24, 0x01	; 1
    140e:	f1 f7       	brne	.-4      	; 0x140c <__stack+0x30d>
    1410:	9e 01       	movw	r18, r28
    1412:	2f 50       	subi	r18, 0x0F	; 15
    1414:	3e 4f       	sbci	r19, 0xFE	; 254
    1416:	f9 01       	movw	r30, r18
    1418:	91 83       	std	Z+1, r25	; 0x01
    141a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    141c:	ce 01       	movw	r24, r28
    141e:	81 51       	subi	r24, 0x11	; 17
    1420:	9e 4f       	sbci	r25, 0xFE	; 254
    1422:	9e 01       	movw	r18, r28
    1424:	21 51       	subi	r18, 0x11	; 17
    1426:	3e 4f       	sbci	r19, 0xFE	; 254
    1428:	f9 01       	movw	r30, r18
    142a:	20 81       	ld	r18, Z
    142c:	31 81       	ldd	r19, Z+1	; 0x01
    142e:	21 50       	subi	r18, 0x01	; 1
    1430:	31 09       	sbc	r19, r1
    1432:	fc 01       	movw	r30, r24
    1434:	31 83       	std	Z+1, r19	; 0x01
    1436:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1438:	ce 01       	movw	r24, r28
    143a:	81 51       	subi	r24, 0x11	; 17
    143c:	9e 4f       	sbci	r25, 0xFE	; 254
    143e:	fc 01       	movw	r30, r24
    1440:	80 81       	ld	r24, Z
    1442:	91 81       	ldd	r25, Z+1	; 0x01
    1444:	89 2b       	or	r24, r25
    1446:	a1 f6       	brne	.-88     	; 0x13f0 <__stack+0x2f1>
    1448:	2c c0       	rjmp	.+88     	; 0x14a2 <__stack+0x3a3>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    144a:	8e 01       	movw	r16, r28
    144c:	01 51       	subi	r16, 0x11	; 17
    144e:	1e 4f       	sbci	r17, 0xFE	; 254
    1450:	ce 01       	movw	r24, r28
    1452:	85 51       	subi	r24, 0x15	; 21
    1454:	9e 4f       	sbci	r25, 0xFE	; 254
    1456:	fc 01       	movw	r30, r24
    1458:	60 81       	ld	r22, Z
    145a:	71 81       	ldd	r23, Z+1	; 0x01
    145c:	82 81       	ldd	r24, Z+2	; 0x02
    145e:	93 81       	ldd	r25, Z+3	; 0x03
    1460:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    1464:	dc 01       	movw	r26, r24
    1466:	cb 01       	movw	r24, r22
    1468:	f8 01       	movw	r30, r16
    146a:	91 83       	std	Z+1, r25	; 0x01
    146c:	80 83       	st	Z, r24
    146e:	ce 01       	movw	r24, r28
    1470:	8d 50       	subi	r24, 0x0D	; 13
    1472:	9e 4f       	sbci	r25, 0xFE	; 254
    1474:	9e 01       	movw	r18, r28
    1476:	21 51       	subi	r18, 0x11	; 17
    1478:	3e 4f       	sbci	r19, 0xFE	; 254
    147a:	f9 01       	movw	r30, r18
    147c:	20 81       	ld	r18, Z
    147e:	31 81       	ldd	r19, Z+1	; 0x01
    1480:	fc 01       	movw	r30, r24
    1482:	31 83       	std	Z+1, r19	; 0x01
    1484:	20 83       	st	Z, r18
    1486:	ce 01       	movw	r24, r28
    1488:	8d 50       	subi	r24, 0x0D	; 13
    148a:	9e 4f       	sbci	r25, 0xFE	; 254
    148c:	fc 01       	movw	r30, r24
    148e:	80 81       	ld	r24, Z
    1490:	91 81       	ldd	r25, Z+1	; 0x01
    1492:	01 97       	sbiw	r24, 0x01	; 1
    1494:	f1 f7       	brne	.-4      	; 0x1492 <__stack+0x393>
    1496:	9e 01       	movw	r18, r28
    1498:	2d 50       	subi	r18, 0x0D	; 13
    149a:	3e 4f       	sbci	r19, 0xFE	; 254
    149c:	f9 01       	movw	r30, r18
    149e:	91 83       	std	Z+1, r25	; 0x01
    14a0:	80 83       	st	Z, r24
	_delay_ms(575);
	
	to_uARM("M2210 F510 T100\n");
    14a2:	88 ed       	ldi	r24, 0xD8	; 216
    14a4:	91 e0       	ldi	r25, 0x01	; 1
    14a6:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    14aa:	80 e0       	ldi	r24, 0x00	; 0
    14ac:	90 e0       	ldi	r25, 0x00	; 0
    14ae:	a1 ee       	ldi	r26, 0xE1	; 225
    14b0:	b3 e4       	ldi	r27, 0x43	; 67
    14b2:	8d 8f       	std	Y+29, r24	; 0x1d
    14b4:	9e 8f       	std	Y+30, r25	; 0x1e
    14b6:	af 8f       	std	Y+31, r26	; 0x1f
    14b8:	b8 a3       	std	Y+32, r27	; 0x20

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    14ba:	8e 01       	movw	r16, r28
    14bc:	0f 51       	subi	r16, 0x1F	; 31
    14be:	1e 4f       	sbci	r17, 0xFE	; 254
    14c0:	20 e0       	ldi	r18, 0x00	; 0
    14c2:	30 e0       	ldi	r19, 0x00	; 0
    14c4:	4a e7       	ldi	r20, 0x7A	; 122
    14c6:	55 e4       	ldi	r21, 0x45	; 69
    14c8:	6d 8d       	ldd	r22, Y+29	; 0x1d
    14ca:	7e 8d       	ldd	r23, Y+30	; 0x1e
    14cc:	8f 8d       	ldd	r24, Y+31	; 0x1f
    14ce:	98 a1       	ldd	r25, Y+32	; 0x20
    14d0:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    14d4:	dc 01       	movw	r26, r24
    14d6:	cb 01       	movw	r24, r22
    14d8:	f8 01       	movw	r30, r16
    14da:	80 83       	st	Z, r24
    14dc:	91 83       	std	Z+1, r25	; 0x01
    14de:	a2 83       	std	Z+2, r26	; 0x02
    14e0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    14e2:	ce 01       	movw	r24, r28
    14e4:	8f 51       	subi	r24, 0x1F	; 31
    14e6:	9e 4f       	sbci	r25, 0xFE	; 254
    14e8:	20 e0       	ldi	r18, 0x00	; 0
    14ea:	30 e0       	ldi	r19, 0x00	; 0
    14ec:	40 e8       	ldi	r20, 0x80	; 128
    14ee:	5f e3       	ldi	r21, 0x3F	; 63
    14f0:	fc 01       	movw	r30, r24
    14f2:	60 81       	ld	r22, Z
    14f4:	71 81       	ldd	r23, Z+1	; 0x01
    14f6:	82 81       	ldd	r24, Z+2	; 0x02
    14f8:	93 81       	ldd	r25, Z+3	; 0x03
    14fa:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    14fe:	88 23       	and	r24, r24
    1500:	4c f4       	brge	.+18     	; 0x1514 <__stack+0x415>
		__ticks = 1;
    1502:	ce 01       	movw	r24, r28
    1504:	8b 51       	subi	r24, 0x1B	; 27
    1506:	9e 4f       	sbci	r25, 0xFE	; 254
    1508:	21 e0       	ldi	r18, 0x01	; 1
    150a:	30 e0       	ldi	r19, 0x00	; 0
    150c:	fc 01       	movw	r30, r24
    150e:	31 83       	std	Z+1, r19	; 0x01
    1510:	20 83       	st	Z, r18
    1512:	69 c0       	rjmp	.+210    	; 0x15e6 <__stack+0x4e7>
	else if (__tmp > 65535)
    1514:	ce 01       	movw	r24, r28
    1516:	8f 51       	subi	r24, 0x1F	; 31
    1518:	9e 4f       	sbci	r25, 0xFE	; 254
    151a:	20 e0       	ldi	r18, 0x00	; 0
    151c:	3f ef       	ldi	r19, 0xFF	; 255
    151e:	4f e7       	ldi	r20, 0x7F	; 127
    1520:	57 e4       	ldi	r21, 0x47	; 71
    1522:	fc 01       	movw	r30, r24
    1524:	60 81       	ld	r22, Z
    1526:	71 81       	ldd	r23, Z+1	; 0x01
    1528:	82 81       	ldd	r24, Z+2	; 0x02
    152a:	93 81       	ldd	r25, Z+3	; 0x03
    152c:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    1530:	18 16       	cp	r1, r24
    1532:	0c f0       	brlt	.+2      	; 0x1536 <__stack+0x437>
    1534:	46 c0       	rjmp	.+140    	; 0x15c2 <__stack+0x4c3>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1536:	20 e0       	ldi	r18, 0x00	; 0
    1538:	30 e0       	ldi	r19, 0x00	; 0
    153a:	40 e2       	ldi	r20, 0x20	; 32
    153c:	51 e4       	ldi	r21, 0x41	; 65
    153e:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1540:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1542:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1544:	98 a1       	ldd	r25, Y+32	; 0x20
    1546:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    154a:	dc 01       	movw	r26, r24
    154c:	cb 01       	movw	r24, r22
    154e:	8e 01       	movw	r16, r28
    1550:	0b 51       	subi	r16, 0x1B	; 27
    1552:	1e 4f       	sbci	r17, 0xFE	; 254
    1554:	bc 01       	movw	r22, r24
    1556:	cd 01       	movw	r24, r26
    1558:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    155c:	dc 01       	movw	r26, r24
    155e:	cb 01       	movw	r24, r22
    1560:	f8 01       	movw	r30, r16
    1562:	91 83       	std	Z+1, r25	; 0x01
    1564:	80 83       	st	Z, r24
    1566:	24 c0       	rjmp	.+72     	; 0x15b0 <__stack+0x4b1>
    1568:	ce 01       	movw	r24, r28
    156a:	89 51       	subi	r24, 0x19	; 25
    156c:	9e 4f       	sbci	r25, 0xFE	; 254
    156e:	20 e9       	ldi	r18, 0x90	; 144
    1570:	31 e0       	ldi	r19, 0x01	; 1
    1572:	fc 01       	movw	r30, r24
    1574:	31 83       	std	Z+1, r19	; 0x01
    1576:	20 83       	st	Z, r18
    1578:	ce 01       	movw	r24, r28
    157a:	89 51       	subi	r24, 0x19	; 25
    157c:	9e 4f       	sbci	r25, 0xFE	; 254
    157e:	fc 01       	movw	r30, r24
    1580:	80 81       	ld	r24, Z
    1582:	91 81       	ldd	r25, Z+1	; 0x01
    1584:	01 97       	sbiw	r24, 0x01	; 1
    1586:	f1 f7       	brne	.-4      	; 0x1584 <__stack+0x485>
    1588:	9e 01       	movw	r18, r28
    158a:	29 51       	subi	r18, 0x19	; 25
    158c:	3e 4f       	sbci	r19, 0xFE	; 254
    158e:	f9 01       	movw	r30, r18
    1590:	91 83       	std	Z+1, r25	; 0x01
    1592:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1594:	ce 01       	movw	r24, r28
    1596:	8b 51       	subi	r24, 0x1B	; 27
    1598:	9e 4f       	sbci	r25, 0xFE	; 254
    159a:	9e 01       	movw	r18, r28
    159c:	2b 51       	subi	r18, 0x1B	; 27
    159e:	3e 4f       	sbci	r19, 0xFE	; 254
    15a0:	f9 01       	movw	r30, r18
    15a2:	20 81       	ld	r18, Z
    15a4:	31 81       	ldd	r19, Z+1	; 0x01
    15a6:	21 50       	subi	r18, 0x01	; 1
    15a8:	31 09       	sbc	r19, r1
    15aa:	fc 01       	movw	r30, r24
    15ac:	31 83       	std	Z+1, r19	; 0x01
    15ae:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15b0:	ce 01       	movw	r24, r28
    15b2:	8b 51       	subi	r24, 0x1B	; 27
    15b4:	9e 4f       	sbci	r25, 0xFE	; 254
    15b6:	fc 01       	movw	r30, r24
    15b8:	80 81       	ld	r24, Z
    15ba:	91 81       	ldd	r25, Z+1	; 0x01
    15bc:	89 2b       	or	r24, r25
    15be:	a1 f6       	brne	.-88     	; 0x1568 <__stack+0x469>
    15c0:	2c c0       	rjmp	.+88     	; 0x161a <__stack+0x51b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15c2:	8e 01       	movw	r16, r28
    15c4:	0b 51       	subi	r16, 0x1B	; 27
    15c6:	1e 4f       	sbci	r17, 0xFE	; 254
    15c8:	ce 01       	movw	r24, r28
    15ca:	8f 51       	subi	r24, 0x1F	; 31
    15cc:	9e 4f       	sbci	r25, 0xFE	; 254
    15ce:	fc 01       	movw	r30, r24
    15d0:	60 81       	ld	r22, Z
    15d2:	71 81       	ldd	r23, Z+1	; 0x01
    15d4:	82 81       	ldd	r24, Z+2	; 0x02
    15d6:	93 81       	ldd	r25, Z+3	; 0x03
    15d8:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    15dc:	dc 01       	movw	r26, r24
    15de:	cb 01       	movw	r24, r22
    15e0:	f8 01       	movw	r30, r16
    15e2:	91 83       	std	Z+1, r25	; 0x01
    15e4:	80 83       	st	Z, r24
    15e6:	ce 01       	movw	r24, r28
    15e8:	87 51       	subi	r24, 0x17	; 23
    15ea:	9e 4f       	sbci	r25, 0xFE	; 254
    15ec:	9e 01       	movw	r18, r28
    15ee:	2b 51       	subi	r18, 0x1B	; 27
    15f0:	3e 4f       	sbci	r19, 0xFE	; 254
    15f2:	f9 01       	movw	r30, r18
    15f4:	20 81       	ld	r18, Z
    15f6:	31 81       	ldd	r19, Z+1	; 0x01
    15f8:	fc 01       	movw	r30, r24
    15fa:	31 83       	std	Z+1, r19	; 0x01
    15fc:	20 83       	st	Z, r18
    15fe:	ce 01       	movw	r24, r28
    1600:	87 51       	subi	r24, 0x17	; 23
    1602:	9e 4f       	sbci	r25, 0xFE	; 254
    1604:	fc 01       	movw	r30, r24
    1606:	80 81       	ld	r24, Z
    1608:	91 81       	ldd	r25, Z+1	; 0x01
    160a:	01 97       	sbiw	r24, 0x01	; 1
    160c:	f1 f7       	brne	.-4      	; 0x160a <__stack+0x50b>
    160e:	9e 01       	movw	r18, r28
    1610:	27 51       	subi	r18, 0x17	; 23
    1612:	3e 4f       	sbci	r19, 0xFE	; 254
    1614:	f9 01       	movw	r30, r18
    1616:	91 83       	std	Z+1, r25	; 0x01
    1618:	80 83       	st	Z, r24
	_delay_ms(450);
	to_uARM("M2210 F380 T100\n");
    161a:	8a ef       	ldi	r24, 0xFA	; 250
    161c:	91 e0       	ldi	r25, 0x01	; 1
    161e:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    1622:	80 e0       	ldi	r24, 0x00	; 0
    1624:	90 e0       	ldi	r25, 0x00	; 0
    1626:	a8 ec       	ldi	r26, 0xC8	; 200
    1628:	b3 e4       	ldi	r27, 0x43	; 67
    162a:	89 a3       	std	Y+33, r24	; 0x21
    162c:	9a a3       	std	Y+34, r25	; 0x22
    162e:	ab a3       	std	Y+35, r26	; 0x23
    1630:	bc a3       	std	Y+36, r27	; 0x24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1632:	8e 01       	movw	r16, r28
    1634:	09 52       	subi	r16, 0x29	; 41
    1636:	1e 4f       	sbci	r17, 0xFE	; 254
    1638:	20 e0       	ldi	r18, 0x00	; 0
    163a:	30 e0       	ldi	r19, 0x00	; 0
    163c:	4a e7       	ldi	r20, 0x7A	; 122
    163e:	55 e4       	ldi	r21, 0x45	; 69
    1640:	69 a1       	ldd	r22, Y+33	; 0x21
    1642:	7a a1       	ldd	r23, Y+34	; 0x22
    1644:	8b a1       	ldd	r24, Y+35	; 0x23
    1646:	9c a1       	ldd	r25, Y+36	; 0x24
    1648:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    164c:	dc 01       	movw	r26, r24
    164e:	cb 01       	movw	r24, r22
    1650:	f8 01       	movw	r30, r16
    1652:	80 83       	st	Z, r24
    1654:	91 83       	std	Z+1, r25	; 0x01
    1656:	a2 83       	std	Z+2, r26	; 0x02
    1658:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    165a:	ce 01       	movw	r24, r28
    165c:	89 52       	subi	r24, 0x29	; 41
    165e:	9e 4f       	sbci	r25, 0xFE	; 254
    1660:	20 e0       	ldi	r18, 0x00	; 0
    1662:	30 e0       	ldi	r19, 0x00	; 0
    1664:	40 e8       	ldi	r20, 0x80	; 128
    1666:	5f e3       	ldi	r21, 0x3F	; 63
    1668:	fc 01       	movw	r30, r24
    166a:	60 81       	ld	r22, Z
    166c:	71 81       	ldd	r23, Z+1	; 0x01
    166e:	82 81       	ldd	r24, Z+2	; 0x02
    1670:	93 81       	ldd	r25, Z+3	; 0x03
    1672:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    1676:	88 23       	and	r24, r24
    1678:	4c f4       	brge	.+18     	; 0x168c <__stack+0x58d>
		__ticks = 1;
    167a:	ce 01       	movw	r24, r28
    167c:	85 52       	subi	r24, 0x25	; 37
    167e:	9e 4f       	sbci	r25, 0xFE	; 254
    1680:	21 e0       	ldi	r18, 0x01	; 1
    1682:	30 e0       	ldi	r19, 0x00	; 0
    1684:	fc 01       	movw	r30, r24
    1686:	31 83       	std	Z+1, r19	; 0x01
    1688:	20 83       	st	Z, r18
    168a:	69 c0       	rjmp	.+210    	; 0x175e <__stack+0x65f>
	else if (__tmp > 65535)
    168c:	ce 01       	movw	r24, r28
    168e:	89 52       	subi	r24, 0x29	; 41
    1690:	9e 4f       	sbci	r25, 0xFE	; 254
    1692:	20 e0       	ldi	r18, 0x00	; 0
    1694:	3f ef       	ldi	r19, 0xFF	; 255
    1696:	4f e7       	ldi	r20, 0x7F	; 127
    1698:	57 e4       	ldi	r21, 0x47	; 71
    169a:	fc 01       	movw	r30, r24
    169c:	60 81       	ld	r22, Z
    169e:	71 81       	ldd	r23, Z+1	; 0x01
    16a0:	82 81       	ldd	r24, Z+2	; 0x02
    16a2:	93 81       	ldd	r25, Z+3	; 0x03
    16a4:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    16a8:	18 16       	cp	r1, r24
    16aa:	0c f0       	brlt	.+2      	; 0x16ae <__stack+0x5af>
    16ac:	46 c0       	rjmp	.+140    	; 0x173a <__stack+0x63b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16ae:	20 e0       	ldi	r18, 0x00	; 0
    16b0:	30 e0       	ldi	r19, 0x00	; 0
    16b2:	40 e2       	ldi	r20, 0x20	; 32
    16b4:	51 e4       	ldi	r21, 0x41	; 65
    16b6:	69 a1       	ldd	r22, Y+33	; 0x21
    16b8:	7a a1       	ldd	r23, Y+34	; 0x22
    16ba:	8b a1       	ldd	r24, Y+35	; 0x23
    16bc:	9c a1       	ldd	r25, Y+36	; 0x24
    16be:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    16c2:	dc 01       	movw	r26, r24
    16c4:	cb 01       	movw	r24, r22
    16c6:	8e 01       	movw	r16, r28
    16c8:	05 52       	subi	r16, 0x25	; 37
    16ca:	1e 4f       	sbci	r17, 0xFE	; 254
    16cc:	bc 01       	movw	r22, r24
    16ce:	cd 01       	movw	r24, r26
    16d0:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    16d4:	dc 01       	movw	r26, r24
    16d6:	cb 01       	movw	r24, r22
    16d8:	f8 01       	movw	r30, r16
    16da:	91 83       	std	Z+1, r25	; 0x01
    16dc:	80 83       	st	Z, r24
    16de:	24 c0       	rjmp	.+72     	; 0x1728 <__stack+0x629>
    16e0:	ce 01       	movw	r24, r28
    16e2:	83 52       	subi	r24, 0x23	; 35
    16e4:	9e 4f       	sbci	r25, 0xFE	; 254
    16e6:	20 e9       	ldi	r18, 0x90	; 144
    16e8:	31 e0       	ldi	r19, 0x01	; 1
    16ea:	fc 01       	movw	r30, r24
    16ec:	31 83       	std	Z+1, r19	; 0x01
    16ee:	20 83       	st	Z, r18
    16f0:	ce 01       	movw	r24, r28
    16f2:	83 52       	subi	r24, 0x23	; 35
    16f4:	9e 4f       	sbci	r25, 0xFE	; 254
    16f6:	fc 01       	movw	r30, r24
    16f8:	80 81       	ld	r24, Z
    16fa:	91 81       	ldd	r25, Z+1	; 0x01
    16fc:	01 97       	sbiw	r24, 0x01	; 1
    16fe:	f1 f7       	brne	.-4      	; 0x16fc <__stack+0x5fd>
    1700:	9e 01       	movw	r18, r28
    1702:	23 52       	subi	r18, 0x23	; 35
    1704:	3e 4f       	sbci	r19, 0xFE	; 254
    1706:	f9 01       	movw	r30, r18
    1708:	91 83       	std	Z+1, r25	; 0x01
    170a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    170c:	ce 01       	movw	r24, r28
    170e:	85 52       	subi	r24, 0x25	; 37
    1710:	9e 4f       	sbci	r25, 0xFE	; 254
    1712:	9e 01       	movw	r18, r28
    1714:	25 52       	subi	r18, 0x25	; 37
    1716:	3e 4f       	sbci	r19, 0xFE	; 254
    1718:	f9 01       	movw	r30, r18
    171a:	20 81       	ld	r18, Z
    171c:	31 81       	ldd	r19, Z+1	; 0x01
    171e:	21 50       	subi	r18, 0x01	; 1
    1720:	31 09       	sbc	r19, r1
    1722:	fc 01       	movw	r30, r24
    1724:	31 83       	std	Z+1, r19	; 0x01
    1726:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1728:	ce 01       	movw	r24, r28
    172a:	85 52       	subi	r24, 0x25	; 37
    172c:	9e 4f       	sbci	r25, 0xFE	; 254
    172e:	fc 01       	movw	r30, r24
    1730:	80 81       	ld	r24, Z
    1732:	91 81       	ldd	r25, Z+1	; 0x01
    1734:	89 2b       	or	r24, r25
    1736:	a1 f6       	brne	.-88     	; 0x16e0 <__stack+0x5e1>
    1738:	2c c0       	rjmp	.+88     	; 0x1792 <__stack+0x693>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    173a:	8e 01       	movw	r16, r28
    173c:	05 52       	subi	r16, 0x25	; 37
    173e:	1e 4f       	sbci	r17, 0xFE	; 254
    1740:	ce 01       	movw	r24, r28
    1742:	89 52       	subi	r24, 0x29	; 41
    1744:	9e 4f       	sbci	r25, 0xFE	; 254
    1746:	fc 01       	movw	r30, r24
    1748:	60 81       	ld	r22, Z
    174a:	71 81       	ldd	r23, Z+1	; 0x01
    174c:	82 81       	ldd	r24, Z+2	; 0x02
    174e:	93 81       	ldd	r25, Z+3	; 0x03
    1750:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    1754:	dc 01       	movw	r26, r24
    1756:	cb 01       	movw	r24, r22
    1758:	f8 01       	movw	r30, r16
    175a:	91 83       	std	Z+1, r25	; 0x01
    175c:	80 83       	st	Z, r24
    175e:	ce 01       	movw	r24, r28
    1760:	81 52       	subi	r24, 0x21	; 33
    1762:	9e 4f       	sbci	r25, 0xFE	; 254
    1764:	9e 01       	movw	r18, r28
    1766:	25 52       	subi	r18, 0x25	; 37
    1768:	3e 4f       	sbci	r19, 0xFE	; 254
    176a:	f9 01       	movw	r30, r18
    176c:	20 81       	ld	r18, Z
    176e:	31 81       	ldd	r19, Z+1	; 0x01
    1770:	fc 01       	movw	r30, r24
    1772:	31 83       	std	Z+1, r19	; 0x01
    1774:	20 83       	st	Z, r18
    1776:	ce 01       	movw	r24, r28
    1778:	81 52       	subi	r24, 0x21	; 33
    177a:	9e 4f       	sbci	r25, 0xFE	; 254
    177c:	fc 01       	movw	r30, r24
    177e:	80 81       	ld	r24, Z
    1780:	91 81       	ldd	r25, Z+1	; 0x01
    1782:	01 97       	sbiw	r24, 0x01	; 1
    1784:	f1 f7       	brne	.-4      	; 0x1782 <__stack+0x683>
    1786:	9e 01       	movw	r18, r28
    1788:	21 52       	subi	r18, 0x21	; 33
    178a:	3e 4f       	sbci	r19, 0xFE	; 254
    178c:	f9 01       	movw	r30, r18
    178e:	91 83       	std	Z+1, r25	; 0x01
    1790:	80 83       	st	Z, r24
	_delay_ms(400);
	to_uARM("M2210 F320 T100\n");
    1792:	8b e0       	ldi	r24, 0x0B	; 11
    1794:	92 e0       	ldi	r25, 0x02	; 2
    1796:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    179a:	80 e0       	ldi	r24, 0x00	; 0
    179c:	90 e0       	ldi	r25, 0x00	; 0
    179e:	aa ef       	ldi	r26, 0xFA	; 250
    17a0:	b3 e4       	ldi	r27, 0x43	; 67
    17a2:	8d a3       	std	Y+37, r24	; 0x25
    17a4:	9e a3       	std	Y+38, r25	; 0x26
    17a6:	af a3       	std	Y+39, r26	; 0x27
    17a8:	b8 a7       	std	Y+40, r27	; 0x28

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    17aa:	8e 01       	movw	r16, r28
    17ac:	03 53       	subi	r16, 0x33	; 51
    17ae:	1e 4f       	sbci	r17, 0xFE	; 254
    17b0:	20 e0       	ldi	r18, 0x00	; 0
    17b2:	30 e0       	ldi	r19, 0x00	; 0
    17b4:	4a e7       	ldi	r20, 0x7A	; 122
    17b6:	55 e4       	ldi	r21, 0x45	; 69
    17b8:	6d a1       	ldd	r22, Y+37	; 0x25
    17ba:	7e a1       	ldd	r23, Y+38	; 0x26
    17bc:	8f a1       	ldd	r24, Y+39	; 0x27
    17be:	98 a5       	ldd	r25, Y+40	; 0x28
    17c0:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    17c4:	dc 01       	movw	r26, r24
    17c6:	cb 01       	movw	r24, r22
    17c8:	f8 01       	movw	r30, r16
    17ca:	80 83       	st	Z, r24
    17cc:	91 83       	std	Z+1, r25	; 0x01
    17ce:	a2 83       	std	Z+2, r26	; 0x02
    17d0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    17d2:	ce 01       	movw	r24, r28
    17d4:	83 53       	subi	r24, 0x33	; 51
    17d6:	9e 4f       	sbci	r25, 0xFE	; 254
    17d8:	20 e0       	ldi	r18, 0x00	; 0
    17da:	30 e0       	ldi	r19, 0x00	; 0
    17dc:	40 e8       	ldi	r20, 0x80	; 128
    17de:	5f e3       	ldi	r21, 0x3F	; 63
    17e0:	fc 01       	movw	r30, r24
    17e2:	60 81       	ld	r22, Z
    17e4:	71 81       	ldd	r23, Z+1	; 0x01
    17e6:	82 81       	ldd	r24, Z+2	; 0x02
    17e8:	93 81       	ldd	r25, Z+3	; 0x03
    17ea:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    17ee:	88 23       	and	r24, r24
    17f0:	4c f4       	brge	.+18     	; 0x1804 <__stack+0x705>
		__ticks = 1;
    17f2:	ce 01       	movw	r24, r28
    17f4:	8f 52       	subi	r24, 0x2F	; 47
    17f6:	9e 4f       	sbci	r25, 0xFE	; 254
    17f8:	21 e0       	ldi	r18, 0x01	; 1
    17fa:	30 e0       	ldi	r19, 0x00	; 0
    17fc:	fc 01       	movw	r30, r24
    17fe:	31 83       	std	Z+1, r19	; 0x01
    1800:	20 83       	st	Z, r18
    1802:	69 c0       	rjmp	.+210    	; 0x18d6 <__stack+0x7d7>
	else if (__tmp > 65535)
    1804:	ce 01       	movw	r24, r28
    1806:	83 53       	subi	r24, 0x33	; 51
    1808:	9e 4f       	sbci	r25, 0xFE	; 254
    180a:	20 e0       	ldi	r18, 0x00	; 0
    180c:	3f ef       	ldi	r19, 0xFF	; 255
    180e:	4f e7       	ldi	r20, 0x7F	; 127
    1810:	57 e4       	ldi	r21, 0x47	; 71
    1812:	fc 01       	movw	r30, r24
    1814:	60 81       	ld	r22, Z
    1816:	71 81       	ldd	r23, Z+1	; 0x01
    1818:	82 81       	ldd	r24, Z+2	; 0x02
    181a:	93 81       	ldd	r25, Z+3	; 0x03
    181c:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    1820:	18 16       	cp	r1, r24
    1822:	0c f0       	brlt	.+2      	; 0x1826 <__stack+0x727>
    1824:	46 c0       	rjmp	.+140    	; 0x18b2 <__stack+0x7b3>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1826:	20 e0       	ldi	r18, 0x00	; 0
    1828:	30 e0       	ldi	r19, 0x00	; 0
    182a:	40 e2       	ldi	r20, 0x20	; 32
    182c:	51 e4       	ldi	r21, 0x41	; 65
    182e:	6d a1       	ldd	r22, Y+37	; 0x25
    1830:	7e a1       	ldd	r23, Y+38	; 0x26
    1832:	8f a1       	ldd	r24, Y+39	; 0x27
    1834:	98 a5       	ldd	r25, Y+40	; 0x28
    1836:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    183a:	dc 01       	movw	r26, r24
    183c:	cb 01       	movw	r24, r22
    183e:	8e 01       	movw	r16, r28
    1840:	0f 52       	subi	r16, 0x2F	; 47
    1842:	1e 4f       	sbci	r17, 0xFE	; 254
    1844:	bc 01       	movw	r22, r24
    1846:	cd 01       	movw	r24, r26
    1848:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    184c:	dc 01       	movw	r26, r24
    184e:	cb 01       	movw	r24, r22
    1850:	f8 01       	movw	r30, r16
    1852:	91 83       	std	Z+1, r25	; 0x01
    1854:	80 83       	st	Z, r24
    1856:	24 c0       	rjmp	.+72     	; 0x18a0 <__stack+0x7a1>
    1858:	ce 01       	movw	r24, r28
    185a:	8d 52       	subi	r24, 0x2D	; 45
    185c:	9e 4f       	sbci	r25, 0xFE	; 254
    185e:	20 e9       	ldi	r18, 0x90	; 144
    1860:	31 e0       	ldi	r19, 0x01	; 1
    1862:	fc 01       	movw	r30, r24
    1864:	31 83       	std	Z+1, r19	; 0x01
    1866:	20 83       	st	Z, r18
    1868:	ce 01       	movw	r24, r28
    186a:	8d 52       	subi	r24, 0x2D	; 45
    186c:	9e 4f       	sbci	r25, 0xFE	; 254
    186e:	fc 01       	movw	r30, r24
    1870:	80 81       	ld	r24, Z
    1872:	91 81       	ldd	r25, Z+1	; 0x01
    1874:	01 97       	sbiw	r24, 0x01	; 1
    1876:	f1 f7       	brne	.-4      	; 0x1874 <__stack+0x775>
    1878:	9e 01       	movw	r18, r28
    187a:	2d 52       	subi	r18, 0x2D	; 45
    187c:	3e 4f       	sbci	r19, 0xFE	; 254
    187e:	f9 01       	movw	r30, r18
    1880:	91 83       	std	Z+1, r25	; 0x01
    1882:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1884:	ce 01       	movw	r24, r28
    1886:	8f 52       	subi	r24, 0x2F	; 47
    1888:	9e 4f       	sbci	r25, 0xFE	; 254
    188a:	9e 01       	movw	r18, r28
    188c:	2f 52       	subi	r18, 0x2F	; 47
    188e:	3e 4f       	sbci	r19, 0xFE	; 254
    1890:	f9 01       	movw	r30, r18
    1892:	20 81       	ld	r18, Z
    1894:	31 81       	ldd	r19, Z+1	; 0x01
    1896:	21 50       	subi	r18, 0x01	; 1
    1898:	31 09       	sbc	r19, r1
    189a:	fc 01       	movw	r30, r24
    189c:	31 83       	std	Z+1, r19	; 0x01
    189e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18a0:	ce 01       	movw	r24, r28
    18a2:	8f 52       	subi	r24, 0x2F	; 47
    18a4:	9e 4f       	sbci	r25, 0xFE	; 254
    18a6:	fc 01       	movw	r30, r24
    18a8:	80 81       	ld	r24, Z
    18aa:	91 81       	ldd	r25, Z+1	; 0x01
    18ac:	89 2b       	or	r24, r25
    18ae:	a1 f6       	brne	.-88     	; 0x1858 <__stack+0x759>
    18b0:	2c c0       	rjmp	.+88     	; 0x190a <__stack+0x80b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18b2:	8e 01       	movw	r16, r28
    18b4:	0f 52       	subi	r16, 0x2F	; 47
    18b6:	1e 4f       	sbci	r17, 0xFE	; 254
    18b8:	ce 01       	movw	r24, r28
    18ba:	83 53       	subi	r24, 0x33	; 51
    18bc:	9e 4f       	sbci	r25, 0xFE	; 254
    18be:	fc 01       	movw	r30, r24
    18c0:	60 81       	ld	r22, Z
    18c2:	71 81       	ldd	r23, Z+1	; 0x01
    18c4:	82 81       	ldd	r24, Z+2	; 0x02
    18c6:	93 81       	ldd	r25, Z+3	; 0x03
    18c8:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    18cc:	dc 01       	movw	r26, r24
    18ce:	cb 01       	movw	r24, r22
    18d0:	f8 01       	movw	r30, r16
    18d2:	91 83       	std	Z+1, r25	; 0x01
    18d4:	80 83       	st	Z, r24
    18d6:	ce 01       	movw	r24, r28
    18d8:	8b 52       	subi	r24, 0x2B	; 43
    18da:	9e 4f       	sbci	r25, 0xFE	; 254
    18dc:	9e 01       	movw	r18, r28
    18de:	2f 52       	subi	r18, 0x2F	; 47
    18e0:	3e 4f       	sbci	r19, 0xFE	; 254
    18e2:	f9 01       	movw	r30, r18
    18e4:	20 81       	ld	r18, Z
    18e6:	31 81       	ldd	r19, Z+1	; 0x01
    18e8:	fc 01       	movw	r30, r24
    18ea:	31 83       	std	Z+1, r19	; 0x01
    18ec:	20 83       	st	Z, r18
    18ee:	ce 01       	movw	r24, r28
    18f0:	8b 52       	subi	r24, 0x2B	; 43
    18f2:	9e 4f       	sbci	r25, 0xFE	; 254
    18f4:	fc 01       	movw	r30, r24
    18f6:	80 81       	ld	r24, Z
    18f8:	91 81       	ldd	r25, Z+1	; 0x01
    18fa:	01 97       	sbiw	r24, 0x01	; 1
    18fc:	f1 f7       	brne	.-4      	; 0x18fa <__stack+0x7fb>
    18fe:	9e 01       	movw	r18, r28
    1900:	2b 52       	subi	r18, 0x2B	; 43
    1902:	3e 4f       	sbci	r19, 0xFE	; 254
    1904:	f9 01       	movw	r30, r18
    1906:	91 83       	std	Z+1, r25	; 0x01
    1908:	80 83       	st	Z, r24
	_delay_ms(500);
	to_uARM("M2210 F440 T100\n");
    190a:	8c e1       	ldi	r24, 0x1C	; 28
    190c:	92 e0       	ldi	r25, 0x02	; 2
    190e:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    1912:	80 e0       	ldi	r24, 0x00	; 0
    1914:	90 e0       	ldi	r25, 0x00	; 0
    1916:	a6 e9       	ldi	r26, 0x96	; 150
    1918:	b3 e4       	ldi	r27, 0x43	; 67
    191a:	89 a7       	std	Y+41, r24	; 0x29
    191c:	9a a7       	std	Y+42, r25	; 0x2a
    191e:	ab a7       	std	Y+43, r26	; 0x2b
    1920:	bc a7       	std	Y+44, r27	; 0x2c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1922:	8e 01       	movw	r16, r28
    1924:	0d 53       	subi	r16, 0x3D	; 61
    1926:	1e 4f       	sbci	r17, 0xFE	; 254
    1928:	20 e0       	ldi	r18, 0x00	; 0
    192a:	30 e0       	ldi	r19, 0x00	; 0
    192c:	4a e7       	ldi	r20, 0x7A	; 122
    192e:	55 e4       	ldi	r21, 0x45	; 69
    1930:	69 a5       	ldd	r22, Y+41	; 0x29
    1932:	7a a5       	ldd	r23, Y+42	; 0x2a
    1934:	8b a5       	ldd	r24, Y+43	; 0x2b
    1936:	9c a5       	ldd	r25, Y+44	; 0x2c
    1938:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    193c:	dc 01       	movw	r26, r24
    193e:	cb 01       	movw	r24, r22
    1940:	f8 01       	movw	r30, r16
    1942:	80 83       	st	Z, r24
    1944:	91 83       	std	Z+1, r25	; 0x01
    1946:	a2 83       	std	Z+2, r26	; 0x02
    1948:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    194a:	ce 01       	movw	r24, r28
    194c:	8d 53       	subi	r24, 0x3D	; 61
    194e:	9e 4f       	sbci	r25, 0xFE	; 254
    1950:	20 e0       	ldi	r18, 0x00	; 0
    1952:	30 e0       	ldi	r19, 0x00	; 0
    1954:	40 e8       	ldi	r20, 0x80	; 128
    1956:	5f e3       	ldi	r21, 0x3F	; 63
    1958:	fc 01       	movw	r30, r24
    195a:	60 81       	ld	r22, Z
    195c:	71 81       	ldd	r23, Z+1	; 0x01
    195e:	82 81       	ldd	r24, Z+2	; 0x02
    1960:	93 81       	ldd	r25, Z+3	; 0x03
    1962:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    1966:	88 23       	and	r24, r24
    1968:	4c f4       	brge	.+18     	; 0x197c <__stack+0x87d>
		__ticks = 1;
    196a:	ce 01       	movw	r24, r28
    196c:	89 53       	subi	r24, 0x39	; 57
    196e:	9e 4f       	sbci	r25, 0xFE	; 254
    1970:	21 e0       	ldi	r18, 0x01	; 1
    1972:	30 e0       	ldi	r19, 0x00	; 0
    1974:	fc 01       	movw	r30, r24
    1976:	31 83       	std	Z+1, r19	; 0x01
    1978:	20 83       	st	Z, r18
    197a:	69 c0       	rjmp	.+210    	; 0x1a4e <__stack+0x94f>
	else if (__tmp > 65535)
    197c:	ce 01       	movw	r24, r28
    197e:	8d 53       	subi	r24, 0x3D	; 61
    1980:	9e 4f       	sbci	r25, 0xFE	; 254
    1982:	20 e0       	ldi	r18, 0x00	; 0
    1984:	3f ef       	ldi	r19, 0xFF	; 255
    1986:	4f e7       	ldi	r20, 0x7F	; 127
    1988:	57 e4       	ldi	r21, 0x47	; 71
    198a:	fc 01       	movw	r30, r24
    198c:	60 81       	ld	r22, Z
    198e:	71 81       	ldd	r23, Z+1	; 0x01
    1990:	82 81       	ldd	r24, Z+2	; 0x02
    1992:	93 81       	ldd	r25, Z+3	; 0x03
    1994:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    1998:	18 16       	cp	r1, r24
    199a:	0c f0       	brlt	.+2      	; 0x199e <__stack+0x89f>
    199c:	46 c0       	rjmp	.+140    	; 0x1a2a <__stack+0x92b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    199e:	20 e0       	ldi	r18, 0x00	; 0
    19a0:	30 e0       	ldi	r19, 0x00	; 0
    19a2:	40 e2       	ldi	r20, 0x20	; 32
    19a4:	51 e4       	ldi	r21, 0x41	; 65
    19a6:	69 a5       	ldd	r22, Y+41	; 0x29
    19a8:	7a a5       	ldd	r23, Y+42	; 0x2a
    19aa:	8b a5       	ldd	r24, Y+43	; 0x2b
    19ac:	9c a5       	ldd	r25, Y+44	; 0x2c
    19ae:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    19b2:	dc 01       	movw	r26, r24
    19b4:	cb 01       	movw	r24, r22
    19b6:	8e 01       	movw	r16, r28
    19b8:	09 53       	subi	r16, 0x39	; 57
    19ba:	1e 4f       	sbci	r17, 0xFE	; 254
    19bc:	bc 01       	movw	r22, r24
    19be:	cd 01       	movw	r24, r26
    19c0:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    19c4:	dc 01       	movw	r26, r24
    19c6:	cb 01       	movw	r24, r22
    19c8:	f8 01       	movw	r30, r16
    19ca:	91 83       	std	Z+1, r25	; 0x01
    19cc:	80 83       	st	Z, r24
    19ce:	24 c0       	rjmp	.+72     	; 0x1a18 <__stack+0x919>
    19d0:	ce 01       	movw	r24, r28
    19d2:	87 53       	subi	r24, 0x37	; 55
    19d4:	9e 4f       	sbci	r25, 0xFE	; 254
    19d6:	20 e9       	ldi	r18, 0x90	; 144
    19d8:	31 e0       	ldi	r19, 0x01	; 1
    19da:	fc 01       	movw	r30, r24
    19dc:	31 83       	std	Z+1, r19	; 0x01
    19de:	20 83       	st	Z, r18
    19e0:	ce 01       	movw	r24, r28
    19e2:	87 53       	subi	r24, 0x37	; 55
    19e4:	9e 4f       	sbci	r25, 0xFE	; 254
    19e6:	fc 01       	movw	r30, r24
    19e8:	80 81       	ld	r24, Z
    19ea:	91 81       	ldd	r25, Z+1	; 0x01
    19ec:	01 97       	sbiw	r24, 0x01	; 1
    19ee:	f1 f7       	brne	.-4      	; 0x19ec <__stack+0x8ed>
    19f0:	9e 01       	movw	r18, r28
    19f2:	27 53       	subi	r18, 0x37	; 55
    19f4:	3e 4f       	sbci	r19, 0xFE	; 254
    19f6:	f9 01       	movw	r30, r18
    19f8:	91 83       	std	Z+1, r25	; 0x01
    19fa:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19fc:	ce 01       	movw	r24, r28
    19fe:	89 53       	subi	r24, 0x39	; 57
    1a00:	9e 4f       	sbci	r25, 0xFE	; 254
    1a02:	9e 01       	movw	r18, r28
    1a04:	29 53       	subi	r18, 0x39	; 57
    1a06:	3e 4f       	sbci	r19, 0xFE	; 254
    1a08:	f9 01       	movw	r30, r18
    1a0a:	20 81       	ld	r18, Z
    1a0c:	31 81       	ldd	r19, Z+1	; 0x01
    1a0e:	21 50       	subi	r18, 0x01	; 1
    1a10:	31 09       	sbc	r19, r1
    1a12:	fc 01       	movw	r30, r24
    1a14:	31 83       	std	Z+1, r19	; 0x01
    1a16:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a18:	ce 01       	movw	r24, r28
    1a1a:	89 53       	subi	r24, 0x39	; 57
    1a1c:	9e 4f       	sbci	r25, 0xFE	; 254
    1a1e:	fc 01       	movw	r30, r24
    1a20:	80 81       	ld	r24, Z
    1a22:	91 81       	ldd	r25, Z+1	; 0x01
    1a24:	89 2b       	or	r24, r25
    1a26:	a1 f6       	brne	.-88     	; 0x19d0 <__stack+0x8d1>
    1a28:	2c c0       	rjmp	.+88     	; 0x1a82 <__stack+0x983>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a2a:	8e 01       	movw	r16, r28
    1a2c:	09 53       	subi	r16, 0x39	; 57
    1a2e:	1e 4f       	sbci	r17, 0xFE	; 254
    1a30:	ce 01       	movw	r24, r28
    1a32:	8d 53       	subi	r24, 0x3D	; 61
    1a34:	9e 4f       	sbci	r25, 0xFE	; 254
    1a36:	fc 01       	movw	r30, r24
    1a38:	60 81       	ld	r22, Z
    1a3a:	71 81       	ldd	r23, Z+1	; 0x01
    1a3c:	82 81       	ldd	r24, Z+2	; 0x02
    1a3e:	93 81       	ldd	r25, Z+3	; 0x03
    1a40:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    1a44:	dc 01       	movw	r26, r24
    1a46:	cb 01       	movw	r24, r22
    1a48:	f8 01       	movw	r30, r16
    1a4a:	91 83       	std	Z+1, r25	; 0x01
    1a4c:	80 83       	st	Z, r24
    1a4e:	ce 01       	movw	r24, r28
    1a50:	85 53       	subi	r24, 0x35	; 53
    1a52:	9e 4f       	sbci	r25, 0xFE	; 254
    1a54:	9e 01       	movw	r18, r28
    1a56:	29 53       	subi	r18, 0x39	; 57
    1a58:	3e 4f       	sbci	r19, 0xFE	; 254
    1a5a:	f9 01       	movw	r30, r18
    1a5c:	20 81       	ld	r18, Z
    1a5e:	31 81       	ldd	r19, Z+1	; 0x01
    1a60:	fc 01       	movw	r30, r24
    1a62:	31 83       	std	Z+1, r19	; 0x01
    1a64:	20 83       	st	Z, r18
    1a66:	ce 01       	movw	r24, r28
    1a68:	85 53       	subi	r24, 0x35	; 53
    1a6a:	9e 4f       	sbci	r25, 0xFE	; 254
    1a6c:	fc 01       	movw	r30, r24
    1a6e:	80 81       	ld	r24, Z
    1a70:	91 81       	ldd	r25, Z+1	; 0x01
    1a72:	01 97       	sbiw	r24, 0x01	; 1
    1a74:	f1 f7       	brne	.-4      	; 0x1a72 <__stack+0x973>
    1a76:	9e 01       	movw	r18, r28
    1a78:	25 53       	subi	r18, 0x35	; 53
    1a7a:	3e 4f       	sbci	r19, 0xFE	; 254
    1a7c:	f9 01       	movw	r30, r18
    1a7e:	91 83       	std	Z+1, r25	; 0x01
    1a80:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F480 T80\n");
    1a82:	8d e2       	ldi	r24, 0x2D	; 45
    1a84:	92 e0       	ldi	r25, 0x02	; 2
    1a86:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    1a8a:	80 e0       	ldi	r24, 0x00	; 0
    1a8c:	90 e0       	ldi	r25, 0x00	; 0
    1a8e:	a5 ea       	ldi	r26, 0xA5	; 165
    1a90:	b3 e4       	ldi	r27, 0x43	; 67
    1a92:	8d a7       	std	Y+45, r24	; 0x2d
    1a94:	9e a7       	std	Y+46, r25	; 0x2e
    1a96:	af a7       	std	Y+47, r26	; 0x2f
    1a98:	b8 ab       	std	Y+48, r27	; 0x30

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1a9a:	8e 01       	movw	r16, r28
    1a9c:	07 54       	subi	r16, 0x47	; 71
    1a9e:	1e 4f       	sbci	r17, 0xFE	; 254
    1aa0:	20 e0       	ldi	r18, 0x00	; 0
    1aa2:	30 e0       	ldi	r19, 0x00	; 0
    1aa4:	4a e7       	ldi	r20, 0x7A	; 122
    1aa6:	55 e4       	ldi	r21, 0x45	; 69
    1aa8:	6d a5       	ldd	r22, Y+45	; 0x2d
    1aaa:	7e a5       	ldd	r23, Y+46	; 0x2e
    1aac:	8f a5       	ldd	r24, Y+47	; 0x2f
    1aae:	98 a9       	ldd	r25, Y+48	; 0x30
    1ab0:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    1ab4:	dc 01       	movw	r26, r24
    1ab6:	cb 01       	movw	r24, r22
    1ab8:	f8 01       	movw	r30, r16
    1aba:	80 83       	st	Z, r24
    1abc:	91 83       	std	Z+1, r25	; 0x01
    1abe:	a2 83       	std	Z+2, r26	; 0x02
    1ac0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ac2:	ce 01       	movw	r24, r28
    1ac4:	87 54       	subi	r24, 0x47	; 71
    1ac6:	9e 4f       	sbci	r25, 0xFE	; 254
    1ac8:	20 e0       	ldi	r18, 0x00	; 0
    1aca:	30 e0       	ldi	r19, 0x00	; 0
    1acc:	40 e8       	ldi	r20, 0x80	; 128
    1ace:	5f e3       	ldi	r21, 0x3F	; 63
    1ad0:	fc 01       	movw	r30, r24
    1ad2:	60 81       	ld	r22, Z
    1ad4:	71 81       	ldd	r23, Z+1	; 0x01
    1ad6:	82 81       	ldd	r24, Z+2	; 0x02
    1ad8:	93 81       	ldd	r25, Z+3	; 0x03
    1ada:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    1ade:	88 23       	and	r24, r24
    1ae0:	4c f4       	brge	.+18     	; 0x1af4 <__stack+0x9f5>
		__ticks = 1;
    1ae2:	ce 01       	movw	r24, r28
    1ae4:	83 54       	subi	r24, 0x43	; 67
    1ae6:	9e 4f       	sbci	r25, 0xFE	; 254
    1ae8:	21 e0       	ldi	r18, 0x01	; 1
    1aea:	30 e0       	ldi	r19, 0x00	; 0
    1aec:	fc 01       	movw	r30, r24
    1aee:	31 83       	std	Z+1, r19	; 0x01
    1af0:	20 83       	st	Z, r18
    1af2:	69 c0       	rjmp	.+210    	; 0x1bc6 <__stack+0xac7>
	else if (__tmp > 65535)
    1af4:	ce 01       	movw	r24, r28
    1af6:	87 54       	subi	r24, 0x47	; 71
    1af8:	9e 4f       	sbci	r25, 0xFE	; 254
    1afa:	20 e0       	ldi	r18, 0x00	; 0
    1afc:	3f ef       	ldi	r19, 0xFF	; 255
    1afe:	4f e7       	ldi	r20, 0x7F	; 127
    1b00:	57 e4       	ldi	r21, 0x47	; 71
    1b02:	fc 01       	movw	r30, r24
    1b04:	60 81       	ld	r22, Z
    1b06:	71 81       	ldd	r23, Z+1	; 0x01
    1b08:	82 81       	ldd	r24, Z+2	; 0x02
    1b0a:	93 81       	ldd	r25, Z+3	; 0x03
    1b0c:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    1b10:	18 16       	cp	r1, r24
    1b12:	0c f0       	brlt	.+2      	; 0x1b16 <__stack+0xa17>
    1b14:	46 c0       	rjmp	.+140    	; 0x1ba2 <__stack+0xaa3>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b16:	20 e0       	ldi	r18, 0x00	; 0
    1b18:	30 e0       	ldi	r19, 0x00	; 0
    1b1a:	40 e2       	ldi	r20, 0x20	; 32
    1b1c:	51 e4       	ldi	r21, 0x41	; 65
    1b1e:	6d a5       	ldd	r22, Y+45	; 0x2d
    1b20:	7e a5       	ldd	r23, Y+46	; 0x2e
    1b22:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b24:	98 a9       	ldd	r25, Y+48	; 0x30
    1b26:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    1b2a:	dc 01       	movw	r26, r24
    1b2c:	cb 01       	movw	r24, r22
    1b2e:	8e 01       	movw	r16, r28
    1b30:	03 54       	subi	r16, 0x43	; 67
    1b32:	1e 4f       	sbci	r17, 0xFE	; 254
    1b34:	bc 01       	movw	r22, r24
    1b36:	cd 01       	movw	r24, r26
    1b38:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    1b3c:	dc 01       	movw	r26, r24
    1b3e:	cb 01       	movw	r24, r22
    1b40:	f8 01       	movw	r30, r16
    1b42:	91 83       	std	Z+1, r25	; 0x01
    1b44:	80 83       	st	Z, r24
    1b46:	24 c0       	rjmp	.+72     	; 0x1b90 <__stack+0xa91>
    1b48:	ce 01       	movw	r24, r28
    1b4a:	81 54       	subi	r24, 0x41	; 65
    1b4c:	9e 4f       	sbci	r25, 0xFE	; 254
    1b4e:	20 e9       	ldi	r18, 0x90	; 144
    1b50:	31 e0       	ldi	r19, 0x01	; 1
    1b52:	fc 01       	movw	r30, r24
    1b54:	31 83       	std	Z+1, r19	; 0x01
    1b56:	20 83       	st	Z, r18
    1b58:	ce 01       	movw	r24, r28
    1b5a:	81 54       	subi	r24, 0x41	; 65
    1b5c:	9e 4f       	sbci	r25, 0xFE	; 254
    1b5e:	fc 01       	movw	r30, r24
    1b60:	80 81       	ld	r24, Z
    1b62:	91 81       	ldd	r25, Z+1	; 0x01
    1b64:	01 97       	sbiw	r24, 0x01	; 1
    1b66:	f1 f7       	brne	.-4      	; 0x1b64 <__stack+0xa65>
    1b68:	9e 01       	movw	r18, r28
    1b6a:	21 54       	subi	r18, 0x41	; 65
    1b6c:	3e 4f       	sbci	r19, 0xFE	; 254
    1b6e:	f9 01       	movw	r30, r18
    1b70:	91 83       	std	Z+1, r25	; 0x01
    1b72:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b74:	ce 01       	movw	r24, r28
    1b76:	83 54       	subi	r24, 0x43	; 67
    1b78:	9e 4f       	sbci	r25, 0xFE	; 254
    1b7a:	9e 01       	movw	r18, r28
    1b7c:	23 54       	subi	r18, 0x43	; 67
    1b7e:	3e 4f       	sbci	r19, 0xFE	; 254
    1b80:	f9 01       	movw	r30, r18
    1b82:	20 81       	ld	r18, Z
    1b84:	31 81       	ldd	r19, Z+1	; 0x01
    1b86:	21 50       	subi	r18, 0x01	; 1
    1b88:	31 09       	sbc	r19, r1
    1b8a:	fc 01       	movw	r30, r24
    1b8c:	31 83       	std	Z+1, r19	; 0x01
    1b8e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b90:	ce 01       	movw	r24, r28
    1b92:	83 54       	subi	r24, 0x43	; 67
    1b94:	9e 4f       	sbci	r25, 0xFE	; 254
    1b96:	fc 01       	movw	r30, r24
    1b98:	80 81       	ld	r24, Z
    1b9a:	91 81       	ldd	r25, Z+1	; 0x01
    1b9c:	89 2b       	or	r24, r25
    1b9e:	a1 f6       	brne	.-88     	; 0x1b48 <__stack+0xa49>
    1ba0:	2c c0       	rjmp	.+88     	; 0x1bfa <__stack+0xafb>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ba2:	8e 01       	movw	r16, r28
    1ba4:	03 54       	subi	r16, 0x43	; 67
    1ba6:	1e 4f       	sbci	r17, 0xFE	; 254
    1ba8:	ce 01       	movw	r24, r28
    1baa:	87 54       	subi	r24, 0x47	; 71
    1bac:	9e 4f       	sbci	r25, 0xFE	; 254
    1bae:	fc 01       	movw	r30, r24
    1bb0:	60 81       	ld	r22, Z
    1bb2:	71 81       	ldd	r23, Z+1	; 0x01
    1bb4:	82 81       	ldd	r24, Z+2	; 0x02
    1bb6:	93 81       	ldd	r25, Z+3	; 0x03
    1bb8:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    1bbc:	dc 01       	movw	r26, r24
    1bbe:	cb 01       	movw	r24, r22
    1bc0:	f8 01       	movw	r30, r16
    1bc2:	91 83       	std	Z+1, r25	; 0x01
    1bc4:	80 83       	st	Z, r24
    1bc6:	ce 01       	movw	r24, r28
    1bc8:	8f 53       	subi	r24, 0x3F	; 63
    1bca:	9e 4f       	sbci	r25, 0xFE	; 254
    1bcc:	9e 01       	movw	r18, r28
    1bce:	23 54       	subi	r18, 0x43	; 67
    1bd0:	3e 4f       	sbci	r19, 0xFE	; 254
    1bd2:	f9 01       	movw	r30, r18
    1bd4:	20 81       	ld	r18, Z
    1bd6:	31 81       	ldd	r19, Z+1	; 0x01
    1bd8:	fc 01       	movw	r30, r24
    1bda:	31 83       	std	Z+1, r19	; 0x01
    1bdc:	20 83       	st	Z, r18
    1bde:	ce 01       	movw	r24, r28
    1be0:	8f 53       	subi	r24, 0x3F	; 63
    1be2:	9e 4f       	sbci	r25, 0xFE	; 254
    1be4:	fc 01       	movw	r30, r24
    1be6:	80 81       	ld	r24, Z
    1be8:	91 81       	ldd	r25, Z+1	; 0x01
    1bea:	01 97       	sbiw	r24, 0x01	; 1
    1bec:	f1 f7       	brne	.-4      	; 0x1bea <__stack+0xaeb>
    1bee:	9e 01       	movw	r18, r28
    1bf0:	2f 53       	subi	r18, 0x3F	; 63
    1bf2:	3e 4f       	sbci	r19, 0xFE	; 254
    1bf4:	f9 01       	movw	r30, r18
    1bf6:	91 83       	std	Z+1, r25	; 0x01
    1bf8:	80 83       	st	Z, r24
	_delay_ms(330);
	to_uARM("M2210 F450 T100\n");
    1bfa:	8d e3       	ldi	r24, 0x3D	; 61
    1bfc:	92 e0       	ldi	r25, 0x02	; 2
    1bfe:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    1c02:	80 e0       	ldi	r24, 0x00	; 0
    1c04:	90 e0       	ldi	r25, 0x00	; 0
    1c06:	a6 e1       	ldi	r26, 0x16	; 22
    1c08:	b3 e4       	ldi	r27, 0x43	; 67
    1c0a:	89 ab       	std	Y+49, r24	; 0x31
    1c0c:	9a ab       	std	Y+50, r25	; 0x32
    1c0e:	ab ab       	std	Y+51, r26	; 0x33
    1c10:	bc ab       	std	Y+52, r27	; 0x34

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1c12:	8e 01       	movw	r16, r28
    1c14:	01 55       	subi	r16, 0x51	; 81
    1c16:	1e 4f       	sbci	r17, 0xFE	; 254
    1c18:	20 e0       	ldi	r18, 0x00	; 0
    1c1a:	30 e0       	ldi	r19, 0x00	; 0
    1c1c:	4a e7       	ldi	r20, 0x7A	; 122
    1c1e:	55 e4       	ldi	r21, 0x45	; 69
    1c20:	69 a9       	ldd	r22, Y+49	; 0x31
    1c22:	7a a9       	ldd	r23, Y+50	; 0x32
    1c24:	8b a9       	ldd	r24, Y+51	; 0x33
    1c26:	9c a9       	ldd	r25, Y+52	; 0x34
    1c28:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    1c2c:	dc 01       	movw	r26, r24
    1c2e:	cb 01       	movw	r24, r22
    1c30:	f8 01       	movw	r30, r16
    1c32:	80 83       	st	Z, r24
    1c34:	91 83       	std	Z+1, r25	; 0x01
    1c36:	a2 83       	std	Z+2, r26	; 0x02
    1c38:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1c3a:	ce 01       	movw	r24, r28
    1c3c:	81 55       	subi	r24, 0x51	; 81
    1c3e:	9e 4f       	sbci	r25, 0xFE	; 254
    1c40:	20 e0       	ldi	r18, 0x00	; 0
    1c42:	30 e0       	ldi	r19, 0x00	; 0
    1c44:	40 e8       	ldi	r20, 0x80	; 128
    1c46:	5f e3       	ldi	r21, 0x3F	; 63
    1c48:	fc 01       	movw	r30, r24
    1c4a:	60 81       	ld	r22, Z
    1c4c:	71 81       	ldd	r23, Z+1	; 0x01
    1c4e:	82 81       	ldd	r24, Z+2	; 0x02
    1c50:	93 81       	ldd	r25, Z+3	; 0x03
    1c52:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    1c56:	88 23       	and	r24, r24
    1c58:	4c f4       	brge	.+18     	; 0x1c6c <__stack+0xb6d>
		__ticks = 1;
    1c5a:	ce 01       	movw	r24, r28
    1c5c:	8d 54       	subi	r24, 0x4D	; 77
    1c5e:	9e 4f       	sbci	r25, 0xFE	; 254
    1c60:	21 e0       	ldi	r18, 0x01	; 1
    1c62:	30 e0       	ldi	r19, 0x00	; 0
    1c64:	fc 01       	movw	r30, r24
    1c66:	31 83       	std	Z+1, r19	; 0x01
    1c68:	20 83       	st	Z, r18
    1c6a:	69 c0       	rjmp	.+210    	; 0x1d3e <__stack+0xc3f>
	else if (__tmp > 65535)
    1c6c:	ce 01       	movw	r24, r28
    1c6e:	81 55       	subi	r24, 0x51	; 81
    1c70:	9e 4f       	sbci	r25, 0xFE	; 254
    1c72:	20 e0       	ldi	r18, 0x00	; 0
    1c74:	3f ef       	ldi	r19, 0xFF	; 255
    1c76:	4f e7       	ldi	r20, 0x7F	; 127
    1c78:	57 e4       	ldi	r21, 0x47	; 71
    1c7a:	fc 01       	movw	r30, r24
    1c7c:	60 81       	ld	r22, Z
    1c7e:	71 81       	ldd	r23, Z+1	; 0x01
    1c80:	82 81       	ldd	r24, Z+2	; 0x02
    1c82:	93 81       	ldd	r25, Z+3	; 0x03
    1c84:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    1c88:	18 16       	cp	r1, r24
    1c8a:	0c f0       	brlt	.+2      	; 0x1c8e <__stack+0xb8f>
    1c8c:	46 c0       	rjmp	.+140    	; 0x1d1a <__stack+0xc1b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c8e:	20 e0       	ldi	r18, 0x00	; 0
    1c90:	30 e0       	ldi	r19, 0x00	; 0
    1c92:	40 e2       	ldi	r20, 0x20	; 32
    1c94:	51 e4       	ldi	r21, 0x41	; 65
    1c96:	69 a9       	ldd	r22, Y+49	; 0x31
    1c98:	7a a9       	ldd	r23, Y+50	; 0x32
    1c9a:	8b a9       	ldd	r24, Y+51	; 0x33
    1c9c:	9c a9       	ldd	r25, Y+52	; 0x34
    1c9e:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    1ca2:	dc 01       	movw	r26, r24
    1ca4:	cb 01       	movw	r24, r22
    1ca6:	8e 01       	movw	r16, r28
    1ca8:	0d 54       	subi	r16, 0x4D	; 77
    1caa:	1e 4f       	sbci	r17, 0xFE	; 254
    1cac:	bc 01       	movw	r22, r24
    1cae:	cd 01       	movw	r24, r26
    1cb0:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    1cb4:	dc 01       	movw	r26, r24
    1cb6:	cb 01       	movw	r24, r22
    1cb8:	f8 01       	movw	r30, r16
    1cba:	91 83       	std	Z+1, r25	; 0x01
    1cbc:	80 83       	st	Z, r24
    1cbe:	24 c0       	rjmp	.+72     	; 0x1d08 <__stack+0xc09>
    1cc0:	ce 01       	movw	r24, r28
    1cc2:	8b 54       	subi	r24, 0x4B	; 75
    1cc4:	9e 4f       	sbci	r25, 0xFE	; 254
    1cc6:	20 e9       	ldi	r18, 0x90	; 144
    1cc8:	31 e0       	ldi	r19, 0x01	; 1
    1cca:	fc 01       	movw	r30, r24
    1ccc:	31 83       	std	Z+1, r19	; 0x01
    1cce:	20 83       	st	Z, r18
    1cd0:	ce 01       	movw	r24, r28
    1cd2:	8b 54       	subi	r24, 0x4B	; 75
    1cd4:	9e 4f       	sbci	r25, 0xFE	; 254
    1cd6:	fc 01       	movw	r30, r24
    1cd8:	80 81       	ld	r24, Z
    1cda:	91 81       	ldd	r25, Z+1	; 0x01
    1cdc:	01 97       	sbiw	r24, 0x01	; 1
    1cde:	f1 f7       	brne	.-4      	; 0x1cdc <__stack+0xbdd>
    1ce0:	9e 01       	movw	r18, r28
    1ce2:	2b 54       	subi	r18, 0x4B	; 75
    1ce4:	3e 4f       	sbci	r19, 0xFE	; 254
    1ce6:	f9 01       	movw	r30, r18
    1ce8:	91 83       	std	Z+1, r25	; 0x01
    1cea:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1cec:	ce 01       	movw	r24, r28
    1cee:	8d 54       	subi	r24, 0x4D	; 77
    1cf0:	9e 4f       	sbci	r25, 0xFE	; 254
    1cf2:	9e 01       	movw	r18, r28
    1cf4:	2d 54       	subi	r18, 0x4D	; 77
    1cf6:	3e 4f       	sbci	r19, 0xFE	; 254
    1cf8:	f9 01       	movw	r30, r18
    1cfa:	20 81       	ld	r18, Z
    1cfc:	31 81       	ldd	r19, Z+1	; 0x01
    1cfe:	21 50       	subi	r18, 0x01	; 1
    1d00:	31 09       	sbc	r19, r1
    1d02:	fc 01       	movw	r30, r24
    1d04:	31 83       	std	Z+1, r19	; 0x01
    1d06:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d08:	ce 01       	movw	r24, r28
    1d0a:	8d 54       	subi	r24, 0x4D	; 77
    1d0c:	9e 4f       	sbci	r25, 0xFE	; 254
    1d0e:	fc 01       	movw	r30, r24
    1d10:	80 81       	ld	r24, Z
    1d12:	91 81       	ldd	r25, Z+1	; 0x01
    1d14:	89 2b       	or	r24, r25
    1d16:	a1 f6       	brne	.-88     	; 0x1cc0 <__stack+0xbc1>
    1d18:	2c c0       	rjmp	.+88     	; 0x1d72 <__stack+0xc73>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d1a:	8e 01       	movw	r16, r28
    1d1c:	0d 54       	subi	r16, 0x4D	; 77
    1d1e:	1e 4f       	sbci	r17, 0xFE	; 254
    1d20:	ce 01       	movw	r24, r28
    1d22:	81 55       	subi	r24, 0x51	; 81
    1d24:	9e 4f       	sbci	r25, 0xFE	; 254
    1d26:	fc 01       	movw	r30, r24
    1d28:	60 81       	ld	r22, Z
    1d2a:	71 81       	ldd	r23, Z+1	; 0x01
    1d2c:	82 81       	ldd	r24, Z+2	; 0x02
    1d2e:	93 81       	ldd	r25, Z+3	; 0x03
    1d30:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    1d34:	dc 01       	movw	r26, r24
    1d36:	cb 01       	movw	r24, r22
    1d38:	f8 01       	movw	r30, r16
    1d3a:	91 83       	std	Z+1, r25	; 0x01
    1d3c:	80 83       	st	Z, r24
    1d3e:	ce 01       	movw	r24, r28
    1d40:	89 54       	subi	r24, 0x49	; 73
    1d42:	9e 4f       	sbci	r25, 0xFE	; 254
    1d44:	9e 01       	movw	r18, r28
    1d46:	2d 54       	subi	r18, 0x4D	; 77
    1d48:	3e 4f       	sbci	r19, 0xFE	; 254
    1d4a:	f9 01       	movw	r30, r18
    1d4c:	20 81       	ld	r18, Z
    1d4e:	31 81       	ldd	r19, Z+1	; 0x01
    1d50:	fc 01       	movw	r30, r24
    1d52:	31 83       	std	Z+1, r19	; 0x01
    1d54:	20 83       	st	Z, r18
    1d56:	ce 01       	movw	r24, r28
    1d58:	89 54       	subi	r24, 0x49	; 73
    1d5a:	9e 4f       	sbci	r25, 0xFE	; 254
    1d5c:	fc 01       	movw	r30, r24
    1d5e:	80 81       	ld	r24, Z
    1d60:	91 81       	ldd	r25, Z+1	; 0x01
    1d62:	01 97       	sbiw	r24, 0x01	; 1
    1d64:	f1 f7       	brne	.-4      	; 0x1d62 <__stack+0xc63>
    1d66:	9e 01       	movw	r18, r28
    1d68:	29 54       	subi	r18, 0x49	; 73
    1d6a:	3e 4f       	sbci	r19, 0xFE	; 254
    1d6c:	f9 01       	movw	r30, r18
    1d6e:	91 83       	std	Z+1, r25	; 0x01
    1d70:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F430 T100\n");
    1d72:	8e e4       	ldi	r24, 0x4E	; 78
    1d74:	92 e0       	ldi	r25, 0x02	; 2
    1d76:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    1d7a:	80 e0       	ldi	r24, 0x00	; 0
    1d7c:	90 e0       	ldi	r25, 0x00	; 0
    1d7e:	a6 e9       	ldi	r26, 0x96	; 150
    1d80:	b3 e4       	ldi	r27, 0x43	; 67
    1d82:	8d ab       	std	Y+53, r24	; 0x35
    1d84:	9e ab       	std	Y+54, r25	; 0x36
    1d86:	af ab       	std	Y+55, r26	; 0x37
    1d88:	b8 af       	std	Y+56, r27	; 0x38

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1d8a:	8e 01       	movw	r16, r28
    1d8c:	0b 55       	subi	r16, 0x5B	; 91
    1d8e:	1e 4f       	sbci	r17, 0xFE	; 254
    1d90:	20 e0       	ldi	r18, 0x00	; 0
    1d92:	30 e0       	ldi	r19, 0x00	; 0
    1d94:	4a e7       	ldi	r20, 0x7A	; 122
    1d96:	55 e4       	ldi	r21, 0x45	; 69
    1d98:	6d a9       	ldd	r22, Y+53	; 0x35
    1d9a:	7e a9       	ldd	r23, Y+54	; 0x36
    1d9c:	8f a9       	ldd	r24, Y+55	; 0x37
    1d9e:	98 ad       	ldd	r25, Y+56	; 0x38
    1da0:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    1da4:	dc 01       	movw	r26, r24
    1da6:	cb 01       	movw	r24, r22
    1da8:	f8 01       	movw	r30, r16
    1daa:	80 83       	st	Z, r24
    1dac:	91 83       	std	Z+1, r25	; 0x01
    1dae:	a2 83       	std	Z+2, r26	; 0x02
    1db0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1db2:	ce 01       	movw	r24, r28
    1db4:	8b 55       	subi	r24, 0x5B	; 91
    1db6:	9e 4f       	sbci	r25, 0xFE	; 254
    1db8:	20 e0       	ldi	r18, 0x00	; 0
    1dba:	30 e0       	ldi	r19, 0x00	; 0
    1dbc:	40 e8       	ldi	r20, 0x80	; 128
    1dbe:	5f e3       	ldi	r21, 0x3F	; 63
    1dc0:	fc 01       	movw	r30, r24
    1dc2:	60 81       	ld	r22, Z
    1dc4:	71 81       	ldd	r23, Z+1	; 0x01
    1dc6:	82 81       	ldd	r24, Z+2	; 0x02
    1dc8:	93 81       	ldd	r25, Z+3	; 0x03
    1dca:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    1dce:	88 23       	and	r24, r24
    1dd0:	4c f4       	brge	.+18     	; 0x1de4 <__stack+0xce5>
		__ticks = 1;
    1dd2:	ce 01       	movw	r24, r28
    1dd4:	87 55       	subi	r24, 0x57	; 87
    1dd6:	9e 4f       	sbci	r25, 0xFE	; 254
    1dd8:	21 e0       	ldi	r18, 0x01	; 1
    1dda:	30 e0       	ldi	r19, 0x00	; 0
    1ddc:	fc 01       	movw	r30, r24
    1dde:	31 83       	std	Z+1, r19	; 0x01
    1de0:	20 83       	st	Z, r18
    1de2:	69 c0       	rjmp	.+210    	; 0x1eb6 <__stack+0xdb7>
	else if (__tmp > 65535)
    1de4:	ce 01       	movw	r24, r28
    1de6:	8b 55       	subi	r24, 0x5B	; 91
    1de8:	9e 4f       	sbci	r25, 0xFE	; 254
    1dea:	20 e0       	ldi	r18, 0x00	; 0
    1dec:	3f ef       	ldi	r19, 0xFF	; 255
    1dee:	4f e7       	ldi	r20, 0x7F	; 127
    1df0:	57 e4       	ldi	r21, 0x47	; 71
    1df2:	fc 01       	movw	r30, r24
    1df4:	60 81       	ld	r22, Z
    1df6:	71 81       	ldd	r23, Z+1	; 0x01
    1df8:	82 81       	ldd	r24, Z+2	; 0x02
    1dfa:	93 81       	ldd	r25, Z+3	; 0x03
    1dfc:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    1e00:	18 16       	cp	r1, r24
    1e02:	0c f0       	brlt	.+2      	; 0x1e06 <__stack+0xd07>
    1e04:	46 c0       	rjmp	.+140    	; 0x1e92 <__stack+0xd93>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e06:	20 e0       	ldi	r18, 0x00	; 0
    1e08:	30 e0       	ldi	r19, 0x00	; 0
    1e0a:	40 e2       	ldi	r20, 0x20	; 32
    1e0c:	51 e4       	ldi	r21, 0x41	; 65
    1e0e:	6d a9       	ldd	r22, Y+53	; 0x35
    1e10:	7e a9       	ldd	r23, Y+54	; 0x36
    1e12:	8f a9       	ldd	r24, Y+55	; 0x37
    1e14:	98 ad       	ldd	r25, Y+56	; 0x38
    1e16:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    1e1a:	dc 01       	movw	r26, r24
    1e1c:	cb 01       	movw	r24, r22
    1e1e:	8e 01       	movw	r16, r28
    1e20:	07 55       	subi	r16, 0x57	; 87
    1e22:	1e 4f       	sbci	r17, 0xFE	; 254
    1e24:	bc 01       	movw	r22, r24
    1e26:	cd 01       	movw	r24, r26
    1e28:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    1e2c:	dc 01       	movw	r26, r24
    1e2e:	cb 01       	movw	r24, r22
    1e30:	f8 01       	movw	r30, r16
    1e32:	91 83       	std	Z+1, r25	; 0x01
    1e34:	80 83       	st	Z, r24
    1e36:	24 c0       	rjmp	.+72     	; 0x1e80 <__stack+0xd81>
    1e38:	ce 01       	movw	r24, r28
    1e3a:	85 55       	subi	r24, 0x55	; 85
    1e3c:	9e 4f       	sbci	r25, 0xFE	; 254
    1e3e:	20 e9       	ldi	r18, 0x90	; 144
    1e40:	31 e0       	ldi	r19, 0x01	; 1
    1e42:	fc 01       	movw	r30, r24
    1e44:	31 83       	std	Z+1, r19	; 0x01
    1e46:	20 83       	st	Z, r18
    1e48:	ce 01       	movw	r24, r28
    1e4a:	85 55       	subi	r24, 0x55	; 85
    1e4c:	9e 4f       	sbci	r25, 0xFE	; 254
    1e4e:	fc 01       	movw	r30, r24
    1e50:	80 81       	ld	r24, Z
    1e52:	91 81       	ldd	r25, Z+1	; 0x01
    1e54:	01 97       	sbiw	r24, 0x01	; 1
    1e56:	f1 f7       	brne	.-4      	; 0x1e54 <__stack+0xd55>
    1e58:	9e 01       	movw	r18, r28
    1e5a:	25 55       	subi	r18, 0x55	; 85
    1e5c:	3e 4f       	sbci	r19, 0xFE	; 254
    1e5e:	f9 01       	movw	r30, r18
    1e60:	91 83       	std	Z+1, r25	; 0x01
    1e62:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e64:	ce 01       	movw	r24, r28
    1e66:	87 55       	subi	r24, 0x57	; 87
    1e68:	9e 4f       	sbci	r25, 0xFE	; 254
    1e6a:	9e 01       	movw	r18, r28
    1e6c:	27 55       	subi	r18, 0x57	; 87
    1e6e:	3e 4f       	sbci	r19, 0xFE	; 254
    1e70:	f9 01       	movw	r30, r18
    1e72:	20 81       	ld	r18, Z
    1e74:	31 81       	ldd	r19, Z+1	; 0x01
    1e76:	21 50       	subi	r18, 0x01	; 1
    1e78:	31 09       	sbc	r19, r1
    1e7a:	fc 01       	movw	r30, r24
    1e7c:	31 83       	std	Z+1, r19	; 0x01
    1e7e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e80:	ce 01       	movw	r24, r28
    1e82:	87 55       	subi	r24, 0x57	; 87
    1e84:	9e 4f       	sbci	r25, 0xFE	; 254
    1e86:	fc 01       	movw	r30, r24
    1e88:	80 81       	ld	r24, Z
    1e8a:	91 81       	ldd	r25, Z+1	; 0x01
    1e8c:	89 2b       	or	r24, r25
    1e8e:	a1 f6       	brne	.-88     	; 0x1e38 <__stack+0xd39>
    1e90:	2c c0       	rjmp	.+88     	; 0x1eea <__stack+0xdeb>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e92:	8e 01       	movw	r16, r28
    1e94:	07 55       	subi	r16, 0x57	; 87
    1e96:	1e 4f       	sbci	r17, 0xFE	; 254
    1e98:	ce 01       	movw	r24, r28
    1e9a:	8b 55       	subi	r24, 0x5B	; 91
    1e9c:	9e 4f       	sbci	r25, 0xFE	; 254
    1e9e:	fc 01       	movw	r30, r24
    1ea0:	60 81       	ld	r22, Z
    1ea2:	71 81       	ldd	r23, Z+1	; 0x01
    1ea4:	82 81       	ldd	r24, Z+2	; 0x02
    1ea6:	93 81       	ldd	r25, Z+3	; 0x03
    1ea8:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    1eac:	dc 01       	movw	r26, r24
    1eae:	cb 01       	movw	r24, r22
    1eb0:	f8 01       	movw	r30, r16
    1eb2:	91 83       	std	Z+1, r25	; 0x01
    1eb4:	80 83       	st	Z, r24
    1eb6:	ce 01       	movw	r24, r28
    1eb8:	83 55       	subi	r24, 0x53	; 83
    1eba:	9e 4f       	sbci	r25, 0xFE	; 254
    1ebc:	9e 01       	movw	r18, r28
    1ebe:	27 55       	subi	r18, 0x57	; 87
    1ec0:	3e 4f       	sbci	r19, 0xFE	; 254
    1ec2:	f9 01       	movw	r30, r18
    1ec4:	20 81       	ld	r18, Z
    1ec6:	31 81       	ldd	r19, Z+1	; 0x01
    1ec8:	fc 01       	movw	r30, r24
    1eca:	31 83       	std	Z+1, r19	; 0x01
    1ecc:	20 83       	st	Z, r18
    1ece:	ce 01       	movw	r24, r28
    1ed0:	83 55       	subi	r24, 0x53	; 83
    1ed2:	9e 4f       	sbci	r25, 0xFE	; 254
    1ed4:	fc 01       	movw	r30, r24
    1ed6:	80 81       	ld	r24, Z
    1ed8:	91 81       	ldd	r25, Z+1	; 0x01
    1eda:	01 97       	sbiw	r24, 0x01	; 1
    1edc:	f1 f7       	brne	.-4      	; 0x1eda <__stack+0xddb>
    1ede:	9e 01       	movw	r18, r28
    1ee0:	23 55       	subi	r18, 0x53	; 83
    1ee2:	3e 4f       	sbci	r19, 0xFE	; 254
    1ee4:	f9 01       	movw	r30, r18
    1ee6:	91 83       	std	Z+1, r25	; 0x01
    1ee8:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F380 T100\n");
    1eea:	8a ef       	ldi	r24, 0xFA	; 250
    1eec:	91 e0       	ldi	r25, 0x01	; 1
    1eee:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    1ef2:	80 e0       	ldi	r24, 0x00	; 0
    1ef4:	90 e0       	ldi	r25, 0x00	; 0
    1ef6:	a8 e4       	ldi	r26, 0x48	; 72
    1ef8:	b3 e4       	ldi	r27, 0x43	; 67
    1efa:	89 af       	std	Y+57, r24	; 0x39
    1efc:	9a af       	std	Y+58, r25	; 0x3a
    1efe:	ab af       	std	Y+59, r26	; 0x3b
    1f00:	bc af       	std	Y+60, r27	; 0x3c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1f02:	8e 01       	movw	r16, r28
    1f04:	05 56       	subi	r16, 0x65	; 101
    1f06:	1e 4f       	sbci	r17, 0xFE	; 254
    1f08:	20 e0       	ldi	r18, 0x00	; 0
    1f0a:	30 e0       	ldi	r19, 0x00	; 0
    1f0c:	4a e7       	ldi	r20, 0x7A	; 122
    1f0e:	55 e4       	ldi	r21, 0x45	; 69
    1f10:	69 ad       	ldd	r22, Y+57	; 0x39
    1f12:	7a ad       	ldd	r23, Y+58	; 0x3a
    1f14:	8b ad       	ldd	r24, Y+59	; 0x3b
    1f16:	9c ad       	ldd	r25, Y+60	; 0x3c
    1f18:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    1f1c:	dc 01       	movw	r26, r24
    1f1e:	cb 01       	movw	r24, r22
    1f20:	f8 01       	movw	r30, r16
    1f22:	80 83       	st	Z, r24
    1f24:	91 83       	std	Z+1, r25	; 0x01
    1f26:	a2 83       	std	Z+2, r26	; 0x02
    1f28:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1f2a:	ce 01       	movw	r24, r28
    1f2c:	85 56       	subi	r24, 0x65	; 101
    1f2e:	9e 4f       	sbci	r25, 0xFE	; 254
    1f30:	20 e0       	ldi	r18, 0x00	; 0
    1f32:	30 e0       	ldi	r19, 0x00	; 0
    1f34:	40 e8       	ldi	r20, 0x80	; 128
    1f36:	5f e3       	ldi	r21, 0x3F	; 63
    1f38:	fc 01       	movw	r30, r24
    1f3a:	60 81       	ld	r22, Z
    1f3c:	71 81       	ldd	r23, Z+1	; 0x01
    1f3e:	82 81       	ldd	r24, Z+2	; 0x02
    1f40:	93 81       	ldd	r25, Z+3	; 0x03
    1f42:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    1f46:	88 23       	and	r24, r24
    1f48:	4c f4       	brge	.+18     	; 0x1f5c <__stack+0xe5d>
		__ticks = 1;
    1f4a:	ce 01       	movw	r24, r28
    1f4c:	81 56       	subi	r24, 0x61	; 97
    1f4e:	9e 4f       	sbci	r25, 0xFE	; 254
    1f50:	21 e0       	ldi	r18, 0x01	; 1
    1f52:	30 e0       	ldi	r19, 0x00	; 0
    1f54:	fc 01       	movw	r30, r24
    1f56:	31 83       	std	Z+1, r19	; 0x01
    1f58:	20 83       	st	Z, r18
    1f5a:	69 c0       	rjmp	.+210    	; 0x202e <__stack+0xf2f>
	else if (__tmp > 65535)
    1f5c:	ce 01       	movw	r24, r28
    1f5e:	85 56       	subi	r24, 0x65	; 101
    1f60:	9e 4f       	sbci	r25, 0xFE	; 254
    1f62:	20 e0       	ldi	r18, 0x00	; 0
    1f64:	3f ef       	ldi	r19, 0xFF	; 255
    1f66:	4f e7       	ldi	r20, 0x7F	; 127
    1f68:	57 e4       	ldi	r21, 0x47	; 71
    1f6a:	fc 01       	movw	r30, r24
    1f6c:	60 81       	ld	r22, Z
    1f6e:	71 81       	ldd	r23, Z+1	; 0x01
    1f70:	82 81       	ldd	r24, Z+2	; 0x02
    1f72:	93 81       	ldd	r25, Z+3	; 0x03
    1f74:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    1f78:	18 16       	cp	r1, r24
    1f7a:	0c f0       	brlt	.+2      	; 0x1f7e <__stack+0xe7f>
    1f7c:	46 c0       	rjmp	.+140    	; 0x200a <__stack+0xf0b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f7e:	20 e0       	ldi	r18, 0x00	; 0
    1f80:	30 e0       	ldi	r19, 0x00	; 0
    1f82:	40 e2       	ldi	r20, 0x20	; 32
    1f84:	51 e4       	ldi	r21, 0x41	; 65
    1f86:	69 ad       	ldd	r22, Y+57	; 0x39
    1f88:	7a ad       	ldd	r23, Y+58	; 0x3a
    1f8a:	8b ad       	ldd	r24, Y+59	; 0x3b
    1f8c:	9c ad       	ldd	r25, Y+60	; 0x3c
    1f8e:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    1f92:	dc 01       	movw	r26, r24
    1f94:	cb 01       	movw	r24, r22
    1f96:	8e 01       	movw	r16, r28
    1f98:	01 56       	subi	r16, 0x61	; 97
    1f9a:	1e 4f       	sbci	r17, 0xFE	; 254
    1f9c:	bc 01       	movw	r22, r24
    1f9e:	cd 01       	movw	r24, r26
    1fa0:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    1fa4:	dc 01       	movw	r26, r24
    1fa6:	cb 01       	movw	r24, r22
    1fa8:	f8 01       	movw	r30, r16
    1faa:	91 83       	std	Z+1, r25	; 0x01
    1fac:	80 83       	st	Z, r24
    1fae:	24 c0       	rjmp	.+72     	; 0x1ff8 <__stack+0xef9>
    1fb0:	ce 01       	movw	r24, r28
    1fb2:	8f 55       	subi	r24, 0x5F	; 95
    1fb4:	9e 4f       	sbci	r25, 0xFE	; 254
    1fb6:	20 e9       	ldi	r18, 0x90	; 144
    1fb8:	31 e0       	ldi	r19, 0x01	; 1
    1fba:	fc 01       	movw	r30, r24
    1fbc:	31 83       	std	Z+1, r19	; 0x01
    1fbe:	20 83       	st	Z, r18
    1fc0:	ce 01       	movw	r24, r28
    1fc2:	8f 55       	subi	r24, 0x5F	; 95
    1fc4:	9e 4f       	sbci	r25, 0xFE	; 254
    1fc6:	fc 01       	movw	r30, r24
    1fc8:	80 81       	ld	r24, Z
    1fca:	91 81       	ldd	r25, Z+1	; 0x01
    1fcc:	01 97       	sbiw	r24, 0x01	; 1
    1fce:	f1 f7       	brne	.-4      	; 0x1fcc <__stack+0xecd>
    1fd0:	9e 01       	movw	r18, r28
    1fd2:	2f 55       	subi	r18, 0x5F	; 95
    1fd4:	3e 4f       	sbci	r19, 0xFE	; 254
    1fd6:	f9 01       	movw	r30, r18
    1fd8:	91 83       	std	Z+1, r25	; 0x01
    1fda:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1fdc:	ce 01       	movw	r24, r28
    1fde:	81 56       	subi	r24, 0x61	; 97
    1fe0:	9e 4f       	sbci	r25, 0xFE	; 254
    1fe2:	9e 01       	movw	r18, r28
    1fe4:	21 56       	subi	r18, 0x61	; 97
    1fe6:	3e 4f       	sbci	r19, 0xFE	; 254
    1fe8:	f9 01       	movw	r30, r18
    1fea:	20 81       	ld	r18, Z
    1fec:	31 81       	ldd	r19, Z+1	; 0x01
    1fee:	21 50       	subi	r18, 0x01	; 1
    1ff0:	31 09       	sbc	r19, r1
    1ff2:	fc 01       	movw	r30, r24
    1ff4:	31 83       	std	Z+1, r19	; 0x01
    1ff6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ff8:	ce 01       	movw	r24, r28
    1ffa:	81 56       	subi	r24, 0x61	; 97
    1ffc:	9e 4f       	sbci	r25, 0xFE	; 254
    1ffe:	fc 01       	movw	r30, r24
    2000:	80 81       	ld	r24, Z
    2002:	91 81       	ldd	r25, Z+1	; 0x01
    2004:	89 2b       	or	r24, r25
    2006:	a1 f6       	brne	.-88     	; 0x1fb0 <__stack+0xeb1>
    2008:	2c c0       	rjmp	.+88     	; 0x2062 <__stack+0xf63>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    200a:	8e 01       	movw	r16, r28
    200c:	01 56       	subi	r16, 0x61	; 97
    200e:	1e 4f       	sbci	r17, 0xFE	; 254
    2010:	ce 01       	movw	r24, r28
    2012:	85 56       	subi	r24, 0x65	; 101
    2014:	9e 4f       	sbci	r25, 0xFE	; 254
    2016:	fc 01       	movw	r30, r24
    2018:	60 81       	ld	r22, Z
    201a:	71 81       	ldd	r23, Z+1	; 0x01
    201c:	82 81       	ldd	r24, Z+2	; 0x02
    201e:	93 81       	ldd	r25, Z+3	; 0x03
    2020:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    2024:	dc 01       	movw	r26, r24
    2026:	cb 01       	movw	r24, r22
    2028:	f8 01       	movw	r30, r16
    202a:	91 83       	std	Z+1, r25	; 0x01
    202c:	80 83       	st	Z, r24
    202e:	ce 01       	movw	r24, r28
    2030:	8d 55       	subi	r24, 0x5D	; 93
    2032:	9e 4f       	sbci	r25, 0xFE	; 254
    2034:	9e 01       	movw	r18, r28
    2036:	21 56       	subi	r18, 0x61	; 97
    2038:	3e 4f       	sbci	r19, 0xFE	; 254
    203a:	f9 01       	movw	r30, r18
    203c:	20 81       	ld	r18, Z
    203e:	31 81       	ldd	r19, Z+1	; 0x01
    2040:	fc 01       	movw	r30, r24
    2042:	31 83       	std	Z+1, r19	; 0x01
    2044:	20 83       	st	Z, r18
    2046:	ce 01       	movw	r24, r28
    2048:	8d 55       	subi	r24, 0x5D	; 93
    204a:	9e 4f       	sbci	r25, 0xFE	; 254
    204c:	fc 01       	movw	r30, r24
    204e:	80 81       	ld	r24, Z
    2050:	91 81       	ldd	r25, Z+1	; 0x01
    2052:	01 97       	sbiw	r24, 0x01	; 1
    2054:	f1 f7       	brne	.-4      	; 0x2052 <__stack+0xf53>
    2056:	9e 01       	movw	r18, r28
    2058:	2d 55       	subi	r18, 0x5D	; 93
    205a:	3e 4f       	sbci	r19, 0xFE	; 254
    205c:	f9 01       	movw	r30, r18
    205e:	91 83       	std	Z+1, r25	; 0x01
    2060:	80 83       	st	Z, r24
	_delay_ms(200);
	to_uARM("M2210 F660 T80\n");
    2062:	8f e5       	ldi	r24, 0x5F	; 95
    2064:	92 e0       	ldi	r25, 0x02	; 2
    2066:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    206a:	80 e0       	ldi	r24, 0x00	; 0
    206c:	90 e0       	ldi	r25, 0x00	; 0
    206e:	a8 e4       	ldi	r26, 0x48	; 72
    2070:	b3 e4       	ldi	r27, 0x43	; 67
    2072:	9e 01       	movw	r18, r28
    2074:	23 5c       	subi	r18, 0xC3	; 195
    2076:	3f 4f       	sbci	r19, 0xFF	; 255
    2078:	f9 01       	movw	r30, r18
    207a:	80 83       	st	Z, r24
    207c:	91 83       	std	Z+1, r25	; 0x01
    207e:	a2 83       	std	Z+2, r26	; 0x02
    2080:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2082:	8e 01       	movw	r16, r28
    2084:	0f 56       	subi	r16, 0x6F	; 111
    2086:	1e 4f       	sbci	r17, 0xFE	; 254
    2088:	20 e0       	ldi	r18, 0x00	; 0
    208a:	30 e0       	ldi	r19, 0x00	; 0
    208c:	4a e7       	ldi	r20, 0x7A	; 122
    208e:	55 e4       	ldi	r21, 0x45	; 69
    2090:	ce 01       	movw	r24, r28
    2092:	cd 96       	adiw	r24, 0x3d	; 61
    2094:	fc 01       	movw	r30, r24
    2096:	60 81       	ld	r22, Z
    2098:	71 81       	ldd	r23, Z+1	; 0x01
    209a:	82 81       	ldd	r24, Z+2	; 0x02
    209c:	93 81       	ldd	r25, Z+3	; 0x03
    209e:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    20a2:	dc 01       	movw	r26, r24
    20a4:	cb 01       	movw	r24, r22
    20a6:	f8 01       	movw	r30, r16
    20a8:	80 83       	st	Z, r24
    20aa:	91 83       	std	Z+1, r25	; 0x01
    20ac:	a2 83       	std	Z+2, r26	; 0x02
    20ae:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    20b0:	ce 01       	movw	r24, r28
    20b2:	8f 56       	subi	r24, 0x6F	; 111
    20b4:	9e 4f       	sbci	r25, 0xFE	; 254
    20b6:	20 e0       	ldi	r18, 0x00	; 0
    20b8:	30 e0       	ldi	r19, 0x00	; 0
    20ba:	40 e8       	ldi	r20, 0x80	; 128
    20bc:	5f e3       	ldi	r21, 0x3F	; 63
    20be:	fc 01       	movw	r30, r24
    20c0:	60 81       	ld	r22, Z
    20c2:	71 81       	ldd	r23, Z+1	; 0x01
    20c4:	82 81       	ldd	r24, Z+2	; 0x02
    20c6:	93 81       	ldd	r25, Z+3	; 0x03
    20c8:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    20cc:	88 23       	and	r24, r24
    20ce:	4c f4       	brge	.+18     	; 0x20e2 <__stack+0xfe3>
		__ticks = 1;
    20d0:	ce 01       	movw	r24, r28
    20d2:	8b 56       	subi	r24, 0x6B	; 107
    20d4:	9e 4f       	sbci	r25, 0xFE	; 254
    20d6:	21 e0       	ldi	r18, 0x01	; 1
    20d8:	30 e0       	ldi	r19, 0x00	; 0
    20da:	fc 01       	movw	r30, r24
    20dc:	31 83       	std	Z+1, r19	; 0x01
    20de:	20 83       	st	Z, r18
    20e0:	6c c0       	rjmp	.+216    	; 0x21ba <__stack+0x10bb>
	else if (__tmp > 65535)
    20e2:	ce 01       	movw	r24, r28
    20e4:	8f 56       	subi	r24, 0x6F	; 111
    20e6:	9e 4f       	sbci	r25, 0xFE	; 254
    20e8:	20 e0       	ldi	r18, 0x00	; 0
    20ea:	3f ef       	ldi	r19, 0xFF	; 255
    20ec:	4f e7       	ldi	r20, 0x7F	; 127
    20ee:	57 e4       	ldi	r21, 0x47	; 71
    20f0:	fc 01       	movw	r30, r24
    20f2:	60 81       	ld	r22, Z
    20f4:	71 81       	ldd	r23, Z+1	; 0x01
    20f6:	82 81       	ldd	r24, Z+2	; 0x02
    20f8:	93 81       	ldd	r25, Z+3	; 0x03
    20fa:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    20fe:	18 16       	cp	r1, r24
    2100:	0c f0       	brlt	.+2      	; 0x2104 <__stack+0x1005>
    2102:	49 c0       	rjmp	.+146    	; 0x2196 <__stack+0x1097>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2104:	20 e0       	ldi	r18, 0x00	; 0
    2106:	30 e0       	ldi	r19, 0x00	; 0
    2108:	40 e2       	ldi	r20, 0x20	; 32
    210a:	51 e4       	ldi	r21, 0x41	; 65
    210c:	ce 01       	movw	r24, r28
    210e:	cd 96       	adiw	r24, 0x3d	; 61
    2110:	fc 01       	movw	r30, r24
    2112:	60 81       	ld	r22, Z
    2114:	71 81       	ldd	r23, Z+1	; 0x01
    2116:	82 81       	ldd	r24, Z+2	; 0x02
    2118:	93 81       	ldd	r25, Z+3	; 0x03
    211a:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    211e:	dc 01       	movw	r26, r24
    2120:	cb 01       	movw	r24, r22
    2122:	8e 01       	movw	r16, r28
    2124:	0b 56       	subi	r16, 0x6B	; 107
    2126:	1e 4f       	sbci	r17, 0xFE	; 254
    2128:	bc 01       	movw	r22, r24
    212a:	cd 01       	movw	r24, r26
    212c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    2130:	dc 01       	movw	r26, r24
    2132:	cb 01       	movw	r24, r22
    2134:	f8 01       	movw	r30, r16
    2136:	91 83       	std	Z+1, r25	; 0x01
    2138:	80 83       	st	Z, r24
    213a:	24 c0       	rjmp	.+72     	; 0x2184 <__stack+0x1085>
    213c:	ce 01       	movw	r24, r28
    213e:	89 56       	subi	r24, 0x69	; 105
    2140:	9e 4f       	sbci	r25, 0xFE	; 254
    2142:	20 e9       	ldi	r18, 0x90	; 144
    2144:	31 e0       	ldi	r19, 0x01	; 1
    2146:	fc 01       	movw	r30, r24
    2148:	31 83       	std	Z+1, r19	; 0x01
    214a:	20 83       	st	Z, r18
    214c:	ce 01       	movw	r24, r28
    214e:	89 56       	subi	r24, 0x69	; 105
    2150:	9e 4f       	sbci	r25, 0xFE	; 254
    2152:	fc 01       	movw	r30, r24
    2154:	80 81       	ld	r24, Z
    2156:	91 81       	ldd	r25, Z+1	; 0x01
    2158:	01 97       	sbiw	r24, 0x01	; 1
    215a:	f1 f7       	brne	.-4      	; 0x2158 <__stack+0x1059>
    215c:	9e 01       	movw	r18, r28
    215e:	29 56       	subi	r18, 0x69	; 105
    2160:	3e 4f       	sbci	r19, 0xFE	; 254
    2162:	f9 01       	movw	r30, r18
    2164:	91 83       	std	Z+1, r25	; 0x01
    2166:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2168:	ce 01       	movw	r24, r28
    216a:	8b 56       	subi	r24, 0x6B	; 107
    216c:	9e 4f       	sbci	r25, 0xFE	; 254
    216e:	9e 01       	movw	r18, r28
    2170:	2b 56       	subi	r18, 0x6B	; 107
    2172:	3e 4f       	sbci	r19, 0xFE	; 254
    2174:	f9 01       	movw	r30, r18
    2176:	20 81       	ld	r18, Z
    2178:	31 81       	ldd	r19, Z+1	; 0x01
    217a:	21 50       	subi	r18, 0x01	; 1
    217c:	31 09       	sbc	r19, r1
    217e:	fc 01       	movw	r30, r24
    2180:	31 83       	std	Z+1, r19	; 0x01
    2182:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2184:	ce 01       	movw	r24, r28
    2186:	8b 56       	subi	r24, 0x6B	; 107
    2188:	9e 4f       	sbci	r25, 0xFE	; 254
    218a:	fc 01       	movw	r30, r24
    218c:	80 81       	ld	r24, Z
    218e:	91 81       	ldd	r25, Z+1	; 0x01
    2190:	89 2b       	or	r24, r25
    2192:	a1 f6       	brne	.-88     	; 0x213c <__stack+0x103d>
    2194:	2c c0       	rjmp	.+88     	; 0x21ee <__stack+0x10ef>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2196:	8e 01       	movw	r16, r28
    2198:	0b 56       	subi	r16, 0x6B	; 107
    219a:	1e 4f       	sbci	r17, 0xFE	; 254
    219c:	ce 01       	movw	r24, r28
    219e:	8f 56       	subi	r24, 0x6F	; 111
    21a0:	9e 4f       	sbci	r25, 0xFE	; 254
    21a2:	fc 01       	movw	r30, r24
    21a4:	60 81       	ld	r22, Z
    21a6:	71 81       	ldd	r23, Z+1	; 0x01
    21a8:	82 81       	ldd	r24, Z+2	; 0x02
    21aa:	93 81       	ldd	r25, Z+3	; 0x03
    21ac:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    21b0:	dc 01       	movw	r26, r24
    21b2:	cb 01       	movw	r24, r22
    21b4:	f8 01       	movw	r30, r16
    21b6:	91 83       	std	Z+1, r25	; 0x01
    21b8:	80 83       	st	Z, r24
    21ba:	ce 01       	movw	r24, r28
    21bc:	87 56       	subi	r24, 0x67	; 103
    21be:	9e 4f       	sbci	r25, 0xFE	; 254
    21c0:	9e 01       	movw	r18, r28
    21c2:	2b 56       	subi	r18, 0x6B	; 107
    21c4:	3e 4f       	sbci	r19, 0xFE	; 254
    21c6:	f9 01       	movw	r30, r18
    21c8:	20 81       	ld	r18, Z
    21ca:	31 81       	ldd	r19, Z+1	; 0x01
    21cc:	fc 01       	movw	r30, r24
    21ce:	31 83       	std	Z+1, r19	; 0x01
    21d0:	20 83       	st	Z, r18
    21d2:	ce 01       	movw	r24, r28
    21d4:	87 56       	subi	r24, 0x67	; 103
    21d6:	9e 4f       	sbci	r25, 0xFE	; 254
    21d8:	fc 01       	movw	r30, r24
    21da:	80 81       	ld	r24, Z
    21dc:	91 81       	ldd	r25, Z+1	; 0x01
    21de:	01 97       	sbiw	r24, 0x01	; 1
    21e0:	f1 f7       	brne	.-4      	; 0x21de <__stack+0x10df>
    21e2:	9e 01       	movw	r18, r28
    21e4:	27 56       	subi	r18, 0x67	; 103
    21e6:	3e 4f       	sbci	r19, 0xFE	; 254
    21e8:	f9 01       	movw	r30, r18
    21ea:	91 83       	std	Z+1, r25	; 0x01
    21ec:	80 83       	st	Z, r24
	_delay_ms(200);
	to_uARM("M2210 F760 T50\n");
    21ee:	8f e6       	ldi	r24, 0x6F	; 111
    21f0:	92 e0       	ldi	r25, 0x02	; 2
    21f2:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    21f6:	9e 01       	movw	r18, r28
    21f8:	2f 5b       	subi	r18, 0xBF	; 191
    21fa:	3f 4f       	sbci	r19, 0xFF	; 255
    21fc:	80 e0       	ldi	r24, 0x00	; 0
    21fe:	90 e0       	ldi	r25, 0x00	; 0
    2200:	a6 e1       	ldi	r26, 0x16	; 22
    2202:	b3 e4       	ldi	r27, 0x43	; 67
    2204:	f9 01       	movw	r30, r18
    2206:	80 83       	st	Z, r24
    2208:	91 83       	std	Z+1, r25	; 0x01
    220a:	a2 83       	std	Z+2, r26	; 0x02
    220c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    220e:	8e 01       	movw	r16, r28
    2210:	09 57       	subi	r16, 0x79	; 121
    2212:	1e 4f       	sbci	r17, 0xFE	; 254
    2214:	ce 01       	movw	r24, r28
    2216:	8f 5b       	subi	r24, 0xBF	; 191
    2218:	9f 4f       	sbci	r25, 0xFF	; 255
    221a:	20 e0       	ldi	r18, 0x00	; 0
    221c:	30 e0       	ldi	r19, 0x00	; 0
    221e:	4a e7       	ldi	r20, 0x7A	; 122
    2220:	55 e4       	ldi	r21, 0x45	; 69
    2222:	fc 01       	movw	r30, r24
    2224:	60 81       	ld	r22, Z
    2226:	71 81       	ldd	r23, Z+1	; 0x01
    2228:	82 81       	ldd	r24, Z+2	; 0x02
    222a:	93 81       	ldd	r25, Z+3	; 0x03
    222c:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    2230:	dc 01       	movw	r26, r24
    2232:	cb 01       	movw	r24, r22
    2234:	f8 01       	movw	r30, r16
    2236:	80 83       	st	Z, r24
    2238:	91 83       	std	Z+1, r25	; 0x01
    223a:	a2 83       	std	Z+2, r26	; 0x02
    223c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    223e:	ce 01       	movw	r24, r28
    2240:	89 57       	subi	r24, 0x79	; 121
    2242:	9e 4f       	sbci	r25, 0xFE	; 254
    2244:	20 e0       	ldi	r18, 0x00	; 0
    2246:	30 e0       	ldi	r19, 0x00	; 0
    2248:	40 e8       	ldi	r20, 0x80	; 128
    224a:	5f e3       	ldi	r21, 0x3F	; 63
    224c:	fc 01       	movw	r30, r24
    224e:	60 81       	ld	r22, Z
    2250:	71 81       	ldd	r23, Z+1	; 0x01
    2252:	82 81       	ldd	r24, Z+2	; 0x02
    2254:	93 81       	ldd	r25, Z+3	; 0x03
    2256:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    225a:	88 23       	and	r24, r24
    225c:	4c f4       	brge	.+18     	; 0x2270 <__stack+0x1171>
		__ticks = 1;
    225e:	ce 01       	movw	r24, r28
    2260:	85 57       	subi	r24, 0x75	; 117
    2262:	9e 4f       	sbci	r25, 0xFE	; 254
    2264:	21 e0       	ldi	r18, 0x01	; 1
    2266:	30 e0       	ldi	r19, 0x00	; 0
    2268:	fc 01       	movw	r30, r24
    226a:	31 83       	std	Z+1, r19	; 0x01
    226c:	20 83       	st	Z, r18
    226e:	6d c0       	rjmp	.+218    	; 0x234a <__stack+0x124b>
	else if (__tmp > 65535)
    2270:	ce 01       	movw	r24, r28
    2272:	89 57       	subi	r24, 0x79	; 121
    2274:	9e 4f       	sbci	r25, 0xFE	; 254
    2276:	20 e0       	ldi	r18, 0x00	; 0
    2278:	3f ef       	ldi	r19, 0xFF	; 255
    227a:	4f e7       	ldi	r20, 0x7F	; 127
    227c:	57 e4       	ldi	r21, 0x47	; 71
    227e:	fc 01       	movw	r30, r24
    2280:	60 81       	ld	r22, Z
    2282:	71 81       	ldd	r23, Z+1	; 0x01
    2284:	82 81       	ldd	r24, Z+2	; 0x02
    2286:	93 81       	ldd	r25, Z+3	; 0x03
    2288:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    228c:	18 16       	cp	r1, r24
    228e:	0c f0       	brlt	.+2      	; 0x2292 <__stack+0x1193>
    2290:	4a c0       	rjmp	.+148    	; 0x2326 <__stack+0x1227>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2292:	ce 01       	movw	r24, r28
    2294:	8f 5b       	subi	r24, 0xBF	; 191
    2296:	9f 4f       	sbci	r25, 0xFF	; 255
    2298:	20 e0       	ldi	r18, 0x00	; 0
    229a:	30 e0       	ldi	r19, 0x00	; 0
    229c:	40 e2       	ldi	r20, 0x20	; 32
    229e:	51 e4       	ldi	r21, 0x41	; 65
    22a0:	fc 01       	movw	r30, r24
    22a2:	60 81       	ld	r22, Z
    22a4:	71 81       	ldd	r23, Z+1	; 0x01
    22a6:	82 81       	ldd	r24, Z+2	; 0x02
    22a8:	93 81       	ldd	r25, Z+3	; 0x03
    22aa:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    22ae:	dc 01       	movw	r26, r24
    22b0:	cb 01       	movw	r24, r22
    22b2:	8e 01       	movw	r16, r28
    22b4:	05 57       	subi	r16, 0x75	; 117
    22b6:	1e 4f       	sbci	r17, 0xFE	; 254
    22b8:	bc 01       	movw	r22, r24
    22ba:	cd 01       	movw	r24, r26
    22bc:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    22c0:	dc 01       	movw	r26, r24
    22c2:	cb 01       	movw	r24, r22
    22c4:	f8 01       	movw	r30, r16
    22c6:	91 83       	std	Z+1, r25	; 0x01
    22c8:	80 83       	st	Z, r24
    22ca:	24 c0       	rjmp	.+72     	; 0x2314 <__stack+0x1215>
    22cc:	ce 01       	movw	r24, r28
    22ce:	83 57       	subi	r24, 0x73	; 115
    22d0:	9e 4f       	sbci	r25, 0xFE	; 254
    22d2:	20 e9       	ldi	r18, 0x90	; 144
    22d4:	31 e0       	ldi	r19, 0x01	; 1
    22d6:	fc 01       	movw	r30, r24
    22d8:	31 83       	std	Z+1, r19	; 0x01
    22da:	20 83       	st	Z, r18
    22dc:	ce 01       	movw	r24, r28
    22de:	83 57       	subi	r24, 0x73	; 115
    22e0:	9e 4f       	sbci	r25, 0xFE	; 254
    22e2:	fc 01       	movw	r30, r24
    22e4:	80 81       	ld	r24, Z
    22e6:	91 81       	ldd	r25, Z+1	; 0x01
    22e8:	01 97       	sbiw	r24, 0x01	; 1
    22ea:	f1 f7       	brne	.-4      	; 0x22e8 <__stack+0x11e9>
    22ec:	9e 01       	movw	r18, r28
    22ee:	23 57       	subi	r18, 0x73	; 115
    22f0:	3e 4f       	sbci	r19, 0xFE	; 254
    22f2:	f9 01       	movw	r30, r18
    22f4:	91 83       	std	Z+1, r25	; 0x01
    22f6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22f8:	ce 01       	movw	r24, r28
    22fa:	85 57       	subi	r24, 0x75	; 117
    22fc:	9e 4f       	sbci	r25, 0xFE	; 254
    22fe:	9e 01       	movw	r18, r28
    2300:	25 57       	subi	r18, 0x75	; 117
    2302:	3e 4f       	sbci	r19, 0xFE	; 254
    2304:	f9 01       	movw	r30, r18
    2306:	20 81       	ld	r18, Z
    2308:	31 81       	ldd	r19, Z+1	; 0x01
    230a:	21 50       	subi	r18, 0x01	; 1
    230c:	31 09       	sbc	r19, r1
    230e:	fc 01       	movw	r30, r24
    2310:	31 83       	std	Z+1, r19	; 0x01
    2312:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2314:	ce 01       	movw	r24, r28
    2316:	85 57       	subi	r24, 0x75	; 117
    2318:	9e 4f       	sbci	r25, 0xFE	; 254
    231a:	fc 01       	movw	r30, r24
    231c:	80 81       	ld	r24, Z
    231e:	91 81       	ldd	r25, Z+1	; 0x01
    2320:	89 2b       	or	r24, r25
    2322:	a1 f6       	brne	.-88     	; 0x22cc <__stack+0x11cd>
    2324:	2c c0       	rjmp	.+88     	; 0x237e <__stack+0x127f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2326:	8e 01       	movw	r16, r28
    2328:	05 57       	subi	r16, 0x75	; 117
    232a:	1e 4f       	sbci	r17, 0xFE	; 254
    232c:	ce 01       	movw	r24, r28
    232e:	89 57       	subi	r24, 0x79	; 121
    2330:	9e 4f       	sbci	r25, 0xFE	; 254
    2332:	fc 01       	movw	r30, r24
    2334:	60 81       	ld	r22, Z
    2336:	71 81       	ldd	r23, Z+1	; 0x01
    2338:	82 81       	ldd	r24, Z+2	; 0x02
    233a:	93 81       	ldd	r25, Z+3	; 0x03
    233c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    2340:	dc 01       	movw	r26, r24
    2342:	cb 01       	movw	r24, r22
    2344:	f8 01       	movw	r30, r16
    2346:	91 83       	std	Z+1, r25	; 0x01
    2348:	80 83       	st	Z, r24
    234a:	ce 01       	movw	r24, r28
    234c:	81 57       	subi	r24, 0x71	; 113
    234e:	9e 4f       	sbci	r25, 0xFE	; 254
    2350:	9e 01       	movw	r18, r28
    2352:	25 57       	subi	r18, 0x75	; 117
    2354:	3e 4f       	sbci	r19, 0xFE	; 254
    2356:	f9 01       	movw	r30, r18
    2358:	20 81       	ld	r18, Z
    235a:	31 81       	ldd	r19, Z+1	; 0x01
    235c:	fc 01       	movw	r30, r24
    235e:	31 83       	std	Z+1, r19	; 0x01
    2360:	20 83       	st	Z, r18
    2362:	ce 01       	movw	r24, r28
    2364:	81 57       	subi	r24, 0x71	; 113
    2366:	9e 4f       	sbci	r25, 0xFE	; 254
    2368:	fc 01       	movw	r30, r24
    236a:	80 81       	ld	r24, Z
    236c:	91 81       	ldd	r25, Z+1	; 0x01
    236e:	01 97       	sbiw	r24, 0x01	; 1
    2370:	f1 f7       	brne	.-4      	; 0x236e <__stack+0x126f>
    2372:	9e 01       	movw	r18, r28
    2374:	21 57       	subi	r18, 0x71	; 113
    2376:	3e 4f       	sbci	r19, 0xFE	; 254
    2378:	f9 01       	movw	r30, r18
    237a:	91 83       	std	Z+1, r25	; 0x01
    237c:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F860 T100\n");
    237e:	8f e7       	ldi	r24, 0x7F	; 127
    2380:	92 e0       	ldi	r25, 0x02	; 2
    2382:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    2386:	9e 01       	movw	r18, r28
    2388:	2b 5b       	subi	r18, 0xBB	; 187
    238a:	3f 4f       	sbci	r19, 0xFF	; 255
    238c:	80 e0       	ldi	r24, 0x00	; 0
    238e:	90 e0       	ldi	r25, 0x00	; 0
    2390:	a6 e9       	ldi	r26, 0x96	; 150
    2392:	b3 e4       	ldi	r27, 0x43	; 67
    2394:	f9 01       	movw	r30, r18
    2396:	80 83       	st	Z, r24
    2398:	91 83       	std	Z+1, r25	; 0x01
    239a:	a2 83       	std	Z+2, r26	; 0x02
    239c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    239e:	8e 01       	movw	r16, r28
    23a0:	03 58       	subi	r16, 0x83	; 131
    23a2:	1e 4f       	sbci	r17, 0xFE	; 254
    23a4:	ce 01       	movw	r24, r28
    23a6:	8b 5b       	subi	r24, 0xBB	; 187
    23a8:	9f 4f       	sbci	r25, 0xFF	; 255
    23aa:	20 e0       	ldi	r18, 0x00	; 0
    23ac:	30 e0       	ldi	r19, 0x00	; 0
    23ae:	4a e7       	ldi	r20, 0x7A	; 122
    23b0:	55 e4       	ldi	r21, 0x45	; 69
    23b2:	fc 01       	movw	r30, r24
    23b4:	60 81       	ld	r22, Z
    23b6:	71 81       	ldd	r23, Z+1	; 0x01
    23b8:	82 81       	ldd	r24, Z+2	; 0x02
    23ba:	93 81       	ldd	r25, Z+3	; 0x03
    23bc:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    23c0:	dc 01       	movw	r26, r24
    23c2:	cb 01       	movw	r24, r22
    23c4:	f8 01       	movw	r30, r16
    23c6:	80 83       	st	Z, r24
    23c8:	91 83       	std	Z+1, r25	; 0x01
    23ca:	a2 83       	std	Z+2, r26	; 0x02
    23cc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    23ce:	ce 01       	movw	r24, r28
    23d0:	83 58       	subi	r24, 0x83	; 131
    23d2:	9e 4f       	sbci	r25, 0xFE	; 254
    23d4:	20 e0       	ldi	r18, 0x00	; 0
    23d6:	30 e0       	ldi	r19, 0x00	; 0
    23d8:	40 e8       	ldi	r20, 0x80	; 128
    23da:	5f e3       	ldi	r21, 0x3F	; 63
    23dc:	fc 01       	movw	r30, r24
    23de:	60 81       	ld	r22, Z
    23e0:	71 81       	ldd	r23, Z+1	; 0x01
    23e2:	82 81       	ldd	r24, Z+2	; 0x02
    23e4:	93 81       	ldd	r25, Z+3	; 0x03
    23e6:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    23ea:	88 23       	and	r24, r24
    23ec:	4c f4       	brge	.+18     	; 0x2400 <__stack+0x1301>
		__ticks = 1;
    23ee:	ce 01       	movw	r24, r28
    23f0:	8f 57       	subi	r24, 0x7F	; 127
    23f2:	9e 4f       	sbci	r25, 0xFE	; 254
    23f4:	21 e0       	ldi	r18, 0x01	; 1
    23f6:	30 e0       	ldi	r19, 0x00	; 0
    23f8:	fc 01       	movw	r30, r24
    23fa:	31 83       	std	Z+1, r19	; 0x01
    23fc:	20 83       	st	Z, r18
    23fe:	6d c0       	rjmp	.+218    	; 0x24da <__stack+0x13db>
	else if (__tmp > 65535)
    2400:	ce 01       	movw	r24, r28
    2402:	83 58       	subi	r24, 0x83	; 131
    2404:	9e 4f       	sbci	r25, 0xFE	; 254
    2406:	20 e0       	ldi	r18, 0x00	; 0
    2408:	3f ef       	ldi	r19, 0xFF	; 255
    240a:	4f e7       	ldi	r20, 0x7F	; 127
    240c:	57 e4       	ldi	r21, 0x47	; 71
    240e:	fc 01       	movw	r30, r24
    2410:	60 81       	ld	r22, Z
    2412:	71 81       	ldd	r23, Z+1	; 0x01
    2414:	82 81       	ldd	r24, Z+2	; 0x02
    2416:	93 81       	ldd	r25, Z+3	; 0x03
    2418:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    241c:	18 16       	cp	r1, r24
    241e:	0c f0       	brlt	.+2      	; 0x2422 <__stack+0x1323>
    2420:	4a c0       	rjmp	.+148    	; 0x24b6 <__stack+0x13b7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2422:	ce 01       	movw	r24, r28
    2424:	8b 5b       	subi	r24, 0xBB	; 187
    2426:	9f 4f       	sbci	r25, 0xFF	; 255
    2428:	20 e0       	ldi	r18, 0x00	; 0
    242a:	30 e0       	ldi	r19, 0x00	; 0
    242c:	40 e2       	ldi	r20, 0x20	; 32
    242e:	51 e4       	ldi	r21, 0x41	; 65
    2430:	fc 01       	movw	r30, r24
    2432:	60 81       	ld	r22, Z
    2434:	71 81       	ldd	r23, Z+1	; 0x01
    2436:	82 81       	ldd	r24, Z+2	; 0x02
    2438:	93 81       	ldd	r25, Z+3	; 0x03
    243a:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    243e:	dc 01       	movw	r26, r24
    2440:	cb 01       	movw	r24, r22
    2442:	8e 01       	movw	r16, r28
    2444:	0f 57       	subi	r16, 0x7F	; 127
    2446:	1e 4f       	sbci	r17, 0xFE	; 254
    2448:	bc 01       	movw	r22, r24
    244a:	cd 01       	movw	r24, r26
    244c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    2450:	dc 01       	movw	r26, r24
    2452:	cb 01       	movw	r24, r22
    2454:	f8 01       	movw	r30, r16
    2456:	91 83       	std	Z+1, r25	; 0x01
    2458:	80 83       	st	Z, r24
    245a:	24 c0       	rjmp	.+72     	; 0x24a4 <__stack+0x13a5>
    245c:	ce 01       	movw	r24, r28
    245e:	8d 57       	subi	r24, 0x7D	; 125
    2460:	9e 4f       	sbci	r25, 0xFE	; 254
    2462:	20 e9       	ldi	r18, 0x90	; 144
    2464:	31 e0       	ldi	r19, 0x01	; 1
    2466:	fc 01       	movw	r30, r24
    2468:	31 83       	std	Z+1, r19	; 0x01
    246a:	20 83       	st	Z, r18
    246c:	ce 01       	movw	r24, r28
    246e:	8d 57       	subi	r24, 0x7D	; 125
    2470:	9e 4f       	sbci	r25, 0xFE	; 254
    2472:	fc 01       	movw	r30, r24
    2474:	80 81       	ld	r24, Z
    2476:	91 81       	ldd	r25, Z+1	; 0x01
    2478:	01 97       	sbiw	r24, 0x01	; 1
    247a:	f1 f7       	brne	.-4      	; 0x2478 <__stack+0x1379>
    247c:	9e 01       	movw	r18, r28
    247e:	2d 57       	subi	r18, 0x7D	; 125
    2480:	3e 4f       	sbci	r19, 0xFE	; 254
    2482:	f9 01       	movw	r30, r18
    2484:	91 83       	std	Z+1, r25	; 0x01
    2486:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2488:	ce 01       	movw	r24, r28
    248a:	8f 57       	subi	r24, 0x7F	; 127
    248c:	9e 4f       	sbci	r25, 0xFE	; 254
    248e:	9e 01       	movw	r18, r28
    2490:	2f 57       	subi	r18, 0x7F	; 127
    2492:	3e 4f       	sbci	r19, 0xFE	; 254
    2494:	f9 01       	movw	r30, r18
    2496:	20 81       	ld	r18, Z
    2498:	31 81       	ldd	r19, Z+1	; 0x01
    249a:	21 50       	subi	r18, 0x01	; 1
    249c:	31 09       	sbc	r19, r1
    249e:	fc 01       	movw	r30, r24
    24a0:	31 83       	std	Z+1, r19	; 0x01
    24a2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24a4:	ce 01       	movw	r24, r28
    24a6:	8f 57       	subi	r24, 0x7F	; 127
    24a8:	9e 4f       	sbci	r25, 0xFE	; 254
    24aa:	fc 01       	movw	r30, r24
    24ac:	80 81       	ld	r24, Z
    24ae:	91 81       	ldd	r25, Z+1	; 0x01
    24b0:	89 2b       	or	r24, r25
    24b2:	a1 f6       	brne	.-88     	; 0x245c <__stack+0x135d>
    24b4:	2c c0       	rjmp	.+88     	; 0x250e <__stack+0x140f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24b6:	8e 01       	movw	r16, r28
    24b8:	0f 57       	subi	r16, 0x7F	; 127
    24ba:	1e 4f       	sbci	r17, 0xFE	; 254
    24bc:	ce 01       	movw	r24, r28
    24be:	83 58       	subi	r24, 0x83	; 131
    24c0:	9e 4f       	sbci	r25, 0xFE	; 254
    24c2:	fc 01       	movw	r30, r24
    24c4:	60 81       	ld	r22, Z
    24c6:	71 81       	ldd	r23, Z+1	; 0x01
    24c8:	82 81       	ldd	r24, Z+2	; 0x02
    24ca:	93 81       	ldd	r25, Z+3	; 0x03
    24cc:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    24d0:	dc 01       	movw	r26, r24
    24d2:	cb 01       	movw	r24, r22
    24d4:	f8 01       	movw	r30, r16
    24d6:	91 83       	std	Z+1, r25	; 0x01
    24d8:	80 83       	st	Z, r24
    24da:	ce 01       	movw	r24, r28
    24dc:	8b 57       	subi	r24, 0x7B	; 123
    24de:	9e 4f       	sbci	r25, 0xFE	; 254
    24e0:	9e 01       	movw	r18, r28
    24e2:	2f 57       	subi	r18, 0x7F	; 127
    24e4:	3e 4f       	sbci	r19, 0xFE	; 254
    24e6:	f9 01       	movw	r30, r18
    24e8:	20 81       	ld	r18, Z
    24ea:	31 81       	ldd	r19, Z+1	; 0x01
    24ec:	fc 01       	movw	r30, r24
    24ee:	31 83       	std	Z+1, r19	; 0x01
    24f0:	20 83       	st	Z, r18
    24f2:	ce 01       	movw	r24, r28
    24f4:	8b 57       	subi	r24, 0x7B	; 123
    24f6:	9e 4f       	sbci	r25, 0xFE	; 254
    24f8:	fc 01       	movw	r30, r24
    24fa:	80 81       	ld	r24, Z
    24fc:	91 81       	ldd	r25, Z+1	; 0x01
    24fe:	01 97       	sbiw	r24, 0x01	; 1
    2500:	f1 f7       	brne	.-4      	; 0x24fe <__stack+0x13ff>
    2502:	9e 01       	movw	r18, r28
    2504:	2b 57       	subi	r18, 0x7B	; 123
    2506:	3e 4f       	sbci	r19, 0xFE	; 254
    2508:	f9 01       	movw	r30, r18
    250a:	91 83       	std	Z+1, r25	; 0x01
    250c:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 700 T80\n");
    250e:	80 e9       	ldi	r24, 0x90	; 144
    2510:	92 e0       	ldi	r25, 0x02	; 2
    2512:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    2516:	9e 01       	movw	r18, r28
    2518:	27 5b       	subi	r18, 0xB7	; 183
    251a:	3f 4f       	sbci	r19, 0xFF	; 255
    251c:	80 e0       	ldi	r24, 0x00	; 0
    251e:	90 e0       	ldi	r25, 0x00	; 0
    2520:	a6 e1       	ldi	r26, 0x16	; 22
    2522:	b3 e4       	ldi	r27, 0x43	; 67
    2524:	f9 01       	movw	r30, r18
    2526:	80 83       	st	Z, r24
    2528:	91 83       	std	Z+1, r25	; 0x01
    252a:	a2 83       	std	Z+2, r26	; 0x02
    252c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    252e:	8e 01       	movw	r16, r28
    2530:	0d 58       	subi	r16, 0x8D	; 141
    2532:	1e 4f       	sbci	r17, 0xFE	; 254
    2534:	ce 01       	movw	r24, r28
    2536:	87 5b       	subi	r24, 0xB7	; 183
    2538:	9f 4f       	sbci	r25, 0xFF	; 255
    253a:	20 e0       	ldi	r18, 0x00	; 0
    253c:	30 e0       	ldi	r19, 0x00	; 0
    253e:	4a e7       	ldi	r20, 0x7A	; 122
    2540:	55 e4       	ldi	r21, 0x45	; 69
    2542:	fc 01       	movw	r30, r24
    2544:	60 81       	ld	r22, Z
    2546:	71 81       	ldd	r23, Z+1	; 0x01
    2548:	82 81       	ldd	r24, Z+2	; 0x02
    254a:	93 81       	ldd	r25, Z+3	; 0x03
    254c:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    2550:	dc 01       	movw	r26, r24
    2552:	cb 01       	movw	r24, r22
    2554:	f8 01       	movw	r30, r16
    2556:	80 83       	st	Z, r24
    2558:	91 83       	std	Z+1, r25	; 0x01
    255a:	a2 83       	std	Z+2, r26	; 0x02
    255c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    255e:	ce 01       	movw	r24, r28
    2560:	8d 58       	subi	r24, 0x8D	; 141
    2562:	9e 4f       	sbci	r25, 0xFE	; 254
    2564:	20 e0       	ldi	r18, 0x00	; 0
    2566:	30 e0       	ldi	r19, 0x00	; 0
    2568:	40 e8       	ldi	r20, 0x80	; 128
    256a:	5f e3       	ldi	r21, 0x3F	; 63
    256c:	fc 01       	movw	r30, r24
    256e:	60 81       	ld	r22, Z
    2570:	71 81       	ldd	r23, Z+1	; 0x01
    2572:	82 81       	ldd	r24, Z+2	; 0x02
    2574:	93 81       	ldd	r25, Z+3	; 0x03
    2576:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    257a:	88 23       	and	r24, r24
    257c:	4c f4       	brge	.+18     	; 0x2590 <__stack+0x1491>
		__ticks = 1;
    257e:	ce 01       	movw	r24, r28
    2580:	89 58       	subi	r24, 0x89	; 137
    2582:	9e 4f       	sbci	r25, 0xFE	; 254
    2584:	21 e0       	ldi	r18, 0x01	; 1
    2586:	30 e0       	ldi	r19, 0x00	; 0
    2588:	fc 01       	movw	r30, r24
    258a:	31 83       	std	Z+1, r19	; 0x01
    258c:	20 83       	st	Z, r18
    258e:	6d c0       	rjmp	.+218    	; 0x266a <__stack+0x156b>
	else if (__tmp > 65535)
    2590:	ce 01       	movw	r24, r28
    2592:	8d 58       	subi	r24, 0x8D	; 141
    2594:	9e 4f       	sbci	r25, 0xFE	; 254
    2596:	20 e0       	ldi	r18, 0x00	; 0
    2598:	3f ef       	ldi	r19, 0xFF	; 255
    259a:	4f e7       	ldi	r20, 0x7F	; 127
    259c:	57 e4       	ldi	r21, 0x47	; 71
    259e:	fc 01       	movw	r30, r24
    25a0:	60 81       	ld	r22, Z
    25a2:	71 81       	ldd	r23, Z+1	; 0x01
    25a4:	82 81       	ldd	r24, Z+2	; 0x02
    25a6:	93 81       	ldd	r25, Z+3	; 0x03
    25a8:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    25ac:	18 16       	cp	r1, r24
    25ae:	0c f0       	brlt	.+2      	; 0x25b2 <__stack+0x14b3>
    25b0:	4a c0       	rjmp	.+148    	; 0x2646 <__stack+0x1547>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25b2:	ce 01       	movw	r24, r28
    25b4:	87 5b       	subi	r24, 0xB7	; 183
    25b6:	9f 4f       	sbci	r25, 0xFF	; 255
    25b8:	20 e0       	ldi	r18, 0x00	; 0
    25ba:	30 e0       	ldi	r19, 0x00	; 0
    25bc:	40 e2       	ldi	r20, 0x20	; 32
    25be:	51 e4       	ldi	r21, 0x41	; 65
    25c0:	fc 01       	movw	r30, r24
    25c2:	60 81       	ld	r22, Z
    25c4:	71 81       	ldd	r23, Z+1	; 0x01
    25c6:	82 81       	ldd	r24, Z+2	; 0x02
    25c8:	93 81       	ldd	r25, Z+3	; 0x03
    25ca:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    25ce:	dc 01       	movw	r26, r24
    25d0:	cb 01       	movw	r24, r22
    25d2:	8e 01       	movw	r16, r28
    25d4:	09 58       	subi	r16, 0x89	; 137
    25d6:	1e 4f       	sbci	r17, 0xFE	; 254
    25d8:	bc 01       	movw	r22, r24
    25da:	cd 01       	movw	r24, r26
    25dc:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    25e0:	dc 01       	movw	r26, r24
    25e2:	cb 01       	movw	r24, r22
    25e4:	f8 01       	movw	r30, r16
    25e6:	91 83       	std	Z+1, r25	; 0x01
    25e8:	80 83       	st	Z, r24
    25ea:	24 c0       	rjmp	.+72     	; 0x2634 <__stack+0x1535>
    25ec:	ce 01       	movw	r24, r28
    25ee:	87 58       	subi	r24, 0x87	; 135
    25f0:	9e 4f       	sbci	r25, 0xFE	; 254
    25f2:	20 e9       	ldi	r18, 0x90	; 144
    25f4:	31 e0       	ldi	r19, 0x01	; 1
    25f6:	fc 01       	movw	r30, r24
    25f8:	31 83       	std	Z+1, r19	; 0x01
    25fa:	20 83       	st	Z, r18
    25fc:	ce 01       	movw	r24, r28
    25fe:	87 58       	subi	r24, 0x87	; 135
    2600:	9e 4f       	sbci	r25, 0xFE	; 254
    2602:	fc 01       	movw	r30, r24
    2604:	80 81       	ld	r24, Z
    2606:	91 81       	ldd	r25, Z+1	; 0x01
    2608:	01 97       	sbiw	r24, 0x01	; 1
    260a:	f1 f7       	brne	.-4      	; 0x2608 <__stack+0x1509>
    260c:	9e 01       	movw	r18, r28
    260e:	27 58       	subi	r18, 0x87	; 135
    2610:	3e 4f       	sbci	r19, 0xFE	; 254
    2612:	f9 01       	movw	r30, r18
    2614:	91 83       	std	Z+1, r25	; 0x01
    2616:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2618:	ce 01       	movw	r24, r28
    261a:	89 58       	subi	r24, 0x89	; 137
    261c:	9e 4f       	sbci	r25, 0xFE	; 254
    261e:	9e 01       	movw	r18, r28
    2620:	29 58       	subi	r18, 0x89	; 137
    2622:	3e 4f       	sbci	r19, 0xFE	; 254
    2624:	f9 01       	movw	r30, r18
    2626:	20 81       	ld	r18, Z
    2628:	31 81       	ldd	r19, Z+1	; 0x01
    262a:	21 50       	subi	r18, 0x01	; 1
    262c:	31 09       	sbc	r19, r1
    262e:	fc 01       	movw	r30, r24
    2630:	31 83       	std	Z+1, r19	; 0x01
    2632:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2634:	ce 01       	movw	r24, r28
    2636:	89 58       	subi	r24, 0x89	; 137
    2638:	9e 4f       	sbci	r25, 0xFE	; 254
    263a:	fc 01       	movw	r30, r24
    263c:	80 81       	ld	r24, Z
    263e:	91 81       	ldd	r25, Z+1	; 0x01
    2640:	89 2b       	or	r24, r25
    2642:	a1 f6       	brne	.-88     	; 0x25ec <__stack+0x14ed>
    2644:	2c c0       	rjmp	.+88     	; 0x269e <__stack+0x159f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2646:	8e 01       	movw	r16, r28
    2648:	09 58       	subi	r16, 0x89	; 137
    264a:	1e 4f       	sbci	r17, 0xFE	; 254
    264c:	ce 01       	movw	r24, r28
    264e:	8d 58       	subi	r24, 0x8D	; 141
    2650:	9e 4f       	sbci	r25, 0xFE	; 254
    2652:	fc 01       	movw	r30, r24
    2654:	60 81       	ld	r22, Z
    2656:	71 81       	ldd	r23, Z+1	; 0x01
    2658:	82 81       	ldd	r24, Z+2	; 0x02
    265a:	93 81       	ldd	r25, Z+3	; 0x03
    265c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    2660:	dc 01       	movw	r26, r24
    2662:	cb 01       	movw	r24, r22
    2664:	f8 01       	movw	r30, r16
    2666:	91 83       	std	Z+1, r25	; 0x01
    2668:	80 83       	st	Z, r24
    266a:	ce 01       	movw	r24, r28
    266c:	85 58       	subi	r24, 0x85	; 133
    266e:	9e 4f       	sbci	r25, 0xFE	; 254
    2670:	9e 01       	movw	r18, r28
    2672:	29 58       	subi	r18, 0x89	; 137
    2674:	3e 4f       	sbci	r19, 0xFE	; 254
    2676:	f9 01       	movw	r30, r18
    2678:	20 81       	ld	r18, Z
    267a:	31 81       	ldd	r19, Z+1	; 0x01
    267c:	fc 01       	movw	r30, r24
    267e:	31 83       	std	Z+1, r19	; 0x01
    2680:	20 83       	st	Z, r18
    2682:	ce 01       	movw	r24, r28
    2684:	85 58       	subi	r24, 0x85	; 133
    2686:	9e 4f       	sbci	r25, 0xFE	; 254
    2688:	fc 01       	movw	r30, r24
    268a:	80 81       	ld	r24, Z
    268c:	91 81       	ldd	r25, Z+1	; 0x01
    268e:	01 97       	sbiw	r24, 0x01	; 1
    2690:	f1 f7       	brne	.-4      	; 0x268e <__stack+0x158f>
    2692:	9e 01       	movw	r18, r28
    2694:	25 58       	subi	r18, 0x85	; 133
    2696:	3e 4f       	sbci	r19, 0xFE	; 254
    2698:	f9 01       	movw	r30, r18
    269a:	91 83       	std	Z+1, r25	; 0x01
    269c:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F760 T50\n");
    269e:	8f e6       	ldi	r24, 0x6F	; 111
    26a0:	92 e0       	ldi	r25, 0x02	; 2
    26a2:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    26a6:	9e 01       	movw	r18, r28
    26a8:	23 5b       	subi	r18, 0xB3	; 179
    26aa:	3f 4f       	sbci	r19, 0xFF	; 255
    26ac:	80 e0       	ldi	r24, 0x00	; 0
    26ae:	90 e0       	ldi	r25, 0x00	; 0
    26b0:	af ea       	ldi	r26, 0xAF	; 175
    26b2:	b3 e4       	ldi	r27, 0x43	; 67
    26b4:	f9 01       	movw	r30, r18
    26b6:	80 83       	st	Z, r24
    26b8:	91 83       	std	Z+1, r25	; 0x01
    26ba:	a2 83       	std	Z+2, r26	; 0x02
    26bc:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    26be:	8e 01       	movw	r16, r28
    26c0:	07 59       	subi	r16, 0x97	; 151
    26c2:	1e 4f       	sbci	r17, 0xFE	; 254
    26c4:	ce 01       	movw	r24, r28
    26c6:	83 5b       	subi	r24, 0xB3	; 179
    26c8:	9f 4f       	sbci	r25, 0xFF	; 255
    26ca:	20 e0       	ldi	r18, 0x00	; 0
    26cc:	30 e0       	ldi	r19, 0x00	; 0
    26ce:	4a e7       	ldi	r20, 0x7A	; 122
    26d0:	55 e4       	ldi	r21, 0x45	; 69
    26d2:	fc 01       	movw	r30, r24
    26d4:	60 81       	ld	r22, Z
    26d6:	71 81       	ldd	r23, Z+1	; 0x01
    26d8:	82 81       	ldd	r24, Z+2	; 0x02
    26da:	93 81       	ldd	r25, Z+3	; 0x03
    26dc:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    26e0:	dc 01       	movw	r26, r24
    26e2:	cb 01       	movw	r24, r22
    26e4:	f8 01       	movw	r30, r16
    26e6:	80 83       	st	Z, r24
    26e8:	91 83       	std	Z+1, r25	; 0x01
    26ea:	a2 83       	std	Z+2, r26	; 0x02
    26ec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    26ee:	ce 01       	movw	r24, r28
    26f0:	87 59       	subi	r24, 0x97	; 151
    26f2:	9e 4f       	sbci	r25, 0xFE	; 254
    26f4:	20 e0       	ldi	r18, 0x00	; 0
    26f6:	30 e0       	ldi	r19, 0x00	; 0
    26f8:	40 e8       	ldi	r20, 0x80	; 128
    26fa:	5f e3       	ldi	r21, 0x3F	; 63
    26fc:	fc 01       	movw	r30, r24
    26fe:	60 81       	ld	r22, Z
    2700:	71 81       	ldd	r23, Z+1	; 0x01
    2702:	82 81       	ldd	r24, Z+2	; 0x02
    2704:	93 81       	ldd	r25, Z+3	; 0x03
    2706:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    270a:	88 23       	and	r24, r24
    270c:	4c f4       	brge	.+18     	; 0x2720 <__stack+0x1621>
		__ticks = 1;
    270e:	ce 01       	movw	r24, r28
    2710:	83 59       	subi	r24, 0x93	; 147
    2712:	9e 4f       	sbci	r25, 0xFE	; 254
    2714:	21 e0       	ldi	r18, 0x01	; 1
    2716:	30 e0       	ldi	r19, 0x00	; 0
    2718:	fc 01       	movw	r30, r24
    271a:	31 83       	std	Z+1, r19	; 0x01
    271c:	20 83       	st	Z, r18
    271e:	6d c0       	rjmp	.+218    	; 0x27fa <__stack+0x16fb>
	else if (__tmp > 65535)
    2720:	ce 01       	movw	r24, r28
    2722:	87 59       	subi	r24, 0x97	; 151
    2724:	9e 4f       	sbci	r25, 0xFE	; 254
    2726:	20 e0       	ldi	r18, 0x00	; 0
    2728:	3f ef       	ldi	r19, 0xFF	; 255
    272a:	4f e7       	ldi	r20, 0x7F	; 127
    272c:	57 e4       	ldi	r21, 0x47	; 71
    272e:	fc 01       	movw	r30, r24
    2730:	60 81       	ld	r22, Z
    2732:	71 81       	ldd	r23, Z+1	; 0x01
    2734:	82 81       	ldd	r24, Z+2	; 0x02
    2736:	93 81       	ldd	r25, Z+3	; 0x03
    2738:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    273c:	18 16       	cp	r1, r24
    273e:	0c f0       	brlt	.+2      	; 0x2742 <__stack+0x1643>
    2740:	4a c0       	rjmp	.+148    	; 0x27d6 <__stack+0x16d7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2742:	ce 01       	movw	r24, r28
    2744:	83 5b       	subi	r24, 0xB3	; 179
    2746:	9f 4f       	sbci	r25, 0xFF	; 255
    2748:	20 e0       	ldi	r18, 0x00	; 0
    274a:	30 e0       	ldi	r19, 0x00	; 0
    274c:	40 e2       	ldi	r20, 0x20	; 32
    274e:	51 e4       	ldi	r21, 0x41	; 65
    2750:	fc 01       	movw	r30, r24
    2752:	60 81       	ld	r22, Z
    2754:	71 81       	ldd	r23, Z+1	; 0x01
    2756:	82 81       	ldd	r24, Z+2	; 0x02
    2758:	93 81       	ldd	r25, Z+3	; 0x03
    275a:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    275e:	dc 01       	movw	r26, r24
    2760:	cb 01       	movw	r24, r22
    2762:	8e 01       	movw	r16, r28
    2764:	03 59       	subi	r16, 0x93	; 147
    2766:	1e 4f       	sbci	r17, 0xFE	; 254
    2768:	bc 01       	movw	r22, r24
    276a:	cd 01       	movw	r24, r26
    276c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    2770:	dc 01       	movw	r26, r24
    2772:	cb 01       	movw	r24, r22
    2774:	f8 01       	movw	r30, r16
    2776:	91 83       	std	Z+1, r25	; 0x01
    2778:	80 83       	st	Z, r24
    277a:	24 c0       	rjmp	.+72     	; 0x27c4 <__stack+0x16c5>
    277c:	ce 01       	movw	r24, r28
    277e:	81 59       	subi	r24, 0x91	; 145
    2780:	9e 4f       	sbci	r25, 0xFE	; 254
    2782:	20 e9       	ldi	r18, 0x90	; 144
    2784:	31 e0       	ldi	r19, 0x01	; 1
    2786:	fc 01       	movw	r30, r24
    2788:	31 83       	std	Z+1, r19	; 0x01
    278a:	20 83       	st	Z, r18
    278c:	ce 01       	movw	r24, r28
    278e:	81 59       	subi	r24, 0x91	; 145
    2790:	9e 4f       	sbci	r25, 0xFE	; 254
    2792:	fc 01       	movw	r30, r24
    2794:	80 81       	ld	r24, Z
    2796:	91 81       	ldd	r25, Z+1	; 0x01
    2798:	01 97       	sbiw	r24, 0x01	; 1
    279a:	f1 f7       	brne	.-4      	; 0x2798 <__stack+0x1699>
    279c:	9e 01       	movw	r18, r28
    279e:	21 59       	subi	r18, 0x91	; 145
    27a0:	3e 4f       	sbci	r19, 0xFE	; 254
    27a2:	f9 01       	movw	r30, r18
    27a4:	91 83       	std	Z+1, r25	; 0x01
    27a6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    27a8:	ce 01       	movw	r24, r28
    27aa:	83 59       	subi	r24, 0x93	; 147
    27ac:	9e 4f       	sbci	r25, 0xFE	; 254
    27ae:	9e 01       	movw	r18, r28
    27b0:	23 59       	subi	r18, 0x93	; 147
    27b2:	3e 4f       	sbci	r19, 0xFE	; 254
    27b4:	f9 01       	movw	r30, r18
    27b6:	20 81       	ld	r18, Z
    27b8:	31 81       	ldd	r19, Z+1	; 0x01
    27ba:	21 50       	subi	r18, 0x01	; 1
    27bc:	31 09       	sbc	r19, r1
    27be:	fc 01       	movw	r30, r24
    27c0:	31 83       	std	Z+1, r19	; 0x01
    27c2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27c4:	ce 01       	movw	r24, r28
    27c6:	83 59       	subi	r24, 0x93	; 147
    27c8:	9e 4f       	sbci	r25, 0xFE	; 254
    27ca:	fc 01       	movw	r30, r24
    27cc:	80 81       	ld	r24, Z
    27ce:	91 81       	ldd	r25, Z+1	; 0x01
    27d0:	89 2b       	or	r24, r25
    27d2:	a1 f6       	brne	.-88     	; 0x277c <__stack+0x167d>
    27d4:	2c c0       	rjmp	.+88     	; 0x282e <__stack+0x172f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27d6:	8e 01       	movw	r16, r28
    27d8:	03 59       	subi	r16, 0x93	; 147
    27da:	1e 4f       	sbci	r17, 0xFE	; 254
    27dc:	ce 01       	movw	r24, r28
    27de:	87 59       	subi	r24, 0x97	; 151
    27e0:	9e 4f       	sbci	r25, 0xFE	; 254
    27e2:	fc 01       	movw	r30, r24
    27e4:	60 81       	ld	r22, Z
    27e6:	71 81       	ldd	r23, Z+1	; 0x01
    27e8:	82 81       	ldd	r24, Z+2	; 0x02
    27ea:	93 81       	ldd	r25, Z+3	; 0x03
    27ec:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    27f0:	dc 01       	movw	r26, r24
    27f2:	cb 01       	movw	r24, r22
    27f4:	f8 01       	movw	r30, r16
    27f6:	91 83       	std	Z+1, r25	; 0x01
    27f8:	80 83       	st	Z, r24
    27fa:	ce 01       	movw	r24, r28
    27fc:	8f 58       	subi	r24, 0x8F	; 143
    27fe:	9e 4f       	sbci	r25, 0xFE	; 254
    2800:	9e 01       	movw	r18, r28
    2802:	23 59       	subi	r18, 0x93	; 147
    2804:	3e 4f       	sbci	r19, 0xFE	; 254
    2806:	f9 01       	movw	r30, r18
    2808:	20 81       	ld	r18, Z
    280a:	31 81       	ldd	r19, Z+1	; 0x01
    280c:	fc 01       	movw	r30, r24
    280e:	31 83       	std	Z+1, r19	; 0x01
    2810:	20 83       	st	Z, r18
    2812:	ce 01       	movw	r24, r28
    2814:	8f 58       	subi	r24, 0x8F	; 143
    2816:	9e 4f       	sbci	r25, 0xFE	; 254
    2818:	fc 01       	movw	r30, r24
    281a:	80 81       	ld	r24, Z
    281c:	91 81       	ldd	r25, Z+1	; 0x01
    281e:	01 97       	sbiw	r24, 0x01	; 1
    2820:	f1 f7       	brne	.-4      	; 0x281e <__stack+0x171f>
    2822:	9e 01       	movw	r18, r28
    2824:	2f 58       	subi	r18, 0x8F	; 143
    2826:	3e 4f       	sbci	r19, 0xFE	; 254
    2828:	f9 01       	movw	r30, r18
    282a:	91 83       	std	Z+1, r25	; 0x01
    282c:	80 83       	st	Z, r24
	_delay_ms(350);
	to_uARM("M2210 F660 T80\n");
    282e:	8f e5       	ldi	r24, 0x5F	; 95
    2830:	92 e0       	ldi	r25, 0x02	; 2
    2832:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    2836:	9e 01       	movw	r18, r28
    2838:	2f 5a       	subi	r18, 0xAF	; 175
    283a:	3f 4f       	sbci	r19, 0xFF	; 255
    283c:	80 e0       	ldi	r24, 0x00	; 0
    283e:	90 e0       	ldi	r25, 0x00	; 0
    2840:	a6 e9       	ldi	r26, 0x96	; 150
    2842:	b3 e4       	ldi	r27, 0x43	; 67
    2844:	f9 01       	movw	r30, r18
    2846:	80 83       	st	Z, r24
    2848:	91 83       	std	Z+1, r25	; 0x01
    284a:	a2 83       	std	Z+2, r26	; 0x02
    284c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    284e:	8e 01       	movw	r16, r28
    2850:	01 5a       	subi	r16, 0xA1	; 161
    2852:	1e 4f       	sbci	r17, 0xFE	; 254
    2854:	ce 01       	movw	r24, r28
    2856:	8f 5a       	subi	r24, 0xAF	; 175
    2858:	9f 4f       	sbci	r25, 0xFF	; 255
    285a:	20 e0       	ldi	r18, 0x00	; 0
    285c:	30 e0       	ldi	r19, 0x00	; 0
    285e:	4a e7       	ldi	r20, 0x7A	; 122
    2860:	55 e4       	ldi	r21, 0x45	; 69
    2862:	fc 01       	movw	r30, r24
    2864:	60 81       	ld	r22, Z
    2866:	71 81       	ldd	r23, Z+1	; 0x01
    2868:	82 81       	ldd	r24, Z+2	; 0x02
    286a:	93 81       	ldd	r25, Z+3	; 0x03
    286c:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    2870:	dc 01       	movw	r26, r24
    2872:	cb 01       	movw	r24, r22
    2874:	f8 01       	movw	r30, r16
    2876:	80 83       	st	Z, r24
    2878:	91 83       	std	Z+1, r25	; 0x01
    287a:	a2 83       	std	Z+2, r26	; 0x02
    287c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    287e:	ce 01       	movw	r24, r28
    2880:	81 5a       	subi	r24, 0xA1	; 161
    2882:	9e 4f       	sbci	r25, 0xFE	; 254
    2884:	20 e0       	ldi	r18, 0x00	; 0
    2886:	30 e0       	ldi	r19, 0x00	; 0
    2888:	40 e8       	ldi	r20, 0x80	; 128
    288a:	5f e3       	ldi	r21, 0x3F	; 63
    288c:	fc 01       	movw	r30, r24
    288e:	60 81       	ld	r22, Z
    2890:	71 81       	ldd	r23, Z+1	; 0x01
    2892:	82 81       	ldd	r24, Z+2	; 0x02
    2894:	93 81       	ldd	r25, Z+3	; 0x03
    2896:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    289a:	88 23       	and	r24, r24
    289c:	4c f4       	brge	.+18     	; 0x28b0 <__stack+0x17b1>
		__ticks = 1;
    289e:	ce 01       	movw	r24, r28
    28a0:	8d 59       	subi	r24, 0x9D	; 157
    28a2:	9e 4f       	sbci	r25, 0xFE	; 254
    28a4:	21 e0       	ldi	r18, 0x01	; 1
    28a6:	30 e0       	ldi	r19, 0x00	; 0
    28a8:	fc 01       	movw	r30, r24
    28aa:	31 83       	std	Z+1, r19	; 0x01
    28ac:	20 83       	st	Z, r18
    28ae:	6d c0       	rjmp	.+218    	; 0x298a <__stack+0x188b>
	else if (__tmp > 65535)
    28b0:	ce 01       	movw	r24, r28
    28b2:	81 5a       	subi	r24, 0xA1	; 161
    28b4:	9e 4f       	sbci	r25, 0xFE	; 254
    28b6:	20 e0       	ldi	r18, 0x00	; 0
    28b8:	3f ef       	ldi	r19, 0xFF	; 255
    28ba:	4f e7       	ldi	r20, 0x7F	; 127
    28bc:	57 e4       	ldi	r21, 0x47	; 71
    28be:	fc 01       	movw	r30, r24
    28c0:	60 81       	ld	r22, Z
    28c2:	71 81       	ldd	r23, Z+1	; 0x01
    28c4:	82 81       	ldd	r24, Z+2	; 0x02
    28c6:	93 81       	ldd	r25, Z+3	; 0x03
    28c8:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    28cc:	18 16       	cp	r1, r24
    28ce:	0c f0       	brlt	.+2      	; 0x28d2 <__stack+0x17d3>
    28d0:	4a c0       	rjmp	.+148    	; 0x2966 <__stack+0x1867>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    28d2:	ce 01       	movw	r24, r28
    28d4:	8f 5a       	subi	r24, 0xAF	; 175
    28d6:	9f 4f       	sbci	r25, 0xFF	; 255
    28d8:	20 e0       	ldi	r18, 0x00	; 0
    28da:	30 e0       	ldi	r19, 0x00	; 0
    28dc:	40 e2       	ldi	r20, 0x20	; 32
    28de:	51 e4       	ldi	r21, 0x41	; 65
    28e0:	fc 01       	movw	r30, r24
    28e2:	60 81       	ld	r22, Z
    28e4:	71 81       	ldd	r23, Z+1	; 0x01
    28e6:	82 81       	ldd	r24, Z+2	; 0x02
    28e8:	93 81       	ldd	r25, Z+3	; 0x03
    28ea:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    28ee:	dc 01       	movw	r26, r24
    28f0:	cb 01       	movw	r24, r22
    28f2:	8e 01       	movw	r16, r28
    28f4:	0d 59       	subi	r16, 0x9D	; 157
    28f6:	1e 4f       	sbci	r17, 0xFE	; 254
    28f8:	bc 01       	movw	r22, r24
    28fa:	cd 01       	movw	r24, r26
    28fc:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    2900:	dc 01       	movw	r26, r24
    2902:	cb 01       	movw	r24, r22
    2904:	f8 01       	movw	r30, r16
    2906:	91 83       	std	Z+1, r25	; 0x01
    2908:	80 83       	st	Z, r24
    290a:	24 c0       	rjmp	.+72     	; 0x2954 <__stack+0x1855>
    290c:	ce 01       	movw	r24, r28
    290e:	8b 59       	subi	r24, 0x9B	; 155
    2910:	9e 4f       	sbci	r25, 0xFE	; 254
    2912:	20 e9       	ldi	r18, 0x90	; 144
    2914:	31 e0       	ldi	r19, 0x01	; 1
    2916:	fc 01       	movw	r30, r24
    2918:	31 83       	std	Z+1, r19	; 0x01
    291a:	20 83       	st	Z, r18
    291c:	ce 01       	movw	r24, r28
    291e:	8b 59       	subi	r24, 0x9B	; 155
    2920:	9e 4f       	sbci	r25, 0xFE	; 254
    2922:	fc 01       	movw	r30, r24
    2924:	80 81       	ld	r24, Z
    2926:	91 81       	ldd	r25, Z+1	; 0x01
    2928:	01 97       	sbiw	r24, 0x01	; 1
    292a:	f1 f7       	brne	.-4      	; 0x2928 <__stack+0x1829>
    292c:	9e 01       	movw	r18, r28
    292e:	2b 59       	subi	r18, 0x9B	; 155
    2930:	3e 4f       	sbci	r19, 0xFE	; 254
    2932:	f9 01       	movw	r30, r18
    2934:	91 83       	std	Z+1, r25	; 0x01
    2936:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2938:	ce 01       	movw	r24, r28
    293a:	8d 59       	subi	r24, 0x9D	; 157
    293c:	9e 4f       	sbci	r25, 0xFE	; 254
    293e:	9e 01       	movw	r18, r28
    2940:	2d 59       	subi	r18, 0x9D	; 157
    2942:	3e 4f       	sbci	r19, 0xFE	; 254
    2944:	f9 01       	movw	r30, r18
    2946:	20 81       	ld	r18, Z
    2948:	31 81       	ldd	r19, Z+1	; 0x01
    294a:	21 50       	subi	r18, 0x01	; 1
    294c:	31 09       	sbc	r19, r1
    294e:	fc 01       	movw	r30, r24
    2950:	31 83       	std	Z+1, r19	; 0x01
    2952:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2954:	ce 01       	movw	r24, r28
    2956:	8d 59       	subi	r24, 0x9D	; 157
    2958:	9e 4f       	sbci	r25, 0xFE	; 254
    295a:	fc 01       	movw	r30, r24
    295c:	80 81       	ld	r24, Z
    295e:	91 81       	ldd	r25, Z+1	; 0x01
    2960:	89 2b       	or	r24, r25
    2962:	a1 f6       	brne	.-88     	; 0x290c <__stack+0x180d>
    2964:	2c c0       	rjmp	.+88     	; 0x29be <__stack+0x18bf>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2966:	8e 01       	movw	r16, r28
    2968:	0d 59       	subi	r16, 0x9D	; 157
    296a:	1e 4f       	sbci	r17, 0xFE	; 254
    296c:	ce 01       	movw	r24, r28
    296e:	81 5a       	subi	r24, 0xA1	; 161
    2970:	9e 4f       	sbci	r25, 0xFE	; 254
    2972:	fc 01       	movw	r30, r24
    2974:	60 81       	ld	r22, Z
    2976:	71 81       	ldd	r23, Z+1	; 0x01
    2978:	82 81       	ldd	r24, Z+2	; 0x02
    297a:	93 81       	ldd	r25, Z+3	; 0x03
    297c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    2980:	dc 01       	movw	r26, r24
    2982:	cb 01       	movw	r24, r22
    2984:	f8 01       	movw	r30, r16
    2986:	91 83       	std	Z+1, r25	; 0x01
    2988:	80 83       	st	Z, r24
    298a:	ce 01       	movw	r24, r28
    298c:	89 59       	subi	r24, 0x99	; 153
    298e:	9e 4f       	sbci	r25, 0xFE	; 254
    2990:	9e 01       	movw	r18, r28
    2992:	2d 59       	subi	r18, 0x9D	; 157
    2994:	3e 4f       	sbci	r19, 0xFE	; 254
    2996:	f9 01       	movw	r30, r18
    2998:	20 81       	ld	r18, Z
    299a:	31 81       	ldd	r19, Z+1	; 0x01
    299c:	fc 01       	movw	r30, r24
    299e:	31 83       	std	Z+1, r19	; 0x01
    29a0:	20 83       	st	Z, r18
    29a2:	ce 01       	movw	r24, r28
    29a4:	89 59       	subi	r24, 0x99	; 153
    29a6:	9e 4f       	sbci	r25, 0xFE	; 254
    29a8:	fc 01       	movw	r30, r24
    29aa:	80 81       	ld	r24, Z
    29ac:	91 81       	ldd	r25, Z+1	; 0x01
    29ae:	01 97       	sbiw	r24, 0x01	; 1
    29b0:	f1 f7       	brne	.-4      	; 0x29ae <__stack+0x18af>
    29b2:	9e 01       	movw	r18, r28
    29b4:	29 59       	subi	r18, 0x99	; 153
    29b6:	3e 4f       	sbci	r19, 0xFE	; 254
    29b8:	f9 01       	movw	r30, r18
    29ba:	91 83       	std	Z+1, r25	; 0x01
    29bc:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F520 T80\n");
    29be:	8f e9       	ldi	r24, 0x9F	; 159
    29c0:	92 e0       	ldi	r25, 0x02	; 2
    29c2:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    29c6:	9e 01       	movw	r18, r28
    29c8:	2b 5a       	subi	r18, 0xAB	; 171
    29ca:	3f 4f       	sbci	r19, 0xFF	; 255
    29cc:	80 e0       	ldi	r24, 0x00	; 0
    29ce:	90 e0       	ldi	r25, 0x00	; 0
    29d0:	a6 e1       	ldi	r26, 0x16	; 22
    29d2:	b3 e4       	ldi	r27, 0x43	; 67
    29d4:	f9 01       	movw	r30, r18
    29d6:	80 83       	st	Z, r24
    29d8:	91 83       	std	Z+1, r25	; 0x01
    29da:	a2 83       	std	Z+2, r26	; 0x02
    29dc:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    29de:	8e 01       	movw	r16, r28
    29e0:	0b 5a       	subi	r16, 0xAB	; 171
    29e2:	1e 4f       	sbci	r17, 0xFE	; 254
    29e4:	ce 01       	movw	r24, r28
    29e6:	8b 5a       	subi	r24, 0xAB	; 171
    29e8:	9f 4f       	sbci	r25, 0xFF	; 255
    29ea:	20 e0       	ldi	r18, 0x00	; 0
    29ec:	30 e0       	ldi	r19, 0x00	; 0
    29ee:	4a e7       	ldi	r20, 0x7A	; 122
    29f0:	55 e4       	ldi	r21, 0x45	; 69
    29f2:	fc 01       	movw	r30, r24
    29f4:	60 81       	ld	r22, Z
    29f6:	71 81       	ldd	r23, Z+1	; 0x01
    29f8:	82 81       	ldd	r24, Z+2	; 0x02
    29fa:	93 81       	ldd	r25, Z+3	; 0x03
    29fc:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    2a00:	dc 01       	movw	r26, r24
    2a02:	cb 01       	movw	r24, r22
    2a04:	f8 01       	movw	r30, r16
    2a06:	80 83       	st	Z, r24
    2a08:	91 83       	std	Z+1, r25	; 0x01
    2a0a:	a2 83       	std	Z+2, r26	; 0x02
    2a0c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2a0e:	ce 01       	movw	r24, r28
    2a10:	8b 5a       	subi	r24, 0xAB	; 171
    2a12:	9e 4f       	sbci	r25, 0xFE	; 254
    2a14:	20 e0       	ldi	r18, 0x00	; 0
    2a16:	30 e0       	ldi	r19, 0x00	; 0
    2a18:	40 e8       	ldi	r20, 0x80	; 128
    2a1a:	5f e3       	ldi	r21, 0x3F	; 63
    2a1c:	fc 01       	movw	r30, r24
    2a1e:	60 81       	ld	r22, Z
    2a20:	71 81       	ldd	r23, Z+1	; 0x01
    2a22:	82 81       	ldd	r24, Z+2	; 0x02
    2a24:	93 81       	ldd	r25, Z+3	; 0x03
    2a26:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    2a2a:	88 23       	and	r24, r24
    2a2c:	4c f4       	brge	.+18     	; 0x2a40 <__stack+0x1941>
		__ticks = 1;
    2a2e:	ce 01       	movw	r24, r28
    2a30:	87 5a       	subi	r24, 0xA7	; 167
    2a32:	9e 4f       	sbci	r25, 0xFE	; 254
    2a34:	21 e0       	ldi	r18, 0x01	; 1
    2a36:	30 e0       	ldi	r19, 0x00	; 0
    2a38:	fc 01       	movw	r30, r24
    2a3a:	31 83       	std	Z+1, r19	; 0x01
    2a3c:	20 83       	st	Z, r18
    2a3e:	6d c0       	rjmp	.+218    	; 0x2b1a <__stack+0x1a1b>
	else if (__tmp > 65535)
    2a40:	ce 01       	movw	r24, r28
    2a42:	8b 5a       	subi	r24, 0xAB	; 171
    2a44:	9e 4f       	sbci	r25, 0xFE	; 254
    2a46:	20 e0       	ldi	r18, 0x00	; 0
    2a48:	3f ef       	ldi	r19, 0xFF	; 255
    2a4a:	4f e7       	ldi	r20, 0x7F	; 127
    2a4c:	57 e4       	ldi	r21, 0x47	; 71
    2a4e:	fc 01       	movw	r30, r24
    2a50:	60 81       	ld	r22, Z
    2a52:	71 81       	ldd	r23, Z+1	; 0x01
    2a54:	82 81       	ldd	r24, Z+2	; 0x02
    2a56:	93 81       	ldd	r25, Z+3	; 0x03
    2a58:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    2a5c:	18 16       	cp	r1, r24
    2a5e:	0c f0       	brlt	.+2      	; 0x2a62 <__stack+0x1963>
    2a60:	4a c0       	rjmp	.+148    	; 0x2af6 <__stack+0x19f7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a62:	ce 01       	movw	r24, r28
    2a64:	8b 5a       	subi	r24, 0xAB	; 171
    2a66:	9f 4f       	sbci	r25, 0xFF	; 255
    2a68:	20 e0       	ldi	r18, 0x00	; 0
    2a6a:	30 e0       	ldi	r19, 0x00	; 0
    2a6c:	40 e2       	ldi	r20, 0x20	; 32
    2a6e:	51 e4       	ldi	r21, 0x41	; 65
    2a70:	fc 01       	movw	r30, r24
    2a72:	60 81       	ld	r22, Z
    2a74:	71 81       	ldd	r23, Z+1	; 0x01
    2a76:	82 81       	ldd	r24, Z+2	; 0x02
    2a78:	93 81       	ldd	r25, Z+3	; 0x03
    2a7a:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    2a7e:	dc 01       	movw	r26, r24
    2a80:	cb 01       	movw	r24, r22
    2a82:	8e 01       	movw	r16, r28
    2a84:	07 5a       	subi	r16, 0xA7	; 167
    2a86:	1e 4f       	sbci	r17, 0xFE	; 254
    2a88:	bc 01       	movw	r22, r24
    2a8a:	cd 01       	movw	r24, r26
    2a8c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    2a90:	dc 01       	movw	r26, r24
    2a92:	cb 01       	movw	r24, r22
    2a94:	f8 01       	movw	r30, r16
    2a96:	91 83       	std	Z+1, r25	; 0x01
    2a98:	80 83       	st	Z, r24
    2a9a:	24 c0       	rjmp	.+72     	; 0x2ae4 <__stack+0x19e5>
    2a9c:	ce 01       	movw	r24, r28
    2a9e:	85 5a       	subi	r24, 0xA5	; 165
    2aa0:	9e 4f       	sbci	r25, 0xFE	; 254
    2aa2:	20 e9       	ldi	r18, 0x90	; 144
    2aa4:	31 e0       	ldi	r19, 0x01	; 1
    2aa6:	fc 01       	movw	r30, r24
    2aa8:	31 83       	std	Z+1, r19	; 0x01
    2aaa:	20 83       	st	Z, r18
    2aac:	ce 01       	movw	r24, r28
    2aae:	85 5a       	subi	r24, 0xA5	; 165
    2ab0:	9e 4f       	sbci	r25, 0xFE	; 254
    2ab2:	fc 01       	movw	r30, r24
    2ab4:	80 81       	ld	r24, Z
    2ab6:	91 81       	ldd	r25, Z+1	; 0x01
    2ab8:	01 97       	sbiw	r24, 0x01	; 1
    2aba:	f1 f7       	brne	.-4      	; 0x2ab8 <__stack+0x19b9>
    2abc:	9e 01       	movw	r18, r28
    2abe:	25 5a       	subi	r18, 0xA5	; 165
    2ac0:	3e 4f       	sbci	r19, 0xFE	; 254
    2ac2:	f9 01       	movw	r30, r18
    2ac4:	91 83       	std	Z+1, r25	; 0x01
    2ac6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ac8:	ce 01       	movw	r24, r28
    2aca:	87 5a       	subi	r24, 0xA7	; 167
    2acc:	9e 4f       	sbci	r25, 0xFE	; 254
    2ace:	9e 01       	movw	r18, r28
    2ad0:	27 5a       	subi	r18, 0xA7	; 167
    2ad2:	3e 4f       	sbci	r19, 0xFE	; 254
    2ad4:	f9 01       	movw	r30, r18
    2ad6:	20 81       	ld	r18, Z
    2ad8:	31 81       	ldd	r19, Z+1	; 0x01
    2ada:	21 50       	subi	r18, 0x01	; 1
    2adc:	31 09       	sbc	r19, r1
    2ade:	fc 01       	movw	r30, r24
    2ae0:	31 83       	std	Z+1, r19	; 0x01
    2ae2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ae4:	ce 01       	movw	r24, r28
    2ae6:	87 5a       	subi	r24, 0xA7	; 167
    2ae8:	9e 4f       	sbci	r25, 0xFE	; 254
    2aea:	fc 01       	movw	r30, r24
    2aec:	80 81       	ld	r24, Z
    2aee:	91 81       	ldd	r25, Z+1	; 0x01
    2af0:	89 2b       	or	r24, r25
    2af2:	a1 f6       	brne	.-88     	; 0x2a9c <__stack+0x199d>
    2af4:	2c c0       	rjmp	.+88     	; 0x2b4e <__stack+0x1a4f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2af6:	8e 01       	movw	r16, r28
    2af8:	07 5a       	subi	r16, 0xA7	; 167
    2afa:	1e 4f       	sbci	r17, 0xFE	; 254
    2afc:	ce 01       	movw	r24, r28
    2afe:	8b 5a       	subi	r24, 0xAB	; 171
    2b00:	9e 4f       	sbci	r25, 0xFE	; 254
    2b02:	fc 01       	movw	r30, r24
    2b04:	60 81       	ld	r22, Z
    2b06:	71 81       	ldd	r23, Z+1	; 0x01
    2b08:	82 81       	ldd	r24, Z+2	; 0x02
    2b0a:	93 81       	ldd	r25, Z+3	; 0x03
    2b0c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    2b10:	dc 01       	movw	r26, r24
    2b12:	cb 01       	movw	r24, r22
    2b14:	f8 01       	movw	r30, r16
    2b16:	91 83       	std	Z+1, r25	; 0x01
    2b18:	80 83       	st	Z, r24
    2b1a:	ce 01       	movw	r24, r28
    2b1c:	83 5a       	subi	r24, 0xA3	; 163
    2b1e:	9e 4f       	sbci	r25, 0xFE	; 254
    2b20:	9e 01       	movw	r18, r28
    2b22:	27 5a       	subi	r18, 0xA7	; 167
    2b24:	3e 4f       	sbci	r19, 0xFE	; 254
    2b26:	f9 01       	movw	r30, r18
    2b28:	20 81       	ld	r18, Z
    2b2a:	31 81       	ldd	r19, Z+1	; 0x01
    2b2c:	fc 01       	movw	r30, r24
    2b2e:	31 83       	std	Z+1, r19	; 0x01
    2b30:	20 83       	st	Z, r18
    2b32:	ce 01       	movw	r24, r28
    2b34:	83 5a       	subi	r24, 0xA3	; 163
    2b36:	9e 4f       	sbci	r25, 0xFE	; 254
    2b38:	fc 01       	movw	r30, r24
    2b3a:	80 81       	ld	r24, Z
    2b3c:	91 81       	ldd	r25, Z+1	; 0x01
    2b3e:	01 97       	sbiw	r24, 0x01	; 1
    2b40:	f1 f7       	brne	.-4      	; 0x2b3e <__stack+0x1a3f>
    2b42:	9e 01       	movw	r18, r28
    2b44:	23 5a       	subi	r18, 0xA3	; 163
    2b46:	3e 4f       	sbci	r19, 0xFE	; 254
    2b48:	f9 01       	movw	r30, r18
    2b4a:	91 83       	std	Z+1, r25	; 0x01
    2b4c:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F580 T80\n");
    2b4e:	8f ea       	ldi	r24, 0xAF	; 175
    2b50:	92 e0       	ldi	r25, 0x02	; 2
    2b52:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    2b56:	9e 01       	movw	r18, r28
    2b58:	27 5a       	subi	r18, 0xA7	; 167
    2b5a:	3f 4f       	sbci	r19, 0xFF	; 255
    2b5c:	80 e0       	ldi	r24, 0x00	; 0
    2b5e:	90 e0       	ldi	r25, 0x00	; 0
    2b60:	a6 e1       	ldi	r26, 0x16	; 22
    2b62:	b3 e4       	ldi	r27, 0x43	; 67
    2b64:	f9 01       	movw	r30, r18
    2b66:	80 83       	st	Z, r24
    2b68:	91 83       	std	Z+1, r25	; 0x01
    2b6a:	a2 83       	std	Z+2, r26	; 0x02
    2b6c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2b6e:	8e 01       	movw	r16, r28
    2b70:	05 5b       	subi	r16, 0xB5	; 181
    2b72:	1e 4f       	sbci	r17, 0xFE	; 254
    2b74:	ce 01       	movw	r24, r28
    2b76:	87 5a       	subi	r24, 0xA7	; 167
    2b78:	9f 4f       	sbci	r25, 0xFF	; 255
    2b7a:	20 e0       	ldi	r18, 0x00	; 0
    2b7c:	30 e0       	ldi	r19, 0x00	; 0
    2b7e:	4a e7       	ldi	r20, 0x7A	; 122
    2b80:	55 e4       	ldi	r21, 0x45	; 69
    2b82:	fc 01       	movw	r30, r24
    2b84:	60 81       	ld	r22, Z
    2b86:	71 81       	ldd	r23, Z+1	; 0x01
    2b88:	82 81       	ldd	r24, Z+2	; 0x02
    2b8a:	93 81       	ldd	r25, Z+3	; 0x03
    2b8c:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    2b90:	dc 01       	movw	r26, r24
    2b92:	cb 01       	movw	r24, r22
    2b94:	f8 01       	movw	r30, r16
    2b96:	80 83       	st	Z, r24
    2b98:	91 83       	std	Z+1, r25	; 0x01
    2b9a:	a2 83       	std	Z+2, r26	; 0x02
    2b9c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b9e:	ce 01       	movw	r24, r28
    2ba0:	85 5b       	subi	r24, 0xB5	; 181
    2ba2:	9e 4f       	sbci	r25, 0xFE	; 254
    2ba4:	20 e0       	ldi	r18, 0x00	; 0
    2ba6:	30 e0       	ldi	r19, 0x00	; 0
    2ba8:	40 e8       	ldi	r20, 0x80	; 128
    2baa:	5f e3       	ldi	r21, 0x3F	; 63
    2bac:	fc 01       	movw	r30, r24
    2bae:	60 81       	ld	r22, Z
    2bb0:	71 81       	ldd	r23, Z+1	; 0x01
    2bb2:	82 81       	ldd	r24, Z+2	; 0x02
    2bb4:	93 81       	ldd	r25, Z+3	; 0x03
    2bb6:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    2bba:	88 23       	and	r24, r24
    2bbc:	4c f4       	brge	.+18     	; 0x2bd0 <__stack+0x1ad1>
		__ticks = 1;
    2bbe:	ce 01       	movw	r24, r28
    2bc0:	81 5b       	subi	r24, 0xB1	; 177
    2bc2:	9e 4f       	sbci	r25, 0xFE	; 254
    2bc4:	21 e0       	ldi	r18, 0x01	; 1
    2bc6:	30 e0       	ldi	r19, 0x00	; 0
    2bc8:	fc 01       	movw	r30, r24
    2bca:	31 83       	std	Z+1, r19	; 0x01
    2bcc:	20 83       	st	Z, r18
    2bce:	6d c0       	rjmp	.+218    	; 0x2caa <__stack+0x1bab>
	else if (__tmp > 65535)
    2bd0:	ce 01       	movw	r24, r28
    2bd2:	85 5b       	subi	r24, 0xB5	; 181
    2bd4:	9e 4f       	sbci	r25, 0xFE	; 254
    2bd6:	20 e0       	ldi	r18, 0x00	; 0
    2bd8:	3f ef       	ldi	r19, 0xFF	; 255
    2bda:	4f e7       	ldi	r20, 0x7F	; 127
    2bdc:	57 e4       	ldi	r21, 0x47	; 71
    2bde:	fc 01       	movw	r30, r24
    2be0:	60 81       	ld	r22, Z
    2be2:	71 81       	ldd	r23, Z+1	; 0x01
    2be4:	82 81       	ldd	r24, Z+2	; 0x02
    2be6:	93 81       	ldd	r25, Z+3	; 0x03
    2be8:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    2bec:	18 16       	cp	r1, r24
    2bee:	0c f0       	brlt	.+2      	; 0x2bf2 <__stack+0x1af3>
    2bf0:	4a c0       	rjmp	.+148    	; 0x2c86 <__stack+0x1b87>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bf2:	ce 01       	movw	r24, r28
    2bf4:	87 5a       	subi	r24, 0xA7	; 167
    2bf6:	9f 4f       	sbci	r25, 0xFF	; 255
    2bf8:	20 e0       	ldi	r18, 0x00	; 0
    2bfa:	30 e0       	ldi	r19, 0x00	; 0
    2bfc:	40 e2       	ldi	r20, 0x20	; 32
    2bfe:	51 e4       	ldi	r21, 0x41	; 65
    2c00:	fc 01       	movw	r30, r24
    2c02:	60 81       	ld	r22, Z
    2c04:	71 81       	ldd	r23, Z+1	; 0x01
    2c06:	82 81       	ldd	r24, Z+2	; 0x02
    2c08:	93 81       	ldd	r25, Z+3	; 0x03
    2c0a:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    2c0e:	dc 01       	movw	r26, r24
    2c10:	cb 01       	movw	r24, r22
    2c12:	8e 01       	movw	r16, r28
    2c14:	01 5b       	subi	r16, 0xB1	; 177
    2c16:	1e 4f       	sbci	r17, 0xFE	; 254
    2c18:	bc 01       	movw	r22, r24
    2c1a:	cd 01       	movw	r24, r26
    2c1c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    2c20:	dc 01       	movw	r26, r24
    2c22:	cb 01       	movw	r24, r22
    2c24:	f8 01       	movw	r30, r16
    2c26:	91 83       	std	Z+1, r25	; 0x01
    2c28:	80 83       	st	Z, r24
    2c2a:	24 c0       	rjmp	.+72     	; 0x2c74 <__stack+0x1b75>
    2c2c:	ce 01       	movw	r24, r28
    2c2e:	8f 5a       	subi	r24, 0xAF	; 175
    2c30:	9e 4f       	sbci	r25, 0xFE	; 254
    2c32:	20 e9       	ldi	r18, 0x90	; 144
    2c34:	31 e0       	ldi	r19, 0x01	; 1
    2c36:	fc 01       	movw	r30, r24
    2c38:	31 83       	std	Z+1, r19	; 0x01
    2c3a:	20 83       	st	Z, r18
    2c3c:	ce 01       	movw	r24, r28
    2c3e:	8f 5a       	subi	r24, 0xAF	; 175
    2c40:	9e 4f       	sbci	r25, 0xFE	; 254
    2c42:	fc 01       	movw	r30, r24
    2c44:	80 81       	ld	r24, Z
    2c46:	91 81       	ldd	r25, Z+1	; 0x01
    2c48:	01 97       	sbiw	r24, 0x01	; 1
    2c4a:	f1 f7       	brne	.-4      	; 0x2c48 <__stack+0x1b49>
    2c4c:	9e 01       	movw	r18, r28
    2c4e:	2f 5a       	subi	r18, 0xAF	; 175
    2c50:	3e 4f       	sbci	r19, 0xFE	; 254
    2c52:	f9 01       	movw	r30, r18
    2c54:	91 83       	std	Z+1, r25	; 0x01
    2c56:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c58:	ce 01       	movw	r24, r28
    2c5a:	81 5b       	subi	r24, 0xB1	; 177
    2c5c:	9e 4f       	sbci	r25, 0xFE	; 254
    2c5e:	9e 01       	movw	r18, r28
    2c60:	21 5b       	subi	r18, 0xB1	; 177
    2c62:	3e 4f       	sbci	r19, 0xFE	; 254
    2c64:	f9 01       	movw	r30, r18
    2c66:	20 81       	ld	r18, Z
    2c68:	31 81       	ldd	r19, Z+1	; 0x01
    2c6a:	21 50       	subi	r18, 0x01	; 1
    2c6c:	31 09       	sbc	r19, r1
    2c6e:	fc 01       	movw	r30, r24
    2c70:	31 83       	std	Z+1, r19	; 0x01
    2c72:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c74:	ce 01       	movw	r24, r28
    2c76:	81 5b       	subi	r24, 0xB1	; 177
    2c78:	9e 4f       	sbci	r25, 0xFE	; 254
    2c7a:	fc 01       	movw	r30, r24
    2c7c:	80 81       	ld	r24, Z
    2c7e:	91 81       	ldd	r25, Z+1	; 0x01
    2c80:	89 2b       	or	r24, r25
    2c82:	a1 f6       	brne	.-88     	; 0x2c2c <__stack+0x1b2d>
    2c84:	2c c0       	rjmp	.+88     	; 0x2cde <__stack+0x1bdf>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c86:	8e 01       	movw	r16, r28
    2c88:	01 5b       	subi	r16, 0xB1	; 177
    2c8a:	1e 4f       	sbci	r17, 0xFE	; 254
    2c8c:	ce 01       	movw	r24, r28
    2c8e:	85 5b       	subi	r24, 0xB5	; 181
    2c90:	9e 4f       	sbci	r25, 0xFE	; 254
    2c92:	fc 01       	movw	r30, r24
    2c94:	60 81       	ld	r22, Z
    2c96:	71 81       	ldd	r23, Z+1	; 0x01
    2c98:	82 81       	ldd	r24, Z+2	; 0x02
    2c9a:	93 81       	ldd	r25, Z+3	; 0x03
    2c9c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    2ca0:	dc 01       	movw	r26, r24
    2ca2:	cb 01       	movw	r24, r22
    2ca4:	f8 01       	movw	r30, r16
    2ca6:	91 83       	std	Z+1, r25	; 0x01
    2ca8:	80 83       	st	Z, r24
    2caa:	ce 01       	movw	r24, r28
    2cac:	8d 5a       	subi	r24, 0xAD	; 173
    2cae:	9e 4f       	sbci	r25, 0xFE	; 254
    2cb0:	9e 01       	movw	r18, r28
    2cb2:	21 5b       	subi	r18, 0xB1	; 177
    2cb4:	3e 4f       	sbci	r19, 0xFE	; 254
    2cb6:	f9 01       	movw	r30, r18
    2cb8:	20 81       	ld	r18, Z
    2cba:	31 81       	ldd	r19, Z+1	; 0x01
    2cbc:	fc 01       	movw	r30, r24
    2cbe:	31 83       	std	Z+1, r19	; 0x01
    2cc0:	20 83       	st	Z, r18
    2cc2:	ce 01       	movw	r24, r28
    2cc4:	8d 5a       	subi	r24, 0xAD	; 173
    2cc6:	9e 4f       	sbci	r25, 0xFE	; 254
    2cc8:	fc 01       	movw	r30, r24
    2cca:	80 81       	ld	r24, Z
    2ccc:	91 81       	ldd	r25, Z+1	; 0x01
    2cce:	01 97       	sbiw	r24, 0x01	; 1
    2cd0:	f1 f7       	brne	.-4      	; 0x2cce <__stack+0x1bcf>
    2cd2:	9e 01       	movw	r18, r28
    2cd4:	2d 5a       	subi	r18, 0xAD	; 173
    2cd6:	3e 4f       	sbci	r19, 0xFE	; 254
    2cd8:	f9 01       	movw	r30, r18
    2cda:	91 83       	std	Z+1, r25	; 0x01
    2cdc:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F480 T80\n");
    2cde:	8d e2       	ldi	r24, 0x2D	; 45
    2ce0:	92 e0       	ldi	r25, 0x02	; 2
    2ce2:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    2ce6:	9e 01       	movw	r18, r28
    2ce8:	23 5a       	subi	r18, 0xA3	; 163
    2cea:	3f 4f       	sbci	r19, 0xFF	; 255
    2cec:	80 e0       	ldi	r24, 0x00	; 0
    2cee:	90 e0       	ldi	r25, 0x00	; 0
    2cf0:	aa ef       	ldi	r26, 0xFA	; 250
    2cf2:	b3 e4       	ldi	r27, 0x43	; 67
    2cf4:	f9 01       	movw	r30, r18
    2cf6:	80 83       	st	Z, r24
    2cf8:	91 83       	std	Z+1, r25	; 0x01
    2cfa:	a2 83       	std	Z+2, r26	; 0x02
    2cfc:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2cfe:	8e 01       	movw	r16, r28
    2d00:	0f 5b       	subi	r16, 0xBF	; 191
    2d02:	1e 4f       	sbci	r17, 0xFE	; 254
    2d04:	ce 01       	movw	r24, r28
    2d06:	83 5a       	subi	r24, 0xA3	; 163
    2d08:	9f 4f       	sbci	r25, 0xFF	; 255
    2d0a:	20 e0       	ldi	r18, 0x00	; 0
    2d0c:	30 e0       	ldi	r19, 0x00	; 0
    2d0e:	4a e7       	ldi	r20, 0x7A	; 122
    2d10:	55 e4       	ldi	r21, 0x45	; 69
    2d12:	fc 01       	movw	r30, r24
    2d14:	60 81       	ld	r22, Z
    2d16:	71 81       	ldd	r23, Z+1	; 0x01
    2d18:	82 81       	ldd	r24, Z+2	; 0x02
    2d1a:	93 81       	ldd	r25, Z+3	; 0x03
    2d1c:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    2d20:	dc 01       	movw	r26, r24
    2d22:	cb 01       	movw	r24, r22
    2d24:	f8 01       	movw	r30, r16
    2d26:	80 83       	st	Z, r24
    2d28:	91 83       	std	Z+1, r25	; 0x01
    2d2a:	a2 83       	std	Z+2, r26	; 0x02
    2d2c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2d2e:	ce 01       	movw	r24, r28
    2d30:	8f 5b       	subi	r24, 0xBF	; 191
    2d32:	9e 4f       	sbci	r25, 0xFE	; 254
    2d34:	20 e0       	ldi	r18, 0x00	; 0
    2d36:	30 e0       	ldi	r19, 0x00	; 0
    2d38:	40 e8       	ldi	r20, 0x80	; 128
    2d3a:	5f e3       	ldi	r21, 0x3F	; 63
    2d3c:	fc 01       	movw	r30, r24
    2d3e:	60 81       	ld	r22, Z
    2d40:	71 81       	ldd	r23, Z+1	; 0x01
    2d42:	82 81       	ldd	r24, Z+2	; 0x02
    2d44:	93 81       	ldd	r25, Z+3	; 0x03
    2d46:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    2d4a:	88 23       	and	r24, r24
    2d4c:	4c f4       	brge	.+18     	; 0x2d60 <__stack+0x1c61>
		__ticks = 1;
    2d4e:	ce 01       	movw	r24, r28
    2d50:	8b 5b       	subi	r24, 0xBB	; 187
    2d52:	9e 4f       	sbci	r25, 0xFE	; 254
    2d54:	21 e0       	ldi	r18, 0x01	; 1
    2d56:	30 e0       	ldi	r19, 0x00	; 0
    2d58:	fc 01       	movw	r30, r24
    2d5a:	31 83       	std	Z+1, r19	; 0x01
    2d5c:	20 83       	st	Z, r18
    2d5e:	6d c0       	rjmp	.+218    	; 0x2e3a <__stack+0x1d3b>
	else if (__tmp > 65535)
    2d60:	ce 01       	movw	r24, r28
    2d62:	8f 5b       	subi	r24, 0xBF	; 191
    2d64:	9e 4f       	sbci	r25, 0xFE	; 254
    2d66:	20 e0       	ldi	r18, 0x00	; 0
    2d68:	3f ef       	ldi	r19, 0xFF	; 255
    2d6a:	4f e7       	ldi	r20, 0x7F	; 127
    2d6c:	57 e4       	ldi	r21, 0x47	; 71
    2d6e:	fc 01       	movw	r30, r24
    2d70:	60 81       	ld	r22, Z
    2d72:	71 81       	ldd	r23, Z+1	; 0x01
    2d74:	82 81       	ldd	r24, Z+2	; 0x02
    2d76:	93 81       	ldd	r25, Z+3	; 0x03
    2d78:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    2d7c:	18 16       	cp	r1, r24
    2d7e:	0c f0       	brlt	.+2      	; 0x2d82 <__stack+0x1c83>
    2d80:	4a c0       	rjmp	.+148    	; 0x2e16 <__stack+0x1d17>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d82:	ce 01       	movw	r24, r28
    2d84:	83 5a       	subi	r24, 0xA3	; 163
    2d86:	9f 4f       	sbci	r25, 0xFF	; 255
    2d88:	20 e0       	ldi	r18, 0x00	; 0
    2d8a:	30 e0       	ldi	r19, 0x00	; 0
    2d8c:	40 e2       	ldi	r20, 0x20	; 32
    2d8e:	51 e4       	ldi	r21, 0x41	; 65
    2d90:	fc 01       	movw	r30, r24
    2d92:	60 81       	ld	r22, Z
    2d94:	71 81       	ldd	r23, Z+1	; 0x01
    2d96:	82 81       	ldd	r24, Z+2	; 0x02
    2d98:	93 81       	ldd	r25, Z+3	; 0x03
    2d9a:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    2d9e:	dc 01       	movw	r26, r24
    2da0:	cb 01       	movw	r24, r22
    2da2:	8e 01       	movw	r16, r28
    2da4:	0b 5b       	subi	r16, 0xBB	; 187
    2da6:	1e 4f       	sbci	r17, 0xFE	; 254
    2da8:	bc 01       	movw	r22, r24
    2daa:	cd 01       	movw	r24, r26
    2dac:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    2db0:	dc 01       	movw	r26, r24
    2db2:	cb 01       	movw	r24, r22
    2db4:	f8 01       	movw	r30, r16
    2db6:	91 83       	std	Z+1, r25	; 0x01
    2db8:	80 83       	st	Z, r24
    2dba:	24 c0       	rjmp	.+72     	; 0x2e04 <__stack+0x1d05>
    2dbc:	ce 01       	movw	r24, r28
    2dbe:	89 5b       	subi	r24, 0xB9	; 185
    2dc0:	9e 4f       	sbci	r25, 0xFE	; 254
    2dc2:	20 e9       	ldi	r18, 0x90	; 144
    2dc4:	31 e0       	ldi	r19, 0x01	; 1
    2dc6:	fc 01       	movw	r30, r24
    2dc8:	31 83       	std	Z+1, r19	; 0x01
    2dca:	20 83       	st	Z, r18
    2dcc:	ce 01       	movw	r24, r28
    2dce:	89 5b       	subi	r24, 0xB9	; 185
    2dd0:	9e 4f       	sbci	r25, 0xFE	; 254
    2dd2:	fc 01       	movw	r30, r24
    2dd4:	80 81       	ld	r24, Z
    2dd6:	91 81       	ldd	r25, Z+1	; 0x01
    2dd8:	01 97       	sbiw	r24, 0x01	; 1
    2dda:	f1 f7       	brne	.-4      	; 0x2dd8 <__stack+0x1cd9>
    2ddc:	9e 01       	movw	r18, r28
    2dde:	29 5b       	subi	r18, 0xB9	; 185
    2de0:	3e 4f       	sbci	r19, 0xFE	; 254
    2de2:	f9 01       	movw	r30, r18
    2de4:	91 83       	std	Z+1, r25	; 0x01
    2de6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2de8:	ce 01       	movw	r24, r28
    2dea:	8b 5b       	subi	r24, 0xBB	; 187
    2dec:	9e 4f       	sbci	r25, 0xFE	; 254
    2dee:	9e 01       	movw	r18, r28
    2df0:	2b 5b       	subi	r18, 0xBB	; 187
    2df2:	3e 4f       	sbci	r19, 0xFE	; 254
    2df4:	f9 01       	movw	r30, r18
    2df6:	20 81       	ld	r18, Z
    2df8:	31 81       	ldd	r19, Z+1	; 0x01
    2dfa:	21 50       	subi	r18, 0x01	; 1
    2dfc:	31 09       	sbc	r19, r1
    2dfe:	fc 01       	movw	r30, r24
    2e00:	31 83       	std	Z+1, r19	; 0x01
    2e02:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e04:	ce 01       	movw	r24, r28
    2e06:	8b 5b       	subi	r24, 0xBB	; 187
    2e08:	9e 4f       	sbci	r25, 0xFE	; 254
    2e0a:	fc 01       	movw	r30, r24
    2e0c:	80 81       	ld	r24, Z
    2e0e:	91 81       	ldd	r25, Z+1	; 0x01
    2e10:	89 2b       	or	r24, r25
    2e12:	a1 f6       	brne	.-88     	; 0x2dbc <__stack+0x1cbd>
    2e14:	2c c0       	rjmp	.+88     	; 0x2e6e <__stack+0x1d6f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e16:	8e 01       	movw	r16, r28
    2e18:	0b 5b       	subi	r16, 0xBB	; 187
    2e1a:	1e 4f       	sbci	r17, 0xFE	; 254
    2e1c:	ce 01       	movw	r24, r28
    2e1e:	8f 5b       	subi	r24, 0xBF	; 191
    2e20:	9e 4f       	sbci	r25, 0xFE	; 254
    2e22:	fc 01       	movw	r30, r24
    2e24:	60 81       	ld	r22, Z
    2e26:	71 81       	ldd	r23, Z+1	; 0x01
    2e28:	82 81       	ldd	r24, Z+2	; 0x02
    2e2a:	93 81       	ldd	r25, Z+3	; 0x03
    2e2c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    2e30:	dc 01       	movw	r26, r24
    2e32:	cb 01       	movw	r24, r22
    2e34:	f8 01       	movw	r30, r16
    2e36:	91 83       	std	Z+1, r25	; 0x01
    2e38:	80 83       	st	Z, r24
    2e3a:	ce 01       	movw	r24, r28
    2e3c:	87 5b       	subi	r24, 0xB7	; 183
    2e3e:	9e 4f       	sbci	r25, 0xFE	; 254
    2e40:	9e 01       	movw	r18, r28
    2e42:	2b 5b       	subi	r18, 0xBB	; 187
    2e44:	3e 4f       	sbci	r19, 0xFE	; 254
    2e46:	f9 01       	movw	r30, r18
    2e48:	20 81       	ld	r18, Z
    2e4a:	31 81       	ldd	r19, Z+1	; 0x01
    2e4c:	fc 01       	movw	r30, r24
    2e4e:	31 83       	std	Z+1, r19	; 0x01
    2e50:	20 83       	st	Z, r18
    2e52:	ce 01       	movw	r24, r28
    2e54:	87 5b       	subi	r24, 0xB7	; 183
    2e56:	9e 4f       	sbci	r25, 0xFE	; 254
    2e58:	fc 01       	movw	r30, r24
    2e5a:	80 81       	ld	r24, Z
    2e5c:	91 81       	ldd	r25, Z+1	; 0x01
    2e5e:	01 97       	sbiw	r24, 0x01	; 1
    2e60:	f1 f7       	brne	.-4      	; 0x2e5e <__stack+0x1d5f>
    2e62:	9e 01       	movw	r18, r28
    2e64:	27 5b       	subi	r18, 0xB7	; 183
    2e66:	3e 4f       	sbci	r19, 0xFE	; 254
    2e68:	f9 01       	movw	r30, r18
    2e6a:	91 83       	std	Z+1, r25	; 0x01
    2e6c:	80 83       	st	Z, r24
	_delay_ms(500);
		
	to_uARM("M2210 F510 T100\n");
    2e6e:	88 ed       	ldi	r24, 0xD8	; 216
    2e70:	91 e0       	ldi	r25, 0x01	; 1
    2e72:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    2e76:	9e 01       	movw	r18, r28
    2e78:	2f 59       	subi	r18, 0x9F	; 159
    2e7a:	3f 4f       	sbci	r19, 0xFF	; 255
    2e7c:	80 e0       	ldi	r24, 0x00	; 0
    2e7e:	90 e0       	ldi	r25, 0x00	; 0
    2e80:	a1 ee       	ldi	r26, 0xE1	; 225
    2e82:	b3 e4       	ldi	r27, 0x43	; 67
    2e84:	f9 01       	movw	r30, r18
    2e86:	80 83       	st	Z, r24
    2e88:	91 83       	std	Z+1, r25	; 0x01
    2e8a:	a2 83       	std	Z+2, r26	; 0x02
    2e8c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2e8e:	8e 01       	movw	r16, r28
    2e90:	09 5c       	subi	r16, 0xC9	; 201
    2e92:	1e 4f       	sbci	r17, 0xFE	; 254
    2e94:	ce 01       	movw	r24, r28
    2e96:	8f 59       	subi	r24, 0x9F	; 159
    2e98:	9f 4f       	sbci	r25, 0xFF	; 255
    2e9a:	20 e0       	ldi	r18, 0x00	; 0
    2e9c:	30 e0       	ldi	r19, 0x00	; 0
    2e9e:	4a e7       	ldi	r20, 0x7A	; 122
    2ea0:	55 e4       	ldi	r21, 0x45	; 69
    2ea2:	fc 01       	movw	r30, r24
    2ea4:	60 81       	ld	r22, Z
    2ea6:	71 81       	ldd	r23, Z+1	; 0x01
    2ea8:	82 81       	ldd	r24, Z+2	; 0x02
    2eaa:	93 81       	ldd	r25, Z+3	; 0x03
    2eac:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    2eb0:	dc 01       	movw	r26, r24
    2eb2:	cb 01       	movw	r24, r22
    2eb4:	f8 01       	movw	r30, r16
    2eb6:	80 83       	st	Z, r24
    2eb8:	91 83       	std	Z+1, r25	; 0x01
    2eba:	a2 83       	std	Z+2, r26	; 0x02
    2ebc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2ebe:	ce 01       	movw	r24, r28
    2ec0:	89 5c       	subi	r24, 0xC9	; 201
    2ec2:	9e 4f       	sbci	r25, 0xFE	; 254
    2ec4:	20 e0       	ldi	r18, 0x00	; 0
    2ec6:	30 e0       	ldi	r19, 0x00	; 0
    2ec8:	40 e8       	ldi	r20, 0x80	; 128
    2eca:	5f e3       	ldi	r21, 0x3F	; 63
    2ecc:	fc 01       	movw	r30, r24
    2ece:	60 81       	ld	r22, Z
    2ed0:	71 81       	ldd	r23, Z+1	; 0x01
    2ed2:	82 81       	ldd	r24, Z+2	; 0x02
    2ed4:	93 81       	ldd	r25, Z+3	; 0x03
    2ed6:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    2eda:	88 23       	and	r24, r24
    2edc:	4c f4       	brge	.+18     	; 0x2ef0 <__stack+0x1df1>
		__ticks = 1;
    2ede:	ce 01       	movw	r24, r28
    2ee0:	85 5c       	subi	r24, 0xC5	; 197
    2ee2:	9e 4f       	sbci	r25, 0xFE	; 254
    2ee4:	21 e0       	ldi	r18, 0x01	; 1
    2ee6:	30 e0       	ldi	r19, 0x00	; 0
    2ee8:	fc 01       	movw	r30, r24
    2eea:	31 83       	std	Z+1, r19	; 0x01
    2eec:	20 83       	st	Z, r18
    2eee:	6d c0       	rjmp	.+218    	; 0x2fca <__stack+0x1ecb>
	else if (__tmp > 65535)
    2ef0:	ce 01       	movw	r24, r28
    2ef2:	89 5c       	subi	r24, 0xC9	; 201
    2ef4:	9e 4f       	sbci	r25, 0xFE	; 254
    2ef6:	20 e0       	ldi	r18, 0x00	; 0
    2ef8:	3f ef       	ldi	r19, 0xFF	; 255
    2efa:	4f e7       	ldi	r20, 0x7F	; 127
    2efc:	57 e4       	ldi	r21, 0x47	; 71
    2efe:	fc 01       	movw	r30, r24
    2f00:	60 81       	ld	r22, Z
    2f02:	71 81       	ldd	r23, Z+1	; 0x01
    2f04:	82 81       	ldd	r24, Z+2	; 0x02
    2f06:	93 81       	ldd	r25, Z+3	; 0x03
    2f08:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    2f0c:	18 16       	cp	r1, r24
    2f0e:	0c f0       	brlt	.+2      	; 0x2f12 <__stack+0x1e13>
    2f10:	4a c0       	rjmp	.+148    	; 0x2fa6 <__stack+0x1ea7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f12:	ce 01       	movw	r24, r28
    2f14:	8f 59       	subi	r24, 0x9F	; 159
    2f16:	9f 4f       	sbci	r25, 0xFF	; 255
    2f18:	20 e0       	ldi	r18, 0x00	; 0
    2f1a:	30 e0       	ldi	r19, 0x00	; 0
    2f1c:	40 e2       	ldi	r20, 0x20	; 32
    2f1e:	51 e4       	ldi	r21, 0x41	; 65
    2f20:	fc 01       	movw	r30, r24
    2f22:	60 81       	ld	r22, Z
    2f24:	71 81       	ldd	r23, Z+1	; 0x01
    2f26:	82 81       	ldd	r24, Z+2	; 0x02
    2f28:	93 81       	ldd	r25, Z+3	; 0x03
    2f2a:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    2f2e:	dc 01       	movw	r26, r24
    2f30:	cb 01       	movw	r24, r22
    2f32:	8e 01       	movw	r16, r28
    2f34:	05 5c       	subi	r16, 0xC5	; 197
    2f36:	1e 4f       	sbci	r17, 0xFE	; 254
    2f38:	bc 01       	movw	r22, r24
    2f3a:	cd 01       	movw	r24, r26
    2f3c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    2f40:	dc 01       	movw	r26, r24
    2f42:	cb 01       	movw	r24, r22
    2f44:	f8 01       	movw	r30, r16
    2f46:	91 83       	std	Z+1, r25	; 0x01
    2f48:	80 83       	st	Z, r24
    2f4a:	24 c0       	rjmp	.+72     	; 0x2f94 <__stack+0x1e95>
    2f4c:	ce 01       	movw	r24, r28
    2f4e:	83 5c       	subi	r24, 0xC3	; 195
    2f50:	9e 4f       	sbci	r25, 0xFE	; 254
    2f52:	20 e9       	ldi	r18, 0x90	; 144
    2f54:	31 e0       	ldi	r19, 0x01	; 1
    2f56:	fc 01       	movw	r30, r24
    2f58:	31 83       	std	Z+1, r19	; 0x01
    2f5a:	20 83       	st	Z, r18
    2f5c:	ce 01       	movw	r24, r28
    2f5e:	83 5c       	subi	r24, 0xC3	; 195
    2f60:	9e 4f       	sbci	r25, 0xFE	; 254
    2f62:	fc 01       	movw	r30, r24
    2f64:	80 81       	ld	r24, Z
    2f66:	91 81       	ldd	r25, Z+1	; 0x01
    2f68:	01 97       	sbiw	r24, 0x01	; 1
    2f6a:	f1 f7       	brne	.-4      	; 0x2f68 <__stack+0x1e69>
    2f6c:	9e 01       	movw	r18, r28
    2f6e:	23 5c       	subi	r18, 0xC3	; 195
    2f70:	3e 4f       	sbci	r19, 0xFE	; 254
    2f72:	f9 01       	movw	r30, r18
    2f74:	91 83       	std	Z+1, r25	; 0x01
    2f76:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f78:	ce 01       	movw	r24, r28
    2f7a:	85 5c       	subi	r24, 0xC5	; 197
    2f7c:	9e 4f       	sbci	r25, 0xFE	; 254
    2f7e:	9e 01       	movw	r18, r28
    2f80:	25 5c       	subi	r18, 0xC5	; 197
    2f82:	3e 4f       	sbci	r19, 0xFE	; 254
    2f84:	f9 01       	movw	r30, r18
    2f86:	20 81       	ld	r18, Z
    2f88:	31 81       	ldd	r19, Z+1	; 0x01
    2f8a:	21 50       	subi	r18, 0x01	; 1
    2f8c:	31 09       	sbc	r19, r1
    2f8e:	fc 01       	movw	r30, r24
    2f90:	31 83       	std	Z+1, r19	; 0x01
    2f92:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f94:	ce 01       	movw	r24, r28
    2f96:	85 5c       	subi	r24, 0xC5	; 197
    2f98:	9e 4f       	sbci	r25, 0xFE	; 254
    2f9a:	fc 01       	movw	r30, r24
    2f9c:	80 81       	ld	r24, Z
    2f9e:	91 81       	ldd	r25, Z+1	; 0x01
    2fa0:	89 2b       	or	r24, r25
    2fa2:	a1 f6       	brne	.-88     	; 0x2f4c <__stack+0x1e4d>
    2fa4:	2c c0       	rjmp	.+88     	; 0x2ffe <__stack+0x1eff>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2fa6:	8e 01       	movw	r16, r28
    2fa8:	05 5c       	subi	r16, 0xC5	; 197
    2faa:	1e 4f       	sbci	r17, 0xFE	; 254
    2fac:	ce 01       	movw	r24, r28
    2fae:	89 5c       	subi	r24, 0xC9	; 201
    2fb0:	9e 4f       	sbci	r25, 0xFE	; 254
    2fb2:	fc 01       	movw	r30, r24
    2fb4:	60 81       	ld	r22, Z
    2fb6:	71 81       	ldd	r23, Z+1	; 0x01
    2fb8:	82 81       	ldd	r24, Z+2	; 0x02
    2fba:	93 81       	ldd	r25, Z+3	; 0x03
    2fbc:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    2fc0:	dc 01       	movw	r26, r24
    2fc2:	cb 01       	movw	r24, r22
    2fc4:	f8 01       	movw	r30, r16
    2fc6:	91 83       	std	Z+1, r25	; 0x01
    2fc8:	80 83       	st	Z, r24
    2fca:	ce 01       	movw	r24, r28
    2fcc:	81 5c       	subi	r24, 0xC1	; 193
    2fce:	9e 4f       	sbci	r25, 0xFE	; 254
    2fd0:	9e 01       	movw	r18, r28
    2fd2:	25 5c       	subi	r18, 0xC5	; 197
    2fd4:	3e 4f       	sbci	r19, 0xFE	; 254
    2fd6:	f9 01       	movw	r30, r18
    2fd8:	20 81       	ld	r18, Z
    2fda:	31 81       	ldd	r19, Z+1	; 0x01
    2fdc:	fc 01       	movw	r30, r24
    2fde:	31 83       	std	Z+1, r19	; 0x01
    2fe0:	20 83       	st	Z, r18
    2fe2:	ce 01       	movw	r24, r28
    2fe4:	81 5c       	subi	r24, 0xC1	; 193
    2fe6:	9e 4f       	sbci	r25, 0xFE	; 254
    2fe8:	fc 01       	movw	r30, r24
    2fea:	80 81       	ld	r24, Z
    2fec:	91 81       	ldd	r25, Z+1	; 0x01
    2fee:	01 97       	sbiw	r24, 0x01	; 1
    2ff0:	f1 f7       	brne	.-4      	; 0x2fee <__stack+0x1eef>
    2ff2:	9e 01       	movw	r18, r28
    2ff4:	21 5c       	subi	r18, 0xC1	; 193
    2ff6:	3e 4f       	sbci	r19, 0xFE	; 254
    2ff8:	f9 01       	movw	r30, r18
    2ffa:	91 83       	std	Z+1, r25	; 0x01
    2ffc:	80 83       	st	Z, r24
	_delay_ms(450);
	to_uARM("M2210 F380 T100\n");
    2ffe:	8a ef       	ldi	r24, 0xFA	; 250
    3000:	91 e0       	ldi	r25, 0x01	; 1
    3002:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    3006:	9e 01       	movw	r18, r28
    3008:	2b 59       	subi	r18, 0x9B	; 155
    300a:	3f 4f       	sbci	r19, 0xFF	; 255
    300c:	80 e0       	ldi	r24, 0x00	; 0
    300e:	90 e0       	ldi	r25, 0x00	; 0
    3010:	a8 ec       	ldi	r26, 0xC8	; 200
    3012:	b3 e4       	ldi	r27, 0x43	; 67
    3014:	f9 01       	movw	r30, r18
    3016:	80 83       	st	Z, r24
    3018:	91 83       	std	Z+1, r25	; 0x01
    301a:	a2 83       	std	Z+2, r26	; 0x02
    301c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    301e:	8e 01       	movw	r16, r28
    3020:	03 5d       	subi	r16, 0xD3	; 211
    3022:	1e 4f       	sbci	r17, 0xFE	; 254
    3024:	ce 01       	movw	r24, r28
    3026:	8b 59       	subi	r24, 0x9B	; 155
    3028:	9f 4f       	sbci	r25, 0xFF	; 255
    302a:	20 e0       	ldi	r18, 0x00	; 0
    302c:	30 e0       	ldi	r19, 0x00	; 0
    302e:	4a e7       	ldi	r20, 0x7A	; 122
    3030:	55 e4       	ldi	r21, 0x45	; 69
    3032:	fc 01       	movw	r30, r24
    3034:	60 81       	ld	r22, Z
    3036:	71 81       	ldd	r23, Z+1	; 0x01
    3038:	82 81       	ldd	r24, Z+2	; 0x02
    303a:	93 81       	ldd	r25, Z+3	; 0x03
    303c:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    3040:	dc 01       	movw	r26, r24
    3042:	cb 01       	movw	r24, r22
    3044:	f8 01       	movw	r30, r16
    3046:	80 83       	st	Z, r24
    3048:	91 83       	std	Z+1, r25	; 0x01
    304a:	a2 83       	std	Z+2, r26	; 0x02
    304c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    304e:	ce 01       	movw	r24, r28
    3050:	83 5d       	subi	r24, 0xD3	; 211
    3052:	9e 4f       	sbci	r25, 0xFE	; 254
    3054:	20 e0       	ldi	r18, 0x00	; 0
    3056:	30 e0       	ldi	r19, 0x00	; 0
    3058:	40 e8       	ldi	r20, 0x80	; 128
    305a:	5f e3       	ldi	r21, 0x3F	; 63
    305c:	fc 01       	movw	r30, r24
    305e:	60 81       	ld	r22, Z
    3060:	71 81       	ldd	r23, Z+1	; 0x01
    3062:	82 81       	ldd	r24, Z+2	; 0x02
    3064:	93 81       	ldd	r25, Z+3	; 0x03
    3066:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    306a:	88 23       	and	r24, r24
    306c:	4c f4       	brge	.+18     	; 0x3080 <__stack+0x1f81>
		__ticks = 1;
    306e:	ce 01       	movw	r24, r28
    3070:	8f 5c       	subi	r24, 0xCF	; 207
    3072:	9e 4f       	sbci	r25, 0xFE	; 254
    3074:	21 e0       	ldi	r18, 0x01	; 1
    3076:	30 e0       	ldi	r19, 0x00	; 0
    3078:	fc 01       	movw	r30, r24
    307a:	31 83       	std	Z+1, r19	; 0x01
    307c:	20 83       	st	Z, r18
    307e:	6d c0       	rjmp	.+218    	; 0x315a <__stack+0x205b>
	else if (__tmp > 65535)
    3080:	ce 01       	movw	r24, r28
    3082:	83 5d       	subi	r24, 0xD3	; 211
    3084:	9e 4f       	sbci	r25, 0xFE	; 254
    3086:	20 e0       	ldi	r18, 0x00	; 0
    3088:	3f ef       	ldi	r19, 0xFF	; 255
    308a:	4f e7       	ldi	r20, 0x7F	; 127
    308c:	57 e4       	ldi	r21, 0x47	; 71
    308e:	fc 01       	movw	r30, r24
    3090:	60 81       	ld	r22, Z
    3092:	71 81       	ldd	r23, Z+1	; 0x01
    3094:	82 81       	ldd	r24, Z+2	; 0x02
    3096:	93 81       	ldd	r25, Z+3	; 0x03
    3098:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    309c:	18 16       	cp	r1, r24
    309e:	0c f0       	brlt	.+2      	; 0x30a2 <__stack+0x1fa3>
    30a0:	4a c0       	rjmp	.+148    	; 0x3136 <__stack+0x2037>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30a2:	ce 01       	movw	r24, r28
    30a4:	8b 59       	subi	r24, 0x9B	; 155
    30a6:	9f 4f       	sbci	r25, 0xFF	; 255
    30a8:	20 e0       	ldi	r18, 0x00	; 0
    30aa:	30 e0       	ldi	r19, 0x00	; 0
    30ac:	40 e2       	ldi	r20, 0x20	; 32
    30ae:	51 e4       	ldi	r21, 0x41	; 65
    30b0:	fc 01       	movw	r30, r24
    30b2:	60 81       	ld	r22, Z
    30b4:	71 81       	ldd	r23, Z+1	; 0x01
    30b6:	82 81       	ldd	r24, Z+2	; 0x02
    30b8:	93 81       	ldd	r25, Z+3	; 0x03
    30ba:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    30be:	dc 01       	movw	r26, r24
    30c0:	cb 01       	movw	r24, r22
    30c2:	8e 01       	movw	r16, r28
    30c4:	0f 5c       	subi	r16, 0xCF	; 207
    30c6:	1e 4f       	sbci	r17, 0xFE	; 254
    30c8:	bc 01       	movw	r22, r24
    30ca:	cd 01       	movw	r24, r26
    30cc:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    30d0:	dc 01       	movw	r26, r24
    30d2:	cb 01       	movw	r24, r22
    30d4:	f8 01       	movw	r30, r16
    30d6:	91 83       	std	Z+1, r25	; 0x01
    30d8:	80 83       	st	Z, r24
    30da:	24 c0       	rjmp	.+72     	; 0x3124 <__stack+0x2025>
    30dc:	ce 01       	movw	r24, r28
    30de:	8d 5c       	subi	r24, 0xCD	; 205
    30e0:	9e 4f       	sbci	r25, 0xFE	; 254
    30e2:	20 e9       	ldi	r18, 0x90	; 144
    30e4:	31 e0       	ldi	r19, 0x01	; 1
    30e6:	fc 01       	movw	r30, r24
    30e8:	31 83       	std	Z+1, r19	; 0x01
    30ea:	20 83       	st	Z, r18
    30ec:	ce 01       	movw	r24, r28
    30ee:	8d 5c       	subi	r24, 0xCD	; 205
    30f0:	9e 4f       	sbci	r25, 0xFE	; 254
    30f2:	fc 01       	movw	r30, r24
    30f4:	80 81       	ld	r24, Z
    30f6:	91 81       	ldd	r25, Z+1	; 0x01
    30f8:	01 97       	sbiw	r24, 0x01	; 1
    30fa:	f1 f7       	brne	.-4      	; 0x30f8 <__stack+0x1ff9>
    30fc:	9e 01       	movw	r18, r28
    30fe:	2d 5c       	subi	r18, 0xCD	; 205
    3100:	3e 4f       	sbci	r19, 0xFE	; 254
    3102:	f9 01       	movw	r30, r18
    3104:	91 83       	std	Z+1, r25	; 0x01
    3106:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3108:	ce 01       	movw	r24, r28
    310a:	8f 5c       	subi	r24, 0xCF	; 207
    310c:	9e 4f       	sbci	r25, 0xFE	; 254
    310e:	9e 01       	movw	r18, r28
    3110:	2f 5c       	subi	r18, 0xCF	; 207
    3112:	3e 4f       	sbci	r19, 0xFE	; 254
    3114:	f9 01       	movw	r30, r18
    3116:	20 81       	ld	r18, Z
    3118:	31 81       	ldd	r19, Z+1	; 0x01
    311a:	21 50       	subi	r18, 0x01	; 1
    311c:	31 09       	sbc	r19, r1
    311e:	fc 01       	movw	r30, r24
    3120:	31 83       	std	Z+1, r19	; 0x01
    3122:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3124:	ce 01       	movw	r24, r28
    3126:	8f 5c       	subi	r24, 0xCF	; 207
    3128:	9e 4f       	sbci	r25, 0xFE	; 254
    312a:	fc 01       	movw	r30, r24
    312c:	80 81       	ld	r24, Z
    312e:	91 81       	ldd	r25, Z+1	; 0x01
    3130:	89 2b       	or	r24, r25
    3132:	a1 f6       	brne	.-88     	; 0x30dc <__stack+0x1fdd>
    3134:	2c c0       	rjmp	.+88     	; 0x318e <__stack+0x208f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3136:	8e 01       	movw	r16, r28
    3138:	0f 5c       	subi	r16, 0xCF	; 207
    313a:	1e 4f       	sbci	r17, 0xFE	; 254
    313c:	ce 01       	movw	r24, r28
    313e:	83 5d       	subi	r24, 0xD3	; 211
    3140:	9e 4f       	sbci	r25, 0xFE	; 254
    3142:	fc 01       	movw	r30, r24
    3144:	60 81       	ld	r22, Z
    3146:	71 81       	ldd	r23, Z+1	; 0x01
    3148:	82 81       	ldd	r24, Z+2	; 0x02
    314a:	93 81       	ldd	r25, Z+3	; 0x03
    314c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    3150:	dc 01       	movw	r26, r24
    3152:	cb 01       	movw	r24, r22
    3154:	f8 01       	movw	r30, r16
    3156:	91 83       	std	Z+1, r25	; 0x01
    3158:	80 83       	st	Z, r24
    315a:	ce 01       	movw	r24, r28
    315c:	8b 5c       	subi	r24, 0xCB	; 203
    315e:	9e 4f       	sbci	r25, 0xFE	; 254
    3160:	9e 01       	movw	r18, r28
    3162:	2f 5c       	subi	r18, 0xCF	; 207
    3164:	3e 4f       	sbci	r19, 0xFE	; 254
    3166:	f9 01       	movw	r30, r18
    3168:	20 81       	ld	r18, Z
    316a:	31 81       	ldd	r19, Z+1	; 0x01
    316c:	fc 01       	movw	r30, r24
    316e:	31 83       	std	Z+1, r19	; 0x01
    3170:	20 83       	st	Z, r18
    3172:	ce 01       	movw	r24, r28
    3174:	8b 5c       	subi	r24, 0xCB	; 203
    3176:	9e 4f       	sbci	r25, 0xFE	; 254
    3178:	fc 01       	movw	r30, r24
    317a:	80 81       	ld	r24, Z
    317c:	91 81       	ldd	r25, Z+1	; 0x01
    317e:	01 97       	sbiw	r24, 0x01	; 1
    3180:	f1 f7       	brne	.-4      	; 0x317e <__stack+0x207f>
    3182:	9e 01       	movw	r18, r28
    3184:	2b 5c       	subi	r18, 0xCB	; 203
    3186:	3e 4f       	sbci	r19, 0xFE	; 254
    3188:	f9 01       	movw	r30, r18
    318a:	91 83       	std	Z+1, r25	; 0x01
    318c:	80 83       	st	Z, r24
	_delay_ms(400);
	to_uARM("M2210 F320 T100\n");
    318e:	8b e0       	ldi	r24, 0x0B	; 11
    3190:	92 e0       	ldi	r25, 0x02	; 2
    3192:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    3196:	9e 01       	movw	r18, r28
    3198:	27 59       	subi	r18, 0x97	; 151
    319a:	3f 4f       	sbci	r19, 0xFF	; 255
    319c:	80 e0       	ldi	r24, 0x00	; 0
    319e:	90 e0       	ldi	r25, 0x00	; 0
    31a0:	aa ef       	ldi	r26, 0xFA	; 250
    31a2:	b3 e4       	ldi	r27, 0x43	; 67
    31a4:	f9 01       	movw	r30, r18
    31a6:	80 83       	st	Z, r24
    31a8:	91 83       	std	Z+1, r25	; 0x01
    31aa:	a2 83       	std	Z+2, r26	; 0x02
    31ac:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    31ae:	8e 01       	movw	r16, r28
    31b0:	0d 5d       	subi	r16, 0xDD	; 221
    31b2:	1e 4f       	sbci	r17, 0xFE	; 254
    31b4:	ce 01       	movw	r24, r28
    31b6:	87 59       	subi	r24, 0x97	; 151
    31b8:	9f 4f       	sbci	r25, 0xFF	; 255
    31ba:	20 e0       	ldi	r18, 0x00	; 0
    31bc:	30 e0       	ldi	r19, 0x00	; 0
    31be:	4a e7       	ldi	r20, 0x7A	; 122
    31c0:	55 e4       	ldi	r21, 0x45	; 69
    31c2:	fc 01       	movw	r30, r24
    31c4:	60 81       	ld	r22, Z
    31c6:	71 81       	ldd	r23, Z+1	; 0x01
    31c8:	82 81       	ldd	r24, Z+2	; 0x02
    31ca:	93 81       	ldd	r25, Z+3	; 0x03
    31cc:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    31d0:	dc 01       	movw	r26, r24
    31d2:	cb 01       	movw	r24, r22
    31d4:	f8 01       	movw	r30, r16
    31d6:	80 83       	st	Z, r24
    31d8:	91 83       	std	Z+1, r25	; 0x01
    31da:	a2 83       	std	Z+2, r26	; 0x02
    31dc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    31de:	ce 01       	movw	r24, r28
    31e0:	8d 5d       	subi	r24, 0xDD	; 221
    31e2:	9e 4f       	sbci	r25, 0xFE	; 254
    31e4:	20 e0       	ldi	r18, 0x00	; 0
    31e6:	30 e0       	ldi	r19, 0x00	; 0
    31e8:	40 e8       	ldi	r20, 0x80	; 128
    31ea:	5f e3       	ldi	r21, 0x3F	; 63
    31ec:	fc 01       	movw	r30, r24
    31ee:	60 81       	ld	r22, Z
    31f0:	71 81       	ldd	r23, Z+1	; 0x01
    31f2:	82 81       	ldd	r24, Z+2	; 0x02
    31f4:	93 81       	ldd	r25, Z+3	; 0x03
    31f6:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    31fa:	88 23       	and	r24, r24
    31fc:	4c f4       	brge	.+18     	; 0x3210 <__stack+0x2111>
		__ticks = 1;
    31fe:	ce 01       	movw	r24, r28
    3200:	89 5d       	subi	r24, 0xD9	; 217
    3202:	9e 4f       	sbci	r25, 0xFE	; 254
    3204:	21 e0       	ldi	r18, 0x01	; 1
    3206:	30 e0       	ldi	r19, 0x00	; 0
    3208:	fc 01       	movw	r30, r24
    320a:	31 83       	std	Z+1, r19	; 0x01
    320c:	20 83       	st	Z, r18
    320e:	6d c0       	rjmp	.+218    	; 0x32ea <__stack+0x21eb>
	else if (__tmp > 65535)
    3210:	ce 01       	movw	r24, r28
    3212:	8d 5d       	subi	r24, 0xDD	; 221
    3214:	9e 4f       	sbci	r25, 0xFE	; 254
    3216:	20 e0       	ldi	r18, 0x00	; 0
    3218:	3f ef       	ldi	r19, 0xFF	; 255
    321a:	4f e7       	ldi	r20, 0x7F	; 127
    321c:	57 e4       	ldi	r21, 0x47	; 71
    321e:	fc 01       	movw	r30, r24
    3220:	60 81       	ld	r22, Z
    3222:	71 81       	ldd	r23, Z+1	; 0x01
    3224:	82 81       	ldd	r24, Z+2	; 0x02
    3226:	93 81       	ldd	r25, Z+3	; 0x03
    3228:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    322c:	18 16       	cp	r1, r24
    322e:	0c f0       	brlt	.+2      	; 0x3232 <__stack+0x2133>
    3230:	4a c0       	rjmp	.+148    	; 0x32c6 <__stack+0x21c7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3232:	ce 01       	movw	r24, r28
    3234:	87 59       	subi	r24, 0x97	; 151
    3236:	9f 4f       	sbci	r25, 0xFF	; 255
    3238:	20 e0       	ldi	r18, 0x00	; 0
    323a:	30 e0       	ldi	r19, 0x00	; 0
    323c:	40 e2       	ldi	r20, 0x20	; 32
    323e:	51 e4       	ldi	r21, 0x41	; 65
    3240:	fc 01       	movw	r30, r24
    3242:	60 81       	ld	r22, Z
    3244:	71 81       	ldd	r23, Z+1	; 0x01
    3246:	82 81       	ldd	r24, Z+2	; 0x02
    3248:	93 81       	ldd	r25, Z+3	; 0x03
    324a:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    324e:	dc 01       	movw	r26, r24
    3250:	cb 01       	movw	r24, r22
    3252:	8e 01       	movw	r16, r28
    3254:	09 5d       	subi	r16, 0xD9	; 217
    3256:	1e 4f       	sbci	r17, 0xFE	; 254
    3258:	bc 01       	movw	r22, r24
    325a:	cd 01       	movw	r24, r26
    325c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    3260:	dc 01       	movw	r26, r24
    3262:	cb 01       	movw	r24, r22
    3264:	f8 01       	movw	r30, r16
    3266:	91 83       	std	Z+1, r25	; 0x01
    3268:	80 83       	st	Z, r24
    326a:	24 c0       	rjmp	.+72     	; 0x32b4 <__stack+0x21b5>
    326c:	ce 01       	movw	r24, r28
    326e:	87 5d       	subi	r24, 0xD7	; 215
    3270:	9e 4f       	sbci	r25, 0xFE	; 254
    3272:	20 e9       	ldi	r18, 0x90	; 144
    3274:	31 e0       	ldi	r19, 0x01	; 1
    3276:	fc 01       	movw	r30, r24
    3278:	31 83       	std	Z+1, r19	; 0x01
    327a:	20 83       	st	Z, r18
    327c:	ce 01       	movw	r24, r28
    327e:	87 5d       	subi	r24, 0xD7	; 215
    3280:	9e 4f       	sbci	r25, 0xFE	; 254
    3282:	fc 01       	movw	r30, r24
    3284:	80 81       	ld	r24, Z
    3286:	91 81       	ldd	r25, Z+1	; 0x01
    3288:	01 97       	sbiw	r24, 0x01	; 1
    328a:	f1 f7       	brne	.-4      	; 0x3288 <__stack+0x2189>
    328c:	9e 01       	movw	r18, r28
    328e:	27 5d       	subi	r18, 0xD7	; 215
    3290:	3e 4f       	sbci	r19, 0xFE	; 254
    3292:	f9 01       	movw	r30, r18
    3294:	91 83       	std	Z+1, r25	; 0x01
    3296:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3298:	ce 01       	movw	r24, r28
    329a:	89 5d       	subi	r24, 0xD9	; 217
    329c:	9e 4f       	sbci	r25, 0xFE	; 254
    329e:	9e 01       	movw	r18, r28
    32a0:	29 5d       	subi	r18, 0xD9	; 217
    32a2:	3e 4f       	sbci	r19, 0xFE	; 254
    32a4:	f9 01       	movw	r30, r18
    32a6:	20 81       	ld	r18, Z
    32a8:	31 81       	ldd	r19, Z+1	; 0x01
    32aa:	21 50       	subi	r18, 0x01	; 1
    32ac:	31 09       	sbc	r19, r1
    32ae:	fc 01       	movw	r30, r24
    32b0:	31 83       	std	Z+1, r19	; 0x01
    32b2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    32b4:	ce 01       	movw	r24, r28
    32b6:	89 5d       	subi	r24, 0xD9	; 217
    32b8:	9e 4f       	sbci	r25, 0xFE	; 254
    32ba:	fc 01       	movw	r30, r24
    32bc:	80 81       	ld	r24, Z
    32be:	91 81       	ldd	r25, Z+1	; 0x01
    32c0:	89 2b       	or	r24, r25
    32c2:	a1 f6       	brne	.-88     	; 0x326c <__stack+0x216d>
    32c4:	2c c0       	rjmp	.+88     	; 0x331e <__stack+0x221f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    32c6:	8e 01       	movw	r16, r28
    32c8:	09 5d       	subi	r16, 0xD9	; 217
    32ca:	1e 4f       	sbci	r17, 0xFE	; 254
    32cc:	ce 01       	movw	r24, r28
    32ce:	8d 5d       	subi	r24, 0xDD	; 221
    32d0:	9e 4f       	sbci	r25, 0xFE	; 254
    32d2:	fc 01       	movw	r30, r24
    32d4:	60 81       	ld	r22, Z
    32d6:	71 81       	ldd	r23, Z+1	; 0x01
    32d8:	82 81       	ldd	r24, Z+2	; 0x02
    32da:	93 81       	ldd	r25, Z+3	; 0x03
    32dc:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    32e0:	dc 01       	movw	r26, r24
    32e2:	cb 01       	movw	r24, r22
    32e4:	f8 01       	movw	r30, r16
    32e6:	91 83       	std	Z+1, r25	; 0x01
    32e8:	80 83       	st	Z, r24
    32ea:	ce 01       	movw	r24, r28
    32ec:	85 5d       	subi	r24, 0xD5	; 213
    32ee:	9e 4f       	sbci	r25, 0xFE	; 254
    32f0:	9e 01       	movw	r18, r28
    32f2:	29 5d       	subi	r18, 0xD9	; 217
    32f4:	3e 4f       	sbci	r19, 0xFE	; 254
    32f6:	f9 01       	movw	r30, r18
    32f8:	20 81       	ld	r18, Z
    32fa:	31 81       	ldd	r19, Z+1	; 0x01
    32fc:	fc 01       	movw	r30, r24
    32fe:	31 83       	std	Z+1, r19	; 0x01
    3300:	20 83       	st	Z, r18
    3302:	ce 01       	movw	r24, r28
    3304:	85 5d       	subi	r24, 0xD5	; 213
    3306:	9e 4f       	sbci	r25, 0xFE	; 254
    3308:	fc 01       	movw	r30, r24
    330a:	80 81       	ld	r24, Z
    330c:	91 81       	ldd	r25, Z+1	; 0x01
    330e:	01 97       	sbiw	r24, 0x01	; 1
    3310:	f1 f7       	brne	.-4      	; 0x330e <__stack+0x220f>
    3312:	9e 01       	movw	r18, r28
    3314:	25 5d       	subi	r18, 0xD5	; 213
    3316:	3e 4f       	sbci	r19, 0xFE	; 254
    3318:	f9 01       	movw	r30, r18
    331a:	91 83       	std	Z+1, r25	; 0x01
    331c:	80 83       	st	Z, r24
	_delay_ms(500);
	to_uARM("M2210 F440 T100\n");
    331e:	8c e1       	ldi	r24, 0x1C	; 28
    3320:	92 e0       	ldi	r25, 0x02	; 2
    3322:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    3326:	9e 01       	movw	r18, r28
    3328:	23 59       	subi	r18, 0x93	; 147
    332a:	3f 4f       	sbci	r19, 0xFF	; 255
    332c:	80 e0       	ldi	r24, 0x00	; 0
    332e:	90 e0       	ldi	r25, 0x00	; 0
    3330:	a6 e9       	ldi	r26, 0x96	; 150
    3332:	b3 e4       	ldi	r27, 0x43	; 67
    3334:	f9 01       	movw	r30, r18
    3336:	80 83       	st	Z, r24
    3338:	91 83       	std	Z+1, r25	; 0x01
    333a:	a2 83       	std	Z+2, r26	; 0x02
    333c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    333e:	8e 01       	movw	r16, r28
    3340:	07 5e       	subi	r16, 0xE7	; 231
    3342:	1e 4f       	sbci	r17, 0xFE	; 254
    3344:	ce 01       	movw	r24, r28
    3346:	83 59       	subi	r24, 0x93	; 147
    3348:	9f 4f       	sbci	r25, 0xFF	; 255
    334a:	20 e0       	ldi	r18, 0x00	; 0
    334c:	30 e0       	ldi	r19, 0x00	; 0
    334e:	4a e7       	ldi	r20, 0x7A	; 122
    3350:	55 e4       	ldi	r21, 0x45	; 69
    3352:	fc 01       	movw	r30, r24
    3354:	60 81       	ld	r22, Z
    3356:	71 81       	ldd	r23, Z+1	; 0x01
    3358:	82 81       	ldd	r24, Z+2	; 0x02
    335a:	93 81       	ldd	r25, Z+3	; 0x03
    335c:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    3360:	dc 01       	movw	r26, r24
    3362:	cb 01       	movw	r24, r22
    3364:	f8 01       	movw	r30, r16
    3366:	80 83       	st	Z, r24
    3368:	91 83       	std	Z+1, r25	; 0x01
    336a:	a2 83       	std	Z+2, r26	; 0x02
    336c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    336e:	ce 01       	movw	r24, r28
    3370:	87 5e       	subi	r24, 0xE7	; 231
    3372:	9e 4f       	sbci	r25, 0xFE	; 254
    3374:	20 e0       	ldi	r18, 0x00	; 0
    3376:	30 e0       	ldi	r19, 0x00	; 0
    3378:	40 e8       	ldi	r20, 0x80	; 128
    337a:	5f e3       	ldi	r21, 0x3F	; 63
    337c:	fc 01       	movw	r30, r24
    337e:	60 81       	ld	r22, Z
    3380:	71 81       	ldd	r23, Z+1	; 0x01
    3382:	82 81       	ldd	r24, Z+2	; 0x02
    3384:	93 81       	ldd	r25, Z+3	; 0x03
    3386:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    338a:	88 23       	and	r24, r24
    338c:	4c f4       	brge	.+18     	; 0x33a0 <__stack+0x22a1>
		__ticks = 1;
    338e:	ce 01       	movw	r24, r28
    3390:	83 5e       	subi	r24, 0xE3	; 227
    3392:	9e 4f       	sbci	r25, 0xFE	; 254
    3394:	21 e0       	ldi	r18, 0x01	; 1
    3396:	30 e0       	ldi	r19, 0x00	; 0
    3398:	fc 01       	movw	r30, r24
    339a:	31 83       	std	Z+1, r19	; 0x01
    339c:	20 83       	st	Z, r18
    339e:	6d c0       	rjmp	.+218    	; 0x347a <__stack+0x237b>
	else if (__tmp > 65535)
    33a0:	ce 01       	movw	r24, r28
    33a2:	87 5e       	subi	r24, 0xE7	; 231
    33a4:	9e 4f       	sbci	r25, 0xFE	; 254
    33a6:	20 e0       	ldi	r18, 0x00	; 0
    33a8:	3f ef       	ldi	r19, 0xFF	; 255
    33aa:	4f e7       	ldi	r20, 0x7F	; 127
    33ac:	57 e4       	ldi	r21, 0x47	; 71
    33ae:	fc 01       	movw	r30, r24
    33b0:	60 81       	ld	r22, Z
    33b2:	71 81       	ldd	r23, Z+1	; 0x01
    33b4:	82 81       	ldd	r24, Z+2	; 0x02
    33b6:	93 81       	ldd	r25, Z+3	; 0x03
    33b8:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    33bc:	18 16       	cp	r1, r24
    33be:	0c f0       	brlt	.+2      	; 0x33c2 <__stack+0x22c3>
    33c0:	4a c0       	rjmp	.+148    	; 0x3456 <__stack+0x2357>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    33c2:	ce 01       	movw	r24, r28
    33c4:	83 59       	subi	r24, 0x93	; 147
    33c6:	9f 4f       	sbci	r25, 0xFF	; 255
    33c8:	20 e0       	ldi	r18, 0x00	; 0
    33ca:	30 e0       	ldi	r19, 0x00	; 0
    33cc:	40 e2       	ldi	r20, 0x20	; 32
    33ce:	51 e4       	ldi	r21, 0x41	; 65
    33d0:	fc 01       	movw	r30, r24
    33d2:	60 81       	ld	r22, Z
    33d4:	71 81       	ldd	r23, Z+1	; 0x01
    33d6:	82 81       	ldd	r24, Z+2	; 0x02
    33d8:	93 81       	ldd	r25, Z+3	; 0x03
    33da:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    33de:	dc 01       	movw	r26, r24
    33e0:	cb 01       	movw	r24, r22
    33e2:	8e 01       	movw	r16, r28
    33e4:	03 5e       	subi	r16, 0xE3	; 227
    33e6:	1e 4f       	sbci	r17, 0xFE	; 254
    33e8:	bc 01       	movw	r22, r24
    33ea:	cd 01       	movw	r24, r26
    33ec:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    33f0:	dc 01       	movw	r26, r24
    33f2:	cb 01       	movw	r24, r22
    33f4:	f8 01       	movw	r30, r16
    33f6:	91 83       	std	Z+1, r25	; 0x01
    33f8:	80 83       	st	Z, r24
    33fa:	24 c0       	rjmp	.+72     	; 0x3444 <__stack+0x2345>
    33fc:	ce 01       	movw	r24, r28
    33fe:	81 5e       	subi	r24, 0xE1	; 225
    3400:	9e 4f       	sbci	r25, 0xFE	; 254
    3402:	20 e9       	ldi	r18, 0x90	; 144
    3404:	31 e0       	ldi	r19, 0x01	; 1
    3406:	fc 01       	movw	r30, r24
    3408:	31 83       	std	Z+1, r19	; 0x01
    340a:	20 83       	st	Z, r18
    340c:	ce 01       	movw	r24, r28
    340e:	81 5e       	subi	r24, 0xE1	; 225
    3410:	9e 4f       	sbci	r25, 0xFE	; 254
    3412:	fc 01       	movw	r30, r24
    3414:	80 81       	ld	r24, Z
    3416:	91 81       	ldd	r25, Z+1	; 0x01
    3418:	01 97       	sbiw	r24, 0x01	; 1
    341a:	f1 f7       	brne	.-4      	; 0x3418 <__stack+0x2319>
    341c:	9e 01       	movw	r18, r28
    341e:	21 5e       	subi	r18, 0xE1	; 225
    3420:	3e 4f       	sbci	r19, 0xFE	; 254
    3422:	f9 01       	movw	r30, r18
    3424:	91 83       	std	Z+1, r25	; 0x01
    3426:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3428:	ce 01       	movw	r24, r28
    342a:	83 5e       	subi	r24, 0xE3	; 227
    342c:	9e 4f       	sbci	r25, 0xFE	; 254
    342e:	9e 01       	movw	r18, r28
    3430:	23 5e       	subi	r18, 0xE3	; 227
    3432:	3e 4f       	sbci	r19, 0xFE	; 254
    3434:	f9 01       	movw	r30, r18
    3436:	20 81       	ld	r18, Z
    3438:	31 81       	ldd	r19, Z+1	; 0x01
    343a:	21 50       	subi	r18, 0x01	; 1
    343c:	31 09       	sbc	r19, r1
    343e:	fc 01       	movw	r30, r24
    3440:	31 83       	std	Z+1, r19	; 0x01
    3442:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3444:	ce 01       	movw	r24, r28
    3446:	83 5e       	subi	r24, 0xE3	; 227
    3448:	9e 4f       	sbci	r25, 0xFE	; 254
    344a:	fc 01       	movw	r30, r24
    344c:	80 81       	ld	r24, Z
    344e:	91 81       	ldd	r25, Z+1	; 0x01
    3450:	89 2b       	or	r24, r25
    3452:	a1 f6       	brne	.-88     	; 0x33fc <__stack+0x22fd>
    3454:	2c c0       	rjmp	.+88     	; 0x34ae <__stack+0x23af>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3456:	8e 01       	movw	r16, r28
    3458:	03 5e       	subi	r16, 0xE3	; 227
    345a:	1e 4f       	sbci	r17, 0xFE	; 254
    345c:	ce 01       	movw	r24, r28
    345e:	87 5e       	subi	r24, 0xE7	; 231
    3460:	9e 4f       	sbci	r25, 0xFE	; 254
    3462:	fc 01       	movw	r30, r24
    3464:	60 81       	ld	r22, Z
    3466:	71 81       	ldd	r23, Z+1	; 0x01
    3468:	82 81       	ldd	r24, Z+2	; 0x02
    346a:	93 81       	ldd	r25, Z+3	; 0x03
    346c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    3470:	dc 01       	movw	r26, r24
    3472:	cb 01       	movw	r24, r22
    3474:	f8 01       	movw	r30, r16
    3476:	91 83       	std	Z+1, r25	; 0x01
    3478:	80 83       	st	Z, r24
    347a:	ce 01       	movw	r24, r28
    347c:	8f 5d       	subi	r24, 0xDF	; 223
    347e:	9e 4f       	sbci	r25, 0xFE	; 254
    3480:	9e 01       	movw	r18, r28
    3482:	23 5e       	subi	r18, 0xE3	; 227
    3484:	3e 4f       	sbci	r19, 0xFE	; 254
    3486:	f9 01       	movw	r30, r18
    3488:	20 81       	ld	r18, Z
    348a:	31 81       	ldd	r19, Z+1	; 0x01
    348c:	fc 01       	movw	r30, r24
    348e:	31 83       	std	Z+1, r19	; 0x01
    3490:	20 83       	st	Z, r18
    3492:	ce 01       	movw	r24, r28
    3494:	8f 5d       	subi	r24, 0xDF	; 223
    3496:	9e 4f       	sbci	r25, 0xFE	; 254
    3498:	fc 01       	movw	r30, r24
    349a:	80 81       	ld	r24, Z
    349c:	91 81       	ldd	r25, Z+1	; 0x01
    349e:	01 97       	sbiw	r24, 0x01	; 1
    34a0:	f1 f7       	brne	.-4      	; 0x349e <__stack+0x239f>
    34a2:	9e 01       	movw	r18, r28
    34a4:	2f 5d       	subi	r18, 0xDF	; 223
    34a6:	3e 4f       	sbci	r19, 0xFE	; 254
    34a8:	f9 01       	movw	r30, r18
    34aa:	91 83       	std	Z+1, r25	; 0x01
    34ac:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F480 T80\n");
    34ae:	8d e2       	ldi	r24, 0x2D	; 45
    34b0:	92 e0       	ldi	r25, 0x02	; 2
    34b2:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    34b6:	9e 01       	movw	r18, r28
    34b8:	2f 58       	subi	r18, 0x8F	; 143
    34ba:	3f 4f       	sbci	r19, 0xFF	; 255
    34bc:	80 e0       	ldi	r24, 0x00	; 0
    34be:	90 e0       	ldi	r25, 0x00	; 0
    34c0:	a5 ea       	ldi	r26, 0xA5	; 165
    34c2:	b3 e4       	ldi	r27, 0x43	; 67
    34c4:	f9 01       	movw	r30, r18
    34c6:	80 83       	st	Z, r24
    34c8:	91 83       	std	Z+1, r25	; 0x01
    34ca:	a2 83       	std	Z+2, r26	; 0x02
    34cc:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    34ce:	8e 01       	movw	r16, r28
    34d0:	01 5f       	subi	r16, 0xF1	; 241
    34d2:	1e 4f       	sbci	r17, 0xFE	; 254
    34d4:	ce 01       	movw	r24, r28
    34d6:	8f 58       	subi	r24, 0x8F	; 143
    34d8:	9f 4f       	sbci	r25, 0xFF	; 255
    34da:	20 e0       	ldi	r18, 0x00	; 0
    34dc:	30 e0       	ldi	r19, 0x00	; 0
    34de:	4a e7       	ldi	r20, 0x7A	; 122
    34e0:	55 e4       	ldi	r21, 0x45	; 69
    34e2:	fc 01       	movw	r30, r24
    34e4:	60 81       	ld	r22, Z
    34e6:	71 81       	ldd	r23, Z+1	; 0x01
    34e8:	82 81       	ldd	r24, Z+2	; 0x02
    34ea:	93 81       	ldd	r25, Z+3	; 0x03
    34ec:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    34f0:	dc 01       	movw	r26, r24
    34f2:	cb 01       	movw	r24, r22
    34f4:	f8 01       	movw	r30, r16
    34f6:	80 83       	st	Z, r24
    34f8:	91 83       	std	Z+1, r25	; 0x01
    34fa:	a2 83       	std	Z+2, r26	; 0x02
    34fc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    34fe:	ce 01       	movw	r24, r28
    3500:	81 5f       	subi	r24, 0xF1	; 241
    3502:	9e 4f       	sbci	r25, 0xFE	; 254
    3504:	20 e0       	ldi	r18, 0x00	; 0
    3506:	30 e0       	ldi	r19, 0x00	; 0
    3508:	40 e8       	ldi	r20, 0x80	; 128
    350a:	5f e3       	ldi	r21, 0x3F	; 63
    350c:	fc 01       	movw	r30, r24
    350e:	60 81       	ld	r22, Z
    3510:	71 81       	ldd	r23, Z+1	; 0x01
    3512:	82 81       	ldd	r24, Z+2	; 0x02
    3514:	93 81       	ldd	r25, Z+3	; 0x03
    3516:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    351a:	88 23       	and	r24, r24
    351c:	4c f4       	brge	.+18     	; 0x3530 <__stack+0x2431>
		__ticks = 1;
    351e:	ce 01       	movw	r24, r28
    3520:	8d 5e       	subi	r24, 0xED	; 237
    3522:	9e 4f       	sbci	r25, 0xFE	; 254
    3524:	21 e0       	ldi	r18, 0x01	; 1
    3526:	30 e0       	ldi	r19, 0x00	; 0
    3528:	fc 01       	movw	r30, r24
    352a:	31 83       	std	Z+1, r19	; 0x01
    352c:	20 83       	st	Z, r18
    352e:	6d c0       	rjmp	.+218    	; 0x360a <__stack+0x250b>
	else if (__tmp > 65535)
    3530:	ce 01       	movw	r24, r28
    3532:	81 5f       	subi	r24, 0xF1	; 241
    3534:	9e 4f       	sbci	r25, 0xFE	; 254
    3536:	20 e0       	ldi	r18, 0x00	; 0
    3538:	3f ef       	ldi	r19, 0xFF	; 255
    353a:	4f e7       	ldi	r20, 0x7F	; 127
    353c:	57 e4       	ldi	r21, 0x47	; 71
    353e:	fc 01       	movw	r30, r24
    3540:	60 81       	ld	r22, Z
    3542:	71 81       	ldd	r23, Z+1	; 0x01
    3544:	82 81       	ldd	r24, Z+2	; 0x02
    3546:	93 81       	ldd	r25, Z+3	; 0x03
    3548:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    354c:	18 16       	cp	r1, r24
    354e:	0c f0       	brlt	.+2      	; 0x3552 <__stack+0x2453>
    3550:	4a c0       	rjmp	.+148    	; 0x35e6 <__stack+0x24e7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3552:	ce 01       	movw	r24, r28
    3554:	8f 58       	subi	r24, 0x8F	; 143
    3556:	9f 4f       	sbci	r25, 0xFF	; 255
    3558:	20 e0       	ldi	r18, 0x00	; 0
    355a:	30 e0       	ldi	r19, 0x00	; 0
    355c:	40 e2       	ldi	r20, 0x20	; 32
    355e:	51 e4       	ldi	r21, 0x41	; 65
    3560:	fc 01       	movw	r30, r24
    3562:	60 81       	ld	r22, Z
    3564:	71 81       	ldd	r23, Z+1	; 0x01
    3566:	82 81       	ldd	r24, Z+2	; 0x02
    3568:	93 81       	ldd	r25, Z+3	; 0x03
    356a:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    356e:	dc 01       	movw	r26, r24
    3570:	cb 01       	movw	r24, r22
    3572:	8e 01       	movw	r16, r28
    3574:	0d 5e       	subi	r16, 0xED	; 237
    3576:	1e 4f       	sbci	r17, 0xFE	; 254
    3578:	bc 01       	movw	r22, r24
    357a:	cd 01       	movw	r24, r26
    357c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    3580:	dc 01       	movw	r26, r24
    3582:	cb 01       	movw	r24, r22
    3584:	f8 01       	movw	r30, r16
    3586:	91 83       	std	Z+1, r25	; 0x01
    3588:	80 83       	st	Z, r24
    358a:	24 c0       	rjmp	.+72     	; 0x35d4 <__stack+0x24d5>
    358c:	ce 01       	movw	r24, r28
    358e:	8b 5e       	subi	r24, 0xEB	; 235
    3590:	9e 4f       	sbci	r25, 0xFE	; 254
    3592:	20 e9       	ldi	r18, 0x90	; 144
    3594:	31 e0       	ldi	r19, 0x01	; 1
    3596:	fc 01       	movw	r30, r24
    3598:	31 83       	std	Z+1, r19	; 0x01
    359a:	20 83       	st	Z, r18
    359c:	ce 01       	movw	r24, r28
    359e:	8b 5e       	subi	r24, 0xEB	; 235
    35a0:	9e 4f       	sbci	r25, 0xFE	; 254
    35a2:	fc 01       	movw	r30, r24
    35a4:	80 81       	ld	r24, Z
    35a6:	91 81       	ldd	r25, Z+1	; 0x01
    35a8:	01 97       	sbiw	r24, 0x01	; 1
    35aa:	f1 f7       	brne	.-4      	; 0x35a8 <__stack+0x24a9>
    35ac:	9e 01       	movw	r18, r28
    35ae:	2b 5e       	subi	r18, 0xEB	; 235
    35b0:	3e 4f       	sbci	r19, 0xFE	; 254
    35b2:	f9 01       	movw	r30, r18
    35b4:	91 83       	std	Z+1, r25	; 0x01
    35b6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    35b8:	ce 01       	movw	r24, r28
    35ba:	8d 5e       	subi	r24, 0xED	; 237
    35bc:	9e 4f       	sbci	r25, 0xFE	; 254
    35be:	9e 01       	movw	r18, r28
    35c0:	2d 5e       	subi	r18, 0xED	; 237
    35c2:	3e 4f       	sbci	r19, 0xFE	; 254
    35c4:	f9 01       	movw	r30, r18
    35c6:	20 81       	ld	r18, Z
    35c8:	31 81       	ldd	r19, Z+1	; 0x01
    35ca:	21 50       	subi	r18, 0x01	; 1
    35cc:	31 09       	sbc	r19, r1
    35ce:	fc 01       	movw	r30, r24
    35d0:	31 83       	std	Z+1, r19	; 0x01
    35d2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    35d4:	ce 01       	movw	r24, r28
    35d6:	8d 5e       	subi	r24, 0xED	; 237
    35d8:	9e 4f       	sbci	r25, 0xFE	; 254
    35da:	fc 01       	movw	r30, r24
    35dc:	80 81       	ld	r24, Z
    35de:	91 81       	ldd	r25, Z+1	; 0x01
    35e0:	89 2b       	or	r24, r25
    35e2:	a1 f6       	brne	.-88     	; 0x358c <__stack+0x248d>
    35e4:	2c c0       	rjmp	.+88     	; 0x363e <__stack+0x253f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    35e6:	8e 01       	movw	r16, r28
    35e8:	0d 5e       	subi	r16, 0xED	; 237
    35ea:	1e 4f       	sbci	r17, 0xFE	; 254
    35ec:	ce 01       	movw	r24, r28
    35ee:	81 5f       	subi	r24, 0xF1	; 241
    35f0:	9e 4f       	sbci	r25, 0xFE	; 254
    35f2:	fc 01       	movw	r30, r24
    35f4:	60 81       	ld	r22, Z
    35f6:	71 81       	ldd	r23, Z+1	; 0x01
    35f8:	82 81       	ldd	r24, Z+2	; 0x02
    35fa:	93 81       	ldd	r25, Z+3	; 0x03
    35fc:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    3600:	dc 01       	movw	r26, r24
    3602:	cb 01       	movw	r24, r22
    3604:	f8 01       	movw	r30, r16
    3606:	91 83       	std	Z+1, r25	; 0x01
    3608:	80 83       	st	Z, r24
    360a:	ce 01       	movw	r24, r28
    360c:	89 5e       	subi	r24, 0xE9	; 233
    360e:	9e 4f       	sbci	r25, 0xFE	; 254
    3610:	9e 01       	movw	r18, r28
    3612:	2d 5e       	subi	r18, 0xED	; 237
    3614:	3e 4f       	sbci	r19, 0xFE	; 254
    3616:	f9 01       	movw	r30, r18
    3618:	20 81       	ld	r18, Z
    361a:	31 81       	ldd	r19, Z+1	; 0x01
    361c:	fc 01       	movw	r30, r24
    361e:	31 83       	std	Z+1, r19	; 0x01
    3620:	20 83       	st	Z, r18
    3622:	ce 01       	movw	r24, r28
    3624:	89 5e       	subi	r24, 0xE9	; 233
    3626:	9e 4f       	sbci	r25, 0xFE	; 254
    3628:	fc 01       	movw	r30, r24
    362a:	80 81       	ld	r24, Z
    362c:	91 81       	ldd	r25, Z+1	; 0x01
    362e:	01 97       	sbiw	r24, 0x01	; 1
    3630:	f1 f7       	brne	.-4      	; 0x362e <__stack+0x252f>
    3632:	9e 01       	movw	r18, r28
    3634:	29 5e       	subi	r18, 0xE9	; 233
    3636:	3e 4f       	sbci	r19, 0xFE	; 254
    3638:	f9 01       	movw	r30, r18
    363a:	91 83       	std	Z+1, r25	; 0x01
    363c:	80 83       	st	Z, r24
	_delay_ms(330);
	to_uARM("M2210 F450 T100\n");
    363e:	8d e3       	ldi	r24, 0x3D	; 61
    3640:	92 e0       	ldi	r25, 0x02	; 2
    3642:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    3646:	9e 01       	movw	r18, r28
    3648:	2b 58       	subi	r18, 0x8B	; 139
    364a:	3f 4f       	sbci	r19, 0xFF	; 255
    364c:	80 e0       	ldi	r24, 0x00	; 0
    364e:	90 e0       	ldi	r25, 0x00	; 0
    3650:	a6 e1       	ldi	r26, 0x16	; 22
    3652:	b3 e4       	ldi	r27, 0x43	; 67
    3654:	f9 01       	movw	r30, r18
    3656:	80 83       	st	Z, r24
    3658:	91 83       	std	Z+1, r25	; 0x01
    365a:	a2 83       	std	Z+2, r26	; 0x02
    365c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    365e:	8e 01       	movw	r16, r28
    3660:	0b 5f       	subi	r16, 0xFB	; 251
    3662:	1e 4f       	sbci	r17, 0xFE	; 254
    3664:	ce 01       	movw	r24, r28
    3666:	8b 58       	subi	r24, 0x8B	; 139
    3668:	9f 4f       	sbci	r25, 0xFF	; 255
    366a:	20 e0       	ldi	r18, 0x00	; 0
    366c:	30 e0       	ldi	r19, 0x00	; 0
    366e:	4a e7       	ldi	r20, 0x7A	; 122
    3670:	55 e4       	ldi	r21, 0x45	; 69
    3672:	fc 01       	movw	r30, r24
    3674:	60 81       	ld	r22, Z
    3676:	71 81       	ldd	r23, Z+1	; 0x01
    3678:	82 81       	ldd	r24, Z+2	; 0x02
    367a:	93 81       	ldd	r25, Z+3	; 0x03
    367c:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    3680:	dc 01       	movw	r26, r24
    3682:	cb 01       	movw	r24, r22
    3684:	f8 01       	movw	r30, r16
    3686:	80 83       	st	Z, r24
    3688:	91 83       	std	Z+1, r25	; 0x01
    368a:	a2 83       	std	Z+2, r26	; 0x02
    368c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    368e:	ce 01       	movw	r24, r28
    3690:	8b 5f       	subi	r24, 0xFB	; 251
    3692:	9e 4f       	sbci	r25, 0xFE	; 254
    3694:	20 e0       	ldi	r18, 0x00	; 0
    3696:	30 e0       	ldi	r19, 0x00	; 0
    3698:	40 e8       	ldi	r20, 0x80	; 128
    369a:	5f e3       	ldi	r21, 0x3F	; 63
    369c:	fc 01       	movw	r30, r24
    369e:	60 81       	ld	r22, Z
    36a0:	71 81       	ldd	r23, Z+1	; 0x01
    36a2:	82 81       	ldd	r24, Z+2	; 0x02
    36a4:	93 81       	ldd	r25, Z+3	; 0x03
    36a6:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    36aa:	88 23       	and	r24, r24
    36ac:	4c f4       	brge	.+18     	; 0x36c0 <__stack+0x25c1>
		__ticks = 1;
    36ae:	ce 01       	movw	r24, r28
    36b0:	87 5f       	subi	r24, 0xF7	; 247
    36b2:	9e 4f       	sbci	r25, 0xFE	; 254
    36b4:	21 e0       	ldi	r18, 0x01	; 1
    36b6:	30 e0       	ldi	r19, 0x00	; 0
    36b8:	fc 01       	movw	r30, r24
    36ba:	31 83       	std	Z+1, r19	; 0x01
    36bc:	20 83       	st	Z, r18
    36be:	6d c0       	rjmp	.+218    	; 0x379a <__stack+0x269b>
	else if (__tmp > 65535)
    36c0:	ce 01       	movw	r24, r28
    36c2:	8b 5f       	subi	r24, 0xFB	; 251
    36c4:	9e 4f       	sbci	r25, 0xFE	; 254
    36c6:	20 e0       	ldi	r18, 0x00	; 0
    36c8:	3f ef       	ldi	r19, 0xFF	; 255
    36ca:	4f e7       	ldi	r20, 0x7F	; 127
    36cc:	57 e4       	ldi	r21, 0x47	; 71
    36ce:	fc 01       	movw	r30, r24
    36d0:	60 81       	ld	r22, Z
    36d2:	71 81       	ldd	r23, Z+1	; 0x01
    36d4:	82 81       	ldd	r24, Z+2	; 0x02
    36d6:	93 81       	ldd	r25, Z+3	; 0x03
    36d8:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    36dc:	18 16       	cp	r1, r24
    36de:	0c f0       	brlt	.+2      	; 0x36e2 <__stack+0x25e3>
    36e0:	4a c0       	rjmp	.+148    	; 0x3776 <__stack+0x2677>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    36e2:	ce 01       	movw	r24, r28
    36e4:	8b 58       	subi	r24, 0x8B	; 139
    36e6:	9f 4f       	sbci	r25, 0xFF	; 255
    36e8:	20 e0       	ldi	r18, 0x00	; 0
    36ea:	30 e0       	ldi	r19, 0x00	; 0
    36ec:	40 e2       	ldi	r20, 0x20	; 32
    36ee:	51 e4       	ldi	r21, 0x41	; 65
    36f0:	fc 01       	movw	r30, r24
    36f2:	60 81       	ld	r22, Z
    36f4:	71 81       	ldd	r23, Z+1	; 0x01
    36f6:	82 81       	ldd	r24, Z+2	; 0x02
    36f8:	93 81       	ldd	r25, Z+3	; 0x03
    36fa:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    36fe:	dc 01       	movw	r26, r24
    3700:	cb 01       	movw	r24, r22
    3702:	8e 01       	movw	r16, r28
    3704:	07 5f       	subi	r16, 0xF7	; 247
    3706:	1e 4f       	sbci	r17, 0xFE	; 254
    3708:	bc 01       	movw	r22, r24
    370a:	cd 01       	movw	r24, r26
    370c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    3710:	dc 01       	movw	r26, r24
    3712:	cb 01       	movw	r24, r22
    3714:	f8 01       	movw	r30, r16
    3716:	91 83       	std	Z+1, r25	; 0x01
    3718:	80 83       	st	Z, r24
    371a:	24 c0       	rjmp	.+72     	; 0x3764 <__stack+0x2665>
    371c:	ce 01       	movw	r24, r28
    371e:	85 5f       	subi	r24, 0xF5	; 245
    3720:	9e 4f       	sbci	r25, 0xFE	; 254
    3722:	20 e9       	ldi	r18, 0x90	; 144
    3724:	31 e0       	ldi	r19, 0x01	; 1
    3726:	fc 01       	movw	r30, r24
    3728:	31 83       	std	Z+1, r19	; 0x01
    372a:	20 83       	st	Z, r18
    372c:	ce 01       	movw	r24, r28
    372e:	85 5f       	subi	r24, 0xF5	; 245
    3730:	9e 4f       	sbci	r25, 0xFE	; 254
    3732:	fc 01       	movw	r30, r24
    3734:	80 81       	ld	r24, Z
    3736:	91 81       	ldd	r25, Z+1	; 0x01
    3738:	01 97       	sbiw	r24, 0x01	; 1
    373a:	f1 f7       	brne	.-4      	; 0x3738 <__stack+0x2639>
    373c:	9e 01       	movw	r18, r28
    373e:	25 5f       	subi	r18, 0xF5	; 245
    3740:	3e 4f       	sbci	r19, 0xFE	; 254
    3742:	f9 01       	movw	r30, r18
    3744:	91 83       	std	Z+1, r25	; 0x01
    3746:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3748:	ce 01       	movw	r24, r28
    374a:	87 5f       	subi	r24, 0xF7	; 247
    374c:	9e 4f       	sbci	r25, 0xFE	; 254
    374e:	9e 01       	movw	r18, r28
    3750:	27 5f       	subi	r18, 0xF7	; 247
    3752:	3e 4f       	sbci	r19, 0xFE	; 254
    3754:	f9 01       	movw	r30, r18
    3756:	20 81       	ld	r18, Z
    3758:	31 81       	ldd	r19, Z+1	; 0x01
    375a:	21 50       	subi	r18, 0x01	; 1
    375c:	31 09       	sbc	r19, r1
    375e:	fc 01       	movw	r30, r24
    3760:	31 83       	std	Z+1, r19	; 0x01
    3762:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3764:	ce 01       	movw	r24, r28
    3766:	87 5f       	subi	r24, 0xF7	; 247
    3768:	9e 4f       	sbci	r25, 0xFE	; 254
    376a:	fc 01       	movw	r30, r24
    376c:	80 81       	ld	r24, Z
    376e:	91 81       	ldd	r25, Z+1	; 0x01
    3770:	89 2b       	or	r24, r25
    3772:	a1 f6       	brne	.-88     	; 0x371c <__stack+0x261d>
    3774:	2c c0       	rjmp	.+88     	; 0x37ce <__stack+0x26cf>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3776:	8e 01       	movw	r16, r28
    3778:	07 5f       	subi	r16, 0xF7	; 247
    377a:	1e 4f       	sbci	r17, 0xFE	; 254
    377c:	ce 01       	movw	r24, r28
    377e:	8b 5f       	subi	r24, 0xFB	; 251
    3780:	9e 4f       	sbci	r25, 0xFE	; 254
    3782:	fc 01       	movw	r30, r24
    3784:	60 81       	ld	r22, Z
    3786:	71 81       	ldd	r23, Z+1	; 0x01
    3788:	82 81       	ldd	r24, Z+2	; 0x02
    378a:	93 81       	ldd	r25, Z+3	; 0x03
    378c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    3790:	dc 01       	movw	r26, r24
    3792:	cb 01       	movw	r24, r22
    3794:	f8 01       	movw	r30, r16
    3796:	91 83       	std	Z+1, r25	; 0x01
    3798:	80 83       	st	Z, r24
    379a:	ce 01       	movw	r24, r28
    379c:	83 5f       	subi	r24, 0xF3	; 243
    379e:	9e 4f       	sbci	r25, 0xFE	; 254
    37a0:	9e 01       	movw	r18, r28
    37a2:	27 5f       	subi	r18, 0xF7	; 247
    37a4:	3e 4f       	sbci	r19, 0xFE	; 254
    37a6:	f9 01       	movw	r30, r18
    37a8:	20 81       	ld	r18, Z
    37aa:	31 81       	ldd	r19, Z+1	; 0x01
    37ac:	fc 01       	movw	r30, r24
    37ae:	31 83       	std	Z+1, r19	; 0x01
    37b0:	20 83       	st	Z, r18
    37b2:	ce 01       	movw	r24, r28
    37b4:	83 5f       	subi	r24, 0xF3	; 243
    37b6:	9e 4f       	sbci	r25, 0xFE	; 254
    37b8:	fc 01       	movw	r30, r24
    37ba:	80 81       	ld	r24, Z
    37bc:	91 81       	ldd	r25, Z+1	; 0x01
    37be:	01 97       	sbiw	r24, 0x01	; 1
    37c0:	f1 f7       	brne	.-4      	; 0x37be <__stack+0x26bf>
    37c2:	9e 01       	movw	r18, r28
    37c4:	23 5f       	subi	r18, 0xF3	; 243
    37c6:	3e 4f       	sbci	r19, 0xFE	; 254
    37c8:	f9 01       	movw	r30, r18
    37ca:	91 83       	std	Z+1, r25	; 0x01
    37cc:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F430 T100\n");
    37ce:	8e e4       	ldi	r24, 0x4E	; 78
    37d0:	92 e0       	ldi	r25, 0x02	; 2
    37d2:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    37d6:	9e 01       	movw	r18, r28
    37d8:	27 58       	subi	r18, 0x87	; 135
    37da:	3f 4f       	sbci	r19, 0xFF	; 255
    37dc:	80 e0       	ldi	r24, 0x00	; 0
    37de:	90 e0       	ldi	r25, 0x00	; 0
    37e0:	a6 e9       	ldi	r26, 0x96	; 150
    37e2:	b3 e4       	ldi	r27, 0x43	; 67
    37e4:	f9 01       	movw	r30, r18
    37e6:	80 83       	st	Z, r24
    37e8:	91 83       	std	Z+1, r25	; 0x01
    37ea:	a2 83       	std	Z+2, r26	; 0x02
    37ec:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    37ee:	8e 01       	movw	r16, r28
    37f0:	05 50       	subi	r16, 0x05	; 5
    37f2:	1f 4f       	sbci	r17, 0xFF	; 255
    37f4:	ce 01       	movw	r24, r28
    37f6:	87 58       	subi	r24, 0x87	; 135
    37f8:	9f 4f       	sbci	r25, 0xFF	; 255
    37fa:	20 e0       	ldi	r18, 0x00	; 0
    37fc:	30 e0       	ldi	r19, 0x00	; 0
    37fe:	4a e7       	ldi	r20, 0x7A	; 122
    3800:	55 e4       	ldi	r21, 0x45	; 69
    3802:	fc 01       	movw	r30, r24
    3804:	60 81       	ld	r22, Z
    3806:	71 81       	ldd	r23, Z+1	; 0x01
    3808:	82 81       	ldd	r24, Z+2	; 0x02
    380a:	93 81       	ldd	r25, Z+3	; 0x03
    380c:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    3810:	dc 01       	movw	r26, r24
    3812:	cb 01       	movw	r24, r22
    3814:	f8 01       	movw	r30, r16
    3816:	80 83       	st	Z, r24
    3818:	91 83       	std	Z+1, r25	; 0x01
    381a:	a2 83       	std	Z+2, r26	; 0x02
    381c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    381e:	ce 01       	movw	r24, r28
    3820:	85 50       	subi	r24, 0x05	; 5
    3822:	9f 4f       	sbci	r25, 0xFF	; 255
    3824:	20 e0       	ldi	r18, 0x00	; 0
    3826:	30 e0       	ldi	r19, 0x00	; 0
    3828:	40 e8       	ldi	r20, 0x80	; 128
    382a:	5f e3       	ldi	r21, 0x3F	; 63
    382c:	fc 01       	movw	r30, r24
    382e:	60 81       	ld	r22, Z
    3830:	71 81       	ldd	r23, Z+1	; 0x01
    3832:	82 81       	ldd	r24, Z+2	; 0x02
    3834:	93 81       	ldd	r25, Z+3	; 0x03
    3836:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    383a:	88 23       	and	r24, r24
    383c:	4c f4       	brge	.+18     	; 0x3850 <__stack+0x2751>
		__ticks = 1;
    383e:	ce 01       	movw	r24, r28
    3840:	81 50       	subi	r24, 0x01	; 1
    3842:	9f 4f       	sbci	r25, 0xFF	; 255
    3844:	21 e0       	ldi	r18, 0x01	; 1
    3846:	30 e0       	ldi	r19, 0x00	; 0
    3848:	fc 01       	movw	r30, r24
    384a:	31 83       	std	Z+1, r19	; 0x01
    384c:	20 83       	st	Z, r18
    384e:	6d c0       	rjmp	.+218    	; 0x392a <__stack+0x282b>
	else if (__tmp > 65535)
    3850:	ce 01       	movw	r24, r28
    3852:	85 50       	subi	r24, 0x05	; 5
    3854:	9f 4f       	sbci	r25, 0xFF	; 255
    3856:	20 e0       	ldi	r18, 0x00	; 0
    3858:	3f ef       	ldi	r19, 0xFF	; 255
    385a:	4f e7       	ldi	r20, 0x7F	; 127
    385c:	57 e4       	ldi	r21, 0x47	; 71
    385e:	fc 01       	movw	r30, r24
    3860:	60 81       	ld	r22, Z
    3862:	71 81       	ldd	r23, Z+1	; 0x01
    3864:	82 81       	ldd	r24, Z+2	; 0x02
    3866:	93 81       	ldd	r25, Z+3	; 0x03
    3868:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    386c:	18 16       	cp	r1, r24
    386e:	0c f0       	brlt	.+2      	; 0x3872 <__stack+0x2773>
    3870:	4a c0       	rjmp	.+148    	; 0x3906 <__stack+0x2807>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3872:	ce 01       	movw	r24, r28
    3874:	87 58       	subi	r24, 0x87	; 135
    3876:	9f 4f       	sbci	r25, 0xFF	; 255
    3878:	20 e0       	ldi	r18, 0x00	; 0
    387a:	30 e0       	ldi	r19, 0x00	; 0
    387c:	40 e2       	ldi	r20, 0x20	; 32
    387e:	51 e4       	ldi	r21, 0x41	; 65
    3880:	fc 01       	movw	r30, r24
    3882:	60 81       	ld	r22, Z
    3884:	71 81       	ldd	r23, Z+1	; 0x01
    3886:	82 81       	ldd	r24, Z+2	; 0x02
    3888:	93 81       	ldd	r25, Z+3	; 0x03
    388a:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    388e:	dc 01       	movw	r26, r24
    3890:	cb 01       	movw	r24, r22
    3892:	8e 01       	movw	r16, r28
    3894:	01 50       	subi	r16, 0x01	; 1
    3896:	1f 4f       	sbci	r17, 0xFF	; 255
    3898:	bc 01       	movw	r22, r24
    389a:	cd 01       	movw	r24, r26
    389c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    38a0:	dc 01       	movw	r26, r24
    38a2:	cb 01       	movw	r24, r22
    38a4:	f8 01       	movw	r30, r16
    38a6:	91 83       	std	Z+1, r25	; 0x01
    38a8:	80 83       	st	Z, r24
    38aa:	24 c0       	rjmp	.+72     	; 0x38f4 <__stack+0x27f5>
    38ac:	ce 01       	movw	r24, r28
    38ae:	8f 5f       	subi	r24, 0xFF	; 255
    38b0:	9e 4f       	sbci	r25, 0xFE	; 254
    38b2:	20 e9       	ldi	r18, 0x90	; 144
    38b4:	31 e0       	ldi	r19, 0x01	; 1
    38b6:	fc 01       	movw	r30, r24
    38b8:	31 83       	std	Z+1, r19	; 0x01
    38ba:	20 83       	st	Z, r18
    38bc:	ce 01       	movw	r24, r28
    38be:	8f 5f       	subi	r24, 0xFF	; 255
    38c0:	9e 4f       	sbci	r25, 0xFE	; 254
    38c2:	fc 01       	movw	r30, r24
    38c4:	80 81       	ld	r24, Z
    38c6:	91 81       	ldd	r25, Z+1	; 0x01
    38c8:	01 97       	sbiw	r24, 0x01	; 1
    38ca:	f1 f7       	brne	.-4      	; 0x38c8 <__stack+0x27c9>
    38cc:	9e 01       	movw	r18, r28
    38ce:	2f 5f       	subi	r18, 0xFF	; 255
    38d0:	3e 4f       	sbci	r19, 0xFE	; 254
    38d2:	f9 01       	movw	r30, r18
    38d4:	91 83       	std	Z+1, r25	; 0x01
    38d6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    38d8:	ce 01       	movw	r24, r28
    38da:	81 50       	subi	r24, 0x01	; 1
    38dc:	9f 4f       	sbci	r25, 0xFF	; 255
    38de:	9e 01       	movw	r18, r28
    38e0:	21 50       	subi	r18, 0x01	; 1
    38e2:	3f 4f       	sbci	r19, 0xFF	; 255
    38e4:	f9 01       	movw	r30, r18
    38e6:	20 81       	ld	r18, Z
    38e8:	31 81       	ldd	r19, Z+1	; 0x01
    38ea:	21 50       	subi	r18, 0x01	; 1
    38ec:	31 09       	sbc	r19, r1
    38ee:	fc 01       	movw	r30, r24
    38f0:	31 83       	std	Z+1, r19	; 0x01
    38f2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    38f4:	ce 01       	movw	r24, r28
    38f6:	81 50       	subi	r24, 0x01	; 1
    38f8:	9f 4f       	sbci	r25, 0xFF	; 255
    38fa:	fc 01       	movw	r30, r24
    38fc:	80 81       	ld	r24, Z
    38fe:	91 81       	ldd	r25, Z+1	; 0x01
    3900:	89 2b       	or	r24, r25
    3902:	a1 f6       	brne	.-88     	; 0x38ac <__stack+0x27ad>
    3904:	2c c0       	rjmp	.+88     	; 0x395e <__stack+0x285f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3906:	8e 01       	movw	r16, r28
    3908:	01 50       	subi	r16, 0x01	; 1
    390a:	1f 4f       	sbci	r17, 0xFF	; 255
    390c:	ce 01       	movw	r24, r28
    390e:	85 50       	subi	r24, 0x05	; 5
    3910:	9f 4f       	sbci	r25, 0xFF	; 255
    3912:	fc 01       	movw	r30, r24
    3914:	60 81       	ld	r22, Z
    3916:	71 81       	ldd	r23, Z+1	; 0x01
    3918:	82 81       	ldd	r24, Z+2	; 0x02
    391a:	93 81       	ldd	r25, Z+3	; 0x03
    391c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    3920:	dc 01       	movw	r26, r24
    3922:	cb 01       	movw	r24, r22
    3924:	f8 01       	movw	r30, r16
    3926:	91 83       	std	Z+1, r25	; 0x01
    3928:	80 83       	st	Z, r24
    392a:	ce 01       	movw	r24, r28
    392c:	8d 5f       	subi	r24, 0xFD	; 253
    392e:	9e 4f       	sbci	r25, 0xFE	; 254
    3930:	9e 01       	movw	r18, r28
    3932:	21 50       	subi	r18, 0x01	; 1
    3934:	3f 4f       	sbci	r19, 0xFF	; 255
    3936:	f9 01       	movw	r30, r18
    3938:	20 81       	ld	r18, Z
    393a:	31 81       	ldd	r19, Z+1	; 0x01
    393c:	fc 01       	movw	r30, r24
    393e:	31 83       	std	Z+1, r19	; 0x01
    3940:	20 83       	st	Z, r18
    3942:	ce 01       	movw	r24, r28
    3944:	8d 5f       	subi	r24, 0xFD	; 253
    3946:	9e 4f       	sbci	r25, 0xFE	; 254
    3948:	fc 01       	movw	r30, r24
    394a:	80 81       	ld	r24, Z
    394c:	91 81       	ldd	r25, Z+1	; 0x01
    394e:	01 97       	sbiw	r24, 0x01	; 1
    3950:	f1 f7       	brne	.-4      	; 0x394e <__stack+0x284f>
    3952:	9e 01       	movw	r18, r28
    3954:	2d 5f       	subi	r18, 0xFD	; 253
    3956:	3e 4f       	sbci	r19, 0xFE	; 254
    3958:	f9 01       	movw	r30, r18
    395a:	91 83       	std	Z+1, r25	; 0x01
    395c:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F380 T100\n");
    395e:	8a ef       	ldi	r24, 0xFA	; 250
    3960:	91 e0       	ldi	r25, 0x01	; 1
    3962:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    3966:	9e 01       	movw	r18, r28
    3968:	23 58       	subi	r18, 0x83	; 131
    396a:	3f 4f       	sbci	r19, 0xFF	; 255
    396c:	80 e0       	ldi	r24, 0x00	; 0
    396e:	90 e0       	ldi	r25, 0x00	; 0
    3970:	a8 e4       	ldi	r26, 0x48	; 72
    3972:	b3 e4       	ldi	r27, 0x43	; 67
    3974:	f9 01       	movw	r30, r18
    3976:	80 83       	st	Z, r24
    3978:	91 83       	std	Z+1, r25	; 0x01
    397a:	a2 83       	std	Z+2, r26	; 0x02
    397c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    397e:	8e 01       	movw	r16, r28
    3980:	0f 50       	subi	r16, 0x0F	; 15
    3982:	1f 4f       	sbci	r17, 0xFF	; 255
    3984:	ce 01       	movw	r24, r28
    3986:	83 58       	subi	r24, 0x83	; 131
    3988:	9f 4f       	sbci	r25, 0xFF	; 255
    398a:	20 e0       	ldi	r18, 0x00	; 0
    398c:	30 e0       	ldi	r19, 0x00	; 0
    398e:	4a e7       	ldi	r20, 0x7A	; 122
    3990:	55 e4       	ldi	r21, 0x45	; 69
    3992:	fc 01       	movw	r30, r24
    3994:	60 81       	ld	r22, Z
    3996:	71 81       	ldd	r23, Z+1	; 0x01
    3998:	82 81       	ldd	r24, Z+2	; 0x02
    399a:	93 81       	ldd	r25, Z+3	; 0x03
    399c:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    39a0:	dc 01       	movw	r26, r24
    39a2:	cb 01       	movw	r24, r22
    39a4:	f8 01       	movw	r30, r16
    39a6:	80 83       	st	Z, r24
    39a8:	91 83       	std	Z+1, r25	; 0x01
    39aa:	a2 83       	std	Z+2, r26	; 0x02
    39ac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    39ae:	ce 01       	movw	r24, r28
    39b0:	8f 50       	subi	r24, 0x0F	; 15
    39b2:	9f 4f       	sbci	r25, 0xFF	; 255
    39b4:	20 e0       	ldi	r18, 0x00	; 0
    39b6:	30 e0       	ldi	r19, 0x00	; 0
    39b8:	40 e8       	ldi	r20, 0x80	; 128
    39ba:	5f e3       	ldi	r21, 0x3F	; 63
    39bc:	fc 01       	movw	r30, r24
    39be:	60 81       	ld	r22, Z
    39c0:	71 81       	ldd	r23, Z+1	; 0x01
    39c2:	82 81       	ldd	r24, Z+2	; 0x02
    39c4:	93 81       	ldd	r25, Z+3	; 0x03
    39c6:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    39ca:	88 23       	and	r24, r24
    39cc:	4c f4       	brge	.+18     	; 0x39e0 <__stack+0x28e1>
		__ticks = 1;
    39ce:	ce 01       	movw	r24, r28
    39d0:	8b 50       	subi	r24, 0x0B	; 11
    39d2:	9f 4f       	sbci	r25, 0xFF	; 255
    39d4:	21 e0       	ldi	r18, 0x01	; 1
    39d6:	30 e0       	ldi	r19, 0x00	; 0
    39d8:	fc 01       	movw	r30, r24
    39da:	31 83       	std	Z+1, r19	; 0x01
    39dc:	20 83       	st	Z, r18
    39de:	6d c0       	rjmp	.+218    	; 0x3aba <__stack+0x29bb>
	else if (__tmp > 65535)
    39e0:	ce 01       	movw	r24, r28
    39e2:	8f 50       	subi	r24, 0x0F	; 15
    39e4:	9f 4f       	sbci	r25, 0xFF	; 255
    39e6:	20 e0       	ldi	r18, 0x00	; 0
    39e8:	3f ef       	ldi	r19, 0xFF	; 255
    39ea:	4f e7       	ldi	r20, 0x7F	; 127
    39ec:	57 e4       	ldi	r21, 0x47	; 71
    39ee:	fc 01       	movw	r30, r24
    39f0:	60 81       	ld	r22, Z
    39f2:	71 81       	ldd	r23, Z+1	; 0x01
    39f4:	82 81       	ldd	r24, Z+2	; 0x02
    39f6:	93 81       	ldd	r25, Z+3	; 0x03
    39f8:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    39fc:	18 16       	cp	r1, r24
    39fe:	0c f0       	brlt	.+2      	; 0x3a02 <__stack+0x2903>
    3a00:	4a c0       	rjmp	.+148    	; 0x3a96 <__stack+0x2997>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a02:	ce 01       	movw	r24, r28
    3a04:	83 58       	subi	r24, 0x83	; 131
    3a06:	9f 4f       	sbci	r25, 0xFF	; 255
    3a08:	20 e0       	ldi	r18, 0x00	; 0
    3a0a:	30 e0       	ldi	r19, 0x00	; 0
    3a0c:	40 e2       	ldi	r20, 0x20	; 32
    3a0e:	51 e4       	ldi	r21, 0x41	; 65
    3a10:	fc 01       	movw	r30, r24
    3a12:	60 81       	ld	r22, Z
    3a14:	71 81       	ldd	r23, Z+1	; 0x01
    3a16:	82 81       	ldd	r24, Z+2	; 0x02
    3a18:	93 81       	ldd	r25, Z+3	; 0x03
    3a1a:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    3a1e:	dc 01       	movw	r26, r24
    3a20:	cb 01       	movw	r24, r22
    3a22:	8e 01       	movw	r16, r28
    3a24:	0b 50       	subi	r16, 0x0B	; 11
    3a26:	1f 4f       	sbci	r17, 0xFF	; 255
    3a28:	bc 01       	movw	r22, r24
    3a2a:	cd 01       	movw	r24, r26
    3a2c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    3a30:	dc 01       	movw	r26, r24
    3a32:	cb 01       	movw	r24, r22
    3a34:	f8 01       	movw	r30, r16
    3a36:	91 83       	std	Z+1, r25	; 0x01
    3a38:	80 83       	st	Z, r24
    3a3a:	24 c0       	rjmp	.+72     	; 0x3a84 <__stack+0x2985>
    3a3c:	ce 01       	movw	r24, r28
    3a3e:	89 50       	subi	r24, 0x09	; 9
    3a40:	9f 4f       	sbci	r25, 0xFF	; 255
    3a42:	20 e9       	ldi	r18, 0x90	; 144
    3a44:	31 e0       	ldi	r19, 0x01	; 1
    3a46:	fc 01       	movw	r30, r24
    3a48:	31 83       	std	Z+1, r19	; 0x01
    3a4a:	20 83       	st	Z, r18
    3a4c:	ce 01       	movw	r24, r28
    3a4e:	89 50       	subi	r24, 0x09	; 9
    3a50:	9f 4f       	sbci	r25, 0xFF	; 255
    3a52:	fc 01       	movw	r30, r24
    3a54:	80 81       	ld	r24, Z
    3a56:	91 81       	ldd	r25, Z+1	; 0x01
    3a58:	01 97       	sbiw	r24, 0x01	; 1
    3a5a:	f1 f7       	brne	.-4      	; 0x3a58 <__stack+0x2959>
    3a5c:	9e 01       	movw	r18, r28
    3a5e:	29 50       	subi	r18, 0x09	; 9
    3a60:	3f 4f       	sbci	r19, 0xFF	; 255
    3a62:	f9 01       	movw	r30, r18
    3a64:	91 83       	std	Z+1, r25	; 0x01
    3a66:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a68:	ce 01       	movw	r24, r28
    3a6a:	8b 50       	subi	r24, 0x0B	; 11
    3a6c:	9f 4f       	sbci	r25, 0xFF	; 255
    3a6e:	9e 01       	movw	r18, r28
    3a70:	2b 50       	subi	r18, 0x0B	; 11
    3a72:	3f 4f       	sbci	r19, 0xFF	; 255
    3a74:	f9 01       	movw	r30, r18
    3a76:	20 81       	ld	r18, Z
    3a78:	31 81       	ldd	r19, Z+1	; 0x01
    3a7a:	21 50       	subi	r18, 0x01	; 1
    3a7c:	31 09       	sbc	r19, r1
    3a7e:	fc 01       	movw	r30, r24
    3a80:	31 83       	std	Z+1, r19	; 0x01
    3a82:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a84:	ce 01       	movw	r24, r28
    3a86:	8b 50       	subi	r24, 0x0B	; 11
    3a88:	9f 4f       	sbci	r25, 0xFF	; 255
    3a8a:	fc 01       	movw	r30, r24
    3a8c:	80 81       	ld	r24, Z
    3a8e:	91 81       	ldd	r25, Z+1	; 0x01
    3a90:	89 2b       	or	r24, r25
    3a92:	a1 f6       	brne	.-88     	; 0x3a3c <__stack+0x293d>
    3a94:	2c c0       	rjmp	.+88     	; 0x3aee <__stack+0x29ef>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a96:	8e 01       	movw	r16, r28
    3a98:	0b 50       	subi	r16, 0x0B	; 11
    3a9a:	1f 4f       	sbci	r17, 0xFF	; 255
    3a9c:	ce 01       	movw	r24, r28
    3a9e:	8f 50       	subi	r24, 0x0F	; 15
    3aa0:	9f 4f       	sbci	r25, 0xFF	; 255
    3aa2:	fc 01       	movw	r30, r24
    3aa4:	60 81       	ld	r22, Z
    3aa6:	71 81       	ldd	r23, Z+1	; 0x01
    3aa8:	82 81       	ldd	r24, Z+2	; 0x02
    3aaa:	93 81       	ldd	r25, Z+3	; 0x03
    3aac:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    3ab0:	dc 01       	movw	r26, r24
    3ab2:	cb 01       	movw	r24, r22
    3ab4:	f8 01       	movw	r30, r16
    3ab6:	91 83       	std	Z+1, r25	; 0x01
    3ab8:	80 83       	st	Z, r24
    3aba:	ce 01       	movw	r24, r28
    3abc:	87 50       	subi	r24, 0x07	; 7
    3abe:	9f 4f       	sbci	r25, 0xFF	; 255
    3ac0:	9e 01       	movw	r18, r28
    3ac2:	2b 50       	subi	r18, 0x0B	; 11
    3ac4:	3f 4f       	sbci	r19, 0xFF	; 255
    3ac6:	f9 01       	movw	r30, r18
    3ac8:	20 81       	ld	r18, Z
    3aca:	31 81       	ldd	r19, Z+1	; 0x01
    3acc:	fc 01       	movw	r30, r24
    3ace:	31 83       	std	Z+1, r19	; 0x01
    3ad0:	20 83       	st	Z, r18
    3ad2:	ce 01       	movw	r24, r28
    3ad4:	87 50       	subi	r24, 0x07	; 7
    3ad6:	9f 4f       	sbci	r25, 0xFF	; 255
    3ad8:	fc 01       	movw	r30, r24
    3ada:	80 81       	ld	r24, Z
    3adc:	91 81       	ldd	r25, Z+1	; 0x01
    3ade:	01 97       	sbiw	r24, 0x01	; 1
    3ae0:	f1 f7       	brne	.-4      	; 0x3ade <__stack+0x29df>
    3ae2:	9e 01       	movw	r18, r28
    3ae4:	27 50       	subi	r18, 0x07	; 7
    3ae6:	3f 4f       	sbci	r19, 0xFF	; 255
    3ae8:	f9 01       	movw	r30, r18
    3aea:	91 83       	std	Z+1, r25	; 0x01
    3aec:	80 83       	st	Z, r24
	_delay_ms(200);
	to_uARM("M2210 F660 T80\n");
    3aee:	8f e5       	ldi	r24, 0x5F	; 95
    3af0:	92 e0       	ldi	r25, 0x02	; 2
    3af2:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    3af6:	9e 01       	movw	r18, r28
    3af8:	2f 57       	subi	r18, 0x7F	; 127
    3afa:	3f 4f       	sbci	r19, 0xFF	; 255
    3afc:	80 e0       	ldi	r24, 0x00	; 0
    3afe:	90 e0       	ldi	r25, 0x00	; 0
    3b00:	a8 e4       	ldi	r26, 0x48	; 72
    3b02:	b3 e4       	ldi	r27, 0x43	; 67
    3b04:	f9 01       	movw	r30, r18
    3b06:	80 83       	st	Z, r24
    3b08:	91 83       	std	Z+1, r25	; 0x01
    3b0a:	a2 83       	std	Z+2, r26	; 0x02
    3b0c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3b0e:	8e 01       	movw	r16, r28
    3b10:	09 51       	subi	r16, 0x19	; 25
    3b12:	1f 4f       	sbci	r17, 0xFF	; 255
    3b14:	ce 01       	movw	r24, r28
    3b16:	8f 57       	subi	r24, 0x7F	; 127
    3b18:	9f 4f       	sbci	r25, 0xFF	; 255
    3b1a:	20 e0       	ldi	r18, 0x00	; 0
    3b1c:	30 e0       	ldi	r19, 0x00	; 0
    3b1e:	4a e7       	ldi	r20, 0x7A	; 122
    3b20:	55 e4       	ldi	r21, 0x45	; 69
    3b22:	fc 01       	movw	r30, r24
    3b24:	60 81       	ld	r22, Z
    3b26:	71 81       	ldd	r23, Z+1	; 0x01
    3b28:	82 81       	ldd	r24, Z+2	; 0x02
    3b2a:	93 81       	ldd	r25, Z+3	; 0x03
    3b2c:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    3b30:	dc 01       	movw	r26, r24
    3b32:	cb 01       	movw	r24, r22
    3b34:	f8 01       	movw	r30, r16
    3b36:	80 83       	st	Z, r24
    3b38:	91 83       	std	Z+1, r25	; 0x01
    3b3a:	a2 83       	std	Z+2, r26	; 0x02
    3b3c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3b3e:	ce 01       	movw	r24, r28
    3b40:	89 51       	subi	r24, 0x19	; 25
    3b42:	9f 4f       	sbci	r25, 0xFF	; 255
    3b44:	20 e0       	ldi	r18, 0x00	; 0
    3b46:	30 e0       	ldi	r19, 0x00	; 0
    3b48:	40 e8       	ldi	r20, 0x80	; 128
    3b4a:	5f e3       	ldi	r21, 0x3F	; 63
    3b4c:	fc 01       	movw	r30, r24
    3b4e:	60 81       	ld	r22, Z
    3b50:	71 81       	ldd	r23, Z+1	; 0x01
    3b52:	82 81       	ldd	r24, Z+2	; 0x02
    3b54:	93 81       	ldd	r25, Z+3	; 0x03
    3b56:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    3b5a:	88 23       	and	r24, r24
    3b5c:	4c f4       	brge	.+18     	; 0x3b70 <__stack+0x2a71>
		__ticks = 1;
    3b5e:	ce 01       	movw	r24, r28
    3b60:	85 51       	subi	r24, 0x15	; 21
    3b62:	9f 4f       	sbci	r25, 0xFF	; 255
    3b64:	21 e0       	ldi	r18, 0x01	; 1
    3b66:	30 e0       	ldi	r19, 0x00	; 0
    3b68:	fc 01       	movw	r30, r24
    3b6a:	31 83       	std	Z+1, r19	; 0x01
    3b6c:	20 83       	st	Z, r18
    3b6e:	6d c0       	rjmp	.+218    	; 0x3c4a <__stack+0x2b4b>
	else if (__tmp > 65535)
    3b70:	ce 01       	movw	r24, r28
    3b72:	89 51       	subi	r24, 0x19	; 25
    3b74:	9f 4f       	sbci	r25, 0xFF	; 255
    3b76:	20 e0       	ldi	r18, 0x00	; 0
    3b78:	3f ef       	ldi	r19, 0xFF	; 255
    3b7a:	4f e7       	ldi	r20, 0x7F	; 127
    3b7c:	57 e4       	ldi	r21, 0x47	; 71
    3b7e:	fc 01       	movw	r30, r24
    3b80:	60 81       	ld	r22, Z
    3b82:	71 81       	ldd	r23, Z+1	; 0x01
    3b84:	82 81       	ldd	r24, Z+2	; 0x02
    3b86:	93 81       	ldd	r25, Z+3	; 0x03
    3b88:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    3b8c:	18 16       	cp	r1, r24
    3b8e:	0c f0       	brlt	.+2      	; 0x3b92 <__stack+0x2a93>
    3b90:	4a c0       	rjmp	.+148    	; 0x3c26 <__stack+0x2b27>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b92:	ce 01       	movw	r24, r28
    3b94:	8f 57       	subi	r24, 0x7F	; 127
    3b96:	9f 4f       	sbci	r25, 0xFF	; 255
    3b98:	20 e0       	ldi	r18, 0x00	; 0
    3b9a:	30 e0       	ldi	r19, 0x00	; 0
    3b9c:	40 e2       	ldi	r20, 0x20	; 32
    3b9e:	51 e4       	ldi	r21, 0x41	; 65
    3ba0:	fc 01       	movw	r30, r24
    3ba2:	60 81       	ld	r22, Z
    3ba4:	71 81       	ldd	r23, Z+1	; 0x01
    3ba6:	82 81       	ldd	r24, Z+2	; 0x02
    3ba8:	93 81       	ldd	r25, Z+3	; 0x03
    3baa:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    3bae:	dc 01       	movw	r26, r24
    3bb0:	cb 01       	movw	r24, r22
    3bb2:	8e 01       	movw	r16, r28
    3bb4:	05 51       	subi	r16, 0x15	; 21
    3bb6:	1f 4f       	sbci	r17, 0xFF	; 255
    3bb8:	bc 01       	movw	r22, r24
    3bba:	cd 01       	movw	r24, r26
    3bbc:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    3bc0:	dc 01       	movw	r26, r24
    3bc2:	cb 01       	movw	r24, r22
    3bc4:	f8 01       	movw	r30, r16
    3bc6:	91 83       	std	Z+1, r25	; 0x01
    3bc8:	80 83       	st	Z, r24
    3bca:	24 c0       	rjmp	.+72     	; 0x3c14 <__stack+0x2b15>
    3bcc:	ce 01       	movw	r24, r28
    3bce:	83 51       	subi	r24, 0x13	; 19
    3bd0:	9f 4f       	sbci	r25, 0xFF	; 255
    3bd2:	20 e9       	ldi	r18, 0x90	; 144
    3bd4:	31 e0       	ldi	r19, 0x01	; 1
    3bd6:	fc 01       	movw	r30, r24
    3bd8:	31 83       	std	Z+1, r19	; 0x01
    3bda:	20 83       	st	Z, r18
    3bdc:	ce 01       	movw	r24, r28
    3bde:	83 51       	subi	r24, 0x13	; 19
    3be0:	9f 4f       	sbci	r25, 0xFF	; 255
    3be2:	fc 01       	movw	r30, r24
    3be4:	80 81       	ld	r24, Z
    3be6:	91 81       	ldd	r25, Z+1	; 0x01
    3be8:	01 97       	sbiw	r24, 0x01	; 1
    3bea:	f1 f7       	brne	.-4      	; 0x3be8 <__stack+0x2ae9>
    3bec:	9e 01       	movw	r18, r28
    3bee:	23 51       	subi	r18, 0x13	; 19
    3bf0:	3f 4f       	sbci	r19, 0xFF	; 255
    3bf2:	f9 01       	movw	r30, r18
    3bf4:	91 83       	std	Z+1, r25	; 0x01
    3bf6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3bf8:	ce 01       	movw	r24, r28
    3bfa:	85 51       	subi	r24, 0x15	; 21
    3bfc:	9f 4f       	sbci	r25, 0xFF	; 255
    3bfe:	9e 01       	movw	r18, r28
    3c00:	25 51       	subi	r18, 0x15	; 21
    3c02:	3f 4f       	sbci	r19, 0xFF	; 255
    3c04:	f9 01       	movw	r30, r18
    3c06:	20 81       	ld	r18, Z
    3c08:	31 81       	ldd	r19, Z+1	; 0x01
    3c0a:	21 50       	subi	r18, 0x01	; 1
    3c0c:	31 09       	sbc	r19, r1
    3c0e:	fc 01       	movw	r30, r24
    3c10:	31 83       	std	Z+1, r19	; 0x01
    3c12:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c14:	ce 01       	movw	r24, r28
    3c16:	85 51       	subi	r24, 0x15	; 21
    3c18:	9f 4f       	sbci	r25, 0xFF	; 255
    3c1a:	fc 01       	movw	r30, r24
    3c1c:	80 81       	ld	r24, Z
    3c1e:	91 81       	ldd	r25, Z+1	; 0x01
    3c20:	89 2b       	or	r24, r25
    3c22:	a1 f6       	brne	.-88     	; 0x3bcc <__stack+0x2acd>
    3c24:	2c c0       	rjmp	.+88     	; 0x3c7e <__stack+0x2b7f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c26:	8e 01       	movw	r16, r28
    3c28:	05 51       	subi	r16, 0x15	; 21
    3c2a:	1f 4f       	sbci	r17, 0xFF	; 255
    3c2c:	ce 01       	movw	r24, r28
    3c2e:	89 51       	subi	r24, 0x19	; 25
    3c30:	9f 4f       	sbci	r25, 0xFF	; 255
    3c32:	fc 01       	movw	r30, r24
    3c34:	60 81       	ld	r22, Z
    3c36:	71 81       	ldd	r23, Z+1	; 0x01
    3c38:	82 81       	ldd	r24, Z+2	; 0x02
    3c3a:	93 81       	ldd	r25, Z+3	; 0x03
    3c3c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    3c40:	dc 01       	movw	r26, r24
    3c42:	cb 01       	movw	r24, r22
    3c44:	f8 01       	movw	r30, r16
    3c46:	91 83       	std	Z+1, r25	; 0x01
    3c48:	80 83       	st	Z, r24
    3c4a:	ce 01       	movw	r24, r28
    3c4c:	81 51       	subi	r24, 0x11	; 17
    3c4e:	9f 4f       	sbci	r25, 0xFF	; 255
    3c50:	9e 01       	movw	r18, r28
    3c52:	25 51       	subi	r18, 0x15	; 21
    3c54:	3f 4f       	sbci	r19, 0xFF	; 255
    3c56:	f9 01       	movw	r30, r18
    3c58:	20 81       	ld	r18, Z
    3c5a:	31 81       	ldd	r19, Z+1	; 0x01
    3c5c:	fc 01       	movw	r30, r24
    3c5e:	31 83       	std	Z+1, r19	; 0x01
    3c60:	20 83       	st	Z, r18
    3c62:	ce 01       	movw	r24, r28
    3c64:	81 51       	subi	r24, 0x11	; 17
    3c66:	9f 4f       	sbci	r25, 0xFF	; 255
    3c68:	fc 01       	movw	r30, r24
    3c6a:	80 81       	ld	r24, Z
    3c6c:	91 81       	ldd	r25, Z+1	; 0x01
    3c6e:	01 97       	sbiw	r24, 0x01	; 1
    3c70:	f1 f7       	brne	.-4      	; 0x3c6e <__stack+0x2b6f>
    3c72:	9e 01       	movw	r18, r28
    3c74:	21 51       	subi	r18, 0x11	; 17
    3c76:	3f 4f       	sbci	r19, 0xFF	; 255
    3c78:	f9 01       	movw	r30, r18
    3c7a:	91 83       	std	Z+1, r25	; 0x01
    3c7c:	80 83       	st	Z, r24
	_delay_ms(200);
	to_uARM("M2210 F760 T50\n");
    3c7e:	8f e6       	ldi	r24, 0x6F	; 111
    3c80:	92 e0       	ldi	r25, 0x02	; 2
    3c82:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    3c86:	9e 01       	movw	r18, r28
    3c88:	2b 57       	subi	r18, 0x7B	; 123
    3c8a:	3f 4f       	sbci	r19, 0xFF	; 255
    3c8c:	80 e0       	ldi	r24, 0x00	; 0
    3c8e:	90 e0       	ldi	r25, 0x00	; 0
    3c90:	a6 e1       	ldi	r26, 0x16	; 22
    3c92:	b3 e4       	ldi	r27, 0x43	; 67
    3c94:	f9 01       	movw	r30, r18
    3c96:	80 83       	st	Z, r24
    3c98:	91 83       	std	Z+1, r25	; 0x01
    3c9a:	a2 83       	std	Z+2, r26	; 0x02
    3c9c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3c9e:	8e 01       	movw	r16, r28
    3ca0:	03 52       	subi	r16, 0x23	; 35
    3ca2:	1f 4f       	sbci	r17, 0xFF	; 255
    3ca4:	ce 01       	movw	r24, r28
    3ca6:	8b 57       	subi	r24, 0x7B	; 123
    3ca8:	9f 4f       	sbci	r25, 0xFF	; 255
    3caa:	20 e0       	ldi	r18, 0x00	; 0
    3cac:	30 e0       	ldi	r19, 0x00	; 0
    3cae:	4a e7       	ldi	r20, 0x7A	; 122
    3cb0:	55 e4       	ldi	r21, 0x45	; 69
    3cb2:	fc 01       	movw	r30, r24
    3cb4:	60 81       	ld	r22, Z
    3cb6:	71 81       	ldd	r23, Z+1	; 0x01
    3cb8:	82 81       	ldd	r24, Z+2	; 0x02
    3cba:	93 81       	ldd	r25, Z+3	; 0x03
    3cbc:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    3cc0:	dc 01       	movw	r26, r24
    3cc2:	cb 01       	movw	r24, r22
    3cc4:	f8 01       	movw	r30, r16
    3cc6:	80 83       	st	Z, r24
    3cc8:	91 83       	std	Z+1, r25	; 0x01
    3cca:	a2 83       	std	Z+2, r26	; 0x02
    3ccc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3cce:	ce 01       	movw	r24, r28
    3cd0:	83 52       	subi	r24, 0x23	; 35
    3cd2:	9f 4f       	sbci	r25, 0xFF	; 255
    3cd4:	20 e0       	ldi	r18, 0x00	; 0
    3cd6:	30 e0       	ldi	r19, 0x00	; 0
    3cd8:	40 e8       	ldi	r20, 0x80	; 128
    3cda:	5f e3       	ldi	r21, 0x3F	; 63
    3cdc:	fc 01       	movw	r30, r24
    3cde:	60 81       	ld	r22, Z
    3ce0:	71 81       	ldd	r23, Z+1	; 0x01
    3ce2:	82 81       	ldd	r24, Z+2	; 0x02
    3ce4:	93 81       	ldd	r25, Z+3	; 0x03
    3ce6:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    3cea:	88 23       	and	r24, r24
    3cec:	4c f4       	brge	.+18     	; 0x3d00 <__stack+0x2c01>
		__ticks = 1;
    3cee:	ce 01       	movw	r24, r28
    3cf0:	8f 51       	subi	r24, 0x1F	; 31
    3cf2:	9f 4f       	sbci	r25, 0xFF	; 255
    3cf4:	21 e0       	ldi	r18, 0x01	; 1
    3cf6:	30 e0       	ldi	r19, 0x00	; 0
    3cf8:	fc 01       	movw	r30, r24
    3cfa:	31 83       	std	Z+1, r19	; 0x01
    3cfc:	20 83       	st	Z, r18
    3cfe:	6d c0       	rjmp	.+218    	; 0x3dda <__stack+0x2cdb>
	else if (__tmp > 65535)
    3d00:	ce 01       	movw	r24, r28
    3d02:	83 52       	subi	r24, 0x23	; 35
    3d04:	9f 4f       	sbci	r25, 0xFF	; 255
    3d06:	20 e0       	ldi	r18, 0x00	; 0
    3d08:	3f ef       	ldi	r19, 0xFF	; 255
    3d0a:	4f e7       	ldi	r20, 0x7F	; 127
    3d0c:	57 e4       	ldi	r21, 0x47	; 71
    3d0e:	fc 01       	movw	r30, r24
    3d10:	60 81       	ld	r22, Z
    3d12:	71 81       	ldd	r23, Z+1	; 0x01
    3d14:	82 81       	ldd	r24, Z+2	; 0x02
    3d16:	93 81       	ldd	r25, Z+3	; 0x03
    3d18:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    3d1c:	18 16       	cp	r1, r24
    3d1e:	0c f0       	brlt	.+2      	; 0x3d22 <__stack+0x2c23>
    3d20:	4a c0       	rjmp	.+148    	; 0x3db6 <__stack+0x2cb7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3d22:	ce 01       	movw	r24, r28
    3d24:	8b 57       	subi	r24, 0x7B	; 123
    3d26:	9f 4f       	sbci	r25, 0xFF	; 255
    3d28:	20 e0       	ldi	r18, 0x00	; 0
    3d2a:	30 e0       	ldi	r19, 0x00	; 0
    3d2c:	40 e2       	ldi	r20, 0x20	; 32
    3d2e:	51 e4       	ldi	r21, 0x41	; 65
    3d30:	fc 01       	movw	r30, r24
    3d32:	60 81       	ld	r22, Z
    3d34:	71 81       	ldd	r23, Z+1	; 0x01
    3d36:	82 81       	ldd	r24, Z+2	; 0x02
    3d38:	93 81       	ldd	r25, Z+3	; 0x03
    3d3a:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    3d3e:	dc 01       	movw	r26, r24
    3d40:	cb 01       	movw	r24, r22
    3d42:	8e 01       	movw	r16, r28
    3d44:	0f 51       	subi	r16, 0x1F	; 31
    3d46:	1f 4f       	sbci	r17, 0xFF	; 255
    3d48:	bc 01       	movw	r22, r24
    3d4a:	cd 01       	movw	r24, r26
    3d4c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    3d50:	dc 01       	movw	r26, r24
    3d52:	cb 01       	movw	r24, r22
    3d54:	f8 01       	movw	r30, r16
    3d56:	91 83       	std	Z+1, r25	; 0x01
    3d58:	80 83       	st	Z, r24
    3d5a:	24 c0       	rjmp	.+72     	; 0x3da4 <__stack+0x2ca5>
    3d5c:	ce 01       	movw	r24, r28
    3d5e:	8d 51       	subi	r24, 0x1D	; 29
    3d60:	9f 4f       	sbci	r25, 0xFF	; 255
    3d62:	20 e9       	ldi	r18, 0x90	; 144
    3d64:	31 e0       	ldi	r19, 0x01	; 1
    3d66:	fc 01       	movw	r30, r24
    3d68:	31 83       	std	Z+1, r19	; 0x01
    3d6a:	20 83       	st	Z, r18
    3d6c:	ce 01       	movw	r24, r28
    3d6e:	8d 51       	subi	r24, 0x1D	; 29
    3d70:	9f 4f       	sbci	r25, 0xFF	; 255
    3d72:	fc 01       	movw	r30, r24
    3d74:	80 81       	ld	r24, Z
    3d76:	91 81       	ldd	r25, Z+1	; 0x01
    3d78:	01 97       	sbiw	r24, 0x01	; 1
    3d7a:	f1 f7       	brne	.-4      	; 0x3d78 <__stack+0x2c79>
    3d7c:	9e 01       	movw	r18, r28
    3d7e:	2d 51       	subi	r18, 0x1D	; 29
    3d80:	3f 4f       	sbci	r19, 0xFF	; 255
    3d82:	f9 01       	movw	r30, r18
    3d84:	91 83       	std	Z+1, r25	; 0x01
    3d86:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d88:	ce 01       	movw	r24, r28
    3d8a:	8f 51       	subi	r24, 0x1F	; 31
    3d8c:	9f 4f       	sbci	r25, 0xFF	; 255
    3d8e:	9e 01       	movw	r18, r28
    3d90:	2f 51       	subi	r18, 0x1F	; 31
    3d92:	3f 4f       	sbci	r19, 0xFF	; 255
    3d94:	f9 01       	movw	r30, r18
    3d96:	20 81       	ld	r18, Z
    3d98:	31 81       	ldd	r19, Z+1	; 0x01
    3d9a:	21 50       	subi	r18, 0x01	; 1
    3d9c:	31 09       	sbc	r19, r1
    3d9e:	fc 01       	movw	r30, r24
    3da0:	31 83       	std	Z+1, r19	; 0x01
    3da2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3da4:	ce 01       	movw	r24, r28
    3da6:	8f 51       	subi	r24, 0x1F	; 31
    3da8:	9f 4f       	sbci	r25, 0xFF	; 255
    3daa:	fc 01       	movw	r30, r24
    3dac:	80 81       	ld	r24, Z
    3dae:	91 81       	ldd	r25, Z+1	; 0x01
    3db0:	89 2b       	or	r24, r25
    3db2:	a1 f6       	brne	.-88     	; 0x3d5c <__stack+0x2c5d>
    3db4:	2c c0       	rjmp	.+88     	; 0x3e0e <__stack+0x2d0f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3db6:	8e 01       	movw	r16, r28
    3db8:	0f 51       	subi	r16, 0x1F	; 31
    3dba:	1f 4f       	sbci	r17, 0xFF	; 255
    3dbc:	ce 01       	movw	r24, r28
    3dbe:	83 52       	subi	r24, 0x23	; 35
    3dc0:	9f 4f       	sbci	r25, 0xFF	; 255
    3dc2:	fc 01       	movw	r30, r24
    3dc4:	60 81       	ld	r22, Z
    3dc6:	71 81       	ldd	r23, Z+1	; 0x01
    3dc8:	82 81       	ldd	r24, Z+2	; 0x02
    3dca:	93 81       	ldd	r25, Z+3	; 0x03
    3dcc:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    3dd0:	dc 01       	movw	r26, r24
    3dd2:	cb 01       	movw	r24, r22
    3dd4:	f8 01       	movw	r30, r16
    3dd6:	91 83       	std	Z+1, r25	; 0x01
    3dd8:	80 83       	st	Z, r24
    3dda:	ce 01       	movw	r24, r28
    3ddc:	8b 51       	subi	r24, 0x1B	; 27
    3dde:	9f 4f       	sbci	r25, 0xFF	; 255
    3de0:	9e 01       	movw	r18, r28
    3de2:	2f 51       	subi	r18, 0x1F	; 31
    3de4:	3f 4f       	sbci	r19, 0xFF	; 255
    3de6:	f9 01       	movw	r30, r18
    3de8:	20 81       	ld	r18, Z
    3dea:	31 81       	ldd	r19, Z+1	; 0x01
    3dec:	fc 01       	movw	r30, r24
    3dee:	31 83       	std	Z+1, r19	; 0x01
    3df0:	20 83       	st	Z, r18
    3df2:	ce 01       	movw	r24, r28
    3df4:	8b 51       	subi	r24, 0x1B	; 27
    3df6:	9f 4f       	sbci	r25, 0xFF	; 255
    3df8:	fc 01       	movw	r30, r24
    3dfa:	80 81       	ld	r24, Z
    3dfc:	91 81       	ldd	r25, Z+1	; 0x01
    3dfe:	01 97       	sbiw	r24, 0x01	; 1
    3e00:	f1 f7       	brne	.-4      	; 0x3dfe <__stack+0x2cff>
    3e02:	9e 01       	movw	r18, r28
    3e04:	2b 51       	subi	r18, 0x1B	; 27
    3e06:	3f 4f       	sbci	r19, 0xFF	; 255
    3e08:	f9 01       	movw	r30, r18
    3e0a:	91 83       	std	Z+1, r25	; 0x01
    3e0c:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F860 T100\n");
    3e0e:	8f e7       	ldi	r24, 0x7F	; 127
    3e10:	92 e0       	ldi	r25, 0x02	; 2
    3e12:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    3e16:	9e 01       	movw	r18, r28
    3e18:	27 57       	subi	r18, 0x77	; 119
    3e1a:	3f 4f       	sbci	r19, 0xFF	; 255
    3e1c:	80 e0       	ldi	r24, 0x00	; 0
    3e1e:	90 e0       	ldi	r25, 0x00	; 0
    3e20:	a6 e9       	ldi	r26, 0x96	; 150
    3e22:	b3 e4       	ldi	r27, 0x43	; 67
    3e24:	f9 01       	movw	r30, r18
    3e26:	80 83       	st	Z, r24
    3e28:	91 83       	std	Z+1, r25	; 0x01
    3e2a:	a2 83       	std	Z+2, r26	; 0x02
    3e2c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3e2e:	8e 01       	movw	r16, r28
    3e30:	0d 52       	subi	r16, 0x2D	; 45
    3e32:	1f 4f       	sbci	r17, 0xFF	; 255
    3e34:	ce 01       	movw	r24, r28
    3e36:	87 57       	subi	r24, 0x77	; 119
    3e38:	9f 4f       	sbci	r25, 0xFF	; 255
    3e3a:	20 e0       	ldi	r18, 0x00	; 0
    3e3c:	30 e0       	ldi	r19, 0x00	; 0
    3e3e:	4a e7       	ldi	r20, 0x7A	; 122
    3e40:	55 e4       	ldi	r21, 0x45	; 69
    3e42:	fc 01       	movw	r30, r24
    3e44:	60 81       	ld	r22, Z
    3e46:	71 81       	ldd	r23, Z+1	; 0x01
    3e48:	82 81       	ldd	r24, Z+2	; 0x02
    3e4a:	93 81       	ldd	r25, Z+3	; 0x03
    3e4c:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    3e50:	dc 01       	movw	r26, r24
    3e52:	cb 01       	movw	r24, r22
    3e54:	f8 01       	movw	r30, r16
    3e56:	80 83       	st	Z, r24
    3e58:	91 83       	std	Z+1, r25	; 0x01
    3e5a:	a2 83       	std	Z+2, r26	; 0x02
    3e5c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3e5e:	ce 01       	movw	r24, r28
    3e60:	8d 52       	subi	r24, 0x2D	; 45
    3e62:	9f 4f       	sbci	r25, 0xFF	; 255
    3e64:	20 e0       	ldi	r18, 0x00	; 0
    3e66:	30 e0       	ldi	r19, 0x00	; 0
    3e68:	40 e8       	ldi	r20, 0x80	; 128
    3e6a:	5f e3       	ldi	r21, 0x3F	; 63
    3e6c:	fc 01       	movw	r30, r24
    3e6e:	60 81       	ld	r22, Z
    3e70:	71 81       	ldd	r23, Z+1	; 0x01
    3e72:	82 81       	ldd	r24, Z+2	; 0x02
    3e74:	93 81       	ldd	r25, Z+3	; 0x03
    3e76:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    3e7a:	88 23       	and	r24, r24
    3e7c:	4c f4       	brge	.+18     	; 0x3e90 <__stack+0x2d91>
		__ticks = 1;
    3e7e:	ce 01       	movw	r24, r28
    3e80:	89 52       	subi	r24, 0x29	; 41
    3e82:	9f 4f       	sbci	r25, 0xFF	; 255
    3e84:	21 e0       	ldi	r18, 0x01	; 1
    3e86:	30 e0       	ldi	r19, 0x00	; 0
    3e88:	fc 01       	movw	r30, r24
    3e8a:	31 83       	std	Z+1, r19	; 0x01
    3e8c:	20 83       	st	Z, r18
    3e8e:	6d c0       	rjmp	.+218    	; 0x3f6a <__stack+0x2e6b>
	else if (__tmp > 65535)
    3e90:	ce 01       	movw	r24, r28
    3e92:	8d 52       	subi	r24, 0x2D	; 45
    3e94:	9f 4f       	sbci	r25, 0xFF	; 255
    3e96:	20 e0       	ldi	r18, 0x00	; 0
    3e98:	3f ef       	ldi	r19, 0xFF	; 255
    3e9a:	4f e7       	ldi	r20, 0x7F	; 127
    3e9c:	57 e4       	ldi	r21, 0x47	; 71
    3e9e:	fc 01       	movw	r30, r24
    3ea0:	60 81       	ld	r22, Z
    3ea2:	71 81       	ldd	r23, Z+1	; 0x01
    3ea4:	82 81       	ldd	r24, Z+2	; 0x02
    3ea6:	93 81       	ldd	r25, Z+3	; 0x03
    3ea8:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    3eac:	18 16       	cp	r1, r24
    3eae:	0c f0       	brlt	.+2      	; 0x3eb2 <__stack+0x2db3>
    3eb0:	4a c0       	rjmp	.+148    	; 0x3f46 <__stack+0x2e47>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3eb2:	ce 01       	movw	r24, r28
    3eb4:	87 57       	subi	r24, 0x77	; 119
    3eb6:	9f 4f       	sbci	r25, 0xFF	; 255
    3eb8:	20 e0       	ldi	r18, 0x00	; 0
    3eba:	30 e0       	ldi	r19, 0x00	; 0
    3ebc:	40 e2       	ldi	r20, 0x20	; 32
    3ebe:	51 e4       	ldi	r21, 0x41	; 65
    3ec0:	fc 01       	movw	r30, r24
    3ec2:	60 81       	ld	r22, Z
    3ec4:	71 81       	ldd	r23, Z+1	; 0x01
    3ec6:	82 81       	ldd	r24, Z+2	; 0x02
    3ec8:	93 81       	ldd	r25, Z+3	; 0x03
    3eca:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    3ece:	dc 01       	movw	r26, r24
    3ed0:	cb 01       	movw	r24, r22
    3ed2:	8e 01       	movw	r16, r28
    3ed4:	09 52       	subi	r16, 0x29	; 41
    3ed6:	1f 4f       	sbci	r17, 0xFF	; 255
    3ed8:	bc 01       	movw	r22, r24
    3eda:	cd 01       	movw	r24, r26
    3edc:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    3ee0:	dc 01       	movw	r26, r24
    3ee2:	cb 01       	movw	r24, r22
    3ee4:	f8 01       	movw	r30, r16
    3ee6:	91 83       	std	Z+1, r25	; 0x01
    3ee8:	80 83       	st	Z, r24
    3eea:	24 c0       	rjmp	.+72     	; 0x3f34 <__stack+0x2e35>
    3eec:	ce 01       	movw	r24, r28
    3eee:	87 52       	subi	r24, 0x27	; 39
    3ef0:	9f 4f       	sbci	r25, 0xFF	; 255
    3ef2:	20 e9       	ldi	r18, 0x90	; 144
    3ef4:	31 e0       	ldi	r19, 0x01	; 1
    3ef6:	fc 01       	movw	r30, r24
    3ef8:	31 83       	std	Z+1, r19	; 0x01
    3efa:	20 83       	st	Z, r18
    3efc:	ce 01       	movw	r24, r28
    3efe:	87 52       	subi	r24, 0x27	; 39
    3f00:	9f 4f       	sbci	r25, 0xFF	; 255
    3f02:	fc 01       	movw	r30, r24
    3f04:	80 81       	ld	r24, Z
    3f06:	91 81       	ldd	r25, Z+1	; 0x01
    3f08:	01 97       	sbiw	r24, 0x01	; 1
    3f0a:	f1 f7       	brne	.-4      	; 0x3f08 <__stack+0x2e09>
    3f0c:	9e 01       	movw	r18, r28
    3f0e:	27 52       	subi	r18, 0x27	; 39
    3f10:	3f 4f       	sbci	r19, 0xFF	; 255
    3f12:	f9 01       	movw	r30, r18
    3f14:	91 83       	std	Z+1, r25	; 0x01
    3f16:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3f18:	ce 01       	movw	r24, r28
    3f1a:	89 52       	subi	r24, 0x29	; 41
    3f1c:	9f 4f       	sbci	r25, 0xFF	; 255
    3f1e:	9e 01       	movw	r18, r28
    3f20:	29 52       	subi	r18, 0x29	; 41
    3f22:	3f 4f       	sbci	r19, 0xFF	; 255
    3f24:	f9 01       	movw	r30, r18
    3f26:	20 81       	ld	r18, Z
    3f28:	31 81       	ldd	r19, Z+1	; 0x01
    3f2a:	21 50       	subi	r18, 0x01	; 1
    3f2c:	31 09       	sbc	r19, r1
    3f2e:	fc 01       	movw	r30, r24
    3f30:	31 83       	std	Z+1, r19	; 0x01
    3f32:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3f34:	ce 01       	movw	r24, r28
    3f36:	89 52       	subi	r24, 0x29	; 41
    3f38:	9f 4f       	sbci	r25, 0xFF	; 255
    3f3a:	fc 01       	movw	r30, r24
    3f3c:	80 81       	ld	r24, Z
    3f3e:	91 81       	ldd	r25, Z+1	; 0x01
    3f40:	89 2b       	or	r24, r25
    3f42:	a1 f6       	brne	.-88     	; 0x3eec <__stack+0x2ded>
    3f44:	2c c0       	rjmp	.+88     	; 0x3f9e <__stack+0x2e9f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3f46:	8e 01       	movw	r16, r28
    3f48:	09 52       	subi	r16, 0x29	; 41
    3f4a:	1f 4f       	sbci	r17, 0xFF	; 255
    3f4c:	ce 01       	movw	r24, r28
    3f4e:	8d 52       	subi	r24, 0x2D	; 45
    3f50:	9f 4f       	sbci	r25, 0xFF	; 255
    3f52:	fc 01       	movw	r30, r24
    3f54:	60 81       	ld	r22, Z
    3f56:	71 81       	ldd	r23, Z+1	; 0x01
    3f58:	82 81       	ldd	r24, Z+2	; 0x02
    3f5a:	93 81       	ldd	r25, Z+3	; 0x03
    3f5c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    3f60:	dc 01       	movw	r26, r24
    3f62:	cb 01       	movw	r24, r22
    3f64:	f8 01       	movw	r30, r16
    3f66:	91 83       	std	Z+1, r25	; 0x01
    3f68:	80 83       	st	Z, r24
    3f6a:	ce 01       	movw	r24, r28
    3f6c:	85 52       	subi	r24, 0x25	; 37
    3f6e:	9f 4f       	sbci	r25, 0xFF	; 255
    3f70:	9e 01       	movw	r18, r28
    3f72:	29 52       	subi	r18, 0x29	; 41
    3f74:	3f 4f       	sbci	r19, 0xFF	; 255
    3f76:	f9 01       	movw	r30, r18
    3f78:	20 81       	ld	r18, Z
    3f7a:	31 81       	ldd	r19, Z+1	; 0x01
    3f7c:	fc 01       	movw	r30, r24
    3f7e:	31 83       	std	Z+1, r19	; 0x01
    3f80:	20 83       	st	Z, r18
    3f82:	ce 01       	movw	r24, r28
    3f84:	85 52       	subi	r24, 0x25	; 37
    3f86:	9f 4f       	sbci	r25, 0xFF	; 255
    3f88:	fc 01       	movw	r30, r24
    3f8a:	80 81       	ld	r24, Z
    3f8c:	91 81       	ldd	r25, Z+1	; 0x01
    3f8e:	01 97       	sbiw	r24, 0x01	; 1
    3f90:	f1 f7       	brne	.-4      	; 0x3f8e <__stack+0x2e8f>
    3f92:	9e 01       	movw	r18, r28
    3f94:	25 52       	subi	r18, 0x25	; 37
    3f96:	3f 4f       	sbci	r19, 0xFF	; 255
    3f98:	f9 01       	movw	r30, r18
    3f9a:	91 83       	std	Z+1, r25	; 0x01
    3f9c:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F700 T80\n");
    3f9e:	8f eb       	ldi	r24, 0xBF	; 191
    3fa0:	92 e0       	ldi	r25, 0x02	; 2
    3fa2:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    3fa6:	9e 01       	movw	r18, r28
    3fa8:	23 57       	subi	r18, 0x73	; 115
    3faa:	3f 4f       	sbci	r19, 0xFF	; 255
    3fac:	80 e0       	ldi	r24, 0x00	; 0
    3fae:	90 e0       	ldi	r25, 0x00	; 0
    3fb0:	a6 e1       	ldi	r26, 0x16	; 22
    3fb2:	b3 e4       	ldi	r27, 0x43	; 67
    3fb4:	f9 01       	movw	r30, r18
    3fb6:	80 83       	st	Z, r24
    3fb8:	91 83       	std	Z+1, r25	; 0x01
    3fba:	a2 83       	std	Z+2, r26	; 0x02
    3fbc:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3fbe:	8e 01       	movw	r16, r28
    3fc0:	07 53       	subi	r16, 0x37	; 55
    3fc2:	1f 4f       	sbci	r17, 0xFF	; 255
    3fc4:	ce 01       	movw	r24, r28
    3fc6:	83 57       	subi	r24, 0x73	; 115
    3fc8:	9f 4f       	sbci	r25, 0xFF	; 255
    3fca:	20 e0       	ldi	r18, 0x00	; 0
    3fcc:	30 e0       	ldi	r19, 0x00	; 0
    3fce:	4a e7       	ldi	r20, 0x7A	; 122
    3fd0:	55 e4       	ldi	r21, 0x45	; 69
    3fd2:	fc 01       	movw	r30, r24
    3fd4:	60 81       	ld	r22, Z
    3fd6:	71 81       	ldd	r23, Z+1	; 0x01
    3fd8:	82 81       	ldd	r24, Z+2	; 0x02
    3fda:	93 81       	ldd	r25, Z+3	; 0x03
    3fdc:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    3fe0:	dc 01       	movw	r26, r24
    3fe2:	cb 01       	movw	r24, r22
    3fe4:	f8 01       	movw	r30, r16
    3fe6:	80 83       	st	Z, r24
    3fe8:	91 83       	std	Z+1, r25	; 0x01
    3fea:	a2 83       	std	Z+2, r26	; 0x02
    3fec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3fee:	ce 01       	movw	r24, r28
    3ff0:	87 53       	subi	r24, 0x37	; 55
    3ff2:	9f 4f       	sbci	r25, 0xFF	; 255
    3ff4:	20 e0       	ldi	r18, 0x00	; 0
    3ff6:	30 e0       	ldi	r19, 0x00	; 0
    3ff8:	40 e8       	ldi	r20, 0x80	; 128
    3ffa:	5f e3       	ldi	r21, 0x3F	; 63
    3ffc:	fc 01       	movw	r30, r24
    3ffe:	60 81       	ld	r22, Z
    4000:	71 81       	ldd	r23, Z+1	; 0x01
    4002:	82 81       	ldd	r24, Z+2	; 0x02
    4004:	93 81       	ldd	r25, Z+3	; 0x03
    4006:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    400a:	88 23       	and	r24, r24
    400c:	4c f4       	brge	.+18     	; 0x4020 <__stack+0x2f21>
		__ticks = 1;
    400e:	ce 01       	movw	r24, r28
    4010:	83 53       	subi	r24, 0x33	; 51
    4012:	9f 4f       	sbci	r25, 0xFF	; 255
    4014:	21 e0       	ldi	r18, 0x01	; 1
    4016:	30 e0       	ldi	r19, 0x00	; 0
    4018:	fc 01       	movw	r30, r24
    401a:	31 83       	std	Z+1, r19	; 0x01
    401c:	20 83       	st	Z, r18
    401e:	6d c0       	rjmp	.+218    	; 0x40fa <__stack+0x2ffb>
	else if (__tmp > 65535)
    4020:	ce 01       	movw	r24, r28
    4022:	87 53       	subi	r24, 0x37	; 55
    4024:	9f 4f       	sbci	r25, 0xFF	; 255
    4026:	20 e0       	ldi	r18, 0x00	; 0
    4028:	3f ef       	ldi	r19, 0xFF	; 255
    402a:	4f e7       	ldi	r20, 0x7F	; 127
    402c:	57 e4       	ldi	r21, 0x47	; 71
    402e:	fc 01       	movw	r30, r24
    4030:	60 81       	ld	r22, Z
    4032:	71 81       	ldd	r23, Z+1	; 0x01
    4034:	82 81       	ldd	r24, Z+2	; 0x02
    4036:	93 81       	ldd	r25, Z+3	; 0x03
    4038:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    403c:	18 16       	cp	r1, r24
    403e:	0c f0       	brlt	.+2      	; 0x4042 <__stack+0x2f43>
    4040:	4a c0       	rjmp	.+148    	; 0x40d6 <__stack+0x2fd7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4042:	ce 01       	movw	r24, r28
    4044:	83 57       	subi	r24, 0x73	; 115
    4046:	9f 4f       	sbci	r25, 0xFF	; 255
    4048:	20 e0       	ldi	r18, 0x00	; 0
    404a:	30 e0       	ldi	r19, 0x00	; 0
    404c:	40 e2       	ldi	r20, 0x20	; 32
    404e:	51 e4       	ldi	r21, 0x41	; 65
    4050:	fc 01       	movw	r30, r24
    4052:	60 81       	ld	r22, Z
    4054:	71 81       	ldd	r23, Z+1	; 0x01
    4056:	82 81       	ldd	r24, Z+2	; 0x02
    4058:	93 81       	ldd	r25, Z+3	; 0x03
    405a:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    405e:	dc 01       	movw	r26, r24
    4060:	cb 01       	movw	r24, r22
    4062:	8e 01       	movw	r16, r28
    4064:	03 53       	subi	r16, 0x33	; 51
    4066:	1f 4f       	sbci	r17, 0xFF	; 255
    4068:	bc 01       	movw	r22, r24
    406a:	cd 01       	movw	r24, r26
    406c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    4070:	dc 01       	movw	r26, r24
    4072:	cb 01       	movw	r24, r22
    4074:	f8 01       	movw	r30, r16
    4076:	91 83       	std	Z+1, r25	; 0x01
    4078:	80 83       	st	Z, r24
    407a:	24 c0       	rjmp	.+72     	; 0x40c4 <__stack+0x2fc5>
    407c:	ce 01       	movw	r24, r28
    407e:	81 53       	subi	r24, 0x31	; 49
    4080:	9f 4f       	sbci	r25, 0xFF	; 255
    4082:	20 e9       	ldi	r18, 0x90	; 144
    4084:	31 e0       	ldi	r19, 0x01	; 1
    4086:	fc 01       	movw	r30, r24
    4088:	31 83       	std	Z+1, r19	; 0x01
    408a:	20 83       	st	Z, r18
    408c:	ce 01       	movw	r24, r28
    408e:	81 53       	subi	r24, 0x31	; 49
    4090:	9f 4f       	sbci	r25, 0xFF	; 255
    4092:	fc 01       	movw	r30, r24
    4094:	80 81       	ld	r24, Z
    4096:	91 81       	ldd	r25, Z+1	; 0x01
    4098:	01 97       	sbiw	r24, 0x01	; 1
    409a:	f1 f7       	brne	.-4      	; 0x4098 <__stack+0x2f99>
    409c:	9e 01       	movw	r18, r28
    409e:	21 53       	subi	r18, 0x31	; 49
    40a0:	3f 4f       	sbci	r19, 0xFF	; 255
    40a2:	f9 01       	movw	r30, r18
    40a4:	91 83       	std	Z+1, r25	; 0x01
    40a6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    40a8:	ce 01       	movw	r24, r28
    40aa:	83 53       	subi	r24, 0x33	; 51
    40ac:	9f 4f       	sbci	r25, 0xFF	; 255
    40ae:	9e 01       	movw	r18, r28
    40b0:	23 53       	subi	r18, 0x33	; 51
    40b2:	3f 4f       	sbci	r19, 0xFF	; 255
    40b4:	f9 01       	movw	r30, r18
    40b6:	20 81       	ld	r18, Z
    40b8:	31 81       	ldd	r19, Z+1	; 0x01
    40ba:	21 50       	subi	r18, 0x01	; 1
    40bc:	31 09       	sbc	r19, r1
    40be:	fc 01       	movw	r30, r24
    40c0:	31 83       	std	Z+1, r19	; 0x01
    40c2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    40c4:	ce 01       	movw	r24, r28
    40c6:	83 53       	subi	r24, 0x33	; 51
    40c8:	9f 4f       	sbci	r25, 0xFF	; 255
    40ca:	fc 01       	movw	r30, r24
    40cc:	80 81       	ld	r24, Z
    40ce:	91 81       	ldd	r25, Z+1	; 0x01
    40d0:	89 2b       	or	r24, r25
    40d2:	a1 f6       	brne	.-88     	; 0x407c <__stack+0x2f7d>
    40d4:	2c c0       	rjmp	.+88     	; 0x412e <__stack+0x302f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    40d6:	8e 01       	movw	r16, r28
    40d8:	03 53       	subi	r16, 0x33	; 51
    40da:	1f 4f       	sbci	r17, 0xFF	; 255
    40dc:	ce 01       	movw	r24, r28
    40de:	87 53       	subi	r24, 0x37	; 55
    40e0:	9f 4f       	sbci	r25, 0xFF	; 255
    40e2:	fc 01       	movw	r30, r24
    40e4:	60 81       	ld	r22, Z
    40e6:	71 81       	ldd	r23, Z+1	; 0x01
    40e8:	82 81       	ldd	r24, Z+2	; 0x02
    40ea:	93 81       	ldd	r25, Z+3	; 0x03
    40ec:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    40f0:	dc 01       	movw	r26, r24
    40f2:	cb 01       	movw	r24, r22
    40f4:	f8 01       	movw	r30, r16
    40f6:	91 83       	std	Z+1, r25	; 0x01
    40f8:	80 83       	st	Z, r24
    40fa:	ce 01       	movw	r24, r28
    40fc:	8f 52       	subi	r24, 0x2F	; 47
    40fe:	9f 4f       	sbci	r25, 0xFF	; 255
    4100:	9e 01       	movw	r18, r28
    4102:	23 53       	subi	r18, 0x33	; 51
    4104:	3f 4f       	sbci	r19, 0xFF	; 255
    4106:	f9 01       	movw	r30, r18
    4108:	20 81       	ld	r18, Z
    410a:	31 81       	ldd	r19, Z+1	; 0x01
    410c:	fc 01       	movw	r30, r24
    410e:	31 83       	std	Z+1, r19	; 0x01
    4110:	20 83       	st	Z, r18
    4112:	ce 01       	movw	r24, r28
    4114:	8f 52       	subi	r24, 0x2F	; 47
    4116:	9f 4f       	sbci	r25, 0xFF	; 255
    4118:	fc 01       	movw	r30, r24
    411a:	80 81       	ld	r24, Z
    411c:	91 81       	ldd	r25, Z+1	; 0x01
    411e:	01 97       	sbiw	r24, 0x01	; 1
    4120:	f1 f7       	brne	.-4      	; 0x411e <__stack+0x301f>
    4122:	9e 01       	movw	r18, r28
    4124:	2f 52       	subi	r18, 0x2F	; 47
    4126:	3f 4f       	sbci	r19, 0xFF	; 255
    4128:	f9 01       	movw	r30, r18
    412a:	91 83       	std	Z+1, r25	; 0x01
    412c:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F760 T50\n");
    412e:	8f e6       	ldi	r24, 0x6F	; 111
    4130:	92 e0       	ldi	r25, 0x02	; 2
    4132:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    4136:	9e 01       	movw	r18, r28
    4138:	2f 56       	subi	r18, 0x6F	; 111
    413a:	3f 4f       	sbci	r19, 0xFF	; 255
    413c:	80 e0       	ldi	r24, 0x00	; 0
    413e:	90 e0       	ldi	r25, 0x00	; 0
    4140:	af ea       	ldi	r26, 0xAF	; 175
    4142:	b3 e4       	ldi	r27, 0x43	; 67
    4144:	f9 01       	movw	r30, r18
    4146:	80 83       	st	Z, r24
    4148:	91 83       	std	Z+1, r25	; 0x01
    414a:	a2 83       	std	Z+2, r26	; 0x02
    414c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    414e:	8e 01       	movw	r16, r28
    4150:	01 54       	subi	r16, 0x41	; 65
    4152:	1f 4f       	sbci	r17, 0xFF	; 255
    4154:	ce 01       	movw	r24, r28
    4156:	8f 56       	subi	r24, 0x6F	; 111
    4158:	9f 4f       	sbci	r25, 0xFF	; 255
    415a:	20 e0       	ldi	r18, 0x00	; 0
    415c:	30 e0       	ldi	r19, 0x00	; 0
    415e:	4a e7       	ldi	r20, 0x7A	; 122
    4160:	55 e4       	ldi	r21, 0x45	; 69
    4162:	fc 01       	movw	r30, r24
    4164:	60 81       	ld	r22, Z
    4166:	71 81       	ldd	r23, Z+1	; 0x01
    4168:	82 81       	ldd	r24, Z+2	; 0x02
    416a:	93 81       	ldd	r25, Z+3	; 0x03
    416c:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    4170:	dc 01       	movw	r26, r24
    4172:	cb 01       	movw	r24, r22
    4174:	f8 01       	movw	r30, r16
    4176:	80 83       	st	Z, r24
    4178:	91 83       	std	Z+1, r25	; 0x01
    417a:	a2 83       	std	Z+2, r26	; 0x02
    417c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    417e:	ce 01       	movw	r24, r28
    4180:	81 54       	subi	r24, 0x41	; 65
    4182:	9f 4f       	sbci	r25, 0xFF	; 255
    4184:	20 e0       	ldi	r18, 0x00	; 0
    4186:	30 e0       	ldi	r19, 0x00	; 0
    4188:	40 e8       	ldi	r20, 0x80	; 128
    418a:	5f e3       	ldi	r21, 0x3F	; 63
    418c:	fc 01       	movw	r30, r24
    418e:	60 81       	ld	r22, Z
    4190:	71 81       	ldd	r23, Z+1	; 0x01
    4192:	82 81       	ldd	r24, Z+2	; 0x02
    4194:	93 81       	ldd	r25, Z+3	; 0x03
    4196:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    419a:	88 23       	and	r24, r24
    419c:	4c f4       	brge	.+18     	; 0x41b0 <__stack+0x30b1>
		__ticks = 1;
    419e:	ce 01       	movw	r24, r28
    41a0:	8d 53       	subi	r24, 0x3D	; 61
    41a2:	9f 4f       	sbci	r25, 0xFF	; 255
    41a4:	21 e0       	ldi	r18, 0x01	; 1
    41a6:	30 e0       	ldi	r19, 0x00	; 0
    41a8:	fc 01       	movw	r30, r24
    41aa:	31 83       	std	Z+1, r19	; 0x01
    41ac:	20 83       	st	Z, r18
    41ae:	6d c0       	rjmp	.+218    	; 0x428a <__stack+0x318b>
	else if (__tmp > 65535)
    41b0:	ce 01       	movw	r24, r28
    41b2:	81 54       	subi	r24, 0x41	; 65
    41b4:	9f 4f       	sbci	r25, 0xFF	; 255
    41b6:	20 e0       	ldi	r18, 0x00	; 0
    41b8:	3f ef       	ldi	r19, 0xFF	; 255
    41ba:	4f e7       	ldi	r20, 0x7F	; 127
    41bc:	57 e4       	ldi	r21, 0x47	; 71
    41be:	fc 01       	movw	r30, r24
    41c0:	60 81       	ld	r22, Z
    41c2:	71 81       	ldd	r23, Z+1	; 0x01
    41c4:	82 81       	ldd	r24, Z+2	; 0x02
    41c6:	93 81       	ldd	r25, Z+3	; 0x03
    41c8:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    41cc:	18 16       	cp	r1, r24
    41ce:	0c f0       	brlt	.+2      	; 0x41d2 <__stack+0x30d3>
    41d0:	4a c0       	rjmp	.+148    	; 0x4266 <__stack+0x3167>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    41d2:	ce 01       	movw	r24, r28
    41d4:	8f 56       	subi	r24, 0x6F	; 111
    41d6:	9f 4f       	sbci	r25, 0xFF	; 255
    41d8:	20 e0       	ldi	r18, 0x00	; 0
    41da:	30 e0       	ldi	r19, 0x00	; 0
    41dc:	40 e2       	ldi	r20, 0x20	; 32
    41de:	51 e4       	ldi	r21, 0x41	; 65
    41e0:	fc 01       	movw	r30, r24
    41e2:	60 81       	ld	r22, Z
    41e4:	71 81       	ldd	r23, Z+1	; 0x01
    41e6:	82 81       	ldd	r24, Z+2	; 0x02
    41e8:	93 81       	ldd	r25, Z+3	; 0x03
    41ea:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    41ee:	dc 01       	movw	r26, r24
    41f0:	cb 01       	movw	r24, r22
    41f2:	8e 01       	movw	r16, r28
    41f4:	0d 53       	subi	r16, 0x3D	; 61
    41f6:	1f 4f       	sbci	r17, 0xFF	; 255
    41f8:	bc 01       	movw	r22, r24
    41fa:	cd 01       	movw	r24, r26
    41fc:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    4200:	dc 01       	movw	r26, r24
    4202:	cb 01       	movw	r24, r22
    4204:	f8 01       	movw	r30, r16
    4206:	91 83       	std	Z+1, r25	; 0x01
    4208:	80 83       	st	Z, r24
    420a:	24 c0       	rjmp	.+72     	; 0x4254 <__stack+0x3155>
    420c:	ce 01       	movw	r24, r28
    420e:	8b 53       	subi	r24, 0x3B	; 59
    4210:	9f 4f       	sbci	r25, 0xFF	; 255
    4212:	20 e9       	ldi	r18, 0x90	; 144
    4214:	31 e0       	ldi	r19, 0x01	; 1
    4216:	fc 01       	movw	r30, r24
    4218:	31 83       	std	Z+1, r19	; 0x01
    421a:	20 83       	st	Z, r18
    421c:	ce 01       	movw	r24, r28
    421e:	8b 53       	subi	r24, 0x3B	; 59
    4220:	9f 4f       	sbci	r25, 0xFF	; 255
    4222:	fc 01       	movw	r30, r24
    4224:	80 81       	ld	r24, Z
    4226:	91 81       	ldd	r25, Z+1	; 0x01
    4228:	01 97       	sbiw	r24, 0x01	; 1
    422a:	f1 f7       	brne	.-4      	; 0x4228 <__stack+0x3129>
    422c:	9e 01       	movw	r18, r28
    422e:	2b 53       	subi	r18, 0x3B	; 59
    4230:	3f 4f       	sbci	r19, 0xFF	; 255
    4232:	f9 01       	movw	r30, r18
    4234:	91 83       	std	Z+1, r25	; 0x01
    4236:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4238:	ce 01       	movw	r24, r28
    423a:	8d 53       	subi	r24, 0x3D	; 61
    423c:	9f 4f       	sbci	r25, 0xFF	; 255
    423e:	9e 01       	movw	r18, r28
    4240:	2d 53       	subi	r18, 0x3D	; 61
    4242:	3f 4f       	sbci	r19, 0xFF	; 255
    4244:	f9 01       	movw	r30, r18
    4246:	20 81       	ld	r18, Z
    4248:	31 81       	ldd	r19, Z+1	; 0x01
    424a:	21 50       	subi	r18, 0x01	; 1
    424c:	31 09       	sbc	r19, r1
    424e:	fc 01       	movw	r30, r24
    4250:	31 83       	std	Z+1, r19	; 0x01
    4252:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4254:	ce 01       	movw	r24, r28
    4256:	8d 53       	subi	r24, 0x3D	; 61
    4258:	9f 4f       	sbci	r25, 0xFF	; 255
    425a:	fc 01       	movw	r30, r24
    425c:	80 81       	ld	r24, Z
    425e:	91 81       	ldd	r25, Z+1	; 0x01
    4260:	89 2b       	or	r24, r25
    4262:	a1 f6       	brne	.-88     	; 0x420c <__stack+0x310d>
    4264:	2c c0       	rjmp	.+88     	; 0x42be <__stack+0x31bf>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4266:	8e 01       	movw	r16, r28
    4268:	0d 53       	subi	r16, 0x3D	; 61
    426a:	1f 4f       	sbci	r17, 0xFF	; 255
    426c:	ce 01       	movw	r24, r28
    426e:	81 54       	subi	r24, 0x41	; 65
    4270:	9f 4f       	sbci	r25, 0xFF	; 255
    4272:	fc 01       	movw	r30, r24
    4274:	60 81       	ld	r22, Z
    4276:	71 81       	ldd	r23, Z+1	; 0x01
    4278:	82 81       	ldd	r24, Z+2	; 0x02
    427a:	93 81       	ldd	r25, Z+3	; 0x03
    427c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    4280:	dc 01       	movw	r26, r24
    4282:	cb 01       	movw	r24, r22
    4284:	f8 01       	movw	r30, r16
    4286:	91 83       	std	Z+1, r25	; 0x01
    4288:	80 83       	st	Z, r24
    428a:	ce 01       	movw	r24, r28
    428c:	89 53       	subi	r24, 0x39	; 57
    428e:	9f 4f       	sbci	r25, 0xFF	; 255
    4290:	9e 01       	movw	r18, r28
    4292:	2d 53       	subi	r18, 0x3D	; 61
    4294:	3f 4f       	sbci	r19, 0xFF	; 255
    4296:	f9 01       	movw	r30, r18
    4298:	20 81       	ld	r18, Z
    429a:	31 81       	ldd	r19, Z+1	; 0x01
    429c:	fc 01       	movw	r30, r24
    429e:	31 83       	std	Z+1, r19	; 0x01
    42a0:	20 83       	st	Z, r18
    42a2:	ce 01       	movw	r24, r28
    42a4:	89 53       	subi	r24, 0x39	; 57
    42a6:	9f 4f       	sbci	r25, 0xFF	; 255
    42a8:	fc 01       	movw	r30, r24
    42aa:	80 81       	ld	r24, Z
    42ac:	91 81       	ldd	r25, Z+1	; 0x01
    42ae:	01 97       	sbiw	r24, 0x01	; 1
    42b0:	f1 f7       	brne	.-4      	; 0x42ae <__stack+0x31af>
    42b2:	9e 01       	movw	r18, r28
    42b4:	29 53       	subi	r18, 0x39	; 57
    42b6:	3f 4f       	sbci	r19, 0xFF	; 255
    42b8:	f9 01       	movw	r30, r18
    42ba:	91 83       	std	Z+1, r25	; 0x01
    42bc:	80 83       	st	Z, r24
	_delay_ms(350);
	to_uARM("M2210 F660 T80\n");
    42be:	8f e5       	ldi	r24, 0x5F	; 95
    42c0:	92 e0       	ldi	r25, 0x02	; 2
    42c2:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    42c6:	9e 01       	movw	r18, r28
    42c8:	2b 56       	subi	r18, 0x6B	; 107
    42ca:	3f 4f       	sbci	r19, 0xFF	; 255
    42cc:	80 e0       	ldi	r24, 0x00	; 0
    42ce:	90 e0       	ldi	r25, 0x00	; 0
    42d0:	a6 e9       	ldi	r26, 0x96	; 150
    42d2:	b3 e4       	ldi	r27, 0x43	; 67
    42d4:	f9 01       	movw	r30, r18
    42d6:	80 83       	st	Z, r24
    42d8:	91 83       	std	Z+1, r25	; 0x01
    42da:	a2 83       	std	Z+2, r26	; 0x02
    42dc:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    42de:	8e 01       	movw	r16, r28
    42e0:	0b 54       	subi	r16, 0x4B	; 75
    42e2:	1f 4f       	sbci	r17, 0xFF	; 255
    42e4:	ce 01       	movw	r24, r28
    42e6:	8b 56       	subi	r24, 0x6B	; 107
    42e8:	9f 4f       	sbci	r25, 0xFF	; 255
    42ea:	20 e0       	ldi	r18, 0x00	; 0
    42ec:	30 e0       	ldi	r19, 0x00	; 0
    42ee:	4a e7       	ldi	r20, 0x7A	; 122
    42f0:	55 e4       	ldi	r21, 0x45	; 69
    42f2:	fc 01       	movw	r30, r24
    42f4:	60 81       	ld	r22, Z
    42f6:	71 81       	ldd	r23, Z+1	; 0x01
    42f8:	82 81       	ldd	r24, Z+2	; 0x02
    42fa:	93 81       	ldd	r25, Z+3	; 0x03
    42fc:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    4300:	dc 01       	movw	r26, r24
    4302:	cb 01       	movw	r24, r22
    4304:	f8 01       	movw	r30, r16
    4306:	80 83       	st	Z, r24
    4308:	91 83       	std	Z+1, r25	; 0x01
    430a:	a2 83       	std	Z+2, r26	; 0x02
    430c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    430e:	ce 01       	movw	r24, r28
    4310:	8b 54       	subi	r24, 0x4B	; 75
    4312:	9f 4f       	sbci	r25, 0xFF	; 255
    4314:	20 e0       	ldi	r18, 0x00	; 0
    4316:	30 e0       	ldi	r19, 0x00	; 0
    4318:	40 e8       	ldi	r20, 0x80	; 128
    431a:	5f e3       	ldi	r21, 0x3F	; 63
    431c:	fc 01       	movw	r30, r24
    431e:	60 81       	ld	r22, Z
    4320:	71 81       	ldd	r23, Z+1	; 0x01
    4322:	82 81       	ldd	r24, Z+2	; 0x02
    4324:	93 81       	ldd	r25, Z+3	; 0x03
    4326:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    432a:	88 23       	and	r24, r24
    432c:	4c f4       	brge	.+18     	; 0x4340 <__stack+0x3241>
		__ticks = 1;
    432e:	ce 01       	movw	r24, r28
    4330:	87 54       	subi	r24, 0x47	; 71
    4332:	9f 4f       	sbci	r25, 0xFF	; 255
    4334:	21 e0       	ldi	r18, 0x01	; 1
    4336:	30 e0       	ldi	r19, 0x00	; 0
    4338:	fc 01       	movw	r30, r24
    433a:	31 83       	std	Z+1, r19	; 0x01
    433c:	20 83       	st	Z, r18
    433e:	6d c0       	rjmp	.+218    	; 0x441a <__stack+0x331b>
	else if (__tmp > 65535)
    4340:	ce 01       	movw	r24, r28
    4342:	8b 54       	subi	r24, 0x4B	; 75
    4344:	9f 4f       	sbci	r25, 0xFF	; 255
    4346:	20 e0       	ldi	r18, 0x00	; 0
    4348:	3f ef       	ldi	r19, 0xFF	; 255
    434a:	4f e7       	ldi	r20, 0x7F	; 127
    434c:	57 e4       	ldi	r21, 0x47	; 71
    434e:	fc 01       	movw	r30, r24
    4350:	60 81       	ld	r22, Z
    4352:	71 81       	ldd	r23, Z+1	; 0x01
    4354:	82 81       	ldd	r24, Z+2	; 0x02
    4356:	93 81       	ldd	r25, Z+3	; 0x03
    4358:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    435c:	18 16       	cp	r1, r24
    435e:	0c f0       	brlt	.+2      	; 0x4362 <__stack+0x3263>
    4360:	4a c0       	rjmp	.+148    	; 0x43f6 <__stack+0x32f7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4362:	ce 01       	movw	r24, r28
    4364:	8b 56       	subi	r24, 0x6B	; 107
    4366:	9f 4f       	sbci	r25, 0xFF	; 255
    4368:	20 e0       	ldi	r18, 0x00	; 0
    436a:	30 e0       	ldi	r19, 0x00	; 0
    436c:	40 e2       	ldi	r20, 0x20	; 32
    436e:	51 e4       	ldi	r21, 0x41	; 65
    4370:	fc 01       	movw	r30, r24
    4372:	60 81       	ld	r22, Z
    4374:	71 81       	ldd	r23, Z+1	; 0x01
    4376:	82 81       	ldd	r24, Z+2	; 0x02
    4378:	93 81       	ldd	r25, Z+3	; 0x03
    437a:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    437e:	dc 01       	movw	r26, r24
    4380:	cb 01       	movw	r24, r22
    4382:	8e 01       	movw	r16, r28
    4384:	07 54       	subi	r16, 0x47	; 71
    4386:	1f 4f       	sbci	r17, 0xFF	; 255
    4388:	bc 01       	movw	r22, r24
    438a:	cd 01       	movw	r24, r26
    438c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    4390:	dc 01       	movw	r26, r24
    4392:	cb 01       	movw	r24, r22
    4394:	f8 01       	movw	r30, r16
    4396:	91 83       	std	Z+1, r25	; 0x01
    4398:	80 83       	st	Z, r24
    439a:	24 c0       	rjmp	.+72     	; 0x43e4 <__stack+0x32e5>
    439c:	ce 01       	movw	r24, r28
    439e:	85 54       	subi	r24, 0x45	; 69
    43a0:	9f 4f       	sbci	r25, 0xFF	; 255
    43a2:	20 e9       	ldi	r18, 0x90	; 144
    43a4:	31 e0       	ldi	r19, 0x01	; 1
    43a6:	fc 01       	movw	r30, r24
    43a8:	31 83       	std	Z+1, r19	; 0x01
    43aa:	20 83       	st	Z, r18
    43ac:	ce 01       	movw	r24, r28
    43ae:	85 54       	subi	r24, 0x45	; 69
    43b0:	9f 4f       	sbci	r25, 0xFF	; 255
    43b2:	fc 01       	movw	r30, r24
    43b4:	80 81       	ld	r24, Z
    43b6:	91 81       	ldd	r25, Z+1	; 0x01
    43b8:	01 97       	sbiw	r24, 0x01	; 1
    43ba:	f1 f7       	brne	.-4      	; 0x43b8 <__stack+0x32b9>
    43bc:	9e 01       	movw	r18, r28
    43be:	25 54       	subi	r18, 0x45	; 69
    43c0:	3f 4f       	sbci	r19, 0xFF	; 255
    43c2:	f9 01       	movw	r30, r18
    43c4:	91 83       	std	Z+1, r25	; 0x01
    43c6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    43c8:	ce 01       	movw	r24, r28
    43ca:	87 54       	subi	r24, 0x47	; 71
    43cc:	9f 4f       	sbci	r25, 0xFF	; 255
    43ce:	9e 01       	movw	r18, r28
    43d0:	27 54       	subi	r18, 0x47	; 71
    43d2:	3f 4f       	sbci	r19, 0xFF	; 255
    43d4:	f9 01       	movw	r30, r18
    43d6:	20 81       	ld	r18, Z
    43d8:	31 81       	ldd	r19, Z+1	; 0x01
    43da:	21 50       	subi	r18, 0x01	; 1
    43dc:	31 09       	sbc	r19, r1
    43de:	fc 01       	movw	r30, r24
    43e0:	31 83       	std	Z+1, r19	; 0x01
    43e2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    43e4:	ce 01       	movw	r24, r28
    43e6:	87 54       	subi	r24, 0x47	; 71
    43e8:	9f 4f       	sbci	r25, 0xFF	; 255
    43ea:	fc 01       	movw	r30, r24
    43ec:	80 81       	ld	r24, Z
    43ee:	91 81       	ldd	r25, Z+1	; 0x01
    43f0:	89 2b       	or	r24, r25
    43f2:	a1 f6       	brne	.-88     	; 0x439c <__stack+0x329d>
    43f4:	2c c0       	rjmp	.+88     	; 0x444e <__stack+0x334f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    43f6:	8e 01       	movw	r16, r28
    43f8:	07 54       	subi	r16, 0x47	; 71
    43fa:	1f 4f       	sbci	r17, 0xFF	; 255
    43fc:	ce 01       	movw	r24, r28
    43fe:	8b 54       	subi	r24, 0x4B	; 75
    4400:	9f 4f       	sbci	r25, 0xFF	; 255
    4402:	fc 01       	movw	r30, r24
    4404:	60 81       	ld	r22, Z
    4406:	71 81       	ldd	r23, Z+1	; 0x01
    4408:	82 81       	ldd	r24, Z+2	; 0x02
    440a:	93 81       	ldd	r25, Z+3	; 0x03
    440c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    4410:	dc 01       	movw	r26, r24
    4412:	cb 01       	movw	r24, r22
    4414:	f8 01       	movw	r30, r16
    4416:	91 83       	std	Z+1, r25	; 0x01
    4418:	80 83       	st	Z, r24
    441a:	ce 01       	movw	r24, r28
    441c:	83 54       	subi	r24, 0x43	; 67
    441e:	9f 4f       	sbci	r25, 0xFF	; 255
    4420:	9e 01       	movw	r18, r28
    4422:	27 54       	subi	r18, 0x47	; 71
    4424:	3f 4f       	sbci	r19, 0xFF	; 255
    4426:	f9 01       	movw	r30, r18
    4428:	20 81       	ld	r18, Z
    442a:	31 81       	ldd	r19, Z+1	; 0x01
    442c:	fc 01       	movw	r30, r24
    442e:	31 83       	std	Z+1, r19	; 0x01
    4430:	20 83       	st	Z, r18
    4432:	ce 01       	movw	r24, r28
    4434:	83 54       	subi	r24, 0x43	; 67
    4436:	9f 4f       	sbci	r25, 0xFF	; 255
    4438:	fc 01       	movw	r30, r24
    443a:	80 81       	ld	r24, Z
    443c:	91 81       	ldd	r25, Z+1	; 0x01
    443e:	01 97       	sbiw	r24, 0x01	; 1
    4440:	f1 f7       	brne	.-4      	; 0x443e <__stack+0x333f>
    4442:	9e 01       	movw	r18, r28
    4444:	23 54       	subi	r18, 0x43	; 67
    4446:	3f 4f       	sbci	r19, 0xFF	; 255
    4448:	f9 01       	movw	r30, r18
    444a:	91 83       	std	Z+1, r25	; 0x01
    444c:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F520 T80\n");
    444e:	8f e9       	ldi	r24, 0x9F	; 159
    4450:	92 e0       	ldi	r25, 0x02	; 2
    4452:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    4456:	9e 01       	movw	r18, r28
    4458:	27 56       	subi	r18, 0x67	; 103
    445a:	3f 4f       	sbci	r19, 0xFF	; 255
    445c:	80 e0       	ldi	r24, 0x00	; 0
    445e:	90 e0       	ldi	r25, 0x00	; 0
    4460:	a6 e1       	ldi	r26, 0x16	; 22
    4462:	b3 e4       	ldi	r27, 0x43	; 67
    4464:	f9 01       	movw	r30, r18
    4466:	80 83       	st	Z, r24
    4468:	91 83       	std	Z+1, r25	; 0x01
    446a:	a2 83       	std	Z+2, r26	; 0x02
    446c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    446e:	8e 01       	movw	r16, r28
    4470:	05 55       	subi	r16, 0x55	; 85
    4472:	1f 4f       	sbci	r17, 0xFF	; 255
    4474:	ce 01       	movw	r24, r28
    4476:	87 56       	subi	r24, 0x67	; 103
    4478:	9f 4f       	sbci	r25, 0xFF	; 255
    447a:	20 e0       	ldi	r18, 0x00	; 0
    447c:	30 e0       	ldi	r19, 0x00	; 0
    447e:	4a e7       	ldi	r20, 0x7A	; 122
    4480:	55 e4       	ldi	r21, 0x45	; 69
    4482:	fc 01       	movw	r30, r24
    4484:	60 81       	ld	r22, Z
    4486:	71 81       	ldd	r23, Z+1	; 0x01
    4488:	82 81       	ldd	r24, Z+2	; 0x02
    448a:	93 81       	ldd	r25, Z+3	; 0x03
    448c:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    4490:	dc 01       	movw	r26, r24
    4492:	cb 01       	movw	r24, r22
    4494:	f8 01       	movw	r30, r16
    4496:	80 83       	st	Z, r24
    4498:	91 83       	std	Z+1, r25	; 0x01
    449a:	a2 83       	std	Z+2, r26	; 0x02
    449c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    449e:	ce 01       	movw	r24, r28
    44a0:	85 55       	subi	r24, 0x55	; 85
    44a2:	9f 4f       	sbci	r25, 0xFF	; 255
    44a4:	20 e0       	ldi	r18, 0x00	; 0
    44a6:	30 e0       	ldi	r19, 0x00	; 0
    44a8:	40 e8       	ldi	r20, 0x80	; 128
    44aa:	5f e3       	ldi	r21, 0x3F	; 63
    44ac:	fc 01       	movw	r30, r24
    44ae:	60 81       	ld	r22, Z
    44b0:	71 81       	ldd	r23, Z+1	; 0x01
    44b2:	82 81       	ldd	r24, Z+2	; 0x02
    44b4:	93 81       	ldd	r25, Z+3	; 0x03
    44b6:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    44ba:	88 23       	and	r24, r24
    44bc:	4c f4       	brge	.+18     	; 0x44d0 <__stack+0x33d1>
		__ticks = 1;
    44be:	ce 01       	movw	r24, r28
    44c0:	81 55       	subi	r24, 0x51	; 81
    44c2:	9f 4f       	sbci	r25, 0xFF	; 255
    44c4:	21 e0       	ldi	r18, 0x01	; 1
    44c6:	30 e0       	ldi	r19, 0x00	; 0
    44c8:	fc 01       	movw	r30, r24
    44ca:	31 83       	std	Z+1, r19	; 0x01
    44cc:	20 83       	st	Z, r18
    44ce:	6d c0       	rjmp	.+218    	; 0x45aa <__stack+0x34ab>
	else if (__tmp > 65535)
    44d0:	ce 01       	movw	r24, r28
    44d2:	85 55       	subi	r24, 0x55	; 85
    44d4:	9f 4f       	sbci	r25, 0xFF	; 255
    44d6:	20 e0       	ldi	r18, 0x00	; 0
    44d8:	3f ef       	ldi	r19, 0xFF	; 255
    44da:	4f e7       	ldi	r20, 0x7F	; 127
    44dc:	57 e4       	ldi	r21, 0x47	; 71
    44de:	fc 01       	movw	r30, r24
    44e0:	60 81       	ld	r22, Z
    44e2:	71 81       	ldd	r23, Z+1	; 0x01
    44e4:	82 81       	ldd	r24, Z+2	; 0x02
    44e6:	93 81       	ldd	r25, Z+3	; 0x03
    44e8:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    44ec:	18 16       	cp	r1, r24
    44ee:	0c f0       	brlt	.+2      	; 0x44f2 <__stack+0x33f3>
    44f0:	4a c0       	rjmp	.+148    	; 0x4586 <__stack+0x3487>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    44f2:	ce 01       	movw	r24, r28
    44f4:	87 56       	subi	r24, 0x67	; 103
    44f6:	9f 4f       	sbci	r25, 0xFF	; 255
    44f8:	20 e0       	ldi	r18, 0x00	; 0
    44fa:	30 e0       	ldi	r19, 0x00	; 0
    44fc:	40 e2       	ldi	r20, 0x20	; 32
    44fe:	51 e4       	ldi	r21, 0x41	; 65
    4500:	fc 01       	movw	r30, r24
    4502:	60 81       	ld	r22, Z
    4504:	71 81       	ldd	r23, Z+1	; 0x01
    4506:	82 81       	ldd	r24, Z+2	; 0x02
    4508:	93 81       	ldd	r25, Z+3	; 0x03
    450a:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    450e:	dc 01       	movw	r26, r24
    4510:	cb 01       	movw	r24, r22
    4512:	8e 01       	movw	r16, r28
    4514:	01 55       	subi	r16, 0x51	; 81
    4516:	1f 4f       	sbci	r17, 0xFF	; 255
    4518:	bc 01       	movw	r22, r24
    451a:	cd 01       	movw	r24, r26
    451c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    4520:	dc 01       	movw	r26, r24
    4522:	cb 01       	movw	r24, r22
    4524:	f8 01       	movw	r30, r16
    4526:	91 83       	std	Z+1, r25	; 0x01
    4528:	80 83       	st	Z, r24
    452a:	24 c0       	rjmp	.+72     	; 0x4574 <__stack+0x3475>
    452c:	ce 01       	movw	r24, r28
    452e:	8f 54       	subi	r24, 0x4F	; 79
    4530:	9f 4f       	sbci	r25, 0xFF	; 255
    4532:	20 e9       	ldi	r18, 0x90	; 144
    4534:	31 e0       	ldi	r19, 0x01	; 1
    4536:	fc 01       	movw	r30, r24
    4538:	31 83       	std	Z+1, r19	; 0x01
    453a:	20 83       	st	Z, r18
    453c:	ce 01       	movw	r24, r28
    453e:	8f 54       	subi	r24, 0x4F	; 79
    4540:	9f 4f       	sbci	r25, 0xFF	; 255
    4542:	fc 01       	movw	r30, r24
    4544:	80 81       	ld	r24, Z
    4546:	91 81       	ldd	r25, Z+1	; 0x01
    4548:	01 97       	sbiw	r24, 0x01	; 1
    454a:	f1 f7       	brne	.-4      	; 0x4548 <__stack+0x3449>
    454c:	9e 01       	movw	r18, r28
    454e:	2f 54       	subi	r18, 0x4F	; 79
    4550:	3f 4f       	sbci	r19, 0xFF	; 255
    4552:	f9 01       	movw	r30, r18
    4554:	91 83       	std	Z+1, r25	; 0x01
    4556:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4558:	ce 01       	movw	r24, r28
    455a:	81 55       	subi	r24, 0x51	; 81
    455c:	9f 4f       	sbci	r25, 0xFF	; 255
    455e:	9e 01       	movw	r18, r28
    4560:	21 55       	subi	r18, 0x51	; 81
    4562:	3f 4f       	sbci	r19, 0xFF	; 255
    4564:	f9 01       	movw	r30, r18
    4566:	20 81       	ld	r18, Z
    4568:	31 81       	ldd	r19, Z+1	; 0x01
    456a:	21 50       	subi	r18, 0x01	; 1
    456c:	31 09       	sbc	r19, r1
    456e:	fc 01       	movw	r30, r24
    4570:	31 83       	std	Z+1, r19	; 0x01
    4572:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4574:	ce 01       	movw	r24, r28
    4576:	81 55       	subi	r24, 0x51	; 81
    4578:	9f 4f       	sbci	r25, 0xFF	; 255
    457a:	fc 01       	movw	r30, r24
    457c:	80 81       	ld	r24, Z
    457e:	91 81       	ldd	r25, Z+1	; 0x01
    4580:	89 2b       	or	r24, r25
    4582:	a1 f6       	brne	.-88     	; 0x452c <__stack+0x342d>
    4584:	2c c0       	rjmp	.+88     	; 0x45de <__stack+0x34df>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4586:	8e 01       	movw	r16, r28
    4588:	01 55       	subi	r16, 0x51	; 81
    458a:	1f 4f       	sbci	r17, 0xFF	; 255
    458c:	ce 01       	movw	r24, r28
    458e:	85 55       	subi	r24, 0x55	; 85
    4590:	9f 4f       	sbci	r25, 0xFF	; 255
    4592:	fc 01       	movw	r30, r24
    4594:	60 81       	ld	r22, Z
    4596:	71 81       	ldd	r23, Z+1	; 0x01
    4598:	82 81       	ldd	r24, Z+2	; 0x02
    459a:	93 81       	ldd	r25, Z+3	; 0x03
    459c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    45a0:	dc 01       	movw	r26, r24
    45a2:	cb 01       	movw	r24, r22
    45a4:	f8 01       	movw	r30, r16
    45a6:	91 83       	std	Z+1, r25	; 0x01
    45a8:	80 83       	st	Z, r24
    45aa:	ce 01       	movw	r24, r28
    45ac:	8d 54       	subi	r24, 0x4D	; 77
    45ae:	9f 4f       	sbci	r25, 0xFF	; 255
    45b0:	9e 01       	movw	r18, r28
    45b2:	21 55       	subi	r18, 0x51	; 81
    45b4:	3f 4f       	sbci	r19, 0xFF	; 255
    45b6:	f9 01       	movw	r30, r18
    45b8:	20 81       	ld	r18, Z
    45ba:	31 81       	ldd	r19, Z+1	; 0x01
    45bc:	fc 01       	movw	r30, r24
    45be:	31 83       	std	Z+1, r19	; 0x01
    45c0:	20 83       	st	Z, r18
    45c2:	ce 01       	movw	r24, r28
    45c4:	8d 54       	subi	r24, 0x4D	; 77
    45c6:	9f 4f       	sbci	r25, 0xFF	; 255
    45c8:	fc 01       	movw	r30, r24
    45ca:	80 81       	ld	r24, Z
    45cc:	91 81       	ldd	r25, Z+1	; 0x01
    45ce:	01 97       	sbiw	r24, 0x01	; 1
    45d0:	f1 f7       	brne	.-4      	; 0x45ce <__stack+0x34cf>
    45d2:	9e 01       	movw	r18, r28
    45d4:	2d 54       	subi	r18, 0x4D	; 77
    45d6:	3f 4f       	sbci	r19, 0xFF	; 255
    45d8:	f9 01       	movw	r30, r18
    45da:	91 83       	std	Z+1, r25	; 0x01
    45dc:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F580 T80\n");
    45de:	8f ea       	ldi	r24, 0xAF	; 175
    45e0:	92 e0       	ldi	r25, 0x02	; 2
    45e2:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    45e6:	9e 01       	movw	r18, r28
    45e8:	23 56       	subi	r18, 0x63	; 99
    45ea:	3f 4f       	sbci	r19, 0xFF	; 255
    45ec:	80 e0       	ldi	r24, 0x00	; 0
    45ee:	90 e0       	ldi	r25, 0x00	; 0
    45f0:	a6 e1       	ldi	r26, 0x16	; 22
    45f2:	b3 e4       	ldi	r27, 0x43	; 67
    45f4:	f9 01       	movw	r30, r18
    45f6:	80 83       	st	Z, r24
    45f8:	91 83       	std	Z+1, r25	; 0x01
    45fa:	a2 83       	std	Z+2, r26	; 0x02
    45fc:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    45fe:	8e 01       	movw	r16, r28
    4600:	0f 55       	subi	r16, 0x5F	; 95
    4602:	1f 4f       	sbci	r17, 0xFF	; 255
    4604:	ce 01       	movw	r24, r28
    4606:	83 56       	subi	r24, 0x63	; 99
    4608:	9f 4f       	sbci	r25, 0xFF	; 255
    460a:	20 e0       	ldi	r18, 0x00	; 0
    460c:	30 e0       	ldi	r19, 0x00	; 0
    460e:	4a e7       	ldi	r20, 0x7A	; 122
    4610:	55 e4       	ldi	r21, 0x45	; 69
    4612:	fc 01       	movw	r30, r24
    4614:	60 81       	ld	r22, Z
    4616:	71 81       	ldd	r23, Z+1	; 0x01
    4618:	82 81       	ldd	r24, Z+2	; 0x02
    461a:	93 81       	ldd	r25, Z+3	; 0x03
    461c:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    4620:	dc 01       	movw	r26, r24
    4622:	cb 01       	movw	r24, r22
    4624:	f8 01       	movw	r30, r16
    4626:	80 83       	st	Z, r24
    4628:	91 83       	std	Z+1, r25	; 0x01
    462a:	a2 83       	std	Z+2, r26	; 0x02
    462c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    462e:	ce 01       	movw	r24, r28
    4630:	8f 55       	subi	r24, 0x5F	; 95
    4632:	9f 4f       	sbci	r25, 0xFF	; 255
    4634:	20 e0       	ldi	r18, 0x00	; 0
    4636:	30 e0       	ldi	r19, 0x00	; 0
    4638:	40 e8       	ldi	r20, 0x80	; 128
    463a:	5f e3       	ldi	r21, 0x3F	; 63
    463c:	fc 01       	movw	r30, r24
    463e:	60 81       	ld	r22, Z
    4640:	71 81       	ldd	r23, Z+1	; 0x01
    4642:	82 81       	ldd	r24, Z+2	; 0x02
    4644:	93 81       	ldd	r25, Z+3	; 0x03
    4646:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    464a:	88 23       	and	r24, r24
    464c:	4c f4       	brge	.+18     	; 0x4660 <__stack+0x3561>
		__ticks = 1;
    464e:	ce 01       	movw	r24, r28
    4650:	8b 55       	subi	r24, 0x5B	; 91
    4652:	9f 4f       	sbci	r25, 0xFF	; 255
    4654:	21 e0       	ldi	r18, 0x01	; 1
    4656:	30 e0       	ldi	r19, 0x00	; 0
    4658:	fc 01       	movw	r30, r24
    465a:	31 83       	std	Z+1, r19	; 0x01
    465c:	20 83       	st	Z, r18
    465e:	6d c0       	rjmp	.+218    	; 0x473a <__stack+0x363b>
	else if (__tmp > 65535)
    4660:	ce 01       	movw	r24, r28
    4662:	8f 55       	subi	r24, 0x5F	; 95
    4664:	9f 4f       	sbci	r25, 0xFF	; 255
    4666:	20 e0       	ldi	r18, 0x00	; 0
    4668:	3f ef       	ldi	r19, 0xFF	; 255
    466a:	4f e7       	ldi	r20, 0x7F	; 127
    466c:	57 e4       	ldi	r21, 0x47	; 71
    466e:	fc 01       	movw	r30, r24
    4670:	60 81       	ld	r22, Z
    4672:	71 81       	ldd	r23, Z+1	; 0x01
    4674:	82 81       	ldd	r24, Z+2	; 0x02
    4676:	93 81       	ldd	r25, Z+3	; 0x03
    4678:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    467c:	18 16       	cp	r1, r24
    467e:	0c f0       	brlt	.+2      	; 0x4682 <__stack+0x3583>
    4680:	4a c0       	rjmp	.+148    	; 0x4716 <__stack+0x3617>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4682:	ce 01       	movw	r24, r28
    4684:	83 56       	subi	r24, 0x63	; 99
    4686:	9f 4f       	sbci	r25, 0xFF	; 255
    4688:	20 e0       	ldi	r18, 0x00	; 0
    468a:	30 e0       	ldi	r19, 0x00	; 0
    468c:	40 e2       	ldi	r20, 0x20	; 32
    468e:	51 e4       	ldi	r21, 0x41	; 65
    4690:	fc 01       	movw	r30, r24
    4692:	60 81       	ld	r22, Z
    4694:	71 81       	ldd	r23, Z+1	; 0x01
    4696:	82 81       	ldd	r24, Z+2	; 0x02
    4698:	93 81       	ldd	r25, Z+3	; 0x03
    469a:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    469e:	dc 01       	movw	r26, r24
    46a0:	cb 01       	movw	r24, r22
    46a2:	8e 01       	movw	r16, r28
    46a4:	0b 55       	subi	r16, 0x5B	; 91
    46a6:	1f 4f       	sbci	r17, 0xFF	; 255
    46a8:	bc 01       	movw	r22, r24
    46aa:	cd 01       	movw	r24, r26
    46ac:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    46b0:	dc 01       	movw	r26, r24
    46b2:	cb 01       	movw	r24, r22
    46b4:	f8 01       	movw	r30, r16
    46b6:	91 83       	std	Z+1, r25	; 0x01
    46b8:	80 83       	st	Z, r24
    46ba:	24 c0       	rjmp	.+72     	; 0x4704 <__stack+0x3605>
    46bc:	ce 01       	movw	r24, r28
    46be:	89 55       	subi	r24, 0x59	; 89
    46c0:	9f 4f       	sbci	r25, 0xFF	; 255
    46c2:	20 e9       	ldi	r18, 0x90	; 144
    46c4:	31 e0       	ldi	r19, 0x01	; 1
    46c6:	fc 01       	movw	r30, r24
    46c8:	31 83       	std	Z+1, r19	; 0x01
    46ca:	20 83       	st	Z, r18
    46cc:	ce 01       	movw	r24, r28
    46ce:	89 55       	subi	r24, 0x59	; 89
    46d0:	9f 4f       	sbci	r25, 0xFF	; 255
    46d2:	fc 01       	movw	r30, r24
    46d4:	80 81       	ld	r24, Z
    46d6:	91 81       	ldd	r25, Z+1	; 0x01
    46d8:	01 97       	sbiw	r24, 0x01	; 1
    46da:	f1 f7       	brne	.-4      	; 0x46d8 <__stack+0x35d9>
    46dc:	9e 01       	movw	r18, r28
    46de:	29 55       	subi	r18, 0x59	; 89
    46e0:	3f 4f       	sbci	r19, 0xFF	; 255
    46e2:	f9 01       	movw	r30, r18
    46e4:	91 83       	std	Z+1, r25	; 0x01
    46e6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    46e8:	ce 01       	movw	r24, r28
    46ea:	8b 55       	subi	r24, 0x5B	; 91
    46ec:	9f 4f       	sbci	r25, 0xFF	; 255
    46ee:	9e 01       	movw	r18, r28
    46f0:	2b 55       	subi	r18, 0x5B	; 91
    46f2:	3f 4f       	sbci	r19, 0xFF	; 255
    46f4:	f9 01       	movw	r30, r18
    46f6:	20 81       	ld	r18, Z
    46f8:	31 81       	ldd	r19, Z+1	; 0x01
    46fa:	21 50       	subi	r18, 0x01	; 1
    46fc:	31 09       	sbc	r19, r1
    46fe:	fc 01       	movw	r30, r24
    4700:	31 83       	std	Z+1, r19	; 0x01
    4702:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4704:	ce 01       	movw	r24, r28
    4706:	8b 55       	subi	r24, 0x5B	; 91
    4708:	9f 4f       	sbci	r25, 0xFF	; 255
    470a:	fc 01       	movw	r30, r24
    470c:	80 81       	ld	r24, Z
    470e:	91 81       	ldd	r25, Z+1	; 0x01
    4710:	89 2b       	or	r24, r25
    4712:	a1 f6       	brne	.-88     	; 0x46bc <__stack+0x35bd>
    4714:	2c c0       	rjmp	.+88     	; 0x476e <__stack+0x366f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4716:	8e 01       	movw	r16, r28
    4718:	0b 55       	subi	r16, 0x5B	; 91
    471a:	1f 4f       	sbci	r17, 0xFF	; 255
    471c:	ce 01       	movw	r24, r28
    471e:	8f 55       	subi	r24, 0x5F	; 95
    4720:	9f 4f       	sbci	r25, 0xFF	; 255
    4722:	fc 01       	movw	r30, r24
    4724:	60 81       	ld	r22, Z
    4726:	71 81       	ldd	r23, Z+1	; 0x01
    4728:	82 81       	ldd	r24, Z+2	; 0x02
    472a:	93 81       	ldd	r25, Z+3	; 0x03
    472c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    4730:	dc 01       	movw	r26, r24
    4732:	cb 01       	movw	r24, r22
    4734:	f8 01       	movw	r30, r16
    4736:	91 83       	std	Z+1, r25	; 0x01
    4738:	80 83       	st	Z, r24
    473a:	ce 01       	movw	r24, r28
    473c:	87 55       	subi	r24, 0x57	; 87
    473e:	9f 4f       	sbci	r25, 0xFF	; 255
    4740:	9e 01       	movw	r18, r28
    4742:	2b 55       	subi	r18, 0x5B	; 91
    4744:	3f 4f       	sbci	r19, 0xFF	; 255
    4746:	f9 01       	movw	r30, r18
    4748:	20 81       	ld	r18, Z
    474a:	31 81       	ldd	r19, Z+1	; 0x01
    474c:	fc 01       	movw	r30, r24
    474e:	31 83       	std	Z+1, r19	; 0x01
    4750:	20 83       	st	Z, r18
    4752:	ce 01       	movw	r24, r28
    4754:	87 55       	subi	r24, 0x57	; 87
    4756:	9f 4f       	sbci	r25, 0xFF	; 255
    4758:	fc 01       	movw	r30, r24
    475a:	80 81       	ld	r24, Z
    475c:	91 81       	ldd	r25, Z+1	; 0x01
    475e:	01 97       	sbiw	r24, 0x01	; 1
    4760:	f1 f7       	brne	.-4      	; 0x475e <__stack+0x365f>
    4762:	9e 01       	movw	r18, r28
    4764:	27 55       	subi	r18, 0x57	; 87
    4766:	3f 4f       	sbci	r19, 0xFF	; 255
    4768:	f9 01       	movw	r30, r18
    476a:	91 83       	std	Z+1, r25	; 0x01
    476c:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F480 T80\n");
    476e:	8d e2       	ldi	r24, 0x2D	; 45
    4770:	92 e0       	ldi	r25, 0x02	; 2
    4772:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
	//_delay_ms(500);
}
    4776:	00 00       	nop
    4778:	c0 5d       	subi	r28, 0xD0	; 208
    477a:	dd 4f       	sbci	r29, 0xFD	; 253
    477c:	0f b6       	in	r0, 0x3f	; 63
    477e:	f8 94       	cli
    4780:	de bf       	out	0x3e, r29	; 62
    4782:	0f be       	out	0x3f, r0	; 63
    4784:	cd bf       	out	0x3d, r28	; 61
    4786:	df 91       	pop	r29
    4788:	cf 91       	pop	r28
    478a:	1f 91       	pop	r17
    478c:	0f 91       	pop	r16
    478e:	08 95       	ret

00004790 <play_short>:
void play_short()
{
    4790:	0f 93       	push	r16
    4792:	1f 93       	push	r17
    4794:	cf 93       	push	r28
    4796:	df 93       	push	r29
    4798:	cd b7       	in	r28, 0x3d	; 61
    479a:	de b7       	in	r29, 0x3e	; 62
    479c:	c2 56       	subi	r28, 0x62	; 98
    479e:	d1 09       	sbc	r29, r1
    47a0:	0f b6       	in	r0, 0x3f	; 63
    47a2:	f8 94       	cli
    47a4:	de bf       	out	0x3e, r29	; 62
    47a6:	0f be       	out	0x3f, r0	; 63
    47a8:	cd bf       	out	0x3d, r28	; 61
	to_uARM("M2210 F660 T100\n");
    47aa:	87 ec       	ldi	r24, 0xC7	; 199
    47ac:	91 e0       	ldi	r25, 0x01	; 1
    47ae:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    47b2:	80 e0       	ldi	r24, 0x00	; 0
    47b4:	90 e0       	ldi	r25, 0x00	; 0
    47b6:	a6 e1       	ldi	r26, 0x16	; 22
    47b8:	b3 e4       	ldi	r27, 0x43	; 67
    47ba:	89 83       	std	Y+1, r24	; 0x01
    47bc:	9a 83       	std	Y+2, r25	; 0x02
    47be:	ab 83       	std	Y+3, r26	; 0x03
    47c0:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    47c2:	8e 01       	movw	r16, r28
    47c4:	07 5a       	subi	r16, 0xA7	; 167
    47c6:	1f 4f       	sbci	r17, 0xFF	; 255
    47c8:	20 e0       	ldi	r18, 0x00	; 0
    47ca:	30 e0       	ldi	r19, 0x00	; 0
    47cc:	4a e7       	ldi	r20, 0x7A	; 122
    47ce:	55 e4       	ldi	r21, 0x45	; 69
    47d0:	69 81       	ldd	r22, Y+1	; 0x01
    47d2:	7a 81       	ldd	r23, Y+2	; 0x02
    47d4:	8b 81       	ldd	r24, Y+3	; 0x03
    47d6:	9c 81       	ldd	r25, Y+4	; 0x04
    47d8:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    47dc:	dc 01       	movw	r26, r24
    47de:	cb 01       	movw	r24, r22
    47e0:	f8 01       	movw	r30, r16
    47e2:	80 83       	st	Z, r24
    47e4:	91 83       	std	Z+1, r25	; 0x01
    47e6:	a2 83       	std	Z+2, r26	; 0x02
    47e8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    47ea:	ce 01       	movw	r24, r28
    47ec:	87 5a       	subi	r24, 0xA7	; 167
    47ee:	9f 4f       	sbci	r25, 0xFF	; 255
    47f0:	20 e0       	ldi	r18, 0x00	; 0
    47f2:	30 e0       	ldi	r19, 0x00	; 0
    47f4:	40 e8       	ldi	r20, 0x80	; 128
    47f6:	5f e3       	ldi	r21, 0x3F	; 63
    47f8:	fc 01       	movw	r30, r24
    47fa:	60 81       	ld	r22, Z
    47fc:	71 81       	ldd	r23, Z+1	; 0x01
    47fe:	82 81       	ldd	r24, Z+2	; 0x02
    4800:	93 81       	ldd	r25, Z+3	; 0x03
    4802:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    4806:	88 23       	and	r24, r24
    4808:	4c f4       	brge	.+18     	; 0x481c <play_short+0x8c>
		__ticks = 1;
    480a:	ce 01       	movw	r24, r28
    480c:	83 5a       	subi	r24, 0xA3	; 163
    480e:	9f 4f       	sbci	r25, 0xFF	; 255
    4810:	21 e0       	ldi	r18, 0x01	; 1
    4812:	30 e0       	ldi	r19, 0x00	; 0
    4814:	fc 01       	movw	r30, r24
    4816:	31 83       	std	Z+1, r19	; 0x01
    4818:	20 83       	st	Z, r18
    481a:	69 c0       	rjmp	.+210    	; 0x48ee <play_short+0x15e>
	else if (__tmp > 65535)
    481c:	ce 01       	movw	r24, r28
    481e:	87 5a       	subi	r24, 0xA7	; 167
    4820:	9f 4f       	sbci	r25, 0xFF	; 255
    4822:	20 e0       	ldi	r18, 0x00	; 0
    4824:	3f ef       	ldi	r19, 0xFF	; 255
    4826:	4f e7       	ldi	r20, 0x7F	; 127
    4828:	57 e4       	ldi	r21, 0x47	; 71
    482a:	fc 01       	movw	r30, r24
    482c:	60 81       	ld	r22, Z
    482e:	71 81       	ldd	r23, Z+1	; 0x01
    4830:	82 81       	ldd	r24, Z+2	; 0x02
    4832:	93 81       	ldd	r25, Z+3	; 0x03
    4834:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    4838:	18 16       	cp	r1, r24
    483a:	0c f0       	brlt	.+2      	; 0x483e <play_short+0xae>
    483c:	46 c0       	rjmp	.+140    	; 0x48ca <play_short+0x13a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    483e:	20 e0       	ldi	r18, 0x00	; 0
    4840:	30 e0       	ldi	r19, 0x00	; 0
    4842:	40 e2       	ldi	r20, 0x20	; 32
    4844:	51 e4       	ldi	r21, 0x41	; 65
    4846:	69 81       	ldd	r22, Y+1	; 0x01
    4848:	7a 81       	ldd	r23, Y+2	; 0x02
    484a:	8b 81       	ldd	r24, Y+3	; 0x03
    484c:	9c 81       	ldd	r25, Y+4	; 0x04
    484e:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    4852:	dc 01       	movw	r26, r24
    4854:	cb 01       	movw	r24, r22
    4856:	8e 01       	movw	r16, r28
    4858:	03 5a       	subi	r16, 0xA3	; 163
    485a:	1f 4f       	sbci	r17, 0xFF	; 255
    485c:	bc 01       	movw	r22, r24
    485e:	cd 01       	movw	r24, r26
    4860:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    4864:	dc 01       	movw	r26, r24
    4866:	cb 01       	movw	r24, r22
    4868:	f8 01       	movw	r30, r16
    486a:	91 83       	std	Z+1, r25	; 0x01
    486c:	80 83       	st	Z, r24
    486e:	24 c0       	rjmp	.+72     	; 0x48b8 <play_short+0x128>
    4870:	ce 01       	movw	r24, r28
    4872:	81 5a       	subi	r24, 0xA1	; 161
    4874:	9f 4f       	sbci	r25, 0xFF	; 255
    4876:	20 e9       	ldi	r18, 0x90	; 144
    4878:	31 e0       	ldi	r19, 0x01	; 1
    487a:	fc 01       	movw	r30, r24
    487c:	31 83       	std	Z+1, r19	; 0x01
    487e:	20 83       	st	Z, r18
    4880:	ce 01       	movw	r24, r28
    4882:	81 5a       	subi	r24, 0xA1	; 161
    4884:	9f 4f       	sbci	r25, 0xFF	; 255
    4886:	fc 01       	movw	r30, r24
    4888:	80 81       	ld	r24, Z
    488a:	91 81       	ldd	r25, Z+1	; 0x01
    488c:	01 97       	sbiw	r24, 0x01	; 1
    488e:	f1 f7       	brne	.-4      	; 0x488c <play_short+0xfc>
    4890:	9e 01       	movw	r18, r28
    4892:	21 5a       	subi	r18, 0xA1	; 161
    4894:	3f 4f       	sbci	r19, 0xFF	; 255
    4896:	f9 01       	movw	r30, r18
    4898:	91 83       	std	Z+1, r25	; 0x01
    489a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    489c:	ce 01       	movw	r24, r28
    489e:	83 5a       	subi	r24, 0xA3	; 163
    48a0:	9f 4f       	sbci	r25, 0xFF	; 255
    48a2:	9e 01       	movw	r18, r28
    48a4:	23 5a       	subi	r18, 0xA3	; 163
    48a6:	3f 4f       	sbci	r19, 0xFF	; 255
    48a8:	f9 01       	movw	r30, r18
    48aa:	20 81       	ld	r18, Z
    48ac:	31 81       	ldd	r19, Z+1	; 0x01
    48ae:	21 50       	subi	r18, 0x01	; 1
    48b0:	31 09       	sbc	r19, r1
    48b2:	fc 01       	movw	r30, r24
    48b4:	31 83       	std	Z+1, r19	; 0x01
    48b6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    48b8:	ce 01       	movw	r24, r28
    48ba:	83 5a       	subi	r24, 0xA3	; 163
    48bc:	9f 4f       	sbci	r25, 0xFF	; 255
    48be:	fc 01       	movw	r30, r24
    48c0:	80 81       	ld	r24, Z
    48c2:	91 81       	ldd	r25, Z+1	; 0x01
    48c4:	89 2b       	or	r24, r25
    48c6:	a1 f6       	brne	.-88     	; 0x4870 <play_short+0xe0>
    48c8:	2c c0       	rjmp	.+88     	; 0x4922 <play_short+0x192>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    48ca:	8e 01       	movw	r16, r28
    48cc:	03 5a       	subi	r16, 0xA3	; 163
    48ce:	1f 4f       	sbci	r17, 0xFF	; 255
    48d0:	ce 01       	movw	r24, r28
    48d2:	87 5a       	subi	r24, 0xA7	; 167
    48d4:	9f 4f       	sbci	r25, 0xFF	; 255
    48d6:	fc 01       	movw	r30, r24
    48d8:	60 81       	ld	r22, Z
    48da:	71 81       	ldd	r23, Z+1	; 0x01
    48dc:	82 81       	ldd	r24, Z+2	; 0x02
    48de:	93 81       	ldd	r25, Z+3	; 0x03
    48e0:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    48e4:	dc 01       	movw	r26, r24
    48e6:	cb 01       	movw	r24, r22
    48e8:	f8 01       	movw	r30, r16
    48ea:	91 83       	std	Z+1, r25	; 0x01
    48ec:	80 83       	st	Z, r24
    48ee:	ce 01       	movw	r24, r28
    48f0:	8f 59       	subi	r24, 0x9F	; 159
    48f2:	9f 4f       	sbci	r25, 0xFF	; 255
    48f4:	9e 01       	movw	r18, r28
    48f6:	23 5a       	subi	r18, 0xA3	; 163
    48f8:	3f 4f       	sbci	r19, 0xFF	; 255
    48fa:	f9 01       	movw	r30, r18
    48fc:	20 81       	ld	r18, Z
    48fe:	31 81       	ldd	r19, Z+1	; 0x01
    4900:	fc 01       	movw	r30, r24
    4902:	31 83       	std	Z+1, r19	; 0x01
    4904:	20 83       	st	Z, r18
    4906:	ce 01       	movw	r24, r28
    4908:	8f 59       	subi	r24, 0x9F	; 159
    490a:	9f 4f       	sbci	r25, 0xFF	; 255
    490c:	fc 01       	movw	r30, r24
    490e:	80 81       	ld	r24, Z
    4910:	91 81       	ldd	r25, Z+1	; 0x01
    4912:	01 97       	sbiw	r24, 0x01	; 1
    4914:	f1 f7       	brne	.-4      	; 0x4912 <play_short+0x182>
    4916:	9e 01       	movw	r18, r28
    4918:	2f 59       	subi	r18, 0x9F	; 159
    491a:	3f 4f       	sbci	r19, 0xFF	; 255
    491c:	f9 01       	movw	r30, r18
    491e:	91 83       	std	Z+1, r25	; 0x01
    4920:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F660 T100\n");
    4922:	87 ec       	ldi	r24, 0xC7	; 199
    4924:	91 e0       	ldi	r25, 0x01	; 1
    4926:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    492a:	80 e0       	ldi	r24, 0x00	; 0
    492c:	90 e0       	ldi	r25, 0x00	; 0
    492e:	a6 e9       	ldi	r26, 0x96	; 150
    4930:	b3 e4       	ldi	r27, 0x43	; 67
    4932:	8d 83       	std	Y+5, r24	; 0x05
    4934:	9e 83       	std	Y+6, r25	; 0x06
    4936:	af 83       	std	Y+7, r26	; 0x07
    4938:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    493a:	8e 01       	movw	r16, r28
    493c:	01 5b       	subi	r16, 0xB1	; 177
    493e:	1f 4f       	sbci	r17, 0xFF	; 255
    4940:	20 e0       	ldi	r18, 0x00	; 0
    4942:	30 e0       	ldi	r19, 0x00	; 0
    4944:	4a e7       	ldi	r20, 0x7A	; 122
    4946:	55 e4       	ldi	r21, 0x45	; 69
    4948:	6d 81       	ldd	r22, Y+5	; 0x05
    494a:	7e 81       	ldd	r23, Y+6	; 0x06
    494c:	8f 81       	ldd	r24, Y+7	; 0x07
    494e:	98 85       	ldd	r25, Y+8	; 0x08
    4950:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    4954:	dc 01       	movw	r26, r24
    4956:	cb 01       	movw	r24, r22
    4958:	f8 01       	movw	r30, r16
    495a:	80 83       	st	Z, r24
    495c:	91 83       	std	Z+1, r25	; 0x01
    495e:	a2 83       	std	Z+2, r26	; 0x02
    4960:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4962:	ce 01       	movw	r24, r28
    4964:	81 5b       	subi	r24, 0xB1	; 177
    4966:	9f 4f       	sbci	r25, 0xFF	; 255
    4968:	20 e0       	ldi	r18, 0x00	; 0
    496a:	30 e0       	ldi	r19, 0x00	; 0
    496c:	40 e8       	ldi	r20, 0x80	; 128
    496e:	5f e3       	ldi	r21, 0x3F	; 63
    4970:	fc 01       	movw	r30, r24
    4972:	60 81       	ld	r22, Z
    4974:	71 81       	ldd	r23, Z+1	; 0x01
    4976:	82 81       	ldd	r24, Z+2	; 0x02
    4978:	93 81       	ldd	r25, Z+3	; 0x03
    497a:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    497e:	88 23       	and	r24, r24
    4980:	4c f4       	brge	.+18     	; 0x4994 <play_short+0x204>
		__ticks = 1;
    4982:	ce 01       	movw	r24, r28
    4984:	8d 5a       	subi	r24, 0xAD	; 173
    4986:	9f 4f       	sbci	r25, 0xFF	; 255
    4988:	21 e0       	ldi	r18, 0x01	; 1
    498a:	30 e0       	ldi	r19, 0x00	; 0
    498c:	fc 01       	movw	r30, r24
    498e:	31 83       	std	Z+1, r19	; 0x01
    4990:	20 83       	st	Z, r18
    4992:	69 c0       	rjmp	.+210    	; 0x4a66 <play_short+0x2d6>
	else if (__tmp > 65535)
    4994:	ce 01       	movw	r24, r28
    4996:	81 5b       	subi	r24, 0xB1	; 177
    4998:	9f 4f       	sbci	r25, 0xFF	; 255
    499a:	20 e0       	ldi	r18, 0x00	; 0
    499c:	3f ef       	ldi	r19, 0xFF	; 255
    499e:	4f e7       	ldi	r20, 0x7F	; 127
    49a0:	57 e4       	ldi	r21, 0x47	; 71
    49a2:	fc 01       	movw	r30, r24
    49a4:	60 81       	ld	r22, Z
    49a6:	71 81       	ldd	r23, Z+1	; 0x01
    49a8:	82 81       	ldd	r24, Z+2	; 0x02
    49aa:	93 81       	ldd	r25, Z+3	; 0x03
    49ac:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    49b0:	18 16       	cp	r1, r24
    49b2:	0c f0       	brlt	.+2      	; 0x49b6 <play_short+0x226>
    49b4:	46 c0       	rjmp	.+140    	; 0x4a42 <play_short+0x2b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    49b6:	20 e0       	ldi	r18, 0x00	; 0
    49b8:	30 e0       	ldi	r19, 0x00	; 0
    49ba:	40 e2       	ldi	r20, 0x20	; 32
    49bc:	51 e4       	ldi	r21, 0x41	; 65
    49be:	6d 81       	ldd	r22, Y+5	; 0x05
    49c0:	7e 81       	ldd	r23, Y+6	; 0x06
    49c2:	8f 81       	ldd	r24, Y+7	; 0x07
    49c4:	98 85       	ldd	r25, Y+8	; 0x08
    49c6:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    49ca:	dc 01       	movw	r26, r24
    49cc:	cb 01       	movw	r24, r22
    49ce:	8e 01       	movw	r16, r28
    49d0:	0d 5a       	subi	r16, 0xAD	; 173
    49d2:	1f 4f       	sbci	r17, 0xFF	; 255
    49d4:	bc 01       	movw	r22, r24
    49d6:	cd 01       	movw	r24, r26
    49d8:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    49dc:	dc 01       	movw	r26, r24
    49de:	cb 01       	movw	r24, r22
    49e0:	f8 01       	movw	r30, r16
    49e2:	91 83       	std	Z+1, r25	; 0x01
    49e4:	80 83       	st	Z, r24
    49e6:	24 c0       	rjmp	.+72     	; 0x4a30 <play_short+0x2a0>
    49e8:	ce 01       	movw	r24, r28
    49ea:	8b 5a       	subi	r24, 0xAB	; 171
    49ec:	9f 4f       	sbci	r25, 0xFF	; 255
    49ee:	20 e9       	ldi	r18, 0x90	; 144
    49f0:	31 e0       	ldi	r19, 0x01	; 1
    49f2:	fc 01       	movw	r30, r24
    49f4:	31 83       	std	Z+1, r19	; 0x01
    49f6:	20 83       	st	Z, r18
    49f8:	ce 01       	movw	r24, r28
    49fa:	8b 5a       	subi	r24, 0xAB	; 171
    49fc:	9f 4f       	sbci	r25, 0xFF	; 255
    49fe:	fc 01       	movw	r30, r24
    4a00:	80 81       	ld	r24, Z
    4a02:	91 81       	ldd	r25, Z+1	; 0x01
    4a04:	01 97       	sbiw	r24, 0x01	; 1
    4a06:	f1 f7       	brne	.-4      	; 0x4a04 <play_short+0x274>
    4a08:	9e 01       	movw	r18, r28
    4a0a:	2b 5a       	subi	r18, 0xAB	; 171
    4a0c:	3f 4f       	sbci	r19, 0xFF	; 255
    4a0e:	f9 01       	movw	r30, r18
    4a10:	91 83       	std	Z+1, r25	; 0x01
    4a12:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4a14:	ce 01       	movw	r24, r28
    4a16:	8d 5a       	subi	r24, 0xAD	; 173
    4a18:	9f 4f       	sbci	r25, 0xFF	; 255
    4a1a:	9e 01       	movw	r18, r28
    4a1c:	2d 5a       	subi	r18, 0xAD	; 173
    4a1e:	3f 4f       	sbci	r19, 0xFF	; 255
    4a20:	f9 01       	movw	r30, r18
    4a22:	20 81       	ld	r18, Z
    4a24:	31 81       	ldd	r19, Z+1	; 0x01
    4a26:	21 50       	subi	r18, 0x01	; 1
    4a28:	31 09       	sbc	r19, r1
    4a2a:	fc 01       	movw	r30, r24
    4a2c:	31 83       	std	Z+1, r19	; 0x01
    4a2e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4a30:	ce 01       	movw	r24, r28
    4a32:	8d 5a       	subi	r24, 0xAD	; 173
    4a34:	9f 4f       	sbci	r25, 0xFF	; 255
    4a36:	fc 01       	movw	r30, r24
    4a38:	80 81       	ld	r24, Z
    4a3a:	91 81       	ldd	r25, Z+1	; 0x01
    4a3c:	89 2b       	or	r24, r25
    4a3e:	a1 f6       	brne	.-88     	; 0x49e8 <play_short+0x258>
    4a40:	2c c0       	rjmp	.+88     	; 0x4a9a <play_short+0x30a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4a42:	8e 01       	movw	r16, r28
    4a44:	0d 5a       	subi	r16, 0xAD	; 173
    4a46:	1f 4f       	sbci	r17, 0xFF	; 255
    4a48:	ce 01       	movw	r24, r28
    4a4a:	81 5b       	subi	r24, 0xB1	; 177
    4a4c:	9f 4f       	sbci	r25, 0xFF	; 255
    4a4e:	fc 01       	movw	r30, r24
    4a50:	60 81       	ld	r22, Z
    4a52:	71 81       	ldd	r23, Z+1	; 0x01
    4a54:	82 81       	ldd	r24, Z+2	; 0x02
    4a56:	93 81       	ldd	r25, Z+3	; 0x03
    4a58:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    4a5c:	dc 01       	movw	r26, r24
    4a5e:	cb 01       	movw	r24, r22
    4a60:	f8 01       	movw	r30, r16
    4a62:	91 83       	std	Z+1, r25	; 0x01
    4a64:	80 83       	st	Z, r24
    4a66:	ce 01       	movw	r24, r28
    4a68:	89 5a       	subi	r24, 0xA9	; 169
    4a6a:	9f 4f       	sbci	r25, 0xFF	; 255
    4a6c:	9e 01       	movw	r18, r28
    4a6e:	2d 5a       	subi	r18, 0xAD	; 173
    4a70:	3f 4f       	sbci	r19, 0xFF	; 255
    4a72:	f9 01       	movw	r30, r18
    4a74:	20 81       	ld	r18, Z
    4a76:	31 81       	ldd	r19, Z+1	; 0x01
    4a78:	fc 01       	movw	r30, r24
    4a7a:	31 83       	std	Z+1, r19	; 0x01
    4a7c:	20 83       	st	Z, r18
    4a7e:	ce 01       	movw	r24, r28
    4a80:	89 5a       	subi	r24, 0xA9	; 169
    4a82:	9f 4f       	sbci	r25, 0xFF	; 255
    4a84:	fc 01       	movw	r30, r24
    4a86:	80 81       	ld	r24, Z
    4a88:	91 81       	ldd	r25, Z+1	; 0x01
    4a8a:	01 97       	sbiw	r24, 0x01	; 1
    4a8c:	f1 f7       	brne	.-4      	; 0x4a8a <play_short+0x2fa>
    4a8e:	9e 01       	movw	r18, r28
    4a90:	29 5a       	subi	r18, 0xA9	; 169
    4a92:	3f 4f       	sbci	r19, 0xFF	; 255
    4a94:	f9 01       	movw	r30, r18
    4a96:	91 83       	std	Z+1, r25	; 0x01
    4a98:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F660 T100\n");
    4a9a:	87 ec       	ldi	r24, 0xC7	; 199
    4a9c:	91 e0       	ldi	r25, 0x01	; 1
    4a9e:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    4aa2:	80 e0       	ldi	r24, 0x00	; 0
    4aa4:	90 e0       	ldi	r25, 0x00	; 0
    4aa6:	a6 e9       	ldi	r26, 0x96	; 150
    4aa8:	b3 e4       	ldi	r27, 0x43	; 67
    4aaa:	89 87       	std	Y+9, r24	; 0x09
    4aac:	9a 87       	std	Y+10, r25	; 0x0a
    4aae:	ab 87       	std	Y+11, r26	; 0x0b
    4ab0:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4ab2:	8e 01       	movw	r16, r28
    4ab4:	0b 5b       	subi	r16, 0xBB	; 187
    4ab6:	1f 4f       	sbci	r17, 0xFF	; 255
    4ab8:	20 e0       	ldi	r18, 0x00	; 0
    4aba:	30 e0       	ldi	r19, 0x00	; 0
    4abc:	4a e7       	ldi	r20, 0x7A	; 122
    4abe:	55 e4       	ldi	r21, 0x45	; 69
    4ac0:	69 85       	ldd	r22, Y+9	; 0x09
    4ac2:	7a 85       	ldd	r23, Y+10	; 0x0a
    4ac4:	8b 85       	ldd	r24, Y+11	; 0x0b
    4ac6:	9c 85       	ldd	r25, Y+12	; 0x0c
    4ac8:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    4acc:	dc 01       	movw	r26, r24
    4ace:	cb 01       	movw	r24, r22
    4ad0:	f8 01       	movw	r30, r16
    4ad2:	80 83       	st	Z, r24
    4ad4:	91 83       	std	Z+1, r25	; 0x01
    4ad6:	a2 83       	std	Z+2, r26	; 0x02
    4ad8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4ada:	ce 01       	movw	r24, r28
    4adc:	8b 5b       	subi	r24, 0xBB	; 187
    4ade:	9f 4f       	sbci	r25, 0xFF	; 255
    4ae0:	20 e0       	ldi	r18, 0x00	; 0
    4ae2:	30 e0       	ldi	r19, 0x00	; 0
    4ae4:	40 e8       	ldi	r20, 0x80	; 128
    4ae6:	5f e3       	ldi	r21, 0x3F	; 63
    4ae8:	fc 01       	movw	r30, r24
    4aea:	60 81       	ld	r22, Z
    4aec:	71 81       	ldd	r23, Z+1	; 0x01
    4aee:	82 81       	ldd	r24, Z+2	; 0x02
    4af0:	93 81       	ldd	r25, Z+3	; 0x03
    4af2:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    4af6:	88 23       	and	r24, r24
    4af8:	4c f4       	brge	.+18     	; 0x4b0c <play_short+0x37c>
		__ticks = 1;
    4afa:	ce 01       	movw	r24, r28
    4afc:	87 5b       	subi	r24, 0xB7	; 183
    4afe:	9f 4f       	sbci	r25, 0xFF	; 255
    4b00:	21 e0       	ldi	r18, 0x01	; 1
    4b02:	30 e0       	ldi	r19, 0x00	; 0
    4b04:	fc 01       	movw	r30, r24
    4b06:	31 83       	std	Z+1, r19	; 0x01
    4b08:	20 83       	st	Z, r18
    4b0a:	69 c0       	rjmp	.+210    	; 0x4bde <play_short+0x44e>
	else if (__tmp > 65535)
    4b0c:	ce 01       	movw	r24, r28
    4b0e:	8b 5b       	subi	r24, 0xBB	; 187
    4b10:	9f 4f       	sbci	r25, 0xFF	; 255
    4b12:	20 e0       	ldi	r18, 0x00	; 0
    4b14:	3f ef       	ldi	r19, 0xFF	; 255
    4b16:	4f e7       	ldi	r20, 0x7F	; 127
    4b18:	57 e4       	ldi	r21, 0x47	; 71
    4b1a:	fc 01       	movw	r30, r24
    4b1c:	60 81       	ld	r22, Z
    4b1e:	71 81       	ldd	r23, Z+1	; 0x01
    4b20:	82 81       	ldd	r24, Z+2	; 0x02
    4b22:	93 81       	ldd	r25, Z+3	; 0x03
    4b24:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    4b28:	18 16       	cp	r1, r24
    4b2a:	0c f0       	brlt	.+2      	; 0x4b2e <play_short+0x39e>
    4b2c:	46 c0       	rjmp	.+140    	; 0x4bba <play_short+0x42a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4b2e:	20 e0       	ldi	r18, 0x00	; 0
    4b30:	30 e0       	ldi	r19, 0x00	; 0
    4b32:	40 e2       	ldi	r20, 0x20	; 32
    4b34:	51 e4       	ldi	r21, 0x41	; 65
    4b36:	69 85       	ldd	r22, Y+9	; 0x09
    4b38:	7a 85       	ldd	r23, Y+10	; 0x0a
    4b3a:	8b 85       	ldd	r24, Y+11	; 0x0b
    4b3c:	9c 85       	ldd	r25, Y+12	; 0x0c
    4b3e:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    4b42:	dc 01       	movw	r26, r24
    4b44:	cb 01       	movw	r24, r22
    4b46:	8e 01       	movw	r16, r28
    4b48:	07 5b       	subi	r16, 0xB7	; 183
    4b4a:	1f 4f       	sbci	r17, 0xFF	; 255
    4b4c:	bc 01       	movw	r22, r24
    4b4e:	cd 01       	movw	r24, r26
    4b50:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    4b54:	dc 01       	movw	r26, r24
    4b56:	cb 01       	movw	r24, r22
    4b58:	f8 01       	movw	r30, r16
    4b5a:	91 83       	std	Z+1, r25	; 0x01
    4b5c:	80 83       	st	Z, r24
    4b5e:	24 c0       	rjmp	.+72     	; 0x4ba8 <play_short+0x418>
    4b60:	ce 01       	movw	r24, r28
    4b62:	85 5b       	subi	r24, 0xB5	; 181
    4b64:	9f 4f       	sbci	r25, 0xFF	; 255
    4b66:	20 e9       	ldi	r18, 0x90	; 144
    4b68:	31 e0       	ldi	r19, 0x01	; 1
    4b6a:	fc 01       	movw	r30, r24
    4b6c:	31 83       	std	Z+1, r19	; 0x01
    4b6e:	20 83       	st	Z, r18
    4b70:	ce 01       	movw	r24, r28
    4b72:	85 5b       	subi	r24, 0xB5	; 181
    4b74:	9f 4f       	sbci	r25, 0xFF	; 255
    4b76:	fc 01       	movw	r30, r24
    4b78:	80 81       	ld	r24, Z
    4b7a:	91 81       	ldd	r25, Z+1	; 0x01
    4b7c:	01 97       	sbiw	r24, 0x01	; 1
    4b7e:	f1 f7       	brne	.-4      	; 0x4b7c <play_short+0x3ec>
    4b80:	9e 01       	movw	r18, r28
    4b82:	25 5b       	subi	r18, 0xB5	; 181
    4b84:	3f 4f       	sbci	r19, 0xFF	; 255
    4b86:	f9 01       	movw	r30, r18
    4b88:	91 83       	std	Z+1, r25	; 0x01
    4b8a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4b8c:	ce 01       	movw	r24, r28
    4b8e:	87 5b       	subi	r24, 0xB7	; 183
    4b90:	9f 4f       	sbci	r25, 0xFF	; 255
    4b92:	9e 01       	movw	r18, r28
    4b94:	27 5b       	subi	r18, 0xB7	; 183
    4b96:	3f 4f       	sbci	r19, 0xFF	; 255
    4b98:	f9 01       	movw	r30, r18
    4b9a:	20 81       	ld	r18, Z
    4b9c:	31 81       	ldd	r19, Z+1	; 0x01
    4b9e:	21 50       	subi	r18, 0x01	; 1
    4ba0:	31 09       	sbc	r19, r1
    4ba2:	fc 01       	movw	r30, r24
    4ba4:	31 83       	std	Z+1, r19	; 0x01
    4ba6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4ba8:	ce 01       	movw	r24, r28
    4baa:	87 5b       	subi	r24, 0xB7	; 183
    4bac:	9f 4f       	sbci	r25, 0xFF	; 255
    4bae:	fc 01       	movw	r30, r24
    4bb0:	80 81       	ld	r24, Z
    4bb2:	91 81       	ldd	r25, Z+1	; 0x01
    4bb4:	89 2b       	or	r24, r25
    4bb6:	a1 f6       	brne	.-88     	; 0x4b60 <play_short+0x3d0>
    4bb8:	2c c0       	rjmp	.+88     	; 0x4c12 <play_short+0x482>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4bba:	8e 01       	movw	r16, r28
    4bbc:	07 5b       	subi	r16, 0xB7	; 183
    4bbe:	1f 4f       	sbci	r17, 0xFF	; 255
    4bc0:	ce 01       	movw	r24, r28
    4bc2:	8b 5b       	subi	r24, 0xBB	; 187
    4bc4:	9f 4f       	sbci	r25, 0xFF	; 255
    4bc6:	fc 01       	movw	r30, r24
    4bc8:	60 81       	ld	r22, Z
    4bca:	71 81       	ldd	r23, Z+1	; 0x01
    4bcc:	82 81       	ldd	r24, Z+2	; 0x02
    4bce:	93 81       	ldd	r25, Z+3	; 0x03
    4bd0:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    4bd4:	dc 01       	movw	r26, r24
    4bd6:	cb 01       	movw	r24, r22
    4bd8:	f8 01       	movw	r30, r16
    4bda:	91 83       	std	Z+1, r25	; 0x01
    4bdc:	80 83       	st	Z, r24
    4bde:	ce 01       	movw	r24, r28
    4be0:	83 5b       	subi	r24, 0xB3	; 179
    4be2:	9f 4f       	sbci	r25, 0xFF	; 255
    4be4:	9e 01       	movw	r18, r28
    4be6:	27 5b       	subi	r18, 0xB7	; 183
    4be8:	3f 4f       	sbci	r19, 0xFF	; 255
    4bea:	f9 01       	movw	r30, r18
    4bec:	20 81       	ld	r18, Z
    4bee:	31 81       	ldd	r19, Z+1	; 0x01
    4bf0:	fc 01       	movw	r30, r24
    4bf2:	31 83       	std	Z+1, r19	; 0x01
    4bf4:	20 83       	st	Z, r18
    4bf6:	ce 01       	movw	r24, r28
    4bf8:	83 5b       	subi	r24, 0xB3	; 179
    4bfa:	9f 4f       	sbci	r25, 0xFF	; 255
    4bfc:	fc 01       	movw	r30, r24
    4bfe:	80 81       	ld	r24, Z
    4c00:	91 81       	ldd	r25, Z+1	; 0x01
    4c02:	01 97       	sbiw	r24, 0x01	; 1
    4c04:	f1 f7       	brne	.-4      	; 0x4c02 <play_short+0x472>
    4c06:	9e 01       	movw	r18, r28
    4c08:	23 5b       	subi	r18, 0xB3	; 179
    4c0a:	3f 4f       	sbci	r19, 0xFF	; 255
    4c0c:	f9 01       	movw	r30, r18
    4c0e:	91 83       	std	Z+1, r25	; 0x01
    4c10:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F510 T100\n");
    4c12:	88 ed       	ldi	r24, 0xD8	; 216
    4c14:	91 e0       	ldi	r25, 0x01	; 1
    4c16:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    4c1a:	80 e0       	ldi	r24, 0x00	; 0
    4c1c:	90 e0       	ldi	r25, 0x00	; 0
    4c1e:	a8 ec       	ldi	r26, 0xC8	; 200
    4c20:	b2 e4       	ldi	r27, 0x42	; 66
    4c22:	8d 87       	std	Y+13, r24	; 0x0d
    4c24:	9e 87       	std	Y+14, r25	; 0x0e
    4c26:	af 87       	std	Y+15, r26	; 0x0f
    4c28:	b8 8b       	std	Y+16, r27	; 0x10

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4c2a:	20 e0       	ldi	r18, 0x00	; 0
    4c2c:	30 e0       	ldi	r19, 0x00	; 0
    4c2e:	4a e7       	ldi	r20, 0x7A	; 122
    4c30:	55 e4       	ldi	r21, 0x45	; 69
    4c32:	6d 85       	ldd	r22, Y+13	; 0x0d
    4c34:	7e 85       	ldd	r23, Y+14	; 0x0e
    4c36:	8f 85       	ldd	r24, Y+15	; 0x0f
    4c38:	98 89       	ldd	r25, Y+16	; 0x10
    4c3a:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    4c3e:	dc 01       	movw	r26, r24
    4c40:	cb 01       	movw	r24, r22
    4c42:	8b af       	std	Y+59, r24	; 0x3b
    4c44:	9c af       	std	Y+60, r25	; 0x3c
    4c46:	ad af       	std	Y+61, r26	; 0x3d
    4c48:	be af       	std	Y+62, r27	; 0x3e
	if (__tmp < 1.0)
    4c4a:	20 e0       	ldi	r18, 0x00	; 0
    4c4c:	30 e0       	ldi	r19, 0x00	; 0
    4c4e:	40 e8       	ldi	r20, 0x80	; 128
    4c50:	5f e3       	ldi	r21, 0x3F	; 63
    4c52:	6b ad       	ldd	r22, Y+59	; 0x3b
    4c54:	7c ad       	ldd	r23, Y+60	; 0x3c
    4c56:	8d ad       	ldd	r24, Y+61	; 0x3d
    4c58:	9e ad       	ldd	r25, Y+62	; 0x3e
    4c5a:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    4c5e:	88 23       	and	r24, r24
    4c60:	44 f4       	brge	.+16     	; 0x4c72 <play_short+0x4e2>
		__ticks = 1;
    4c62:	21 e0       	ldi	r18, 0x01	; 1
    4c64:	30 e0       	ldi	r19, 0x00	; 0
    4c66:	ce 01       	movw	r24, r28
    4c68:	cf 96       	adiw	r24, 0x3f	; 63
    4c6a:	fc 01       	movw	r30, r24
    4c6c:	31 83       	std	Z+1, r19	; 0x01
    4c6e:	20 83       	st	Z, r18
    4c70:	5f c0       	rjmp	.+190    	; 0x4d30 <play_short+0x5a0>
	else if (__tmp > 65535)
    4c72:	20 e0       	ldi	r18, 0x00	; 0
    4c74:	3f ef       	ldi	r19, 0xFF	; 255
    4c76:	4f e7       	ldi	r20, 0x7F	; 127
    4c78:	57 e4       	ldi	r21, 0x47	; 71
    4c7a:	6b ad       	ldd	r22, Y+59	; 0x3b
    4c7c:	7c ad       	ldd	r23, Y+60	; 0x3c
    4c7e:	8d ad       	ldd	r24, Y+61	; 0x3d
    4c80:	9e ad       	ldd	r25, Y+62	; 0x3e
    4c82:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    4c86:	18 16       	cp	r1, r24
    4c88:	0c f0       	brlt	.+2      	; 0x4c8c <play_short+0x4fc>
    4c8a:	44 c0       	rjmp	.+136    	; 0x4d14 <play_short+0x584>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4c8c:	20 e0       	ldi	r18, 0x00	; 0
    4c8e:	30 e0       	ldi	r19, 0x00	; 0
    4c90:	40 e2       	ldi	r20, 0x20	; 32
    4c92:	51 e4       	ldi	r21, 0x41	; 65
    4c94:	6d 85       	ldd	r22, Y+13	; 0x0d
    4c96:	7e 85       	ldd	r23, Y+14	; 0x0e
    4c98:	8f 85       	ldd	r24, Y+15	; 0x0f
    4c9a:	98 89       	ldd	r25, Y+16	; 0x10
    4c9c:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    4ca0:	dc 01       	movw	r26, r24
    4ca2:	cb 01       	movw	r24, r22
    4ca4:	bc 01       	movw	r22, r24
    4ca6:	cd 01       	movw	r24, r26
    4ca8:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    4cac:	dc 01       	movw	r26, r24
    4cae:	cb 01       	movw	r24, r22
    4cb0:	9e 01       	movw	r18, r28
    4cb2:	21 5c       	subi	r18, 0xC1	; 193
    4cb4:	3f 4f       	sbci	r19, 0xFF	; 255
    4cb6:	f9 01       	movw	r30, r18
    4cb8:	91 83       	std	Z+1, r25	; 0x01
    4cba:	80 83       	st	Z, r24
    4cbc:	23 c0       	rjmp	.+70     	; 0x4d04 <play_short+0x574>
    4cbe:	ce 01       	movw	r24, r28
    4cc0:	8f 5b       	subi	r24, 0xBF	; 191
    4cc2:	9f 4f       	sbci	r25, 0xFF	; 255
    4cc4:	20 e9       	ldi	r18, 0x90	; 144
    4cc6:	31 e0       	ldi	r19, 0x01	; 1
    4cc8:	fc 01       	movw	r30, r24
    4cca:	31 83       	std	Z+1, r19	; 0x01
    4ccc:	20 83       	st	Z, r18
    4cce:	ce 01       	movw	r24, r28
    4cd0:	8f 5b       	subi	r24, 0xBF	; 191
    4cd2:	9f 4f       	sbci	r25, 0xFF	; 255
    4cd4:	fc 01       	movw	r30, r24
    4cd6:	80 81       	ld	r24, Z
    4cd8:	91 81       	ldd	r25, Z+1	; 0x01
    4cda:	01 97       	sbiw	r24, 0x01	; 1
    4cdc:	f1 f7       	brne	.-4      	; 0x4cda <play_short+0x54a>
    4cde:	9e 01       	movw	r18, r28
    4ce0:	2f 5b       	subi	r18, 0xBF	; 191
    4ce2:	3f 4f       	sbci	r19, 0xFF	; 255
    4ce4:	f9 01       	movw	r30, r18
    4ce6:	91 83       	std	Z+1, r25	; 0x01
    4ce8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4cea:	ce 01       	movw	r24, r28
    4cec:	cf 96       	adiw	r24, 0x3f	; 63
    4cee:	fc 01       	movw	r30, r24
    4cf0:	80 81       	ld	r24, Z
    4cf2:	91 81       	ldd	r25, Z+1	; 0x01
    4cf4:	9c 01       	movw	r18, r24
    4cf6:	21 50       	subi	r18, 0x01	; 1
    4cf8:	31 09       	sbc	r19, r1
    4cfa:	ce 01       	movw	r24, r28
    4cfc:	cf 96       	adiw	r24, 0x3f	; 63
    4cfe:	fc 01       	movw	r30, r24
    4d00:	31 83       	std	Z+1, r19	; 0x01
    4d02:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4d04:	ce 01       	movw	r24, r28
    4d06:	cf 96       	adiw	r24, 0x3f	; 63
    4d08:	fc 01       	movw	r30, r24
    4d0a:	80 81       	ld	r24, Z
    4d0c:	91 81       	ldd	r25, Z+1	; 0x01
    4d0e:	89 2b       	or	r24, r25
    4d10:	b1 f6       	brne	.-84     	; 0x4cbe <play_short+0x52e>
    4d12:	28 c0       	rjmp	.+80     	; 0x4d64 <play_short+0x5d4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4d14:	6b ad       	ldd	r22, Y+59	; 0x3b
    4d16:	7c ad       	ldd	r23, Y+60	; 0x3c
    4d18:	8d ad       	ldd	r24, Y+61	; 0x3d
    4d1a:	9e ad       	ldd	r25, Y+62	; 0x3e
    4d1c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    4d20:	dc 01       	movw	r26, r24
    4d22:	cb 01       	movw	r24, r22
    4d24:	9e 01       	movw	r18, r28
    4d26:	21 5c       	subi	r18, 0xC1	; 193
    4d28:	3f 4f       	sbci	r19, 0xFF	; 255
    4d2a:	f9 01       	movw	r30, r18
    4d2c:	91 83       	std	Z+1, r25	; 0x01
    4d2e:	80 83       	st	Z, r24
    4d30:	ce 01       	movw	r24, r28
    4d32:	8d 5b       	subi	r24, 0xBD	; 189
    4d34:	9f 4f       	sbci	r25, 0xFF	; 255
    4d36:	9e 01       	movw	r18, r28
    4d38:	21 5c       	subi	r18, 0xC1	; 193
    4d3a:	3f 4f       	sbci	r19, 0xFF	; 255
    4d3c:	f9 01       	movw	r30, r18
    4d3e:	20 81       	ld	r18, Z
    4d40:	31 81       	ldd	r19, Z+1	; 0x01
    4d42:	fc 01       	movw	r30, r24
    4d44:	31 83       	std	Z+1, r19	; 0x01
    4d46:	20 83       	st	Z, r18
    4d48:	ce 01       	movw	r24, r28
    4d4a:	8d 5b       	subi	r24, 0xBD	; 189
    4d4c:	9f 4f       	sbci	r25, 0xFF	; 255
    4d4e:	fc 01       	movw	r30, r24
    4d50:	80 81       	ld	r24, Z
    4d52:	91 81       	ldd	r25, Z+1	; 0x01
    4d54:	01 97       	sbiw	r24, 0x01	; 1
    4d56:	f1 f7       	brne	.-4      	; 0x4d54 <play_short+0x5c4>
    4d58:	9e 01       	movw	r18, r28
    4d5a:	2d 5b       	subi	r18, 0xBD	; 189
    4d5c:	3f 4f       	sbci	r19, 0xFF	; 255
    4d5e:	f9 01       	movw	r30, r18
    4d60:	91 83       	std	Z+1, r25	; 0x01
    4d62:	80 83       	st	Z, r24
	_delay_ms(100);
	to_uARM("M2210 F660 T100\n");
    4d64:	87 ec       	ldi	r24, 0xC7	; 199
    4d66:	91 e0       	ldi	r25, 0x01	; 1
    4d68:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    4d6c:	80 e0       	ldi	r24, 0x00	; 0
    4d6e:	90 e0       	ldi	r25, 0x00	; 0
    4d70:	a6 e9       	ldi	r26, 0x96	; 150
    4d72:	b3 e4       	ldi	r27, 0x43	; 67
    4d74:	89 8b       	std	Y+17, r24	; 0x11
    4d76:	9a 8b       	std	Y+18, r25	; 0x12
    4d78:	ab 8b       	std	Y+19, r26	; 0x13
    4d7a:	bc 8b       	std	Y+20, r27	; 0x14

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4d7c:	20 e0       	ldi	r18, 0x00	; 0
    4d7e:	30 e0       	ldi	r19, 0x00	; 0
    4d80:	4a e7       	ldi	r20, 0x7A	; 122
    4d82:	55 e4       	ldi	r21, 0x45	; 69
    4d84:	69 89       	ldd	r22, Y+17	; 0x11
    4d86:	7a 89       	ldd	r23, Y+18	; 0x12
    4d88:	8b 89       	ldd	r24, Y+19	; 0x13
    4d8a:	9c 89       	ldd	r25, Y+20	; 0x14
    4d8c:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    4d90:	dc 01       	movw	r26, r24
    4d92:	cb 01       	movw	r24, r22
    4d94:	89 ab       	std	Y+49, r24	; 0x31
    4d96:	9a ab       	std	Y+50, r25	; 0x32
    4d98:	ab ab       	std	Y+51, r26	; 0x33
    4d9a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4d9c:	20 e0       	ldi	r18, 0x00	; 0
    4d9e:	30 e0       	ldi	r19, 0x00	; 0
    4da0:	40 e8       	ldi	r20, 0x80	; 128
    4da2:	5f e3       	ldi	r21, 0x3F	; 63
    4da4:	69 a9       	ldd	r22, Y+49	; 0x31
    4da6:	7a a9       	ldd	r23, Y+50	; 0x32
    4da8:	8b a9       	ldd	r24, Y+51	; 0x33
    4daa:	9c a9       	ldd	r25, Y+52	; 0x34
    4dac:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    4db0:	88 23       	and	r24, r24
    4db2:	2c f4       	brge	.+10     	; 0x4dbe <play_short+0x62e>
		__ticks = 1;
    4db4:	81 e0       	ldi	r24, 0x01	; 1
    4db6:	90 e0       	ldi	r25, 0x00	; 0
    4db8:	9e ab       	std	Y+54, r25	; 0x36
    4dba:	8d ab       	std	Y+53, r24	; 0x35
    4dbc:	3f c0       	rjmp	.+126    	; 0x4e3c <play_short+0x6ac>
	else if (__tmp > 65535)
    4dbe:	20 e0       	ldi	r18, 0x00	; 0
    4dc0:	3f ef       	ldi	r19, 0xFF	; 255
    4dc2:	4f e7       	ldi	r20, 0x7F	; 127
    4dc4:	57 e4       	ldi	r21, 0x47	; 71
    4dc6:	69 a9       	ldd	r22, Y+49	; 0x31
    4dc8:	7a a9       	ldd	r23, Y+50	; 0x32
    4dca:	8b a9       	ldd	r24, Y+51	; 0x33
    4dcc:	9c a9       	ldd	r25, Y+52	; 0x34
    4dce:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    4dd2:	18 16       	cp	r1, r24
    4dd4:	4c f5       	brge	.+82     	; 0x4e28 <play_short+0x698>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4dd6:	20 e0       	ldi	r18, 0x00	; 0
    4dd8:	30 e0       	ldi	r19, 0x00	; 0
    4dda:	40 e2       	ldi	r20, 0x20	; 32
    4ddc:	51 e4       	ldi	r21, 0x41	; 65
    4dde:	69 89       	ldd	r22, Y+17	; 0x11
    4de0:	7a 89       	ldd	r23, Y+18	; 0x12
    4de2:	8b 89       	ldd	r24, Y+19	; 0x13
    4de4:	9c 89       	ldd	r25, Y+20	; 0x14
    4de6:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    4dea:	dc 01       	movw	r26, r24
    4dec:	cb 01       	movw	r24, r22
    4dee:	bc 01       	movw	r22, r24
    4df0:	cd 01       	movw	r24, r26
    4df2:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    4df6:	dc 01       	movw	r26, r24
    4df8:	cb 01       	movw	r24, r22
    4dfa:	9e ab       	std	Y+54, r25	; 0x36
    4dfc:	8d ab       	std	Y+53, r24	; 0x35
    4dfe:	0f c0       	rjmp	.+30     	; 0x4e1e <play_short+0x68e>
    4e00:	80 e9       	ldi	r24, 0x90	; 144
    4e02:	91 e0       	ldi	r25, 0x01	; 1
    4e04:	98 af       	std	Y+56, r25	; 0x38
    4e06:	8f ab       	std	Y+55, r24	; 0x37
    4e08:	8f a9       	ldd	r24, Y+55	; 0x37
    4e0a:	98 ad       	ldd	r25, Y+56	; 0x38
    4e0c:	01 97       	sbiw	r24, 0x01	; 1
    4e0e:	f1 f7       	brne	.-4      	; 0x4e0c <play_short+0x67c>
    4e10:	98 af       	std	Y+56, r25	; 0x38
    4e12:	8f ab       	std	Y+55, r24	; 0x37
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4e14:	8d a9       	ldd	r24, Y+53	; 0x35
    4e16:	9e a9       	ldd	r25, Y+54	; 0x36
    4e18:	01 97       	sbiw	r24, 0x01	; 1
    4e1a:	9e ab       	std	Y+54, r25	; 0x36
    4e1c:	8d ab       	std	Y+53, r24	; 0x35
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4e1e:	8d a9       	ldd	r24, Y+53	; 0x35
    4e20:	9e a9       	ldd	r25, Y+54	; 0x36
    4e22:	89 2b       	or	r24, r25
    4e24:	69 f7       	brne	.-38     	; 0x4e00 <play_short+0x670>
    4e26:	14 c0       	rjmp	.+40     	; 0x4e50 <play_short+0x6c0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4e28:	69 a9       	ldd	r22, Y+49	; 0x31
    4e2a:	7a a9       	ldd	r23, Y+50	; 0x32
    4e2c:	8b a9       	ldd	r24, Y+51	; 0x33
    4e2e:	9c a9       	ldd	r25, Y+52	; 0x34
    4e30:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    4e34:	dc 01       	movw	r26, r24
    4e36:	cb 01       	movw	r24, r22
    4e38:	9e ab       	std	Y+54, r25	; 0x36
    4e3a:	8d ab       	std	Y+53, r24	; 0x35
    4e3c:	8d a9       	ldd	r24, Y+53	; 0x35
    4e3e:	9e a9       	ldd	r25, Y+54	; 0x36
    4e40:	9a af       	std	Y+58, r25	; 0x3a
    4e42:	89 af       	std	Y+57, r24	; 0x39
    4e44:	89 ad       	ldd	r24, Y+57	; 0x39
    4e46:	9a ad       	ldd	r25, Y+58	; 0x3a
    4e48:	01 97       	sbiw	r24, 0x01	; 1
    4e4a:	f1 f7       	brne	.-4      	; 0x4e48 <play_short+0x6b8>
    4e4c:	9a af       	std	Y+58, r25	; 0x3a
    4e4e:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(300);
	to_uARM("M2210 F770 T100\n");
    4e50:	89 ee       	ldi	r24, 0xE9	; 233
    4e52:	91 e0       	ldi	r25, 0x01	; 1
    4e54:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    4e58:	80 e0       	ldi	r24, 0x00	; 0
    4e5a:	90 e8       	ldi	r25, 0x80	; 128
    4e5c:	a9 e0       	ldi	r26, 0x09	; 9
    4e5e:	b4 e4       	ldi	r27, 0x44	; 68
    4e60:	8d 8b       	std	Y+21, r24	; 0x15
    4e62:	9e 8b       	std	Y+22, r25	; 0x16
    4e64:	af 8b       	std	Y+23, r26	; 0x17
    4e66:	b8 8f       	std	Y+24, r27	; 0x18

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4e68:	20 e0       	ldi	r18, 0x00	; 0
    4e6a:	30 e0       	ldi	r19, 0x00	; 0
    4e6c:	4a e7       	ldi	r20, 0x7A	; 122
    4e6e:	55 e4       	ldi	r21, 0x45	; 69
    4e70:	6d 89       	ldd	r22, Y+21	; 0x15
    4e72:	7e 89       	ldd	r23, Y+22	; 0x16
    4e74:	8f 89       	ldd	r24, Y+23	; 0x17
    4e76:	98 8d       	ldd	r25, Y+24	; 0x18
    4e78:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    4e7c:	dc 01       	movw	r26, r24
    4e7e:	cb 01       	movw	r24, r22
    4e80:	8f a3       	std	Y+39, r24	; 0x27
    4e82:	98 a7       	std	Y+40, r25	; 0x28
    4e84:	a9 a7       	std	Y+41, r26	; 0x29
    4e86:	ba a7       	std	Y+42, r27	; 0x2a
	if (__tmp < 1.0)
    4e88:	20 e0       	ldi	r18, 0x00	; 0
    4e8a:	30 e0       	ldi	r19, 0x00	; 0
    4e8c:	40 e8       	ldi	r20, 0x80	; 128
    4e8e:	5f e3       	ldi	r21, 0x3F	; 63
    4e90:	6f a1       	ldd	r22, Y+39	; 0x27
    4e92:	78 a5       	ldd	r23, Y+40	; 0x28
    4e94:	89 a5       	ldd	r24, Y+41	; 0x29
    4e96:	9a a5       	ldd	r25, Y+42	; 0x2a
    4e98:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    4e9c:	88 23       	and	r24, r24
    4e9e:	2c f4       	brge	.+10     	; 0x4eaa <play_short+0x71a>
		__ticks = 1;
    4ea0:	81 e0       	ldi	r24, 0x01	; 1
    4ea2:	90 e0       	ldi	r25, 0x00	; 0
    4ea4:	9c a7       	std	Y+44, r25	; 0x2c
    4ea6:	8b a7       	std	Y+43, r24	; 0x2b
    4ea8:	3f c0       	rjmp	.+126    	; 0x4f28 <play_short+0x798>
	else if (__tmp > 65535)
    4eaa:	20 e0       	ldi	r18, 0x00	; 0
    4eac:	3f ef       	ldi	r19, 0xFF	; 255
    4eae:	4f e7       	ldi	r20, 0x7F	; 127
    4eb0:	57 e4       	ldi	r21, 0x47	; 71
    4eb2:	6f a1       	ldd	r22, Y+39	; 0x27
    4eb4:	78 a5       	ldd	r23, Y+40	; 0x28
    4eb6:	89 a5       	ldd	r24, Y+41	; 0x29
    4eb8:	9a a5       	ldd	r25, Y+42	; 0x2a
    4eba:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    4ebe:	18 16       	cp	r1, r24
    4ec0:	4c f5       	brge	.+82     	; 0x4f14 <play_short+0x784>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4ec2:	20 e0       	ldi	r18, 0x00	; 0
    4ec4:	30 e0       	ldi	r19, 0x00	; 0
    4ec6:	40 e2       	ldi	r20, 0x20	; 32
    4ec8:	51 e4       	ldi	r21, 0x41	; 65
    4eca:	6d 89       	ldd	r22, Y+21	; 0x15
    4ecc:	7e 89       	ldd	r23, Y+22	; 0x16
    4ece:	8f 89       	ldd	r24, Y+23	; 0x17
    4ed0:	98 8d       	ldd	r25, Y+24	; 0x18
    4ed2:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    4ed6:	dc 01       	movw	r26, r24
    4ed8:	cb 01       	movw	r24, r22
    4eda:	bc 01       	movw	r22, r24
    4edc:	cd 01       	movw	r24, r26
    4ede:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    4ee2:	dc 01       	movw	r26, r24
    4ee4:	cb 01       	movw	r24, r22
    4ee6:	9c a7       	std	Y+44, r25	; 0x2c
    4ee8:	8b a7       	std	Y+43, r24	; 0x2b
    4eea:	0f c0       	rjmp	.+30     	; 0x4f0a <play_short+0x77a>
    4eec:	80 e9       	ldi	r24, 0x90	; 144
    4eee:	91 e0       	ldi	r25, 0x01	; 1
    4ef0:	9e a7       	std	Y+46, r25	; 0x2e
    4ef2:	8d a7       	std	Y+45, r24	; 0x2d
    4ef4:	8d a5       	ldd	r24, Y+45	; 0x2d
    4ef6:	9e a5       	ldd	r25, Y+46	; 0x2e
    4ef8:	01 97       	sbiw	r24, 0x01	; 1
    4efa:	f1 f7       	brne	.-4      	; 0x4ef8 <play_short+0x768>
    4efc:	9e a7       	std	Y+46, r25	; 0x2e
    4efe:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4f00:	8b a5       	ldd	r24, Y+43	; 0x2b
    4f02:	9c a5       	ldd	r25, Y+44	; 0x2c
    4f04:	01 97       	sbiw	r24, 0x01	; 1
    4f06:	9c a7       	std	Y+44, r25	; 0x2c
    4f08:	8b a7       	std	Y+43, r24	; 0x2b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4f0a:	8b a5       	ldd	r24, Y+43	; 0x2b
    4f0c:	9c a5       	ldd	r25, Y+44	; 0x2c
    4f0e:	89 2b       	or	r24, r25
    4f10:	69 f7       	brne	.-38     	; 0x4eec <play_short+0x75c>
    4f12:	14 c0       	rjmp	.+40     	; 0x4f3c <play_short+0x7ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4f14:	6f a1       	ldd	r22, Y+39	; 0x27
    4f16:	78 a5       	ldd	r23, Y+40	; 0x28
    4f18:	89 a5       	ldd	r24, Y+41	; 0x29
    4f1a:	9a a5       	ldd	r25, Y+42	; 0x2a
    4f1c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    4f20:	dc 01       	movw	r26, r24
    4f22:	cb 01       	movw	r24, r22
    4f24:	9c a7       	std	Y+44, r25	; 0x2c
    4f26:	8b a7       	std	Y+43, r24	; 0x2b
    4f28:	8b a5       	ldd	r24, Y+43	; 0x2b
    4f2a:	9c a5       	ldd	r25, Y+44	; 0x2c
    4f2c:	98 ab       	std	Y+48, r25	; 0x30
    4f2e:	8f a7       	std	Y+47, r24	; 0x2f
    4f30:	8f a5       	ldd	r24, Y+47	; 0x2f
    4f32:	98 a9       	ldd	r25, Y+48	; 0x30
    4f34:	01 97       	sbiw	r24, 0x01	; 1
    4f36:	f1 f7       	brne	.-4      	; 0x4f34 <play_short+0x7a4>
    4f38:	98 ab       	std	Y+48, r25	; 0x30
    4f3a:	8f a7       	std	Y+47, r24	; 0x2f
	_delay_ms(550);
	to_uARM("M2210 F380 T100\n");
    4f3c:	8a ef       	ldi	r24, 0xFA	; 250
    4f3e:	91 e0       	ldi	r25, 0x01	; 1
    4f40:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
    4f44:	80 e0       	ldi	r24, 0x00	; 0
    4f46:	90 ec       	ldi	r25, 0xC0	; 192
    4f48:	af e0       	ldi	r26, 0x0F	; 15
    4f4a:	b4 e4       	ldi	r27, 0x44	; 68
    4f4c:	89 8f       	std	Y+25, r24	; 0x19
    4f4e:	9a 8f       	std	Y+26, r25	; 0x1a
    4f50:	ab 8f       	std	Y+27, r26	; 0x1b
    4f52:	bc 8f       	std	Y+28, r27	; 0x1c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4f54:	20 e0       	ldi	r18, 0x00	; 0
    4f56:	30 e0       	ldi	r19, 0x00	; 0
    4f58:	4a e7       	ldi	r20, 0x7A	; 122
    4f5a:	55 e4       	ldi	r21, 0x45	; 69
    4f5c:	69 8d       	ldd	r22, Y+25	; 0x19
    4f5e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4f60:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4f62:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4f64:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    4f68:	dc 01       	movw	r26, r24
    4f6a:	cb 01       	movw	r24, r22
    4f6c:	8d 8f       	std	Y+29, r24	; 0x1d
    4f6e:	9e 8f       	std	Y+30, r25	; 0x1e
    4f70:	af 8f       	std	Y+31, r26	; 0x1f
    4f72:	b8 a3       	std	Y+32, r27	; 0x20
	if (__tmp < 1.0)
    4f74:	20 e0       	ldi	r18, 0x00	; 0
    4f76:	30 e0       	ldi	r19, 0x00	; 0
    4f78:	40 e8       	ldi	r20, 0x80	; 128
    4f7a:	5f e3       	ldi	r21, 0x3F	; 63
    4f7c:	6d 8d       	ldd	r22, Y+29	; 0x1d
    4f7e:	7e 8d       	ldd	r23, Y+30	; 0x1e
    4f80:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4f82:	98 a1       	ldd	r25, Y+32	; 0x20
    4f84:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    4f88:	88 23       	and	r24, r24
    4f8a:	2c f4       	brge	.+10     	; 0x4f96 <play_short+0x806>
		__ticks = 1;
    4f8c:	81 e0       	ldi	r24, 0x01	; 1
    4f8e:	90 e0       	ldi	r25, 0x00	; 0
    4f90:	9a a3       	std	Y+34, r25	; 0x22
    4f92:	89 a3       	std	Y+33, r24	; 0x21
    4f94:	3f c0       	rjmp	.+126    	; 0x5014 <play_short+0x884>
	else if (__tmp > 65535)
    4f96:	20 e0       	ldi	r18, 0x00	; 0
    4f98:	3f ef       	ldi	r19, 0xFF	; 255
    4f9a:	4f e7       	ldi	r20, 0x7F	; 127
    4f9c:	57 e4       	ldi	r21, 0x47	; 71
    4f9e:	6d 8d       	ldd	r22, Y+29	; 0x1d
    4fa0:	7e 8d       	ldd	r23, Y+30	; 0x1e
    4fa2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4fa4:	98 a1       	ldd	r25, Y+32	; 0x20
    4fa6:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    4faa:	18 16       	cp	r1, r24
    4fac:	4c f5       	brge	.+82     	; 0x5000 <play_short+0x870>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4fae:	20 e0       	ldi	r18, 0x00	; 0
    4fb0:	30 e0       	ldi	r19, 0x00	; 0
    4fb2:	40 e2       	ldi	r20, 0x20	; 32
    4fb4:	51 e4       	ldi	r21, 0x41	; 65
    4fb6:	69 8d       	ldd	r22, Y+25	; 0x19
    4fb8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4fba:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4fbc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4fbe:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    4fc2:	dc 01       	movw	r26, r24
    4fc4:	cb 01       	movw	r24, r22
    4fc6:	bc 01       	movw	r22, r24
    4fc8:	cd 01       	movw	r24, r26
    4fca:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    4fce:	dc 01       	movw	r26, r24
    4fd0:	cb 01       	movw	r24, r22
    4fd2:	9a a3       	std	Y+34, r25	; 0x22
    4fd4:	89 a3       	std	Y+33, r24	; 0x21
    4fd6:	0f c0       	rjmp	.+30     	; 0x4ff6 <play_short+0x866>
    4fd8:	80 e9       	ldi	r24, 0x90	; 144
    4fda:	91 e0       	ldi	r25, 0x01	; 1
    4fdc:	9c a3       	std	Y+36, r25	; 0x24
    4fde:	8b a3       	std	Y+35, r24	; 0x23
    4fe0:	8b a1       	ldd	r24, Y+35	; 0x23
    4fe2:	9c a1       	ldd	r25, Y+36	; 0x24
    4fe4:	01 97       	sbiw	r24, 0x01	; 1
    4fe6:	f1 f7       	brne	.-4      	; 0x4fe4 <play_short+0x854>
    4fe8:	9c a3       	std	Y+36, r25	; 0x24
    4fea:	8b a3       	std	Y+35, r24	; 0x23
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4fec:	89 a1       	ldd	r24, Y+33	; 0x21
    4fee:	9a a1       	ldd	r25, Y+34	; 0x22
    4ff0:	01 97       	sbiw	r24, 0x01	; 1
    4ff2:	9a a3       	std	Y+34, r25	; 0x22
    4ff4:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4ff6:	89 a1       	ldd	r24, Y+33	; 0x21
    4ff8:	9a a1       	ldd	r25, Y+34	; 0x22
    4ffa:	89 2b       	or	r24, r25
    4ffc:	69 f7       	brne	.-38     	; 0x4fd8 <play_short+0x848>
	_delay_ms(575);
}
    4ffe:	14 c0       	rjmp	.+40     	; 0x5028 <play_short+0x898>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5000:	6d 8d       	ldd	r22, Y+29	; 0x1d
    5002:	7e 8d       	ldd	r23, Y+30	; 0x1e
    5004:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5006:	98 a1       	ldd	r25, Y+32	; 0x20
    5008:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    500c:	dc 01       	movw	r26, r24
    500e:	cb 01       	movw	r24, r22
    5010:	9a a3       	std	Y+34, r25	; 0x22
    5012:	89 a3       	std	Y+33, r24	; 0x21
    5014:	89 a1       	ldd	r24, Y+33	; 0x21
    5016:	9a a1       	ldd	r25, Y+34	; 0x22
    5018:	9e a3       	std	Y+38, r25	; 0x26
    501a:	8d a3       	std	Y+37, r24	; 0x25
    501c:	8d a1       	ldd	r24, Y+37	; 0x25
    501e:	9e a1       	ldd	r25, Y+38	; 0x26
    5020:	01 97       	sbiw	r24, 0x01	; 1
    5022:	f1 f7       	brne	.-4      	; 0x5020 <play_short+0x890>
    5024:	9e a3       	std	Y+38, r25	; 0x26
    5026:	8d a3       	std	Y+37, r24	; 0x25
    5028:	00 00       	nop
    502a:	ce 59       	subi	r28, 0x9E	; 158
    502c:	df 4f       	sbci	r29, 0xFF	; 255
    502e:	0f b6       	in	r0, 0x3f	; 63
    5030:	f8 94       	cli
    5032:	de bf       	out	0x3e, r29	; 62
    5034:	0f be       	out	0x3f, r0	; 63
    5036:	cd bf       	out	0x3d, r28	; 61
    5038:	df 91       	pop	r29
    503a:	cf 91       	pop	r28
    503c:	1f 91       	pop	r17
    503e:	0f 91       	pop	r16
    5040:	08 95       	ret

00005042 <main>:



int main (void)
{
    5042:	cf 92       	push	r12
    5044:	ef 92       	push	r14
    5046:	0f 93       	push	r16
    5048:	cf 93       	push	r28
    504a:	df 93       	push	r29
    504c:	cd b7       	in	r28, 0x3d	; 61
    504e:	de b7       	in	r29, 0x3e	; 62
    5050:	cc 56       	subi	r28, 0x6C	; 108
    5052:	d1 09       	sbc	r29, r1
    5054:	0f b6       	in	r0, 0x3f	; 63
    5056:	f8 94       	cli
    5058:	de bf       	out	0x3e, r29	; 62
    505a:	0f be       	out	0x3f, r0	; 63
    505c:	cd bf       	out	0x3d, r28	; 61
	unsigned char taster,direction,counter,go_through,neu;
	int recieved_X,recieved_Y;
	unsigned char buffer [30];
	unsigned char return_buffer[30];
	start_up_routine();
    505e:	0e 94 d6 04 	call	0x9ac	; 0x9ac <start_up_routine>
			//
	//} letter;
	*/

	//Note	Frequency (Hz)	
	goto_start();
    5062:	0e 94 9f 04 	call	0x93e	; 0x93e <goto_start>
	to_uARM("M2210 F500 T20\n");
    5066:	8f ec       	ldi	r24, 0xCF	; 207
    5068:	92 e0       	ldi	r25, 0x02	; 2
    506a:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
	clear_lcd();
    506e:	0e 94 26 2e 	call	0x5c4c	; 0x5c4c <clear_lcd>
	wait_1ms(10);
    5072:	6a e0       	ldi	r22, 0x0A	; 10
    5074:	70 e0       	ldi	r23, 0x00	; 0
    5076:	80 e0       	ldi	r24, 0x00	; 0
    5078:	90 e0       	ldi	r25, 0x00	; 0
    507a:	0e 94 ff 2b 	call	0x57fe	; 0x57fe <wait_1ms>
	write_text(0,0,PSTR("        OKE         "));
    507e:	84 e6       	ldi	r24, 0x64	; 100
    5080:	91 e0       	ldi	r25, 0x01	; 1
    5082:	ac 01       	movw	r20, r24
    5084:	60 e0       	ldi	r22, 0x00	; 0
    5086:	80 e0       	ldi	r24, 0x00	; 0
    5088:	0e 94 a9 2c 	call	0x5952	; 0x5952 <write_text>
	write_text(1,0,PSTR("        BY          "));
    508c:	89 e7       	ldi	r24, 0x79	; 121
    508e:	91 e0       	ldi	r25, 0x01	; 1
    5090:	ac 01       	movw	r20, r24
    5092:	60 e0       	ldi	r22, 0x00	; 0
    5094:	81 e0       	ldi	r24, 0x01	; 1
    5096:	0e 94 a9 2c 	call	0x5952	; 0x5952 <write_text>
	write_text(2,0,PSTR("        JAN         "));
    509a:	8e e8       	ldi	r24, 0x8E	; 142
    509c:	91 e0       	ldi	r25, 0x01	; 1
    509e:	ac 01       	movw	r20, r24
    50a0:	60 e0       	ldi	r22, 0x00	; 0
    50a2:	82 e0       	ldi	r24, 0x02	; 2
    50a4:	0e 94 a9 2c 	call	0x5952	; 0x5952 <write_text>
	write_text(3,0,PSTR("       TENDAI       "));
    50a8:	83 ea       	ldi	r24, 0xA3	; 163
    50aa:	91 e0       	ldi	r25, 0x01	; 1
    50ac:	ac 01       	movw	r20, r24
    50ae:	60 e0       	ldi	r22, 0x00	; 0
    50b0:	83 e0       	ldi	r24, 0x03	; 3
    50b2:	0e 94 a9 2c 	call	0x5952	; 0x5952 <write_text>
    50b6:	80 e0       	ldi	r24, 0x00	; 0
    50b8:	90 e4       	ldi	r25, 0x40	; 64
    50ba:	ac e9       	ldi	r26, 0x9C	; 156
    50bc:	b5 e4       	ldi	r27, 0x45	; 69
    50be:	8f 87       	std	Y+15, r24	; 0x0f
    50c0:	98 8b       	std	Y+16, r25	; 0x10
    50c2:	a9 8b       	std	Y+17, r26	; 0x11
    50c4:	ba 8b       	std	Y+18, r27	; 0x12

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    50c6:	20 e0       	ldi	r18, 0x00	; 0
    50c8:	30 e0       	ldi	r19, 0x00	; 0
    50ca:	4a e7       	ldi	r20, 0x7A	; 122
    50cc:	55 e4       	ldi	r21, 0x45	; 69
    50ce:	6f 85       	ldd	r22, Y+15	; 0x0f
    50d0:	78 89       	ldd	r23, Y+16	; 0x10
    50d2:	89 89       	ldd	r24, Y+17	; 0x11
    50d4:	9a 89       	ldd	r25, Y+18	; 0x12
    50d6:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    50da:	dc 01       	movw	r26, r24
    50dc:	cb 01       	movw	r24, r22
    50de:	8b 8b       	std	Y+19, r24	; 0x13
    50e0:	9c 8b       	std	Y+20, r25	; 0x14
    50e2:	ad 8b       	std	Y+21, r26	; 0x15
    50e4:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
    50e6:	20 e0       	ldi	r18, 0x00	; 0
    50e8:	30 e0       	ldi	r19, 0x00	; 0
    50ea:	40 e8       	ldi	r20, 0x80	; 128
    50ec:	5f e3       	ldi	r21, 0x3F	; 63
    50ee:	6b 89       	ldd	r22, Y+19	; 0x13
    50f0:	7c 89       	ldd	r23, Y+20	; 0x14
    50f2:	8d 89       	ldd	r24, Y+21	; 0x15
    50f4:	9e 89       	ldd	r25, Y+22	; 0x16
    50f6:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    50fa:	88 23       	and	r24, r24
    50fc:	2c f4       	brge	.+10     	; 0x5108 <main+0xc6>
		__ticks = 1;
    50fe:	81 e0       	ldi	r24, 0x01	; 1
    5100:	90 e0       	ldi	r25, 0x00	; 0
    5102:	98 8f       	std	Y+24, r25	; 0x18
    5104:	8f 8b       	std	Y+23, r24	; 0x17
    5106:	3f c0       	rjmp	.+126    	; 0x5186 <main+0x144>
	else if (__tmp > 65535)
    5108:	20 e0       	ldi	r18, 0x00	; 0
    510a:	3f ef       	ldi	r19, 0xFF	; 255
    510c:	4f e7       	ldi	r20, 0x7F	; 127
    510e:	57 e4       	ldi	r21, 0x47	; 71
    5110:	6b 89       	ldd	r22, Y+19	; 0x13
    5112:	7c 89       	ldd	r23, Y+20	; 0x14
    5114:	8d 89       	ldd	r24, Y+21	; 0x15
    5116:	9e 89       	ldd	r25, Y+22	; 0x16
    5118:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    511c:	18 16       	cp	r1, r24
    511e:	4c f5       	brge	.+82     	; 0x5172 <main+0x130>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5120:	20 e0       	ldi	r18, 0x00	; 0
    5122:	30 e0       	ldi	r19, 0x00	; 0
    5124:	40 e2       	ldi	r20, 0x20	; 32
    5126:	51 e4       	ldi	r21, 0x41	; 65
    5128:	6f 85       	ldd	r22, Y+15	; 0x0f
    512a:	78 89       	ldd	r23, Y+16	; 0x10
    512c:	89 89       	ldd	r24, Y+17	; 0x11
    512e:	9a 89       	ldd	r25, Y+18	; 0x12
    5130:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    5134:	dc 01       	movw	r26, r24
    5136:	cb 01       	movw	r24, r22
    5138:	bc 01       	movw	r22, r24
    513a:	cd 01       	movw	r24, r26
    513c:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    5140:	dc 01       	movw	r26, r24
    5142:	cb 01       	movw	r24, r22
    5144:	98 8f       	std	Y+24, r25	; 0x18
    5146:	8f 8b       	std	Y+23, r24	; 0x17
    5148:	0f c0       	rjmp	.+30     	; 0x5168 <main+0x126>
    514a:	80 e9       	ldi	r24, 0x90	; 144
    514c:	91 e0       	ldi	r25, 0x01	; 1
    514e:	9a 8f       	std	Y+26, r25	; 0x1a
    5150:	89 8f       	std	Y+25, r24	; 0x19
    5152:	89 8d       	ldd	r24, Y+25	; 0x19
    5154:	9a 8d       	ldd	r25, Y+26	; 0x1a
    5156:	01 97       	sbiw	r24, 0x01	; 1
    5158:	f1 f7       	brne	.-4      	; 0x5156 <main+0x114>
    515a:	9a 8f       	std	Y+26, r25	; 0x1a
    515c:	89 8f       	std	Y+25, r24	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    515e:	8f 89       	ldd	r24, Y+23	; 0x17
    5160:	98 8d       	ldd	r25, Y+24	; 0x18
    5162:	01 97       	sbiw	r24, 0x01	; 1
    5164:	98 8f       	std	Y+24, r25	; 0x18
    5166:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5168:	8f 89       	ldd	r24, Y+23	; 0x17
    516a:	98 8d       	ldd	r25, Y+24	; 0x18
    516c:	89 2b       	or	r24, r25
    516e:	69 f7       	brne	.-38     	; 0x514a <main+0x108>
    5170:	14 c0       	rjmp	.+40     	; 0x519a <main+0x158>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5172:	6b 89       	ldd	r22, Y+19	; 0x13
    5174:	7c 89       	ldd	r23, Y+20	; 0x14
    5176:	8d 89       	ldd	r24, Y+21	; 0x15
    5178:	9e 89       	ldd	r25, Y+22	; 0x16
    517a:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    517e:	dc 01       	movw	r26, r24
    5180:	cb 01       	movw	r24, r22
    5182:	98 8f       	std	Y+24, r25	; 0x18
    5184:	8f 8b       	std	Y+23, r24	; 0x17
    5186:	8f 89       	ldd	r24, Y+23	; 0x17
    5188:	98 8d       	ldd	r25, Y+24	; 0x18
    518a:	9c 8f       	std	Y+28, r25	; 0x1c
    518c:	8b 8f       	std	Y+27, r24	; 0x1b
    518e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5190:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5192:	01 97       	sbiw	r24, 0x01	; 1
    5194:	f1 f7       	brne	.-4      	; 0x5192 <main+0x150>
    5196:	9c 8f       	std	Y+28, r25	; 0x1c
    5198:	8b 8f       	std	Y+27, r24	; 0x1b
	_delay_ms(5000);
	set_led_mode(IDLE);
    519a:	80 e4       	ldi	r24, 0x40	; 64
    519c:	0e 94 84 03 	call	0x708	; 0x708 <set_led_mode>
	clear_lcd();
    51a0:	0e 94 26 2e 	call	0x5c4c	; 0x5c4c <clear_lcd>
	goto_start();
    51a4:	0e 94 9f 04 	call	0x93e	; 0x93e <goto_start>
	while(1)
	{
	//	direction=get_direction();
		
		DIP_Switch=get_DIP_Switch();
    51a8:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <get_DIP_Switch>
    51ac:	80 93 fc 02 	sts	0x02FC, r24	; 0x8002fc <__data_end>
		taster=get_LCD_Taster();
    51b0:	0e 94 5d 01 	call	0x2ba	; 0x2ba <get_LCD_Taster>
    51b4:	89 83       	std	Y+1, r24	; 0x01
		write_zahl(3,0,lol,4,0,0);
    51b6:	80 91 34 03 	lds	r24, 0x0334	; 0x800334 <lol>
    51ba:	90 91 35 03 	lds	r25, 0x0335	; 0x800335 <lol+0x1>
    51be:	cc 01       	movw	r24, r24
    51c0:	a0 e0       	ldi	r26, 0x00	; 0
    51c2:	b0 e0       	ldi	r27, 0x00	; 0
    51c4:	c1 2c       	mov	r12, r1
    51c6:	e1 2c       	mov	r14, r1
    51c8:	04 e0       	ldi	r16, 0x04	; 4
    51ca:	9c 01       	movw	r18, r24
    51cc:	ad 01       	movw	r20, r26
    51ce:	60 e0       	ldi	r22, 0x00	; 0
    51d0:	83 e0       	ldi	r24, 0x03	; 3
    51d2:	0e 94 e9 2c 	call	0x59d2	; 0x59d2 <write_zahl>
		if (taster&0x08)
    51d6:	89 81       	ldd	r24, Y+1	; 0x01
    51d8:	88 2f       	mov	r24, r24
    51da:	90 e0       	ldi	r25, 0x00	; 0
    51dc:	88 70       	andi	r24, 0x08	; 8
    51de:	99 27       	eor	r25, r25
    51e0:	89 2b       	or	r24, r25
    51e2:	21 f0       	breq	.+8      	; 0x51ec <main+0x1aa>
		{
			goto_start();
    51e4:	0e 94 9f 04 	call	0x93e	; 0x93e <goto_start>
			make_sound();
    51e8:	0e 94 9b 03 	call	0x736	; 0x736 <make_sound>
		}		
		if (taster&0x02)
    51ec:	89 81       	ldd	r24, Y+1	; 0x01
    51ee:	88 2f       	mov	r24, r24
    51f0:	90 e0       	ldi	r25, 0x00	; 0
    51f2:	82 70       	andi	r24, 0x02	; 2
    51f4:	99 27       	eor	r25, r25
    51f6:	89 2b       	or	r24, r25
    51f8:	11 f0       	breq	.+4      	; 0x51fe <main+0x1bc>
		{
			play_somthin_booy();
    51fa:	0e 94 20 05 	call	0xa40	; 0xa40 <play_somthin_booy>
		}
		if (play_sound!=0)
    51fe:	80 91 45 03 	lds	r24, 0x0345	; 0x800345 <play_sound>
    5202:	88 23       	and	r24, r24
    5204:	21 f0       	breq	.+8      	; 0x520e <main+0x1cc>
		{
			play_somthin_booy();
    5206:	0e 94 20 05 	call	0xa40	; 0xa40 <play_somthin_booy>
			play_sound=0;
    520a:	10 92 45 03 	sts	0x0345, r1	; 0x800345 <play_sound>
		}
		if (routine_done>=1) //if routine done
    520e:	80 91 44 03 	lds	r24, 0x0344	; 0x800344 <routine_done>
    5212:	88 23       	and	r24, r24
    5214:	99 f0       	breq	.+38     	; 0x523c <main+0x1fa>
		{
			make_sound();
    5216:	0e 94 9b 03 	call	0x736	; 0x736 <make_sound>
			wait_1ms(50);
    521a:	62 e3       	ldi	r22, 0x32	; 50
    521c:	70 e0       	ldi	r23, 0x00	; 0
    521e:	80 e0       	ldi	r24, 0x00	; 0
    5220:	90 e0       	ldi	r25, 0x00	; 0
    5222:	0e 94 ff 2b 	call	0x57fe	; 0x57fe <wait_1ms>
			play_short();
    5226:	0e 94 c8 23 	call	0x4790	; 0x4790 <play_short>
			routine_done=0;
    522a:	10 92 44 03 	sts	0x0344, r1	; 0x800344 <routine_done>
			PORTB++;
    522e:	85 e2       	ldi	r24, 0x25	; 37
    5230:	90 e0       	ldi	r25, 0x00	; 0
    5232:	fc 01       	movw	r30, r24
    5234:	20 81       	ld	r18, Z
    5236:	2f 5f       	subi	r18, 0xFF	; 255
    5238:	fc 01       	movw	r30, r24
    523a:	20 83       	st	Z, r18
		}
		if (uart_str_complete!=0)
    523c:	80 91 43 03 	lds	r24, 0x0343	; 0x800343 <uart_str_complete>
    5240:	88 23       	and	r24, r24
    5242:	09 f4       	brne	.+2      	; 0x5246 <main+0x204>
    5244:	b1 cf       	rjmp	.-158    	; 0x51a8 <main+0x166>
		{
			uart_str_complete=0;
    5246:	10 92 43 03 	sts	0x0343, r1	; 0x800343 <uart_str_complete>
			send_Byte_0('1');	
    524a:	81 e3       	ldi	r24, 0x31	; 49
    524c:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <send_Byte_0>
			PORTB|=0x02;
    5250:	85 e2       	ldi	r24, 0x25	; 37
    5252:	90 e0       	ldi	r25, 0x00	; 0
    5254:	25 e2       	ldi	r18, 0x25	; 37
    5256:	30 e0       	ldi	r19, 0x00	; 0
    5258:	f9 01       	movw	r30, r18
    525a:	20 81       	ld	r18, Z
    525c:	22 60       	ori	r18, 0x02	; 2
    525e:	fc 01       	movw	r30, r24
    5260:	20 83       	st	Z, r18
			recieved_Y=(data[1]-48)*1000+(data[2]-48)*100+(data[3]-48)*10+data[4]-48;
    5262:	80 91 4e 03 	lds	r24, 0x034E	; 0x80034e <data+0x1>
    5266:	88 2f       	mov	r24, r24
    5268:	90 e0       	ldi	r25, 0x00	; 0
    526a:	ac 01       	movw	r20, r24
    526c:	40 53       	subi	r20, 0x30	; 48
    526e:	51 09       	sbc	r21, r1
    5270:	88 ee       	ldi	r24, 0xE8	; 232
    5272:	93 e0       	ldi	r25, 0x03	; 3
    5274:	48 9f       	mul	r20, r24
    5276:	90 01       	movw	r18, r0
    5278:	49 9f       	mul	r20, r25
    527a:	30 0d       	add	r19, r0
    527c:	58 9f       	mul	r21, r24
    527e:	30 0d       	add	r19, r0
    5280:	11 24       	eor	r1, r1
    5282:	80 91 4f 03 	lds	r24, 0x034F	; 0x80034f <data+0x2>
    5286:	88 2f       	mov	r24, r24
    5288:	90 e0       	ldi	r25, 0x00	; 0
    528a:	ac 01       	movw	r20, r24
    528c:	40 53       	subi	r20, 0x30	; 48
    528e:	51 09       	sbc	r21, r1
    5290:	64 e6       	ldi	r22, 0x64	; 100
    5292:	64 9f       	mul	r22, r20
    5294:	c0 01       	movw	r24, r0
    5296:	65 9f       	mul	r22, r21
    5298:	90 0d       	add	r25, r0
    529a:	11 24       	eor	r1, r1
    529c:	28 0f       	add	r18, r24
    529e:	39 1f       	adc	r19, r25
    52a0:	80 91 50 03 	lds	r24, 0x0350	; 0x800350 <data+0x3>
    52a4:	88 2f       	mov	r24, r24
    52a6:	90 e0       	ldi	r25, 0x00	; 0
    52a8:	c0 97       	sbiw	r24, 0x30	; 48
    52aa:	88 0f       	add	r24, r24
    52ac:	99 1f       	adc	r25, r25
    52ae:	ac 01       	movw	r20, r24
    52b0:	44 0f       	add	r20, r20
    52b2:	55 1f       	adc	r21, r21
    52b4:	44 0f       	add	r20, r20
    52b6:	55 1f       	adc	r21, r21
    52b8:	84 0f       	add	r24, r20
    52ba:	95 1f       	adc	r25, r21
    52bc:	28 0f       	add	r18, r24
    52be:	39 1f       	adc	r19, r25
    52c0:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <data+0x4>
    52c4:	88 2f       	mov	r24, r24
    52c6:	90 e0       	ldi	r25, 0x00	; 0
    52c8:	82 0f       	add	r24, r18
    52ca:	93 1f       	adc	r25, r19
    52cc:	c0 97       	sbiw	r24, 0x30	; 48
    52ce:	9f 83       	std	Y+7, r25	; 0x07
    52d0:	8e 83       	std	Y+6, r24	; 0x06
			recieved_X=(data[6]-48)*1000+(data[7]-48)*100+(data[8]-48)*10+data[9]-48;
    52d2:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <data+0x6>
    52d6:	88 2f       	mov	r24, r24
    52d8:	90 e0       	ldi	r25, 0x00	; 0
    52da:	ac 01       	movw	r20, r24
    52dc:	40 53       	subi	r20, 0x30	; 48
    52de:	51 09       	sbc	r21, r1
    52e0:	88 ee       	ldi	r24, 0xE8	; 232
    52e2:	93 e0       	ldi	r25, 0x03	; 3
    52e4:	48 9f       	mul	r20, r24
    52e6:	90 01       	movw	r18, r0
    52e8:	49 9f       	mul	r20, r25
    52ea:	30 0d       	add	r19, r0
    52ec:	58 9f       	mul	r21, r24
    52ee:	30 0d       	add	r19, r0
    52f0:	11 24       	eor	r1, r1
    52f2:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <data+0x7>
    52f6:	88 2f       	mov	r24, r24
    52f8:	90 e0       	ldi	r25, 0x00	; 0
    52fa:	ac 01       	movw	r20, r24
    52fc:	40 53       	subi	r20, 0x30	; 48
    52fe:	51 09       	sbc	r21, r1
    5300:	64 e6       	ldi	r22, 0x64	; 100
    5302:	64 9f       	mul	r22, r20
    5304:	c0 01       	movw	r24, r0
    5306:	65 9f       	mul	r22, r21
    5308:	90 0d       	add	r25, r0
    530a:	11 24       	eor	r1, r1
    530c:	28 0f       	add	r18, r24
    530e:	39 1f       	adc	r19, r25
    5310:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <data+0x8>
    5314:	88 2f       	mov	r24, r24
    5316:	90 e0       	ldi	r25, 0x00	; 0
    5318:	c0 97       	sbiw	r24, 0x30	; 48
    531a:	88 0f       	add	r24, r24
    531c:	99 1f       	adc	r25, r25
    531e:	ac 01       	movw	r20, r24
    5320:	44 0f       	add	r20, r20
    5322:	55 1f       	adc	r21, r21
    5324:	44 0f       	add	r20, r20
    5326:	55 1f       	adc	r21, r21
    5328:	84 0f       	add	r24, r20
    532a:	95 1f       	adc	r25, r21
    532c:	28 0f       	add	r18, r24
    532e:	39 1f       	adc	r19, r25
    5330:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <data+0x9>
    5334:	88 2f       	mov	r24, r24
    5336:	90 e0       	ldi	r25, 0x00	; 0
    5338:	82 0f       	add	r24, r18
    533a:	93 1f       	adc	r25, r19
    533c:	c0 97       	sbiw	r24, 0x30	; 48
    533e:	99 87       	std	Y+9, r25	; 0x09
    5340:	88 87       	std	Y+8, r24	; 0x08
			write_zahl(0,0,recieved_X,5,0,0);
    5342:	88 85       	ldd	r24, Y+8	; 0x08
    5344:	99 85       	ldd	r25, Y+9	; 0x09
    5346:	09 2e       	mov	r0, r25
    5348:	00 0c       	add	r0, r0
    534a:	aa 0b       	sbc	r26, r26
    534c:	bb 0b       	sbc	r27, r27
    534e:	c1 2c       	mov	r12, r1
    5350:	e1 2c       	mov	r14, r1
    5352:	05 e0       	ldi	r16, 0x05	; 5
    5354:	9c 01       	movw	r18, r24
    5356:	ad 01       	movw	r20, r26
    5358:	60 e0       	ldi	r22, 0x00	; 0
    535a:	80 e0       	ldi	r24, 0x00	; 0
    535c:	0e 94 e9 2c 	call	0x59d2	; 0x59d2 <write_zahl>
			write_zahl(1,0,recieved_Y,5,0,0);
    5360:	8e 81       	ldd	r24, Y+6	; 0x06
    5362:	9f 81       	ldd	r25, Y+7	; 0x07
    5364:	09 2e       	mov	r0, r25
    5366:	00 0c       	add	r0, r0
    5368:	aa 0b       	sbc	r26, r26
    536a:	bb 0b       	sbc	r27, r27
    536c:	c1 2c       	mov	r12, r1
    536e:	e1 2c       	mov	r14, r1
    5370:	05 e0       	ldi	r16, 0x05	; 5
    5372:	9c 01       	movw	r18, r24
    5374:	ad 01       	movw	r20, r26
    5376:	60 e0       	ldi	r22, 0x00	; 0
    5378:	81 e0       	ldi	r24, 0x01	; 1
    537a:	0e 94 e9 2c 	call	0x59d2	; 0x59d2 <write_zahl>
    537e:	80 e0       	ldi	r24, 0x00	; 0
    5380:	90 e0       	ldi	r25, 0x00	; 0
    5382:	a0 e0       	ldi	r26, 0x00	; 0
    5384:	b0 e4       	ldi	r27, 0x40	; 64
    5386:	8a 83       	std	Y+2, r24	; 0x02
    5388:	9b 83       	std	Y+3, r25	; 0x03
    538a:	ac 83       	std	Y+4, r26	; 0x04
    538c:	bd 83       	std	Y+5, r27	; 0x05

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    538e:	20 e0       	ldi	r18, 0x00	; 0
    5390:	30 e0       	ldi	r19, 0x00	; 0
    5392:	4a e7       	ldi	r20, 0x7A	; 122
    5394:	55 e4       	ldi	r21, 0x45	; 69
    5396:	6a 81       	ldd	r22, Y+2	; 0x02
    5398:	7b 81       	ldd	r23, Y+3	; 0x03
    539a:	8c 81       	ldd	r24, Y+4	; 0x04
    539c:	9d 81       	ldd	r25, Y+5	; 0x05
    539e:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    53a2:	dc 01       	movw	r26, r24
    53a4:	cb 01       	movw	r24, r22
    53a6:	8d 8f       	std	Y+29, r24	; 0x1d
    53a8:	9e 8f       	std	Y+30, r25	; 0x1e
    53aa:	af 8f       	std	Y+31, r26	; 0x1f
    53ac:	b8 a3       	std	Y+32, r27	; 0x20
	if (__tmp < 1.0)
    53ae:	20 e0       	ldi	r18, 0x00	; 0
    53b0:	30 e0       	ldi	r19, 0x00	; 0
    53b2:	40 e8       	ldi	r20, 0x80	; 128
    53b4:	5f e3       	ldi	r21, 0x3F	; 63
    53b6:	6d 8d       	ldd	r22, Y+29	; 0x1d
    53b8:	7e 8d       	ldd	r23, Y+30	; 0x1e
    53ba:	8f 8d       	ldd	r24, Y+31	; 0x1f
    53bc:	98 a1       	ldd	r25, Y+32	; 0x20
    53be:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    53c2:	88 23       	and	r24, r24
    53c4:	2c f4       	brge	.+10     	; 0x53d0 <main+0x38e>
		__ticks = 1;
    53c6:	81 e0       	ldi	r24, 0x01	; 1
    53c8:	90 e0       	ldi	r25, 0x00	; 0
    53ca:	9a a3       	std	Y+34, r25	; 0x22
    53cc:	89 a3       	std	Y+33, r24	; 0x21
    53ce:	3f c0       	rjmp	.+126    	; 0x544e <main+0x40c>
	else if (__tmp > 65535)
    53d0:	20 e0       	ldi	r18, 0x00	; 0
    53d2:	3f ef       	ldi	r19, 0xFF	; 255
    53d4:	4f e7       	ldi	r20, 0x7F	; 127
    53d6:	57 e4       	ldi	r21, 0x47	; 71
    53d8:	6d 8d       	ldd	r22, Y+29	; 0x1d
    53da:	7e 8d       	ldd	r23, Y+30	; 0x1e
    53dc:	8f 8d       	ldd	r24, Y+31	; 0x1f
    53de:	98 a1       	ldd	r25, Y+32	; 0x20
    53e0:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    53e4:	18 16       	cp	r1, r24
    53e6:	4c f5       	brge	.+82     	; 0x543a <main+0x3f8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    53e8:	20 e0       	ldi	r18, 0x00	; 0
    53ea:	30 e0       	ldi	r19, 0x00	; 0
    53ec:	40 e2       	ldi	r20, 0x20	; 32
    53ee:	51 e4       	ldi	r21, 0x41	; 65
    53f0:	6a 81       	ldd	r22, Y+2	; 0x02
    53f2:	7b 81       	ldd	r23, Y+3	; 0x03
    53f4:	8c 81       	ldd	r24, Y+4	; 0x04
    53f6:	9d 81       	ldd	r25, Y+5	; 0x05
    53f8:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    53fc:	dc 01       	movw	r26, r24
    53fe:	cb 01       	movw	r24, r22
    5400:	bc 01       	movw	r22, r24
    5402:	cd 01       	movw	r24, r26
    5404:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    5408:	dc 01       	movw	r26, r24
    540a:	cb 01       	movw	r24, r22
    540c:	9a a3       	std	Y+34, r25	; 0x22
    540e:	89 a3       	std	Y+33, r24	; 0x21
    5410:	0f c0       	rjmp	.+30     	; 0x5430 <main+0x3ee>
    5412:	80 e9       	ldi	r24, 0x90	; 144
    5414:	91 e0       	ldi	r25, 0x01	; 1
    5416:	9c a3       	std	Y+36, r25	; 0x24
    5418:	8b a3       	std	Y+35, r24	; 0x23
    541a:	8b a1       	ldd	r24, Y+35	; 0x23
    541c:	9c a1       	ldd	r25, Y+36	; 0x24
    541e:	01 97       	sbiw	r24, 0x01	; 1
    5420:	f1 f7       	brne	.-4      	; 0x541e <main+0x3dc>
    5422:	9c a3       	std	Y+36, r25	; 0x24
    5424:	8b a3       	std	Y+35, r24	; 0x23
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5426:	89 a1       	ldd	r24, Y+33	; 0x21
    5428:	9a a1       	ldd	r25, Y+34	; 0x22
    542a:	01 97       	sbiw	r24, 0x01	; 1
    542c:	9a a3       	std	Y+34, r25	; 0x22
    542e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5430:	89 a1       	ldd	r24, Y+33	; 0x21
    5432:	9a a1       	ldd	r25, Y+34	; 0x22
    5434:	89 2b       	or	r24, r25
    5436:	69 f7       	brne	.-38     	; 0x5412 <main+0x3d0>
    5438:	14 c0       	rjmp	.+40     	; 0x5462 <main+0x420>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    543a:	6d 8d       	ldd	r22, Y+29	; 0x1d
    543c:	7e 8d       	ldd	r23, Y+30	; 0x1e
    543e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5440:	98 a1       	ldd	r25, Y+32	; 0x20
    5442:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    5446:	dc 01       	movw	r26, r24
    5448:	cb 01       	movw	r24, r22
    544a:	9a a3       	std	Y+34, r25	; 0x22
    544c:	89 a3       	std	Y+33, r24	; 0x21
    544e:	89 a1       	ldd	r24, Y+33	; 0x21
    5450:	9a a1       	ldd	r25, Y+34	; 0x22
    5452:	9e a3       	std	Y+38, r25	; 0x26
    5454:	8d a3       	std	Y+37, r24	; 0x25
    5456:	8d a1       	ldd	r24, Y+37	; 0x25
    5458:	9e a1       	ldd	r25, Y+38	; 0x26
    545a:	01 97       	sbiw	r24, 0x01	; 1
    545c:	f1 f7       	brne	.-4      	; 0x545a <main+0x418>
    545e:	9e a3       	std	Y+38, r25	; 0x26
    5460:	8d a3       	std	Y+37, r24	; 0x25
			_delay_ms(2);
			snprintf(return_buffer,30,"%d %d",recieved_X,recieved_Y);
    5462:	8f 81       	ldd	r24, Y+7	; 0x07
    5464:	8f 93       	push	r24
    5466:	8e 81       	ldd	r24, Y+6	; 0x06
    5468:	8f 93       	push	r24
    546a:	89 85       	ldd	r24, Y+9	; 0x09
    546c:	8f 93       	push	r24
    546e:	88 85       	ldd	r24, Y+8	; 0x08
    5470:	8f 93       	push	r24
    5472:	8f ed       	ldi	r24, 0xDF	; 223
    5474:	92 e0       	ldi	r25, 0x02	; 2
    5476:	89 2f       	mov	r24, r25
    5478:	8f 93       	push	r24
    547a:	8f ed       	ldi	r24, 0xDF	; 223
    547c:	92 e0       	ldi	r25, 0x02	; 2
    547e:	8f 93       	push	r24
    5480:	1f 92       	push	r1
    5482:	8e e1       	ldi	r24, 0x1E	; 30
    5484:	8f 93       	push	r24
    5486:	ce 01       	movw	r24, r28
    5488:	81 5b       	subi	r24, 0xB1	; 177
    548a:	9f 4f       	sbci	r25, 0xFF	; 255
    548c:	29 2f       	mov	r18, r25
    548e:	2f 93       	push	r18
    5490:	8f 93       	push	r24
    5492:	0e 94 12 30 	call	0x6024	; 0x6024 <snprintf>
    5496:	8d b7       	in	r24, 0x3d	; 61
    5498:	9e b7       	in	r25, 0x3e	; 62
    549a:	0a 96       	adiw	r24, 0x0a	; 10
    549c:	0f b6       	in	r0, 0x3f	; 63
    549e:	f8 94       	cli
    54a0:	de bf       	out	0x3e, r29	; 62
    54a2:	0f be       	out	0x3f, r0	; 63
    54a4:	cd bf       	out	0x3d, r28	; 61
			to_pc(return_buffer);
    54a6:	ce 01       	movw	r24, r28
    54a8:	81 5b       	subi	r24, 0xB1	; 177
    54aa:	9f 4f       	sbci	r25, 0xFF	; 255
    54ac:	0e 94 30 02 	call	0x460	; 0x460 <to_pc>
			while(((false_state==0)&&(good==0))||((taster&0x01)!=0))
    54b0:	03 c0       	rjmp	.+6      	; 0x54b8 <main+0x476>
			{
				taster = get_LCD_Taster();
    54b2:	0e 94 5d 01 	call	0x2ba	; 0x2ba <get_LCD_Taster>
    54b6:	89 83       	std	Y+1, r24	; 0x01
			write_zahl(0,0,recieved_X,5,0,0);
			write_zahl(1,0,recieved_Y,5,0,0);
			_delay_ms(2);
			snprintf(return_buffer,30,"%d %d",recieved_X,recieved_Y);
			to_pc(return_buffer);
			while(((false_state==0)&&(good==0))||((taster&0x01)!=0))
    54b8:	80 91 32 03 	lds	r24, 0x0332	; 0x800332 <false_state>
    54bc:	88 23       	and	r24, r24
    54be:	21 f4       	brne	.+8      	; 0x54c8 <main+0x486>
    54c0:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <good>
    54c4:	88 23       	and	r24, r24
    54c6:	a9 f3       	breq	.-22     	; 0x54b2 <main+0x470>
    54c8:	89 81       	ldd	r24, Y+1	; 0x01
    54ca:	88 2f       	mov	r24, r24
    54cc:	90 e0       	ldi	r25, 0x00	; 0
    54ce:	81 70       	andi	r24, 0x01	; 1
    54d0:	99 27       	eor	r25, r25
    54d2:	89 2b       	or	r24, r25
    54d4:	71 f7       	brne	.-36     	; 0x54b2 <main+0x470>
			{
				taster = get_LCD_Taster();
			}
			if (good!=0)
    54d6:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <good>
    54da:	88 23       	and	r24, r24
    54dc:	09 f4       	brne	.+2      	; 0x54e0 <main+0x49e>
    54de:	d5 c0       	rjmp	.+426    	; 0x568a <main+0x648>
			{
				PORTB|0x04;
    54e0:	85 e2       	ldi	r24, 0x25	; 37
    54e2:	90 e0       	ldi	r25, 0x00	; 0
    54e4:	fc 01       	movw	r30, r24
    54e6:	80 81       	ld	r24, Z
				//Grid anpassung
				recieved_X-=384;
    54e8:	88 85       	ldd	r24, Y+8	; 0x08
    54ea:	99 85       	ldd	r25, Y+9	; 0x09
    54ec:	80 58       	subi	r24, 0x80	; 128
    54ee:	91 40       	sbci	r25, 0x01	; 1
    54f0:	99 87       	std	Y+9, r25	; 0x09
    54f2:	88 87       	std	Y+8, r24	; 0x08
				recieved_Y-=512;
    54f4:	8e 81       	ldd	r24, Y+6	; 0x06
    54f6:	9f 81       	ldd	r25, Y+7	; 0x07
    54f8:	92 50       	subi	r25, 0x02	; 2
    54fa:	9f 83       	std	Y+7, r25	; 0x07
    54fc:	8e 83       	std	Y+6, r24	; 0x06
				recieved_X=((recieved_X/5)*-1)+200;
    54fe:	88 85       	ldd	r24, Y+8	; 0x08
    5500:	99 85       	ldd	r25, Y+9	; 0x09
    5502:	25 e0       	ldi	r18, 0x05	; 5
    5504:	30 e0       	ldi	r19, 0x00	; 0
    5506:	b9 01       	movw	r22, r18
    5508:	0e 94 c2 2f 	call	0x5f84	; 0x5f84 <__divmodhi4>
    550c:	cb 01       	movw	r24, r22
    550e:	9c 01       	movw	r18, r24
    5510:	88 ec       	ldi	r24, 0xC8	; 200
    5512:	90 e0       	ldi	r25, 0x00	; 0
    5514:	82 1b       	sub	r24, r18
    5516:	93 0b       	sbc	r25, r19
    5518:	99 87       	std	Y+9, r25	; 0x09
    551a:	88 87       	std	Y+8, r24	; 0x08
				recieved_Y=(recieved_Y/5)*-1;
    551c:	8e 81       	ldd	r24, Y+6	; 0x06
    551e:	9f 81       	ldd	r25, Y+7	; 0x07
    5520:	25 e0       	ldi	r18, 0x05	; 5
    5522:	30 e0       	ldi	r19, 0x00	; 0
    5524:	b9 01       	movw	r22, r18
    5526:	0e 94 c2 2f 	call	0x5f84	; 0x5f84 <__divmodhi4>
    552a:	cb 01       	movw	r24, r22
    552c:	91 95       	neg	r25
    552e:	81 95       	neg	r24
    5530:	91 09       	sbc	r25, r1
    5532:	9f 83       	std	Y+7, r25	; 0x07
    5534:	8e 83       	std	Y+6, r24	; 0x06
				snprintf(buffer,30,"G0 X%d Y%d Z-20 F6000\n",recieved_X,recieved_Y);//////////////////form new string
    5536:	8f 81       	ldd	r24, Y+7	; 0x07
    5538:	8f 93       	push	r24
    553a:	8e 81       	ldd	r24, Y+6	; 0x06
    553c:	8f 93       	push	r24
    553e:	89 85       	ldd	r24, Y+9	; 0x09
    5540:	8f 93       	push	r24
    5542:	88 85       	ldd	r24, Y+8	; 0x08
    5544:	8f 93       	push	r24
    5546:	85 ee       	ldi	r24, 0xE5	; 229
    5548:	92 e0       	ldi	r25, 0x02	; 2
    554a:	89 2f       	mov	r24, r25
    554c:	8f 93       	push	r24
    554e:	85 ee       	ldi	r24, 0xE5	; 229
    5550:	92 e0       	ldi	r25, 0x02	; 2
    5552:	8f 93       	push	r24
    5554:	1f 92       	push	r1
    5556:	8e e1       	ldi	r24, 0x1E	; 30
    5558:	8f 93       	push	r24
    555a:	ce 01       	movw	r24, r28
    555c:	c1 96       	adiw	r24, 0x31	; 49
    555e:	29 2f       	mov	r18, r25
    5560:	2f 93       	push	r18
    5562:	8f 93       	push	r24
    5564:	0e 94 12 30 	call	0x6024	; 0x6024 <snprintf>
    5568:	8d b7       	in	r24, 0x3d	; 61
    556a:	9e b7       	in	r25, 0x3e	; 62
    556c:	0a 96       	adiw	r24, 0x0a	; 10
    556e:	0f b6       	in	r0, 0x3f	; 63
    5570:	f8 94       	cli
    5572:	de bf       	out	0x3e, r29	; 62
    5574:	0f be       	out	0x3f, r0	; 63
    5576:	cd bf       	out	0x3d, r28	; 61
				send_to_uArm(buffer);		//send new string
    5578:	ce 01       	movw	r24, r28
    557a:	c1 96       	adiw	r24, 0x31	; 49
    557c:	0e 94 72 02 	call	0x4e4	; 0x4e4 <send_to_uArm>
    5580:	80 e0       	ldi	r24, 0x00	; 0
    5582:	90 e0       	ldi	r25, 0x00	; 0
    5584:	a0 e0       	ldi	r26, 0x00	; 0
    5586:	b0 e4       	ldi	r27, 0x40	; 64
    5588:	8a 87       	std	Y+10, r24	; 0x0a
    558a:	9b 87       	std	Y+11, r25	; 0x0b
    558c:	ac 87       	std	Y+12, r26	; 0x0c
    558e:	bd 87       	std	Y+13, r27	; 0x0d

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    5590:	20 e0       	ldi	r18, 0x00	; 0
    5592:	30 e0       	ldi	r19, 0x00	; 0
    5594:	4a e7       	ldi	r20, 0x7A	; 122
    5596:	55 e4       	ldi	r21, 0x45	; 69
    5598:	6a 85       	ldd	r22, Y+10	; 0x0a
    559a:	7b 85       	ldd	r23, Y+11	; 0x0b
    559c:	8c 85       	ldd	r24, Y+12	; 0x0c
    559e:	9d 85       	ldd	r25, Y+13	; 0x0d
    55a0:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    55a4:	dc 01       	movw	r26, r24
    55a6:	cb 01       	movw	r24, r22
    55a8:	8f a3       	std	Y+39, r24	; 0x27
    55aa:	98 a7       	std	Y+40, r25	; 0x28
    55ac:	a9 a7       	std	Y+41, r26	; 0x29
    55ae:	ba a7       	std	Y+42, r27	; 0x2a
	if (__tmp < 1.0)
    55b0:	20 e0       	ldi	r18, 0x00	; 0
    55b2:	30 e0       	ldi	r19, 0x00	; 0
    55b4:	40 e8       	ldi	r20, 0x80	; 128
    55b6:	5f e3       	ldi	r21, 0x3F	; 63
    55b8:	6f a1       	ldd	r22, Y+39	; 0x27
    55ba:	78 a5       	ldd	r23, Y+40	; 0x28
    55bc:	89 a5       	ldd	r24, Y+41	; 0x29
    55be:	9a a5       	ldd	r25, Y+42	; 0x2a
    55c0:	0e 94 a7 2e 	call	0x5d4e	; 0x5d4e <__cmpsf2>
    55c4:	88 23       	and	r24, r24
    55c6:	2c f4       	brge	.+10     	; 0x55d2 <main+0x590>
		__ticks = 1;
    55c8:	81 e0       	ldi	r24, 0x01	; 1
    55ca:	90 e0       	ldi	r25, 0x00	; 0
    55cc:	9c a7       	std	Y+44, r25	; 0x2c
    55ce:	8b a7       	std	Y+43, r24	; 0x2b
    55d0:	3f c0       	rjmp	.+126    	; 0x5650 <main+0x60e>
	else if (__tmp > 65535)
    55d2:	20 e0       	ldi	r18, 0x00	; 0
    55d4:	3f ef       	ldi	r19, 0xFF	; 255
    55d6:	4f e7       	ldi	r20, 0x7F	; 127
    55d8:	57 e4       	ldi	r21, 0x47	; 71
    55da:	6f a1       	ldd	r22, Y+39	; 0x27
    55dc:	78 a5       	ldd	r23, Y+40	; 0x28
    55de:	89 a5       	ldd	r24, Y+41	; 0x29
    55e0:	9a a5       	ldd	r25, Y+42	; 0x2a
    55e2:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__gesf2>
    55e6:	18 16       	cp	r1, r24
    55e8:	4c f5       	brge	.+82     	; 0x563c <main+0x5fa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    55ea:	20 e0       	ldi	r18, 0x00	; 0
    55ec:	30 e0       	ldi	r19, 0x00	; 0
    55ee:	40 e2       	ldi	r20, 0x20	; 32
    55f0:	51 e4       	ldi	r21, 0x41	; 65
    55f2:	6a 85       	ldd	r22, Y+10	; 0x0a
    55f4:	7b 85       	ldd	r23, Y+11	; 0x0b
    55f6:	8c 85       	ldd	r24, Y+12	; 0x0c
    55f8:	9d 85       	ldd	r25, Y+13	; 0x0d
    55fa:	0e 94 2d 2f 	call	0x5e5a	; 0x5e5a <__mulsf3>
    55fe:	dc 01       	movw	r26, r24
    5600:	cb 01       	movw	r24, r22
    5602:	bc 01       	movw	r22, r24
    5604:	cd 01       	movw	r24, r26
    5606:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    560a:	dc 01       	movw	r26, r24
    560c:	cb 01       	movw	r24, r22
    560e:	9c a7       	std	Y+44, r25	; 0x2c
    5610:	8b a7       	std	Y+43, r24	; 0x2b
    5612:	0f c0       	rjmp	.+30     	; 0x5632 <main+0x5f0>
    5614:	80 e9       	ldi	r24, 0x90	; 144
    5616:	91 e0       	ldi	r25, 0x01	; 1
    5618:	9e a7       	std	Y+46, r25	; 0x2e
    561a:	8d a7       	std	Y+45, r24	; 0x2d
    561c:	8d a5       	ldd	r24, Y+45	; 0x2d
    561e:	9e a5       	ldd	r25, Y+46	; 0x2e
    5620:	01 97       	sbiw	r24, 0x01	; 1
    5622:	f1 f7       	brne	.-4      	; 0x5620 <main+0x5de>
    5624:	9e a7       	std	Y+46, r25	; 0x2e
    5626:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5628:	8b a5       	ldd	r24, Y+43	; 0x2b
    562a:	9c a5       	ldd	r25, Y+44	; 0x2c
    562c:	01 97       	sbiw	r24, 0x01	; 1
    562e:	9c a7       	std	Y+44, r25	; 0x2c
    5630:	8b a7       	std	Y+43, r24	; 0x2b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5632:	8b a5       	ldd	r24, Y+43	; 0x2b
    5634:	9c a5       	ldd	r25, Y+44	; 0x2c
    5636:	89 2b       	or	r24, r25
    5638:	69 f7       	brne	.-38     	; 0x5614 <main+0x5d2>
    563a:	14 c0       	rjmp	.+40     	; 0x5664 <main+0x622>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    563c:	6f a1       	ldd	r22, Y+39	; 0x27
    563e:	78 a5       	ldd	r23, Y+40	; 0x28
    5640:	89 a5       	ldd	r24, Y+41	; 0x29
    5642:	9a a5       	ldd	r25, Y+42	; 0x2a
    5644:	0e 94 ac 2e 	call	0x5d58	; 0x5d58 <__fixunssfsi>
    5648:	dc 01       	movw	r26, r24
    564a:	cb 01       	movw	r24, r22
    564c:	9c a7       	std	Y+44, r25	; 0x2c
    564e:	8b a7       	std	Y+43, r24	; 0x2b
    5650:	8b a5       	ldd	r24, Y+43	; 0x2b
    5652:	9c a5       	ldd	r25, Y+44	; 0x2c
    5654:	98 ab       	std	Y+48, r25	; 0x30
    5656:	8f a7       	std	Y+47, r24	; 0x2f
    5658:	8f a5       	ldd	r24, Y+47	; 0x2f
    565a:	98 a9       	ldd	r25, Y+48	; 0x30
    565c:	01 97       	sbiw	r24, 0x01	; 1
    565e:	f1 f7       	brne	.-4      	; 0x565c <main+0x61a>
    5660:	98 ab       	std	Y+48, r25	; 0x30
    5662:	8f a7       	std	Y+47, r24	; 0x2f
				_delay_ms(2);
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    5664:	04 c0       	rjmp	.+8      	; 0x566e <main+0x62c>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
    5666:	80 e0       	ldi	r24, 0x00	; 0
    5668:	91 e0       	ldi	r25, 0x01	; 1
    566a:	0e 94 51 02 	call	0x4a2	; 0x4a2 <to_uARM>
				recieved_X=((recieved_X/5)*-1)+200;
				recieved_Y=(recieved_Y/5)*-1;
				snprintf(buffer,30,"G0 X%d Y%d Z-20 F6000\n",recieved_X,recieved_Y);//////////////////form new string
				send_to_uArm(buffer);		//send new string
				_delay_ms(2);
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    566e:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <uart_string1+0x4>
    5672:	81 33       	cpi	r24, 0x31	; 49
    5674:	c1 f3       	breq	.-16     	; 0x5666 <main+0x624>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
				}
				beep(DIP_Switch);
    5676:	80 91 fc 02 	lds	r24, 0x02FC	; 0x8002fc <__data_end>
    567a:	0e 94 b4 04 	call	0x968	; 0x968 <beep>
				send_Byte_0('1');		//return that action done
    567e:	81 e3       	ldi	r24, 0x31	; 49
    5680:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <send_Byte_0>
				good=0;
    5684:	10 92 48 03 	sts	0x0348, r1	; 0x800348 <good>
    5688:	09 c0       	rjmp	.+18     	; 0x569c <main+0x65a>
			}
			else
			{
				PORTB|0x08;
    568a:	85 e2       	ldi	r24, 0x25	; 37
    568c:	90 e0       	ldi	r25, 0x00	; 0
    568e:	fc 01       	movw	r30, r24
    5690:	80 81       	ld	r24, Z
				set_led_mode(IDLE);
    5692:	80 e4       	ldi	r24, 0x40	; 64
    5694:	0e 94 84 03 	call	0x708	; 0x708 <set_led_mode>
				false_state=0;
    5698:	10 92 32 03 	sts	0x0332, r1	; 0x800332 <false_state>
			}
			neu=taster;
    569c:	89 81       	ldd	r24, Y+1	; 0x01
    569e:	8e 87       	std	Y+14, r24	; 0x0e
		}		
	} //end while(1)
    56a0:	83 cd       	rjmp	.-1274   	; 0x51a8 <main+0x166>

000056a2 <init_Timer0_1ms_int>:
    56a2:	cf 93       	push	r28
    56a4:	df 93       	push	r29
    56a6:	cd b7       	in	r28, 0x3d	; 61
    56a8:	de b7       	in	r29, 0x3e	; 62
    56aa:	84 e4       	ldi	r24, 0x44	; 68
    56ac:	90 e0       	ldi	r25, 0x00	; 0
    56ae:	24 e4       	ldi	r18, 0x44	; 68
    56b0:	30 e0       	ldi	r19, 0x00	; 0
    56b2:	f9 01       	movw	r30, r18
    56b4:	20 81       	ld	r18, Z
    56b6:	22 60       	ori	r18, 0x02	; 2
    56b8:	fc 01       	movw	r30, r24
    56ba:	20 83       	st	Z, r18
    56bc:	85 e4       	ldi	r24, 0x45	; 69
    56be:	90 e0       	ldi	r25, 0x00	; 0
    56c0:	25 e4       	ldi	r18, 0x45	; 69
    56c2:	30 e0       	ldi	r19, 0x00	; 0
    56c4:	f9 01       	movw	r30, r18
    56c6:	20 81       	ld	r18, Z
    56c8:	23 60       	ori	r18, 0x03	; 3
    56ca:	fc 01       	movw	r30, r24
    56cc:	20 83       	st	Z, r18
    56ce:	87 e4       	ldi	r24, 0x47	; 71
    56d0:	90 e0       	ldi	r25, 0x00	; 0
    56d2:	29 ef       	ldi	r18, 0xF9	; 249
    56d4:	fc 01       	movw	r30, r24
    56d6:	20 83       	st	Z, r18
    56d8:	8e e6       	ldi	r24, 0x6E	; 110
    56da:	90 e0       	ldi	r25, 0x00	; 0
    56dc:	2e e6       	ldi	r18, 0x6E	; 110
    56de:	30 e0       	ldi	r19, 0x00	; 0
    56e0:	f9 01       	movw	r30, r18
    56e2:	20 81       	ld	r18, Z
    56e4:	22 60       	ori	r18, 0x02	; 2
    56e6:	fc 01       	movw	r30, r24
    56e8:	20 83       	st	Z, r18
    56ea:	00 00       	nop
    56ec:	df 91       	pop	r29
    56ee:	cf 91       	pop	r28
    56f0:	08 95       	ret

000056f2 <__vector_16>:
    56f2:	1f 92       	push	r1
    56f4:	0f 92       	push	r0
    56f6:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    56fa:	0f 92       	push	r0
    56fc:	11 24       	eor	r1, r1
    56fe:	2f 93       	push	r18
    5700:	3f 93       	push	r19
    5702:	4f 93       	push	r20
    5704:	5f 93       	push	r21
    5706:	6f 93       	push	r22
    5708:	7f 93       	push	r23
    570a:	8f 93       	push	r24
    570c:	9f 93       	push	r25
    570e:	af 93       	push	r26
    5710:	bf 93       	push	r27
    5712:	ef 93       	push	r30
    5714:	ff 93       	push	r31
    5716:	cf 93       	push	r28
    5718:	df 93       	push	r29
    571a:	cd b7       	in	r28, 0x3d	; 61
    571c:	de b7       	in	r29, 0x3e	; 62
    571e:	80 91 3a 03 	lds	r24, 0x033A	; 0x80033a <tick_1ms>
    5722:	90 91 3b 03 	lds	r25, 0x033B	; 0x80033b <tick_1ms+0x1>
    5726:	a0 91 3c 03 	lds	r26, 0x033C	; 0x80033c <tick_1ms+0x2>
    572a:	b0 91 3d 03 	lds	r27, 0x033D	; 0x80033d <tick_1ms+0x3>
    572e:	01 96       	adiw	r24, 0x01	; 1
    5730:	a1 1d       	adc	r26, r1
    5732:	b1 1d       	adc	r27, r1
    5734:	80 93 3a 03 	sts	0x033A, r24	; 0x80033a <tick_1ms>
    5738:	90 93 3b 03 	sts	0x033B, r25	; 0x80033b <tick_1ms+0x1>
    573c:	a0 93 3c 03 	sts	0x033C, r26	; 0x80033c <tick_1ms+0x2>
    5740:	b0 93 3d 03 	sts	0x033D, r27	; 0x80033d <tick_1ms+0x3>
    5744:	80 91 3a 03 	lds	r24, 0x033A	; 0x80033a <tick_1ms>
    5748:	90 91 3b 03 	lds	r25, 0x033B	; 0x80033b <tick_1ms+0x1>
    574c:	a0 91 3c 03 	lds	r26, 0x033C	; 0x80033c <tick_1ms+0x2>
    5750:	b0 91 3d 03 	lds	r27, 0x033D	; 0x80033d <tick_1ms+0x3>
    5754:	28 ee       	ldi	r18, 0xE8	; 232
    5756:	33 e0       	ldi	r19, 0x03	; 3
    5758:	40 e0       	ldi	r20, 0x00	; 0
    575a:	50 e0       	ldi	r21, 0x00	; 0
    575c:	bc 01       	movw	r22, r24
    575e:	cd 01       	movw	r24, r26
    5760:	0e 94 d6 2f 	call	0x5fac	; 0x5fac <__udivmodsi4>
    5764:	dc 01       	movw	r26, r24
    5766:	cb 01       	movw	r24, r22
    5768:	89 2b       	or	r24, r25
    576a:	8a 2b       	or	r24, r26
    576c:	8b 2b       	or	r24, r27
    576e:	99 f4       	brne	.+38     	; 0x5796 <__vector_16+0xa4>
    5770:	80 91 3e 03 	lds	r24, 0x033E	; 0x80033e <tick_1s>
    5774:	90 91 3f 03 	lds	r25, 0x033F	; 0x80033f <tick_1s+0x1>
    5778:	a0 91 40 03 	lds	r26, 0x0340	; 0x800340 <tick_1s+0x2>
    577c:	b0 91 41 03 	lds	r27, 0x0341	; 0x800341 <tick_1s+0x3>
    5780:	01 96       	adiw	r24, 0x01	; 1
    5782:	a1 1d       	adc	r26, r1
    5784:	b1 1d       	adc	r27, r1
    5786:	80 93 3e 03 	sts	0x033E, r24	; 0x80033e <tick_1s>
    578a:	90 93 3f 03 	sts	0x033F, r25	; 0x80033f <tick_1s+0x1>
    578e:	a0 93 40 03 	sts	0x0340, r26	; 0x800340 <tick_1s+0x2>
    5792:	b0 93 41 03 	sts	0x0341, r27	; 0x800341 <tick_1s+0x3>
    5796:	80 91 36 03 	lds	r24, 0x0336	; 0x800336 <tick_1ms_cnt>
    579a:	90 91 37 03 	lds	r25, 0x0337	; 0x800337 <tick_1ms_cnt+0x1>
    579e:	a0 91 38 03 	lds	r26, 0x0338	; 0x800338 <tick_1ms_cnt+0x2>
    57a2:	b0 91 39 03 	lds	r27, 0x0339	; 0x800339 <tick_1ms_cnt+0x3>
    57a6:	89 2b       	or	r24, r25
    57a8:	8a 2b       	or	r24, r26
    57aa:	8b 2b       	or	r24, r27
    57ac:	99 f0       	breq	.+38     	; 0x57d4 <__vector_16+0xe2>
    57ae:	80 91 36 03 	lds	r24, 0x0336	; 0x800336 <tick_1ms_cnt>
    57b2:	90 91 37 03 	lds	r25, 0x0337	; 0x800337 <tick_1ms_cnt+0x1>
    57b6:	a0 91 38 03 	lds	r26, 0x0338	; 0x800338 <tick_1ms_cnt+0x2>
    57ba:	b0 91 39 03 	lds	r27, 0x0339	; 0x800339 <tick_1ms_cnt+0x3>
    57be:	01 97       	sbiw	r24, 0x01	; 1
    57c0:	a1 09       	sbc	r26, r1
    57c2:	b1 09       	sbc	r27, r1
    57c4:	80 93 36 03 	sts	0x0336, r24	; 0x800336 <tick_1ms_cnt>
    57c8:	90 93 37 03 	sts	0x0337, r25	; 0x800337 <tick_1ms_cnt+0x1>
    57cc:	a0 93 38 03 	sts	0x0338, r26	; 0x800338 <tick_1ms_cnt+0x2>
    57d0:	b0 93 39 03 	sts	0x0339, r27	; 0x800339 <tick_1ms_cnt+0x3>
    57d4:	00 00       	nop
    57d6:	df 91       	pop	r29
    57d8:	cf 91       	pop	r28
    57da:	ff 91       	pop	r31
    57dc:	ef 91       	pop	r30
    57de:	bf 91       	pop	r27
    57e0:	af 91       	pop	r26
    57e2:	9f 91       	pop	r25
    57e4:	8f 91       	pop	r24
    57e6:	7f 91       	pop	r23
    57e8:	6f 91       	pop	r22
    57ea:	5f 91       	pop	r21
    57ec:	4f 91       	pop	r20
    57ee:	3f 91       	pop	r19
    57f0:	2f 91       	pop	r18
    57f2:	0f 90       	pop	r0
    57f4:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    57f8:	0f 90       	pop	r0
    57fa:	1f 90       	pop	r1
    57fc:	18 95       	reti

000057fe <wait_1ms>:
    57fe:	cf 93       	push	r28
    5800:	df 93       	push	r29
    5802:	00 d0       	rcall	.+0      	; 0x5804 <wait_1ms+0x6>
    5804:	00 d0       	rcall	.+0      	; 0x5806 <wait_1ms+0x8>
    5806:	cd b7       	in	r28, 0x3d	; 61
    5808:	de b7       	in	r29, 0x3e	; 62
    580a:	69 83       	std	Y+1, r22	; 0x01
    580c:	7a 83       	std	Y+2, r23	; 0x02
    580e:	8b 83       	std	Y+3, r24	; 0x03
    5810:	9c 83       	std	Y+4, r25	; 0x04
    5812:	89 81       	ldd	r24, Y+1	; 0x01
    5814:	9a 81       	ldd	r25, Y+2	; 0x02
    5816:	ab 81       	ldd	r26, Y+3	; 0x03
    5818:	bc 81       	ldd	r27, Y+4	; 0x04
    581a:	89 2b       	or	r24, r25
    581c:	8a 2b       	or	r24, r26
    581e:	8b 2b       	or	r24, r27
    5820:	69 f0       	breq	.+26     	; 0x583c <wait_1ms+0x3e>
    5822:	89 81       	ldd	r24, Y+1	; 0x01
    5824:	9a 81       	ldd	r25, Y+2	; 0x02
    5826:	ab 81       	ldd	r26, Y+3	; 0x03
    5828:	bc 81       	ldd	r27, Y+4	; 0x04
    582a:	80 93 36 03 	sts	0x0336, r24	; 0x800336 <tick_1ms_cnt>
    582e:	90 93 37 03 	sts	0x0337, r25	; 0x800337 <tick_1ms_cnt+0x1>
    5832:	a0 93 38 03 	sts	0x0338, r26	; 0x800338 <tick_1ms_cnt+0x2>
    5836:	b0 93 39 03 	sts	0x0339, r27	; 0x800339 <tick_1ms_cnt+0x3>
    583a:	0c c0       	rjmp	.+24     	; 0x5854 <wait_1ms+0x56>
    583c:	81 e0       	ldi	r24, 0x01	; 1
    583e:	90 e0       	ldi	r25, 0x00	; 0
    5840:	a0 e0       	ldi	r26, 0x00	; 0
    5842:	b0 e0       	ldi	r27, 0x00	; 0
    5844:	80 93 36 03 	sts	0x0336, r24	; 0x800336 <tick_1ms_cnt>
    5848:	90 93 37 03 	sts	0x0337, r25	; 0x800337 <tick_1ms_cnt+0x1>
    584c:	a0 93 38 03 	sts	0x0338, r26	; 0x800338 <tick_1ms_cnt+0x2>
    5850:	b0 93 39 03 	sts	0x0339, r27	; 0x800339 <tick_1ms_cnt+0x3>
    5854:	00 00       	nop
    5856:	80 91 36 03 	lds	r24, 0x0336	; 0x800336 <tick_1ms_cnt>
    585a:	90 91 37 03 	lds	r25, 0x0337	; 0x800337 <tick_1ms_cnt+0x1>
    585e:	a0 91 38 03 	lds	r26, 0x0338	; 0x800338 <tick_1ms_cnt+0x2>
    5862:	b0 91 39 03 	lds	r27, 0x0339	; 0x800339 <tick_1ms_cnt+0x3>
    5866:	89 2b       	or	r24, r25
    5868:	8a 2b       	or	r24, r26
    586a:	8b 2b       	or	r24, r27
    586c:	a1 f7       	brne	.-24     	; 0x5856 <wait_1ms+0x58>
    586e:	00 00       	nop
    5870:	0f 90       	pop	r0
    5872:	0f 90       	pop	r0
    5874:	0f 90       	pop	r0
    5876:	0f 90       	pop	r0
    5878:	df 91       	pop	r29
    587a:	cf 91       	pop	r28
    587c:	08 95       	ret

0000587e <delay_nop>:
    587e:	cf 93       	push	r28
    5880:	df 93       	push	r29
    5882:	00 d0       	rcall	.+0      	; 0x5884 <delay_nop+0x6>
    5884:	cd b7       	in	r28, 0x3d	; 61
    5886:	de b7       	in	r29, 0x3e	; 62
    5888:	8a 83       	std	Y+2, r24	; 0x02
    588a:	19 82       	std	Y+1, r1	; 0x01
    588c:	04 c0       	rjmp	.+8      	; 0x5896 <delay_nop+0x18>
    588e:	00 00       	nop
    5890:	89 81       	ldd	r24, Y+1	; 0x01
    5892:	8f 5f       	subi	r24, 0xFF	; 255
    5894:	89 83       	std	Y+1, r24	; 0x01
    5896:	99 81       	ldd	r25, Y+1	; 0x01
    5898:	8a 81       	ldd	r24, Y+2	; 0x02
    589a:	98 17       	cp	r25, r24
    589c:	c0 f3       	brcs	.-16     	; 0x588e <delay_nop+0x10>
    589e:	00 00       	nop
    58a0:	0f 90       	pop	r0
    58a2:	0f 90       	pop	r0
    58a4:	df 91       	pop	r29
    58a6:	cf 91       	pop	r28
    58a8:	08 95       	ret

000058aa <write_lcd_f>:
    58aa:	91 e0       	ldi	r25, 0x01	; 1
    58ac:	90 93 42 03 	sts	0x0342, r25	; 0x800342 <write_RGB_LCD_activ>
    58b0:	40 9a       	sbi	0x08, 0	; 8
    58b2:	41 98       	cbi	0x08, 1	; 8
    58b4:	41 98       	cbi	0x08, 1	; 8
    58b6:	41 9a       	sbi	0x08, 1	; 8
    58b8:	41 9a       	sbi	0x08, 1	; 8
    58ba:	41 98       	cbi	0x08, 1	; 8
    58bc:	41 98       	cbi	0x08, 1	; 8
    58be:	41 9a       	sbi	0x08, 1	; 8
    58c0:	41 9a       	sbi	0x08, 1	; 8
    58c2:	41 98       	cbi	0x08, 1	; 8
    58c4:	41 98       	cbi	0x08, 1	; 8
    58c6:	41 9a       	sbi	0x08, 1	; 8
    58c8:	41 9a       	sbi	0x08, 1	; 8
    58ca:	41 98       	cbi	0x08, 1	; 8
    58cc:	41 98       	cbi	0x08, 1	; 8
    58ce:	41 9a       	sbi	0x08, 1	; 8
    58d0:	41 9a       	sbi	0x08, 1	; 8
    58d2:	41 98       	cbi	0x08, 1	; 8
    58d4:	41 98       	cbi	0x08, 1	; 8
    58d6:	41 9a       	sbi	0x08, 1	; 8
    58d8:	40 98       	cbi	0x08, 0	; 8
    58da:	41 98       	cbi	0x08, 1	; 8
    58dc:	41 98       	cbi	0x08, 1	; 8
    58de:	41 9a       	sbi	0x08, 1	; 8
    58e0:	83 34       	cpi	r24, 0x43	; 67
    58e2:	a9 f1       	breq	.+106    	; 0x594e <write_lcd_f+0xa4>
    58e4:	40 9a       	sbi	0x08, 0	; 8
    58e6:	41 98       	cbi	0x08, 1	; 8
    58e8:	41 98       	cbi	0x08, 1	; 8
    58ea:	41 9a       	sbi	0x08, 1	; 8
    58ec:	40 98       	cbi	0x08, 0	; 8
    58ee:	41 98       	cbi	0x08, 1	; 8
    58f0:	41 98       	cbi	0x08, 1	; 8
    58f2:	41 9a       	sbi	0x08, 1	; 8
    58f4:	84 e0       	ldi	r24, 0x04	; 4
    58f6:	41 98       	cbi	0x08, 1	; 8
    58f8:	60 ff       	sbrs	r22, 0
    58fa:	27 c0       	rjmp	.+78     	; 0x594a <write_lcd_f+0xa0>
    58fc:	40 9a       	sbi	0x08, 0	; 8
    58fe:	66 95       	lsr	r22
    5900:	41 98       	cbi	0x08, 1	; 8
    5902:	41 9a       	sbi	0x08, 1	; 8
    5904:	81 50       	subi	r24, 0x01	; 1
    5906:	b9 f7       	brne	.-18     	; 0x58f6 <write_lcd_f+0x4c>
    5908:	40 98       	cbi	0x08, 0	; 8
    590a:	84 e0       	ldi	r24, 0x04	; 4
    590c:	41 98       	cbi	0x08, 1	; 8
    590e:	41 98       	cbi	0x08, 1	; 8
    5910:	41 9a       	sbi	0x08, 1	; 8
    5912:	81 50       	subi	r24, 0x01	; 1
    5914:	d9 f7       	brne	.-10     	; 0x590c <write_lcd_f+0x62>
    5916:	84 e0       	ldi	r24, 0x04	; 4
    5918:	41 98       	cbi	0x08, 1	; 8
    591a:	60 ff       	sbrs	r22, 0
    591c:	14 c0       	rjmp	.+40     	; 0x5946 <write_lcd_f+0x9c>
    591e:	40 9a       	sbi	0x08, 0	; 8
    5920:	66 95       	lsr	r22
    5922:	41 98       	cbi	0x08, 1	; 8
    5924:	41 9a       	sbi	0x08, 1	; 8
    5926:	81 50       	subi	r24, 0x01	; 1
    5928:	b9 f7       	brne	.-18     	; 0x5918 <write_lcd_f+0x6e>
    592a:	40 98       	cbi	0x08, 0	; 8
    592c:	84 e0       	ldi	r24, 0x04	; 4
    592e:	41 98       	cbi	0x08, 1	; 8
    5930:	41 98       	cbi	0x08, 1	; 8
    5932:	41 9a       	sbi	0x08, 1	; 8
    5934:	81 50       	subi	r24, 0x01	; 1
    5936:	d9 f7       	brne	.-10     	; 0x592e <write_lcd_f+0x84>
    5938:	84 e1       	ldi	r24, 0x14	; 20
    593a:	40 9a       	sbi	0x08, 0	; 8
    593c:	81 50       	subi	r24, 0x01	; 1
    593e:	e9 f7       	brne	.-6      	; 0x593a <write_lcd_f+0x90>
    5940:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <write_RGB_LCD_activ>
    5944:	08 95       	ret
    5946:	40 98       	cbi	0x08, 0	; 8
    5948:	eb cf       	rjmp	.-42     	; 0x5920 <write_lcd_f+0x76>
    594a:	40 98       	cbi	0x08, 0	; 8
    594c:	d8 cf       	rjmp	.-80     	; 0x58fe <write_lcd_f+0x54>
    594e:	40 98       	cbi	0x08, 0	; 8
    5950:	ca cf       	rjmp	.-108    	; 0x58e6 <write_lcd_f+0x3c>

00005952 <write_text>:
    5952:	0f 93       	push	r16
    5954:	1f 93       	push	r17
    5956:	df 93       	push	r29
    5958:	8a 01       	movw	r16, r20
    595a:	90 e2       	ldi	r25, 0x20	; 32
    595c:	89 9f       	mul	r24, r25
    595e:	60 0d       	add	r22, r0
    5960:	11 24       	eor	r1, r1
    5962:	60 68       	ori	r22, 0x80	; 128
    5964:	83 e4       	ldi	r24, 0x43	; 67
    5966:	0e 94 55 2c 	call	0x58aa	; 0x58aa <write_lcd_f>
    596a:	f8 01       	movw	r30, r16
    596c:	64 91       	lpm	r22, Z
    596e:	66 23       	and	r22, r22
    5970:	69 f0       	breq	.+26     	; 0x598c <write_text+0x3a>
    5972:	d1 e0       	ldi	r29, 0x01	; 1
    5974:	84 e4       	ldi	r24, 0x44	; 68
    5976:	0e 94 55 2c 	call	0x58aa	; 0x58aa <write_lcd_f>
    597a:	81 e0       	ldi	r24, 0x01	; 1
    597c:	8d 0f       	add	r24, r29
    597e:	f8 01       	movw	r30, r16
    5980:	ed 0f       	add	r30, r29
    5982:	f1 1d       	adc	r31, r1
    5984:	64 91       	lpm	r22, Z
    5986:	d8 2f       	mov	r29, r24
    5988:	61 11       	cpse	r22, r1
    598a:	f4 cf       	rjmp	.-24     	; 0x5974 <write_text+0x22>
    598c:	df 91       	pop	r29
    598e:	1f 91       	pop	r17
    5990:	0f 91       	pop	r16
    5992:	08 95       	ret

00005994 <write_text_ram>:
    5994:	0f 93       	push	r16
    5996:	1f 93       	push	r17
    5998:	df 93       	push	r29
    599a:	8a 01       	movw	r16, r20
    599c:	90 e2       	ldi	r25, 0x20	; 32
    599e:	89 9f       	mul	r24, r25
    59a0:	60 0d       	add	r22, r0
    59a2:	11 24       	eor	r1, r1
    59a4:	60 68       	ori	r22, 0x80	; 128
    59a6:	83 e4       	ldi	r24, 0x43	; 67
    59a8:	0e 94 55 2c 	call	0x58aa	; 0x58aa <write_lcd_f>
    59ac:	f8 01       	movw	r30, r16
    59ae:	60 81       	ld	r22, Z
    59b0:	66 23       	and	r22, r22
    59b2:	59 f0       	breq	.+22     	; 0x59ca <write_text_ram+0x36>
    59b4:	d0 e0       	ldi	r29, 0x00	; 0
    59b6:	df 5f       	subi	r29, 0xFF	; 255
    59b8:	84 e4       	ldi	r24, 0x44	; 68
    59ba:	0e 94 55 2c 	call	0x58aa	; 0x58aa <write_lcd_f>
    59be:	f8 01       	movw	r30, r16
    59c0:	ed 0f       	add	r30, r29
    59c2:	f1 1d       	adc	r31, r1
    59c4:	60 81       	ld	r22, Z
    59c6:	61 11       	cpse	r22, r1
    59c8:	f6 cf       	rjmp	.-20     	; 0x59b6 <write_text_ram+0x22>
    59ca:	df 91       	pop	r29
    59cc:	1f 91       	pop	r17
    59ce:	0f 91       	pop	r16
    59d0:	08 95       	ret

000059d2 <write_zahl>:
    59d2:	2f 92       	push	r2
    59d4:	3f 92       	push	r3
    59d6:	4f 92       	push	r4
    59d8:	5f 92       	push	r5
    59da:	6f 92       	push	r6
    59dc:	7f 92       	push	r7
    59de:	8f 92       	push	r8
    59e0:	9f 92       	push	r9
    59e2:	af 92       	push	r10
    59e4:	bf 92       	push	r11
    59e6:	cf 92       	push	r12
    59e8:	df 92       	push	r13
    59ea:	ef 92       	push	r14
    59ec:	ff 92       	push	r15
    59ee:	0f 93       	push	r16
    59f0:	1f 93       	push	r17
    59f2:	cf 93       	push	r28
    59f4:	df 93       	push	r29
    59f6:	cd b7       	in	r28, 0x3d	; 61
    59f8:	de b7       	in	r29, 0x3e	; 62
    59fa:	63 97       	sbiw	r28, 0x13	; 19
    59fc:	0f b6       	in	r0, 0x3f	; 63
    59fe:	f8 94       	cli
    5a00:	de bf       	out	0x3e, r29	; 62
    5a02:	0f be       	out	0x3f, r0	; 63
    5a04:	cd bf       	out	0x3d, r28	; 61
    5a06:	8a 8b       	std	Y+18, r24	; 0x12
    5a08:	6b 8b       	std	Y+19, r22	; 0x13
    5a0a:	29 01       	movw	r4, r18
    5a0c:	3a 01       	movw	r6, r20
    5a0e:	c8 8a       	std	Y+16, r12	; 0x10
    5a10:	04 36       	cpi	r16, 0x64	; 100
    5a12:	08 f4       	brcc	.+2      	; 0x5a16 <write_zahl+0x44>
    5a14:	bd c0       	rjmp	.+378    	; 0x5b90 <write_zahl+0x1be>
    5a16:	04 56       	subi	r16, 0x64	; 100
    5a18:	19 8a       	std	Y+17, r1	; 0x11
    5a1a:	0b 30       	cpi	r16, 0x0B	; 11
    5a1c:	08 f0       	brcs	.+2      	; 0x5a20 <write_zahl+0x4e>
    5a1e:	0a e0       	ldi	r16, 0x0A	; 10
    5a20:	ef 86       	std	Y+15, r14	; 0x0f
    5a22:	88 89       	ldd	r24, Y+16	; 0x10
    5a24:	8e 15       	cp	r24, r14
    5a26:	08 f4       	brcc	.+2      	; 0x5a2a <write_zahl+0x58>
    5a28:	8f 87       	std	Y+15, r24	; 0x0f
    5a2a:	20 2e       	mov	r2, r16
    5a2c:	31 2c       	mov	r3, r1
    5a2e:	c1 01       	movw	r24, r2
    5a30:	ef 85       	ldd	r30, Y+15	; 0x0f
    5a32:	8e 0f       	add	r24, r30
    5a34:	91 1d       	adc	r25, r1
    5a36:	0b 97       	sbiw	r24, 0x0b	; 11
    5a38:	1c f0       	brlt	.+6      	; 0x5a40 <write_zahl+0x6e>
    5a3a:	8a e0       	ldi	r24, 0x0A	; 10
    5a3c:	80 1b       	sub	r24, r16
    5a3e:	8f 87       	std	Y+15, r24	; 0x0f
    5a40:	c3 01       	movw	r24, r6
    5a42:	b2 01       	movw	r22, r4
    5a44:	2a e0       	ldi	r18, 0x0A	; 10
    5a46:	30 e0       	ldi	r19, 0x00	; 0
    5a48:	40 e0       	ldi	r20, 0x00	; 0
    5a4a:	50 e0       	ldi	r21, 0x00	; 0
    5a4c:	0e 94 d6 2f 	call	0x5fac	; 0x5fac <__udivmodsi4>
    5a50:	60 5d       	subi	r22, 0xD0	; 208
    5a52:	6c 87       	std	Y+12, r22	; 0x0c
    5a54:	1a e0       	ldi	r17, 0x0A	; 10
    5a56:	3a e0       	ldi	r19, 0x0A	; 10
    5a58:	c3 2e       	mov	r12, r19
    5a5a:	d1 2c       	mov	r13, r1
    5a5c:	e1 2c       	mov	r14, r1
    5a5e:	f1 2c       	mov	r15, r1
    5a60:	4a e0       	ldi	r20, 0x0A	; 10
    5a62:	84 2e       	mov	r8, r20
    5a64:	91 2c       	mov	r9, r1
    5a66:	a1 2c       	mov	r10, r1
    5a68:	b1 2c       	mov	r11, r1
    5a6a:	81 e0       	ldi	r24, 0x01	; 1
    5a6c:	90 e0       	ldi	r25, 0x00	; 0
    5a6e:	8c 0f       	add	r24, r28
    5a70:	9d 1f       	adc	r25, r29
    5a72:	81 0f       	add	r24, r17
    5a74:	91 1d       	adc	r25, r1
    5a76:	9e 87       	std	Y+14, r25	; 0x0e
    5a78:	8d 87       	std	Y+13, r24	; 0x0d
    5a7a:	c3 01       	movw	r24, r6
    5a7c:	b2 01       	movw	r22, r4
    5a7e:	a7 01       	movw	r20, r14
    5a80:	96 01       	movw	r18, r12
    5a82:	0e 94 d6 2f 	call	0x5fac	; 0x5fac <__udivmodsi4>
    5a86:	ca 01       	movw	r24, r20
    5a88:	b9 01       	movw	r22, r18
    5a8a:	a5 01       	movw	r20, r10
    5a8c:	94 01       	movw	r18, r8
    5a8e:	0e 94 d6 2f 	call	0x5fac	; 0x5fac <__udivmodsi4>
    5a92:	60 5d       	subi	r22, 0xD0	; 208
    5a94:	ed 85       	ldd	r30, Y+13	; 0x0d
    5a96:	fe 85       	ldd	r31, Y+14	; 0x0e
    5a98:	60 83       	st	Z, r22
    5a9a:	cc 0c       	add	r12, r12
    5a9c:	dd 1c       	adc	r13, r13
    5a9e:	ee 1c       	adc	r14, r14
    5aa0:	ff 1c       	adc	r15, r15
    5aa2:	d7 01       	movw	r26, r14
    5aa4:	c6 01       	movw	r24, r12
    5aa6:	88 0f       	add	r24, r24
    5aa8:	99 1f       	adc	r25, r25
    5aaa:	aa 1f       	adc	r26, r26
    5aac:	bb 1f       	adc	r27, r27
    5aae:	88 0f       	add	r24, r24
    5ab0:	99 1f       	adc	r25, r25
    5ab2:	aa 1f       	adc	r26, r26
    5ab4:	bb 1f       	adc	r27, r27
    5ab6:	c8 0e       	add	r12, r24
    5ab8:	d9 1e       	adc	r13, r25
    5aba:	ea 1e       	adc	r14, r26
    5abc:	fb 1e       	adc	r15, r27
    5abe:	11 50       	subi	r17, 0x01	; 1
    5ac0:	a0 f6       	brcc	.-88     	; 0x5a6a <write_zahl+0x98>
    5ac2:	2c e0       	ldi	r18, 0x0C	; 12
    5ac4:	f8 89       	ldd	r31, Y+16	; 0x10
    5ac6:	2f 1b       	sub	r18, r31
    5ac8:	82 2f       	mov	r24, r18
    5aca:	80 1b       	sub	r24, r16
    5acc:	00 23       	and	r16, r16
    5ace:	09 f4       	brne	.+2      	; 0x5ad2 <write_zahl+0x100>
    5ad0:	85 c0       	rjmp	.+266    	; 0x5bdc <write_zahl+0x20a>
    5ad2:	fe 01       	movw	r30, r28
    5ad4:	31 96       	adiw	r30, 0x01	; 1
    5ad6:	a1 e0       	ldi	r26, 0x01	; 1
    5ad8:	b0 e0       	ldi	r27, 0x00	; 0
    5ada:	ac 0f       	add	r26, r28
    5adc:	bd 1f       	adc	r27, r29
    5ade:	a8 0f       	add	r26, r24
    5ae0:	b1 1d       	adc	r27, r1
    5ae2:	9c 91       	ld	r25, X
    5ae4:	91 93       	st	Z+, r25
    5ae6:	8f 5f       	subi	r24, 0xFF	; 255
    5ae8:	28 13       	cpse	r18, r24
    5aea:	f5 cf       	rjmp	.-22     	; 0x5ad6 <write_zahl+0x104>
    5aec:	8f 85       	ldd	r24, Y+15	; 0x0f
    5aee:	81 11       	cpse	r24, r1
    5af0:	52 c0       	rjmp	.+164    	; 0x5b96 <write_zahl+0x1c4>
    5af2:	f1 01       	movw	r30, r2
    5af4:	81 e0       	ldi	r24, 0x01	; 1
    5af6:	90 e0       	ldi	r25, 0x00	; 0
    5af8:	8c 0f       	add	r24, r28
    5afa:	9d 1f       	adc	r25, r29
    5afc:	e8 0f       	add	r30, r24
    5afe:	f9 1f       	adc	r31, r25
    5b00:	10 82       	st	Z, r1
    5b02:	99 89       	ldd	r25, Y+17	; 0x11
    5b04:	99 23       	and	r25, r25
    5b06:	21 f1       	breq	.+72     	; 0x5b50 <write_zahl+0x17e>
    5b08:	89 81       	ldd	r24, Y+1	; 0x01
    5b0a:	80 33       	cpi	r24, 0x30	; 48
    5b0c:	09 f5       	brne	.+66     	; 0x5b50 <write_zahl+0x17e>
    5b0e:	a1 01       	movw	r20, r2
    5b10:	41 50       	subi	r20, 0x01	; 1
    5b12:	51 09       	sbc	r21, r1
    5b14:	14 16       	cp	r1, r20
    5b16:	15 06       	cpc	r1, r21
    5b18:	dc f4       	brge	.+54     	; 0x5b50 <write_zahl+0x17e>
    5b1a:	80 e0       	ldi	r24, 0x00	; 0
    5b1c:	90 e0       	ldi	r25, 0x00	; 0
    5b1e:	20 e0       	ldi	r18, 0x00	; 0
    5b20:	60 e2       	ldi	r22, 0x20	; 32
    5b22:	03 c0       	rjmp	.+6      	; 0x5b2a <write_zahl+0x158>
    5b24:	84 17       	cp	r24, r20
    5b26:	95 07       	cpc	r25, r21
    5b28:	9c f4       	brge	.+38     	; 0x5b50 <write_zahl+0x17e>
    5b2a:	2f 5f       	subi	r18, 0xFF	; 255
    5b2c:	e1 e0       	ldi	r30, 0x01	; 1
    5b2e:	f0 e0       	ldi	r31, 0x00	; 0
    5b30:	ec 0f       	add	r30, r28
    5b32:	fd 1f       	adc	r31, r29
    5b34:	e8 0f       	add	r30, r24
    5b36:	f9 1f       	adc	r31, r25
    5b38:	60 83       	st	Z, r22
    5b3a:	82 2f       	mov	r24, r18
    5b3c:	90 e0       	ldi	r25, 0x00	; 0
    5b3e:	e1 e0       	ldi	r30, 0x01	; 1
    5b40:	f0 e0       	ldi	r31, 0x00	; 0
    5b42:	ec 0f       	add	r30, r28
    5b44:	fd 1f       	adc	r31, r29
    5b46:	e8 0f       	add	r30, r24
    5b48:	f9 1f       	adc	r31, r25
    5b4a:	30 81       	ld	r19, Z
    5b4c:	30 33       	cpi	r19, 0x30	; 48
    5b4e:	51 f3       	breq	.-44     	; 0x5b24 <write_zahl+0x152>
    5b50:	ae 01       	movw	r20, r28
    5b52:	4f 5f       	subi	r20, 0xFF	; 255
    5b54:	5f 4f       	sbci	r21, 0xFF	; 255
    5b56:	6b 89       	ldd	r22, Y+19	; 0x13
    5b58:	8a 89       	ldd	r24, Y+18	; 0x12
    5b5a:	0e 94 ca 2c 	call	0x5994	; 0x5994 <write_text_ram>
    5b5e:	63 96       	adiw	r28, 0x13	; 19
    5b60:	0f b6       	in	r0, 0x3f	; 63
    5b62:	f8 94       	cli
    5b64:	de bf       	out	0x3e, r29	; 62
    5b66:	0f be       	out	0x3f, r0	; 63
    5b68:	cd bf       	out	0x3d, r28	; 61
    5b6a:	df 91       	pop	r29
    5b6c:	cf 91       	pop	r28
    5b6e:	1f 91       	pop	r17
    5b70:	0f 91       	pop	r16
    5b72:	ff 90       	pop	r15
    5b74:	ef 90       	pop	r14
    5b76:	df 90       	pop	r13
    5b78:	cf 90       	pop	r12
    5b7a:	bf 90       	pop	r11
    5b7c:	af 90       	pop	r10
    5b7e:	9f 90       	pop	r9
    5b80:	8f 90       	pop	r8
    5b82:	7f 90       	pop	r7
    5b84:	6f 90       	pop	r6
    5b86:	5f 90       	pop	r5
    5b88:	4f 90       	pop	r4
    5b8a:	3f 90       	pop	r3
    5b8c:	2f 90       	pop	r2
    5b8e:	08 95       	ret
    5b90:	21 e0       	ldi	r18, 0x01	; 1
    5b92:	29 8b       	std	Y+17, r18	; 0x11
    5b94:	42 cf       	rjmp	.-380    	; 0x5a1a <write_zahl+0x48>
    5b96:	0f 5f       	subi	r16, 0xFF	; 255
    5b98:	8e e2       	ldi	r24, 0x2E	; 46
    5b9a:	e1 e0       	ldi	r30, 0x01	; 1
    5b9c:	f0 e0       	ldi	r31, 0x00	; 0
    5b9e:	ec 0f       	add	r30, r28
    5ba0:	fd 1f       	adc	r31, r29
    5ba2:	e2 0d       	add	r30, r2
    5ba4:	f3 1d       	adc	r31, r3
    5ba6:	80 83       	st	Z, r24
    5ba8:	e0 2f       	mov	r30, r16
    5baa:	20 1b       	sub	r18, r16
    5bac:	82 2f       	mov	r24, r18
    5bae:	8e 0f       	add	r24, r30
    5bb0:	a1 e0       	ldi	r26, 0x01	; 1
    5bb2:	b0 e0       	ldi	r27, 0x00	; 0
    5bb4:	ac 0f       	add	r26, r28
    5bb6:	bd 1f       	adc	r27, r29
    5bb8:	a8 0f       	add	r26, r24
    5bba:	b1 1d       	adc	r27, r1
    5bbc:	8c 91       	ld	r24, X
    5bbe:	a1 e0       	ldi	r26, 0x01	; 1
    5bc0:	b0 e0       	ldi	r27, 0x00	; 0
    5bc2:	ac 0f       	add	r26, r28
    5bc4:	bd 1f       	adc	r27, r29
    5bc6:	ae 0f       	add	r26, r30
    5bc8:	b1 1d       	adc	r27, r1
    5bca:	8c 93       	st	X, r24
    5bcc:	ef 5f       	subi	r30, 0xFF	; 255
    5bce:	8e 2f       	mov	r24, r30
    5bd0:	80 1b       	sub	r24, r16
    5bd2:	9f 85       	ldd	r25, Y+15	; 0x0f
    5bd4:	89 17       	cp	r24, r25
    5bd6:	50 f3       	brcs	.-44     	; 0x5bac <write_zahl+0x1da>
    5bd8:	f0 e0       	ldi	r31, 0x00	; 0
    5bda:	8c cf       	rjmp	.-232    	; 0x5af4 <write_zahl+0x122>
    5bdc:	ef 85       	ldd	r30, Y+15	; 0x0f
    5bde:	ee 23       	and	r30, r30
    5be0:	21 f0       	breq	.+8      	; 0x5bea <write_zahl+0x218>
    5be2:	8e e2       	ldi	r24, 0x2E	; 46
    5be4:	89 83       	std	Y+1, r24	; 0x01
    5be6:	01 e0       	ldi	r16, 0x01	; 1
    5be8:	df cf       	rjmp	.-66     	; 0x5ba8 <write_zahl+0x1d6>
    5bea:	e0 e0       	ldi	r30, 0x00	; 0
    5bec:	f0 e0       	ldi	r31, 0x00	; 0
    5bee:	82 cf       	rjmp	.-252    	; 0x5af4 <write_zahl+0x122>

00005bf0 <lcd_init>:
    5bf0:	df 93       	push	r29
    5bf2:	38 9a       	sbi	0x07, 0	; 7
    5bf4:	39 9a       	sbi	0x07, 1	; 7
    5bf6:	d2 e3       	ldi	r29, 0x32	; 50
    5bf8:	88 e7       	ldi	r24, 0x78	; 120
    5bfa:	0e 94 3f 2c 	call	0x587e	; 0x587e <delay_nop>
    5bfe:	d1 50       	subi	r29, 0x01	; 1
    5c00:	d9 f7       	brne	.-10     	; 0x5bf8 <lcd_init+0x8>
    5c02:	64 e3       	ldi	r22, 0x34	; 52
    5c04:	83 e4       	ldi	r24, 0x43	; 67
    5c06:	0e 94 55 2c 	call	0x58aa	; 0x58aa <write_lcd_f>
    5c0a:	64 e3       	ldi	r22, 0x34	; 52
    5c0c:	83 e4       	ldi	r24, 0x43	; 67
    5c0e:	0e 94 55 2c 	call	0x58aa	; 0x58aa <write_lcd_f>
    5c12:	69 e0       	ldi	r22, 0x09	; 9
    5c14:	83 e4       	ldi	r24, 0x43	; 67
    5c16:	0e 94 55 2c 	call	0x58aa	; 0x58aa <write_lcd_f>
    5c1a:	60 e3       	ldi	r22, 0x30	; 48
    5c1c:	83 e4       	ldi	r24, 0x43	; 67
    5c1e:	0e 94 55 2c 	call	0x58aa	; 0x58aa <write_lcd_f>
    5c22:	6c e0       	ldi	r22, 0x0C	; 12
    5c24:	83 e4       	ldi	r24, 0x43	; 67
    5c26:	0e 94 55 2c 	call	0x58aa	; 0x58aa <write_lcd_f>
    5c2a:	61 e0       	ldi	r22, 0x01	; 1
    5c2c:	83 e4       	ldi	r24, 0x43	; 67
    5c2e:	0e 94 55 2c 	call	0x58aa	; 0x58aa <write_lcd_f>
    5c32:	d8 e0       	ldi	r29, 0x08	; 8
    5c34:	88 e7       	ldi	r24, 0x78	; 120
    5c36:	0e 94 3f 2c 	call	0x587e	; 0x587e <delay_nop>
    5c3a:	d1 50       	subi	r29, 0x01	; 1
    5c3c:	d9 f7       	brne	.-10     	; 0x5c34 <lcd_init+0x44>
    5c3e:	67 e0       	ldi	r22, 0x07	; 7
    5c40:	83 e4       	ldi	r24, 0x43	; 67
    5c42:	0e 94 55 2c 	call	0x58aa	; 0x58aa <write_lcd_f>
    5c46:	df 91       	pop	r29
    5c48:	0c 94 51 2b 	jmp	0x56a2	; 0x56a2 <init_Timer0_1ms_int>

00005c4c <clear_lcd>:
    5c4c:	df 93       	push	r29
    5c4e:	61 e0       	ldi	r22, 0x01	; 1
    5c50:	83 e4       	ldi	r24, 0x43	; 67
    5c52:	0e 94 55 2c 	call	0x58aa	; 0x58aa <write_lcd_f>
    5c56:	d8 e0       	ldi	r29, 0x08	; 8
    5c58:	88 e7       	ldi	r24, 0x78	; 120
    5c5a:	0e 94 3f 2c 	call	0x587e	; 0x587e <delay_nop>
    5c5e:	d1 50       	subi	r29, 0x01	; 1
    5c60:	d9 f7       	brne	.-10     	; 0x5c58 <clear_lcd+0xc>
    5c62:	df 91       	pop	r29
    5c64:	08 95       	ret

00005c66 <LED_Show>:
    5c66:	cf 93       	push	r28
    5c68:	df 93       	push	r29
    5c6a:	1f 92       	push	r1
    5c6c:	cd b7       	in	r28, 0x3d	; 61
    5c6e:	de b7       	in	r29, 0x3e	; 62
    5c70:	85 e2       	ldi	r24, 0x25	; 37
    5c72:	90 e0       	ldi	r25, 0x00	; 0
    5c74:	21 e0       	ldi	r18, 0x01	; 1
    5c76:	fc 01       	movw	r30, r24
    5c78:	20 83       	st	Z, r18
    5c7a:	19 82       	std	Y+1, r1	; 0x01
    5c7c:	17 c0       	rjmp	.+46     	; 0x5cac <LED_Show+0x46>
    5c7e:	62 e3       	ldi	r22, 0x32	; 50
    5c80:	70 e0       	ldi	r23, 0x00	; 0
    5c82:	80 e0       	ldi	r24, 0x00	; 0
    5c84:	90 e0       	ldi	r25, 0x00	; 0
    5c86:	0e 94 ff 2b 	call	0x57fe	; 0x57fe <wait_1ms>
    5c8a:	85 e2       	ldi	r24, 0x25	; 37
    5c8c:	90 e0       	ldi	r25, 0x00	; 0
    5c8e:	29 81       	ldd	r18, Y+1	; 0x01
    5c90:	42 2f       	mov	r20, r18
    5c92:	50 e0       	ldi	r21, 0x00	; 0
    5c94:	21 e0       	ldi	r18, 0x01	; 1
    5c96:	30 e0       	ldi	r19, 0x00	; 0
    5c98:	02 c0       	rjmp	.+4      	; 0x5c9e <LED_Show+0x38>
    5c9a:	22 0f       	add	r18, r18
    5c9c:	33 1f       	adc	r19, r19
    5c9e:	4a 95       	dec	r20
    5ca0:	e2 f7       	brpl	.-8      	; 0x5c9a <LED_Show+0x34>
    5ca2:	fc 01       	movw	r30, r24
    5ca4:	20 83       	st	Z, r18
    5ca6:	89 81       	ldd	r24, Y+1	; 0x01
    5ca8:	8f 5f       	subi	r24, 0xFF	; 255
    5caa:	89 83       	std	Y+1, r24	; 0x01
    5cac:	89 81       	ldd	r24, Y+1	; 0x01
    5cae:	88 30       	cpi	r24, 0x08	; 8
    5cb0:	30 f3       	brcs	.-52     	; 0x5c7e <LED_Show+0x18>
    5cb2:	85 e2       	ldi	r24, 0x25	; 37
    5cb4:	90 e0       	ldi	r25, 0x00	; 0
    5cb6:	20 e8       	ldi	r18, 0x80	; 128
    5cb8:	fc 01       	movw	r30, r24
    5cba:	20 83       	st	Z, r18
    5cbc:	19 82       	std	Y+1, r1	; 0x01
    5cbe:	17 c0       	rjmp	.+46     	; 0x5cee <LED_Show+0x88>
    5cc0:	62 e3       	ldi	r22, 0x32	; 50
    5cc2:	70 e0       	ldi	r23, 0x00	; 0
    5cc4:	80 e0       	ldi	r24, 0x00	; 0
    5cc6:	90 e0       	ldi	r25, 0x00	; 0
    5cc8:	0e 94 ff 2b 	call	0x57fe	; 0x57fe <wait_1ms>
    5ccc:	85 e2       	ldi	r24, 0x25	; 37
    5cce:	90 e0       	ldi	r25, 0x00	; 0
    5cd0:	29 81       	ldd	r18, Y+1	; 0x01
    5cd2:	42 2f       	mov	r20, r18
    5cd4:	50 e0       	ldi	r21, 0x00	; 0
    5cd6:	20 e8       	ldi	r18, 0x80	; 128
    5cd8:	30 e0       	ldi	r19, 0x00	; 0
    5cda:	02 c0       	rjmp	.+4      	; 0x5ce0 <LED_Show+0x7a>
    5cdc:	35 95       	asr	r19
    5cde:	27 95       	ror	r18
    5ce0:	4a 95       	dec	r20
    5ce2:	e2 f7       	brpl	.-8      	; 0x5cdc <LED_Show+0x76>
    5ce4:	fc 01       	movw	r30, r24
    5ce6:	20 83       	st	Z, r18
    5ce8:	89 81       	ldd	r24, Y+1	; 0x01
    5cea:	8f 5f       	subi	r24, 0xFF	; 255
    5cec:	89 83       	std	Y+1, r24	; 0x01
    5cee:	89 81       	ldd	r24, Y+1	; 0x01
    5cf0:	88 30       	cpi	r24, 0x08	; 8
    5cf2:	30 f3       	brcs	.-52     	; 0x5cc0 <LED_Show+0x5a>
    5cf4:	64 e6       	ldi	r22, 0x64	; 100
    5cf6:	70 e0       	ldi	r23, 0x00	; 0
    5cf8:	80 e0       	ldi	r24, 0x00	; 0
    5cfa:	90 e0       	ldi	r25, 0x00	; 0
    5cfc:	0e 94 ff 2b 	call	0x57fe	; 0x57fe <wait_1ms>
    5d00:	85 e2       	ldi	r24, 0x25	; 37
    5d02:	90 e0       	ldi	r25, 0x00	; 0
    5d04:	fc 01       	movw	r30, r24
    5d06:	10 82       	st	Z, r1
    5d08:	00 00       	nop
    5d0a:	0f 90       	pop	r0
    5d0c:	df 91       	pop	r29
    5d0e:	cf 91       	pop	r28
    5d10:	08 95       	ret

00005d12 <init_BT_CAR_V2_0>:
    5d12:	cf 93       	push	r28
    5d14:	df 93       	push	r29
    5d16:	cd b7       	in	r28, 0x3d	; 61
    5d18:	de b7       	in	r29, 0x3e	; 62
    5d1a:	81 e2       	ldi	r24, 0x21	; 33
    5d1c:	90 e0       	ldi	r25, 0x00	; 0
    5d1e:	20 e6       	ldi	r18, 0x60	; 96
    5d20:	fc 01       	movw	r30, r24
    5d22:	20 83       	st	Z, r18
    5d24:	84 e2       	ldi	r24, 0x24	; 36
    5d26:	90 e0       	ldi	r25, 0x00	; 0
    5d28:	2f ef       	ldi	r18, 0xFF	; 255
    5d2a:	fc 01       	movw	r30, r24
    5d2c:	20 83       	st	Z, r18
    5d2e:	8a e2       	ldi	r24, 0x2A	; 42
    5d30:	90 e0       	ldi	r25, 0x00	; 0
    5d32:	2c ef       	ldi	r18, 0xFC	; 252
    5d34:	fc 01       	movw	r30, r24
    5d36:	20 83       	st	Z, r18
    5d38:	78 94       	sei
    5d3a:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <lcd_init>
    5d3e:	0e 94 26 2e 	call	0x5c4c	; 0x5c4c <clear_lcd>
    5d42:	0e 94 33 2e 	call	0x5c66	; 0x5c66 <LED_Show>
    5d46:	00 00       	nop
    5d48:	df 91       	pop	r29
    5d4a:	cf 91       	pop	r28
    5d4c:	08 95       	ret

00005d4e <__cmpsf2>:
    5d4e:	0e 94 db 2e 	call	0x5db6	; 0x5db6 <__fp_cmp>
    5d52:	08 f4       	brcc	.+2      	; 0x5d56 <__cmpsf2+0x8>
    5d54:	81 e0       	ldi	r24, 0x01	; 1
    5d56:	08 95       	ret

00005d58 <__fixunssfsi>:
    5d58:	0e 94 07 2f 	call	0x5e0e	; 0x5e0e <__fp_splitA>
    5d5c:	88 f0       	brcs	.+34     	; 0x5d80 <__fixunssfsi+0x28>
    5d5e:	9f 57       	subi	r25, 0x7F	; 127
    5d60:	98 f0       	brcs	.+38     	; 0x5d88 <__fixunssfsi+0x30>
    5d62:	b9 2f       	mov	r27, r25
    5d64:	99 27       	eor	r25, r25
    5d66:	b7 51       	subi	r27, 0x17	; 23
    5d68:	b0 f0       	brcs	.+44     	; 0x5d96 <__fixunssfsi+0x3e>
    5d6a:	e1 f0       	breq	.+56     	; 0x5da4 <__fixunssfsi+0x4c>
    5d6c:	66 0f       	add	r22, r22
    5d6e:	77 1f       	adc	r23, r23
    5d70:	88 1f       	adc	r24, r24
    5d72:	99 1f       	adc	r25, r25
    5d74:	1a f0       	brmi	.+6      	; 0x5d7c <__fixunssfsi+0x24>
    5d76:	ba 95       	dec	r27
    5d78:	c9 f7       	brne	.-14     	; 0x5d6c <__fixunssfsi+0x14>
    5d7a:	14 c0       	rjmp	.+40     	; 0x5da4 <__fixunssfsi+0x4c>
    5d7c:	b1 30       	cpi	r27, 0x01	; 1
    5d7e:	91 f0       	breq	.+36     	; 0x5da4 <__fixunssfsi+0x4c>
    5d80:	0e 94 21 2f 	call	0x5e42	; 0x5e42 <__fp_zero>
    5d84:	b1 e0       	ldi	r27, 0x01	; 1
    5d86:	08 95       	ret
    5d88:	0c 94 21 2f 	jmp	0x5e42	; 0x5e42 <__fp_zero>
    5d8c:	67 2f       	mov	r22, r23
    5d8e:	78 2f       	mov	r23, r24
    5d90:	88 27       	eor	r24, r24
    5d92:	b8 5f       	subi	r27, 0xF8	; 248
    5d94:	39 f0       	breq	.+14     	; 0x5da4 <__fixunssfsi+0x4c>
    5d96:	b9 3f       	cpi	r27, 0xF9	; 249
    5d98:	cc f3       	brlt	.-14     	; 0x5d8c <__fixunssfsi+0x34>
    5d9a:	86 95       	lsr	r24
    5d9c:	77 95       	ror	r23
    5d9e:	67 95       	ror	r22
    5da0:	b3 95       	inc	r27
    5da2:	d9 f7       	brne	.-10     	; 0x5d9a <__fixunssfsi+0x42>
    5da4:	3e f4       	brtc	.+14     	; 0x5db4 <__fixunssfsi+0x5c>
    5da6:	90 95       	com	r25
    5da8:	80 95       	com	r24
    5daa:	70 95       	com	r23
    5dac:	61 95       	neg	r22
    5dae:	7f 4f       	sbci	r23, 0xFF	; 255
    5db0:	8f 4f       	sbci	r24, 0xFF	; 255
    5db2:	9f 4f       	sbci	r25, 0xFF	; 255
    5db4:	08 95       	ret

00005db6 <__fp_cmp>:
    5db6:	99 0f       	add	r25, r25
    5db8:	00 08       	sbc	r0, r0
    5dba:	55 0f       	add	r21, r21
    5dbc:	aa 0b       	sbc	r26, r26
    5dbe:	e0 e8       	ldi	r30, 0x80	; 128
    5dc0:	fe ef       	ldi	r31, 0xFE	; 254
    5dc2:	16 16       	cp	r1, r22
    5dc4:	17 06       	cpc	r1, r23
    5dc6:	e8 07       	cpc	r30, r24
    5dc8:	f9 07       	cpc	r31, r25
    5dca:	c0 f0       	brcs	.+48     	; 0x5dfc <__fp_cmp+0x46>
    5dcc:	12 16       	cp	r1, r18
    5dce:	13 06       	cpc	r1, r19
    5dd0:	e4 07       	cpc	r30, r20
    5dd2:	f5 07       	cpc	r31, r21
    5dd4:	98 f0       	brcs	.+38     	; 0x5dfc <__fp_cmp+0x46>
    5dd6:	62 1b       	sub	r22, r18
    5dd8:	73 0b       	sbc	r23, r19
    5dda:	84 0b       	sbc	r24, r20
    5ddc:	95 0b       	sbc	r25, r21
    5dde:	39 f4       	brne	.+14     	; 0x5dee <__fp_cmp+0x38>
    5de0:	0a 26       	eor	r0, r26
    5de2:	61 f0       	breq	.+24     	; 0x5dfc <__fp_cmp+0x46>
    5de4:	23 2b       	or	r18, r19
    5de6:	24 2b       	or	r18, r20
    5de8:	25 2b       	or	r18, r21
    5dea:	21 f4       	brne	.+8      	; 0x5df4 <__fp_cmp+0x3e>
    5dec:	08 95       	ret
    5dee:	0a 26       	eor	r0, r26
    5df0:	09 f4       	brne	.+2      	; 0x5df4 <__fp_cmp+0x3e>
    5df2:	a1 40       	sbci	r26, 0x01	; 1
    5df4:	a6 95       	lsr	r26
    5df6:	8f ef       	ldi	r24, 0xFF	; 255
    5df8:	81 1d       	adc	r24, r1
    5dfa:	81 1d       	adc	r24, r1
    5dfc:	08 95       	ret

00005dfe <__fp_split3>:
    5dfe:	57 fd       	sbrc	r21, 7
    5e00:	90 58       	subi	r25, 0x80	; 128
    5e02:	44 0f       	add	r20, r20
    5e04:	55 1f       	adc	r21, r21
    5e06:	59 f0       	breq	.+22     	; 0x5e1e <__fp_splitA+0x10>
    5e08:	5f 3f       	cpi	r21, 0xFF	; 255
    5e0a:	71 f0       	breq	.+28     	; 0x5e28 <__fp_splitA+0x1a>
    5e0c:	47 95       	ror	r20

00005e0e <__fp_splitA>:
    5e0e:	88 0f       	add	r24, r24
    5e10:	97 fb       	bst	r25, 7
    5e12:	99 1f       	adc	r25, r25
    5e14:	61 f0       	breq	.+24     	; 0x5e2e <__fp_splitA+0x20>
    5e16:	9f 3f       	cpi	r25, 0xFF	; 255
    5e18:	79 f0       	breq	.+30     	; 0x5e38 <__fp_splitA+0x2a>
    5e1a:	87 95       	ror	r24
    5e1c:	08 95       	ret
    5e1e:	12 16       	cp	r1, r18
    5e20:	13 06       	cpc	r1, r19
    5e22:	14 06       	cpc	r1, r20
    5e24:	55 1f       	adc	r21, r21
    5e26:	f2 cf       	rjmp	.-28     	; 0x5e0c <__fp_split3+0xe>
    5e28:	46 95       	lsr	r20
    5e2a:	f1 df       	rcall	.-30     	; 0x5e0e <__fp_splitA>
    5e2c:	08 c0       	rjmp	.+16     	; 0x5e3e <__fp_splitA+0x30>
    5e2e:	16 16       	cp	r1, r22
    5e30:	17 06       	cpc	r1, r23
    5e32:	18 06       	cpc	r1, r24
    5e34:	99 1f       	adc	r25, r25
    5e36:	f1 cf       	rjmp	.-30     	; 0x5e1a <__fp_splitA+0xc>
    5e38:	86 95       	lsr	r24
    5e3a:	71 05       	cpc	r23, r1
    5e3c:	61 05       	cpc	r22, r1
    5e3e:	08 94       	sec
    5e40:	08 95       	ret

00005e42 <__fp_zero>:
    5e42:	e8 94       	clt

00005e44 <__fp_szero>:
    5e44:	bb 27       	eor	r27, r27
    5e46:	66 27       	eor	r22, r22
    5e48:	77 27       	eor	r23, r23
    5e4a:	cb 01       	movw	r24, r22
    5e4c:	97 f9       	bld	r25, 7
    5e4e:	08 95       	ret

00005e50 <__gesf2>:
    5e50:	0e 94 db 2e 	call	0x5db6	; 0x5db6 <__fp_cmp>
    5e54:	08 f4       	brcc	.+2      	; 0x5e58 <__gesf2+0x8>
    5e56:	8f ef       	ldi	r24, 0xFF	; 255
    5e58:	08 95       	ret

00005e5a <__mulsf3>:
    5e5a:	0e 94 40 2f 	call	0x5e80	; 0x5e80 <__mulsf3x>
    5e5e:	0c 94 b1 2f 	jmp	0x5f62	; 0x5f62 <__fp_round>
    5e62:	0e 94 a3 2f 	call	0x5f46	; 0x5f46 <__fp_pscA>
    5e66:	38 f0       	brcs	.+14     	; 0x5e76 <__mulsf3+0x1c>
    5e68:	0e 94 aa 2f 	call	0x5f54	; 0x5f54 <__fp_pscB>
    5e6c:	20 f0       	brcs	.+8      	; 0x5e76 <__mulsf3+0x1c>
    5e6e:	95 23       	and	r25, r21
    5e70:	11 f0       	breq	.+4      	; 0x5e76 <__mulsf3+0x1c>
    5e72:	0c 94 9a 2f 	jmp	0x5f34	; 0x5f34 <__fp_inf>
    5e76:	0c 94 a0 2f 	jmp	0x5f40	; 0x5f40 <__fp_nan>
    5e7a:	11 24       	eor	r1, r1
    5e7c:	0c 94 22 2f 	jmp	0x5e44	; 0x5e44 <__fp_szero>

00005e80 <__mulsf3x>:
    5e80:	0e 94 ff 2e 	call	0x5dfe	; 0x5dfe <__fp_split3>
    5e84:	70 f3       	brcs	.-36     	; 0x5e62 <__mulsf3+0x8>

00005e86 <__mulsf3_pse>:
    5e86:	95 9f       	mul	r25, r21
    5e88:	c1 f3       	breq	.-16     	; 0x5e7a <__mulsf3+0x20>
    5e8a:	95 0f       	add	r25, r21
    5e8c:	50 e0       	ldi	r21, 0x00	; 0
    5e8e:	55 1f       	adc	r21, r21
    5e90:	62 9f       	mul	r22, r18
    5e92:	f0 01       	movw	r30, r0
    5e94:	72 9f       	mul	r23, r18
    5e96:	bb 27       	eor	r27, r27
    5e98:	f0 0d       	add	r31, r0
    5e9a:	b1 1d       	adc	r27, r1
    5e9c:	63 9f       	mul	r22, r19
    5e9e:	aa 27       	eor	r26, r26
    5ea0:	f0 0d       	add	r31, r0
    5ea2:	b1 1d       	adc	r27, r1
    5ea4:	aa 1f       	adc	r26, r26
    5ea6:	64 9f       	mul	r22, r20
    5ea8:	66 27       	eor	r22, r22
    5eaa:	b0 0d       	add	r27, r0
    5eac:	a1 1d       	adc	r26, r1
    5eae:	66 1f       	adc	r22, r22
    5eb0:	82 9f       	mul	r24, r18
    5eb2:	22 27       	eor	r18, r18
    5eb4:	b0 0d       	add	r27, r0
    5eb6:	a1 1d       	adc	r26, r1
    5eb8:	62 1f       	adc	r22, r18
    5eba:	73 9f       	mul	r23, r19
    5ebc:	b0 0d       	add	r27, r0
    5ebe:	a1 1d       	adc	r26, r1
    5ec0:	62 1f       	adc	r22, r18
    5ec2:	83 9f       	mul	r24, r19
    5ec4:	a0 0d       	add	r26, r0
    5ec6:	61 1d       	adc	r22, r1
    5ec8:	22 1f       	adc	r18, r18
    5eca:	74 9f       	mul	r23, r20
    5ecc:	33 27       	eor	r19, r19
    5ece:	a0 0d       	add	r26, r0
    5ed0:	61 1d       	adc	r22, r1
    5ed2:	23 1f       	adc	r18, r19
    5ed4:	84 9f       	mul	r24, r20
    5ed6:	60 0d       	add	r22, r0
    5ed8:	21 1d       	adc	r18, r1
    5eda:	82 2f       	mov	r24, r18
    5edc:	76 2f       	mov	r23, r22
    5ede:	6a 2f       	mov	r22, r26
    5ee0:	11 24       	eor	r1, r1
    5ee2:	9f 57       	subi	r25, 0x7F	; 127
    5ee4:	50 40       	sbci	r21, 0x00	; 0
    5ee6:	9a f0       	brmi	.+38     	; 0x5f0e <__mulsf3_pse+0x88>
    5ee8:	f1 f0       	breq	.+60     	; 0x5f26 <__mulsf3_pse+0xa0>
    5eea:	88 23       	and	r24, r24
    5eec:	4a f0       	brmi	.+18     	; 0x5f00 <__mulsf3_pse+0x7a>
    5eee:	ee 0f       	add	r30, r30
    5ef0:	ff 1f       	adc	r31, r31
    5ef2:	bb 1f       	adc	r27, r27
    5ef4:	66 1f       	adc	r22, r22
    5ef6:	77 1f       	adc	r23, r23
    5ef8:	88 1f       	adc	r24, r24
    5efa:	91 50       	subi	r25, 0x01	; 1
    5efc:	50 40       	sbci	r21, 0x00	; 0
    5efe:	a9 f7       	brne	.-22     	; 0x5eea <__mulsf3_pse+0x64>
    5f00:	9e 3f       	cpi	r25, 0xFE	; 254
    5f02:	51 05       	cpc	r21, r1
    5f04:	80 f0       	brcs	.+32     	; 0x5f26 <__mulsf3_pse+0xa0>
    5f06:	0c 94 9a 2f 	jmp	0x5f34	; 0x5f34 <__fp_inf>
    5f0a:	0c 94 22 2f 	jmp	0x5e44	; 0x5e44 <__fp_szero>
    5f0e:	5f 3f       	cpi	r21, 0xFF	; 255
    5f10:	e4 f3       	brlt	.-8      	; 0x5f0a <__mulsf3_pse+0x84>
    5f12:	98 3e       	cpi	r25, 0xE8	; 232
    5f14:	d4 f3       	brlt	.-12     	; 0x5f0a <__mulsf3_pse+0x84>
    5f16:	86 95       	lsr	r24
    5f18:	77 95       	ror	r23
    5f1a:	67 95       	ror	r22
    5f1c:	b7 95       	ror	r27
    5f1e:	f7 95       	ror	r31
    5f20:	e7 95       	ror	r30
    5f22:	9f 5f       	subi	r25, 0xFF	; 255
    5f24:	c1 f7       	brne	.-16     	; 0x5f16 <__mulsf3_pse+0x90>
    5f26:	fe 2b       	or	r31, r30
    5f28:	88 0f       	add	r24, r24
    5f2a:	91 1d       	adc	r25, r1
    5f2c:	96 95       	lsr	r25
    5f2e:	87 95       	ror	r24
    5f30:	97 f9       	bld	r25, 7
    5f32:	08 95       	ret

00005f34 <__fp_inf>:
    5f34:	97 f9       	bld	r25, 7
    5f36:	9f 67       	ori	r25, 0x7F	; 127
    5f38:	80 e8       	ldi	r24, 0x80	; 128
    5f3a:	70 e0       	ldi	r23, 0x00	; 0
    5f3c:	60 e0       	ldi	r22, 0x00	; 0
    5f3e:	08 95       	ret

00005f40 <__fp_nan>:
    5f40:	9f ef       	ldi	r25, 0xFF	; 255
    5f42:	80 ec       	ldi	r24, 0xC0	; 192
    5f44:	08 95       	ret

00005f46 <__fp_pscA>:
    5f46:	00 24       	eor	r0, r0
    5f48:	0a 94       	dec	r0
    5f4a:	16 16       	cp	r1, r22
    5f4c:	17 06       	cpc	r1, r23
    5f4e:	18 06       	cpc	r1, r24
    5f50:	09 06       	cpc	r0, r25
    5f52:	08 95       	ret

00005f54 <__fp_pscB>:
    5f54:	00 24       	eor	r0, r0
    5f56:	0a 94       	dec	r0
    5f58:	12 16       	cp	r1, r18
    5f5a:	13 06       	cpc	r1, r19
    5f5c:	14 06       	cpc	r1, r20
    5f5e:	05 06       	cpc	r0, r21
    5f60:	08 95       	ret

00005f62 <__fp_round>:
    5f62:	09 2e       	mov	r0, r25
    5f64:	03 94       	inc	r0
    5f66:	00 0c       	add	r0, r0
    5f68:	11 f4       	brne	.+4      	; 0x5f6e <__fp_round+0xc>
    5f6a:	88 23       	and	r24, r24
    5f6c:	52 f0       	brmi	.+20     	; 0x5f82 <__fp_round+0x20>
    5f6e:	bb 0f       	add	r27, r27
    5f70:	40 f4       	brcc	.+16     	; 0x5f82 <__fp_round+0x20>
    5f72:	bf 2b       	or	r27, r31
    5f74:	11 f4       	brne	.+4      	; 0x5f7a <__fp_round+0x18>
    5f76:	60 ff       	sbrs	r22, 0
    5f78:	04 c0       	rjmp	.+8      	; 0x5f82 <__fp_round+0x20>
    5f7a:	6f 5f       	subi	r22, 0xFF	; 255
    5f7c:	7f 4f       	sbci	r23, 0xFF	; 255
    5f7e:	8f 4f       	sbci	r24, 0xFF	; 255
    5f80:	9f 4f       	sbci	r25, 0xFF	; 255
    5f82:	08 95       	ret

00005f84 <__divmodhi4>:
    5f84:	97 fb       	bst	r25, 7
    5f86:	07 2e       	mov	r0, r23
    5f88:	16 f4       	brtc	.+4      	; 0x5f8e <__divmodhi4+0xa>
    5f8a:	00 94       	com	r0
    5f8c:	07 d0       	rcall	.+14     	; 0x5f9c <__divmodhi4_neg1>
    5f8e:	77 fd       	sbrc	r23, 7
    5f90:	09 d0       	rcall	.+18     	; 0x5fa4 <__divmodhi4_neg2>
    5f92:	0e 94 fe 2f 	call	0x5ffc	; 0x5ffc <__udivmodhi4>
    5f96:	07 fc       	sbrc	r0, 7
    5f98:	05 d0       	rcall	.+10     	; 0x5fa4 <__divmodhi4_neg2>
    5f9a:	3e f4       	brtc	.+14     	; 0x5faa <__divmodhi4_exit>

00005f9c <__divmodhi4_neg1>:
    5f9c:	90 95       	com	r25
    5f9e:	81 95       	neg	r24
    5fa0:	9f 4f       	sbci	r25, 0xFF	; 255
    5fa2:	08 95       	ret

00005fa4 <__divmodhi4_neg2>:
    5fa4:	70 95       	com	r23
    5fa6:	61 95       	neg	r22
    5fa8:	7f 4f       	sbci	r23, 0xFF	; 255

00005faa <__divmodhi4_exit>:
    5faa:	08 95       	ret

00005fac <__udivmodsi4>:
    5fac:	a1 e2       	ldi	r26, 0x21	; 33
    5fae:	1a 2e       	mov	r1, r26
    5fb0:	aa 1b       	sub	r26, r26
    5fb2:	bb 1b       	sub	r27, r27
    5fb4:	fd 01       	movw	r30, r26
    5fb6:	0d c0       	rjmp	.+26     	; 0x5fd2 <__udivmodsi4_ep>

00005fb8 <__udivmodsi4_loop>:
    5fb8:	aa 1f       	adc	r26, r26
    5fba:	bb 1f       	adc	r27, r27
    5fbc:	ee 1f       	adc	r30, r30
    5fbe:	ff 1f       	adc	r31, r31
    5fc0:	a2 17       	cp	r26, r18
    5fc2:	b3 07       	cpc	r27, r19
    5fc4:	e4 07       	cpc	r30, r20
    5fc6:	f5 07       	cpc	r31, r21
    5fc8:	20 f0       	brcs	.+8      	; 0x5fd2 <__udivmodsi4_ep>
    5fca:	a2 1b       	sub	r26, r18
    5fcc:	b3 0b       	sbc	r27, r19
    5fce:	e4 0b       	sbc	r30, r20
    5fd0:	f5 0b       	sbc	r31, r21

00005fd2 <__udivmodsi4_ep>:
    5fd2:	66 1f       	adc	r22, r22
    5fd4:	77 1f       	adc	r23, r23
    5fd6:	88 1f       	adc	r24, r24
    5fd8:	99 1f       	adc	r25, r25
    5fda:	1a 94       	dec	r1
    5fdc:	69 f7       	brne	.-38     	; 0x5fb8 <__udivmodsi4_loop>
    5fde:	60 95       	com	r22
    5fe0:	70 95       	com	r23
    5fe2:	80 95       	com	r24
    5fe4:	90 95       	com	r25
    5fe6:	9b 01       	movw	r18, r22
    5fe8:	ac 01       	movw	r20, r24
    5fea:	bd 01       	movw	r22, r26
    5fec:	cf 01       	movw	r24, r30
    5fee:	08 95       	ret

00005ff0 <__tablejump2__>:
    5ff0:	ee 0f       	add	r30, r30
    5ff2:	ff 1f       	adc	r31, r31
    5ff4:	05 90       	lpm	r0, Z+
    5ff6:	f4 91       	lpm	r31, Z
    5ff8:	e0 2d       	mov	r30, r0
    5ffa:	09 94       	ijmp

00005ffc <__udivmodhi4>:
    5ffc:	aa 1b       	sub	r26, r26
    5ffe:	bb 1b       	sub	r27, r27
    6000:	51 e1       	ldi	r21, 0x11	; 17
    6002:	07 c0       	rjmp	.+14     	; 0x6012 <__udivmodhi4_ep>

00006004 <__udivmodhi4_loop>:
    6004:	aa 1f       	adc	r26, r26
    6006:	bb 1f       	adc	r27, r27
    6008:	a6 17       	cp	r26, r22
    600a:	b7 07       	cpc	r27, r23
    600c:	10 f0       	brcs	.+4      	; 0x6012 <__udivmodhi4_ep>
    600e:	a6 1b       	sub	r26, r22
    6010:	b7 0b       	sbc	r27, r23

00006012 <__udivmodhi4_ep>:
    6012:	88 1f       	adc	r24, r24
    6014:	99 1f       	adc	r25, r25
    6016:	5a 95       	dec	r21
    6018:	a9 f7       	brne	.-22     	; 0x6004 <__udivmodhi4_loop>
    601a:	80 95       	com	r24
    601c:	90 95       	com	r25
    601e:	bc 01       	movw	r22, r24
    6020:	cd 01       	movw	r24, r26
    6022:	08 95       	ret

00006024 <snprintf>:
    6024:	ae e0       	ldi	r26, 0x0E	; 14
    6026:	b0 e0       	ldi	r27, 0x00	; 0
    6028:	e8 e1       	ldi	r30, 0x18	; 24
    602a:	f0 e3       	ldi	r31, 0x30	; 48
    602c:	0c 94 e1 32 	jmp	0x65c2	; 0x65c2 <__prologue_saves__+0x1c>
    6030:	0d 89       	ldd	r16, Y+21	; 0x15
    6032:	1e 89       	ldd	r17, Y+22	; 0x16
    6034:	8f 89       	ldd	r24, Y+23	; 0x17
    6036:	98 8d       	ldd	r25, Y+24	; 0x18
    6038:	26 e0       	ldi	r18, 0x06	; 6
    603a:	2c 83       	std	Y+4, r18	; 0x04
    603c:	1a 83       	std	Y+2, r17	; 0x02
    603e:	09 83       	std	Y+1, r16	; 0x01
    6040:	97 ff       	sbrs	r25, 7
    6042:	02 c0       	rjmp	.+4      	; 0x6048 <snprintf+0x24>
    6044:	80 e0       	ldi	r24, 0x00	; 0
    6046:	90 e8       	ldi	r25, 0x80	; 128
    6048:	01 97       	sbiw	r24, 0x01	; 1
    604a:	9e 83       	std	Y+6, r25	; 0x06
    604c:	8d 83       	std	Y+5, r24	; 0x05
    604e:	ae 01       	movw	r20, r28
    6050:	45 5e       	subi	r20, 0xE5	; 229
    6052:	5f 4f       	sbci	r21, 0xFF	; 255
    6054:	69 8d       	ldd	r22, Y+25	; 0x19
    6056:	7a 8d       	ldd	r23, Y+26	; 0x1a
    6058:	ce 01       	movw	r24, r28
    605a:	01 96       	adiw	r24, 0x01	; 1
    605c:	0e 94 42 30 	call	0x6084	; 0x6084 <vfprintf>
    6060:	4d 81       	ldd	r20, Y+5	; 0x05
    6062:	5e 81       	ldd	r21, Y+6	; 0x06
    6064:	57 fd       	sbrc	r21, 7
    6066:	0a c0       	rjmp	.+20     	; 0x607c <snprintf+0x58>
    6068:	2f 81       	ldd	r18, Y+7	; 0x07
    606a:	38 85       	ldd	r19, Y+8	; 0x08
    606c:	42 17       	cp	r20, r18
    606e:	53 07       	cpc	r21, r19
    6070:	0c f4       	brge	.+2      	; 0x6074 <snprintf+0x50>
    6072:	9a 01       	movw	r18, r20
    6074:	f8 01       	movw	r30, r16
    6076:	e2 0f       	add	r30, r18
    6078:	f3 1f       	adc	r31, r19
    607a:	10 82       	st	Z, r1
    607c:	2e 96       	adiw	r28, 0x0e	; 14
    607e:	e4 e0       	ldi	r30, 0x04	; 4
    6080:	0c 94 fd 32 	jmp	0x65fa	; 0x65fa <__epilogue_restores__+0x1c>

00006084 <vfprintf>:
    6084:	ab e0       	ldi	r26, 0x0B	; 11
    6086:	b0 e0       	ldi	r27, 0x00	; 0
    6088:	e8 e4       	ldi	r30, 0x48	; 72
    608a:	f0 e3       	ldi	r31, 0x30	; 48
    608c:	0c 94 d3 32 	jmp	0x65a6	; 0x65a6 <__prologue_saves__>
    6090:	6c 01       	movw	r12, r24
    6092:	7b 01       	movw	r14, r22
    6094:	8a 01       	movw	r16, r20
    6096:	fc 01       	movw	r30, r24
    6098:	17 82       	std	Z+7, r1	; 0x07
    609a:	16 82       	std	Z+6, r1	; 0x06
    609c:	83 81       	ldd	r24, Z+3	; 0x03
    609e:	81 ff       	sbrs	r24, 1
    60a0:	cc c1       	rjmp	.+920    	; 0x643a <vfprintf+0x3b6>
    60a2:	ce 01       	movw	r24, r28
    60a4:	01 96       	adiw	r24, 0x01	; 1
    60a6:	3c 01       	movw	r6, r24
    60a8:	f6 01       	movw	r30, r12
    60aa:	93 81       	ldd	r25, Z+3	; 0x03
    60ac:	f7 01       	movw	r30, r14
    60ae:	93 fd       	sbrc	r25, 3
    60b0:	85 91       	lpm	r24, Z+
    60b2:	93 ff       	sbrs	r25, 3
    60b4:	81 91       	ld	r24, Z+
    60b6:	7f 01       	movw	r14, r30
    60b8:	88 23       	and	r24, r24
    60ba:	09 f4       	brne	.+2      	; 0x60be <vfprintf+0x3a>
    60bc:	ba c1       	rjmp	.+884    	; 0x6432 <vfprintf+0x3ae>
    60be:	85 32       	cpi	r24, 0x25	; 37
    60c0:	39 f4       	brne	.+14     	; 0x60d0 <vfprintf+0x4c>
    60c2:	93 fd       	sbrc	r25, 3
    60c4:	85 91       	lpm	r24, Z+
    60c6:	93 ff       	sbrs	r25, 3
    60c8:	81 91       	ld	r24, Z+
    60ca:	7f 01       	movw	r14, r30
    60cc:	85 32       	cpi	r24, 0x25	; 37
    60ce:	29 f4       	brne	.+10     	; 0x60da <vfprintf+0x56>
    60d0:	b6 01       	movw	r22, r12
    60d2:	90 e0       	ldi	r25, 0x00	; 0
    60d4:	0e 94 39 32 	call	0x6472	; 0x6472 <fputc>
    60d8:	e7 cf       	rjmp	.-50     	; 0x60a8 <vfprintf+0x24>
    60da:	91 2c       	mov	r9, r1
    60dc:	21 2c       	mov	r2, r1
    60de:	31 2c       	mov	r3, r1
    60e0:	ff e1       	ldi	r31, 0x1F	; 31
    60e2:	f3 15       	cp	r31, r3
    60e4:	d8 f0       	brcs	.+54     	; 0x611c <vfprintf+0x98>
    60e6:	8b 32       	cpi	r24, 0x2B	; 43
    60e8:	79 f0       	breq	.+30     	; 0x6108 <vfprintf+0x84>
    60ea:	38 f4       	brcc	.+14     	; 0x60fa <vfprintf+0x76>
    60ec:	80 32       	cpi	r24, 0x20	; 32
    60ee:	79 f0       	breq	.+30     	; 0x610e <vfprintf+0x8a>
    60f0:	83 32       	cpi	r24, 0x23	; 35
    60f2:	a1 f4       	brne	.+40     	; 0x611c <vfprintf+0x98>
    60f4:	23 2d       	mov	r18, r3
    60f6:	20 61       	ori	r18, 0x10	; 16
    60f8:	1d c0       	rjmp	.+58     	; 0x6134 <vfprintf+0xb0>
    60fa:	8d 32       	cpi	r24, 0x2D	; 45
    60fc:	61 f0       	breq	.+24     	; 0x6116 <vfprintf+0x92>
    60fe:	80 33       	cpi	r24, 0x30	; 48
    6100:	69 f4       	brne	.+26     	; 0x611c <vfprintf+0x98>
    6102:	23 2d       	mov	r18, r3
    6104:	21 60       	ori	r18, 0x01	; 1
    6106:	16 c0       	rjmp	.+44     	; 0x6134 <vfprintf+0xb0>
    6108:	83 2d       	mov	r24, r3
    610a:	82 60       	ori	r24, 0x02	; 2
    610c:	38 2e       	mov	r3, r24
    610e:	e3 2d       	mov	r30, r3
    6110:	e4 60       	ori	r30, 0x04	; 4
    6112:	3e 2e       	mov	r3, r30
    6114:	2a c0       	rjmp	.+84     	; 0x616a <vfprintf+0xe6>
    6116:	f3 2d       	mov	r31, r3
    6118:	f8 60       	ori	r31, 0x08	; 8
    611a:	1d c0       	rjmp	.+58     	; 0x6156 <vfprintf+0xd2>
    611c:	37 fc       	sbrc	r3, 7
    611e:	2d c0       	rjmp	.+90     	; 0x617a <vfprintf+0xf6>
    6120:	20 ed       	ldi	r18, 0xD0	; 208
    6122:	28 0f       	add	r18, r24
    6124:	2a 30       	cpi	r18, 0x0A	; 10
    6126:	40 f0       	brcs	.+16     	; 0x6138 <vfprintf+0xb4>
    6128:	8e 32       	cpi	r24, 0x2E	; 46
    612a:	b9 f4       	brne	.+46     	; 0x615a <vfprintf+0xd6>
    612c:	36 fc       	sbrc	r3, 6
    612e:	81 c1       	rjmp	.+770    	; 0x6432 <vfprintf+0x3ae>
    6130:	23 2d       	mov	r18, r3
    6132:	20 64       	ori	r18, 0x40	; 64
    6134:	32 2e       	mov	r3, r18
    6136:	19 c0       	rjmp	.+50     	; 0x616a <vfprintf+0xe6>
    6138:	36 fe       	sbrs	r3, 6
    613a:	06 c0       	rjmp	.+12     	; 0x6148 <vfprintf+0xc4>
    613c:	8a e0       	ldi	r24, 0x0A	; 10
    613e:	98 9e       	mul	r9, r24
    6140:	20 0d       	add	r18, r0
    6142:	11 24       	eor	r1, r1
    6144:	92 2e       	mov	r9, r18
    6146:	11 c0       	rjmp	.+34     	; 0x616a <vfprintf+0xe6>
    6148:	ea e0       	ldi	r30, 0x0A	; 10
    614a:	2e 9e       	mul	r2, r30
    614c:	20 0d       	add	r18, r0
    614e:	11 24       	eor	r1, r1
    6150:	22 2e       	mov	r2, r18
    6152:	f3 2d       	mov	r31, r3
    6154:	f0 62       	ori	r31, 0x20	; 32
    6156:	3f 2e       	mov	r3, r31
    6158:	08 c0       	rjmp	.+16     	; 0x616a <vfprintf+0xe6>
    615a:	8c 36       	cpi	r24, 0x6C	; 108
    615c:	21 f4       	brne	.+8      	; 0x6166 <vfprintf+0xe2>
    615e:	83 2d       	mov	r24, r3
    6160:	80 68       	ori	r24, 0x80	; 128
    6162:	38 2e       	mov	r3, r24
    6164:	02 c0       	rjmp	.+4      	; 0x616a <vfprintf+0xe6>
    6166:	88 36       	cpi	r24, 0x68	; 104
    6168:	41 f4       	brne	.+16     	; 0x617a <vfprintf+0xf6>
    616a:	f7 01       	movw	r30, r14
    616c:	93 fd       	sbrc	r25, 3
    616e:	85 91       	lpm	r24, Z+
    6170:	93 ff       	sbrs	r25, 3
    6172:	81 91       	ld	r24, Z+
    6174:	7f 01       	movw	r14, r30
    6176:	81 11       	cpse	r24, r1
    6178:	b3 cf       	rjmp	.-154    	; 0x60e0 <vfprintf+0x5c>
    617a:	98 2f       	mov	r25, r24
    617c:	9f 7d       	andi	r25, 0xDF	; 223
    617e:	95 54       	subi	r25, 0x45	; 69
    6180:	93 30       	cpi	r25, 0x03	; 3
    6182:	28 f4       	brcc	.+10     	; 0x618e <vfprintf+0x10a>
    6184:	0c 5f       	subi	r16, 0xFC	; 252
    6186:	1f 4f       	sbci	r17, 0xFF	; 255
    6188:	9f e3       	ldi	r25, 0x3F	; 63
    618a:	99 83       	std	Y+1, r25	; 0x01
    618c:	0d c0       	rjmp	.+26     	; 0x61a8 <vfprintf+0x124>
    618e:	83 36       	cpi	r24, 0x63	; 99
    6190:	31 f0       	breq	.+12     	; 0x619e <vfprintf+0x11a>
    6192:	83 37       	cpi	r24, 0x73	; 115
    6194:	71 f0       	breq	.+28     	; 0x61b2 <vfprintf+0x12e>
    6196:	83 35       	cpi	r24, 0x53	; 83
    6198:	09 f0       	breq	.+2      	; 0x619c <vfprintf+0x118>
    619a:	59 c0       	rjmp	.+178    	; 0x624e <vfprintf+0x1ca>
    619c:	21 c0       	rjmp	.+66     	; 0x61e0 <vfprintf+0x15c>
    619e:	f8 01       	movw	r30, r16
    61a0:	80 81       	ld	r24, Z
    61a2:	89 83       	std	Y+1, r24	; 0x01
    61a4:	0e 5f       	subi	r16, 0xFE	; 254
    61a6:	1f 4f       	sbci	r17, 0xFF	; 255
    61a8:	88 24       	eor	r8, r8
    61aa:	83 94       	inc	r8
    61ac:	91 2c       	mov	r9, r1
    61ae:	53 01       	movw	r10, r6
    61b0:	13 c0       	rjmp	.+38     	; 0x61d8 <vfprintf+0x154>
    61b2:	28 01       	movw	r4, r16
    61b4:	f2 e0       	ldi	r31, 0x02	; 2
    61b6:	4f 0e       	add	r4, r31
    61b8:	51 1c       	adc	r5, r1
    61ba:	f8 01       	movw	r30, r16
    61bc:	a0 80       	ld	r10, Z
    61be:	b1 80       	ldd	r11, Z+1	; 0x01
    61c0:	36 fe       	sbrs	r3, 6
    61c2:	03 c0       	rjmp	.+6      	; 0x61ca <vfprintf+0x146>
    61c4:	69 2d       	mov	r22, r9
    61c6:	70 e0       	ldi	r23, 0x00	; 0
    61c8:	02 c0       	rjmp	.+4      	; 0x61ce <vfprintf+0x14a>
    61ca:	6f ef       	ldi	r22, 0xFF	; 255
    61cc:	7f ef       	ldi	r23, 0xFF	; 255
    61ce:	c5 01       	movw	r24, r10
    61d0:	0e 94 2e 32 	call	0x645c	; 0x645c <strnlen>
    61d4:	4c 01       	movw	r8, r24
    61d6:	82 01       	movw	r16, r4
    61d8:	f3 2d       	mov	r31, r3
    61da:	ff 77       	andi	r31, 0x7F	; 127
    61dc:	3f 2e       	mov	r3, r31
    61de:	16 c0       	rjmp	.+44     	; 0x620c <vfprintf+0x188>
    61e0:	28 01       	movw	r4, r16
    61e2:	22 e0       	ldi	r18, 0x02	; 2
    61e4:	42 0e       	add	r4, r18
    61e6:	51 1c       	adc	r5, r1
    61e8:	f8 01       	movw	r30, r16
    61ea:	a0 80       	ld	r10, Z
    61ec:	b1 80       	ldd	r11, Z+1	; 0x01
    61ee:	36 fe       	sbrs	r3, 6
    61f0:	03 c0       	rjmp	.+6      	; 0x61f8 <vfprintf+0x174>
    61f2:	69 2d       	mov	r22, r9
    61f4:	70 e0       	ldi	r23, 0x00	; 0
    61f6:	02 c0       	rjmp	.+4      	; 0x61fc <vfprintf+0x178>
    61f8:	6f ef       	ldi	r22, 0xFF	; 255
    61fa:	7f ef       	ldi	r23, 0xFF	; 255
    61fc:	c5 01       	movw	r24, r10
    61fe:	0e 94 23 32 	call	0x6446	; 0x6446 <strnlen_P>
    6202:	4c 01       	movw	r8, r24
    6204:	f3 2d       	mov	r31, r3
    6206:	f0 68       	ori	r31, 0x80	; 128
    6208:	3f 2e       	mov	r3, r31
    620a:	82 01       	movw	r16, r4
    620c:	33 fc       	sbrc	r3, 3
    620e:	1b c0       	rjmp	.+54     	; 0x6246 <vfprintf+0x1c2>
    6210:	82 2d       	mov	r24, r2
    6212:	90 e0       	ldi	r25, 0x00	; 0
    6214:	88 16       	cp	r8, r24
    6216:	99 06       	cpc	r9, r25
    6218:	b0 f4       	brcc	.+44     	; 0x6246 <vfprintf+0x1c2>
    621a:	b6 01       	movw	r22, r12
    621c:	80 e2       	ldi	r24, 0x20	; 32
    621e:	90 e0       	ldi	r25, 0x00	; 0
    6220:	0e 94 39 32 	call	0x6472	; 0x6472 <fputc>
    6224:	2a 94       	dec	r2
    6226:	f4 cf       	rjmp	.-24     	; 0x6210 <vfprintf+0x18c>
    6228:	f5 01       	movw	r30, r10
    622a:	37 fc       	sbrc	r3, 7
    622c:	85 91       	lpm	r24, Z+
    622e:	37 fe       	sbrs	r3, 7
    6230:	81 91       	ld	r24, Z+
    6232:	5f 01       	movw	r10, r30
    6234:	b6 01       	movw	r22, r12
    6236:	90 e0       	ldi	r25, 0x00	; 0
    6238:	0e 94 39 32 	call	0x6472	; 0x6472 <fputc>
    623c:	21 10       	cpse	r2, r1
    623e:	2a 94       	dec	r2
    6240:	21 e0       	ldi	r18, 0x01	; 1
    6242:	82 1a       	sub	r8, r18
    6244:	91 08       	sbc	r9, r1
    6246:	81 14       	cp	r8, r1
    6248:	91 04       	cpc	r9, r1
    624a:	71 f7       	brne	.-36     	; 0x6228 <vfprintf+0x1a4>
    624c:	e8 c0       	rjmp	.+464    	; 0x641e <vfprintf+0x39a>
    624e:	84 36       	cpi	r24, 0x64	; 100
    6250:	11 f0       	breq	.+4      	; 0x6256 <vfprintf+0x1d2>
    6252:	89 36       	cpi	r24, 0x69	; 105
    6254:	41 f5       	brne	.+80     	; 0x62a6 <vfprintf+0x222>
    6256:	f8 01       	movw	r30, r16
    6258:	37 fe       	sbrs	r3, 7
    625a:	07 c0       	rjmp	.+14     	; 0x626a <vfprintf+0x1e6>
    625c:	60 81       	ld	r22, Z
    625e:	71 81       	ldd	r23, Z+1	; 0x01
    6260:	82 81       	ldd	r24, Z+2	; 0x02
    6262:	93 81       	ldd	r25, Z+3	; 0x03
    6264:	0c 5f       	subi	r16, 0xFC	; 252
    6266:	1f 4f       	sbci	r17, 0xFF	; 255
    6268:	08 c0       	rjmp	.+16     	; 0x627a <vfprintf+0x1f6>
    626a:	60 81       	ld	r22, Z
    626c:	71 81       	ldd	r23, Z+1	; 0x01
    626e:	07 2e       	mov	r0, r23
    6270:	00 0c       	add	r0, r0
    6272:	88 0b       	sbc	r24, r24
    6274:	99 0b       	sbc	r25, r25
    6276:	0e 5f       	subi	r16, 0xFE	; 254
    6278:	1f 4f       	sbci	r17, 0xFF	; 255
    627a:	f3 2d       	mov	r31, r3
    627c:	ff 76       	andi	r31, 0x6F	; 111
    627e:	3f 2e       	mov	r3, r31
    6280:	97 ff       	sbrs	r25, 7
    6282:	09 c0       	rjmp	.+18     	; 0x6296 <vfprintf+0x212>
    6284:	90 95       	com	r25
    6286:	80 95       	com	r24
    6288:	70 95       	com	r23
    628a:	61 95       	neg	r22
    628c:	7f 4f       	sbci	r23, 0xFF	; 255
    628e:	8f 4f       	sbci	r24, 0xFF	; 255
    6290:	9f 4f       	sbci	r25, 0xFF	; 255
    6292:	f0 68       	ori	r31, 0x80	; 128
    6294:	3f 2e       	mov	r3, r31
    6296:	2a e0       	ldi	r18, 0x0A	; 10
    6298:	30 e0       	ldi	r19, 0x00	; 0
    629a:	a3 01       	movw	r20, r6
    629c:	0e 94 75 32 	call	0x64ea	; 0x64ea <__ultoa_invert>
    62a0:	88 2e       	mov	r8, r24
    62a2:	86 18       	sub	r8, r6
    62a4:	45 c0       	rjmp	.+138    	; 0x6330 <vfprintf+0x2ac>
    62a6:	85 37       	cpi	r24, 0x75	; 117
    62a8:	31 f4       	brne	.+12     	; 0x62b6 <vfprintf+0x232>
    62aa:	23 2d       	mov	r18, r3
    62ac:	2f 7e       	andi	r18, 0xEF	; 239
    62ae:	b2 2e       	mov	r11, r18
    62b0:	2a e0       	ldi	r18, 0x0A	; 10
    62b2:	30 e0       	ldi	r19, 0x00	; 0
    62b4:	25 c0       	rjmp	.+74     	; 0x6300 <vfprintf+0x27c>
    62b6:	93 2d       	mov	r25, r3
    62b8:	99 7f       	andi	r25, 0xF9	; 249
    62ba:	b9 2e       	mov	r11, r25
    62bc:	8f 36       	cpi	r24, 0x6F	; 111
    62be:	c1 f0       	breq	.+48     	; 0x62f0 <vfprintf+0x26c>
    62c0:	18 f4       	brcc	.+6      	; 0x62c8 <vfprintf+0x244>
    62c2:	88 35       	cpi	r24, 0x58	; 88
    62c4:	79 f0       	breq	.+30     	; 0x62e4 <vfprintf+0x260>
    62c6:	b5 c0       	rjmp	.+362    	; 0x6432 <vfprintf+0x3ae>
    62c8:	80 37       	cpi	r24, 0x70	; 112
    62ca:	19 f0       	breq	.+6      	; 0x62d2 <vfprintf+0x24e>
    62cc:	88 37       	cpi	r24, 0x78	; 120
    62ce:	21 f0       	breq	.+8      	; 0x62d8 <vfprintf+0x254>
    62d0:	b0 c0       	rjmp	.+352    	; 0x6432 <vfprintf+0x3ae>
    62d2:	e9 2f       	mov	r30, r25
    62d4:	e0 61       	ori	r30, 0x10	; 16
    62d6:	be 2e       	mov	r11, r30
    62d8:	b4 fe       	sbrs	r11, 4
    62da:	0d c0       	rjmp	.+26     	; 0x62f6 <vfprintf+0x272>
    62dc:	fb 2d       	mov	r31, r11
    62de:	f4 60       	ori	r31, 0x04	; 4
    62e0:	bf 2e       	mov	r11, r31
    62e2:	09 c0       	rjmp	.+18     	; 0x62f6 <vfprintf+0x272>
    62e4:	34 fe       	sbrs	r3, 4
    62e6:	0a c0       	rjmp	.+20     	; 0x62fc <vfprintf+0x278>
    62e8:	29 2f       	mov	r18, r25
    62ea:	26 60       	ori	r18, 0x06	; 6
    62ec:	b2 2e       	mov	r11, r18
    62ee:	06 c0       	rjmp	.+12     	; 0x62fc <vfprintf+0x278>
    62f0:	28 e0       	ldi	r18, 0x08	; 8
    62f2:	30 e0       	ldi	r19, 0x00	; 0
    62f4:	05 c0       	rjmp	.+10     	; 0x6300 <vfprintf+0x27c>
    62f6:	20 e1       	ldi	r18, 0x10	; 16
    62f8:	30 e0       	ldi	r19, 0x00	; 0
    62fa:	02 c0       	rjmp	.+4      	; 0x6300 <vfprintf+0x27c>
    62fc:	20 e1       	ldi	r18, 0x10	; 16
    62fe:	32 e0       	ldi	r19, 0x02	; 2
    6300:	f8 01       	movw	r30, r16
    6302:	b7 fe       	sbrs	r11, 7
    6304:	07 c0       	rjmp	.+14     	; 0x6314 <vfprintf+0x290>
    6306:	60 81       	ld	r22, Z
    6308:	71 81       	ldd	r23, Z+1	; 0x01
    630a:	82 81       	ldd	r24, Z+2	; 0x02
    630c:	93 81       	ldd	r25, Z+3	; 0x03
    630e:	0c 5f       	subi	r16, 0xFC	; 252
    6310:	1f 4f       	sbci	r17, 0xFF	; 255
    6312:	06 c0       	rjmp	.+12     	; 0x6320 <vfprintf+0x29c>
    6314:	60 81       	ld	r22, Z
    6316:	71 81       	ldd	r23, Z+1	; 0x01
    6318:	80 e0       	ldi	r24, 0x00	; 0
    631a:	90 e0       	ldi	r25, 0x00	; 0
    631c:	0e 5f       	subi	r16, 0xFE	; 254
    631e:	1f 4f       	sbci	r17, 0xFF	; 255
    6320:	a3 01       	movw	r20, r6
    6322:	0e 94 75 32 	call	0x64ea	; 0x64ea <__ultoa_invert>
    6326:	88 2e       	mov	r8, r24
    6328:	86 18       	sub	r8, r6
    632a:	fb 2d       	mov	r31, r11
    632c:	ff 77       	andi	r31, 0x7F	; 127
    632e:	3f 2e       	mov	r3, r31
    6330:	36 fe       	sbrs	r3, 6
    6332:	0d c0       	rjmp	.+26     	; 0x634e <vfprintf+0x2ca>
    6334:	23 2d       	mov	r18, r3
    6336:	2e 7f       	andi	r18, 0xFE	; 254
    6338:	a2 2e       	mov	r10, r18
    633a:	89 14       	cp	r8, r9
    633c:	58 f4       	brcc	.+22     	; 0x6354 <vfprintf+0x2d0>
    633e:	34 fe       	sbrs	r3, 4
    6340:	0b c0       	rjmp	.+22     	; 0x6358 <vfprintf+0x2d4>
    6342:	32 fc       	sbrc	r3, 2
    6344:	09 c0       	rjmp	.+18     	; 0x6358 <vfprintf+0x2d4>
    6346:	83 2d       	mov	r24, r3
    6348:	8e 7e       	andi	r24, 0xEE	; 238
    634a:	a8 2e       	mov	r10, r24
    634c:	05 c0       	rjmp	.+10     	; 0x6358 <vfprintf+0x2d4>
    634e:	b8 2c       	mov	r11, r8
    6350:	a3 2c       	mov	r10, r3
    6352:	03 c0       	rjmp	.+6      	; 0x635a <vfprintf+0x2d6>
    6354:	b8 2c       	mov	r11, r8
    6356:	01 c0       	rjmp	.+2      	; 0x635a <vfprintf+0x2d6>
    6358:	b9 2c       	mov	r11, r9
    635a:	a4 fe       	sbrs	r10, 4
    635c:	0f c0       	rjmp	.+30     	; 0x637c <vfprintf+0x2f8>
    635e:	fe 01       	movw	r30, r28
    6360:	e8 0d       	add	r30, r8
    6362:	f1 1d       	adc	r31, r1
    6364:	80 81       	ld	r24, Z
    6366:	80 33       	cpi	r24, 0x30	; 48
    6368:	21 f4       	brne	.+8      	; 0x6372 <vfprintf+0x2ee>
    636a:	9a 2d       	mov	r25, r10
    636c:	99 7e       	andi	r25, 0xE9	; 233
    636e:	a9 2e       	mov	r10, r25
    6370:	09 c0       	rjmp	.+18     	; 0x6384 <vfprintf+0x300>
    6372:	a2 fe       	sbrs	r10, 2
    6374:	06 c0       	rjmp	.+12     	; 0x6382 <vfprintf+0x2fe>
    6376:	b3 94       	inc	r11
    6378:	b3 94       	inc	r11
    637a:	04 c0       	rjmp	.+8      	; 0x6384 <vfprintf+0x300>
    637c:	8a 2d       	mov	r24, r10
    637e:	86 78       	andi	r24, 0x86	; 134
    6380:	09 f0       	breq	.+2      	; 0x6384 <vfprintf+0x300>
    6382:	b3 94       	inc	r11
    6384:	a3 fc       	sbrc	r10, 3
    6386:	11 c0       	rjmp	.+34     	; 0x63aa <vfprintf+0x326>
    6388:	a0 fe       	sbrs	r10, 0
    638a:	06 c0       	rjmp	.+12     	; 0x6398 <vfprintf+0x314>
    638c:	b2 14       	cp	r11, r2
    638e:	88 f4       	brcc	.+34     	; 0x63b2 <vfprintf+0x32e>
    6390:	28 0c       	add	r2, r8
    6392:	92 2c       	mov	r9, r2
    6394:	9b 18       	sub	r9, r11
    6396:	0e c0       	rjmp	.+28     	; 0x63b4 <vfprintf+0x330>
    6398:	b2 14       	cp	r11, r2
    639a:	60 f4       	brcc	.+24     	; 0x63b4 <vfprintf+0x330>
    639c:	b6 01       	movw	r22, r12
    639e:	80 e2       	ldi	r24, 0x20	; 32
    63a0:	90 e0       	ldi	r25, 0x00	; 0
    63a2:	0e 94 39 32 	call	0x6472	; 0x6472 <fputc>
    63a6:	b3 94       	inc	r11
    63a8:	f7 cf       	rjmp	.-18     	; 0x6398 <vfprintf+0x314>
    63aa:	b2 14       	cp	r11, r2
    63ac:	18 f4       	brcc	.+6      	; 0x63b4 <vfprintf+0x330>
    63ae:	2b 18       	sub	r2, r11
    63b0:	02 c0       	rjmp	.+4      	; 0x63b6 <vfprintf+0x332>
    63b2:	98 2c       	mov	r9, r8
    63b4:	21 2c       	mov	r2, r1
    63b6:	a4 fe       	sbrs	r10, 4
    63b8:	10 c0       	rjmp	.+32     	; 0x63da <vfprintf+0x356>
    63ba:	b6 01       	movw	r22, r12
    63bc:	80 e3       	ldi	r24, 0x30	; 48
    63be:	90 e0       	ldi	r25, 0x00	; 0
    63c0:	0e 94 39 32 	call	0x6472	; 0x6472 <fputc>
    63c4:	a2 fe       	sbrs	r10, 2
    63c6:	17 c0       	rjmp	.+46     	; 0x63f6 <vfprintf+0x372>
    63c8:	a1 fc       	sbrc	r10, 1
    63ca:	03 c0       	rjmp	.+6      	; 0x63d2 <vfprintf+0x34e>
    63cc:	88 e7       	ldi	r24, 0x78	; 120
    63ce:	90 e0       	ldi	r25, 0x00	; 0
    63d0:	02 c0       	rjmp	.+4      	; 0x63d6 <vfprintf+0x352>
    63d2:	88 e5       	ldi	r24, 0x58	; 88
    63d4:	90 e0       	ldi	r25, 0x00	; 0
    63d6:	b6 01       	movw	r22, r12
    63d8:	0c c0       	rjmp	.+24     	; 0x63f2 <vfprintf+0x36e>
    63da:	8a 2d       	mov	r24, r10
    63dc:	86 78       	andi	r24, 0x86	; 134
    63de:	59 f0       	breq	.+22     	; 0x63f6 <vfprintf+0x372>
    63e0:	a1 fe       	sbrs	r10, 1
    63e2:	02 c0       	rjmp	.+4      	; 0x63e8 <vfprintf+0x364>
    63e4:	8b e2       	ldi	r24, 0x2B	; 43
    63e6:	01 c0       	rjmp	.+2      	; 0x63ea <vfprintf+0x366>
    63e8:	80 e2       	ldi	r24, 0x20	; 32
    63ea:	a7 fc       	sbrc	r10, 7
    63ec:	8d e2       	ldi	r24, 0x2D	; 45
    63ee:	b6 01       	movw	r22, r12
    63f0:	90 e0       	ldi	r25, 0x00	; 0
    63f2:	0e 94 39 32 	call	0x6472	; 0x6472 <fputc>
    63f6:	89 14       	cp	r8, r9
    63f8:	38 f4       	brcc	.+14     	; 0x6408 <vfprintf+0x384>
    63fa:	b6 01       	movw	r22, r12
    63fc:	80 e3       	ldi	r24, 0x30	; 48
    63fe:	90 e0       	ldi	r25, 0x00	; 0
    6400:	0e 94 39 32 	call	0x6472	; 0x6472 <fputc>
    6404:	9a 94       	dec	r9
    6406:	f7 cf       	rjmp	.-18     	; 0x63f6 <vfprintf+0x372>
    6408:	8a 94       	dec	r8
    640a:	f3 01       	movw	r30, r6
    640c:	e8 0d       	add	r30, r8
    640e:	f1 1d       	adc	r31, r1
    6410:	80 81       	ld	r24, Z
    6412:	b6 01       	movw	r22, r12
    6414:	90 e0       	ldi	r25, 0x00	; 0
    6416:	0e 94 39 32 	call	0x6472	; 0x6472 <fputc>
    641a:	81 10       	cpse	r8, r1
    641c:	f5 cf       	rjmp	.-22     	; 0x6408 <vfprintf+0x384>
    641e:	22 20       	and	r2, r2
    6420:	09 f4       	brne	.+2      	; 0x6424 <vfprintf+0x3a0>
    6422:	42 ce       	rjmp	.-892    	; 0x60a8 <vfprintf+0x24>
    6424:	b6 01       	movw	r22, r12
    6426:	80 e2       	ldi	r24, 0x20	; 32
    6428:	90 e0       	ldi	r25, 0x00	; 0
    642a:	0e 94 39 32 	call	0x6472	; 0x6472 <fputc>
    642e:	2a 94       	dec	r2
    6430:	f6 cf       	rjmp	.-20     	; 0x641e <vfprintf+0x39a>
    6432:	f6 01       	movw	r30, r12
    6434:	86 81       	ldd	r24, Z+6	; 0x06
    6436:	97 81       	ldd	r25, Z+7	; 0x07
    6438:	02 c0       	rjmp	.+4      	; 0x643e <vfprintf+0x3ba>
    643a:	8f ef       	ldi	r24, 0xFF	; 255
    643c:	9f ef       	ldi	r25, 0xFF	; 255
    643e:	2b 96       	adiw	r28, 0x0b	; 11
    6440:	e2 e1       	ldi	r30, 0x12	; 18
    6442:	0c 94 ef 32 	jmp	0x65de	; 0x65de <__epilogue_restores__>

00006446 <strnlen_P>:
    6446:	fc 01       	movw	r30, r24
    6448:	05 90       	lpm	r0, Z+
    644a:	61 50       	subi	r22, 0x01	; 1
    644c:	70 40       	sbci	r23, 0x00	; 0
    644e:	01 10       	cpse	r0, r1
    6450:	d8 f7       	brcc	.-10     	; 0x6448 <strnlen_P+0x2>
    6452:	80 95       	com	r24
    6454:	90 95       	com	r25
    6456:	8e 0f       	add	r24, r30
    6458:	9f 1f       	adc	r25, r31
    645a:	08 95       	ret

0000645c <strnlen>:
    645c:	fc 01       	movw	r30, r24
    645e:	61 50       	subi	r22, 0x01	; 1
    6460:	70 40       	sbci	r23, 0x00	; 0
    6462:	01 90       	ld	r0, Z+
    6464:	01 10       	cpse	r0, r1
    6466:	d8 f7       	brcc	.-10     	; 0x645e <strnlen+0x2>
    6468:	80 95       	com	r24
    646a:	90 95       	com	r25
    646c:	8e 0f       	add	r24, r30
    646e:	9f 1f       	adc	r25, r31
    6470:	08 95       	ret

00006472 <fputc>:
    6472:	0f 93       	push	r16
    6474:	1f 93       	push	r17
    6476:	cf 93       	push	r28
    6478:	df 93       	push	r29
    647a:	fb 01       	movw	r30, r22
    647c:	23 81       	ldd	r18, Z+3	; 0x03
    647e:	21 fd       	sbrc	r18, 1
    6480:	03 c0       	rjmp	.+6      	; 0x6488 <fputc+0x16>
    6482:	8f ef       	ldi	r24, 0xFF	; 255
    6484:	9f ef       	ldi	r25, 0xFF	; 255
    6486:	2c c0       	rjmp	.+88     	; 0x64e0 <fputc+0x6e>
    6488:	22 ff       	sbrs	r18, 2
    648a:	16 c0       	rjmp	.+44     	; 0x64b8 <fputc+0x46>
    648c:	46 81       	ldd	r20, Z+6	; 0x06
    648e:	57 81       	ldd	r21, Z+7	; 0x07
    6490:	24 81       	ldd	r18, Z+4	; 0x04
    6492:	35 81       	ldd	r19, Z+5	; 0x05
    6494:	42 17       	cp	r20, r18
    6496:	53 07       	cpc	r21, r19
    6498:	44 f4       	brge	.+16     	; 0x64aa <fputc+0x38>
    649a:	a0 81       	ld	r26, Z
    649c:	b1 81       	ldd	r27, Z+1	; 0x01
    649e:	9d 01       	movw	r18, r26
    64a0:	2f 5f       	subi	r18, 0xFF	; 255
    64a2:	3f 4f       	sbci	r19, 0xFF	; 255
    64a4:	31 83       	std	Z+1, r19	; 0x01
    64a6:	20 83       	st	Z, r18
    64a8:	8c 93       	st	X, r24
    64aa:	26 81       	ldd	r18, Z+6	; 0x06
    64ac:	37 81       	ldd	r19, Z+7	; 0x07
    64ae:	2f 5f       	subi	r18, 0xFF	; 255
    64b0:	3f 4f       	sbci	r19, 0xFF	; 255
    64b2:	37 83       	std	Z+7, r19	; 0x07
    64b4:	26 83       	std	Z+6, r18	; 0x06
    64b6:	14 c0       	rjmp	.+40     	; 0x64e0 <fputc+0x6e>
    64b8:	8b 01       	movw	r16, r22
    64ba:	ec 01       	movw	r28, r24
    64bc:	fb 01       	movw	r30, r22
    64be:	00 84       	ldd	r0, Z+8	; 0x08
    64c0:	f1 85       	ldd	r31, Z+9	; 0x09
    64c2:	e0 2d       	mov	r30, r0
    64c4:	09 95       	icall
    64c6:	89 2b       	or	r24, r25
    64c8:	e1 f6       	brne	.-72     	; 0x6482 <fputc+0x10>
    64ca:	d8 01       	movw	r26, r16
    64cc:	16 96       	adiw	r26, 0x06	; 6
    64ce:	8d 91       	ld	r24, X+
    64d0:	9c 91       	ld	r25, X
    64d2:	17 97       	sbiw	r26, 0x07	; 7
    64d4:	01 96       	adiw	r24, 0x01	; 1
    64d6:	17 96       	adiw	r26, 0x07	; 7
    64d8:	9c 93       	st	X, r25
    64da:	8e 93       	st	-X, r24
    64dc:	16 97       	sbiw	r26, 0x06	; 6
    64de:	ce 01       	movw	r24, r28
    64e0:	df 91       	pop	r29
    64e2:	cf 91       	pop	r28
    64e4:	1f 91       	pop	r17
    64e6:	0f 91       	pop	r16
    64e8:	08 95       	ret

000064ea <__ultoa_invert>:
    64ea:	fa 01       	movw	r30, r20
    64ec:	aa 27       	eor	r26, r26
    64ee:	28 30       	cpi	r18, 0x08	; 8
    64f0:	51 f1       	breq	.+84     	; 0x6546 <__ultoa_invert+0x5c>
    64f2:	20 31       	cpi	r18, 0x10	; 16
    64f4:	81 f1       	breq	.+96     	; 0x6556 <__ultoa_invert+0x6c>
    64f6:	e8 94       	clt
    64f8:	6f 93       	push	r22
    64fa:	6e 7f       	andi	r22, 0xFE	; 254
    64fc:	6e 5f       	subi	r22, 0xFE	; 254
    64fe:	7f 4f       	sbci	r23, 0xFF	; 255
    6500:	8f 4f       	sbci	r24, 0xFF	; 255
    6502:	9f 4f       	sbci	r25, 0xFF	; 255
    6504:	af 4f       	sbci	r26, 0xFF	; 255
    6506:	b1 e0       	ldi	r27, 0x01	; 1
    6508:	3e d0       	rcall	.+124    	; 0x6586 <__ultoa_invert+0x9c>
    650a:	b4 e0       	ldi	r27, 0x04	; 4
    650c:	3c d0       	rcall	.+120    	; 0x6586 <__ultoa_invert+0x9c>
    650e:	67 0f       	add	r22, r23
    6510:	78 1f       	adc	r23, r24
    6512:	89 1f       	adc	r24, r25
    6514:	9a 1f       	adc	r25, r26
    6516:	a1 1d       	adc	r26, r1
    6518:	68 0f       	add	r22, r24
    651a:	79 1f       	adc	r23, r25
    651c:	8a 1f       	adc	r24, r26
    651e:	91 1d       	adc	r25, r1
    6520:	a1 1d       	adc	r26, r1
    6522:	6a 0f       	add	r22, r26
    6524:	71 1d       	adc	r23, r1
    6526:	81 1d       	adc	r24, r1
    6528:	91 1d       	adc	r25, r1
    652a:	a1 1d       	adc	r26, r1
    652c:	20 d0       	rcall	.+64     	; 0x656e <__ultoa_invert+0x84>
    652e:	09 f4       	brne	.+2      	; 0x6532 <__ultoa_invert+0x48>
    6530:	68 94       	set
    6532:	3f 91       	pop	r19
    6534:	2a e0       	ldi	r18, 0x0A	; 10
    6536:	26 9f       	mul	r18, r22
    6538:	11 24       	eor	r1, r1
    653a:	30 19       	sub	r19, r0
    653c:	30 5d       	subi	r19, 0xD0	; 208
    653e:	31 93       	st	Z+, r19
    6540:	de f6       	brtc	.-74     	; 0x64f8 <__ultoa_invert+0xe>
    6542:	cf 01       	movw	r24, r30
    6544:	08 95       	ret
    6546:	46 2f       	mov	r20, r22
    6548:	47 70       	andi	r20, 0x07	; 7
    654a:	40 5d       	subi	r20, 0xD0	; 208
    654c:	41 93       	st	Z+, r20
    654e:	b3 e0       	ldi	r27, 0x03	; 3
    6550:	0f d0       	rcall	.+30     	; 0x6570 <__ultoa_invert+0x86>
    6552:	c9 f7       	brne	.-14     	; 0x6546 <__ultoa_invert+0x5c>
    6554:	f6 cf       	rjmp	.-20     	; 0x6542 <__ultoa_invert+0x58>
    6556:	46 2f       	mov	r20, r22
    6558:	4f 70       	andi	r20, 0x0F	; 15
    655a:	40 5d       	subi	r20, 0xD0	; 208
    655c:	4a 33       	cpi	r20, 0x3A	; 58
    655e:	18 f0       	brcs	.+6      	; 0x6566 <__ultoa_invert+0x7c>
    6560:	49 5d       	subi	r20, 0xD9	; 217
    6562:	31 fd       	sbrc	r19, 1
    6564:	40 52       	subi	r20, 0x20	; 32
    6566:	41 93       	st	Z+, r20
    6568:	02 d0       	rcall	.+4      	; 0x656e <__ultoa_invert+0x84>
    656a:	a9 f7       	brne	.-22     	; 0x6556 <__ultoa_invert+0x6c>
    656c:	ea cf       	rjmp	.-44     	; 0x6542 <__ultoa_invert+0x58>
    656e:	b4 e0       	ldi	r27, 0x04	; 4
    6570:	a6 95       	lsr	r26
    6572:	97 95       	ror	r25
    6574:	87 95       	ror	r24
    6576:	77 95       	ror	r23
    6578:	67 95       	ror	r22
    657a:	ba 95       	dec	r27
    657c:	c9 f7       	brne	.-14     	; 0x6570 <__ultoa_invert+0x86>
    657e:	00 97       	sbiw	r24, 0x00	; 0
    6580:	61 05       	cpc	r22, r1
    6582:	71 05       	cpc	r23, r1
    6584:	08 95       	ret
    6586:	9b 01       	movw	r18, r22
    6588:	ac 01       	movw	r20, r24
    658a:	0a 2e       	mov	r0, r26
    658c:	06 94       	lsr	r0
    658e:	57 95       	ror	r21
    6590:	47 95       	ror	r20
    6592:	37 95       	ror	r19
    6594:	27 95       	ror	r18
    6596:	ba 95       	dec	r27
    6598:	c9 f7       	brne	.-14     	; 0x658c <__ultoa_invert+0xa2>
    659a:	62 0f       	add	r22, r18
    659c:	73 1f       	adc	r23, r19
    659e:	84 1f       	adc	r24, r20
    65a0:	95 1f       	adc	r25, r21
    65a2:	a0 1d       	adc	r26, r0
    65a4:	08 95       	ret

000065a6 <__prologue_saves__>:
    65a6:	2f 92       	push	r2
    65a8:	3f 92       	push	r3
    65aa:	4f 92       	push	r4
    65ac:	5f 92       	push	r5
    65ae:	6f 92       	push	r6
    65b0:	7f 92       	push	r7
    65b2:	8f 92       	push	r8
    65b4:	9f 92       	push	r9
    65b6:	af 92       	push	r10
    65b8:	bf 92       	push	r11
    65ba:	cf 92       	push	r12
    65bc:	df 92       	push	r13
    65be:	ef 92       	push	r14
    65c0:	ff 92       	push	r15
    65c2:	0f 93       	push	r16
    65c4:	1f 93       	push	r17
    65c6:	cf 93       	push	r28
    65c8:	df 93       	push	r29
    65ca:	cd b7       	in	r28, 0x3d	; 61
    65cc:	de b7       	in	r29, 0x3e	; 62
    65ce:	ca 1b       	sub	r28, r26
    65d0:	db 0b       	sbc	r29, r27
    65d2:	0f b6       	in	r0, 0x3f	; 63
    65d4:	f8 94       	cli
    65d6:	de bf       	out	0x3e, r29	; 62
    65d8:	0f be       	out	0x3f, r0	; 63
    65da:	cd bf       	out	0x3d, r28	; 61
    65dc:	09 94       	ijmp

000065de <__epilogue_restores__>:
    65de:	2a 88       	ldd	r2, Y+18	; 0x12
    65e0:	39 88       	ldd	r3, Y+17	; 0x11
    65e2:	48 88       	ldd	r4, Y+16	; 0x10
    65e4:	5f 84       	ldd	r5, Y+15	; 0x0f
    65e6:	6e 84       	ldd	r6, Y+14	; 0x0e
    65e8:	7d 84       	ldd	r7, Y+13	; 0x0d
    65ea:	8c 84       	ldd	r8, Y+12	; 0x0c
    65ec:	9b 84       	ldd	r9, Y+11	; 0x0b
    65ee:	aa 84       	ldd	r10, Y+10	; 0x0a
    65f0:	b9 84       	ldd	r11, Y+9	; 0x09
    65f2:	c8 84       	ldd	r12, Y+8	; 0x08
    65f4:	df 80       	ldd	r13, Y+7	; 0x07
    65f6:	ee 80       	ldd	r14, Y+6	; 0x06
    65f8:	fd 80       	ldd	r15, Y+5	; 0x05
    65fa:	0c 81       	ldd	r16, Y+4	; 0x04
    65fc:	1b 81       	ldd	r17, Y+3	; 0x03
    65fe:	aa 81       	ldd	r26, Y+2	; 0x02
    6600:	b9 81       	ldd	r27, Y+1	; 0x01
    6602:	ce 0f       	add	r28, r30
    6604:	d1 1d       	adc	r29, r1
    6606:	0f b6       	in	r0, 0x3f	; 63
    6608:	f8 94       	cli
    660a:	de bf       	out	0x3e, r29	; 62
    660c:	0f be       	out	0x3f, r0	; 63
    660e:	cd bf       	out	0x3d, r28	; 61
    6610:	ed 01       	movw	r28, r26
    6612:	08 95       	ret

00006614 <_exit>:
    6614:	f8 94       	cli

00006616 <__stop_program>:
    6616:	ff cf       	rjmp	.-2      	; 0x6616 <__stop_program>
