
My_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000e4  00800100  0000246e  00002502  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000246e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000071  008001e4  008001e4  000025e6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000025e6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002644  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  00002684  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000016d5  00000000  00000000  000027cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b13  00000000  00000000  00003ea1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001386  00000000  00000000  000049b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000514  00000000  00000000  00005d3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000939  00000000  00000000  00006250  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a73  00000000  00000000  00006b89  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  000075fc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 cb 0a 	jmp	0x1596	; 0x1596 <__vector_16>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 cb 01 	jmp	0x396	; 0x396 <__vector_20>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      70:	0c 94 23 02 	jmp	0x446	; 0x446 <__vector_28>
      74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d0 e1       	ldi	r29, 0x10	; 16
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	11 e0       	ldi	r17, 0x01	; 1
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	ee e6       	ldi	r30, 0x6E	; 110
      90:	f4 e2       	ldi	r31, 0x24	; 36
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	a4 3e       	cpi	r26, 0xE4	; 228
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	22 e0       	ldi	r18, 0x02	; 2
      a0:	a4 ee       	ldi	r26, 0xE4	; 228
      a2:	b1 e0       	ldi	r27, 0x01	; 1
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	a5 35       	cpi	r26, 0x55	; 85
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 8d 02 	call	0x51a	; 0x51a <main>
      b2:	0c 94 35 12 	jmp	0x246a	; 0x246a <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <get_DIP_Switch>:
	}
	if ((x>300)&&(x<700)&&(y<700)&&(y>300))
	{
		return 0;
	}
}
      ba:	cf 93       	push	r28
      bc:	df 93       	push	r29
      be:	00 d0       	rcall	.+0      	; 0xc0 <get_DIP_Switch+0x6>
      c0:	1f 92       	push	r1
      c2:	cd b7       	in	r28, 0x3d	; 61
      c4:	de b7       	in	r29, 0x3e	; 62
      c6:	19 82       	std	Y+1, r1	; 0x01
      c8:	82 e2       	ldi	r24, 0x22	; 34
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	22 e2       	ldi	r18, 0x22	; 34
      ce:	30 e0       	ldi	r19, 0x00	; 0
      d0:	f9 01       	movw	r30, r18
      d2:	20 81       	ld	r18, Z
      d4:	20 62       	ori	r18, 0x20	; 32
      d6:	fc 01       	movw	r30, r24
      d8:	20 83       	st	Z, r18
      da:	82 e2       	ldi	r24, 0x22	; 34
      dc:	90 e0       	ldi	r25, 0x00	; 0
      de:	22 e2       	ldi	r18, 0x22	; 34
      e0:	30 e0       	ldi	r19, 0x00	; 0
      e2:	f9 01       	movw	r30, r18
      e4:	20 81       	ld	r18, Z
      e6:	2f 7d       	andi	r18, 0xDF	; 223
      e8:	fc 01       	movw	r30, r24
      ea:	20 83       	st	Z, r18
      ec:	82 e2       	ldi	r24, 0x22	; 34
      ee:	90 e0       	ldi	r25, 0x00	; 0
      f0:	22 e2       	ldi	r18, 0x22	; 34
      f2:	30 e0       	ldi	r19, 0x00	; 0
      f4:	f9 01       	movw	r30, r18
      f6:	20 81       	ld	r18, Z
      f8:	20 62       	ori	r18, 0x20	; 32
      fa:	fc 01       	movw	r30, r24
      fc:	20 83       	st	Z, r18
      fe:	87 e0       	ldi	r24, 0x07	; 7
     100:	90 e0       	ldi	r25, 0x00	; 0
     102:	9b 83       	std	Y+3, r25	; 0x03
     104:	8a 83       	std	Y+2, r24	; 0x02
     106:	30 c0       	rjmp	.+96     	; 0x168 <get_DIP_Switch+0xae>
     108:	80 e2       	ldi	r24, 0x20	; 32
     10a:	90 e0       	ldi	r25, 0x00	; 0
     10c:	fc 01       	movw	r30, r24
     10e:	80 81       	ld	r24, Z
     110:	88 2f       	mov	r24, r24
     112:	90 e0       	ldi	r25, 0x00	; 0
     114:	80 78       	andi	r24, 0x80	; 128
     116:	99 27       	eor	r25, r25
     118:	47 e0       	ldi	r20, 0x07	; 7
     11a:	50 e0       	ldi	r21, 0x00	; 0
     11c:	2a 81       	ldd	r18, Y+2	; 0x02
     11e:	3b 81       	ldd	r19, Y+3	; 0x03
     120:	ba 01       	movw	r22, r20
     122:	62 1b       	sub	r22, r18
     124:	73 0b       	sbc	r23, r19
     126:	9b 01       	movw	r18, r22
     128:	02 c0       	rjmp	.+4      	; 0x12e <get_DIP_Switch+0x74>
     12a:	95 95       	asr	r25
     12c:	87 95       	ror	r24
     12e:	2a 95       	dec	r18
     130:	e2 f7       	brpl	.-8      	; 0x12a <get_DIP_Switch+0x70>
     132:	98 2f       	mov	r25, r24
     134:	89 81       	ldd	r24, Y+1	; 0x01
     136:	89 2b       	or	r24, r25
     138:	89 83       	std	Y+1, r24	; 0x01
     13a:	82 e2       	ldi	r24, 0x22	; 34
     13c:	90 e0       	ldi	r25, 0x00	; 0
     13e:	22 e2       	ldi	r18, 0x22	; 34
     140:	30 e0       	ldi	r19, 0x00	; 0
     142:	f9 01       	movw	r30, r18
     144:	20 81       	ld	r18, Z
     146:	2f 7b       	andi	r18, 0xBF	; 191
     148:	fc 01       	movw	r30, r24
     14a:	20 83       	st	Z, r18
     14c:	82 e2       	ldi	r24, 0x22	; 34
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	22 e2       	ldi	r18, 0x22	; 34
     152:	30 e0       	ldi	r19, 0x00	; 0
     154:	f9 01       	movw	r30, r18
     156:	20 81       	ld	r18, Z
     158:	20 64       	ori	r18, 0x40	; 64
     15a:	fc 01       	movw	r30, r24
     15c:	20 83       	st	Z, r18
     15e:	8a 81       	ldd	r24, Y+2	; 0x02
     160:	9b 81       	ldd	r25, Y+3	; 0x03
     162:	01 97       	sbiw	r24, 0x01	; 1
     164:	9b 83       	std	Y+3, r25	; 0x03
     166:	8a 83       	std	Y+2, r24	; 0x02
     168:	8a 81       	ldd	r24, Y+2	; 0x02
     16a:	9b 81       	ldd	r25, Y+3	; 0x03
     16c:	99 23       	and	r25, r25
     16e:	64 f6       	brge	.-104    	; 0x108 <get_DIP_Switch+0x4e>
     170:	89 81       	ldd	r24, Y+1	; 0x01
     172:	0f 90       	pop	r0
     174:	0f 90       	pop	r0
     176:	0f 90       	pop	r0
     178:	df 91       	pop	r29
     17a:	cf 91       	pop	r28
     17c:	08 95       	ret

0000017e <get_LCD_Taster>:
     17e:	cf 93       	push	r28
     180:	df 93       	push	r29
     182:	1f 92       	push	r1
     184:	cd b7       	in	r28, 0x3d	; 61
     186:	de b7       	in	r29, 0x3e	; 62
     188:	85 e2       	ldi	r24, 0x25	; 37
     18a:	90 e0       	ldi	r25, 0x00	; 0
     18c:	25 e2       	ldi	r18, 0x25	; 37
     18e:	30 e0       	ldi	r19, 0x00	; 0
     190:	f9 01       	movw	r30, r18
     192:	20 81       	ld	r18, Z
     194:	20 7f       	andi	r18, 0xF0	; 240
     196:	fc 01       	movw	r30, r24
     198:	20 83       	st	Z, r18
     19a:	84 e2       	ldi	r24, 0x24	; 36
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	20 ef       	ldi	r18, 0xF0	; 240
     1a0:	fc 01       	movw	r30, r24
     1a2:	20 83       	st	Z, r18
	...
     1b8:	83 e2       	ldi	r24, 0x23	; 35
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	fc 01       	movw	r30, r24
     1be:	80 81       	ld	r24, Z
     1c0:	8f 70       	andi	r24, 0x0F	; 15
     1c2:	89 83       	std	Y+1, r24	; 0x01
     1c4:	84 e2       	ldi	r24, 0x24	; 36
     1c6:	90 e0       	ldi	r25, 0x00	; 0
     1c8:	2f ef       	ldi	r18, 0xFF	; 255
     1ca:	fc 01       	movw	r30, r24
     1cc:	20 83       	st	Z, r18
     1ce:	89 81       	ldd	r24, Y+1	; 0x01
     1d0:	0f 90       	pop	r0
     1d2:	df 91       	pop	r29
     1d4:	cf 91       	pop	r28
     1d6:	08 95       	ret

000001d8 <init_ADC>:
     1d8:	cf 93       	push	r28
     1da:	df 93       	push	r29
     1dc:	cd b7       	in	r28, 0x3d	; 61
     1de:	de b7       	in	r29, 0x3e	; 62
     1e0:	8a e7       	ldi	r24, 0x7A	; 122
     1e2:	90 e0       	ldi	r25, 0x00	; 0
     1e4:	2a e7       	ldi	r18, 0x7A	; 122
     1e6:	30 e0       	ldi	r19, 0x00	; 0
     1e8:	f9 01       	movw	r30, r18
     1ea:	20 81       	ld	r18, Z
     1ec:	20 68       	ori	r18, 0x80	; 128
     1ee:	fc 01       	movw	r30, r24
     1f0:	20 83       	st	Z, r18
     1f2:	8c e7       	ldi	r24, 0x7C	; 124
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	2c e7       	ldi	r18, 0x7C	; 124
     1f8:	30 e0       	ldi	r19, 0x00	; 0
     1fa:	f9 01       	movw	r30, r18
     1fc:	20 81       	ld	r18, Z
     1fe:	20 64       	ori	r18, 0x40	; 64
     200:	fc 01       	movw	r30, r24
     202:	20 83       	st	Z, r18
     204:	8a e7       	ldi	r24, 0x7A	; 122
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	2a e7       	ldi	r18, 0x7A	; 122
     20a:	30 e0       	ldi	r19, 0x00	; 0
     20c:	f9 01       	movw	r30, r18
     20e:	20 81       	ld	r18, Z
     210:	27 60       	ori	r18, 0x07	; 7
     212:	fc 01       	movw	r30, r24
     214:	20 83       	st	Z, r18
     216:	00 00       	nop
     218:	df 91       	pop	r29
     21a:	cf 91       	pop	r28
     21c:	08 95       	ret

0000021e <init_UART0>:
     21e:	cf 93       	push	r28
     220:	df 93       	push	r29
     222:	cd b7       	in	r28, 0x3d	; 61
     224:	de b7       	in	r29, 0x3e	; 62
     226:	84 ec       	ldi	r24, 0xC4	; 196
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	20 e1       	ldi	r18, 0x10	; 16
     22c:	30 e0       	ldi	r19, 0x00	; 0
     22e:	fc 01       	movw	r30, r24
     230:	31 83       	std	Z+1, r19	; 0x01
     232:	20 83       	st	Z, r18
     234:	80 ec       	ldi	r24, 0xC0	; 192
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	20 ec       	ldi	r18, 0xC0	; 192
     23a:	30 e0       	ldi	r19, 0x00	; 0
     23c:	f9 01       	movw	r30, r18
     23e:	20 81       	ld	r18, Z
     240:	22 60       	ori	r18, 0x02	; 2
     242:	fc 01       	movw	r30, r24
     244:	20 83       	st	Z, r18
     246:	81 ec       	ldi	r24, 0xC1	; 193
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	21 ec       	ldi	r18, 0xC1	; 193
     24c:	30 e0       	ldi	r19, 0x00	; 0
     24e:	f9 01       	movw	r30, r18
     250:	20 81       	ld	r18, Z
     252:	28 69       	ori	r18, 0x98	; 152
     254:	fc 01       	movw	r30, r24
     256:	20 83       	st	Z, r18
     258:	00 00       	nop
     25a:	df 91       	pop	r29
     25c:	cf 91       	pop	r28
     25e:	08 95       	ret

00000260 <init_UART1>:
     260:	cf 93       	push	r28
     262:	df 93       	push	r29
     264:	cd b7       	in	r28, 0x3d	; 61
     266:	de b7       	in	r29, 0x3e	; 62
     268:	8c ec       	ldi	r24, 0xCC	; 204
     26a:	90 e0       	ldi	r25, 0x00	; 0
     26c:	20 e1       	ldi	r18, 0x10	; 16
     26e:	30 e0       	ldi	r19, 0x00	; 0
     270:	fc 01       	movw	r30, r24
     272:	31 83       	std	Z+1, r19	; 0x01
     274:	20 83       	st	Z, r18
     276:	88 ec       	ldi	r24, 0xC8	; 200
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	28 ec       	ldi	r18, 0xC8	; 200
     27c:	30 e0       	ldi	r19, 0x00	; 0
     27e:	f9 01       	movw	r30, r18
     280:	20 81       	ld	r18, Z
     282:	22 60       	ori	r18, 0x02	; 2
     284:	fc 01       	movw	r30, r24
     286:	20 83       	st	Z, r18
     288:	89 ec       	ldi	r24, 0xC9	; 201
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	29 ec       	ldi	r18, 0xC9	; 201
     28e:	30 e0       	ldi	r19, 0x00	; 0
     290:	f9 01       	movw	r30, r18
     292:	20 81       	ld	r18, Z
     294:	28 69       	ori	r18, 0x98	; 152
     296:	fc 01       	movw	r30, r24
     298:	20 83       	st	Z, r18
     29a:	00 00       	nop
     29c:	df 91       	pop	r29
     29e:	cf 91       	pop	r28
     2a0:	08 95       	ret

000002a2 <send_Byte_0>:
     2a2:	cf 93       	push	r28
     2a4:	df 93       	push	r29
     2a6:	1f 92       	push	r1
     2a8:	cd b7       	in	r28, 0x3d	; 61
     2aa:	de b7       	in	r29, 0x3e	; 62
     2ac:	89 83       	std	Y+1, r24	; 0x01
     2ae:	00 00       	nop
     2b0:	80 ec       	ldi	r24, 0xC0	; 192
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	fc 01       	movw	r30, r24
     2b6:	80 81       	ld	r24, Z
     2b8:	88 2f       	mov	r24, r24
     2ba:	90 e0       	ldi	r25, 0x00	; 0
     2bc:	80 72       	andi	r24, 0x20	; 32
     2be:	99 27       	eor	r25, r25
     2c0:	89 2b       	or	r24, r25
     2c2:	b1 f3       	breq	.-20     	; 0x2b0 <send_Byte_0+0xe>
     2c4:	86 ec       	ldi	r24, 0xC6	; 198
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	29 81       	ldd	r18, Y+1	; 0x01
     2ca:	fc 01       	movw	r30, r24
     2cc:	20 83       	st	Z, r18
     2ce:	00 00       	nop
     2d0:	0f 90       	pop	r0
     2d2:	df 91       	pop	r29
     2d4:	cf 91       	pop	r28
     2d6:	08 95       	ret

000002d8 <send_Byte_1>:
     2d8:	cf 93       	push	r28
     2da:	df 93       	push	r29
     2dc:	1f 92       	push	r1
     2de:	cd b7       	in	r28, 0x3d	; 61
     2e0:	de b7       	in	r29, 0x3e	; 62
     2e2:	89 83       	std	Y+1, r24	; 0x01
     2e4:	00 00       	nop
     2e6:	88 ec       	ldi	r24, 0xC8	; 200
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	fc 01       	movw	r30, r24
     2ec:	80 81       	ld	r24, Z
     2ee:	88 2f       	mov	r24, r24
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	80 72       	andi	r24, 0x20	; 32
     2f4:	99 27       	eor	r25, r25
     2f6:	89 2b       	or	r24, r25
     2f8:	b1 f3       	breq	.-20     	; 0x2e6 <send_Byte_1+0xe>
     2fa:	8e ec       	ldi	r24, 0xCE	; 206
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	29 81       	ldd	r18, Y+1	; 0x01
     300:	fc 01       	movw	r30, r24
     302:	20 83       	st	Z, r18
     304:	00 00       	nop
     306:	0f 90       	pop	r0
     308:	df 91       	pop	r29
     30a:	cf 91       	pop	r28
     30c:	08 95       	ret

0000030e <to_uARM>:
     30e:	cf 93       	push	r28
     310:	df 93       	push	r29
     312:	00 d0       	rcall	.+0      	; 0x314 <to_uARM+0x6>
     314:	cd b7       	in	r28, 0x3d	; 61
     316:	de b7       	in	r29, 0x3e	; 62
     318:	9a 83       	std	Y+2, r25	; 0x02
     31a:	89 83       	std	Y+1, r24	; 0x01
     31c:	0b c0       	rjmp	.+22     	; 0x334 <to_uARM+0x26>
     31e:	89 81       	ldd	r24, Y+1	; 0x01
     320:	9a 81       	ldd	r25, Y+2	; 0x02
     322:	fc 01       	movw	r30, r24
     324:	80 81       	ld	r24, Z
     326:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <send_Byte_1>
     32a:	89 81       	ldd	r24, Y+1	; 0x01
     32c:	9a 81       	ldd	r25, Y+2	; 0x02
     32e:	01 96       	adiw	r24, 0x01	; 1
     330:	9a 83       	std	Y+2, r25	; 0x02
     332:	89 83       	std	Y+1, r24	; 0x01
     334:	89 81       	ldd	r24, Y+1	; 0x01
     336:	9a 81       	ldd	r25, Y+2	; 0x02
     338:	fc 01       	movw	r30, r24
     33a:	80 81       	ld	r24, Z
     33c:	88 23       	and	r24, r24
     33e:	79 f7       	brne	.-34     	; 0x31e <to_uARM+0x10>
     340:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <uart_str_complete1>
     344:	00 00       	nop
     346:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <uart_str_complete1>
     34a:	88 23       	and	r24, r24
     34c:	e1 f3       	breq	.-8      	; 0x346 <to_uARM+0x38>
     34e:	00 00       	nop
     350:	0f 90       	pop	r0
     352:	0f 90       	pop	r0
     354:	df 91       	pop	r29
     356:	cf 91       	pop	r28
     358:	08 95       	ret

0000035a <send_to_uArm>:
     35a:	cf 93       	push	r28
     35c:	df 93       	push	r29
     35e:	00 d0       	rcall	.+0      	; 0x360 <send_to_uArm+0x6>
     360:	cd b7       	in	r28, 0x3d	; 61
     362:	de b7       	in	r29, 0x3e	; 62
     364:	9a 83       	std	Y+2, r25	; 0x02
     366:	89 83       	std	Y+1, r24	; 0x01
     368:	89 81       	ldd	r24, Y+1	; 0x01
     36a:	9a 81       	ldd	r25, Y+2	; 0x02
     36c:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     370:	80 e0       	ldi	r24, 0x00	; 0
     372:	91 e0       	ldi	r25, 0x01	; 1
     374:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     378:	04 c0       	rjmp	.+8      	; 0x382 <send_to_uArm+0x28>
     37a:	80 e0       	ldi	r24, 0x00	; 0
     37c:	91 e0       	ldi	r25, 0x01	; 1
     37e:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     382:	80 91 ed 01 	lds	r24, 0x01ED	; 0x8001ed <uart_string1+0x4>
     386:	81 33       	cpi	r24, 0x31	; 49
     388:	c1 f3       	breq	.-16     	; 0x37a <send_to_uArm+0x20>
     38a:	00 00       	nop
     38c:	0f 90       	pop	r0
     38e:	0f 90       	pop	r0
     390:	df 91       	pop	r29
     392:	cf 91       	pop	r28
     394:	08 95       	ret

00000396 <__vector_20>:
     396:	1f 92       	push	r1
     398:	0f 92       	push	r0
     39a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     39e:	0f 92       	push	r0
     3a0:	11 24       	eor	r1, r1
     3a2:	2f 93       	push	r18
     3a4:	3f 93       	push	r19
     3a6:	8f 93       	push	r24
     3a8:	9f 93       	push	r25
     3aa:	ef 93       	push	r30
     3ac:	ff 93       	push	r31
     3ae:	cf 93       	push	r28
     3b0:	df 93       	push	r29
     3b2:	00 d0       	rcall	.+0      	; 0x3b4 <__vector_20+0x1e>
     3b4:	cd b7       	in	r28, 0x3d	; 61
     3b6:	de b7       	in	r29, 0x3e	; 62
     3b8:	86 ec       	ldi	r24, 0xC6	; 198
     3ba:	90 e0       	ldi	r25, 0x00	; 0
     3bc:	fc 01       	movw	r30, r24
     3be:	80 81       	ld	r24, Z
     3c0:	8a 83       	std	Y+2, r24	; 0x02
     3c2:	8a 81       	ldd	r24, Y+2	; 0x02
     3c4:	8a 30       	cpi	r24, 0x0A	; 10
     3c6:	99 f0       	breq	.+38     	; 0x3ee <__vector_20+0x58>
     3c8:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <uart_str_count1>
     3cc:	82 33       	cpi	r24, 0x32	; 50
     3ce:	78 f4       	brcc	.+30     	; 0x3ee <__vector_20+0x58>
     3d0:	80 91 e7 01 	lds	r24, 0x01E7	; 0x8001e7 <data_bytes_recieved>
     3d4:	88 2f       	mov	r24, r24
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	87 5c       	subi	r24, 0xC7	; 199
     3da:	9d 4f       	sbci	r25, 0xFD	; 253
     3dc:	2a 81       	ldd	r18, Y+2	; 0x02
     3de:	fc 01       	movw	r30, r24
     3e0:	20 83       	st	Z, r18
     3e2:	80 91 e7 01 	lds	r24, 0x01E7	; 0x8001e7 <data_bytes_recieved>
     3e6:	8f 5f       	subi	r24, 0xFF	; 255
     3e8:	80 93 e7 01 	sts	0x01E7, r24	; 0x8001e7 <data_bytes_recieved>
     3ec:	1b c0       	rjmp	.+54     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
     3ee:	19 82       	std	Y+1, r1	; 0x01
     3f0:	11 c0       	rjmp	.+34     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
     3f2:	89 81       	ldd	r24, Y+1	; 0x01
     3f4:	88 2f       	mov	r24, r24
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	29 81       	ldd	r18, Y+1	; 0x01
     3fa:	22 2f       	mov	r18, r18
     3fc:	30 e0       	ldi	r19, 0x00	; 0
     3fe:	27 5c       	subi	r18, 0xC7	; 199
     400:	3d 4f       	sbci	r19, 0xFD	; 253
     402:	f9 01       	movw	r30, r18
     404:	20 81       	ld	r18, Z
     406:	89 5b       	subi	r24, 0xB9	; 185
     408:	9d 4f       	sbci	r25, 0xFD	; 253
     40a:	fc 01       	movw	r30, r24
     40c:	20 83       	st	Z, r18
     40e:	89 81       	ldd	r24, Y+1	; 0x01
     410:	8f 5f       	subi	r24, 0xFF	; 255
     412:	89 83       	std	Y+1, r24	; 0x01
     414:	80 91 e7 01 	lds	r24, 0x01E7	; 0x8001e7 <data_bytes_recieved>
     418:	99 81       	ldd	r25, Y+1	; 0x01
     41a:	89 17       	cp	r24, r25
     41c:	50 f7       	brcc	.-44     	; 0x3f2 <__vector_20+0x5c>
     41e:	81 e0       	ldi	r24, 0x01	; 1
     420:	80 93 e5 01 	sts	0x01E5, r24	; 0x8001e5 <uart_str_complete>
     424:	00 00       	nop
     426:	0f 90       	pop	r0
     428:	0f 90       	pop	r0
     42a:	df 91       	pop	r29
     42c:	cf 91       	pop	r28
     42e:	ff 91       	pop	r31
     430:	ef 91       	pop	r30
     432:	9f 91       	pop	r25
     434:	8f 91       	pop	r24
     436:	3f 91       	pop	r19
     438:	2f 91       	pop	r18
     43a:	0f 90       	pop	r0
     43c:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     440:	0f 90       	pop	r0
     442:	1f 90       	pop	r1
     444:	18 95       	reti

00000446 <__vector_28>:
     446:	1f 92       	push	r1
     448:	0f 92       	push	r0
     44a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     44e:	0f 92       	push	r0
     450:	11 24       	eor	r1, r1
     452:	2f 93       	push	r18
     454:	8f 93       	push	r24
     456:	9f 93       	push	r25
     458:	ef 93       	push	r30
     45a:	ff 93       	push	r31
     45c:	cf 93       	push	r28
     45e:	df 93       	push	r29
     460:	1f 92       	push	r1
     462:	cd b7       	in	r28, 0x3d	; 61
     464:	de b7       	in	r29, 0x3e	; 62
     466:	8e ec       	ldi	r24, 0xCE	; 206
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	fc 01       	movw	r30, r24
     46c:	80 81       	ld	r24, Z
     46e:	89 83       	std	Y+1, r24	; 0x01
     470:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <uart_str_complete1>
     474:	88 23       	and	r24, r24
     476:	31 f5       	brne	.+76     	; 0x4c4 <__vector_28+0x7e>
     478:	89 81       	ldd	r24, Y+1	; 0x01
     47a:	8a 30       	cpi	r24, 0x0A	; 10
     47c:	b1 f0       	breq	.+44     	; 0x4aa <__vector_28+0x64>
     47e:	89 81       	ldd	r24, Y+1	; 0x01
     480:	8d 30       	cpi	r24, 0x0D	; 13
     482:	99 f0       	breq	.+38     	; 0x4aa <__vector_28+0x64>
     484:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <uart_str_count1>
     488:	82 33       	cpi	r24, 0x32	; 50
     48a:	78 f4       	brcc	.+30     	; 0x4aa <__vector_28+0x64>
     48c:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <uart_str_count1>
     490:	88 2f       	mov	r24, r24
     492:	90 e0       	ldi	r25, 0x00	; 0
     494:	87 51       	subi	r24, 0x17	; 23
     496:	9e 4f       	sbci	r25, 0xFE	; 254
     498:	29 81       	ldd	r18, Y+1	; 0x01
     49a:	fc 01       	movw	r30, r24
     49c:	20 83       	st	Z, r18
     49e:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <uart_str_count1>
     4a2:	8f 5f       	subi	r24, 0xFF	; 255
     4a4:	80 93 e8 01 	sts	0x01E8, r24	; 0x8001e8 <uart_str_count1>
     4a8:	0d c0       	rjmp	.+26     	; 0x4c4 <__vector_28+0x7e>
     4aa:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <uart_str_count1>
     4ae:	88 2f       	mov	r24, r24
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	87 51       	subi	r24, 0x17	; 23
     4b4:	9e 4f       	sbci	r25, 0xFE	; 254
     4b6:	fc 01       	movw	r30, r24
     4b8:	10 82       	st	Z, r1
     4ba:	10 92 e8 01 	sts	0x01E8, r1	; 0x8001e8 <uart_str_count1>
     4be:	81 e0       	ldi	r24, 0x01	; 1
     4c0:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <uart_str_complete1>
     4c4:	00 00       	nop
     4c6:	0f 90       	pop	r0
     4c8:	df 91       	pop	r29
     4ca:	cf 91       	pop	r28
     4cc:	ff 91       	pop	r31
     4ce:	ef 91       	pop	r30
     4d0:	9f 91       	pop	r25
     4d2:	8f 91       	pop	r24
     4d4:	2f 91       	pop	r18
     4d6:	0f 90       	pop	r0
     4d8:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     4dc:	0f 90       	pop	r0
     4de:	1f 90       	pop	r1
     4e0:	18 95       	reti

000004e2 <start_up_routine>:

void start_up_routine ()
{
     4e2:	cf 93       	push	r28
     4e4:	df 93       	push	r29
     4e6:	cd b7       	in	r28, 0x3d	; 61
     4e8:	de b7       	in	r29, 0x3e	; 62
	init_BT_CAR_V2_0();			// Das Board wird hier initialisiert
     4ea:	0e 94 ba 0d 	call	0x1b74	; 0x1b74 <init_BT_CAR_V2_0>
	wait_1ms(1000);
     4ee:	68 ee       	ldi	r22, 0xE8	; 232
     4f0:	73 e0       	ldi	r23, 0x03	; 3
     4f2:	80 e0       	ldi	r24, 0x00	; 0
     4f4:	90 e0       	ldi	r25, 0x00	; 0
     4f6:	0e 94 51 0b 	call	0x16a2	; 0x16a2 <wait_1ms>
	init_ADC();
     4fa:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <init_ADC>
	init_UART0();
     4fe:	0e 94 0f 01 	call	0x21e	; 0x21e <init_UART0>
	init_UART1();
     502:	0e 94 30 01 	call	0x260	; 0x260 <init_UART1>
	wait_1ms(1000);
     506:	68 ee       	ldi	r22, 0xE8	; 232
     508:	73 e0       	ldi	r23, 0x03	; 3
     50a:	80 e0       	ldi	r24, 0x00	; 0
     50c:	90 e0       	ldi	r25, 0x00	; 0
     50e:	0e 94 51 0b 	call	0x16a2	; 0x16a2 <wait_1ms>
	//while (final_data[0]!='D')
	//{
	//	to_pc('R');
	//}
	
}
     512:	00 00       	nop
     514:	df 91       	pop	r29
     516:	cf 91       	pop	r28
     518:	08 95       	ret

0000051a <main>:

int main (void)
{
     51a:	cf 92       	push	r12
     51c:	ef 92       	push	r14
     51e:	0f 93       	push	r16
     520:	1f 93       	push	r17
     522:	cf 93       	push	r28
     524:	df 93       	push	r29
     526:	cd b7       	in	r28, 0x3d	; 61
     528:	de b7       	in	r29, 0x3e	; 62
     52a:	c4 5a       	subi	r28, 0xA4	; 164
     52c:	d1 09       	sbc	r29, r1
     52e:	0f b6       	in	r0, 0x3f	; 63
     530:	f8 94       	cli
     532:	de bf       	out	0x3e, r29	; 62
     534:	0f be       	out	0x3f, r0	; 63
     536:	cd bf       	out	0x3d, r28	; 61
	start_up_routine();
     538:	0e 94 71 02 	call	0x4e2	; 0x4e2 <start_up_routine>
	unsigned char taster,direction,check,counter,routine_done;
	int recieved_X,recieved_Y,Z; 
	unsigned char buffer [30];
	//unsigned char music[50]={0,0,2,2,0,0,5,5,4,4,4,4,0,0,2,2,0,0,7,7,5,5,5,5,0,0,12,12,9,9,5,5,4,4,2,2,10,10,9,9,5,5,7,7,5,5,5,5,5,5};
	//unsigned int sound[14]={262,277,294,311,330,349,370,392,415,440,466,494,523,0};
	clear_lcd();
     53c:	0e 94 57 0d 	call	0x1aae	; 0x1aae <clear_lcd>
	to_uARM("M2210 F500 T20\n");
     540:	8e e5       	ldi	r24, 0x5E	; 94
     542:	91 e0       	ldi	r25, 0x01	; 1
     544:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     548:	80 e0       	ldi	r24, 0x00	; 0
     54a:	90 e0       	ldi	r25, 0x00	; 0
     54c:	a8 ec       	ldi	r26, 0xC8	; 200
     54e:	b2 e4       	ldi	r27, 0x42	; 66
     550:	89 a7       	std	Y+41, r24	; 0x29
     552:	9a a7       	std	Y+42, r25	; 0x2a
     554:	ab a7       	std	Y+43, r26	; 0x2b
     556:	bc a7       	std	Y+44, r27	; 0x2c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     558:	20 e0       	ldi	r18, 0x00	; 0
     55a:	30 e0       	ldi	r19, 0x00	; 0
     55c:	4a e7       	ldi	r20, 0x7A	; 122
     55e:	55 e4       	ldi	r21, 0x45	; 69
     560:	69 a5       	ldd	r22, Y+41	; 0x29
     562:	7a a5       	ldd	r23, Y+42	; 0x2a
     564:	8b a5       	ldd	r24, Y+43	; 0x2b
     566:	9c a5       	ldd	r25, Y+44	; 0x2c
     568:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__mulsf3>
     56c:	dc 01       	movw	r26, r24
     56e:	cb 01       	movw	r24, r22
     570:	8d a7       	std	Y+45, r24	; 0x2d
     572:	9e a7       	std	Y+46, r25	; 0x2e
     574:	af a7       	std	Y+47, r26	; 0x2f
     576:	b8 ab       	std	Y+48, r27	; 0x30
	if (__tmp < 1.0)
     578:	20 e0       	ldi	r18, 0x00	; 0
     57a:	30 e0       	ldi	r19, 0x00	; 0
     57c:	40 e8       	ldi	r20, 0x80	; 128
     57e:	5f e3       	ldi	r21, 0x3F	; 63
     580:	6d a5       	ldd	r22, Y+45	; 0x2d
     582:	7e a5       	ldd	r23, Y+46	; 0x2e
     584:	8f a5       	ldd	r24, Y+47	; 0x2f
     586:	98 a9       	ldd	r25, Y+48	; 0x30
     588:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <__cmpsf2>
     58c:	88 23       	and	r24, r24
     58e:	2c f4       	brge	.+10     	; 0x59a <main+0x80>
		__ticks = 1;
     590:	81 e0       	ldi	r24, 0x01	; 1
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	9a ab       	std	Y+50, r25	; 0x32
     596:	89 ab       	std	Y+49, r24	; 0x31
     598:	3f c0       	rjmp	.+126    	; 0x618 <main+0xfe>
	else if (__tmp > 65535)
     59a:	20 e0       	ldi	r18, 0x00	; 0
     59c:	3f ef       	ldi	r19, 0xFF	; 255
     59e:	4f e7       	ldi	r20, 0x7F	; 127
     5a0:	57 e4       	ldi	r21, 0x47	; 71
     5a2:	6d a5       	ldd	r22, Y+45	; 0x2d
     5a4:	7e a5       	ldd	r23, Y+46	; 0x2e
     5a6:	8f a5       	ldd	r24, Y+47	; 0x2f
     5a8:	98 a9       	ldd	r25, Y+48	; 0x30
     5aa:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <__gesf2>
     5ae:	18 16       	cp	r1, r24
     5b0:	4c f5       	brge	.+82     	; 0x604 <main+0xea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5b2:	20 e0       	ldi	r18, 0x00	; 0
     5b4:	30 e0       	ldi	r19, 0x00	; 0
     5b6:	40 e2       	ldi	r20, 0x20	; 32
     5b8:	51 e4       	ldi	r21, 0x41	; 65
     5ba:	69 a5       	ldd	r22, Y+41	; 0x29
     5bc:	7a a5       	ldd	r23, Y+42	; 0x2a
     5be:	8b a5       	ldd	r24, Y+43	; 0x2b
     5c0:	9c a5       	ldd	r25, Y+44	; 0x2c
     5c2:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__mulsf3>
     5c6:	dc 01       	movw	r26, r24
     5c8:	cb 01       	movw	r24, r22
     5ca:	bc 01       	movw	r22, r24
     5cc:	cd 01       	movw	r24, r26
     5ce:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <__fixunssfsi>
     5d2:	dc 01       	movw	r26, r24
     5d4:	cb 01       	movw	r24, r22
     5d6:	9a ab       	std	Y+50, r25	; 0x32
     5d8:	89 ab       	std	Y+49, r24	; 0x31
     5da:	0f c0       	rjmp	.+30     	; 0x5fa <main+0xe0>
     5dc:	80 e9       	ldi	r24, 0x90	; 144
     5de:	91 e0       	ldi	r25, 0x01	; 1
     5e0:	9c ab       	std	Y+52, r25	; 0x34
     5e2:	8b ab       	std	Y+51, r24	; 0x33
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     5e4:	8b a9       	ldd	r24, Y+51	; 0x33
     5e6:	9c a9       	ldd	r25, Y+52	; 0x34
     5e8:	01 97       	sbiw	r24, 0x01	; 1
     5ea:	f1 f7       	brne	.-4      	; 0x5e8 <main+0xce>
     5ec:	9c ab       	std	Y+52, r25	; 0x34
     5ee:	8b ab       	std	Y+51, r24	; 0x33
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     5f0:	89 a9       	ldd	r24, Y+49	; 0x31
     5f2:	9a a9       	ldd	r25, Y+50	; 0x32
     5f4:	01 97       	sbiw	r24, 0x01	; 1
     5f6:	9a ab       	std	Y+50, r25	; 0x32
     5f8:	89 ab       	std	Y+49, r24	; 0x31
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     5fa:	89 a9       	ldd	r24, Y+49	; 0x31
     5fc:	9a a9       	ldd	r25, Y+50	; 0x32
     5fe:	89 2b       	or	r24, r25
     600:	69 f7       	brne	.-38     	; 0x5dc <main+0xc2>
     602:	14 c0       	rjmp	.+40     	; 0x62c <main+0x112>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     604:	6d a5       	ldd	r22, Y+45	; 0x2d
     606:	7e a5       	ldd	r23, Y+46	; 0x2e
     608:	8f a5       	ldd	r24, Y+47	; 0x2f
     60a:	98 a9       	ldd	r25, Y+48	; 0x30
     60c:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <__fixunssfsi>
     610:	dc 01       	movw	r26, r24
     612:	cb 01       	movw	r24, r22
     614:	9a ab       	std	Y+50, r25	; 0x32
     616:	89 ab       	std	Y+49, r24	; 0x31
     618:	89 a9       	ldd	r24, Y+49	; 0x31
     61a:	9a a9       	ldd	r25, Y+50	; 0x32
     61c:	9e ab       	std	Y+54, r25	; 0x36
     61e:	8d ab       	std	Y+53, r24	; 0x35
     620:	8d a9       	ldd	r24, Y+53	; 0x35
     622:	9e a9       	ldd	r25, Y+54	; 0x36
     624:	01 97       	sbiw	r24, 0x01	; 1
     626:	f1 f7       	brne	.-4      	; 0x624 <main+0x10a>
     628:	9e ab       	std	Y+54, r25	; 0x36
     62a:	8d ab       	std	Y+53, r24	; 0x35
	_delay_ms(100);
	send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
     62c:	8e e6       	ldi	r24, 0x6E	; 110
     62e:	91 e0       	ldi	r25, 0x01	; 1
     630:	0e 94 ad 01 	call	0x35a	; 0x35a <send_to_uArm>
	while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     634:	04 c0       	rjmp	.+8      	; 0x63e <main+0x124>
	{
		to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
     636:	80 e0       	ldi	r24, 0x00	; 0
     638:	91 e0       	ldi	r25, 0x01	; 1
     63a:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
	//unsigned int sound[14]={262,277,294,311,330,349,370,392,415,440,466,494,523,0};
	clear_lcd();
	to_uARM("M2210 F500 T20\n");
	_delay_ms(100);
	send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
	while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     63e:	80 91 ed 01 	lds	r24, 0x01ED	; 0x8001ed <uart_string1+0x4>
     642:	81 33       	cpi	r24, 0x31	; 49
     644:	c1 f3       	breq	.-16     	; 0x636 <main+0x11c>
	{
		to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
	}
	to_uARM("M2210 F500 T200\n");
     646:	85 e8       	ldi	r24, 0x85	; 133
     648:	91 e0       	ldi	r25, 0x01	; 1
     64a:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     64e:	80 e0       	ldi	r24, 0x00	; 0
     650:	90 e0       	ldi	r25, 0x00	; 0
     652:	a8 e4       	ldi	r26, 0x48	; 72
     654:	b3 e4       	ldi	r27, 0x43	; 67
     656:	88 8b       	std	Y+16, r24	; 0x10
     658:	99 8b       	std	Y+17, r25	; 0x11
     65a:	aa 8b       	std	Y+18, r26	; 0x12
     65c:	bb 8b       	std	Y+19, r27	; 0x13

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     65e:	8e 01       	movw	r16, r28
     660:	0f 5b       	subi	r16, 0xBF	; 191
     662:	1f 4f       	sbci	r17, 0xFF	; 255
     664:	20 e0       	ldi	r18, 0x00	; 0
     666:	30 e0       	ldi	r19, 0x00	; 0
     668:	4a e7       	ldi	r20, 0x7A	; 122
     66a:	55 e4       	ldi	r21, 0x45	; 69
     66c:	68 89       	ldd	r22, Y+16	; 0x10
     66e:	79 89       	ldd	r23, Y+17	; 0x11
     670:	8a 89       	ldd	r24, Y+18	; 0x12
     672:	9b 89       	ldd	r25, Y+19	; 0x13
     674:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__mulsf3>
     678:	dc 01       	movw	r26, r24
     67a:	cb 01       	movw	r24, r22
     67c:	f8 01       	movw	r30, r16
     67e:	80 83       	st	Z, r24
     680:	91 83       	std	Z+1, r25	; 0x01
     682:	a2 83       	std	Z+2, r26	; 0x02
     684:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     686:	ce 01       	movw	r24, r28
     688:	8f 5b       	subi	r24, 0xBF	; 191
     68a:	9f 4f       	sbci	r25, 0xFF	; 255
     68c:	20 e0       	ldi	r18, 0x00	; 0
     68e:	30 e0       	ldi	r19, 0x00	; 0
     690:	40 e8       	ldi	r20, 0x80	; 128
     692:	5f e3       	ldi	r21, 0x3F	; 63
     694:	fc 01       	movw	r30, r24
     696:	60 81       	ld	r22, Z
     698:	71 81       	ldd	r23, Z+1	; 0x01
     69a:	82 81       	ldd	r24, Z+2	; 0x02
     69c:	93 81       	ldd	r25, Z+3	; 0x03
     69e:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <__cmpsf2>
     6a2:	88 23       	and	r24, r24
     6a4:	4c f4       	brge	.+18     	; 0x6b8 <main+0x19e>
		__ticks = 1;
     6a6:	ce 01       	movw	r24, r28
     6a8:	8b 5b       	subi	r24, 0xBB	; 187
     6aa:	9f 4f       	sbci	r25, 0xFF	; 255
     6ac:	21 e0       	ldi	r18, 0x01	; 1
     6ae:	30 e0       	ldi	r19, 0x00	; 0
     6b0:	fc 01       	movw	r30, r24
     6b2:	31 83       	std	Z+1, r19	; 0x01
     6b4:	20 83       	st	Z, r18
     6b6:	69 c0       	rjmp	.+210    	; 0x78a <main+0x270>
	else if (__tmp > 65535)
     6b8:	ce 01       	movw	r24, r28
     6ba:	8f 5b       	subi	r24, 0xBF	; 191
     6bc:	9f 4f       	sbci	r25, 0xFF	; 255
     6be:	20 e0       	ldi	r18, 0x00	; 0
     6c0:	3f ef       	ldi	r19, 0xFF	; 255
     6c2:	4f e7       	ldi	r20, 0x7F	; 127
     6c4:	57 e4       	ldi	r21, 0x47	; 71
     6c6:	fc 01       	movw	r30, r24
     6c8:	60 81       	ld	r22, Z
     6ca:	71 81       	ldd	r23, Z+1	; 0x01
     6cc:	82 81       	ldd	r24, Z+2	; 0x02
     6ce:	93 81       	ldd	r25, Z+3	; 0x03
     6d0:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <__gesf2>
     6d4:	18 16       	cp	r1, r24
     6d6:	0c f0       	brlt	.+2      	; 0x6da <main+0x1c0>
     6d8:	46 c0       	rjmp	.+140    	; 0x766 <main+0x24c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     6da:	20 e0       	ldi	r18, 0x00	; 0
     6dc:	30 e0       	ldi	r19, 0x00	; 0
     6de:	40 e2       	ldi	r20, 0x20	; 32
     6e0:	51 e4       	ldi	r21, 0x41	; 65
     6e2:	68 89       	ldd	r22, Y+16	; 0x10
     6e4:	79 89       	ldd	r23, Y+17	; 0x11
     6e6:	8a 89       	ldd	r24, Y+18	; 0x12
     6e8:	9b 89       	ldd	r25, Y+19	; 0x13
     6ea:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__mulsf3>
     6ee:	dc 01       	movw	r26, r24
     6f0:	cb 01       	movw	r24, r22
     6f2:	8e 01       	movw	r16, r28
     6f4:	0b 5b       	subi	r16, 0xBB	; 187
     6f6:	1f 4f       	sbci	r17, 0xFF	; 255
     6f8:	bc 01       	movw	r22, r24
     6fa:	cd 01       	movw	r24, r26
     6fc:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <__fixunssfsi>
     700:	dc 01       	movw	r26, r24
     702:	cb 01       	movw	r24, r22
     704:	f8 01       	movw	r30, r16
     706:	91 83       	std	Z+1, r25	; 0x01
     708:	80 83       	st	Z, r24
     70a:	24 c0       	rjmp	.+72     	; 0x754 <main+0x23a>
     70c:	ce 01       	movw	r24, r28
     70e:	89 5b       	subi	r24, 0xB9	; 185
     710:	9f 4f       	sbci	r25, 0xFF	; 255
     712:	20 e9       	ldi	r18, 0x90	; 144
     714:	31 e0       	ldi	r19, 0x01	; 1
     716:	fc 01       	movw	r30, r24
     718:	31 83       	std	Z+1, r19	; 0x01
     71a:	20 83       	st	Z, r18
     71c:	ce 01       	movw	r24, r28
     71e:	89 5b       	subi	r24, 0xB9	; 185
     720:	9f 4f       	sbci	r25, 0xFF	; 255
     722:	fc 01       	movw	r30, r24
     724:	80 81       	ld	r24, Z
     726:	91 81       	ldd	r25, Z+1	; 0x01
     728:	01 97       	sbiw	r24, 0x01	; 1
     72a:	f1 f7       	brne	.-4      	; 0x728 <main+0x20e>
     72c:	9e 01       	movw	r18, r28
     72e:	29 5b       	subi	r18, 0xB9	; 185
     730:	3f 4f       	sbci	r19, 0xFF	; 255
     732:	f9 01       	movw	r30, r18
     734:	91 83       	std	Z+1, r25	; 0x01
     736:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     738:	ce 01       	movw	r24, r28
     73a:	8b 5b       	subi	r24, 0xBB	; 187
     73c:	9f 4f       	sbci	r25, 0xFF	; 255
     73e:	9e 01       	movw	r18, r28
     740:	2b 5b       	subi	r18, 0xBB	; 187
     742:	3f 4f       	sbci	r19, 0xFF	; 255
     744:	f9 01       	movw	r30, r18
     746:	20 81       	ld	r18, Z
     748:	31 81       	ldd	r19, Z+1	; 0x01
     74a:	21 50       	subi	r18, 0x01	; 1
     74c:	31 09       	sbc	r19, r1
     74e:	fc 01       	movw	r30, r24
     750:	31 83       	std	Z+1, r19	; 0x01
     752:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     754:	ce 01       	movw	r24, r28
     756:	8b 5b       	subi	r24, 0xBB	; 187
     758:	9f 4f       	sbci	r25, 0xFF	; 255
     75a:	fc 01       	movw	r30, r24
     75c:	80 81       	ld	r24, Z
     75e:	91 81       	ldd	r25, Z+1	; 0x01
     760:	89 2b       	or	r24, r25
     762:	a1 f6       	brne	.-88     	; 0x70c <main+0x1f2>
     764:	2c c0       	rjmp	.+88     	; 0x7be <main+0x2a4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     766:	8e 01       	movw	r16, r28
     768:	0b 5b       	subi	r16, 0xBB	; 187
     76a:	1f 4f       	sbci	r17, 0xFF	; 255
     76c:	ce 01       	movw	r24, r28
     76e:	8f 5b       	subi	r24, 0xBF	; 191
     770:	9f 4f       	sbci	r25, 0xFF	; 255
     772:	fc 01       	movw	r30, r24
     774:	60 81       	ld	r22, Z
     776:	71 81       	ldd	r23, Z+1	; 0x01
     778:	82 81       	ldd	r24, Z+2	; 0x02
     77a:	93 81       	ldd	r25, Z+3	; 0x03
     77c:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <__fixunssfsi>
     780:	dc 01       	movw	r26, r24
     782:	cb 01       	movw	r24, r22
     784:	f8 01       	movw	r30, r16
     786:	91 83       	std	Z+1, r25	; 0x01
     788:	80 83       	st	Z, r24
     78a:	ce 01       	movw	r24, r28
     78c:	87 5b       	subi	r24, 0xB7	; 183
     78e:	9f 4f       	sbci	r25, 0xFF	; 255
     790:	9e 01       	movw	r18, r28
     792:	2b 5b       	subi	r18, 0xBB	; 187
     794:	3f 4f       	sbci	r19, 0xFF	; 255
     796:	f9 01       	movw	r30, r18
     798:	20 81       	ld	r18, Z
     79a:	31 81       	ldd	r19, Z+1	; 0x01
     79c:	fc 01       	movw	r30, r24
     79e:	31 83       	std	Z+1, r19	; 0x01
     7a0:	20 83       	st	Z, r18
     7a2:	ce 01       	movw	r24, r28
     7a4:	87 5b       	subi	r24, 0xB7	; 183
     7a6:	9f 4f       	sbci	r25, 0xFF	; 255
     7a8:	fc 01       	movw	r30, r24
     7aa:	80 81       	ld	r24, Z
     7ac:	91 81       	ldd	r25, Z+1	; 0x01
     7ae:	01 97       	sbiw	r24, 0x01	; 1
     7b0:	f1 f7       	brne	.-4      	; 0x7ae <main+0x294>
     7b2:	9e 01       	movw	r18, r28
     7b4:	27 5b       	subi	r18, 0xB7	; 183
     7b6:	3f 4f       	sbci	r19, 0xFF	; 255
     7b8:	f9 01       	movw	r30, r18
     7ba:	91 83       	std	Z+1, r25	; 0x01
     7bc:	80 83       	st	Z, r24
	_delay_ms(200);
	to_uARM("M2210 F1000 T500\n");
     7be:	86 e9       	ldi	r24, 0x96	; 150
     7c0:	91 e0       	ldi	r25, 0x01	; 1
     7c2:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     7c6:	80 e0       	ldi	r24, 0x00	; 0
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	aa ef       	ldi	r26, 0xFA	; 250
     7cc:	b3 e4       	ldi	r27, 0x43	; 67
     7ce:	88 87       	std	Y+8, r24	; 0x08
     7d0:	99 87       	std	Y+9, r25	; 0x09
     7d2:	aa 87       	std	Y+10, r26	; 0x0a
     7d4:	bb 87       	std	Y+11, r27	; 0x0b

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	4a e7       	ldi	r20, 0x7A	; 122
     7dc:	55 e4       	ldi	r21, 0x45	; 69
     7de:	68 85       	ldd	r22, Y+8	; 0x08
     7e0:	79 85       	ldd	r23, Y+9	; 0x09
     7e2:	8a 85       	ldd	r24, Y+10	; 0x0a
     7e4:	9b 85       	ldd	r25, Y+11	; 0x0b
     7e6:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__mulsf3>
     7ea:	dc 01       	movw	r26, r24
     7ec:	cb 01       	movw	r24, r22
     7ee:	8f ab       	std	Y+55, r24	; 0x37
     7f0:	98 af       	std	Y+56, r25	; 0x38
     7f2:	a9 af       	std	Y+57, r26	; 0x39
     7f4:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
     7f6:	20 e0       	ldi	r18, 0x00	; 0
     7f8:	30 e0       	ldi	r19, 0x00	; 0
     7fa:	40 e8       	ldi	r20, 0x80	; 128
     7fc:	5f e3       	ldi	r21, 0x3F	; 63
     7fe:	6f a9       	ldd	r22, Y+55	; 0x37
     800:	78 ad       	ldd	r23, Y+56	; 0x38
     802:	89 ad       	ldd	r24, Y+57	; 0x39
     804:	9a ad       	ldd	r25, Y+58	; 0x3a
     806:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <__cmpsf2>
     80a:	88 23       	and	r24, r24
     80c:	2c f4       	brge	.+10     	; 0x818 <main+0x2fe>
		__ticks = 1;
     80e:	81 e0       	ldi	r24, 0x01	; 1
     810:	90 e0       	ldi	r25, 0x00	; 0
     812:	9c af       	std	Y+60, r25	; 0x3c
     814:	8b af       	std	Y+59, r24	; 0x3b
     816:	3f c0       	rjmp	.+126    	; 0x896 <main+0x37c>
	else if (__tmp > 65535)
     818:	20 e0       	ldi	r18, 0x00	; 0
     81a:	3f ef       	ldi	r19, 0xFF	; 255
     81c:	4f e7       	ldi	r20, 0x7F	; 127
     81e:	57 e4       	ldi	r21, 0x47	; 71
     820:	6f a9       	ldd	r22, Y+55	; 0x37
     822:	78 ad       	ldd	r23, Y+56	; 0x38
     824:	89 ad       	ldd	r24, Y+57	; 0x39
     826:	9a ad       	ldd	r25, Y+58	; 0x3a
     828:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <__gesf2>
     82c:	18 16       	cp	r1, r24
     82e:	4c f5       	brge	.+82     	; 0x882 <main+0x368>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     830:	20 e0       	ldi	r18, 0x00	; 0
     832:	30 e0       	ldi	r19, 0x00	; 0
     834:	40 e2       	ldi	r20, 0x20	; 32
     836:	51 e4       	ldi	r21, 0x41	; 65
     838:	68 85       	ldd	r22, Y+8	; 0x08
     83a:	79 85       	ldd	r23, Y+9	; 0x09
     83c:	8a 85       	ldd	r24, Y+10	; 0x0a
     83e:	9b 85       	ldd	r25, Y+11	; 0x0b
     840:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__mulsf3>
     844:	dc 01       	movw	r26, r24
     846:	cb 01       	movw	r24, r22
     848:	bc 01       	movw	r22, r24
     84a:	cd 01       	movw	r24, r26
     84c:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <__fixunssfsi>
     850:	dc 01       	movw	r26, r24
     852:	cb 01       	movw	r24, r22
     854:	9c af       	std	Y+60, r25	; 0x3c
     856:	8b af       	std	Y+59, r24	; 0x3b
     858:	0f c0       	rjmp	.+30     	; 0x878 <main+0x35e>
     85a:	80 e9       	ldi	r24, 0x90	; 144
     85c:	91 e0       	ldi	r25, 0x01	; 1
     85e:	9e af       	std	Y+62, r25	; 0x3e
     860:	8d af       	std	Y+61, r24	; 0x3d
     862:	8d ad       	ldd	r24, Y+61	; 0x3d
     864:	9e ad       	ldd	r25, Y+62	; 0x3e
     866:	01 97       	sbiw	r24, 0x01	; 1
     868:	f1 f7       	brne	.-4      	; 0x866 <main+0x34c>
     86a:	9e af       	std	Y+62, r25	; 0x3e
     86c:	8d af       	std	Y+61, r24	; 0x3d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     86e:	8b ad       	ldd	r24, Y+59	; 0x3b
     870:	9c ad       	ldd	r25, Y+60	; 0x3c
     872:	01 97       	sbiw	r24, 0x01	; 1
     874:	9c af       	std	Y+60, r25	; 0x3c
     876:	8b af       	std	Y+59, r24	; 0x3b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     878:	8b ad       	ldd	r24, Y+59	; 0x3b
     87a:	9c ad       	ldd	r25, Y+60	; 0x3c
     87c:	89 2b       	or	r24, r25
     87e:	69 f7       	brne	.-38     	; 0x85a <main+0x340>
     880:	1e c0       	rjmp	.+60     	; 0x8be <main+0x3a4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     882:	6f a9       	ldd	r22, Y+55	; 0x37
     884:	78 ad       	ldd	r23, Y+56	; 0x38
     886:	89 ad       	ldd	r24, Y+57	; 0x39
     888:	9a ad       	ldd	r25, Y+58	; 0x3a
     88a:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <__fixunssfsi>
     88e:	dc 01       	movw	r26, r24
     890:	cb 01       	movw	r24, r22
     892:	9c af       	std	Y+60, r25	; 0x3c
     894:	8b af       	std	Y+59, r24	; 0x3b
     896:	2b ad       	ldd	r18, Y+59	; 0x3b
     898:	3c ad       	ldd	r19, Y+60	; 0x3c
     89a:	ce 01       	movw	r24, r28
     89c:	cf 96       	adiw	r24, 0x3f	; 63
     89e:	fc 01       	movw	r30, r24
     8a0:	31 83       	std	Z+1, r19	; 0x01
     8a2:	20 83       	st	Z, r18
     8a4:	ce 01       	movw	r24, r28
     8a6:	cf 96       	adiw	r24, 0x3f	; 63
     8a8:	fc 01       	movw	r30, r24
     8aa:	80 81       	ld	r24, Z
     8ac:	91 81       	ldd	r25, Z+1	; 0x01
     8ae:	01 97       	sbiw	r24, 0x01	; 1
     8b0:	f1 f7       	brne	.-4      	; 0x8ae <main+0x394>
     8b2:	9e 01       	movw	r18, r28
     8b4:	21 5c       	subi	r18, 0xC1	; 193
     8b6:	3f 4f       	sbci	r19, 0xFF	; 255
     8b8:	f9 01       	movw	r30, r18
     8ba:	91 83       	std	Z+1, r25	; 0x01
     8bc:	80 83       	st	Z, r24
	_delay_ms(500);
	to_uARM("M2210 F2000 T500\n");
     8be:	88 ea       	ldi	r24, 0xA8	; 168
     8c0:	91 e0       	ldi	r25, 0x01	; 1
     8c2:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>

	while(1)
	{
	//	direction=get_direction();
		taster = get_LCD_Taster();
     8c6:	0e 94 bf 00 	call	0x17e	; 0x17e <get_LCD_Taster>
     8ca:	8c 8b       	std	Y+20, r24	; 0x14
		DIP_Switch=get_DIP_Switch();
     8cc:	0e 94 5d 00 	call	0xba	; 0xba <get_DIP_Switch>
     8d0:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <__data_end>
		if (taster&0x08)
     8d4:	8c 89       	ldd	r24, Y+20	; 0x14
     8d6:	88 2f       	mov	r24, r24
     8d8:	90 e0       	ldi	r25, 0x00	; 0
     8da:	88 70       	andi	r24, 0x08	; 8
     8dc:	99 27       	eor	r25, r25
     8de:	89 2b       	or	r24, r25
     8e0:	09 f4       	brne	.+2      	; 0x8e4 <main+0x3ca>
     8e2:	92 c1       	rjmp	.+804    	; 0xc08 <main+0x6ee>
		{
			send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
     8e4:	8e e6       	ldi	r24, 0x6E	; 110
     8e6:	91 e0       	ldi	r25, 0x01	; 1
     8e8:	0e 94 ad 01 	call	0x35a	; 0x35a <send_to_uArm>
			while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     8ec:	04 c0       	rjmp	.+8      	; 0x8f6 <main+0x3dc>
			{
				to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
     8ee:	80 e0       	ldi	r24, 0x00	; 0
     8f0:	91 e0       	ldi	r25, 0x01	; 1
     8f2:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
		taster = get_LCD_Taster();
		DIP_Switch=get_DIP_Switch();
		if (taster&0x08)
		{
			send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
			while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     8f6:	80 91 ed 01 	lds	r24, 0x01ED	; 0x8001ed <uart_string1+0x4>
     8fa:	81 33       	cpi	r24, 0x31	; 49
     8fc:	c1 f3       	breq	.-16     	; 0x8ee <main+0x3d4>
			{
				to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
			}
			if (DIP_Switch&0x01)
     8fe:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <__data_end>
     902:	88 2f       	mov	r24, r24
     904:	90 e0       	ldi	r25, 0x00	; 0
     906:	81 70       	andi	r24, 0x01	; 1
     908:	99 27       	eor	r25, r25
     90a:	89 2b       	or	r24, r25
     90c:	09 f4       	brne	.+2      	; 0x910 <main+0x3f6>
     90e:	7c c1       	rjmp	.+760    	; 0xc08 <main+0x6ee>
			{
				to_uARM("M2210 F500 T200\n");
     910:	85 e8       	ldi	r24, 0x85	; 133
     912:	91 e0       	ldi	r25, 0x01	; 1
     914:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     918:	80 e0       	ldi	r24, 0x00	; 0
     91a:	90 e0       	ldi	r25, 0x00	; 0
     91c:	a8 e4       	ldi	r26, 0x48	; 72
     91e:	b3 e4       	ldi	r27, 0x43	; 67
     920:	8d a3       	std	Y+37, r24	; 0x25
     922:	9e a3       	std	Y+38, r25	; 0x26
     924:	af a3       	std	Y+39, r26	; 0x27
     926:	b8 a7       	std	Y+40, r27	; 0x28

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     928:	8e 01       	movw	r16, r28
     92a:	0b 5a       	subi	r16, 0xAB	; 171
     92c:	1f 4f       	sbci	r17, 0xFF	; 255
     92e:	20 e0       	ldi	r18, 0x00	; 0
     930:	30 e0       	ldi	r19, 0x00	; 0
     932:	4a e7       	ldi	r20, 0x7A	; 122
     934:	55 e4       	ldi	r21, 0x45	; 69
     936:	6d a1       	ldd	r22, Y+37	; 0x25
     938:	7e a1       	ldd	r23, Y+38	; 0x26
     93a:	8f a1       	ldd	r24, Y+39	; 0x27
     93c:	98 a5       	ldd	r25, Y+40	; 0x28
     93e:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__mulsf3>
     942:	dc 01       	movw	r26, r24
     944:	cb 01       	movw	r24, r22
     946:	f8 01       	movw	r30, r16
     948:	80 83       	st	Z, r24
     94a:	91 83       	std	Z+1, r25	; 0x01
     94c:	a2 83       	std	Z+2, r26	; 0x02
     94e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     950:	ce 01       	movw	r24, r28
     952:	8b 5a       	subi	r24, 0xAB	; 171
     954:	9f 4f       	sbci	r25, 0xFF	; 255
     956:	20 e0       	ldi	r18, 0x00	; 0
     958:	30 e0       	ldi	r19, 0x00	; 0
     95a:	40 e8       	ldi	r20, 0x80	; 128
     95c:	5f e3       	ldi	r21, 0x3F	; 63
     95e:	fc 01       	movw	r30, r24
     960:	60 81       	ld	r22, Z
     962:	71 81       	ldd	r23, Z+1	; 0x01
     964:	82 81       	ldd	r24, Z+2	; 0x02
     966:	93 81       	ldd	r25, Z+3	; 0x03
     968:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <__cmpsf2>
     96c:	88 23       	and	r24, r24
     96e:	4c f4       	brge	.+18     	; 0x982 <main+0x468>
		__ticks = 1;
     970:	ce 01       	movw	r24, r28
     972:	87 5a       	subi	r24, 0xA7	; 167
     974:	9f 4f       	sbci	r25, 0xFF	; 255
     976:	21 e0       	ldi	r18, 0x01	; 1
     978:	30 e0       	ldi	r19, 0x00	; 0
     97a:	fc 01       	movw	r30, r24
     97c:	31 83       	std	Z+1, r19	; 0x01
     97e:	20 83       	st	Z, r18
     980:	69 c0       	rjmp	.+210    	; 0xa54 <main+0x53a>
	else if (__tmp > 65535)
     982:	ce 01       	movw	r24, r28
     984:	8b 5a       	subi	r24, 0xAB	; 171
     986:	9f 4f       	sbci	r25, 0xFF	; 255
     988:	20 e0       	ldi	r18, 0x00	; 0
     98a:	3f ef       	ldi	r19, 0xFF	; 255
     98c:	4f e7       	ldi	r20, 0x7F	; 127
     98e:	57 e4       	ldi	r21, 0x47	; 71
     990:	fc 01       	movw	r30, r24
     992:	60 81       	ld	r22, Z
     994:	71 81       	ldd	r23, Z+1	; 0x01
     996:	82 81       	ldd	r24, Z+2	; 0x02
     998:	93 81       	ldd	r25, Z+3	; 0x03
     99a:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <__gesf2>
     99e:	18 16       	cp	r1, r24
     9a0:	0c f0       	brlt	.+2      	; 0x9a4 <main+0x48a>
     9a2:	46 c0       	rjmp	.+140    	; 0xa30 <main+0x516>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     9a4:	20 e0       	ldi	r18, 0x00	; 0
     9a6:	30 e0       	ldi	r19, 0x00	; 0
     9a8:	40 e2       	ldi	r20, 0x20	; 32
     9aa:	51 e4       	ldi	r21, 0x41	; 65
     9ac:	6d a1       	ldd	r22, Y+37	; 0x25
     9ae:	7e a1       	ldd	r23, Y+38	; 0x26
     9b0:	8f a1       	ldd	r24, Y+39	; 0x27
     9b2:	98 a5       	ldd	r25, Y+40	; 0x28
     9b4:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__mulsf3>
     9b8:	dc 01       	movw	r26, r24
     9ba:	cb 01       	movw	r24, r22
     9bc:	8e 01       	movw	r16, r28
     9be:	07 5a       	subi	r16, 0xA7	; 167
     9c0:	1f 4f       	sbci	r17, 0xFF	; 255
     9c2:	bc 01       	movw	r22, r24
     9c4:	cd 01       	movw	r24, r26
     9c6:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <__fixunssfsi>
     9ca:	dc 01       	movw	r26, r24
     9cc:	cb 01       	movw	r24, r22
     9ce:	f8 01       	movw	r30, r16
     9d0:	91 83       	std	Z+1, r25	; 0x01
     9d2:	80 83       	st	Z, r24
     9d4:	24 c0       	rjmp	.+72     	; 0xa1e <main+0x504>
     9d6:	ce 01       	movw	r24, r28
     9d8:	85 5a       	subi	r24, 0xA5	; 165
     9da:	9f 4f       	sbci	r25, 0xFF	; 255
     9dc:	20 e9       	ldi	r18, 0x90	; 144
     9de:	31 e0       	ldi	r19, 0x01	; 1
     9e0:	fc 01       	movw	r30, r24
     9e2:	31 83       	std	Z+1, r19	; 0x01
     9e4:	20 83       	st	Z, r18
     9e6:	ce 01       	movw	r24, r28
     9e8:	85 5a       	subi	r24, 0xA5	; 165
     9ea:	9f 4f       	sbci	r25, 0xFF	; 255
     9ec:	fc 01       	movw	r30, r24
     9ee:	80 81       	ld	r24, Z
     9f0:	91 81       	ldd	r25, Z+1	; 0x01
     9f2:	01 97       	sbiw	r24, 0x01	; 1
     9f4:	f1 f7       	brne	.-4      	; 0x9f2 <main+0x4d8>
     9f6:	9e 01       	movw	r18, r28
     9f8:	25 5a       	subi	r18, 0xA5	; 165
     9fa:	3f 4f       	sbci	r19, 0xFF	; 255
     9fc:	f9 01       	movw	r30, r18
     9fe:	91 83       	std	Z+1, r25	; 0x01
     a00:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a02:	ce 01       	movw	r24, r28
     a04:	87 5a       	subi	r24, 0xA7	; 167
     a06:	9f 4f       	sbci	r25, 0xFF	; 255
     a08:	9e 01       	movw	r18, r28
     a0a:	27 5a       	subi	r18, 0xA7	; 167
     a0c:	3f 4f       	sbci	r19, 0xFF	; 255
     a0e:	f9 01       	movw	r30, r18
     a10:	20 81       	ld	r18, Z
     a12:	31 81       	ldd	r19, Z+1	; 0x01
     a14:	21 50       	subi	r18, 0x01	; 1
     a16:	31 09       	sbc	r19, r1
     a18:	fc 01       	movw	r30, r24
     a1a:	31 83       	std	Z+1, r19	; 0x01
     a1c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a1e:	ce 01       	movw	r24, r28
     a20:	87 5a       	subi	r24, 0xA7	; 167
     a22:	9f 4f       	sbci	r25, 0xFF	; 255
     a24:	fc 01       	movw	r30, r24
     a26:	80 81       	ld	r24, Z
     a28:	91 81       	ldd	r25, Z+1	; 0x01
     a2a:	89 2b       	or	r24, r25
     a2c:	a1 f6       	brne	.-88     	; 0x9d6 <main+0x4bc>
     a2e:	2c c0       	rjmp	.+88     	; 0xa88 <main+0x56e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a30:	8e 01       	movw	r16, r28
     a32:	07 5a       	subi	r16, 0xA7	; 167
     a34:	1f 4f       	sbci	r17, 0xFF	; 255
     a36:	ce 01       	movw	r24, r28
     a38:	8b 5a       	subi	r24, 0xAB	; 171
     a3a:	9f 4f       	sbci	r25, 0xFF	; 255
     a3c:	fc 01       	movw	r30, r24
     a3e:	60 81       	ld	r22, Z
     a40:	71 81       	ldd	r23, Z+1	; 0x01
     a42:	82 81       	ldd	r24, Z+2	; 0x02
     a44:	93 81       	ldd	r25, Z+3	; 0x03
     a46:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <__fixunssfsi>
     a4a:	dc 01       	movw	r26, r24
     a4c:	cb 01       	movw	r24, r22
     a4e:	f8 01       	movw	r30, r16
     a50:	91 83       	std	Z+1, r25	; 0x01
     a52:	80 83       	st	Z, r24
     a54:	ce 01       	movw	r24, r28
     a56:	83 5a       	subi	r24, 0xA3	; 163
     a58:	9f 4f       	sbci	r25, 0xFF	; 255
     a5a:	9e 01       	movw	r18, r28
     a5c:	27 5a       	subi	r18, 0xA7	; 167
     a5e:	3f 4f       	sbci	r19, 0xFF	; 255
     a60:	f9 01       	movw	r30, r18
     a62:	20 81       	ld	r18, Z
     a64:	31 81       	ldd	r19, Z+1	; 0x01
     a66:	fc 01       	movw	r30, r24
     a68:	31 83       	std	Z+1, r19	; 0x01
     a6a:	20 83       	st	Z, r18
     a6c:	ce 01       	movw	r24, r28
     a6e:	83 5a       	subi	r24, 0xA3	; 163
     a70:	9f 4f       	sbci	r25, 0xFF	; 255
     a72:	fc 01       	movw	r30, r24
     a74:	80 81       	ld	r24, Z
     a76:	91 81       	ldd	r25, Z+1	; 0x01
     a78:	01 97       	sbiw	r24, 0x01	; 1
     a7a:	f1 f7       	brne	.-4      	; 0xa78 <main+0x55e>
     a7c:	9e 01       	movw	r18, r28
     a7e:	23 5a       	subi	r18, 0xA3	; 163
     a80:	3f 4f       	sbci	r19, 0xFF	; 255
     a82:	f9 01       	movw	r30, r18
     a84:	91 83       	std	Z+1, r25	; 0x01
     a86:	80 83       	st	Z, r24
				_delay_ms(200);
				to_uARM("M2210 F1000 T500\n");
     a88:	86 e9       	ldi	r24, 0x96	; 150
     a8a:	91 e0       	ldi	r25, 0x01	; 1
     a8c:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     a90:	80 e0       	ldi	r24, 0x00	; 0
     a92:	90 e0       	ldi	r25, 0x00	; 0
     a94:	aa ef       	ldi	r26, 0xFA	; 250
     a96:	b3 e4       	ldi	r27, 0x43	; 67
     a98:	8c 87       	std	Y+12, r24	; 0x0c
     a9a:	9d 87       	std	Y+13, r25	; 0x0d
     a9c:	ae 87       	std	Y+14, r26	; 0x0e
     a9e:	bf 87       	std	Y+15, r27	; 0x0f

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     aa0:	8e 01       	movw	r16, r28
     aa2:	05 5b       	subi	r16, 0xB5	; 181
     aa4:	1f 4f       	sbci	r17, 0xFF	; 255
     aa6:	20 e0       	ldi	r18, 0x00	; 0
     aa8:	30 e0       	ldi	r19, 0x00	; 0
     aaa:	4a e7       	ldi	r20, 0x7A	; 122
     aac:	55 e4       	ldi	r21, 0x45	; 69
     aae:	6c 85       	ldd	r22, Y+12	; 0x0c
     ab0:	7d 85       	ldd	r23, Y+13	; 0x0d
     ab2:	8e 85       	ldd	r24, Y+14	; 0x0e
     ab4:	9f 85       	ldd	r25, Y+15	; 0x0f
     ab6:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__mulsf3>
     aba:	dc 01       	movw	r26, r24
     abc:	cb 01       	movw	r24, r22
     abe:	f8 01       	movw	r30, r16
     ac0:	80 83       	st	Z, r24
     ac2:	91 83       	std	Z+1, r25	; 0x01
     ac4:	a2 83       	std	Z+2, r26	; 0x02
     ac6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     ac8:	ce 01       	movw	r24, r28
     aca:	85 5b       	subi	r24, 0xB5	; 181
     acc:	9f 4f       	sbci	r25, 0xFF	; 255
     ace:	20 e0       	ldi	r18, 0x00	; 0
     ad0:	30 e0       	ldi	r19, 0x00	; 0
     ad2:	40 e8       	ldi	r20, 0x80	; 128
     ad4:	5f e3       	ldi	r21, 0x3F	; 63
     ad6:	fc 01       	movw	r30, r24
     ad8:	60 81       	ld	r22, Z
     ada:	71 81       	ldd	r23, Z+1	; 0x01
     adc:	82 81       	ldd	r24, Z+2	; 0x02
     ade:	93 81       	ldd	r25, Z+3	; 0x03
     ae0:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <__cmpsf2>
     ae4:	88 23       	and	r24, r24
     ae6:	4c f4       	brge	.+18     	; 0xafa <main+0x5e0>
		__ticks = 1;
     ae8:	ce 01       	movw	r24, r28
     aea:	81 5b       	subi	r24, 0xB1	; 177
     aec:	9f 4f       	sbci	r25, 0xFF	; 255
     aee:	21 e0       	ldi	r18, 0x01	; 1
     af0:	30 e0       	ldi	r19, 0x00	; 0
     af2:	fc 01       	movw	r30, r24
     af4:	31 83       	std	Z+1, r19	; 0x01
     af6:	20 83       	st	Z, r18
     af8:	69 c0       	rjmp	.+210    	; 0xbcc <main+0x6b2>
	else if (__tmp > 65535)
     afa:	ce 01       	movw	r24, r28
     afc:	85 5b       	subi	r24, 0xB5	; 181
     afe:	9f 4f       	sbci	r25, 0xFF	; 255
     b00:	20 e0       	ldi	r18, 0x00	; 0
     b02:	3f ef       	ldi	r19, 0xFF	; 255
     b04:	4f e7       	ldi	r20, 0x7F	; 127
     b06:	57 e4       	ldi	r21, 0x47	; 71
     b08:	fc 01       	movw	r30, r24
     b0a:	60 81       	ld	r22, Z
     b0c:	71 81       	ldd	r23, Z+1	; 0x01
     b0e:	82 81       	ldd	r24, Z+2	; 0x02
     b10:	93 81       	ldd	r25, Z+3	; 0x03
     b12:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <__gesf2>
     b16:	18 16       	cp	r1, r24
     b18:	0c f0       	brlt	.+2      	; 0xb1c <main+0x602>
     b1a:	46 c0       	rjmp	.+140    	; 0xba8 <main+0x68e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b1c:	20 e0       	ldi	r18, 0x00	; 0
     b1e:	30 e0       	ldi	r19, 0x00	; 0
     b20:	40 e2       	ldi	r20, 0x20	; 32
     b22:	51 e4       	ldi	r21, 0x41	; 65
     b24:	6c 85       	ldd	r22, Y+12	; 0x0c
     b26:	7d 85       	ldd	r23, Y+13	; 0x0d
     b28:	8e 85       	ldd	r24, Y+14	; 0x0e
     b2a:	9f 85       	ldd	r25, Y+15	; 0x0f
     b2c:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__mulsf3>
     b30:	dc 01       	movw	r26, r24
     b32:	cb 01       	movw	r24, r22
     b34:	8e 01       	movw	r16, r28
     b36:	01 5b       	subi	r16, 0xB1	; 177
     b38:	1f 4f       	sbci	r17, 0xFF	; 255
     b3a:	bc 01       	movw	r22, r24
     b3c:	cd 01       	movw	r24, r26
     b3e:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <__fixunssfsi>
     b42:	dc 01       	movw	r26, r24
     b44:	cb 01       	movw	r24, r22
     b46:	f8 01       	movw	r30, r16
     b48:	91 83       	std	Z+1, r25	; 0x01
     b4a:	80 83       	st	Z, r24
     b4c:	24 c0       	rjmp	.+72     	; 0xb96 <main+0x67c>
     b4e:	ce 01       	movw	r24, r28
     b50:	8f 5a       	subi	r24, 0xAF	; 175
     b52:	9f 4f       	sbci	r25, 0xFF	; 255
     b54:	20 e9       	ldi	r18, 0x90	; 144
     b56:	31 e0       	ldi	r19, 0x01	; 1
     b58:	fc 01       	movw	r30, r24
     b5a:	31 83       	std	Z+1, r19	; 0x01
     b5c:	20 83       	st	Z, r18
     b5e:	ce 01       	movw	r24, r28
     b60:	8f 5a       	subi	r24, 0xAF	; 175
     b62:	9f 4f       	sbci	r25, 0xFF	; 255
     b64:	fc 01       	movw	r30, r24
     b66:	80 81       	ld	r24, Z
     b68:	91 81       	ldd	r25, Z+1	; 0x01
     b6a:	01 97       	sbiw	r24, 0x01	; 1
     b6c:	f1 f7       	brne	.-4      	; 0xb6a <main+0x650>
     b6e:	9e 01       	movw	r18, r28
     b70:	2f 5a       	subi	r18, 0xAF	; 175
     b72:	3f 4f       	sbci	r19, 0xFF	; 255
     b74:	f9 01       	movw	r30, r18
     b76:	91 83       	std	Z+1, r25	; 0x01
     b78:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b7a:	ce 01       	movw	r24, r28
     b7c:	81 5b       	subi	r24, 0xB1	; 177
     b7e:	9f 4f       	sbci	r25, 0xFF	; 255
     b80:	9e 01       	movw	r18, r28
     b82:	21 5b       	subi	r18, 0xB1	; 177
     b84:	3f 4f       	sbci	r19, 0xFF	; 255
     b86:	f9 01       	movw	r30, r18
     b88:	20 81       	ld	r18, Z
     b8a:	31 81       	ldd	r19, Z+1	; 0x01
     b8c:	21 50       	subi	r18, 0x01	; 1
     b8e:	31 09       	sbc	r19, r1
     b90:	fc 01       	movw	r30, r24
     b92:	31 83       	std	Z+1, r19	; 0x01
     b94:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b96:	ce 01       	movw	r24, r28
     b98:	81 5b       	subi	r24, 0xB1	; 177
     b9a:	9f 4f       	sbci	r25, 0xFF	; 255
     b9c:	fc 01       	movw	r30, r24
     b9e:	80 81       	ld	r24, Z
     ba0:	91 81       	ldd	r25, Z+1	; 0x01
     ba2:	89 2b       	or	r24, r25
     ba4:	a1 f6       	brne	.-88     	; 0xb4e <main+0x634>
     ba6:	2c c0       	rjmp	.+88     	; 0xc00 <main+0x6e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ba8:	8e 01       	movw	r16, r28
     baa:	01 5b       	subi	r16, 0xB1	; 177
     bac:	1f 4f       	sbci	r17, 0xFF	; 255
     bae:	ce 01       	movw	r24, r28
     bb0:	85 5b       	subi	r24, 0xB5	; 181
     bb2:	9f 4f       	sbci	r25, 0xFF	; 255
     bb4:	fc 01       	movw	r30, r24
     bb6:	60 81       	ld	r22, Z
     bb8:	71 81       	ldd	r23, Z+1	; 0x01
     bba:	82 81       	ldd	r24, Z+2	; 0x02
     bbc:	93 81       	ldd	r25, Z+3	; 0x03
     bbe:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <__fixunssfsi>
     bc2:	dc 01       	movw	r26, r24
     bc4:	cb 01       	movw	r24, r22
     bc6:	f8 01       	movw	r30, r16
     bc8:	91 83       	std	Z+1, r25	; 0x01
     bca:	80 83       	st	Z, r24
     bcc:	ce 01       	movw	r24, r28
     bce:	8d 5a       	subi	r24, 0xAD	; 173
     bd0:	9f 4f       	sbci	r25, 0xFF	; 255
     bd2:	9e 01       	movw	r18, r28
     bd4:	21 5b       	subi	r18, 0xB1	; 177
     bd6:	3f 4f       	sbci	r19, 0xFF	; 255
     bd8:	f9 01       	movw	r30, r18
     bda:	20 81       	ld	r18, Z
     bdc:	31 81       	ldd	r19, Z+1	; 0x01
     bde:	fc 01       	movw	r30, r24
     be0:	31 83       	std	Z+1, r19	; 0x01
     be2:	20 83       	st	Z, r18
     be4:	ce 01       	movw	r24, r28
     be6:	8d 5a       	subi	r24, 0xAD	; 173
     be8:	9f 4f       	sbci	r25, 0xFF	; 255
     bea:	fc 01       	movw	r30, r24
     bec:	80 81       	ld	r24, Z
     bee:	91 81       	ldd	r25, Z+1	; 0x01
     bf0:	01 97       	sbiw	r24, 0x01	; 1
     bf2:	f1 f7       	brne	.-4      	; 0xbf0 <main+0x6d6>
     bf4:	9e 01       	movw	r18, r28
     bf6:	2d 5a       	subi	r18, 0xAD	; 173
     bf8:	3f 4f       	sbci	r19, 0xFF	; 255
     bfa:	f9 01       	movw	r30, r18
     bfc:	91 83       	std	Z+1, r25	; 0x01
     bfe:	80 83       	st	Z, r24
				_delay_ms(500);
				to_uARM("M2210 F2000 T500\n");
     c00:	88 ea       	ldi	r24, 0xA8	; 168
     c02:	91 e0       	ldi	r25, 0x01	; 1
     c04:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
			}
		}
		
		if (uart_str_complete!=0)
     c08:	80 91 e5 01 	lds	r24, 0x01E5	; 0x8001e5 <uart_str_complete>
     c0c:	88 23       	and	r24, r24
     c0e:	09 f4       	brne	.+2      	; 0xc12 <main+0x6f8>
     c10:	5a ce       	rjmp	.-844    	; 0x8c6 <main+0x3ac>
		{
			routine_done=0;
     c12:	1b 82       	std	Y+3, r1	; 0x03
			uart_str_complete=0;
     c14:	10 92 e5 01 	sts	0x01E5, r1	; 0x8001e5 <uart_str_complete>
			send_Byte_0('1');	
     c18:	81 e3       	ldi	r24, 0x31	; 49
     c1a:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
			for (counter=0;counter<=data_bytes_recieved;counter++)
     c1e:	1a 82       	std	Y+2, r1	; 0x02
     c20:	3c c2       	rjmp	.+1144   	; 0x109a <main+0xb80>
			{
				switch (final_data[counter])//final data decoding
     c22:	8a 81       	ldd	r24, Y+2	; 0x02
     c24:	88 2f       	mov	r24, r24
     c26:	90 e0       	ldi	r25, 0x00	; 0
     c28:	89 5b       	subi	r24, 0xB9	; 185
     c2a:	9d 4f       	sbci	r25, 0xFD	; 253
     c2c:	fc 01       	movw	r30, r24
     c2e:	80 81       	ld	r24, Z
     c30:	88 2f       	mov	r24, r24
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	88 35       	cpi	r24, 0x58	; 88
     c36:	91 05       	cpc	r25, r1
     c38:	49 f0       	breq	.+18     	; 0xc4c <main+0x732>
     c3a:	89 35       	cpi	r24, 0x59	; 89
     c3c:	91 05       	cpc	r25, r1
     c3e:	09 f4       	brne	.+2      	; 0xc42 <main+0x728>
     c40:	14 c1       	rjmp	.+552    	; 0xe6a <main+0x950>
     c42:	8f 34       	cpi	r24, 0x4F	; 79
     c44:	91 05       	cpc	r25, r1
     c46:	09 f4       	brne	.+2      	; 0xc4a <main+0x730>
     c48:	1f c2       	rjmp	.+1086   	; 0x1088 <main+0xb6e>
     c4a:	24 c2       	rjmp	.+1096   	; 0x1094 <main+0xb7a>
				{
					case 'X':
						//filter data
						recieved_Y=(final_data[counter+1]-48)*1000+(final_data[counter+2]-48)*100+(final_data[counter+3]-48)*10+final_data[counter+4]-48;
     c4c:	8a 81       	ldd	r24, Y+2	; 0x02
     c4e:	88 2f       	mov	r24, r24
     c50:	90 e0       	ldi	r25, 0x00	; 0
     c52:	01 96       	adiw	r24, 0x01	; 1
     c54:	89 5b       	subi	r24, 0xB9	; 185
     c56:	9d 4f       	sbci	r25, 0xFD	; 253
     c58:	fc 01       	movw	r30, r24
     c5a:	80 81       	ld	r24, Z
     c5c:	88 2f       	mov	r24, r24
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	ac 01       	movw	r20, r24
     c62:	40 53       	subi	r20, 0x30	; 48
     c64:	51 09       	sbc	r21, r1
     c66:	88 ee       	ldi	r24, 0xE8	; 232
     c68:	93 e0       	ldi	r25, 0x03	; 3
     c6a:	48 9f       	mul	r20, r24
     c6c:	90 01       	movw	r18, r0
     c6e:	49 9f       	mul	r20, r25
     c70:	30 0d       	add	r19, r0
     c72:	58 9f       	mul	r21, r24
     c74:	30 0d       	add	r19, r0
     c76:	11 24       	eor	r1, r1
     c78:	8a 81       	ldd	r24, Y+2	; 0x02
     c7a:	88 2f       	mov	r24, r24
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	02 96       	adiw	r24, 0x02	; 2
     c80:	89 5b       	subi	r24, 0xB9	; 185
     c82:	9d 4f       	sbci	r25, 0xFD	; 253
     c84:	fc 01       	movw	r30, r24
     c86:	80 81       	ld	r24, Z
     c88:	88 2f       	mov	r24, r24
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	ac 01       	movw	r20, r24
     c8e:	40 53       	subi	r20, 0x30	; 48
     c90:	51 09       	sbc	r21, r1
     c92:	64 e6       	ldi	r22, 0x64	; 100
     c94:	64 9f       	mul	r22, r20
     c96:	c0 01       	movw	r24, r0
     c98:	65 9f       	mul	r22, r21
     c9a:	90 0d       	add	r25, r0
     c9c:	11 24       	eor	r1, r1
     c9e:	28 0f       	add	r18, r24
     ca0:	39 1f       	adc	r19, r25
     ca2:	8a 81       	ldd	r24, Y+2	; 0x02
     ca4:	88 2f       	mov	r24, r24
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	03 96       	adiw	r24, 0x03	; 3
     caa:	89 5b       	subi	r24, 0xB9	; 185
     cac:	9d 4f       	sbci	r25, 0xFD	; 253
     cae:	fc 01       	movw	r30, r24
     cb0:	80 81       	ld	r24, Z
     cb2:	88 2f       	mov	r24, r24
     cb4:	90 e0       	ldi	r25, 0x00	; 0
     cb6:	c0 97       	sbiw	r24, 0x30	; 48
     cb8:	88 0f       	add	r24, r24
     cba:	99 1f       	adc	r25, r25
     cbc:	ac 01       	movw	r20, r24
     cbe:	44 0f       	add	r20, r20
     cc0:	55 1f       	adc	r21, r21
     cc2:	44 0f       	add	r20, r20
     cc4:	55 1f       	adc	r21, r21
     cc6:	84 0f       	add	r24, r20
     cc8:	95 1f       	adc	r25, r21
     cca:	28 0f       	add	r18, r24
     ccc:	39 1f       	adc	r19, r25
     cce:	8a 81       	ldd	r24, Y+2	; 0x02
     cd0:	88 2f       	mov	r24, r24
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	04 96       	adiw	r24, 0x04	; 4
     cd6:	89 5b       	subi	r24, 0xB9	; 185
     cd8:	9d 4f       	sbci	r25, 0xFD	; 253
     cda:	fc 01       	movw	r30, r24
     cdc:	80 81       	ld	r24, Z
     cde:	88 2f       	mov	r24, r24
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	82 0f       	add	r24, r18
     ce4:	93 1f       	adc	r25, r19
     ce6:	c0 97       	sbiw	r24, 0x30	; 48
     ce8:	9f 83       	std	Y+7, r25	; 0x07
     cea:	8e 83       	std	Y+6, r24	; 0x06
						send_Byte_0('1');	//return that data good
     cec:	81 e3       	ldi	r24, 0x31	; 49
     cee:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
     cf2:	80 e0       	ldi	r24, 0x00	; 0
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	a0 e0       	ldi	r26, 0x00	; 0
     cf8:	b0 e4       	ldi	r27, 0x40	; 64
     cfa:	89 a3       	std	Y+33, r24	; 0x21
     cfc:	9a a3       	std	Y+34, r25	; 0x22
     cfe:	ab a3       	std	Y+35, r26	; 0x23
     d00:	bc a3       	std	Y+36, r27	; 0x24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     d02:	8e 01       	movw	r16, r28
     d04:	01 5a       	subi	r16, 0xA1	; 161
     d06:	1f 4f       	sbci	r17, 0xFF	; 255
     d08:	20 e0       	ldi	r18, 0x00	; 0
     d0a:	30 e0       	ldi	r19, 0x00	; 0
     d0c:	4a e7       	ldi	r20, 0x7A	; 122
     d0e:	55 e4       	ldi	r21, 0x45	; 69
     d10:	69 a1       	ldd	r22, Y+33	; 0x21
     d12:	7a a1       	ldd	r23, Y+34	; 0x22
     d14:	8b a1       	ldd	r24, Y+35	; 0x23
     d16:	9c a1       	ldd	r25, Y+36	; 0x24
     d18:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__mulsf3>
     d1c:	dc 01       	movw	r26, r24
     d1e:	cb 01       	movw	r24, r22
     d20:	f8 01       	movw	r30, r16
     d22:	80 83       	st	Z, r24
     d24:	91 83       	std	Z+1, r25	; 0x01
     d26:	a2 83       	std	Z+2, r26	; 0x02
     d28:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d2a:	ce 01       	movw	r24, r28
     d2c:	81 5a       	subi	r24, 0xA1	; 161
     d2e:	9f 4f       	sbci	r25, 0xFF	; 255
     d30:	20 e0       	ldi	r18, 0x00	; 0
     d32:	30 e0       	ldi	r19, 0x00	; 0
     d34:	40 e8       	ldi	r20, 0x80	; 128
     d36:	5f e3       	ldi	r21, 0x3F	; 63
     d38:	fc 01       	movw	r30, r24
     d3a:	60 81       	ld	r22, Z
     d3c:	71 81       	ldd	r23, Z+1	; 0x01
     d3e:	82 81       	ldd	r24, Z+2	; 0x02
     d40:	93 81       	ldd	r25, Z+3	; 0x03
     d42:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <__cmpsf2>
     d46:	88 23       	and	r24, r24
     d48:	4c f4       	brge	.+18     	; 0xd5c <main+0x842>
		__ticks = 1;
     d4a:	ce 01       	movw	r24, r28
     d4c:	8d 59       	subi	r24, 0x9D	; 157
     d4e:	9f 4f       	sbci	r25, 0xFF	; 255
     d50:	21 e0       	ldi	r18, 0x01	; 1
     d52:	30 e0       	ldi	r19, 0x00	; 0
     d54:	fc 01       	movw	r30, r24
     d56:	31 83       	std	Z+1, r19	; 0x01
     d58:	20 83       	st	Z, r18
     d5a:	69 c0       	rjmp	.+210    	; 0xe2e <main+0x914>
	else if (__tmp > 65535)
     d5c:	ce 01       	movw	r24, r28
     d5e:	81 5a       	subi	r24, 0xA1	; 161
     d60:	9f 4f       	sbci	r25, 0xFF	; 255
     d62:	20 e0       	ldi	r18, 0x00	; 0
     d64:	3f ef       	ldi	r19, 0xFF	; 255
     d66:	4f e7       	ldi	r20, 0x7F	; 127
     d68:	57 e4       	ldi	r21, 0x47	; 71
     d6a:	fc 01       	movw	r30, r24
     d6c:	60 81       	ld	r22, Z
     d6e:	71 81       	ldd	r23, Z+1	; 0x01
     d70:	82 81       	ldd	r24, Z+2	; 0x02
     d72:	93 81       	ldd	r25, Z+3	; 0x03
     d74:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <__gesf2>
     d78:	18 16       	cp	r1, r24
     d7a:	0c f0       	brlt	.+2      	; 0xd7e <main+0x864>
     d7c:	46 c0       	rjmp	.+140    	; 0xe0a <main+0x8f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d7e:	20 e0       	ldi	r18, 0x00	; 0
     d80:	30 e0       	ldi	r19, 0x00	; 0
     d82:	40 e2       	ldi	r20, 0x20	; 32
     d84:	51 e4       	ldi	r21, 0x41	; 65
     d86:	69 a1       	ldd	r22, Y+33	; 0x21
     d88:	7a a1       	ldd	r23, Y+34	; 0x22
     d8a:	8b a1       	ldd	r24, Y+35	; 0x23
     d8c:	9c a1       	ldd	r25, Y+36	; 0x24
     d8e:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__mulsf3>
     d92:	dc 01       	movw	r26, r24
     d94:	cb 01       	movw	r24, r22
     d96:	8e 01       	movw	r16, r28
     d98:	0d 59       	subi	r16, 0x9D	; 157
     d9a:	1f 4f       	sbci	r17, 0xFF	; 255
     d9c:	bc 01       	movw	r22, r24
     d9e:	cd 01       	movw	r24, r26
     da0:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <__fixunssfsi>
     da4:	dc 01       	movw	r26, r24
     da6:	cb 01       	movw	r24, r22
     da8:	f8 01       	movw	r30, r16
     daa:	91 83       	std	Z+1, r25	; 0x01
     dac:	80 83       	st	Z, r24
     dae:	24 c0       	rjmp	.+72     	; 0xdf8 <main+0x8de>
     db0:	ce 01       	movw	r24, r28
     db2:	8b 59       	subi	r24, 0x9B	; 155
     db4:	9f 4f       	sbci	r25, 0xFF	; 255
     db6:	20 e9       	ldi	r18, 0x90	; 144
     db8:	31 e0       	ldi	r19, 0x01	; 1
     dba:	fc 01       	movw	r30, r24
     dbc:	31 83       	std	Z+1, r19	; 0x01
     dbe:	20 83       	st	Z, r18
     dc0:	ce 01       	movw	r24, r28
     dc2:	8b 59       	subi	r24, 0x9B	; 155
     dc4:	9f 4f       	sbci	r25, 0xFF	; 255
     dc6:	fc 01       	movw	r30, r24
     dc8:	80 81       	ld	r24, Z
     dca:	91 81       	ldd	r25, Z+1	; 0x01
     dcc:	01 97       	sbiw	r24, 0x01	; 1
     dce:	f1 f7       	brne	.-4      	; 0xdcc <main+0x8b2>
     dd0:	9e 01       	movw	r18, r28
     dd2:	2b 59       	subi	r18, 0x9B	; 155
     dd4:	3f 4f       	sbci	r19, 0xFF	; 255
     dd6:	f9 01       	movw	r30, r18
     dd8:	91 83       	std	Z+1, r25	; 0x01
     dda:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ddc:	ce 01       	movw	r24, r28
     dde:	8d 59       	subi	r24, 0x9D	; 157
     de0:	9f 4f       	sbci	r25, 0xFF	; 255
     de2:	9e 01       	movw	r18, r28
     de4:	2d 59       	subi	r18, 0x9D	; 157
     de6:	3f 4f       	sbci	r19, 0xFF	; 255
     de8:	f9 01       	movw	r30, r18
     dea:	20 81       	ld	r18, Z
     dec:	31 81       	ldd	r19, Z+1	; 0x01
     dee:	21 50       	subi	r18, 0x01	; 1
     df0:	31 09       	sbc	r19, r1
     df2:	fc 01       	movw	r30, r24
     df4:	31 83       	std	Z+1, r19	; 0x01
     df6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     df8:	ce 01       	movw	r24, r28
     dfa:	8d 59       	subi	r24, 0x9D	; 157
     dfc:	9f 4f       	sbci	r25, 0xFF	; 255
     dfe:	fc 01       	movw	r30, r24
     e00:	80 81       	ld	r24, Z
     e02:	91 81       	ldd	r25, Z+1	; 0x01
     e04:	89 2b       	or	r24, r25
     e06:	a1 f6       	brne	.-88     	; 0xdb0 <main+0x896>
     e08:	2c c0       	rjmp	.+88     	; 0xe62 <main+0x948>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e0a:	8e 01       	movw	r16, r28
     e0c:	0d 59       	subi	r16, 0x9D	; 157
     e0e:	1f 4f       	sbci	r17, 0xFF	; 255
     e10:	ce 01       	movw	r24, r28
     e12:	81 5a       	subi	r24, 0xA1	; 161
     e14:	9f 4f       	sbci	r25, 0xFF	; 255
     e16:	fc 01       	movw	r30, r24
     e18:	60 81       	ld	r22, Z
     e1a:	71 81       	ldd	r23, Z+1	; 0x01
     e1c:	82 81       	ldd	r24, Z+2	; 0x02
     e1e:	93 81       	ldd	r25, Z+3	; 0x03
     e20:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <__fixunssfsi>
     e24:	dc 01       	movw	r26, r24
     e26:	cb 01       	movw	r24, r22
     e28:	f8 01       	movw	r30, r16
     e2a:	91 83       	std	Z+1, r25	; 0x01
     e2c:	80 83       	st	Z, r24
     e2e:	ce 01       	movw	r24, r28
     e30:	89 59       	subi	r24, 0x99	; 153
     e32:	9f 4f       	sbci	r25, 0xFF	; 255
     e34:	9e 01       	movw	r18, r28
     e36:	2d 59       	subi	r18, 0x9D	; 157
     e38:	3f 4f       	sbci	r19, 0xFF	; 255
     e3a:	f9 01       	movw	r30, r18
     e3c:	20 81       	ld	r18, Z
     e3e:	31 81       	ldd	r19, Z+1	; 0x01
     e40:	fc 01       	movw	r30, r24
     e42:	31 83       	std	Z+1, r19	; 0x01
     e44:	20 83       	st	Z, r18
     e46:	ce 01       	movw	r24, r28
     e48:	89 59       	subi	r24, 0x99	; 153
     e4a:	9f 4f       	sbci	r25, 0xFF	; 255
     e4c:	fc 01       	movw	r30, r24
     e4e:	80 81       	ld	r24, Z
     e50:	91 81       	ldd	r25, Z+1	; 0x01
     e52:	01 97       	sbiw	r24, 0x01	; 1
     e54:	f1 f7       	brne	.-4      	; 0xe52 <main+0x938>
     e56:	9e 01       	movw	r18, r28
     e58:	29 59       	subi	r18, 0x99	; 153
     e5a:	3f 4f       	sbci	r19, 0xFF	; 255
     e5c:	f9 01       	movw	r30, r18
     e5e:	91 83       	std	Z+1, r25	; 0x01
     e60:	80 83       	st	Z, r24
						_delay_ms(2);
						check++;		//check that data X good
     e62:	89 81       	ldd	r24, Y+1	; 0x01
     e64:	8f 5f       	subi	r24, 0xFF	; 255
     e66:	89 83       	std	Y+1, r24	; 0x01
					break;
     e68:	15 c1       	rjmp	.+554    	; 0x1094 <main+0xb7a>
				
					case 'Y':
						recieved_X=(final_data[counter+1]-48)*1000+(final_data[counter+2]-48)*100+(final_data[counter+3]-48)*10+final_data[counter+4]-48;
     e6a:	8a 81       	ldd	r24, Y+2	; 0x02
     e6c:	88 2f       	mov	r24, r24
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	01 96       	adiw	r24, 0x01	; 1
     e72:	89 5b       	subi	r24, 0xB9	; 185
     e74:	9d 4f       	sbci	r25, 0xFD	; 253
     e76:	fc 01       	movw	r30, r24
     e78:	80 81       	ld	r24, Z
     e7a:	88 2f       	mov	r24, r24
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	ac 01       	movw	r20, r24
     e80:	40 53       	subi	r20, 0x30	; 48
     e82:	51 09       	sbc	r21, r1
     e84:	88 ee       	ldi	r24, 0xE8	; 232
     e86:	93 e0       	ldi	r25, 0x03	; 3
     e88:	48 9f       	mul	r20, r24
     e8a:	90 01       	movw	r18, r0
     e8c:	49 9f       	mul	r20, r25
     e8e:	30 0d       	add	r19, r0
     e90:	58 9f       	mul	r21, r24
     e92:	30 0d       	add	r19, r0
     e94:	11 24       	eor	r1, r1
     e96:	8a 81       	ldd	r24, Y+2	; 0x02
     e98:	88 2f       	mov	r24, r24
     e9a:	90 e0       	ldi	r25, 0x00	; 0
     e9c:	02 96       	adiw	r24, 0x02	; 2
     e9e:	89 5b       	subi	r24, 0xB9	; 185
     ea0:	9d 4f       	sbci	r25, 0xFD	; 253
     ea2:	fc 01       	movw	r30, r24
     ea4:	80 81       	ld	r24, Z
     ea6:	88 2f       	mov	r24, r24
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	ac 01       	movw	r20, r24
     eac:	40 53       	subi	r20, 0x30	; 48
     eae:	51 09       	sbc	r21, r1
     eb0:	64 e6       	ldi	r22, 0x64	; 100
     eb2:	64 9f       	mul	r22, r20
     eb4:	c0 01       	movw	r24, r0
     eb6:	65 9f       	mul	r22, r21
     eb8:	90 0d       	add	r25, r0
     eba:	11 24       	eor	r1, r1
     ebc:	28 0f       	add	r18, r24
     ebe:	39 1f       	adc	r19, r25
     ec0:	8a 81       	ldd	r24, Y+2	; 0x02
     ec2:	88 2f       	mov	r24, r24
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	03 96       	adiw	r24, 0x03	; 3
     ec8:	89 5b       	subi	r24, 0xB9	; 185
     eca:	9d 4f       	sbci	r25, 0xFD	; 253
     ecc:	fc 01       	movw	r30, r24
     ece:	80 81       	ld	r24, Z
     ed0:	88 2f       	mov	r24, r24
     ed2:	90 e0       	ldi	r25, 0x00	; 0
     ed4:	c0 97       	sbiw	r24, 0x30	; 48
     ed6:	88 0f       	add	r24, r24
     ed8:	99 1f       	adc	r25, r25
     eda:	ac 01       	movw	r20, r24
     edc:	44 0f       	add	r20, r20
     ede:	55 1f       	adc	r21, r21
     ee0:	44 0f       	add	r20, r20
     ee2:	55 1f       	adc	r21, r21
     ee4:	84 0f       	add	r24, r20
     ee6:	95 1f       	adc	r25, r21
     ee8:	28 0f       	add	r18, r24
     eea:	39 1f       	adc	r19, r25
     eec:	8a 81       	ldd	r24, Y+2	; 0x02
     eee:	88 2f       	mov	r24, r24
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	04 96       	adiw	r24, 0x04	; 4
     ef4:	89 5b       	subi	r24, 0xB9	; 185
     ef6:	9d 4f       	sbci	r25, 0xFD	; 253
     ef8:	fc 01       	movw	r30, r24
     efa:	80 81       	ld	r24, Z
     efc:	88 2f       	mov	r24, r24
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	82 0f       	add	r24, r18
     f02:	93 1f       	adc	r25, r19
     f04:	c0 97       	sbiw	r24, 0x30	; 48
     f06:	9d 83       	std	Y+5, r25	; 0x05
     f08:	8c 83       	std	Y+4, r24	; 0x04
						send_Byte_0('1');	//return that data good
     f0a:	81 e3       	ldi	r24, 0x31	; 49
     f0c:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
     f10:	80 e0       	ldi	r24, 0x00	; 0
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	a0 e0       	ldi	r26, 0x00	; 0
     f16:	b0 e4       	ldi	r27, 0x40	; 64
     f18:	8d 8b       	std	Y+21, r24	; 0x15
     f1a:	9e 8b       	std	Y+22, r25	; 0x16
     f1c:	af 8b       	std	Y+23, r26	; 0x17
     f1e:	b8 8f       	std	Y+24, r27	; 0x18

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     f20:	8e 01       	movw	r16, r28
     f22:	07 59       	subi	r16, 0x97	; 151
     f24:	1f 4f       	sbci	r17, 0xFF	; 255
     f26:	20 e0       	ldi	r18, 0x00	; 0
     f28:	30 e0       	ldi	r19, 0x00	; 0
     f2a:	4a e7       	ldi	r20, 0x7A	; 122
     f2c:	55 e4       	ldi	r21, 0x45	; 69
     f2e:	6d 89       	ldd	r22, Y+21	; 0x15
     f30:	7e 89       	ldd	r23, Y+22	; 0x16
     f32:	8f 89       	ldd	r24, Y+23	; 0x17
     f34:	98 8d       	ldd	r25, Y+24	; 0x18
     f36:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__mulsf3>
     f3a:	dc 01       	movw	r26, r24
     f3c:	cb 01       	movw	r24, r22
     f3e:	f8 01       	movw	r30, r16
     f40:	80 83       	st	Z, r24
     f42:	91 83       	std	Z+1, r25	; 0x01
     f44:	a2 83       	std	Z+2, r26	; 0x02
     f46:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     f48:	ce 01       	movw	r24, r28
     f4a:	87 59       	subi	r24, 0x97	; 151
     f4c:	9f 4f       	sbci	r25, 0xFF	; 255
     f4e:	20 e0       	ldi	r18, 0x00	; 0
     f50:	30 e0       	ldi	r19, 0x00	; 0
     f52:	40 e8       	ldi	r20, 0x80	; 128
     f54:	5f e3       	ldi	r21, 0x3F	; 63
     f56:	fc 01       	movw	r30, r24
     f58:	60 81       	ld	r22, Z
     f5a:	71 81       	ldd	r23, Z+1	; 0x01
     f5c:	82 81       	ldd	r24, Z+2	; 0x02
     f5e:	93 81       	ldd	r25, Z+3	; 0x03
     f60:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <__cmpsf2>
     f64:	88 23       	and	r24, r24
     f66:	4c f4       	brge	.+18     	; 0xf7a <main+0xa60>
		__ticks = 1;
     f68:	ce 01       	movw	r24, r28
     f6a:	83 59       	subi	r24, 0x93	; 147
     f6c:	9f 4f       	sbci	r25, 0xFF	; 255
     f6e:	21 e0       	ldi	r18, 0x01	; 1
     f70:	30 e0       	ldi	r19, 0x00	; 0
     f72:	fc 01       	movw	r30, r24
     f74:	31 83       	std	Z+1, r19	; 0x01
     f76:	20 83       	st	Z, r18
     f78:	69 c0       	rjmp	.+210    	; 0x104c <main+0xb32>
	else if (__tmp > 65535)
     f7a:	ce 01       	movw	r24, r28
     f7c:	87 59       	subi	r24, 0x97	; 151
     f7e:	9f 4f       	sbci	r25, 0xFF	; 255
     f80:	20 e0       	ldi	r18, 0x00	; 0
     f82:	3f ef       	ldi	r19, 0xFF	; 255
     f84:	4f e7       	ldi	r20, 0x7F	; 127
     f86:	57 e4       	ldi	r21, 0x47	; 71
     f88:	fc 01       	movw	r30, r24
     f8a:	60 81       	ld	r22, Z
     f8c:	71 81       	ldd	r23, Z+1	; 0x01
     f8e:	82 81       	ldd	r24, Z+2	; 0x02
     f90:	93 81       	ldd	r25, Z+3	; 0x03
     f92:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <__gesf2>
     f96:	18 16       	cp	r1, r24
     f98:	0c f0       	brlt	.+2      	; 0xf9c <main+0xa82>
     f9a:	46 c0       	rjmp	.+140    	; 0x1028 <main+0xb0e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f9c:	20 e0       	ldi	r18, 0x00	; 0
     f9e:	30 e0       	ldi	r19, 0x00	; 0
     fa0:	40 e2       	ldi	r20, 0x20	; 32
     fa2:	51 e4       	ldi	r21, 0x41	; 65
     fa4:	6d 89       	ldd	r22, Y+21	; 0x15
     fa6:	7e 89       	ldd	r23, Y+22	; 0x16
     fa8:	8f 89       	ldd	r24, Y+23	; 0x17
     faa:	98 8d       	ldd	r25, Y+24	; 0x18
     fac:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__mulsf3>
     fb0:	dc 01       	movw	r26, r24
     fb2:	cb 01       	movw	r24, r22
     fb4:	8e 01       	movw	r16, r28
     fb6:	03 59       	subi	r16, 0x93	; 147
     fb8:	1f 4f       	sbci	r17, 0xFF	; 255
     fba:	bc 01       	movw	r22, r24
     fbc:	cd 01       	movw	r24, r26
     fbe:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <__fixunssfsi>
     fc2:	dc 01       	movw	r26, r24
     fc4:	cb 01       	movw	r24, r22
     fc6:	f8 01       	movw	r30, r16
     fc8:	91 83       	std	Z+1, r25	; 0x01
     fca:	80 83       	st	Z, r24
     fcc:	24 c0       	rjmp	.+72     	; 0x1016 <main+0xafc>
     fce:	ce 01       	movw	r24, r28
     fd0:	81 59       	subi	r24, 0x91	; 145
     fd2:	9f 4f       	sbci	r25, 0xFF	; 255
     fd4:	20 e9       	ldi	r18, 0x90	; 144
     fd6:	31 e0       	ldi	r19, 0x01	; 1
     fd8:	fc 01       	movw	r30, r24
     fda:	31 83       	std	Z+1, r19	; 0x01
     fdc:	20 83       	st	Z, r18
     fde:	ce 01       	movw	r24, r28
     fe0:	81 59       	subi	r24, 0x91	; 145
     fe2:	9f 4f       	sbci	r25, 0xFF	; 255
     fe4:	fc 01       	movw	r30, r24
     fe6:	80 81       	ld	r24, Z
     fe8:	91 81       	ldd	r25, Z+1	; 0x01
     fea:	01 97       	sbiw	r24, 0x01	; 1
     fec:	f1 f7       	brne	.-4      	; 0xfea <main+0xad0>
     fee:	9e 01       	movw	r18, r28
     ff0:	21 59       	subi	r18, 0x91	; 145
     ff2:	3f 4f       	sbci	r19, 0xFF	; 255
     ff4:	f9 01       	movw	r30, r18
     ff6:	91 83       	std	Z+1, r25	; 0x01
     ff8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ffa:	ce 01       	movw	r24, r28
     ffc:	83 59       	subi	r24, 0x93	; 147
     ffe:	9f 4f       	sbci	r25, 0xFF	; 255
    1000:	9e 01       	movw	r18, r28
    1002:	23 59       	subi	r18, 0x93	; 147
    1004:	3f 4f       	sbci	r19, 0xFF	; 255
    1006:	f9 01       	movw	r30, r18
    1008:	20 81       	ld	r18, Z
    100a:	31 81       	ldd	r19, Z+1	; 0x01
    100c:	21 50       	subi	r18, 0x01	; 1
    100e:	31 09       	sbc	r19, r1
    1010:	fc 01       	movw	r30, r24
    1012:	31 83       	std	Z+1, r19	; 0x01
    1014:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1016:	ce 01       	movw	r24, r28
    1018:	83 59       	subi	r24, 0x93	; 147
    101a:	9f 4f       	sbci	r25, 0xFF	; 255
    101c:	fc 01       	movw	r30, r24
    101e:	80 81       	ld	r24, Z
    1020:	91 81       	ldd	r25, Z+1	; 0x01
    1022:	89 2b       	or	r24, r25
    1024:	a1 f6       	brne	.-88     	; 0xfce <main+0xab4>
    1026:	2c c0       	rjmp	.+88     	; 0x1080 <main+0xb66>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1028:	8e 01       	movw	r16, r28
    102a:	03 59       	subi	r16, 0x93	; 147
    102c:	1f 4f       	sbci	r17, 0xFF	; 255
    102e:	ce 01       	movw	r24, r28
    1030:	87 59       	subi	r24, 0x97	; 151
    1032:	9f 4f       	sbci	r25, 0xFF	; 255
    1034:	fc 01       	movw	r30, r24
    1036:	60 81       	ld	r22, Z
    1038:	71 81       	ldd	r23, Z+1	; 0x01
    103a:	82 81       	ldd	r24, Z+2	; 0x02
    103c:	93 81       	ldd	r25, Z+3	; 0x03
    103e:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <__fixunssfsi>
    1042:	dc 01       	movw	r26, r24
    1044:	cb 01       	movw	r24, r22
    1046:	f8 01       	movw	r30, r16
    1048:	91 83       	std	Z+1, r25	; 0x01
    104a:	80 83       	st	Z, r24
    104c:	ce 01       	movw	r24, r28
    104e:	8f 58       	subi	r24, 0x8F	; 143
    1050:	9f 4f       	sbci	r25, 0xFF	; 255
    1052:	9e 01       	movw	r18, r28
    1054:	23 59       	subi	r18, 0x93	; 147
    1056:	3f 4f       	sbci	r19, 0xFF	; 255
    1058:	f9 01       	movw	r30, r18
    105a:	20 81       	ld	r18, Z
    105c:	31 81       	ldd	r19, Z+1	; 0x01
    105e:	fc 01       	movw	r30, r24
    1060:	31 83       	std	Z+1, r19	; 0x01
    1062:	20 83       	st	Z, r18
    1064:	ce 01       	movw	r24, r28
    1066:	8f 58       	subi	r24, 0x8F	; 143
    1068:	9f 4f       	sbci	r25, 0xFF	; 255
    106a:	fc 01       	movw	r30, r24
    106c:	80 81       	ld	r24, Z
    106e:	91 81       	ldd	r25, Z+1	; 0x01
    1070:	01 97       	sbiw	r24, 0x01	; 1
    1072:	f1 f7       	brne	.-4      	; 0x1070 <main+0xb56>
    1074:	9e 01       	movw	r18, r28
    1076:	2f 58       	subi	r18, 0x8F	; 143
    1078:	3f 4f       	sbci	r19, 0xFF	; 255
    107a:	f9 01       	movw	r30, r18
    107c:	91 83       	std	Z+1, r25	; 0x01
    107e:	80 83       	st	Z, r24
						_delay_ms(2);		//check that data Y good
						check++;
    1080:	89 81       	ldd	r24, Y+1	; 0x01
    1082:	8f 5f       	subi	r24, 0xFF	; 255
    1084:	89 83       	std	Y+1, r24	; 0x01
					break;
    1086:	06 c0       	rjmp	.+12     	; 0x1094 <main+0xb7a>
						
					case 'O':
					routine_done=1;
    1088:	81 e0       	ldi	r24, 0x01	; 1
    108a:	8b 83       	std	Y+3, r24	; 0x03
					check++;	//routine done
    108c:	89 81       	ldd	r24, Y+1	; 0x01
    108e:	8f 5f       	subi	r24, 0xFF	; 255
    1090:	89 83       	std	Y+1, r24	; 0x01
					break;
    1092:	00 00       	nop
		if (uart_str_complete!=0)
		{
			routine_done=0;
			uart_str_complete=0;
			send_Byte_0('1');	
			for (counter=0;counter<=data_bytes_recieved;counter++)
    1094:	8a 81       	ldd	r24, Y+2	; 0x02
    1096:	8f 5f       	subi	r24, 0xFF	; 255
    1098:	8a 83       	std	Y+2, r24	; 0x02
    109a:	80 91 e7 01 	lds	r24, 0x01E7	; 0x8001e7 <data_bytes_recieved>
    109e:	9a 81       	ldd	r25, Y+2	; 0x02
    10a0:	89 17       	cp	r24, r25
    10a2:	08 f0       	brcs	.+2      	; 0x10a6 <main+0xb8c>
    10a4:	be cd       	rjmp	.-1156   	; 0xc22 <main+0x708>
					check++;	//routine done
					break;

				}
			}
			data_bytes_recieved=0;
    10a6:	10 92 e7 01 	sts	0x01E7, r1	; 0x8001e7 <data_bytes_recieved>
			if ((check<=0)&&(check>2))
    10aa:	89 81       	ldd	r24, Y+1	; 0x01
    10ac:	88 23       	and	r24, r24
    10ae:	39 f4       	brne	.+14     	; 0x10be <main+0xba4>
    10b0:	89 81       	ldd	r24, Y+1	; 0x01
    10b2:	83 30       	cpi	r24, 0x03	; 3
    10b4:	20 f0       	brcs	.+8      	; 0x10be <main+0xba4>
			{
				send_Byte_0('0');	//return error
    10b6:	80 e3       	ldi	r24, 0x30	; 48
    10b8:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
    10bc:	01 c0       	rjmp	.+2      	; 0x10c0 <main+0xba6>
			}
			else
			{
				check=0;
    10be:	19 82       	std	Y+1, r1	; 0x01
			}
			if (routine_done>=1) //if routine done
    10c0:	8b 81       	ldd	r24, Y+3	; 0x03
    10c2:	88 23       	and	r24, r24
    10c4:	09 f4       	brne	.+2      	; 0x10c8 <main+0xbae>
    10c6:	94 c1       	rjmp	.+808    	; 0x13f0 <__stack+0x2f1>
			{
				send_to_uArm("G0 X200 Y0 Z150 F6000\n");	//back to start-position
    10c8:	8e e6       	ldi	r24, 0x6E	; 110
    10ca:	91 e0       	ldi	r25, 0x01	; 1
    10cc:	0e 94 ad 01 	call	0x35a	; 0x35a <send_to_uArm>
				routine_done=0;
    10d0:	1b 82       	std	Y+3, r1	; 0x03
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    10d2:	04 c0       	rjmp	.+8      	; 0x10dc <main+0xbc2>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
    10d4:	80 e0       	ldi	r24, 0x00	; 0
    10d6:	91 e0       	ldi	r25, 0x01	; 1
    10d8:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
			}
			if (routine_done>=1) //if routine done
			{
				send_to_uArm("G0 X200 Y0 Z150 F6000\n");	//back to start-position
				routine_done=0;
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    10dc:	80 91 ed 01 	lds	r24, 0x01ED	; 0x8001ed <uart_string1+0x4>
    10e0:	81 33       	cpi	r24, 0x31	; 49
    10e2:	c1 f3       	breq	.-16     	; 0x10d4 <main+0xbba>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
				}
				if (DIP_Switch&0x01)		//denn macht er meis
    10e4:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <__data_end>
    10e8:	88 2f       	mov	r24, r24
    10ea:	90 e0       	ldi	r25, 0x00	; 0
    10ec:	81 70       	andi	r24, 0x01	; 1
    10ee:	99 27       	eor	r25, r25
    10f0:	89 2b       	or	r24, r25
    10f2:	09 f4       	brne	.+2      	; 0x10f6 <main+0xbdc>
    10f4:	e8 cb       	rjmp	.-2096   	; 0x8c6 <main+0x3ac>
				{
					to_uARM("M2210 F500 T200\n");
    10f6:	85 e8       	ldi	r24, 0x85	; 133
    10f8:	91 e0       	ldi	r25, 0x01	; 1
    10fa:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    10fe:	80 e0       	ldi	r24, 0x00	; 0
    1100:	90 e0       	ldi	r25, 0x00	; 0
    1102:	a8 e4       	ldi	r26, 0x48	; 72
    1104:	b3 e4       	ldi	r27, 0x43	; 67
    1106:	8d 8f       	std	Y+29, r24	; 0x1d
    1108:	9e 8f       	std	Y+30, r25	; 0x1e
    110a:	af 8f       	std	Y+31, r26	; 0x1f
    110c:	b8 a3       	std	Y+32, r27	; 0x20

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    110e:	8e 01       	movw	r16, r28
    1110:	03 58       	subi	r16, 0x83	; 131
    1112:	1f 4f       	sbci	r17, 0xFF	; 255
    1114:	20 e0       	ldi	r18, 0x00	; 0
    1116:	30 e0       	ldi	r19, 0x00	; 0
    1118:	4a e7       	ldi	r20, 0x7A	; 122
    111a:	55 e4       	ldi	r21, 0x45	; 69
    111c:	6d 8d       	ldd	r22, Y+29	; 0x1d
    111e:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1120:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1122:	98 a1       	ldd	r25, Y+32	; 0x20
    1124:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__mulsf3>
    1128:	dc 01       	movw	r26, r24
    112a:	cb 01       	movw	r24, r22
    112c:	f8 01       	movw	r30, r16
    112e:	80 83       	st	Z, r24
    1130:	91 83       	std	Z+1, r25	; 0x01
    1132:	a2 83       	std	Z+2, r26	; 0x02
    1134:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1136:	ce 01       	movw	r24, r28
    1138:	83 58       	subi	r24, 0x83	; 131
    113a:	9f 4f       	sbci	r25, 0xFF	; 255
    113c:	20 e0       	ldi	r18, 0x00	; 0
    113e:	30 e0       	ldi	r19, 0x00	; 0
    1140:	40 e8       	ldi	r20, 0x80	; 128
    1142:	5f e3       	ldi	r21, 0x3F	; 63
    1144:	fc 01       	movw	r30, r24
    1146:	60 81       	ld	r22, Z
    1148:	71 81       	ldd	r23, Z+1	; 0x01
    114a:	82 81       	ldd	r24, Z+2	; 0x02
    114c:	93 81       	ldd	r25, Z+3	; 0x03
    114e:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <__cmpsf2>
    1152:	88 23       	and	r24, r24
    1154:	4c f4       	brge	.+18     	; 0x1168 <__stack+0x69>
		__ticks = 1;
    1156:	ce 01       	movw	r24, r28
    1158:	8f 57       	subi	r24, 0x7F	; 127
    115a:	9f 4f       	sbci	r25, 0xFF	; 255
    115c:	21 e0       	ldi	r18, 0x01	; 1
    115e:	30 e0       	ldi	r19, 0x00	; 0
    1160:	fc 01       	movw	r30, r24
    1162:	31 83       	std	Z+1, r19	; 0x01
    1164:	20 83       	st	Z, r18
    1166:	69 c0       	rjmp	.+210    	; 0x123a <__stack+0x13b>
	else if (__tmp > 65535)
    1168:	ce 01       	movw	r24, r28
    116a:	83 58       	subi	r24, 0x83	; 131
    116c:	9f 4f       	sbci	r25, 0xFF	; 255
    116e:	20 e0       	ldi	r18, 0x00	; 0
    1170:	3f ef       	ldi	r19, 0xFF	; 255
    1172:	4f e7       	ldi	r20, 0x7F	; 127
    1174:	57 e4       	ldi	r21, 0x47	; 71
    1176:	fc 01       	movw	r30, r24
    1178:	60 81       	ld	r22, Z
    117a:	71 81       	ldd	r23, Z+1	; 0x01
    117c:	82 81       	ldd	r24, Z+2	; 0x02
    117e:	93 81       	ldd	r25, Z+3	; 0x03
    1180:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <__gesf2>
    1184:	18 16       	cp	r1, r24
    1186:	0c f0       	brlt	.+2      	; 0x118a <__stack+0x8b>
    1188:	46 c0       	rjmp	.+140    	; 0x1216 <__stack+0x117>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    118a:	20 e0       	ldi	r18, 0x00	; 0
    118c:	30 e0       	ldi	r19, 0x00	; 0
    118e:	40 e2       	ldi	r20, 0x20	; 32
    1190:	51 e4       	ldi	r21, 0x41	; 65
    1192:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1194:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1196:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1198:	98 a1       	ldd	r25, Y+32	; 0x20
    119a:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__mulsf3>
    119e:	dc 01       	movw	r26, r24
    11a0:	cb 01       	movw	r24, r22
    11a2:	8e 01       	movw	r16, r28
    11a4:	0f 57       	subi	r16, 0x7F	; 127
    11a6:	1f 4f       	sbci	r17, 0xFF	; 255
    11a8:	bc 01       	movw	r22, r24
    11aa:	cd 01       	movw	r24, r26
    11ac:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <__fixunssfsi>
    11b0:	dc 01       	movw	r26, r24
    11b2:	cb 01       	movw	r24, r22
    11b4:	f8 01       	movw	r30, r16
    11b6:	91 83       	std	Z+1, r25	; 0x01
    11b8:	80 83       	st	Z, r24
    11ba:	24 c0       	rjmp	.+72     	; 0x1204 <__stack+0x105>
    11bc:	ce 01       	movw	r24, r28
    11be:	8d 57       	subi	r24, 0x7D	; 125
    11c0:	9f 4f       	sbci	r25, 0xFF	; 255
    11c2:	20 e9       	ldi	r18, 0x90	; 144
    11c4:	31 e0       	ldi	r19, 0x01	; 1
    11c6:	fc 01       	movw	r30, r24
    11c8:	31 83       	std	Z+1, r19	; 0x01
    11ca:	20 83       	st	Z, r18
    11cc:	ce 01       	movw	r24, r28
    11ce:	8d 57       	subi	r24, 0x7D	; 125
    11d0:	9f 4f       	sbci	r25, 0xFF	; 255
    11d2:	fc 01       	movw	r30, r24
    11d4:	80 81       	ld	r24, Z
    11d6:	91 81       	ldd	r25, Z+1	; 0x01
    11d8:	01 97       	sbiw	r24, 0x01	; 1
    11da:	f1 f7       	brne	.-4      	; 0x11d8 <__stack+0xd9>
    11dc:	9e 01       	movw	r18, r28
    11de:	2d 57       	subi	r18, 0x7D	; 125
    11e0:	3f 4f       	sbci	r19, 0xFF	; 255
    11e2:	f9 01       	movw	r30, r18
    11e4:	91 83       	std	Z+1, r25	; 0x01
    11e6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11e8:	ce 01       	movw	r24, r28
    11ea:	8f 57       	subi	r24, 0x7F	; 127
    11ec:	9f 4f       	sbci	r25, 0xFF	; 255
    11ee:	9e 01       	movw	r18, r28
    11f0:	2f 57       	subi	r18, 0x7F	; 127
    11f2:	3f 4f       	sbci	r19, 0xFF	; 255
    11f4:	f9 01       	movw	r30, r18
    11f6:	20 81       	ld	r18, Z
    11f8:	31 81       	ldd	r19, Z+1	; 0x01
    11fa:	21 50       	subi	r18, 0x01	; 1
    11fc:	31 09       	sbc	r19, r1
    11fe:	fc 01       	movw	r30, r24
    1200:	31 83       	std	Z+1, r19	; 0x01
    1202:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1204:	ce 01       	movw	r24, r28
    1206:	8f 57       	subi	r24, 0x7F	; 127
    1208:	9f 4f       	sbci	r25, 0xFF	; 255
    120a:	fc 01       	movw	r30, r24
    120c:	80 81       	ld	r24, Z
    120e:	91 81       	ldd	r25, Z+1	; 0x01
    1210:	89 2b       	or	r24, r25
    1212:	a1 f6       	brne	.-88     	; 0x11bc <__stack+0xbd>
    1214:	2c c0       	rjmp	.+88     	; 0x126e <__stack+0x16f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1216:	8e 01       	movw	r16, r28
    1218:	0f 57       	subi	r16, 0x7F	; 127
    121a:	1f 4f       	sbci	r17, 0xFF	; 255
    121c:	ce 01       	movw	r24, r28
    121e:	83 58       	subi	r24, 0x83	; 131
    1220:	9f 4f       	sbci	r25, 0xFF	; 255
    1222:	fc 01       	movw	r30, r24
    1224:	60 81       	ld	r22, Z
    1226:	71 81       	ldd	r23, Z+1	; 0x01
    1228:	82 81       	ldd	r24, Z+2	; 0x02
    122a:	93 81       	ldd	r25, Z+3	; 0x03
    122c:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <__fixunssfsi>
    1230:	dc 01       	movw	r26, r24
    1232:	cb 01       	movw	r24, r22
    1234:	f8 01       	movw	r30, r16
    1236:	91 83       	std	Z+1, r25	; 0x01
    1238:	80 83       	st	Z, r24
    123a:	ce 01       	movw	r24, r28
    123c:	8b 57       	subi	r24, 0x7B	; 123
    123e:	9f 4f       	sbci	r25, 0xFF	; 255
    1240:	9e 01       	movw	r18, r28
    1242:	2f 57       	subi	r18, 0x7F	; 127
    1244:	3f 4f       	sbci	r19, 0xFF	; 255
    1246:	f9 01       	movw	r30, r18
    1248:	20 81       	ld	r18, Z
    124a:	31 81       	ldd	r19, Z+1	; 0x01
    124c:	fc 01       	movw	r30, r24
    124e:	31 83       	std	Z+1, r19	; 0x01
    1250:	20 83       	st	Z, r18
    1252:	ce 01       	movw	r24, r28
    1254:	8b 57       	subi	r24, 0x7B	; 123
    1256:	9f 4f       	sbci	r25, 0xFF	; 255
    1258:	fc 01       	movw	r30, r24
    125a:	80 81       	ld	r24, Z
    125c:	91 81       	ldd	r25, Z+1	; 0x01
    125e:	01 97       	sbiw	r24, 0x01	; 1
    1260:	f1 f7       	brne	.-4      	; 0x125e <__stack+0x15f>
    1262:	9e 01       	movw	r18, r28
    1264:	2b 57       	subi	r18, 0x7B	; 123
    1266:	3f 4f       	sbci	r19, 0xFF	; 255
    1268:	f9 01       	movw	r30, r18
    126a:	91 83       	std	Z+1, r25	; 0x01
    126c:	80 83       	st	Z, r24
					_delay_ms(200);
					to_uARM("M2210 F1000 T500\n");
    126e:	86 e9       	ldi	r24, 0x96	; 150
    1270:	91 e0       	ldi	r25, 0x01	; 1
    1272:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    1276:	80 e0       	ldi	r24, 0x00	; 0
    1278:	90 e0       	ldi	r25, 0x00	; 0
    127a:	aa ef       	ldi	r26, 0xFA	; 250
    127c:	b3 e4       	ldi	r27, 0x43	; 67
    127e:	89 8f       	std	Y+25, r24	; 0x19
    1280:	9a 8f       	std	Y+26, r25	; 0x1a
    1282:	ab 8f       	std	Y+27, r26	; 0x1b
    1284:	bc 8f       	std	Y+28, r27	; 0x1c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1286:	8e 01       	movw	r16, r28
    1288:	0d 58       	subi	r16, 0x8D	; 141
    128a:	1f 4f       	sbci	r17, 0xFF	; 255
    128c:	20 e0       	ldi	r18, 0x00	; 0
    128e:	30 e0       	ldi	r19, 0x00	; 0
    1290:	4a e7       	ldi	r20, 0x7A	; 122
    1292:	55 e4       	ldi	r21, 0x45	; 69
    1294:	69 8d       	ldd	r22, Y+25	; 0x19
    1296:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1298:	8b 8d       	ldd	r24, Y+27	; 0x1b
    129a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    129c:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__mulsf3>
    12a0:	dc 01       	movw	r26, r24
    12a2:	cb 01       	movw	r24, r22
    12a4:	f8 01       	movw	r30, r16
    12a6:	80 83       	st	Z, r24
    12a8:	91 83       	std	Z+1, r25	; 0x01
    12aa:	a2 83       	std	Z+2, r26	; 0x02
    12ac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    12ae:	ce 01       	movw	r24, r28
    12b0:	8d 58       	subi	r24, 0x8D	; 141
    12b2:	9f 4f       	sbci	r25, 0xFF	; 255
    12b4:	20 e0       	ldi	r18, 0x00	; 0
    12b6:	30 e0       	ldi	r19, 0x00	; 0
    12b8:	40 e8       	ldi	r20, 0x80	; 128
    12ba:	5f e3       	ldi	r21, 0x3F	; 63
    12bc:	fc 01       	movw	r30, r24
    12be:	60 81       	ld	r22, Z
    12c0:	71 81       	ldd	r23, Z+1	; 0x01
    12c2:	82 81       	ldd	r24, Z+2	; 0x02
    12c4:	93 81       	ldd	r25, Z+3	; 0x03
    12c6:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <__cmpsf2>
    12ca:	88 23       	and	r24, r24
    12cc:	4c f4       	brge	.+18     	; 0x12e0 <__stack+0x1e1>
		__ticks = 1;
    12ce:	ce 01       	movw	r24, r28
    12d0:	89 58       	subi	r24, 0x89	; 137
    12d2:	9f 4f       	sbci	r25, 0xFF	; 255
    12d4:	21 e0       	ldi	r18, 0x01	; 1
    12d6:	30 e0       	ldi	r19, 0x00	; 0
    12d8:	fc 01       	movw	r30, r24
    12da:	31 83       	std	Z+1, r19	; 0x01
    12dc:	20 83       	st	Z, r18
    12de:	69 c0       	rjmp	.+210    	; 0x13b2 <__stack+0x2b3>
	else if (__tmp > 65535)
    12e0:	ce 01       	movw	r24, r28
    12e2:	8d 58       	subi	r24, 0x8D	; 141
    12e4:	9f 4f       	sbci	r25, 0xFF	; 255
    12e6:	20 e0       	ldi	r18, 0x00	; 0
    12e8:	3f ef       	ldi	r19, 0xFF	; 255
    12ea:	4f e7       	ldi	r20, 0x7F	; 127
    12ec:	57 e4       	ldi	r21, 0x47	; 71
    12ee:	fc 01       	movw	r30, r24
    12f0:	60 81       	ld	r22, Z
    12f2:	71 81       	ldd	r23, Z+1	; 0x01
    12f4:	82 81       	ldd	r24, Z+2	; 0x02
    12f6:	93 81       	ldd	r25, Z+3	; 0x03
    12f8:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <__gesf2>
    12fc:	18 16       	cp	r1, r24
    12fe:	0c f0       	brlt	.+2      	; 0x1302 <__stack+0x203>
    1300:	46 c0       	rjmp	.+140    	; 0x138e <__stack+0x28f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1302:	20 e0       	ldi	r18, 0x00	; 0
    1304:	30 e0       	ldi	r19, 0x00	; 0
    1306:	40 e2       	ldi	r20, 0x20	; 32
    1308:	51 e4       	ldi	r21, 0x41	; 65
    130a:	69 8d       	ldd	r22, Y+25	; 0x19
    130c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    130e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1310:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1312:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__mulsf3>
    1316:	dc 01       	movw	r26, r24
    1318:	cb 01       	movw	r24, r22
    131a:	8e 01       	movw	r16, r28
    131c:	09 58       	subi	r16, 0x89	; 137
    131e:	1f 4f       	sbci	r17, 0xFF	; 255
    1320:	bc 01       	movw	r22, r24
    1322:	cd 01       	movw	r24, r26
    1324:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <__fixunssfsi>
    1328:	dc 01       	movw	r26, r24
    132a:	cb 01       	movw	r24, r22
    132c:	f8 01       	movw	r30, r16
    132e:	91 83       	std	Z+1, r25	; 0x01
    1330:	80 83       	st	Z, r24
    1332:	24 c0       	rjmp	.+72     	; 0x137c <__stack+0x27d>
    1334:	ce 01       	movw	r24, r28
    1336:	87 58       	subi	r24, 0x87	; 135
    1338:	9f 4f       	sbci	r25, 0xFF	; 255
    133a:	20 e9       	ldi	r18, 0x90	; 144
    133c:	31 e0       	ldi	r19, 0x01	; 1
    133e:	fc 01       	movw	r30, r24
    1340:	31 83       	std	Z+1, r19	; 0x01
    1342:	20 83       	st	Z, r18
    1344:	ce 01       	movw	r24, r28
    1346:	87 58       	subi	r24, 0x87	; 135
    1348:	9f 4f       	sbci	r25, 0xFF	; 255
    134a:	fc 01       	movw	r30, r24
    134c:	80 81       	ld	r24, Z
    134e:	91 81       	ldd	r25, Z+1	; 0x01
    1350:	01 97       	sbiw	r24, 0x01	; 1
    1352:	f1 f7       	brne	.-4      	; 0x1350 <__stack+0x251>
    1354:	9e 01       	movw	r18, r28
    1356:	27 58       	subi	r18, 0x87	; 135
    1358:	3f 4f       	sbci	r19, 0xFF	; 255
    135a:	f9 01       	movw	r30, r18
    135c:	91 83       	std	Z+1, r25	; 0x01
    135e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1360:	ce 01       	movw	r24, r28
    1362:	89 58       	subi	r24, 0x89	; 137
    1364:	9f 4f       	sbci	r25, 0xFF	; 255
    1366:	9e 01       	movw	r18, r28
    1368:	29 58       	subi	r18, 0x89	; 137
    136a:	3f 4f       	sbci	r19, 0xFF	; 255
    136c:	f9 01       	movw	r30, r18
    136e:	20 81       	ld	r18, Z
    1370:	31 81       	ldd	r19, Z+1	; 0x01
    1372:	21 50       	subi	r18, 0x01	; 1
    1374:	31 09       	sbc	r19, r1
    1376:	fc 01       	movw	r30, r24
    1378:	31 83       	std	Z+1, r19	; 0x01
    137a:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    137c:	ce 01       	movw	r24, r28
    137e:	89 58       	subi	r24, 0x89	; 137
    1380:	9f 4f       	sbci	r25, 0xFF	; 255
    1382:	fc 01       	movw	r30, r24
    1384:	80 81       	ld	r24, Z
    1386:	91 81       	ldd	r25, Z+1	; 0x01
    1388:	89 2b       	or	r24, r25
    138a:	a1 f6       	brne	.-88     	; 0x1334 <__stack+0x235>
    138c:	2c c0       	rjmp	.+88     	; 0x13e6 <__stack+0x2e7>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    138e:	8e 01       	movw	r16, r28
    1390:	09 58       	subi	r16, 0x89	; 137
    1392:	1f 4f       	sbci	r17, 0xFF	; 255
    1394:	ce 01       	movw	r24, r28
    1396:	8d 58       	subi	r24, 0x8D	; 141
    1398:	9f 4f       	sbci	r25, 0xFF	; 255
    139a:	fc 01       	movw	r30, r24
    139c:	60 81       	ld	r22, Z
    139e:	71 81       	ldd	r23, Z+1	; 0x01
    13a0:	82 81       	ldd	r24, Z+2	; 0x02
    13a2:	93 81       	ldd	r25, Z+3	; 0x03
    13a4:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <__fixunssfsi>
    13a8:	dc 01       	movw	r26, r24
    13aa:	cb 01       	movw	r24, r22
    13ac:	f8 01       	movw	r30, r16
    13ae:	91 83       	std	Z+1, r25	; 0x01
    13b0:	80 83       	st	Z, r24
    13b2:	ce 01       	movw	r24, r28
    13b4:	85 58       	subi	r24, 0x85	; 133
    13b6:	9f 4f       	sbci	r25, 0xFF	; 255
    13b8:	9e 01       	movw	r18, r28
    13ba:	29 58       	subi	r18, 0x89	; 137
    13bc:	3f 4f       	sbci	r19, 0xFF	; 255
    13be:	f9 01       	movw	r30, r18
    13c0:	20 81       	ld	r18, Z
    13c2:	31 81       	ldd	r19, Z+1	; 0x01
    13c4:	fc 01       	movw	r30, r24
    13c6:	31 83       	std	Z+1, r19	; 0x01
    13c8:	20 83       	st	Z, r18
    13ca:	ce 01       	movw	r24, r28
    13cc:	85 58       	subi	r24, 0x85	; 133
    13ce:	9f 4f       	sbci	r25, 0xFF	; 255
    13d0:	fc 01       	movw	r30, r24
    13d2:	80 81       	ld	r24, Z
    13d4:	91 81       	ldd	r25, Z+1	; 0x01
    13d6:	01 97       	sbiw	r24, 0x01	; 1
    13d8:	f1 f7       	brne	.-4      	; 0x13d6 <__stack+0x2d7>
    13da:	9e 01       	movw	r18, r28
    13dc:	25 58       	subi	r18, 0x85	; 133
    13de:	3f 4f       	sbci	r19, 0xFF	; 255
    13e0:	f9 01       	movw	r30, r18
    13e2:	91 83       	std	Z+1, r25	; 0x01
    13e4:	80 83       	st	Z, r24
					_delay_ms(500);
					to_uARM("M2210 F2000 T500\n");
    13e6:	88 ea       	ldi	r24, 0xA8	; 168
    13e8:	91 e0       	ldi	r25, 0x01	; 1
    13ea:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    13ee:	6b ca       	rjmp	.-2858   	; 0x8c6 <main+0x3ac>
				}
			}
			else
			{
				if (DIP_Switch&0x80)		//displays data
    13f0:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <__data_end>
    13f4:	88 23       	and	r24, r24
    13f6:	f4 f4       	brge	.+60     	; 0x1434 <__stack+0x335>
				{
					write_zahl(2,10,recieved_X,4,0,0);
    13f8:	8c 81       	ldd	r24, Y+4	; 0x04
    13fa:	9d 81       	ldd	r25, Y+5	; 0x05
    13fc:	09 2e       	mov	r0, r25
    13fe:	00 0c       	add	r0, r0
    1400:	aa 0b       	sbc	r26, r26
    1402:	bb 0b       	sbc	r27, r27
    1404:	c1 2c       	mov	r12, r1
    1406:	e1 2c       	mov	r14, r1
    1408:	04 e0       	ldi	r16, 0x04	; 4
    140a:	9c 01       	movw	r18, r24
    140c:	ad 01       	movw	r20, r26
    140e:	6a e0       	ldi	r22, 0x0A	; 10
    1410:	82 e0       	ldi	r24, 0x02	; 2
    1412:	0e 94 1a 0c 	call	0x1834	; 0x1834 <write_zahl>
					write_zahl(3,10,recieved_Y,4,0,0);
    1416:	8e 81       	ldd	r24, Y+6	; 0x06
    1418:	9f 81       	ldd	r25, Y+7	; 0x07
    141a:	09 2e       	mov	r0, r25
    141c:	00 0c       	add	r0, r0
    141e:	aa 0b       	sbc	r26, r26
    1420:	bb 0b       	sbc	r27, r27
    1422:	c1 2c       	mov	r12, r1
    1424:	e1 2c       	mov	r14, r1
    1426:	04 e0       	ldi	r16, 0x04	; 4
    1428:	9c 01       	movw	r18, r24
    142a:	ad 01       	movw	r20, r26
    142c:	6a e0       	ldi	r22, 0x0A	; 10
    142e:	83 e0       	ldi	r24, 0x03	; 3
    1430:	0e 94 1a 0c 	call	0x1834	; 0x1834 <write_zahl>
				}	
				//Grid anpassung
				recieved_X-=384;
    1434:	8c 81       	ldd	r24, Y+4	; 0x04
    1436:	9d 81       	ldd	r25, Y+5	; 0x05
    1438:	80 58       	subi	r24, 0x80	; 128
    143a:	91 40       	sbci	r25, 0x01	; 1
    143c:	9d 83       	std	Y+5, r25	; 0x05
    143e:	8c 83       	std	Y+4, r24	; 0x04
				recieved_Y-=512;				
    1440:	8e 81       	ldd	r24, Y+6	; 0x06
    1442:	9f 81       	ldd	r25, Y+7	; 0x07
    1444:	92 50       	subi	r25, 0x02	; 2
    1446:	9f 83       	std	Y+7, r25	; 0x07
    1448:	8e 83       	std	Y+6, r24	; 0x06
				recieved_X=((recieved_X/5)*-1)+200;
    144a:	8c 81       	ldd	r24, Y+4	; 0x04
    144c:	9d 81       	ldd	r25, Y+5	; 0x05
    144e:	25 e0       	ldi	r18, 0x05	; 5
    1450:	30 e0       	ldi	r19, 0x00	; 0
    1452:	b9 01       	movw	r22, r18
    1454:	0e 94 f3 0e 	call	0x1de6	; 0x1de6 <__divmodhi4>
    1458:	cb 01       	movw	r24, r22
    145a:	9c 01       	movw	r18, r24
    145c:	88 ec       	ldi	r24, 0xC8	; 200
    145e:	90 e0       	ldi	r25, 0x00	; 0
    1460:	82 1b       	sub	r24, r18
    1462:	93 0b       	sbc	r25, r19
    1464:	9d 83       	std	Y+5, r25	; 0x05
    1466:	8c 83       	std	Y+4, r24	; 0x04
				recieved_Y=(recieved_Y/5)*-1;	
    1468:	8e 81       	ldd	r24, Y+6	; 0x06
    146a:	9f 81       	ldd	r25, Y+7	; 0x07
    146c:	25 e0       	ldi	r18, 0x05	; 5
    146e:	30 e0       	ldi	r19, 0x00	; 0
    1470:	b9 01       	movw	r22, r18
    1472:	0e 94 f3 0e 	call	0x1de6	; 0x1de6 <__divmodhi4>
    1476:	cb 01       	movw	r24, r22
    1478:	91 95       	neg	r25
    147a:	81 95       	neg	r24
    147c:	91 09       	sbc	r25, r1
    147e:	9f 83       	std	Y+7, r25	; 0x07
    1480:	8e 83       	std	Y+6, r24	; 0x06
				////////////////
				//form new string			
				snprintf(buffer,30,"G0 X%d Y%d Z-20 F6000\n",recieved_X,recieved_Y);
    1482:	8f 81       	ldd	r24, Y+7	; 0x07
    1484:	8f 93       	push	r24
    1486:	8e 81       	ldd	r24, Y+6	; 0x06
    1488:	8f 93       	push	r24
    148a:	8d 81       	ldd	r24, Y+5	; 0x05
    148c:	8f 93       	push	r24
    148e:	8c 81       	ldd	r24, Y+4	; 0x04
    1490:	8f 93       	push	r24
    1492:	8a eb       	ldi	r24, 0xBA	; 186
    1494:	91 e0       	ldi	r25, 0x01	; 1
    1496:	89 2f       	mov	r24, r25
    1498:	8f 93       	push	r24
    149a:	8a eb       	ldi	r24, 0xBA	; 186
    149c:	91 e0       	ldi	r25, 0x01	; 1
    149e:	8f 93       	push	r24
    14a0:	1f 92       	push	r1
    14a2:	8e e1       	ldi	r24, 0x1E	; 30
    14a4:	8f 93       	push	r24
    14a6:	ce 01       	movw	r24, r28
    14a8:	89 57       	subi	r24, 0x79	; 121
    14aa:	9f 4f       	sbci	r25, 0xFF	; 255
    14ac:	29 2f       	mov	r18, r25
    14ae:	2f 93       	push	r18
    14b0:	8f 93       	push	r24
    14b2:	0e 94 3d 0f 	call	0x1e7a	; 0x1e7a <snprintf>
    14b6:	8d b7       	in	r24, 0x3d	; 61
    14b8:	9e b7       	in	r25, 0x3e	; 62
    14ba:	0a 96       	adiw	r24, 0x0a	; 10
    14bc:	0f b6       	in	r0, 0x3f	; 63
    14be:	f8 94       	cli
    14c0:	de bf       	out	0x3e, r29	; 62
    14c2:	0f be       	out	0x3f, r0	; 63
    14c4:	cd bf       	out	0x3d, r28	; 61
				if (DIP_Switch&0x80)		//display new x/y calculated data
    14c6:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <__data_end>
    14ca:	88 23       	and	r24, r24
    14cc:	f4 f4       	brge	.+60     	; 0x150a <__stack+0x40b>
				{
					write_zahl(2,0,recieved_X,4,0,0);
    14ce:	8c 81       	ldd	r24, Y+4	; 0x04
    14d0:	9d 81       	ldd	r25, Y+5	; 0x05
    14d2:	09 2e       	mov	r0, r25
    14d4:	00 0c       	add	r0, r0
    14d6:	aa 0b       	sbc	r26, r26
    14d8:	bb 0b       	sbc	r27, r27
    14da:	c1 2c       	mov	r12, r1
    14dc:	e1 2c       	mov	r14, r1
    14de:	04 e0       	ldi	r16, 0x04	; 4
    14e0:	9c 01       	movw	r18, r24
    14e2:	ad 01       	movw	r20, r26
    14e4:	60 e0       	ldi	r22, 0x00	; 0
    14e6:	82 e0       	ldi	r24, 0x02	; 2
    14e8:	0e 94 1a 0c 	call	0x1834	; 0x1834 <write_zahl>
					write_zahl(3,0,recieved_Y,4,0,0);
    14ec:	8e 81       	ldd	r24, Y+6	; 0x06
    14ee:	9f 81       	ldd	r25, Y+7	; 0x07
    14f0:	09 2e       	mov	r0, r25
    14f2:	00 0c       	add	r0, r0
    14f4:	aa 0b       	sbc	r26, r26
    14f6:	bb 0b       	sbc	r27, r27
    14f8:	c1 2c       	mov	r12, r1
    14fa:	e1 2c       	mov	r14, r1
    14fc:	04 e0       	ldi	r16, 0x04	; 4
    14fe:	9c 01       	movw	r18, r24
    1500:	ad 01       	movw	r20, r26
    1502:	60 e0       	ldi	r22, 0x00	; 0
    1504:	83 e0       	ldi	r24, 0x03	; 3
    1506:	0e 94 1a 0c 	call	0x1834	; 0x1834 <write_zahl>
				}
				send_to_uArm(buffer);		//send new string
    150a:	ce 01       	movw	r24, r28
    150c:	89 57       	subi	r24, 0x79	; 121
    150e:	9f 4f       	sbci	r25, 0xFF	; 255
    1510:	0e 94 ad 01 	call	0x35a	; 0x35a <send_to_uArm>
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    1514:	04 c0       	rjmp	.+8      	; 0x151e <__stack+0x41f>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
    1516:	80 e0       	ldi	r24, 0x00	; 0
    1518:	91 e0       	ldi	r25, 0x01	; 1
    151a:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
				{
					write_zahl(2,0,recieved_X,4,0,0);
					write_zahl(3,0,recieved_Y,4,0,0);
				}
				send_to_uArm(buffer);		//send new string
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    151e:	80 91 ed 01 	lds	r24, 0x01ED	; 0x8001ed <uart_string1+0x4>
    1522:	81 33       	cpi	r24, 0x31	; 49
    1524:	c1 f3       	breq	.-16     	; 0x1516 <__stack+0x417>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
				}
				if (DIP_Switch&0x01)	//macht wider meis wen er det isch
    1526:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <__data_end>
    152a:	88 2f       	mov	r24, r24
    152c:	90 e0       	ldi	r25, 0x00	; 0
    152e:	81 70       	andi	r24, 0x01	; 1
    1530:	99 27       	eor	r25, r25
    1532:	89 2b       	or	r24, r25
    1534:	21 f0       	breq	.+8      	; 0x153e <__stack+0x43f>
				{
					to_uARM("M2210 F2000 T200\n");
    1536:	81 ed       	ldi	r24, 0xD1	; 209
    1538:	91 e0       	ldi	r25, 0x01	; 1
    153a:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
				}
				
				send_Byte_0('1');		//return that action done
    153e:	81 e3       	ldi	r24, 0x31	; 49
    1540:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
			}
				
		}
	} //end while(1)
    1544:	c0 c9       	rjmp	.-3200   	; 0x8c6 <main+0x3ac>

00001546 <init_Timer0_1ms_int>:
    1546:	cf 93       	push	r28
    1548:	df 93       	push	r29
    154a:	cd b7       	in	r28, 0x3d	; 61
    154c:	de b7       	in	r29, 0x3e	; 62
    154e:	84 e4       	ldi	r24, 0x44	; 68
    1550:	90 e0       	ldi	r25, 0x00	; 0
    1552:	24 e4       	ldi	r18, 0x44	; 68
    1554:	30 e0       	ldi	r19, 0x00	; 0
    1556:	f9 01       	movw	r30, r18
    1558:	20 81       	ld	r18, Z
    155a:	22 60       	ori	r18, 0x02	; 2
    155c:	fc 01       	movw	r30, r24
    155e:	20 83       	st	Z, r18
    1560:	85 e4       	ldi	r24, 0x45	; 69
    1562:	90 e0       	ldi	r25, 0x00	; 0
    1564:	25 e4       	ldi	r18, 0x45	; 69
    1566:	30 e0       	ldi	r19, 0x00	; 0
    1568:	f9 01       	movw	r30, r18
    156a:	20 81       	ld	r18, Z
    156c:	23 60       	ori	r18, 0x03	; 3
    156e:	fc 01       	movw	r30, r24
    1570:	20 83       	st	Z, r18
    1572:	87 e4       	ldi	r24, 0x47	; 71
    1574:	90 e0       	ldi	r25, 0x00	; 0
    1576:	29 ef       	ldi	r18, 0xF9	; 249
    1578:	fc 01       	movw	r30, r24
    157a:	20 83       	st	Z, r18
    157c:	8e e6       	ldi	r24, 0x6E	; 110
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	2e e6       	ldi	r18, 0x6E	; 110
    1582:	30 e0       	ldi	r19, 0x00	; 0
    1584:	f9 01       	movw	r30, r18
    1586:	20 81       	ld	r18, Z
    1588:	22 60       	ori	r18, 0x02	; 2
    158a:	fc 01       	movw	r30, r24
    158c:	20 83       	st	Z, r18
    158e:	00 00       	nop
    1590:	df 91       	pop	r29
    1592:	cf 91       	pop	r28
    1594:	08 95       	ret

00001596 <__vector_16>:
    1596:	1f 92       	push	r1
    1598:	0f 92       	push	r0
    159a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    159e:	0f 92       	push	r0
    15a0:	11 24       	eor	r1, r1
    15a2:	2f 93       	push	r18
    15a4:	3f 93       	push	r19
    15a6:	4f 93       	push	r20
    15a8:	5f 93       	push	r21
    15aa:	6f 93       	push	r22
    15ac:	7f 93       	push	r23
    15ae:	8f 93       	push	r24
    15b0:	9f 93       	push	r25
    15b2:	af 93       	push	r26
    15b4:	bf 93       	push	r27
    15b6:	ef 93       	push	r30
    15b8:	ff 93       	push	r31
    15ba:	cf 93       	push	r28
    15bc:	df 93       	push	r29
    15be:	cd b7       	in	r28, 0x3d	; 61
    15c0:	de b7       	in	r29, 0x3e	; 62
    15c2:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <tick_1ms>
    15c6:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <tick_1ms+0x1>
    15ca:	a0 91 22 02 	lds	r26, 0x0222	; 0x800222 <tick_1ms+0x2>
    15ce:	b0 91 23 02 	lds	r27, 0x0223	; 0x800223 <tick_1ms+0x3>
    15d2:	01 96       	adiw	r24, 0x01	; 1
    15d4:	a1 1d       	adc	r26, r1
    15d6:	b1 1d       	adc	r27, r1
    15d8:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <tick_1ms>
    15dc:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <tick_1ms+0x1>
    15e0:	a0 93 22 02 	sts	0x0222, r26	; 0x800222 <tick_1ms+0x2>
    15e4:	b0 93 23 02 	sts	0x0223, r27	; 0x800223 <tick_1ms+0x3>
    15e8:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <tick_1ms>
    15ec:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <tick_1ms+0x1>
    15f0:	a0 91 22 02 	lds	r26, 0x0222	; 0x800222 <tick_1ms+0x2>
    15f4:	b0 91 23 02 	lds	r27, 0x0223	; 0x800223 <tick_1ms+0x3>
    15f8:	28 ee       	ldi	r18, 0xE8	; 232
    15fa:	33 e0       	ldi	r19, 0x03	; 3
    15fc:	40 e0       	ldi	r20, 0x00	; 0
    15fe:	50 e0       	ldi	r21, 0x00	; 0
    1600:	bc 01       	movw	r22, r24
    1602:	cd 01       	movw	r24, r26
    1604:	0e 94 07 0f 	call	0x1e0e	; 0x1e0e <__udivmodsi4>
    1608:	dc 01       	movw	r26, r24
    160a:	cb 01       	movw	r24, r22
    160c:	89 2b       	or	r24, r25
    160e:	8a 2b       	or	r24, r26
    1610:	8b 2b       	or	r24, r27
    1612:	99 f4       	brne	.+38     	; 0x163a <__vector_16+0xa4>
    1614:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <tick_1s>
    1618:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <tick_1s+0x1>
    161c:	a0 91 26 02 	lds	r26, 0x0226	; 0x800226 <tick_1s+0x2>
    1620:	b0 91 27 02 	lds	r27, 0x0227	; 0x800227 <tick_1s+0x3>
    1624:	01 96       	adiw	r24, 0x01	; 1
    1626:	a1 1d       	adc	r26, r1
    1628:	b1 1d       	adc	r27, r1
    162a:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <tick_1s>
    162e:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <tick_1s+0x1>
    1632:	a0 93 26 02 	sts	0x0226, r26	; 0x800226 <tick_1s+0x2>
    1636:	b0 93 27 02 	sts	0x0227, r27	; 0x800227 <tick_1s+0x3>
    163a:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <tick_1ms_cnt>
    163e:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <tick_1ms_cnt+0x1>
    1642:	a0 91 1e 02 	lds	r26, 0x021E	; 0x80021e <tick_1ms_cnt+0x2>
    1646:	b0 91 1f 02 	lds	r27, 0x021F	; 0x80021f <tick_1ms_cnt+0x3>
    164a:	89 2b       	or	r24, r25
    164c:	8a 2b       	or	r24, r26
    164e:	8b 2b       	or	r24, r27
    1650:	99 f0       	breq	.+38     	; 0x1678 <__vector_16+0xe2>
    1652:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <tick_1ms_cnt>
    1656:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <tick_1ms_cnt+0x1>
    165a:	a0 91 1e 02 	lds	r26, 0x021E	; 0x80021e <tick_1ms_cnt+0x2>
    165e:	b0 91 1f 02 	lds	r27, 0x021F	; 0x80021f <tick_1ms_cnt+0x3>
    1662:	01 97       	sbiw	r24, 0x01	; 1
    1664:	a1 09       	sbc	r26, r1
    1666:	b1 09       	sbc	r27, r1
    1668:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <tick_1ms_cnt>
    166c:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <tick_1ms_cnt+0x1>
    1670:	a0 93 1e 02 	sts	0x021E, r26	; 0x80021e <tick_1ms_cnt+0x2>
    1674:	b0 93 1f 02 	sts	0x021F, r27	; 0x80021f <tick_1ms_cnt+0x3>
    1678:	00 00       	nop
    167a:	df 91       	pop	r29
    167c:	cf 91       	pop	r28
    167e:	ff 91       	pop	r31
    1680:	ef 91       	pop	r30
    1682:	bf 91       	pop	r27
    1684:	af 91       	pop	r26
    1686:	9f 91       	pop	r25
    1688:	8f 91       	pop	r24
    168a:	7f 91       	pop	r23
    168c:	6f 91       	pop	r22
    168e:	5f 91       	pop	r21
    1690:	4f 91       	pop	r20
    1692:	3f 91       	pop	r19
    1694:	2f 91       	pop	r18
    1696:	0f 90       	pop	r0
    1698:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    169c:	0f 90       	pop	r0
    169e:	1f 90       	pop	r1
    16a0:	18 95       	reti

000016a2 <wait_1ms>:
    16a2:	cf 93       	push	r28
    16a4:	df 93       	push	r29
    16a6:	00 d0       	rcall	.+0      	; 0x16a8 <wait_1ms+0x6>
    16a8:	00 d0       	rcall	.+0      	; 0x16aa <wait_1ms+0x8>
    16aa:	cd b7       	in	r28, 0x3d	; 61
    16ac:	de b7       	in	r29, 0x3e	; 62
    16ae:	69 83       	std	Y+1, r22	; 0x01
    16b0:	7a 83       	std	Y+2, r23	; 0x02
    16b2:	8b 83       	std	Y+3, r24	; 0x03
    16b4:	9c 83       	std	Y+4, r25	; 0x04
    16b6:	89 81       	ldd	r24, Y+1	; 0x01
    16b8:	9a 81       	ldd	r25, Y+2	; 0x02
    16ba:	ab 81       	ldd	r26, Y+3	; 0x03
    16bc:	bc 81       	ldd	r27, Y+4	; 0x04
    16be:	89 2b       	or	r24, r25
    16c0:	8a 2b       	or	r24, r26
    16c2:	8b 2b       	or	r24, r27
    16c4:	69 f0       	breq	.+26     	; 0x16e0 <wait_1ms+0x3e>
    16c6:	89 81       	ldd	r24, Y+1	; 0x01
    16c8:	9a 81       	ldd	r25, Y+2	; 0x02
    16ca:	ab 81       	ldd	r26, Y+3	; 0x03
    16cc:	bc 81       	ldd	r27, Y+4	; 0x04
    16ce:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <tick_1ms_cnt>
    16d2:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <tick_1ms_cnt+0x1>
    16d6:	a0 93 1e 02 	sts	0x021E, r26	; 0x80021e <tick_1ms_cnt+0x2>
    16da:	b0 93 1f 02 	sts	0x021F, r27	; 0x80021f <tick_1ms_cnt+0x3>
    16de:	0c c0       	rjmp	.+24     	; 0x16f8 <wait_1ms+0x56>
    16e0:	81 e0       	ldi	r24, 0x01	; 1
    16e2:	90 e0       	ldi	r25, 0x00	; 0
    16e4:	a0 e0       	ldi	r26, 0x00	; 0
    16e6:	b0 e0       	ldi	r27, 0x00	; 0
    16e8:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <tick_1ms_cnt>
    16ec:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <tick_1ms_cnt+0x1>
    16f0:	a0 93 1e 02 	sts	0x021E, r26	; 0x80021e <tick_1ms_cnt+0x2>
    16f4:	b0 93 1f 02 	sts	0x021F, r27	; 0x80021f <tick_1ms_cnt+0x3>
    16f8:	00 00       	nop
    16fa:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <tick_1ms_cnt>
    16fe:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <tick_1ms_cnt+0x1>
    1702:	a0 91 1e 02 	lds	r26, 0x021E	; 0x80021e <tick_1ms_cnt+0x2>
    1706:	b0 91 1f 02 	lds	r27, 0x021F	; 0x80021f <tick_1ms_cnt+0x3>
    170a:	89 2b       	or	r24, r25
    170c:	8a 2b       	or	r24, r26
    170e:	8b 2b       	or	r24, r27
    1710:	a1 f7       	brne	.-24     	; 0x16fa <wait_1ms+0x58>
    1712:	00 00       	nop
    1714:	0f 90       	pop	r0
    1716:	0f 90       	pop	r0
    1718:	0f 90       	pop	r0
    171a:	0f 90       	pop	r0
    171c:	df 91       	pop	r29
    171e:	cf 91       	pop	r28
    1720:	08 95       	ret

00001722 <delay_nop>:
    1722:	cf 93       	push	r28
    1724:	df 93       	push	r29
    1726:	00 d0       	rcall	.+0      	; 0x1728 <delay_nop+0x6>
    1728:	cd b7       	in	r28, 0x3d	; 61
    172a:	de b7       	in	r29, 0x3e	; 62
    172c:	8a 83       	std	Y+2, r24	; 0x02
    172e:	19 82       	std	Y+1, r1	; 0x01
    1730:	04 c0       	rjmp	.+8      	; 0x173a <delay_nop+0x18>
    1732:	00 00       	nop
    1734:	89 81       	ldd	r24, Y+1	; 0x01
    1736:	8f 5f       	subi	r24, 0xFF	; 255
    1738:	89 83       	std	Y+1, r24	; 0x01
    173a:	99 81       	ldd	r25, Y+1	; 0x01
    173c:	8a 81       	ldd	r24, Y+2	; 0x02
    173e:	98 17       	cp	r25, r24
    1740:	c0 f3       	brcs	.-16     	; 0x1732 <delay_nop+0x10>
    1742:	00 00       	nop
    1744:	0f 90       	pop	r0
    1746:	0f 90       	pop	r0
    1748:	df 91       	pop	r29
    174a:	cf 91       	pop	r28
    174c:	08 95       	ret

0000174e <write_lcd_f>:
    174e:	91 e0       	ldi	r25, 0x01	; 1
    1750:	90 93 28 02 	sts	0x0228, r25	; 0x800228 <write_RGB_LCD_activ>
    1754:	40 9a       	sbi	0x08, 0	; 8
    1756:	41 98       	cbi	0x08, 1	; 8
    1758:	41 98       	cbi	0x08, 1	; 8
    175a:	41 9a       	sbi	0x08, 1	; 8
    175c:	41 9a       	sbi	0x08, 1	; 8
    175e:	41 98       	cbi	0x08, 1	; 8
    1760:	41 98       	cbi	0x08, 1	; 8
    1762:	41 9a       	sbi	0x08, 1	; 8
    1764:	41 9a       	sbi	0x08, 1	; 8
    1766:	41 98       	cbi	0x08, 1	; 8
    1768:	41 98       	cbi	0x08, 1	; 8
    176a:	41 9a       	sbi	0x08, 1	; 8
    176c:	41 9a       	sbi	0x08, 1	; 8
    176e:	41 98       	cbi	0x08, 1	; 8
    1770:	41 98       	cbi	0x08, 1	; 8
    1772:	41 9a       	sbi	0x08, 1	; 8
    1774:	41 9a       	sbi	0x08, 1	; 8
    1776:	41 98       	cbi	0x08, 1	; 8
    1778:	41 98       	cbi	0x08, 1	; 8
    177a:	41 9a       	sbi	0x08, 1	; 8
    177c:	40 98       	cbi	0x08, 0	; 8
    177e:	41 98       	cbi	0x08, 1	; 8
    1780:	41 98       	cbi	0x08, 1	; 8
    1782:	41 9a       	sbi	0x08, 1	; 8
    1784:	83 34       	cpi	r24, 0x43	; 67
    1786:	a9 f1       	breq	.+106    	; 0x17f2 <write_lcd_f+0xa4>
    1788:	40 9a       	sbi	0x08, 0	; 8
    178a:	41 98       	cbi	0x08, 1	; 8
    178c:	41 98       	cbi	0x08, 1	; 8
    178e:	41 9a       	sbi	0x08, 1	; 8
    1790:	40 98       	cbi	0x08, 0	; 8
    1792:	41 98       	cbi	0x08, 1	; 8
    1794:	41 98       	cbi	0x08, 1	; 8
    1796:	41 9a       	sbi	0x08, 1	; 8
    1798:	84 e0       	ldi	r24, 0x04	; 4
    179a:	41 98       	cbi	0x08, 1	; 8
    179c:	60 ff       	sbrs	r22, 0
    179e:	27 c0       	rjmp	.+78     	; 0x17ee <write_lcd_f+0xa0>
    17a0:	40 9a       	sbi	0x08, 0	; 8
    17a2:	66 95       	lsr	r22
    17a4:	41 98       	cbi	0x08, 1	; 8
    17a6:	41 9a       	sbi	0x08, 1	; 8
    17a8:	81 50       	subi	r24, 0x01	; 1
    17aa:	b9 f7       	brne	.-18     	; 0x179a <write_lcd_f+0x4c>
    17ac:	40 98       	cbi	0x08, 0	; 8
    17ae:	84 e0       	ldi	r24, 0x04	; 4
    17b0:	41 98       	cbi	0x08, 1	; 8
    17b2:	41 98       	cbi	0x08, 1	; 8
    17b4:	41 9a       	sbi	0x08, 1	; 8
    17b6:	81 50       	subi	r24, 0x01	; 1
    17b8:	d9 f7       	brne	.-10     	; 0x17b0 <write_lcd_f+0x62>
    17ba:	84 e0       	ldi	r24, 0x04	; 4
    17bc:	41 98       	cbi	0x08, 1	; 8
    17be:	60 ff       	sbrs	r22, 0
    17c0:	14 c0       	rjmp	.+40     	; 0x17ea <write_lcd_f+0x9c>
    17c2:	40 9a       	sbi	0x08, 0	; 8
    17c4:	66 95       	lsr	r22
    17c6:	41 98       	cbi	0x08, 1	; 8
    17c8:	41 9a       	sbi	0x08, 1	; 8
    17ca:	81 50       	subi	r24, 0x01	; 1
    17cc:	b9 f7       	brne	.-18     	; 0x17bc <write_lcd_f+0x6e>
    17ce:	40 98       	cbi	0x08, 0	; 8
    17d0:	84 e0       	ldi	r24, 0x04	; 4
    17d2:	41 98       	cbi	0x08, 1	; 8
    17d4:	41 98       	cbi	0x08, 1	; 8
    17d6:	41 9a       	sbi	0x08, 1	; 8
    17d8:	81 50       	subi	r24, 0x01	; 1
    17da:	d9 f7       	brne	.-10     	; 0x17d2 <write_lcd_f+0x84>
    17dc:	84 e1       	ldi	r24, 0x14	; 20
    17de:	40 9a       	sbi	0x08, 0	; 8
    17e0:	81 50       	subi	r24, 0x01	; 1
    17e2:	e9 f7       	brne	.-6      	; 0x17de <write_lcd_f+0x90>
    17e4:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <write_RGB_LCD_activ>
    17e8:	08 95       	ret
    17ea:	40 98       	cbi	0x08, 0	; 8
    17ec:	eb cf       	rjmp	.-42     	; 0x17c4 <write_lcd_f+0x76>
    17ee:	40 98       	cbi	0x08, 0	; 8
    17f0:	d8 cf       	rjmp	.-80     	; 0x17a2 <write_lcd_f+0x54>
    17f2:	40 98       	cbi	0x08, 0	; 8
    17f4:	ca cf       	rjmp	.-108    	; 0x178a <write_lcd_f+0x3c>

000017f6 <write_text_ram>:
    17f6:	0f 93       	push	r16
    17f8:	1f 93       	push	r17
    17fa:	df 93       	push	r29
    17fc:	8a 01       	movw	r16, r20
    17fe:	90 e2       	ldi	r25, 0x20	; 32
    1800:	89 9f       	mul	r24, r25
    1802:	60 0d       	add	r22, r0
    1804:	11 24       	eor	r1, r1
    1806:	60 68       	ori	r22, 0x80	; 128
    1808:	83 e4       	ldi	r24, 0x43	; 67
    180a:	0e 94 a7 0b 	call	0x174e	; 0x174e <write_lcd_f>
    180e:	f8 01       	movw	r30, r16
    1810:	60 81       	ld	r22, Z
    1812:	66 23       	and	r22, r22
    1814:	59 f0       	breq	.+22     	; 0x182c <write_text_ram+0x36>
    1816:	d0 e0       	ldi	r29, 0x00	; 0
    1818:	df 5f       	subi	r29, 0xFF	; 255
    181a:	84 e4       	ldi	r24, 0x44	; 68
    181c:	0e 94 a7 0b 	call	0x174e	; 0x174e <write_lcd_f>
    1820:	f8 01       	movw	r30, r16
    1822:	ed 0f       	add	r30, r29
    1824:	f1 1d       	adc	r31, r1
    1826:	60 81       	ld	r22, Z
    1828:	61 11       	cpse	r22, r1
    182a:	f6 cf       	rjmp	.-20     	; 0x1818 <write_text_ram+0x22>
    182c:	df 91       	pop	r29
    182e:	1f 91       	pop	r17
    1830:	0f 91       	pop	r16
    1832:	08 95       	ret

00001834 <write_zahl>:
    1834:	2f 92       	push	r2
    1836:	3f 92       	push	r3
    1838:	4f 92       	push	r4
    183a:	5f 92       	push	r5
    183c:	6f 92       	push	r6
    183e:	7f 92       	push	r7
    1840:	8f 92       	push	r8
    1842:	9f 92       	push	r9
    1844:	af 92       	push	r10
    1846:	bf 92       	push	r11
    1848:	cf 92       	push	r12
    184a:	df 92       	push	r13
    184c:	ef 92       	push	r14
    184e:	ff 92       	push	r15
    1850:	0f 93       	push	r16
    1852:	1f 93       	push	r17
    1854:	cf 93       	push	r28
    1856:	df 93       	push	r29
    1858:	cd b7       	in	r28, 0x3d	; 61
    185a:	de b7       	in	r29, 0x3e	; 62
    185c:	63 97       	sbiw	r28, 0x13	; 19
    185e:	0f b6       	in	r0, 0x3f	; 63
    1860:	f8 94       	cli
    1862:	de bf       	out	0x3e, r29	; 62
    1864:	0f be       	out	0x3f, r0	; 63
    1866:	cd bf       	out	0x3d, r28	; 61
    1868:	8a 8b       	std	Y+18, r24	; 0x12
    186a:	6b 8b       	std	Y+19, r22	; 0x13
    186c:	29 01       	movw	r4, r18
    186e:	3a 01       	movw	r6, r20
    1870:	c8 8a       	std	Y+16, r12	; 0x10
    1872:	04 36       	cpi	r16, 0x64	; 100
    1874:	08 f4       	brcc	.+2      	; 0x1878 <write_zahl+0x44>
    1876:	bd c0       	rjmp	.+378    	; 0x19f2 <write_zahl+0x1be>
    1878:	04 56       	subi	r16, 0x64	; 100
    187a:	19 8a       	std	Y+17, r1	; 0x11
    187c:	0b 30       	cpi	r16, 0x0B	; 11
    187e:	08 f0       	brcs	.+2      	; 0x1882 <write_zahl+0x4e>
    1880:	0a e0       	ldi	r16, 0x0A	; 10
    1882:	ef 86       	std	Y+15, r14	; 0x0f
    1884:	88 89       	ldd	r24, Y+16	; 0x10
    1886:	8e 15       	cp	r24, r14
    1888:	08 f4       	brcc	.+2      	; 0x188c <write_zahl+0x58>
    188a:	8f 87       	std	Y+15, r24	; 0x0f
    188c:	20 2e       	mov	r2, r16
    188e:	31 2c       	mov	r3, r1
    1890:	c1 01       	movw	r24, r2
    1892:	ef 85       	ldd	r30, Y+15	; 0x0f
    1894:	8e 0f       	add	r24, r30
    1896:	91 1d       	adc	r25, r1
    1898:	0b 97       	sbiw	r24, 0x0b	; 11
    189a:	1c f0       	brlt	.+6      	; 0x18a2 <write_zahl+0x6e>
    189c:	8a e0       	ldi	r24, 0x0A	; 10
    189e:	80 1b       	sub	r24, r16
    18a0:	8f 87       	std	Y+15, r24	; 0x0f
    18a2:	c3 01       	movw	r24, r6
    18a4:	b2 01       	movw	r22, r4
    18a6:	2a e0       	ldi	r18, 0x0A	; 10
    18a8:	30 e0       	ldi	r19, 0x00	; 0
    18aa:	40 e0       	ldi	r20, 0x00	; 0
    18ac:	50 e0       	ldi	r21, 0x00	; 0
    18ae:	0e 94 07 0f 	call	0x1e0e	; 0x1e0e <__udivmodsi4>
    18b2:	60 5d       	subi	r22, 0xD0	; 208
    18b4:	6c 87       	std	Y+12, r22	; 0x0c
    18b6:	1a e0       	ldi	r17, 0x0A	; 10
    18b8:	3a e0       	ldi	r19, 0x0A	; 10
    18ba:	c3 2e       	mov	r12, r19
    18bc:	d1 2c       	mov	r13, r1
    18be:	e1 2c       	mov	r14, r1
    18c0:	f1 2c       	mov	r15, r1
    18c2:	4a e0       	ldi	r20, 0x0A	; 10
    18c4:	84 2e       	mov	r8, r20
    18c6:	91 2c       	mov	r9, r1
    18c8:	a1 2c       	mov	r10, r1
    18ca:	b1 2c       	mov	r11, r1
    18cc:	81 e0       	ldi	r24, 0x01	; 1
    18ce:	90 e0       	ldi	r25, 0x00	; 0
    18d0:	8c 0f       	add	r24, r28
    18d2:	9d 1f       	adc	r25, r29
    18d4:	81 0f       	add	r24, r17
    18d6:	91 1d       	adc	r25, r1
    18d8:	9e 87       	std	Y+14, r25	; 0x0e
    18da:	8d 87       	std	Y+13, r24	; 0x0d
    18dc:	c3 01       	movw	r24, r6
    18de:	b2 01       	movw	r22, r4
    18e0:	a7 01       	movw	r20, r14
    18e2:	96 01       	movw	r18, r12
    18e4:	0e 94 07 0f 	call	0x1e0e	; 0x1e0e <__udivmodsi4>
    18e8:	ca 01       	movw	r24, r20
    18ea:	b9 01       	movw	r22, r18
    18ec:	a5 01       	movw	r20, r10
    18ee:	94 01       	movw	r18, r8
    18f0:	0e 94 07 0f 	call	0x1e0e	; 0x1e0e <__udivmodsi4>
    18f4:	60 5d       	subi	r22, 0xD0	; 208
    18f6:	ed 85       	ldd	r30, Y+13	; 0x0d
    18f8:	fe 85       	ldd	r31, Y+14	; 0x0e
    18fa:	60 83       	st	Z, r22
    18fc:	cc 0c       	add	r12, r12
    18fe:	dd 1c       	adc	r13, r13
    1900:	ee 1c       	adc	r14, r14
    1902:	ff 1c       	adc	r15, r15
    1904:	d7 01       	movw	r26, r14
    1906:	c6 01       	movw	r24, r12
    1908:	88 0f       	add	r24, r24
    190a:	99 1f       	adc	r25, r25
    190c:	aa 1f       	adc	r26, r26
    190e:	bb 1f       	adc	r27, r27
    1910:	88 0f       	add	r24, r24
    1912:	99 1f       	adc	r25, r25
    1914:	aa 1f       	adc	r26, r26
    1916:	bb 1f       	adc	r27, r27
    1918:	c8 0e       	add	r12, r24
    191a:	d9 1e       	adc	r13, r25
    191c:	ea 1e       	adc	r14, r26
    191e:	fb 1e       	adc	r15, r27
    1920:	11 50       	subi	r17, 0x01	; 1
    1922:	a0 f6       	brcc	.-88     	; 0x18cc <write_zahl+0x98>
    1924:	2c e0       	ldi	r18, 0x0C	; 12
    1926:	f8 89       	ldd	r31, Y+16	; 0x10
    1928:	2f 1b       	sub	r18, r31
    192a:	82 2f       	mov	r24, r18
    192c:	80 1b       	sub	r24, r16
    192e:	00 23       	and	r16, r16
    1930:	09 f4       	brne	.+2      	; 0x1934 <write_zahl+0x100>
    1932:	85 c0       	rjmp	.+266    	; 0x1a3e <write_zahl+0x20a>
    1934:	fe 01       	movw	r30, r28
    1936:	31 96       	adiw	r30, 0x01	; 1
    1938:	a1 e0       	ldi	r26, 0x01	; 1
    193a:	b0 e0       	ldi	r27, 0x00	; 0
    193c:	ac 0f       	add	r26, r28
    193e:	bd 1f       	adc	r27, r29
    1940:	a8 0f       	add	r26, r24
    1942:	b1 1d       	adc	r27, r1
    1944:	9c 91       	ld	r25, X
    1946:	91 93       	st	Z+, r25
    1948:	8f 5f       	subi	r24, 0xFF	; 255
    194a:	28 13       	cpse	r18, r24
    194c:	f5 cf       	rjmp	.-22     	; 0x1938 <write_zahl+0x104>
    194e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1950:	81 11       	cpse	r24, r1
    1952:	52 c0       	rjmp	.+164    	; 0x19f8 <write_zahl+0x1c4>
    1954:	f1 01       	movw	r30, r2
    1956:	81 e0       	ldi	r24, 0x01	; 1
    1958:	90 e0       	ldi	r25, 0x00	; 0
    195a:	8c 0f       	add	r24, r28
    195c:	9d 1f       	adc	r25, r29
    195e:	e8 0f       	add	r30, r24
    1960:	f9 1f       	adc	r31, r25
    1962:	10 82       	st	Z, r1
    1964:	99 89       	ldd	r25, Y+17	; 0x11
    1966:	99 23       	and	r25, r25
    1968:	21 f1       	breq	.+72     	; 0x19b2 <write_zahl+0x17e>
    196a:	89 81       	ldd	r24, Y+1	; 0x01
    196c:	80 33       	cpi	r24, 0x30	; 48
    196e:	09 f5       	brne	.+66     	; 0x19b2 <write_zahl+0x17e>
    1970:	a1 01       	movw	r20, r2
    1972:	41 50       	subi	r20, 0x01	; 1
    1974:	51 09       	sbc	r21, r1
    1976:	14 16       	cp	r1, r20
    1978:	15 06       	cpc	r1, r21
    197a:	dc f4       	brge	.+54     	; 0x19b2 <write_zahl+0x17e>
    197c:	80 e0       	ldi	r24, 0x00	; 0
    197e:	90 e0       	ldi	r25, 0x00	; 0
    1980:	20 e0       	ldi	r18, 0x00	; 0
    1982:	60 e2       	ldi	r22, 0x20	; 32
    1984:	03 c0       	rjmp	.+6      	; 0x198c <write_zahl+0x158>
    1986:	84 17       	cp	r24, r20
    1988:	95 07       	cpc	r25, r21
    198a:	9c f4       	brge	.+38     	; 0x19b2 <write_zahl+0x17e>
    198c:	2f 5f       	subi	r18, 0xFF	; 255
    198e:	e1 e0       	ldi	r30, 0x01	; 1
    1990:	f0 e0       	ldi	r31, 0x00	; 0
    1992:	ec 0f       	add	r30, r28
    1994:	fd 1f       	adc	r31, r29
    1996:	e8 0f       	add	r30, r24
    1998:	f9 1f       	adc	r31, r25
    199a:	60 83       	st	Z, r22
    199c:	82 2f       	mov	r24, r18
    199e:	90 e0       	ldi	r25, 0x00	; 0
    19a0:	e1 e0       	ldi	r30, 0x01	; 1
    19a2:	f0 e0       	ldi	r31, 0x00	; 0
    19a4:	ec 0f       	add	r30, r28
    19a6:	fd 1f       	adc	r31, r29
    19a8:	e8 0f       	add	r30, r24
    19aa:	f9 1f       	adc	r31, r25
    19ac:	30 81       	ld	r19, Z
    19ae:	30 33       	cpi	r19, 0x30	; 48
    19b0:	51 f3       	breq	.-44     	; 0x1986 <write_zahl+0x152>
    19b2:	ae 01       	movw	r20, r28
    19b4:	4f 5f       	subi	r20, 0xFF	; 255
    19b6:	5f 4f       	sbci	r21, 0xFF	; 255
    19b8:	6b 89       	ldd	r22, Y+19	; 0x13
    19ba:	8a 89       	ldd	r24, Y+18	; 0x12
    19bc:	0e 94 fb 0b 	call	0x17f6	; 0x17f6 <write_text_ram>
    19c0:	63 96       	adiw	r28, 0x13	; 19
    19c2:	0f b6       	in	r0, 0x3f	; 63
    19c4:	f8 94       	cli
    19c6:	de bf       	out	0x3e, r29	; 62
    19c8:	0f be       	out	0x3f, r0	; 63
    19ca:	cd bf       	out	0x3d, r28	; 61
    19cc:	df 91       	pop	r29
    19ce:	cf 91       	pop	r28
    19d0:	1f 91       	pop	r17
    19d2:	0f 91       	pop	r16
    19d4:	ff 90       	pop	r15
    19d6:	ef 90       	pop	r14
    19d8:	df 90       	pop	r13
    19da:	cf 90       	pop	r12
    19dc:	bf 90       	pop	r11
    19de:	af 90       	pop	r10
    19e0:	9f 90       	pop	r9
    19e2:	8f 90       	pop	r8
    19e4:	7f 90       	pop	r7
    19e6:	6f 90       	pop	r6
    19e8:	5f 90       	pop	r5
    19ea:	4f 90       	pop	r4
    19ec:	3f 90       	pop	r3
    19ee:	2f 90       	pop	r2
    19f0:	08 95       	ret
    19f2:	21 e0       	ldi	r18, 0x01	; 1
    19f4:	29 8b       	std	Y+17, r18	; 0x11
    19f6:	42 cf       	rjmp	.-380    	; 0x187c <write_zahl+0x48>
    19f8:	0f 5f       	subi	r16, 0xFF	; 255
    19fa:	8e e2       	ldi	r24, 0x2E	; 46
    19fc:	e1 e0       	ldi	r30, 0x01	; 1
    19fe:	f0 e0       	ldi	r31, 0x00	; 0
    1a00:	ec 0f       	add	r30, r28
    1a02:	fd 1f       	adc	r31, r29
    1a04:	e2 0d       	add	r30, r2
    1a06:	f3 1d       	adc	r31, r3
    1a08:	80 83       	st	Z, r24
    1a0a:	e0 2f       	mov	r30, r16
    1a0c:	20 1b       	sub	r18, r16
    1a0e:	82 2f       	mov	r24, r18
    1a10:	8e 0f       	add	r24, r30
    1a12:	a1 e0       	ldi	r26, 0x01	; 1
    1a14:	b0 e0       	ldi	r27, 0x00	; 0
    1a16:	ac 0f       	add	r26, r28
    1a18:	bd 1f       	adc	r27, r29
    1a1a:	a8 0f       	add	r26, r24
    1a1c:	b1 1d       	adc	r27, r1
    1a1e:	8c 91       	ld	r24, X
    1a20:	a1 e0       	ldi	r26, 0x01	; 1
    1a22:	b0 e0       	ldi	r27, 0x00	; 0
    1a24:	ac 0f       	add	r26, r28
    1a26:	bd 1f       	adc	r27, r29
    1a28:	ae 0f       	add	r26, r30
    1a2a:	b1 1d       	adc	r27, r1
    1a2c:	8c 93       	st	X, r24
    1a2e:	ef 5f       	subi	r30, 0xFF	; 255
    1a30:	8e 2f       	mov	r24, r30
    1a32:	80 1b       	sub	r24, r16
    1a34:	9f 85       	ldd	r25, Y+15	; 0x0f
    1a36:	89 17       	cp	r24, r25
    1a38:	50 f3       	brcs	.-44     	; 0x1a0e <write_zahl+0x1da>
    1a3a:	f0 e0       	ldi	r31, 0x00	; 0
    1a3c:	8c cf       	rjmp	.-232    	; 0x1956 <write_zahl+0x122>
    1a3e:	ef 85       	ldd	r30, Y+15	; 0x0f
    1a40:	ee 23       	and	r30, r30
    1a42:	21 f0       	breq	.+8      	; 0x1a4c <write_zahl+0x218>
    1a44:	8e e2       	ldi	r24, 0x2E	; 46
    1a46:	89 83       	std	Y+1, r24	; 0x01
    1a48:	01 e0       	ldi	r16, 0x01	; 1
    1a4a:	df cf       	rjmp	.-66     	; 0x1a0a <write_zahl+0x1d6>
    1a4c:	e0 e0       	ldi	r30, 0x00	; 0
    1a4e:	f0 e0       	ldi	r31, 0x00	; 0
    1a50:	82 cf       	rjmp	.-252    	; 0x1956 <write_zahl+0x122>

00001a52 <lcd_init>:
    1a52:	df 93       	push	r29
    1a54:	38 9a       	sbi	0x07, 0	; 7
    1a56:	39 9a       	sbi	0x07, 1	; 7
    1a58:	d2 e3       	ldi	r29, 0x32	; 50
    1a5a:	88 e7       	ldi	r24, 0x78	; 120
    1a5c:	0e 94 91 0b 	call	0x1722	; 0x1722 <delay_nop>
    1a60:	d1 50       	subi	r29, 0x01	; 1
    1a62:	d9 f7       	brne	.-10     	; 0x1a5a <lcd_init+0x8>
    1a64:	64 e3       	ldi	r22, 0x34	; 52
    1a66:	83 e4       	ldi	r24, 0x43	; 67
    1a68:	0e 94 a7 0b 	call	0x174e	; 0x174e <write_lcd_f>
    1a6c:	64 e3       	ldi	r22, 0x34	; 52
    1a6e:	83 e4       	ldi	r24, 0x43	; 67
    1a70:	0e 94 a7 0b 	call	0x174e	; 0x174e <write_lcd_f>
    1a74:	69 e0       	ldi	r22, 0x09	; 9
    1a76:	83 e4       	ldi	r24, 0x43	; 67
    1a78:	0e 94 a7 0b 	call	0x174e	; 0x174e <write_lcd_f>
    1a7c:	60 e3       	ldi	r22, 0x30	; 48
    1a7e:	83 e4       	ldi	r24, 0x43	; 67
    1a80:	0e 94 a7 0b 	call	0x174e	; 0x174e <write_lcd_f>
    1a84:	6c e0       	ldi	r22, 0x0C	; 12
    1a86:	83 e4       	ldi	r24, 0x43	; 67
    1a88:	0e 94 a7 0b 	call	0x174e	; 0x174e <write_lcd_f>
    1a8c:	61 e0       	ldi	r22, 0x01	; 1
    1a8e:	83 e4       	ldi	r24, 0x43	; 67
    1a90:	0e 94 a7 0b 	call	0x174e	; 0x174e <write_lcd_f>
    1a94:	d8 e0       	ldi	r29, 0x08	; 8
    1a96:	88 e7       	ldi	r24, 0x78	; 120
    1a98:	0e 94 91 0b 	call	0x1722	; 0x1722 <delay_nop>
    1a9c:	d1 50       	subi	r29, 0x01	; 1
    1a9e:	d9 f7       	brne	.-10     	; 0x1a96 <lcd_init+0x44>
    1aa0:	67 e0       	ldi	r22, 0x07	; 7
    1aa2:	83 e4       	ldi	r24, 0x43	; 67
    1aa4:	0e 94 a7 0b 	call	0x174e	; 0x174e <write_lcd_f>
    1aa8:	df 91       	pop	r29
    1aaa:	0c 94 a3 0a 	jmp	0x1546	; 0x1546 <init_Timer0_1ms_int>

00001aae <clear_lcd>:
    1aae:	df 93       	push	r29
    1ab0:	61 e0       	ldi	r22, 0x01	; 1
    1ab2:	83 e4       	ldi	r24, 0x43	; 67
    1ab4:	0e 94 a7 0b 	call	0x174e	; 0x174e <write_lcd_f>
    1ab8:	d8 e0       	ldi	r29, 0x08	; 8
    1aba:	88 e7       	ldi	r24, 0x78	; 120
    1abc:	0e 94 91 0b 	call	0x1722	; 0x1722 <delay_nop>
    1ac0:	d1 50       	subi	r29, 0x01	; 1
    1ac2:	d9 f7       	brne	.-10     	; 0x1aba <clear_lcd+0xc>
    1ac4:	df 91       	pop	r29
    1ac6:	08 95       	ret

00001ac8 <LED_Show>:
    1ac8:	cf 93       	push	r28
    1aca:	df 93       	push	r29
    1acc:	1f 92       	push	r1
    1ace:	cd b7       	in	r28, 0x3d	; 61
    1ad0:	de b7       	in	r29, 0x3e	; 62
    1ad2:	85 e2       	ldi	r24, 0x25	; 37
    1ad4:	90 e0       	ldi	r25, 0x00	; 0
    1ad6:	21 e0       	ldi	r18, 0x01	; 1
    1ad8:	fc 01       	movw	r30, r24
    1ada:	20 83       	st	Z, r18
    1adc:	19 82       	std	Y+1, r1	; 0x01
    1ade:	17 c0       	rjmp	.+46     	; 0x1b0e <LED_Show+0x46>
    1ae0:	62 e3       	ldi	r22, 0x32	; 50
    1ae2:	70 e0       	ldi	r23, 0x00	; 0
    1ae4:	80 e0       	ldi	r24, 0x00	; 0
    1ae6:	90 e0       	ldi	r25, 0x00	; 0
    1ae8:	0e 94 51 0b 	call	0x16a2	; 0x16a2 <wait_1ms>
    1aec:	85 e2       	ldi	r24, 0x25	; 37
    1aee:	90 e0       	ldi	r25, 0x00	; 0
    1af0:	29 81       	ldd	r18, Y+1	; 0x01
    1af2:	42 2f       	mov	r20, r18
    1af4:	50 e0       	ldi	r21, 0x00	; 0
    1af6:	21 e0       	ldi	r18, 0x01	; 1
    1af8:	30 e0       	ldi	r19, 0x00	; 0
    1afa:	02 c0       	rjmp	.+4      	; 0x1b00 <LED_Show+0x38>
    1afc:	22 0f       	add	r18, r18
    1afe:	33 1f       	adc	r19, r19
    1b00:	4a 95       	dec	r20
    1b02:	e2 f7       	brpl	.-8      	; 0x1afc <LED_Show+0x34>
    1b04:	fc 01       	movw	r30, r24
    1b06:	20 83       	st	Z, r18
    1b08:	89 81       	ldd	r24, Y+1	; 0x01
    1b0a:	8f 5f       	subi	r24, 0xFF	; 255
    1b0c:	89 83       	std	Y+1, r24	; 0x01
    1b0e:	89 81       	ldd	r24, Y+1	; 0x01
    1b10:	88 30       	cpi	r24, 0x08	; 8
    1b12:	30 f3       	brcs	.-52     	; 0x1ae0 <LED_Show+0x18>
    1b14:	85 e2       	ldi	r24, 0x25	; 37
    1b16:	90 e0       	ldi	r25, 0x00	; 0
    1b18:	20 e8       	ldi	r18, 0x80	; 128
    1b1a:	fc 01       	movw	r30, r24
    1b1c:	20 83       	st	Z, r18
    1b1e:	19 82       	std	Y+1, r1	; 0x01
    1b20:	17 c0       	rjmp	.+46     	; 0x1b50 <LED_Show+0x88>
    1b22:	62 e3       	ldi	r22, 0x32	; 50
    1b24:	70 e0       	ldi	r23, 0x00	; 0
    1b26:	80 e0       	ldi	r24, 0x00	; 0
    1b28:	90 e0       	ldi	r25, 0x00	; 0
    1b2a:	0e 94 51 0b 	call	0x16a2	; 0x16a2 <wait_1ms>
    1b2e:	85 e2       	ldi	r24, 0x25	; 37
    1b30:	90 e0       	ldi	r25, 0x00	; 0
    1b32:	29 81       	ldd	r18, Y+1	; 0x01
    1b34:	42 2f       	mov	r20, r18
    1b36:	50 e0       	ldi	r21, 0x00	; 0
    1b38:	20 e8       	ldi	r18, 0x80	; 128
    1b3a:	30 e0       	ldi	r19, 0x00	; 0
    1b3c:	02 c0       	rjmp	.+4      	; 0x1b42 <LED_Show+0x7a>
    1b3e:	35 95       	asr	r19
    1b40:	27 95       	ror	r18
    1b42:	4a 95       	dec	r20
    1b44:	e2 f7       	brpl	.-8      	; 0x1b3e <LED_Show+0x76>
    1b46:	fc 01       	movw	r30, r24
    1b48:	20 83       	st	Z, r18
    1b4a:	89 81       	ldd	r24, Y+1	; 0x01
    1b4c:	8f 5f       	subi	r24, 0xFF	; 255
    1b4e:	89 83       	std	Y+1, r24	; 0x01
    1b50:	89 81       	ldd	r24, Y+1	; 0x01
    1b52:	88 30       	cpi	r24, 0x08	; 8
    1b54:	30 f3       	brcs	.-52     	; 0x1b22 <LED_Show+0x5a>
    1b56:	64 e6       	ldi	r22, 0x64	; 100
    1b58:	70 e0       	ldi	r23, 0x00	; 0
    1b5a:	80 e0       	ldi	r24, 0x00	; 0
    1b5c:	90 e0       	ldi	r25, 0x00	; 0
    1b5e:	0e 94 51 0b 	call	0x16a2	; 0x16a2 <wait_1ms>
    1b62:	85 e2       	ldi	r24, 0x25	; 37
    1b64:	90 e0       	ldi	r25, 0x00	; 0
    1b66:	fc 01       	movw	r30, r24
    1b68:	10 82       	st	Z, r1
    1b6a:	00 00       	nop
    1b6c:	0f 90       	pop	r0
    1b6e:	df 91       	pop	r29
    1b70:	cf 91       	pop	r28
    1b72:	08 95       	ret

00001b74 <init_BT_CAR_V2_0>:
    1b74:	cf 93       	push	r28
    1b76:	df 93       	push	r29
    1b78:	cd b7       	in	r28, 0x3d	; 61
    1b7a:	de b7       	in	r29, 0x3e	; 62
    1b7c:	81 e2       	ldi	r24, 0x21	; 33
    1b7e:	90 e0       	ldi	r25, 0x00	; 0
    1b80:	20 e6       	ldi	r18, 0x60	; 96
    1b82:	fc 01       	movw	r30, r24
    1b84:	20 83       	st	Z, r18
    1b86:	84 e2       	ldi	r24, 0x24	; 36
    1b88:	90 e0       	ldi	r25, 0x00	; 0
    1b8a:	2f ef       	ldi	r18, 0xFF	; 255
    1b8c:	fc 01       	movw	r30, r24
    1b8e:	20 83       	st	Z, r18
    1b90:	8a e2       	ldi	r24, 0x2A	; 42
    1b92:	90 e0       	ldi	r25, 0x00	; 0
    1b94:	2c ef       	ldi	r18, 0xFC	; 252
    1b96:	fc 01       	movw	r30, r24
    1b98:	20 83       	st	Z, r18
    1b9a:	78 94       	sei
    1b9c:	0e 94 29 0d 	call	0x1a52	; 0x1a52 <lcd_init>
    1ba0:	0e 94 57 0d 	call	0x1aae	; 0x1aae <clear_lcd>
    1ba4:	0e 94 64 0d 	call	0x1ac8	; 0x1ac8 <LED_Show>
    1ba8:	00 00       	nop
    1baa:	df 91       	pop	r29
    1bac:	cf 91       	pop	r28
    1bae:	08 95       	ret

00001bb0 <__cmpsf2>:
    1bb0:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <__fp_cmp>
    1bb4:	08 f4       	brcc	.+2      	; 0x1bb8 <__cmpsf2+0x8>
    1bb6:	81 e0       	ldi	r24, 0x01	; 1
    1bb8:	08 95       	ret

00001bba <__fixunssfsi>:
    1bba:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <__fp_splitA>
    1bbe:	88 f0       	brcs	.+34     	; 0x1be2 <__fixunssfsi+0x28>
    1bc0:	9f 57       	subi	r25, 0x7F	; 127
    1bc2:	98 f0       	brcs	.+38     	; 0x1bea <__fixunssfsi+0x30>
    1bc4:	b9 2f       	mov	r27, r25
    1bc6:	99 27       	eor	r25, r25
    1bc8:	b7 51       	subi	r27, 0x17	; 23
    1bca:	b0 f0       	brcs	.+44     	; 0x1bf8 <__fixunssfsi+0x3e>
    1bcc:	e1 f0       	breq	.+56     	; 0x1c06 <__fixunssfsi+0x4c>
    1bce:	66 0f       	add	r22, r22
    1bd0:	77 1f       	adc	r23, r23
    1bd2:	88 1f       	adc	r24, r24
    1bd4:	99 1f       	adc	r25, r25
    1bd6:	1a f0       	brmi	.+6      	; 0x1bde <__fixunssfsi+0x24>
    1bd8:	ba 95       	dec	r27
    1bda:	c9 f7       	brne	.-14     	; 0x1bce <__fixunssfsi+0x14>
    1bdc:	14 c0       	rjmp	.+40     	; 0x1c06 <__fixunssfsi+0x4c>
    1bde:	b1 30       	cpi	r27, 0x01	; 1
    1be0:	91 f0       	breq	.+36     	; 0x1c06 <__fixunssfsi+0x4c>
    1be2:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <__fp_zero>
    1be6:	b1 e0       	ldi	r27, 0x01	; 1
    1be8:	08 95       	ret
    1bea:	0c 94 52 0e 	jmp	0x1ca4	; 0x1ca4 <__fp_zero>
    1bee:	67 2f       	mov	r22, r23
    1bf0:	78 2f       	mov	r23, r24
    1bf2:	88 27       	eor	r24, r24
    1bf4:	b8 5f       	subi	r27, 0xF8	; 248
    1bf6:	39 f0       	breq	.+14     	; 0x1c06 <__fixunssfsi+0x4c>
    1bf8:	b9 3f       	cpi	r27, 0xF9	; 249
    1bfa:	cc f3       	brlt	.-14     	; 0x1bee <__fixunssfsi+0x34>
    1bfc:	86 95       	lsr	r24
    1bfe:	77 95       	ror	r23
    1c00:	67 95       	ror	r22
    1c02:	b3 95       	inc	r27
    1c04:	d9 f7       	brne	.-10     	; 0x1bfc <__fixunssfsi+0x42>
    1c06:	3e f4       	brtc	.+14     	; 0x1c16 <__fixunssfsi+0x5c>
    1c08:	90 95       	com	r25
    1c0a:	80 95       	com	r24
    1c0c:	70 95       	com	r23
    1c0e:	61 95       	neg	r22
    1c10:	7f 4f       	sbci	r23, 0xFF	; 255
    1c12:	8f 4f       	sbci	r24, 0xFF	; 255
    1c14:	9f 4f       	sbci	r25, 0xFF	; 255
    1c16:	08 95       	ret

00001c18 <__fp_cmp>:
    1c18:	99 0f       	add	r25, r25
    1c1a:	00 08       	sbc	r0, r0
    1c1c:	55 0f       	add	r21, r21
    1c1e:	aa 0b       	sbc	r26, r26
    1c20:	e0 e8       	ldi	r30, 0x80	; 128
    1c22:	fe ef       	ldi	r31, 0xFE	; 254
    1c24:	16 16       	cp	r1, r22
    1c26:	17 06       	cpc	r1, r23
    1c28:	e8 07       	cpc	r30, r24
    1c2a:	f9 07       	cpc	r31, r25
    1c2c:	c0 f0       	brcs	.+48     	; 0x1c5e <__fp_cmp+0x46>
    1c2e:	12 16       	cp	r1, r18
    1c30:	13 06       	cpc	r1, r19
    1c32:	e4 07       	cpc	r30, r20
    1c34:	f5 07       	cpc	r31, r21
    1c36:	98 f0       	brcs	.+38     	; 0x1c5e <__fp_cmp+0x46>
    1c38:	62 1b       	sub	r22, r18
    1c3a:	73 0b       	sbc	r23, r19
    1c3c:	84 0b       	sbc	r24, r20
    1c3e:	95 0b       	sbc	r25, r21
    1c40:	39 f4       	brne	.+14     	; 0x1c50 <__fp_cmp+0x38>
    1c42:	0a 26       	eor	r0, r26
    1c44:	61 f0       	breq	.+24     	; 0x1c5e <__fp_cmp+0x46>
    1c46:	23 2b       	or	r18, r19
    1c48:	24 2b       	or	r18, r20
    1c4a:	25 2b       	or	r18, r21
    1c4c:	21 f4       	brne	.+8      	; 0x1c56 <__fp_cmp+0x3e>
    1c4e:	08 95       	ret
    1c50:	0a 26       	eor	r0, r26
    1c52:	09 f4       	brne	.+2      	; 0x1c56 <__fp_cmp+0x3e>
    1c54:	a1 40       	sbci	r26, 0x01	; 1
    1c56:	a6 95       	lsr	r26
    1c58:	8f ef       	ldi	r24, 0xFF	; 255
    1c5a:	81 1d       	adc	r24, r1
    1c5c:	81 1d       	adc	r24, r1
    1c5e:	08 95       	ret

00001c60 <__fp_split3>:
    1c60:	57 fd       	sbrc	r21, 7
    1c62:	90 58       	subi	r25, 0x80	; 128
    1c64:	44 0f       	add	r20, r20
    1c66:	55 1f       	adc	r21, r21
    1c68:	59 f0       	breq	.+22     	; 0x1c80 <__fp_splitA+0x10>
    1c6a:	5f 3f       	cpi	r21, 0xFF	; 255
    1c6c:	71 f0       	breq	.+28     	; 0x1c8a <__fp_splitA+0x1a>
    1c6e:	47 95       	ror	r20

00001c70 <__fp_splitA>:
    1c70:	88 0f       	add	r24, r24
    1c72:	97 fb       	bst	r25, 7
    1c74:	99 1f       	adc	r25, r25
    1c76:	61 f0       	breq	.+24     	; 0x1c90 <__fp_splitA+0x20>
    1c78:	9f 3f       	cpi	r25, 0xFF	; 255
    1c7a:	79 f0       	breq	.+30     	; 0x1c9a <__fp_splitA+0x2a>
    1c7c:	87 95       	ror	r24
    1c7e:	08 95       	ret
    1c80:	12 16       	cp	r1, r18
    1c82:	13 06       	cpc	r1, r19
    1c84:	14 06       	cpc	r1, r20
    1c86:	55 1f       	adc	r21, r21
    1c88:	f2 cf       	rjmp	.-28     	; 0x1c6e <__fp_split3+0xe>
    1c8a:	46 95       	lsr	r20
    1c8c:	f1 df       	rcall	.-30     	; 0x1c70 <__fp_splitA>
    1c8e:	08 c0       	rjmp	.+16     	; 0x1ca0 <__fp_splitA+0x30>
    1c90:	16 16       	cp	r1, r22
    1c92:	17 06       	cpc	r1, r23
    1c94:	18 06       	cpc	r1, r24
    1c96:	99 1f       	adc	r25, r25
    1c98:	f1 cf       	rjmp	.-30     	; 0x1c7c <__fp_splitA+0xc>
    1c9a:	86 95       	lsr	r24
    1c9c:	71 05       	cpc	r23, r1
    1c9e:	61 05       	cpc	r22, r1
    1ca0:	08 94       	sec
    1ca2:	08 95       	ret

00001ca4 <__fp_zero>:
    1ca4:	e8 94       	clt

00001ca6 <__fp_szero>:
    1ca6:	bb 27       	eor	r27, r27
    1ca8:	66 27       	eor	r22, r22
    1caa:	77 27       	eor	r23, r23
    1cac:	cb 01       	movw	r24, r22
    1cae:	97 f9       	bld	r25, 7
    1cb0:	08 95       	ret

00001cb2 <__gesf2>:
    1cb2:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <__fp_cmp>
    1cb6:	08 f4       	brcc	.+2      	; 0x1cba <__gesf2+0x8>
    1cb8:	8f ef       	ldi	r24, 0xFF	; 255
    1cba:	08 95       	ret

00001cbc <__mulsf3>:
    1cbc:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <__mulsf3x>
    1cc0:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__fp_round>
    1cc4:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <__fp_pscA>
    1cc8:	38 f0       	brcs	.+14     	; 0x1cd8 <__mulsf3+0x1c>
    1cca:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <__fp_pscB>
    1cce:	20 f0       	brcs	.+8      	; 0x1cd8 <__mulsf3+0x1c>
    1cd0:	95 23       	and	r25, r21
    1cd2:	11 f0       	breq	.+4      	; 0x1cd8 <__mulsf3+0x1c>
    1cd4:	0c 94 cb 0e 	jmp	0x1d96	; 0x1d96 <__fp_inf>
    1cd8:	0c 94 d1 0e 	jmp	0x1da2	; 0x1da2 <__fp_nan>
    1cdc:	11 24       	eor	r1, r1
    1cde:	0c 94 53 0e 	jmp	0x1ca6	; 0x1ca6 <__fp_szero>

00001ce2 <__mulsf3x>:
    1ce2:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <__fp_split3>
    1ce6:	70 f3       	brcs	.-36     	; 0x1cc4 <__mulsf3+0x8>

00001ce8 <__mulsf3_pse>:
    1ce8:	95 9f       	mul	r25, r21
    1cea:	c1 f3       	breq	.-16     	; 0x1cdc <__mulsf3+0x20>
    1cec:	95 0f       	add	r25, r21
    1cee:	50 e0       	ldi	r21, 0x00	; 0
    1cf0:	55 1f       	adc	r21, r21
    1cf2:	62 9f       	mul	r22, r18
    1cf4:	f0 01       	movw	r30, r0
    1cf6:	72 9f       	mul	r23, r18
    1cf8:	bb 27       	eor	r27, r27
    1cfa:	f0 0d       	add	r31, r0
    1cfc:	b1 1d       	adc	r27, r1
    1cfe:	63 9f       	mul	r22, r19
    1d00:	aa 27       	eor	r26, r26
    1d02:	f0 0d       	add	r31, r0
    1d04:	b1 1d       	adc	r27, r1
    1d06:	aa 1f       	adc	r26, r26
    1d08:	64 9f       	mul	r22, r20
    1d0a:	66 27       	eor	r22, r22
    1d0c:	b0 0d       	add	r27, r0
    1d0e:	a1 1d       	adc	r26, r1
    1d10:	66 1f       	adc	r22, r22
    1d12:	82 9f       	mul	r24, r18
    1d14:	22 27       	eor	r18, r18
    1d16:	b0 0d       	add	r27, r0
    1d18:	a1 1d       	adc	r26, r1
    1d1a:	62 1f       	adc	r22, r18
    1d1c:	73 9f       	mul	r23, r19
    1d1e:	b0 0d       	add	r27, r0
    1d20:	a1 1d       	adc	r26, r1
    1d22:	62 1f       	adc	r22, r18
    1d24:	83 9f       	mul	r24, r19
    1d26:	a0 0d       	add	r26, r0
    1d28:	61 1d       	adc	r22, r1
    1d2a:	22 1f       	adc	r18, r18
    1d2c:	74 9f       	mul	r23, r20
    1d2e:	33 27       	eor	r19, r19
    1d30:	a0 0d       	add	r26, r0
    1d32:	61 1d       	adc	r22, r1
    1d34:	23 1f       	adc	r18, r19
    1d36:	84 9f       	mul	r24, r20
    1d38:	60 0d       	add	r22, r0
    1d3a:	21 1d       	adc	r18, r1
    1d3c:	82 2f       	mov	r24, r18
    1d3e:	76 2f       	mov	r23, r22
    1d40:	6a 2f       	mov	r22, r26
    1d42:	11 24       	eor	r1, r1
    1d44:	9f 57       	subi	r25, 0x7F	; 127
    1d46:	50 40       	sbci	r21, 0x00	; 0
    1d48:	9a f0       	brmi	.+38     	; 0x1d70 <__mulsf3_pse+0x88>
    1d4a:	f1 f0       	breq	.+60     	; 0x1d88 <__mulsf3_pse+0xa0>
    1d4c:	88 23       	and	r24, r24
    1d4e:	4a f0       	brmi	.+18     	; 0x1d62 <__mulsf3_pse+0x7a>
    1d50:	ee 0f       	add	r30, r30
    1d52:	ff 1f       	adc	r31, r31
    1d54:	bb 1f       	adc	r27, r27
    1d56:	66 1f       	adc	r22, r22
    1d58:	77 1f       	adc	r23, r23
    1d5a:	88 1f       	adc	r24, r24
    1d5c:	91 50       	subi	r25, 0x01	; 1
    1d5e:	50 40       	sbci	r21, 0x00	; 0
    1d60:	a9 f7       	brne	.-22     	; 0x1d4c <__mulsf3_pse+0x64>
    1d62:	9e 3f       	cpi	r25, 0xFE	; 254
    1d64:	51 05       	cpc	r21, r1
    1d66:	80 f0       	brcs	.+32     	; 0x1d88 <__mulsf3_pse+0xa0>
    1d68:	0c 94 cb 0e 	jmp	0x1d96	; 0x1d96 <__fp_inf>
    1d6c:	0c 94 53 0e 	jmp	0x1ca6	; 0x1ca6 <__fp_szero>
    1d70:	5f 3f       	cpi	r21, 0xFF	; 255
    1d72:	e4 f3       	brlt	.-8      	; 0x1d6c <__mulsf3_pse+0x84>
    1d74:	98 3e       	cpi	r25, 0xE8	; 232
    1d76:	d4 f3       	brlt	.-12     	; 0x1d6c <__mulsf3_pse+0x84>
    1d78:	86 95       	lsr	r24
    1d7a:	77 95       	ror	r23
    1d7c:	67 95       	ror	r22
    1d7e:	b7 95       	ror	r27
    1d80:	f7 95       	ror	r31
    1d82:	e7 95       	ror	r30
    1d84:	9f 5f       	subi	r25, 0xFF	; 255
    1d86:	c1 f7       	brne	.-16     	; 0x1d78 <__mulsf3_pse+0x90>
    1d88:	fe 2b       	or	r31, r30
    1d8a:	88 0f       	add	r24, r24
    1d8c:	91 1d       	adc	r25, r1
    1d8e:	96 95       	lsr	r25
    1d90:	87 95       	ror	r24
    1d92:	97 f9       	bld	r25, 7
    1d94:	08 95       	ret

00001d96 <__fp_inf>:
    1d96:	97 f9       	bld	r25, 7
    1d98:	9f 67       	ori	r25, 0x7F	; 127
    1d9a:	80 e8       	ldi	r24, 0x80	; 128
    1d9c:	70 e0       	ldi	r23, 0x00	; 0
    1d9e:	60 e0       	ldi	r22, 0x00	; 0
    1da0:	08 95       	ret

00001da2 <__fp_nan>:
    1da2:	9f ef       	ldi	r25, 0xFF	; 255
    1da4:	80 ec       	ldi	r24, 0xC0	; 192
    1da6:	08 95       	ret

00001da8 <__fp_pscA>:
    1da8:	00 24       	eor	r0, r0
    1daa:	0a 94       	dec	r0
    1dac:	16 16       	cp	r1, r22
    1dae:	17 06       	cpc	r1, r23
    1db0:	18 06       	cpc	r1, r24
    1db2:	09 06       	cpc	r0, r25
    1db4:	08 95       	ret

00001db6 <__fp_pscB>:
    1db6:	00 24       	eor	r0, r0
    1db8:	0a 94       	dec	r0
    1dba:	12 16       	cp	r1, r18
    1dbc:	13 06       	cpc	r1, r19
    1dbe:	14 06       	cpc	r1, r20
    1dc0:	05 06       	cpc	r0, r21
    1dc2:	08 95       	ret

00001dc4 <__fp_round>:
    1dc4:	09 2e       	mov	r0, r25
    1dc6:	03 94       	inc	r0
    1dc8:	00 0c       	add	r0, r0
    1dca:	11 f4       	brne	.+4      	; 0x1dd0 <__fp_round+0xc>
    1dcc:	88 23       	and	r24, r24
    1dce:	52 f0       	brmi	.+20     	; 0x1de4 <__fp_round+0x20>
    1dd0:	bb 0f       	add	r27, r27
    1dd2:	40 f4       	brcc	.+16     	; 0x1de4 <__fp_round+0x20>
    1dd4:	bf 2b       	or	r27, r31
    1dd6:	11 f4       	brne	.+4      	; 0x1ddc <__fp_round+0x18>
    1dd8:	60 ff       	sbrs	r22, 0
    1dda:	04 c0       	rjmp	.+8      	; 0x1de4 <__fp_round+0x20>
    1ddc:	6f 5f       	subi	r22, 0xFF	; 255
    1dde:	7f 4f       	sbci	r23, 0xFF	; 255
    1de0:	8f 4f       	sbci	r24, 0xFF	; 255
    1de2:	9f 4f       	sbci	r25, 0xFF	; 255
    1de4:	08 95       	ret

00001de6 <__divmodhi4>:
    1de6:	97 fb       	bst	r25, 7
    1de8:	07 2e       	mov	r0, r23
    1dea:	16 f4       	brtc	.+4      	; 0x1df0 <__divmodhi4+0xa>
    1dec:	00 94       	com	r0
    1dee:	07 d0       	rcall	.+14     	; 0x1dfe <__divmodhi4_neg1>
    1df0:	77 fd       	sbrc	r23, 7
    1df2:	09 d0       	rcall	.+18     	; 0x1e06 <__divmodhi4_neg2>
    1df4:	0e 94 29 0f 	call	0x1e52	; 0x1e52 <__udivmodhi4>
    1df8:	07 fc       	sbrc	r0, 7
    1dfa:	05 d0       	rcall	.+10     	; 0x1e06 <__divmodhi4_neg2>
    1dfc:	3e f4       	brtc	.+14     	; 0x1e0c <__divmodhi4_exit>

00001dfe <__divmodhi4_neg1>:
    1dfe:	90 95       	com	r25
    1e00:	81 95       	neg	r24
    1e02:	9f 4f       	sbci	r25, 0xFF	; 255
    1e04:	08 95       	ret

00001e06 <__divmodhi4_neg2>:
    1e06:	70 95       	com	r23
    1e08:	61 95       	neg	r22
    1e0a:	7f 4f       	sbci	r23, 0xFF	; 255

00001e0c <__divmodhi4_exit>:
    1e0c:	08 95       	ret

00001e0e <__udivmodsi4>:
    1e0e:	a1 e2       	ldi	r26, 0x21	; 33
    1e10:	1a 2e       	mov	r1, r26
    1e12:	aa 1b       	sub	r26, r26
    1e14:	bb 1b       	sub	r27, r27
    1e16:	fd 01       	movw	r30, r26
    1e18:	0d c0       	rjmp	.+26     	; 0x1e34 <__udivmodsi4_ep>

00001e1a <__udivmodsi4_loop>:
    1e1a:	aa 1f       	adc	r26, r26
    1e1c:	bb 1f       	adc	r27, r27
    1e1e:	ee 1f       	adc	r30, r30
    1e20:	ff 1f       	adc	r31, r31
    1e22:	a2 17       	cp	r26, r18
    1e24:	b3 07       	cpc	r27, r19
    1e26:	e4 07       	cpc	r30, r20
    1e28:	f5 07       	cpc	r31, r21
    1e2a:	20 f0       	brcs	.+8      	; 0x1e34 <__udivmodsi4_ep>
    1e2c:	a2 1b       	sub	r26, r18
    1e2e:	b3 0b       	sbc	r27, r19
    1e30:	e4 0b       	sbc	r30, r20
    1e32:	f5 0b       	sbc	r31, r21

00001e34 <__udivmodsi4_ep>:
    1e34:	66 1f       	adc	r22, r22
    1e36:	77 1f       	adc	r23, r23
    1e38:	88 1f       	adc	r24, r24
    1e3a:	99 1f       	adc	r25, r25
    1e3c:	1a 94       	dec	r1
    1e3e:	69 f7       	brne	.-38     	; 0x1e1a <__udivmodsi4_loop>
    1e40:	60 95       	com	r22
    1e42:	70 95       	com	r23
    1e44:	80 95       	com	r24
    1e46:	90 95       	com	r25
    1e48:	9b 01       	movw	r18, r22
    1e4a:	ac 01       	movw	r20, r24
    1e4c:	bd 01       	movw	r22, r26
    1e4e:	cf 01       	movw	r24, r30
    1e50:	08 95       	ret

00001e52 <__udivmodhi4>:
    1e52:	aa 1b       	sub	r26, r26
    1e54:	bb 1b       	sub	r27, r27
    1e56:	51 e1       	ldi	r21, 0x11	; 17
    1e58:	07 c0       	rjmp	.+14     	; 0x1e68 <__udivmodhi4_ep>

00001e5a <__udivmodhi4_loop>:
    1e5a:	aa 1f       	adc	r26, r26
    1e5c:	bb 1f       	adc	r27, r27
    1e5e:	a6 17       	cp	r26, r22
    1e60:	b7 07       	cpc	r27, r23
    1e62:	10 f0       	brcs	.+4      	; 0x1e68 <__udivmodhi4_ep>
    1e64:	a6 1b       	sub	r26, r22
    1e66:	b7 0b       	sbc	r27, r23

00001e68 <__udivmodhi4_ep>:
    1e68:	88 1f       	adc	r24, r24
    1e6a:	99 1f       	adc	r25, r25
    1e6c:	5a 95       	dec	r21
    1e6e:	a9 f7       	brne	.-22     	; 0x1e5a <__udivmodhi4_loop>
    1e70:	80 95       	com	r24
    1e72:	90 95       	com	r25
    1e74:	bc 01       	movw	r22, r24
    1e76:	cd 01       	movw	r24, r26
    1e78:	08 95       	ret

00001e7a <snprintf>:
    1e7a:	ae e0       	ldi	r26, 0x0E	; 14
    1e7c:	b0 e0       	ldi	r27, 0x00	; 0
    1e7e:	e3 e4       	ldi	r30, 0x43	; 67
    1e80:	ff e0       	ldi	r31, 0x0F	; 15
    1e82:	0c 94 0c 12 	jmp	0x2418	; 0x2418 <__prologue_saves__+0x1c>
    1e86:	0d 89       	ldd	r16, Y+21	; 0x15
    1e88:	1e 89       	ldd	r17, Y+22	; 0x16
    1e8a:	8f 89       	ldd	r24, Y+23	; 0x17
    1e8c:	98 8d       	ldd	r25, Y+24	; 0x18
    1e8e:	26 e0       	ldi	r18, 0x06	; 6
    1e90:	2c 83       	std	Y+4, r18	; 0x04
    1e92:	1a 83       	std	Y+2, r17	; 0x02
    1e94:	09 83       	std	Y+1, r16	; 0x01
    1e96:	97 ff       	sbrs	r25, 7
    1e98:	02 c0       	rjmp	.+4      	; 0x1e9e <snprintf+0x24>
    1e9a:	80 e0       	ldi	r24, 0x00	; 0
    1e9c:	90 e8       	ldi	r25, 0x80	; 128
    1e9e:	01 97       	sbiw	r24, 0x01	; 1
    1ea0:	9e 83       	std	Y+6, r25	; 0x06
    1ea2:	8d 83       	std	Y+5, r24	; 0x05
    1ea4:	ae 01       	movw	r20, r28
    1ea6:	45 5e       	subi	r20, 0xE5	; 229
    1ea8:	5f 4f       	sbci	r21, 0xFF	; 255
    1eaa:	69 8d       	ldd	r22, Y+25	; 0x19
    1eac:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1eae:	ce 01       	movw	r24, r28
    1eb0:	01 96       	adiw	r24, 0x01	; 1
    1eb2:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <vfprintf>
    1eb6:	4d 81       	ldd	r20, Y+5	; 0x05
    1eb8:	5e 81       	ldd	r21, Y+6	; 0x06
    1eba:	57 fd       	sbrc	r21, 7
    1ebc:	0a c0       	rjmp	.+20     	; 0x1ed2 <snprintf+0x58>
    1ebe:	2f 81       	ldd	r18, Y+7	; 0x07
    1ec0:	38 85       	ldd	r19, Y+8	; 0x08
    1ec2:	42 17       	cp	r20, r18
    1ec4:	53 07       	cpc	r21, r19
    1ec6:	0c f4       	brge	.+2      	; 0x1eca <snprintf+0x50>
    1ec8:	9a 01       	movw	r18, r20
    1eca:	f8 01       	movw	r30, r16
    1ecc:	e2 0f       	add	r30, r18
    1ece:	f3 1f       	adc	r31, r19
    1ed0:	10 82       	st	Z, r1
    1ed2:	2e 96       	adiw	r28, 0x0e	; 14
    1ed4:	e4 e0       	ldi	r30, 0x04	; 4
    1ed6:	0c 94 28 12 	jmp	0x2450	; 0x2450 <__epilogue_restores__+0x1c>

00001eda <vfprintf>:
    1eda:	ab e0       	ldi	r26, 0x0B	; 11
    1edc:	b0 e0       	ldi	r27, 0x00	; 0
    1ede:	e3 e7       	ldi	r30, 0x73	; 115
    1ee0:	ff e0       	ldi	r31, 0x0F	; 15
    1ee2:	0c 94 fe 11 	jmp	0x23fc	; 0x23fc <__prologue_saves__>
    1ee6:	6c 01       	movw	r12, r24
    1ee8:	7b 01       	movw	r14, r22
    1eea:	8a 01       	movw	r16, r20
    1eec:	fc 01       	movw	r30, r24
    1eee:	17 82       	std	Z+7, r1	; 0x07
    1ef0:	16 82       	std	Z+6, r1	; 0x06
    1ef2:	83 81       	ldd	r24, Z+3	; 0x03
    1ef4:	81 ff       	sbrs	r24, 1
    1ef6:	cc c1       	rjmp	.+920    	; 0x2290 <vfprintf+0x3b6>
    1ef8:	ce 01       	movw	r24, r28
    1efa:	01 96       	adiw	r24, 0x01	; 1
    1efc:	3c 01       	movw	r6, r24
    1efe:	f6 01       	movw	r30, r12
    1f00:	93 81       	ldd	r25, Z+3	; 0x03
    1f02:	f7 01       	movw	r30, r14
    1f04:	93 fd       	sbrc	r25, 3
    1f06:	85 91       	lpm	r24, Z+
    1f08:	93 ff       	sbrs	r25, 3
    1f0a:	81 91       	ld	r24, Z+
    1f0c:	7f 01       	movw	r14, r30
    1f0e:	88 23       	and	r24, r24
    1f10:	09 f4       	brne	.+2      	; 0x1f14 <vfprintf+0x3a>
    1f12:	ba c1       	rjmp	.+884    	; 0x2288 <vfprintf+0x3ae>
    1f14:	85 32       	cpi	r24, 0x25	; 37
    1f16:	39 f4       	brne	.+14     	; 0x1f26 <vfprintf+0x4c>
    1f18:	93 fd       	sbrc	r25, 3
    1f1a:	85 91       	lpm	r24, Z+
    1f1c:	93 ff       	sbrs	r25, 3
    1f1e:	81 91       	ld	r24, Z+
    1f20:	7f 01       	movw	r14, r30
    1f22:	85 32       	cpi	r24, 0x25	; 37
    1f24:	29 f4       	brne	.+10     	; 0x1f30 <vfprintf+0x56>
    1f26:	b6 01       	movw	r22, r12
    1f28:	90 e0       	ldi	r25, 0x00	; 0
    1f2a:	0e 94 64 11 	call	0x22c8	; 0x22c8 <fputc>
    1f2e:	e7 cf       	rjmp	.-50     	; 0x1efe <vfprintf+0x24>
    1f30:	91 2c       	mov	r9, r1
    1f32:	21 2c       	mov	r2, r1
    1f34:	31 2c       	mov	r3, r1
    1f36:	ff e1       	ldi	r31, 0x1F	; 31
    1f38:	f3 15       	cp	r31, r3
    1f3a:	d8 f0       	brcs	.+54     	; 0x1f72 <vfprintf+0x98>
    1f3c:	8b 32       	cpi	r24, 0x2B	; 43
    1f3e:	79 f0       	breq	.+30     	; 0x1f5e <vfprintf+0x84>
    1f40:	38 f4       	brcc	.+14     	; 0x1f50 <vfprintf+0x76>
    1f42:	80 32       	cpi	r24, 0x20	; 32
    1f44:	79 f0       	breq	.+30     	; 0x1f64 <vfprintf+0x8a>
    1f46:	83 32       	cpi	r24, 0x23	; 35
    1f48:	a1 f4       	brne	.+40     	; 0x1f72 <vfprintf+0x98>
    1f4a:	23 2d       	mov	r18, r3
    1f4c:	20 61       	ori	r18, 0x10	; 16
    1f4e:	1d c0       	rjmp	.+58     	; 0x1f8a <vfprintf+0xb0>
    1f50:	8d 32       	cpi	r24, 0x2D	; 45
    1f52:	61 f0       	breq	.+24     	; 0x1f6c <vfprintf+0x92>
    1f54:	80 33       	cpi	r24, 0x30	; 48
    1f56:	69 f4       	brne	.+26     	; 0x1f72 <vfprintf+0x98>
    1f58:	23 2d       	mov	r18, r3
    1f5a:	21 60       	ori	r18, 0x01	; 1
    1f5c:	16 c0       	rjmp	.+44     	; 0x1f8a <vfprintf+0xb0>
    1f5e:	83 2d       	mov	r24, r3
    1f60:	82 60       	ori	r24, 0x02	; 2
    1f62:	38 2e       	mov	r3, r24
    1f64:	e3 2d       	mov	r30, r3
    1f66:	e4 60       	ori	r30, 0x04	; 4
    1f68:	3e 2e       	mov	r3, r30
    1f6a:	2a c0       	rjmp	.+84     	; 0x1fc0 <vfprintf+0xe6>
    1f6c:	f3 2d       	mov	r31, r3
    1f6e:	f8 60       	ori	r31, 0x08	; 8
    1f70:	1d c0       	rjmp	.+58     	; 0x1fac <vfprintf+0xd2>
    1f72:	37 fc       	sbrc	r3, 7
    1f74:	2d c0       	rjmp	.+90     	; 0x1fd0 <vfprintf+0xf6>
    1f76:	20 ed       	ldi	r18, 0xD0	; 208
    1f78:	28 0f       	add	r18, r24
    1f7a:	2a 30       	cpi	r18, 0x0A	; 10
    1f7c:	40 f0       	brcs	.+16     	; 0x1f8e <vfprintf+0xb4>
    1f7e:	8e 32       	cpi	r24, 0x2E	; 46
    1f80:	b9 f4       	brne	.+46     	; 0x1fb0 <vfprintf+0xd6>
    1f82:	36 fc       	sbrc	r3, 6
    1f84:	81 c1       	rjmp	.+770    	; 0x2288 <vfprintf+0x3ae>
    1f86:	23 2d       	mov	r18, r3
    1f88:	20 64       	ori	r18, 0x40	; 64
    1f8a:	32 2e       	mov	r3, r18
    1f8c:	19 c0       	rjmp	.+50     	; 0x1fc0 <vfprintf+0xe6>
    1f8e:	36 fe       	sbrs	r3, 6
    1f90:	06 c0       	rjmp	.+12     	; 0x1f9e <vfprintf+0xc4>
    1f92:	8a e0       	ldi	r24, 0x0A	; 10
    1f94:	98 9e       	mul	r9, r24
    1f96:	20 0d       	add	r18, r0
    1f98:	11 24       	eor	r1, r1
    1f9a:	92 2e       	mov	r9, r18
    1f9c:	11 c0       	rjmp	.+34     	; 0x1fc0 <vfprintf+0xe6>
    1f9e:	ea e0       	ldi	r30, 0x0A	; 10
    1fa0:	2e 9e       	mul	r2, r30
    1fa2:	20 0d       	add	r18, r0
    1fa4:	11 24       	eor	r1, r1
    1fa6:	22 2e       	mov	r2, r18
    1fa8:	f3 2d       	mov	r31, r3
    1faa:	f0 62       	ori	r31, 0x20	; 32
    1fac:	3f 2e       	mov	r3, r31
    1fae:	08 c0       	rjmp	.+16     	; 0x1fc0 <vfprintf+0xe6>
    1fb0:	8c 36       	cpi	r24, 0x6C	; 108
    1fb2:	21 f4       	brne	.+8      	; 0x1fbc <vfprintf+0xe2>
    1fb4:	83 2d       	mov	r24, r3
    1fb6:	80 68       	ori	r24, 0x80	; 128
    1fb8:	38 2e       	mov	r3, r24
    1fba:	02 c0       	rjmp	.+4      	; 0x1fc0 <vfprintf+0xe6>
    1fbc:	88 36       	cpi	r24, 0x68	; 104
    1fbe:	41 f4       	brne	.+16     	; 0x1fd0 <vfprintf+0xf6>
    1fc0:	f7 01       	movw	r30, r14
    1fc2:	93 fd       	sbrc	r25, 3
    1fc4:	85 91       	lpm	r24, Z+
    1fc6:	93 ff       	sbrs	r25, 3
    1fc8:	81 91       	ld	r24, Z+
    1fca:	7f 01       	movw	r14, r30
    1fcc:	81 11       	cpse	r24, r1
    1fce:	b3 cf       	rjmp	.-154    	; 0x1f36 <vfprintf+0x5c>
    1fd0:	98 2f       	mov	r25, r24
    1fd2:	9f 7d       	andi	r25, 0xDF	; 223
    1fd4:	95 54       	subi	r25, 0x45	; 69
    1fd6:	93 30       	cpi	r25, 0x03	; 3
    1fd8:	28 f4       	brcc	.+10     	; 0x1fe4 <vfprintf+0x10a>
    1fda:	0c 5f       	subi	r16, 0xFC	; 252
    1fdc:	1f 4f       	sbci	r17, 0xFF	; 255
    1fde:	9f e3       	ldi	r25, 0x3F	; 63
    1fe0:	99 83       	std	Y+1, r25	; 0x01
    1fe2:	0d c0       	rjmp	.+26     	; 0x1ffe <vfprintf+0x124>
    1fe4:	83 36       	cpi	r24, 0x63	; 99
    1fe6:	31 f0       	breq	.+12     	; 0x1ff4 <vfprintf+0x11a>
    1fe8:	83 37       	cpi	r24, 0x73	; 115
    1fea:	71 f0       	breq	.+28     	; 0x2008 <vfprintf+0x12e>
    1fec:	83 35       	cpi	r24, 0x53	; 83
    1fee:	09 f0       	breq	.+2      	; 0x1ff2 <vfprintf+0x118>
    1ff0:	59 c0       	rjmp	.+178    	; 0x20a4 <vfprintf+0x1ca>
    1ff2:	21 c0       	rjmp	.+66     	; 0x2036 <vfprintf+0x15c>
    1ff4:	f8 01       	movw	r30, r16
    1ff6:	80 81       	ld	r24, Z
    1ff8:	89 83       	std	Y+1, r24	; 0x01
    1ffa:	0e 5f       	subi	r16, 0xFE	; 254
    1ffc:	1f 4f       	sbci	r17, 0xFF	; 255
    1ffe:	88 24       	eor	r8, r8
    2000:	83 94       	inc	r8
    2002:	91 2c       	mov	r9, r1
    2004:	53 01       	movw	r10, r6
    2006:	13 c0       	rjmp	.+38     	; 0x202e <vfprintf+0x154>
    2008:	28 01       	movw	r4, r16
    200a:	f2 e0       	ldi	r31, 0x02	; 2
    200c:	4f 0e       	add	r4, r31
    200e:	51 1c       	adc	r5, r1
    2010:	f8 01       	movw	r30, r16
    2012:	a0 80       	ld	r10, Z
    2014:	b1 80       	ldd	r11, Z+1	; 0x01
    2016:	36 fe       	sbrs	r3, 6
    2018:	03 c0       	rjmp	.+6      	; 0x2020 <vfprintf+0x146>
    201a:	69 2d       	mov	r22, r9
    201c:	70 e0       	ldi	r23, 0x00	; 0
    201e:	02 c0       	rjmp	.+4      	; 0x2024 <vfprintf+0x14a>
    2020:	6f ef       	ldi	r22, 0xFF	; 255
    2022:	7f ef       	ldi	r23, 0xFF	; 255
    2024:	c5 01       	movw	r24, r10
    2026:	0e 94 59 11 	call	0x22b2	; 0x22b2 <strnlen>
    202a:	4c 01       	movw	r8, r24
    202c:	82 01       	movw	r16, r4
    202e:	f3 2d       	mov	r31, r3
    2030:	ff 77       	andi	r31, 0x7F	; 127
    2032:	3f 2e       	mov	r3, r31
    2034:	16 c0       	rjmp	.+44     	; 0x2062 <vfprintf+0x188>
    2036:	28 01       	movw	r4, r16
    2038:	22 e0       	ldi	r18, 0x02	; 2
    203a:	42 0e       	add	r4, r18
    203c:	51 1c       	adc	r5, r1
    203e:	f8 01       	movw	r30, r16
    2040:	a0 80       	ld	r10, Z
    2042:	b1 80       	ldd	r11, Z+1	; 0x01
    2044:	36 fe       	sbrs	r3, 6
    2046:	03 c0       	rjmp	.+6      	; 0x204e <vfprintf+0x174>
    2048:	69 2d       	mov	r22, r9
    204a:	70 e0       	ldi	r23, 0x00	; 0
    204c:	02 c0       	rjmp	.+4      	; 0x2052 <vfprintf+0x178>
    204e:	6f ef       	ldi	r22, 0xFF	; 255
    2050:	7f ef       	ldi	r23, 0xFF	; 255
    2052:	c5 01       	movw	r24, r10
    2054:	0e 94 4e 11 	call	0x229c	; 0x229c <strnlen_P>
    2058:	4c 01       	movw	r8, r24
    205a:	f3 2d       	mov	r31, r3
    205c:	f0 68       	ori	r31, 0x80	; 128
    205e:	3f 2e       	mov	r3, r31
    2060:	82 01       	movw	r16, r4
    2062:	33 fc       	sbrc	r3, 3
    2064:	1b c0       	rjmp	.+54     	; 0x209c <vfprintf+0x1c2>
    2066:	82 2d       	mov	r24, r2
    2068:	90 e0       	ldi	r25, 0x00	; 0
    206a:	88 16       	cp	r8, r24
    206c:	99 06       	cpc	r9, r25
    206e:	b0 f4       	brcc	.+44     	; 0x209c <vfprintf+0x1c2>
    2070:	b6 01       	movw	r22, r12
    2072:	80 e2       	ldi	r24, 0x20	; 32
    2074:	90 e0       	ldi	r25, 0x00	; 0
    2076:	0e 94 64 11 	call	0x22c8	; 0x22c8 <fputc>
    207a:	2a 94       	dec	r2
    207c:	f4 cf       	rjmp	.-24     	; 0x2066 <vfprintf+0x18c>
    207e:	f5 01       	movw	r30, r10
    2080:	37 fc       	sbrc	r3, 7
    2082:	85 91       	lpm	r24, Z+
    2084:	37 fe       	sbrs	r3, 7
    2086:	81 91       	ld	r24, Z+
    2088:	5f 01       	movw	r10, r30
    208a:	b6 01       	movw	r22, r12
    208c:	90 e0       	ldi	r25, 0x00	; 0
    208e:	0e 94 64 11 	call	0x22c8	; 0x22c8 <fputc>
    2092:	21 10       	cpse	r2, r1
    2094:	2a 94       	dec	r2
    2096:	21 e0       	ldi	r18, 0x01	; 1
    2098:	82 1a       	sub	r8, r18
    209a:	91 08       	sbc	r9, r1
    209c:	81 14       	cp	r8, r1
    209e:	91 04       	cpc	r9, r1
    20a0:	71 f7       	brne	.-36     	; 0x207e <vfprintf+0x1a4>
    20a2:	e8 c0       	rjmp	.+464    	; 0x2274 <vfprintf+0x39a>
    20a4:	84 36       	cpi	r24, 0x64	; 100
    20a6:	11 f0       	breq	.+4      	; 0x20ac <vfprintf+0x1d2>
    20a8:	89 36       	cpi	r24, 0x69	; 105
    20aa:	41 f5       	brne	.+80     	; 0x20fc <vfprintf+0x222>
    20ac:	f8 01       	movw	r30, r16
    20ae:	37 fe       	sbrs	r3, 7
    20b0:	07 c0       	rjmp	.+14     	; 0x20c0 <vfprintf+0x1e6>
    20b2:	60 81       	ld	r22, Z
    20b4:	71 81       	ldd	r23, Z+1	; 0x01
    20b6:	82 81       	ldd	r24, Z+2	; 0x02
    20b8:	93 81       	ldd	r25, Z+3	; 0x03
    20ba:	0c 5f       	subi	r16, 0xFC	; 252
    20bc:	1f 4f       	sbci	r17, 0xFF	; 255
    20be:	08 c0       	rjmp	.+16     	; 0x20d0 <vfprintf+0x1f6>
    20c0:	60 81       	ld	r22, Z
    20c2:	71 81       	ldd	r23, Z+1	; 0x01
    20c4:	07 2e       	mov	r0, r23
    20c6:	00 0c       	add	r0, r0
    20c8:	88 0b       	sbc	r24, r24
    20ca:	99 0b       	sbc	r25, r25
    20cc:	0e 5f       	subi	r16, 0xFE	; 254
    20ce:	1f 4f       	sbci	r17, 0xFF	; 255
    20d0:	f3 2d       	mov	r31, r3
    20d2:	ff 76       	andi	r31, 0x6F	; 111
    20d4:	3f 2e       	mov	r3, r31
    20d6:	97 ff       	sbrs	r25, 7
    20d8:	09 c0       	rjmp	.+18     	; 0x20ec <vfprintf+0x212>
    20da:	90 95       	com	r25
    20dc:	80 95       	com	r24
    20de:	70 95       	com	r23
    20e0:	61 95       	neg	r22
    20e2:	7f 4f       	sbci	r23, 0xFF	; 255
    20e4:	8f 4f       	sbci	r24, 0xFF	; 255
    20e6:	9f 4f       	sbci	r25, 0xFF	; 255
    20e8:	f0 68       	ori	r31, 0x80	; 128
    20ea:	3f 2e       	mov	r3, r31
    20ec:	2a e0       	ldi	r18, 0x0A	; 10
    20ee:	30 e0       	ldi	r19, 0x00	; 0
    20f0:	a3 01       	movw	r20, r6
    20f2:	0e 94 a0 11 	call	0x2340	; 0x2340 <__ultoa_invert>
    20f6:	88 2e       	mov	r8, r24
    20f8:	86 18       	sub	r8, r6
    20fa:	45 c0       	rjmp	.+138    	; 0x2186 <vfprintf+0x2ac>
    20fc:	85 37       	cpi	r24, 0x75	; 117
    20fe:	31 f4       	brne	.+12     	; 0x210c <vfprintf+0x232>
    2100:	23 2d       	mov	r18, r3
    2102:	2f 7e       	andi	r18, 0xEF	; 239
    2104:	b2 2e       	mov	r11, r18
    2106:	2a e0       	ldi	r18, 0x0A	; 10
    2108:	30 e0       	ldi	r19, 0x00	; 0
    210a:	25 c0       	rjmp	.+74     	; 0x2156 <vfprintf+0x27c>
    210c:	93 2d       	mov	r25, r3
    210e:	99 7f       	andi	r25, 0xF9	; 249
    2110:	b9 2e       	mov	r11, r25
    2112:	8f 36       	cpi	r24, 0x6F	; 111
    2114:	c1 f0       	breq	.+48     	; 0x2146 <vfprintf+0x26c>
    2116:	18 f4       	brcc	.+6      	; 0x211e <vfprintf+0x244>
    2118:	88 35       	cpi	r24, 0x58	; 88
    211a:	79 f0       	breq	.+30     	; 0x213a <vfprintf+0x260>
    211c:	b5 c0       	rjmp	.+362    	; 0x2288 <vfprintf+0x3ae>
    211e:	80 37       	cpi	r24, 0x70	; 112
    2120:	19 f0       	breq	.+6      	; 0x2128 <vfprintf+0x24e>
    2122:	88 37       	cpi	r24, 0x78	; 120
    2124:	21 f0       	breq	.+8      	; 0x212e <vfprintf+0x254>
    2126:	b0 c0       	rjmp	.+352    	; 0x2288 <vfprintf+0x3ae>
    2128:	e9 2f       	mov	r30, r25
    212a:	e0 61       	ori	r30, 0x10	; 16
    212c:	be 2e       	mov	r11, r30
    212e:	b4 fe       	sbrs	r11, 4
    2130:	0d c0       	rjmp	.+26     	; 0x214c <vfprintf+0x272>
    2132:	fb 2d       	mov	r31, r11
    2134:	f4 60       	ori	r31, 0x04	; 4
    2136:	bf 2e       	mov	r11, r31
    2138:	09 c0       	rjmp	.+18     	; 0x214c <vfprintf+0x272>
    213a:	34 fe       	sbrs	r3, 4
    213c:	0a c0       	rjmp	.+20     	; 0x2152 <vfprintf+0x278>
    213e:	29 2f       	mov	r18, r25
    2140:	26 60       	ori	r18, 0x06	; 6
    2142:	b2 2e       	mov	r11, r18
    2144:	06 c0       	rjmp	.+12     	; 0x2152 <vfprintf+0x278>
    2146:	28 e0       	ldi	r18, 0x08	; 8
    2148:	30 e0       	ldi	r19, 0x00	; 0
    214a:	05 c0       	rjmp	.+10     	; 0x2156 <vfprintf+0x27c>
    214c:	20 e1       	ldi	r18, 0x10	; 16
    214e:	30 e0       	ldi	r19, 0x00	; 0
    2150:	02 c0       	rjmp	.+4      	; 0x2156 <vfprintf+0x27c>
    2152:	20 e1       	ldi	r18, 0x10	; 16
    2154:	32 e0       	ldi	r19, 0x02	; 2
    2156:	f8 01       	movw	r30, r16
    2158:	b7 fe       	sbrs	r11, 7
    215a:	07 c0       	rjmp	.+14     	; 0x216a <vfprintf+0x290>
    215c:	60 81       	ld	r22, Z
    215e:	71 81       	ldd	r23, Z+1	; 0x01
    2160:	82 81       	ldd	r24, Z+2	; 0x02
    2162:	93 81       	ldd	r25, Z+3	; 0x03
    2164:	0c 5f       	subi	r16, 0xFC	; 252
    2166:	1f 4f       	sbci	r17, 0xFF	; 255
    2168:	06 c0       	rjmp	.+12     	; 0x2176 <vfprintf+0x29c>
    216a:	60 81       	ld	r22, Z
    216c:	71 81       	ldd	r23, Z+1	; 0x01
    216e:	80 e0       	ldi	r24, 0x00	; 0
    2170:	90 e0       	ldi	r25, 0x00	; 0
    2172:	0e 5f       	subi	r16, 0xFE	; 254
    2174:	1f 4f       	sbci	r17, 0xFF	; 255
    2176:	a3 01       	movw	r20, r6
    2178:	0e 94 a0 11 	call	0x2340	; 0x2340 <__ultoa_invert>
    217c:	88 2e       	mov	r8, r24
    217e:	86 18       	sub	r8, r6
    2180:	fb 2d       	mov	r31, r11
    2182:	ff 77       	andi	r31, 0x7F	; 127
    2184:	3f 2e       	mov	r3, r31
    2186:	36 fe       	sbrs	r3, 6
    2188:	0d c0       	rjmp	.+26     	; 0x21a4 <vfprintf+0x2ca>
    218a:	23 2d       	mov	r18, r3
    218c:	2e 7f       	andi	r18, 0xFE	; 254
    218e:	a2 2e       	mov	r10, r18
    2190:	89 14       	cp	r8, r9
    2192:	58 f4       	brcc	.+22     	; 0x21aa <vfprintf+0x2d0>
    2194:	34 fe       	sbrs	r3, 4
    2196:	0b c0       	rjmp	.+22     	; 0x21ae <vfprintf+0x2d4>
    2198:	32 fc       	sbrc	r3, 2
    219a:	09 c0       	rjmp	.+18     	; 0x21ae <vfprintf+0x2d4>
    219c:	83 2d       	mov	r24, r3
    219e:	8e 7e       	andi	r24, 0xEE	; 238
    21a0:	a8 2e       	mov	r10, r24
    21a2:	05 c0       	rjmp	.+10     	; 0x21ae <vfprintf+0x2d4>
    21a4:	b8 2c       	mov	r11, r8
    21a6:	a3 2c       	mov	r10, r3
    21a8:	03 c0       	rjmp	.+6      	; 0x21b0 <vfprintf+0x2d6>
    21aa:	b8 2c       	mov	r11, r8
    21ac:	01 c0       	rjmp	.+2      	; 0x21b0 <vfprintf+0x2d6>
    21ae:	b9 2c       	mov	r11, r9
    21b0:	a4 fe       	sbrs	r10, 4
    21b2:	0f c0       	rjmp	.+30     	; 0x21d2 <vfprintf+0x2f8>
    21b4:	fe 01       	movw	r30, r28
    21b6:	e8 0d       	add	r30, r8
    21b8:	f1 1d       	adc	r31, r1
    21ba:	80 81       	ld	r24, Z
    21bc:	80 33       	cpi	r24, 0x30	; 48
    21be:	21 f4       	brne	.+8      	; 0x21c8 <vfprintf+0x2ee>
    21c0:	9a 2d       	mov	r25, r10
    21c2:	99 7e       	andi	r25, 0xE9	; 233
    21c4:	a9 2e       	mov	r10, r25
    21c6:	09 c0       	rjmp	.+18     	; 0x21da <vfprintf+0x300>
    21c8:	a2 fe       	sbrs	r10, 2
    21ca:	06 c0       	rjmp	.+12     	; 0x21d8 <vfprintf+0x2fe>
    21cc:	b3 94       	inc	r11
    21ce:	b3 94       	inc	r11
    21d0:	04 c0       	rjmp	.+8      	; 0x21da <vfprintf+0x300>
    21d2:	8a 2d       	mov	r24, r10
    21d4:	86 78       	andi	r24, 0x86	; 134
    21d6:	09 f0       	breq	.+2      	; 0x21da <vfprintf+0x300>
    21d8:	b3 94       	inc	r11
    21da:	a3 fc       	sbrc	r10, 3
    21dc:	11 c0       	rjmp	.+34     	; 0x2200 <vfprintf+0x326>
    21de:	a0 fe       	sbrs	r10, 0
    21e0:	06 c0       	rjmp	.+12     	; 0x21ee <vfprintf+0x314>
    21e2:	b2 14       	cp	r11, r2
    21e4:	88 f4       	brcc	.+34     	; 0x2208 <vfprintf+0x32e>
    21e6:	28 0c       	add	r2, r8
    21e8:	92 2c       	mov	r9, r2
    21ea:	9b 18       	sub	r9, r11
    21ec:	0e c0       	rjmp	.+28     	; 0x220a <vfprintf+0x330>
    21ee:	b2 14       	cp	r11, r2
    21f0:	60 f4       	brcc	.+24     	; 0x220a <vfprintf+0x330>
    21f2:	b6 01       	movw	r22, r12
    21f4:	80 e2       	ldi	r24, 0x20	; 32
    21f6:	90 e0       	ldi	r25, 0x00	; 0
    21f8:	0e 94 64 11 	call	0x22c8	; 0x22c8 <fputc>
    21fc:	b3 94       	inc	r11
    21fe:	f7 cf       	rjmp	.-18     	; 0x21ee <vfprintf+0x314>
    2200:	b2 14       	cp	r11, r2
    2202:	18 f4       	brcc	.+6      	; 0x220a <vfprintf+0x330>
    2204:	2b 18       	sub	r2, r11
    2206:	02 c0       	rjmp	.+4      	; 0x220c <vfprintf+0x332>
    2208:	98 2c       	mov	r9, r8
    220a:	21 2c       	mov	r2, r1
    220c:	a4 fe       	sbrs	r10, 4
    220e:	10 c0       	rjmp	.+32     	; 0x2230 <vfprintf+0x356>
    2210:	b6 01       	movw	r22, r12
    2212:	80 e3       	ldi	r24, 0x30	; 48
    2214:	90 e0       	ldi	r25, 0x00	; 0
    2216:	0e 94 64 11 	call	0x22c8	; 0x22c8 <fputc>
    221a:	a2 fe       	sbrs	r10, 2
    221c:	17 c0       	rjmp	.+46     	; 0x224c <vfprintf+0x372>
    221e:	a1 fc       	sbrc	r10, 1
    2220:	03 c0       	rjmp	.+6      	; 0x2228 <vfprintf+0x34e>
    2222:	88 e7       	ldi	r24, 0x78	; 120
    2224:	90 e0       	ldi	r25, 0x00	; 0
    2226:	02 c0       	rjmp	.+4      	; 0x222c <vfprintf+0x352>
    2228:	88 e5       	ldi	r24, 0x58	; 88
    222a:	90 e0       	ldi	r25, 0x00	; 0
    222c:	b6 01       	movw	r22, r12
    222e:	0c c0       	rjmp	.+24     	; 0x2248 <vfprintf+0x36e>
    2230:	8a 2d       	mov	r24, r10
    2232:	86 78       	andi	r24, 0x86	; 134
    2234:	59 f0       	breq	.+22     	; 0x224c <vfprintf+0x372>
    2236:	a1 fe       	sbrs	r10, 1
    2238:	02 c0       	rjmp	.+4      	; 0x223e <vfprintf+0x364>
    223a:	8b e2       	ldi	r24, 0x2B	; 43
    223c:	01 c0       	rjmp	.+2      	; 0x2240 <vfprintf+0x366>
    223e:	80 e2       	ldi	r24, 0x20	; 32
    2240:	a7 fc       	sbrc	r10, 7
    2242:	8d e2       	ldi	r24, 0x2D	; 45
    2244:	b6 01       	movw	r22, r12
    2246:	90 e0       	ldi	r25, 0x00	; 0
    2248:	0e 94 64 11 	call	0x22c8	; 0x22c8 <fputc>
    224c:	89 14       	cp	r8, r9
    224e:	38 f4       	brcc	.+14     	; 0x225e <vfprintf+0x384>
    2250:	b6 01       	movw	r22, r12
    2252:	80 e3       	ldi	r24, 0x30	; 48
    2254:	90 e0       	ldi	r25, 0x00	; 0
    2256:	0e 94 64 11 	call	0x22c8	; 0x22c8 <fputc>
    225a:	9a 94       	dec	r9
    225c:	f7 cf       	rjmp	.-18     	; 0x224c <vfprintf+0x372>
    225e:	8a 94       	dec	r8
    2260:	f3 01       	movw	r30, r6
    2262:	e8 0d       	add	r30, r8
    2264:	f1 1d       	adc	r31, r1
    2266:	80 81       	ld	r24, Z
    2268:	b6 01       	movw	r22, r12
    226a:	90 e0       	ldi	r25, 0x00	; 0
    226c:	0e 94 64 11 	call	0x22c8	; 0x22c8 <fputc>
    2270:	81 10       	cpse	r8, r1
    2272:	f5 cf       	rjmp	.-22     	; 0x225e <vfprintf+0x384>
    2274:	22 20       	and	r2, r2
    2276:	09 f4       	brne	.+2      	; 0x227a <vfprintf+0x3a0>
    2278:	42 ce       	rjmp	.-892    	; 0x1efe <vfprintf+0x24>
    227a:	b6 01       	movw	r22, r12
    227c:	80 e2       	ldi	r24, 0x20	; 32
    227e:	90 e0       	ldi	r25, 0x00	; 0
    2280:	0e 94 64 11 	call	0x22c8	; 0x22c8 <fputc>
    2284:	2a 94       	dec	r2
    2286:	f6 cf       	rjmp	.-20     	; 0x2274 <vfprintf+0x39a>
    2288:	f6 01       	movw	r30, r12
    228a:	86 81       	ldd	r24, Z+6	; 0x06
    228c:	97 81       	ldd	r25, Z+7	; 0x07
    228e:	02 c0       	rjmp	.+4      	; 0x2294 <vfprintf+0x3ba>
    2290:	8f ef       	ldi	r24, 0xFF	; 255
    2292:	9f ef       	ldi	r25, 0xFF	; 255
    2294:	2b 96       	adiw	r28, 0x0b	; 11
    2296:	e2 e1       	ldi	r30, 0x12	; 18
    2298:	0c 94 1a 12 	jmp	0x2434	; 0x2434 <__epilogue_restores__>

0000229c <strnlen_P>:
    229c:	fc 01       	movw	r30, r24
    229e:	05 90       	lpm	r0, Z+
    22a0:	61 50       	subi	r22, 0x01	; 1
    22a2:	70 40       	sbci	r23, 0x00	; 0
    22a4:	01 10       	cpse	r0, r1
    22a6:	d8 f7       	brcc	.-10     	; 0x229e <strnlen_P+0x2>
    22a8:	80 95       	com	r24
    22aa:	90 95       	com	r25
    22ac:	8e 0f       	add	r24, r30
    22ae:	9f 1f       	adc	r25, r31
    22b0:	08 95       	ret

000022b2 <strnlen>:
    22b2:	fc 01       	movw	r30, r24
    22b4:	61 50       	subi	r22, 0x01	; 1
    22b6:	70 40       	sbci	r23, 0x00	; 0
    22b8:	01 90       	ld	r0, Z+
    22ba:	01 10       	cpse	r0, r1
    22bc:	d8 f7       	brcc	.-10     	; 0x22b4 <strnlen+0x2>
    22be:	80 95       	com	r24
    22c0:	90 95       	com	r25
    22c2:	8e 0f       	add	r24, r30
    22c4:	9f 1f       	adc	r25, r31
    22c6:	08 95       	ret

000022c8 <fputc>:
    22c8:	0f 93       	push	r16
    22ca:	1f 93       	push	r17
    22cc:	cf 93       	push	r28
    22ce:	df 93       	push	r29
    22d0:	fb 01       	movw	r30, r22
    22d2:	23 81       	ldd	r18, Z+3	; 0x03
    22d4:	21 fd       	sbrc	r18, 1
    22d6:	03 c0       	rjmp	.+6      	; 0x22de <fputc+0x16>
    22d8:	8f ef       	ldi	r24, 0xFF	; 255
    22da:	9f ef       	ldi	r25, 0xFF	; 255
    22dc:	2c c0       	rjmp	.+88     	; 0x2336 <fputc+0x6e>
    22de:	22 ff       	sbrs	r18, 2
    22e0:	16 c0       	rjmp	.+44     	; 0x230e <fputc+0x46>
    22e2:	46 81       	ldd	r20, Z+6	; 0x06
    22e4:	57 81       	ldd	r21, Z+7	; 0x07
    22e6:	24 81       	ldd	r18, Z+4	; 0x04
    22e8:	35 81       	ldd	r19, Z+5	; 0x05
    22ea:	42 17       	cp	r20, r18
    22ec:	53 07       	cpc	r21, r19
    22ee:	44 f4       	brge	.+16     	; 0x2300 <fputc+0x38>
    22f0:	a0 81       	ld	r26, Z
    22f2:	b1 81       	ldd	r27, Z+1	; 0x01
    22f4:	9d 01       	movw	r18, r26
    22f6:	2f 5f       	subi	r18, 0xFF	; 255
    22f8:	3f 4f       	sbci	r19, 0xFF	; 255
    22fa:	31 83       	std	Z+1, r19	; 0x01
    22fc:	20 83       	st	Z, r18
    22fe:	8c 93       	st	X, r24
    2300:	26 81       	ldd	r18, Z+6	; 0x06
    2302:	37 81       	ldd	r19, Z+7	; 0x07
    2304:	2f 5f       	subi	r18, 0xFF	; 255
    2306:	3f 4f       	sbci	r19, 0xFF	; 255
    2308:	37 83       	std	Z+7, r19	; 0x07
    230a:	26 83       	std	Z+6, r18	; 0x06
    230c:	14 c0       	rjmp	.+40     	; 0x2336 <fputc+0x6e>
    230e:	8b 01       	movw	r16, r22
    2310:	ec 01       	movw	r28, r24
    2312:	fb 01       	movw	r30, r22
    2314:	00 84       	ldd	r0, Z+8	; 0x08
    2316:	f1 85       	ldd	r31, Z+9	; 0x09
    2318:	e0 2d       	mov	r30, r0
    231a:	09 95       	icall
    231c:	89 2b       	or	r24, r25
    231e:	e1 f6       	brne	.-72     	; 0x22d8 <fputc+0x10>
    2320:	d8 01       	movw	r26, r16
    2322:	16 96       	adiw	r26, 0x06	; 6
    2324:	8d 91       	ld	r24, X+
    2326:	9c 91       	ld	r25, X
    2328:	17 97       	sbiw	r26, 0x07	; 7
    232a:	01 96       	adiw	r24, 0x01	; 1
    232c:	17 96       	adiw	r26, 0x07	; 7
    232e:	9c 93       	st	X, r25
    2330:	8e 93       	st	-X, r24
    2332:	16 97       	sbiw	r26, 0x06	; 6
    2334:	ce 01       	movw	r24, r28
    2336:	df 91       	pop	r29
    2338:	cf 91       	pop	r28
    233a:	1f 91       	pop	r17
    233c:	0f 91       	pop	r16
    233e:	08 95       	ret

00002340 <__ultoa_invert>:
    2340:	fa 01       	movw	r30, r20
    2342:	aa 27       	eor	r26, r26
    2344:	28 30       	cpi	r18, 0x08	; 8
    2346:	51 f1       	breq	.+84     	; 0x239c <__ultoa_invert+0x5c>
    2348:	20 31       	cpi	r18, 0x10	; 16
    234a:	81 f1       	breq	.+96     	; 0x23ac <__ultoa_invert+0x6c>
    234c:	e8 94       	clt
    234e:	6f 93       	push	r22
    2350:	6e 7f       	andi	r22, 0xFE	; 254
    2352:	6e 5f       	subi	r22, 0xFE	; 254
    2354:	7f 4f       	sbci	r23, 0xFF	; 255
    2356:	8f 4f       	sbci	r24, 0xFF	; 255
    2358:	9f 4f       	sbci	r25, 0xFF	; 255
    235a:	af 4f       	sbci	r26, 0xFF	; 255
    235c:	b1 e0       	ldi	r27, 0x01	; 1
    235e:	3e d0       	rcall	.+124    	; 0x23dc <__ultoa_invert+0x9c>
    2360:	b4 e0       	ldi	r27, 0x04	; 4
    2362:	3c d0       	rcall	.+120    	; 0x23dc <__ultoa_invert+0x9c>
    2364:	67 0f       	add	r22, r23
    2366:	78 1f       	adc	r23, r24
    2368:	89 1f       	adc	r24, r25
    236a:	9a 1f       	adc	r25, r26
    236c:	a1 1d       	adc	r26, r1
    236e:	68 0f       	add	r22, r24
    2370:	79 1f       	adc	r23, r25
    2372:	8a 1f       	adc	r24, r26
    2374:	91 1d       	adc	r25, r1
    2376:	a1 1d       	adc	r26, r1
    2378:	6a 0f       	add	r22, r26
    237a:	71 1d       	adc	r23, r1
    237c:	81 1d       	adc	r24, r1
    237e:	91 1d       	adc	r25, r1
    2380:	a1 1d       	adc	r26, r1
    2382:	20 d0       	rcall	.+64     	; 0x23c4 <__ultoa_invert+0x84>
    2384:	09 f4       	brne	.+2      	; 0x2388 <__ultoa_invert+0x48>
    2386:	68 94       	set
    2388:	3f 91       	pop	r19
    238a:	2a e0       	ldi	r18, 0x0A	; 10
    238c:	26 9f       	mul	r18, r22
    238e:	11 24       	eor	r1, r1
    2390:	30 19       	sub	r19, r0
    2392:	30 5d       	subi	r19, 0xD0	; 208
    2394:	31 93       	st	Z+, r19
    2396:	de f6       	brtc	.-74     	; 0x234e <__ultoa_invert+0xe>
    2398:	cf 01       	movw	r24, r30
    239a:	08 95       	ret
    239c:	46 2f       	mov	r20, r22
    239e:	47 70       	andi	r20, 0x07	; 7
    23a0:	40 5d       	subi	r20, 0xD0	; 208
    23a2:	41 93       	st	Z+, r20
    23a4:	b3 e0       	ldi	r27, 0x03	; 3
    23a6:	0f d0       	rcall	.+30     	; 0x23c6 <__ultoa_invert+0x86>
    23a8:	c9 f7       	brne	.-14     	; 0x239c <__ultoa_invert+0x5c>
    23aa:	f6 cf       	rjmp	.-20     	; 0x2398 <__ultoa_invert+0x58>
    23ac:	46 2f       	mov	r20, r22
    23ae:	4f 70       	andi	r20, 0x0F	; 15
    23b0:	40 5d       	subi	r20, 0xD0	; 208
    23b2:	4a 33       	cpi	r20, 0x3A	; 58
    23b4:	18 f0       	brcs	.+6      	; 0x23bc <__ultoa_invert+0x7c>
    23b6:	49 5d       	subi	r20, 0xD9	; 217
    23b8:	31 fd       	sbrc	r19, 1
    23ba:	40 52       	subi	r20, 0x20	; 32
    23bc:	41 93       	st	Z+, r20
    23be:	02 d0       	rcall	.+4      	; 0x23c4 <__ultoa_invert+0x84>
    23c0:	a9 f7       	brne	.-22     	; 0x23ac <__ultoa_invert+0x6c>
    23c2:	ea cf       	rjmp	.-44     	; 0x2398 <__ultoa_invert+0x58>
    23c4:	b4 e0       	ldi	r27, 0x04	; 4
    23c6:	a6 95       	lsr	r26
    23c8:	97 95       	ror	r25
    23ca:	87 95       	ror	r24
    23cc:	77 95       	ror	r23
    23ce:	67 95       	ror	r22
    23d0:	ba 95       	dec	r27
    23d2:	c9 f7       	brne	.-14     	; 0x23c6 <__ultoa_invert+0x86>
    23d4:	00 97       	sbiw	r24, 0x00	; 0
    23d6:	61 05       	cpc	r22, r1
    23d8:	71 05       	cpc	r23, r1
    23da:	08 95       	ret
    23dc:	9b 01       	movw	r18, r22
    23de:	ac 01       	movw	r20, r24
    23e0:	0a 2e       	mov	r0, r26
    23e2:	06 94       	lsr	r0
    23e4:	57 95       	ror	r21
    23e6:	47 95       	ror	r20
    23e8:	37 95       	ror	r19
    23ea:	27 95       	ror	r18
    23ec:	ba 95       	dec	r27
    23ee:	c9 f7       	brne	.-14     	; 0x23e2 <__ultoa_invert+0xa2>
    23f0:	62 0f       	add	r22, r18
    23f2:	73 1f       	adc	r23, r19
    23f4:	84 1f       	adc	r24, r20
    23f6:	95 1f       	adc	r25, r21
    23f8:	a0 1d       	adc	r26, r0
    23fa:	08 95       	ret

000023fc <__prologue_saves__>:
    23fc:	2f 92       	push	r2
    23fe:	3f 92       	push	r3
    2400:	4f 92       	push	r4
    2402:	5f 92       	push	r5
    2404:	6f 92       	push	r6
    2406:	7f 92       	push	r7
    2408:	8f 92       	push	r8
    240a:	9f 92       	push	r9
    240c:	af 92       	push	r10
    240e:	bf 92       	push	r11
    2410:	cf 92       	push	r12
    2412:	df 92       	push	r13
    2414:	ef 92       	push	r14
    2416:	ff 92       	push	r15
    2418:	0f 93       	push	r16
    241a:	1f 93       	push	r17
    241c:	cf 93       	push	r28
    241e:	df 93       	push	r29
    2420:	cd b7       	in	r28, 0x3d	; 61
    2422:	de b7       	in	r29, 0x3e	; 62
    2424:	ca 1b       	sub	r28, r26
    2426:	db 0b       	sbc	r29, r27
    2428:	0f b6       	in	r0, 0x3f	; 63
    242a:	f8 94       	cli
    242c:	de bf       	out	0x3e, r29	; 62
    242e:	0f be       	out	0x3f, r0	; 63
    2430:	cd bf       	out	0x3d, r28	; 61
    2432:	09 94       	ijmp

00002434 <__epilogue_restores__>:
    2434:	2a 88       	ldd	r2, Y+18	; 0x12
    2436:	39 88       	ldd	r3, Y+17	; 0x11
    2438:	48 88       	ldd	r4, Y+16	; 0x10
    243a:	5f 84       	ldd	r5, Y+15	; 0x0f
    243c:	6e 84       	ldd	r6, Y+14	; 0x0e
    243e:	7d 84       	ldd	r7, Y+13	; 0x0d
    2440:	8c 84       	ldd	r8, Y+12	; 0x0c
    2442:	9b 84       	ldd	r9, Y+11	; 0x0b
    2444:	aa 84       	ldd	r10, Y+10	; 0x0a
    2446:	b9 84       	ldd	r11, Y+9	; 0x09
    2448:	c8 84       	ldd	r12, Y+8	; 0x08
    244a:	df 80       	ldd	r13, Y+7	; 0x07
    244c:	ee 80       	ldd	r14, Y+6	; 0x06
    244e:	fd 80       	ldd	r15, Y+5	; 0x05
    2450:	0c 81       	ldd	r16, Y+4	; 0x04
    2452:	1b 81       	ldd	r17, Y+3	; 0x03
    2454:	aa 81       	ldd	r26, Y+2	; 0x02
    2456:	b9 81       	ldd	r27, Y+1	; 0x01
    2458:	ce 0f       	add	r28, r30
    245a:	d1 1d       	adc	r29, r1
    245c:	0f b6       	in	r0, 0x3f	; 63
    245e:	f8 94       	cli
    2460:	de bf       	out	0x3e, r29	; 62
    2462:	0f be       	out	0x3f, r0	; 63
    2464:	cd bf       	out	0x3d, r28	; 61
    2466:	ed 01       	movw	r28, r26
    2468:	08 95       	ret

0000246a <_exit>:
    246a:	f8 94       	cli

0000246c <__stop_program>:
    246c:	ff cf       	rjmp	.-2      	; 0x246c <__stop_program>
