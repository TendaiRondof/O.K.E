
My_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000132  00800100  000024ca  0000255e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000024ca  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000071  00800232  00800232  00002690  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002690  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000026ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  0000272c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001750  00000000  00000000  00002874  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b06  00000000  00000000  00003fc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013af  00000000  00000000  00004aca  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000514  00000000  00000000  00005e7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000952  00000000  00000000  00006390  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a73  00000000  00000000  00006ce2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  00007755  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 f9 0a 	jmp	0x15f2	; 0x15f2 <__vector_16>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 cb 01 	jmp	0x396	; 0x396 <__vector_20>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      70:	0c 94 26 02 	jmp	0x44c	; 0x44c <__vector_28>
      74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d0 e1       	ldi	r29, 0x10	; 16
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	12 e0       	ldi	r17, 0x02	; 2
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	ea ec       	ldi	r30, 0xCA	; 202
      90:	f4 e2       	ldi	r31, 0x24	; 36
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	a2 33       	cpi	r26, 0x32	; 50
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	22 e0       	ldi	r18, 0x02	; 2
      a0:	a2 e3       	ldi	r26, 0x32	; 50
      a2:	b2 e0       	ldi	r27, 0x02	; 2
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	a3 3a       	cpi	r26, 0xA3	; 163
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 90 02 	call	0x520	; 0x520 <main>
      b2:	0c 94 63 12 	jmp	0x24c6	; 0x24c6 <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <get_DIP_Switch>:
	}
	if ((x>300)&&(x<700)&&(y<700)&&(y>300))
	{
		return 0;
	}
}
      ba:	cf 93       	push	r28
      bc:	df 93       	push	r29
      be:	00 d0       	rcall	.+0      	; 0xc0 <get_DIP_Switch+0x6>
      c0:	1f 92       	push	r1
      c2:	cd b7       	in	r28, 0x3d	; 61
      c4:	de b7       	in	r29, 0x3e	; 62
      c6:	19 82       	std	Y+1, r1	; 0x01
      c8:	82 e2       	ldi	r24, 0x22	; 34
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	22 e2       	ldi	r18, 0x22	; 34
      ce:	30 e0       	ldi	r19, 0x00	; 0
      d0:	f9 01       	movw	r30, r18
      d2:	20 81       	ld	r18, Z
      d4:	20 62       	ori	r18, 0x20	; 32
      d6:	fc 01       	movw	r30, r24
      d8:	20 83       	st	Z, r18
      da:	82 e2       	ldi	r24, 0x22	; 34
      dc:	90 e0       	ldi	r25, 0x00	; 0
      de:	22 e2       	ldi	r18, 0x22	; 34
      e0:	30 e0       	ldi	r19, 0x00	; 0
      e2:	f9 01       	movw	r30, r18
      e4:	20 81       	ld	r18, Z
      e6:	2f 7d       	andi	r18, 0xDF	; 223
      e8:	fc 01       	movw	r30, r24
      ea:	20 83       	st	Z, r18
      ec:	82 e2       	ldi	r24, 0x22	; 34
      ee:	90 e0       	ldi	r25, 0x00	; 0
      f0:	22 e2       	ldi	r18, 0x22	; 34
      f2:	30 e0       	ldi	r19, 0x00	; 0
      f4:	f9 01       	movw	r30, r18
      f6:	20 81       	ld	r18, Z
      f8:	20 62       	ori	r18, 0x20	; 32
      fa:	fc 01       	movw	r30, r24
      fc:	20 83       	st	Z, r18
      fe:	87 e0       	ldi	r24, 0x07	; 7
     100:	90 e0       	ldi	r25, 0x00	; 0
     102:	9b 83       	std	Y+3, r25	; 0x03
     104:	8a 83       	std	Y+2, r24	; 0x02
     106:	30 c0       	rjmp	.+96     	; 0x168 <get_DIP_Switch+0xae>
     108:	80 e2       	ldi	r24, 0x20	; 32
     10a:	90 e0       	ldi	r25, 0x00	; 0
     10c:	fc 01       	movw	r30, r24
     10e:	80 81       	ld	r24, Z
     110:	88 2f       	mov	r24, r24
     112:	90 e0       	ldi	r25, 0x00	; 0
     114:	80 78       	andi	r24, 0x80	; 128
     116:	99 27       	eor	r25, r25
     118:	47 e0       	ldi	r20, 0x07	; 7
     11a:	50 e0       	ldi	r21, 0x00	; 0
     11c:	2a 81       	ldd	r18, Y+2	; 0x02
     11e:	3b 81       	ldd	r19, Y+3	; 0x03
     120:	ba 01       	movw	r22, r20
     122:	62 1b       	sub	r22, r18
     124:	73 0b       	sbc	r23, r19
     126:	9b 01       	movw	r18, r22
     128:	02 c0       	rjmp	.+4      	; 0x12e <get_DIP_Switch+0x74>
     12a:	95 95       	asr	r25
     12c:	87 95       	ror	r24
     12e:	2a 95       	dec	r18
     130:	e2 f7       	brpl	.-8      	; 0x12a <get_DIP_Switch+0x70>
     132:	98 2f       	mov	r25, r24
     134:	89 81       	ldd	r24, Y+1	; 0x01
     136:	89 2b       	or	r24, r25
     138:	89 83       	std	Y+1, r24	; 0x01
     13a:	82 e2       	ldi	r24, 0x22	; 34
     13c:	90 e0       	ldi	r25, 0x00	; 0
     13e:	22 e2       	ldi	r18, 0x22	; 34
     140:	30 e0       	ldi	r19, 0x00	; 0
     142:	f9 01       	movw	r30, r18
     144:	20 81       	ld	r18, Z
     146:	2f 7b       	andi	r18, 0xBF	; 191
     148:	fc 01       	movw	r30, r24
     14a:	20 83       	st	Z, r18
     14c:	82 e2       	ldi	r24, 0x22	; 34
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	22 e2       	ldi	r18, 0x22	; 34
     152:	30 e0       	ldi	r19, 0x00	; 0
     154:	f9 01       	movw	r30, r18
     156:	20 81       	ld	r18, Z
     158:	20 64       	ori	r18, 0x40	; 64
     15a:	fc 01       	movw	r30, r24
     15c:	20 83       	st	Z, r18
     15e:	8a 81       	ldd	r24, Y+2	; 0x02
     160:	9b 81       	ldd	r25, Y+3	; 0x03
     162:	01 97       	sbiw	r24, 0x01	; 1
     164:	9b 83       	std	Y+3, r25	; 0x03
     166:	8a 83       	std	Y+2, r24	; 0x02
     168:	8a 81       	ldd	r24, Y+2	; 0x02
     16a:	9b 81       	ldd	r25, Y+3	; 0x03
     16c:	99 23       	and	r25, r25
     16e:	64 f6       	brge	.-104    	; 0x108 <get_DIP_Switch+0x4e>
     170:	89 81       	ldd	r24, Y+1	; 0x01
     172:	0f 90       	pop	r0
     174:	0f 90       	pop	r0
     176:	0f 90       	pop	r0
     178:	df 91       	pop	r29
     17a:	cf 91       	pop	r28
     17c:	08 95       	ret

0000017e <get_LCD_Taster>:
     17e:	cf 93       	push	r28
     180:	df 93       	push	r29
     182:	1f 92       	push	r1
     184:	cd b7       	in	r28, 0x3d	; 61
     186:	de b7       	in	r29, 0x3e	; 62
     188:	85 e2       	ldi	r24, 0x25	; 37
     18a:	90 e0       	ldi	r25, 0x00	; 0
     18c:	25 e2       	ldi	r18, 0x25	; 37
     18e:	30 e0       	ldi	r19, 0x00	; 0
     190:	f9 01       	movw	r30, r18
     192:	20 81       	ld	r18, Z
     194:	20 7f       	andi	r18, 0xF0	; 240
     196:	fc 01       	movw	r30, r24
     198:	20 83       	st	Z, r18
     19a:	84 e2       	ldi	r24, 0x24	; 36
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	20 ef       	ldi	r18, 0xF0	; 240
     1a0:	fc 01       	movw	r30, r24
     1a2:	20 83       	st	Z, r18
	...
     1b8:	83 e2       	ldi	r24, 0x23	; 35
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	fc 01       	movw	r30, r24
     1be:	80 81       	ld	r24, Z
     1c0:	8f 70       	andi	r24, 0x0F	; 15
     1c2:	89 83       	std	Y+1, r24	; 0x01
     1c4:	84 e2       	ldi	r24, 0x24	; 36
     1c6:	90 e0       	ldi	r25, 0x00	; 0
     1c8:	2f ef       	ldi	r18, 0xFF	; 255
     1ca:	fc 01       	movw	r30, r24
     1cc:	20 83       	st	Z, r18
     1ce:	89 81       	ldd	r24, Y+1	; 0x01
     1d0:	0f 90       	pop	r0
     1d2:	df 91       	pop	r29
     1d4:	cf 91       	pop	r28
     1d6:	08 95       	ret

000001d8 <init_ADC>:
     1d8:	cf 93       	push	r28
     1da:	df 93       	push	r29
     1dc:	cd b7       	in	r28, 0x3d	; 61
     1de:	de b7       	in	r29, 0x3e	; 62
     1e0:	8a e7       	ldi	r24, 0x7A	; 122
     1e2:	90 e0       	ldi	r25, 0x00	; 0
     1e4:	2a e7       	ldi	r18, 0x7A	; 122
     1e6:	30 e0       	ldi	r19, 0x00	; 0
     1e8:	f9 01       	movw	r30, r18
     1ea:	20 81       	ld	r18, Z
     1ec:	20 68       	ori	r18, 0x80	; 128
     1ee:	fc 01       	movw	r30, r24
     1f0:	20 83       	st	Z, r18
     1f2:	8c e7       	ldi	r24, 0x7C	; 124
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	2c e7       	ldi	r18, 0x7C	; 124
     1f8:	30 e0       	ldi	r19, 0x00	; 0
     1fa:	f9 01       	movw	r30, r18
     1fc:	20 81       	ld	r18, Z
     1fe:	20 64       	ori	r18, 0x40	; 64
     200:	fc 01       	movw	r30, r24
     202:	20 83       	st	Z, r18
     204:	8a e7       	ldi	r24, 0x7A	; 122
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	2a e7       	ldi	r18, 0x7A	; 122
     20a:	30 e0       	ldi	r19, 0x00	; 0
     20c:	f9 01       	movw	r30, r18
     20e:	20 81       	ld	r18, Z
     210:	27 60       	ori	r18, 0x07	; 7
     212:	fc 01       	movw	r30, r24
     214:	20 83       	st	Z, r18
     216:	00 00       	nop
     218:	df 91       	pop	r29
     21a:	cf 91       	pop	r28
     21c:	08 95       	ret

0000021e <init_UART0>:
     21e:	cf 93       	push	r28
     220:	df 93       	push	r29
     222:	cd b7       	in	r28, 0x3d	; 61
     224:	de b7       	in	r29, 0x3e	; 62
     226:	84 ec       	ldi	r24, 0xC4	; 196
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	20 e1       	ldi	r18, 0x10	; 16
     22c:	30 e0       	ldi	r19, 0x00	; 0
     22e:	fc 01       	movw	r30, r24
     230:	31 83       	std	Z+1, r19	; 0x01
     232:	20 83       	st	Z, r18
     234:	80 ec       	ldi	r24, 0xC0	; 192
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	20 ec       	ldi	r18, 0xC0	; 192
     23a:	30 e0       	ldi	r19, 0x00	; 0
     23c:	f9 01       	movw	r30, r18
     23e:	20 81       	ld	r18, Z
     240:	22 60       	ori	r18, 0x02	; 2
     242:	fc 01       	movw	r30, r24
     244:	20 83       	st	Z, r18
     246:	81 ec       	ldi	r24, 0xC1	; 193
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	21 ec       	ldi	r18, 0xC1	; 193
     24c:	30 e0       	ldi	r19, 0x00	; 0
     24e:	f9 01       	movw	r30, r18
     250:	20 81       	ld	r18, Z
     252:	28 69       	ori	r18, 0x98	; 152
     254:	fc 01       	movw	r30, r24
     256:	20 83       	st	Z, r18
     258:	00 00       	nop
     25a:	df 91       	pop	r29
     25c:	cf 91       	pop	r28
     25e:	08 95       	ret

00000260 <init_UART1>:
     260:	cf 93       	push	r28
     262:	df 93       	push	r29
     264:	cd b7       	in	r28, 0x3d	; 61
     266:	de b7       	in	r29, 0x3e	; 62
     268:	8c ec       	ldi	r24, 0xCC	; 204
     26a:	90 e0       	ldi	r25, 0x00	; 0
     26c:	20 e1       	ldi	r18, 0x10	; 16
     26e:	30 e0       	ldi	r19, 0x00	; 0
     270:	fc 01       	movw	r30, r24
     272:	31 83       	std	Z+1, r19	; 0x01
     274:	20 83       	st	Z, r18
     276:	88 ec       	ldi	r24, 0xC8	; 200
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	28 ec       	ldi	r18, 0xC8	; 200
     27c:	30 e0       	ldi	r19, 0x00	; 0
     27e:	f9 01       	movw	r30, r18
     280:	20 81       	ld	r18, Z
     282:	22 60       	ori	r18, 0x02	; 2
     284:	fc 01       	movw	r30, r24
     286:	20 83       	st	Z, r18
     288:	89 ec       	ldi	r24, 0xC9	; 201
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	29 ec       	ldi	r18, 0xC9	; 201
     28e:	30 e0       	ldi	r19, 0x00	; 0
     290:	f9 01       	movw	r30, r18
     292:	20 81       	ld	r18, Z
     294:	28 69       	ori	r18, 0x98	; 152
     296:	fc 01       	movw	r30, r24
     298:	20 83       	st	Z, r18
     29a:	00 00       	nop
     29c:	df 91       	pop	r29
     29e:	cf 91       	pop	r28
     2a0:	08 95       	ret

000002a2 <send_Byte_0>:
     2a2:	cf 93       	push	r28
     2a4:	df 93       	push	r29
     2a6:	1f 92       	push	r1
     2a8:	cd b7       	in	r28, 0x3d	; 61
     2aa:	de b7       	in	r29, 0x3e	; 62
     2ac:	89 83       	std	Y+1, r24	; 0x01
     2ae:	00 00       	nop
     2b0:	80 ec       	ldi	r24, 0xC0	; 192
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	fc 01       	movw	r30, r24
     2b6:	80 81       	ld	r24, Z
     2b8:	88 2f       	mov	r24, r24
     2ba:	90 e0       	ldi	r25, 0x00	; 0
     2bc:	80 72       	andi	r24, 0x20	; 32
     2be:	99 27       	eor	r25, r25
     2c0:	89 2b       	or	r24, r25
     2c2:	b1 f3       	breq	.-20     	; 0x2b0 <send_Byte_0+0xe>
     2c4:	86 ec       	ldi	r24, 0xC6	; 198
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	29 81       	ldd	r18, Y+1	; 0x01
     2ca:	fc 01       	movw	r30, r24
     2cc:	20 83       	st	Z, r18
     2ce:	00 00       	nop
     2d0:	0f 90       	pop	r0
     2d2:	df 91       	pop	r29
     2d4:	cf 91       	pop	r28
     2d6:	08 95       	ret

000002d8 <send_Byte_1>:
     2d8:	cf 93       	push	r28
     2da:	df 93       	push	r29
     2dc:	1f 92       	push	r1
     2de:	cd b7       	in	r28, 0x3d	; 61
     2e0:	de b7       	in	r29, 0x3e	; 62
     2e2:	89 83       	std	Y+1, r24	; 0x01
     2e4:	00 00       	nop
     2e6:	88 ec       	ldi	r24, 0xC8	; 200
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	fc 01       	movw	r30, r24
     2ec:	80 81       	ld	r24, Z
     2ee:	88 2f       	mov	r24, r24
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	80 72       	andi	r24, 0x20	; 32
     2f4:	99 27       	eor	r25, r25
     2f6:	89 2b       	or	r24, r25
     2f8:	b1 f3       	breq	.-20     	; 0x2e6 <send_Byte_1+0xe>
     2fa:	8e ec       	ldi	r24, 0xCE	; 206
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	29 81       	ldd	r18, Y+1	; 0x01
     300:	fc 01       	movw	r30, r24
     302:	20 83       	st	Z, r18
     304:	00 00       	nop
     306:	0f 90       	pop	r0
     308:	df 91       	pop	r29
     30a:	cf 91       	pop	r28
     30c:	08 95       	ret

0000030e <to_uARM>:
     30e:	cf 93       	push	r28
     310:	df 93       	push	r29
     312:	00 d0       	rcall	.+0      	; 0x314 <to_uARM+0x6>
     314:	cd b7       	in	r28, 0x3d	; 61
     316:	de b7       	in	r29, 0x3e	; 62
     318:	9a 83       	std	Y+2, r25	; 0x02
     31a:	89 83       	std	Y+1, r24	; 0x01
     31c:	0b c0       	rjmp	.+22     	; 0x334 <to_uARM+0x26>
     31e:	89 81       	ldd	r24, Y+1	; 0x01
     320:	9a 81       	ldd	r25, Y+2	; 0x02
     322:	fc 01       	movw	r30, r24
     324:	80 81       	ld	r24, Z
     326:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <send_Byte_1>
     32a:	89 81       	ldd	r24, Y+1	; 0x01
     32c:	9a 81       	ldd	r25, Y+2	; 0x02
     32e:	01 96       	adiw	r24, 0x01	; 1
     330:	9a 83       	std	Y+2, r25	; 0x02
     332:	89 83       	std	Y+1, r24	; 0x01
     334:	89 81       	ldd	r24, Y+1	; 0x01
     336:	9a 81       	ldd	r25, Y+2	; 0x02
     338:	fc 01       	movw	r30, r24
     33a:	80 81       	ld	r24, Z
     33c:	88 23       	and	r24, r24
     33e:	79 f7       	brne	.-34     	; 0x31e <to_uARM+0x10>
     340:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <uart_str_complete1>
     344:	00 00       	nop
     346:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <uart_str_complete1>
     34a:	88 23       	and	r24, r24
     34c:	e1 f3       	breq	.-8      	; 0x346 <to_uARM+0x38>
     34e:	00 00       	nop
     350:	0f 90       	pop	r0
     352:	0f 90       	pop	r0
     354:	df 91       	pop	r29
     356:	cf 91       	pop	r28
     358:	08 95       	ret

0000035a <send_to_uArm>:
     35a:	cf 93       	push	r28
     35c:	df 93       	push	r29
     35e:	00 d0       	rcall	.+0      	; 0x360 <send_to_uArm+0x6>
     360:	cd b7       	in	r28, 0x3d	; 61
     362:	de b7       	in	r29, 0x3e	; 62
     364:	9a 83       	std	Y+2, r25	; 0x02
     366:	89 83       	std	Y+1, r24	; 0x01
     368:	89 81       	ldd	r24, Y+1	; 0x01
     36a:	9a 81       	ldd	r25, Y+2	; 0x02
     36c:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     370:	80 e0       	ldi	r24, 0x00	; 0
     372:	91 e0       	ldi	r25, 0x01	; 1
     374:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     378:	04 c0       	rjmp	.+8      	; 0x382 <send_to_uArm+0x28>
     37a:	80 e0       	ldi	r24, 0x00	; 0
     37c:	91 e0       	ldi	r25, 0x01	; 1
     37e:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     382:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <uart_string1+0x4>
     386:	81 33       	cpi	r24, 0x31	; 49
     388:	c1 f3       	breq	.-16     	; 0x37a <send_to_uArm+0x20>
     38a:	00 00       	nop
     38c:	0f 90       	pop	r0
     38e:	0f 90       	pop	r0
     390:	df 91       	pop	r29
     392:	cf 91       	pop	r28
     394:	08 95       	ret

00000396 <__vector_20>:
     396:	1f 92       	push	r1
     398:	0f 92       	push	r0
     39a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     39e:	0f 92       	push	r0
     3a0:	11 24       	eor	r1, r1
     3a2:	2f 93       	push	r18
     3a4:	3f 93       	push	r19
     3a6:	8f 93       	push	r24
     3a8:	9f 93       	push	r25
     3aa:	ef 93       	push	r30
     3ac:	ff 93       	push	r31
     3ae:	cf 93       	push	r28
     3b0:	df 93       	push	r29
     3b2:	00 d0       	rcall	.+0      	; 0x3b4 <__vector_20+0x1e>
     3b4:	1f 92       	push	r1
     3b6:	cd b7       	in	r28, 0x3d	; 61
     3b8:	de b7       	in	r29, 0x3e	; 62
     3ba:	1a 82       	std	Y+2, r1	; 0x02
     3bc:	86 ec       	ldi	r24, 0xC6	; 198
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	fc 01       	movw	r30, r24
     3c2:	80 81       	ld	r24, Z
     3c4:	8b 83       	std	Y+3, r24	; 0x03
     3c6:	8b 81       	ldd	r24, Y+3	; 0x03
     3c8:	8a 30       	cpi	r24, 0x0A	; 10
     3ca:	99 f0       	breq	.+38     	; 0x3f2 <__vector_20+0x5c>
     3cc:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <uart_str_count1>
     3d0:	82 33       	cpi	r24, 0x32	; 50
     3d2:	78 f4       	brcc	.+30     	; 0x3f2 <__vector_20+0x5c>
     3d4:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <data_bytes_recieved>
     3d8:	88 2f       	mov	r24, r24
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	89 57       	subi	r24, 0x79	; 121
     3de:	9d 4f       	sbci	r25, 0xFD	; 253
     3e0:	2b 81       	ldd	r18, Y+3	; 0x03
     3e2:	fc 01       	movw	r30, r24
     3e4:	20 83       	st	Z, r18
     3e6:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <data_bytes_recieved>
     3ea:	8f 5f       	subi	r24, 0xFF	; 255
     3ec:	80 93 35 02 	sts	0x0235, r24	; 0x800235 <data_bytes_recieved>
     3f0:	1b c0       	rjmp	.+54     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     3f2:	19 82       	std	Y+1, r1	; 0x01
     3f4:	11 c0       	rjmp	.+34     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     3f6:	89 81       	ldd	r24, Y+1	; 0x01
     3f8:	88 2f       	mov	r24, r24
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	29 81       	ldd	r18, Y+1	; 0x01
     3fe:	22 2f       	mov	r18, r18
     400:	30 e0       	ldi	r19, 0x00	; 0
     402:	29 57       	subi	r18, 0x79	; 121
     404:	3d 4f       	sbci	r19, 0xFD	; 253
     406:	f9 01       	movw	r30, r18
     408:	20 81       	ld	r18, Z
     40a:	8b 56       	subi	r24, 0x6B	; 107
     40c:	9d 4f       	sbci	r25, 0xFD	; 253
     40e:	fc 01       	movw	r30, r24
     410:	20 83       	st	Z, r18
     412:	89 81       	ldd	r24, Y+1	; 0x01
     414:	8f 5f       	subi	r24, 0xFF	; 255
     416:	89 83       	std	Y+1, r24	; 0x01
     418:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <data_bytes_recieved>
     41c:	99 81       	ldd	r25, Y+1	; 0x01
     41e:	89 17       	cp	r24, r25
     420:	50 f7       	brcc	.-44     	; 0x3f6 <__vector_20+0x60>
     422:	81 e0       	ldi	r24, 0x01	; 1
     424:	80 93 33 02 	sts	0x0233, r24	; 0x800233 <uart_str_complete>
     428:	00 00       	nop
     42a:	0f 90       	pop	r0
     42c:	0f 90       	pop	r0
     42e:	0f 90       	pop	r0
     430:	df 91       	pop	r29
     432:	cf 91       	pop	r28
     434:	ff 91       	pop	r31
     436:	ef 91       	pop	r30
     438:	9f 91       	pop	r25
     43a:	8f 91       	pop	r24
     43c:	3f 91       	pop	r19
     43e:	2f 91       	pop	r18
     440:	0f 90       	pop	r0
     442:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     446:	0f 90       	pop	r0
     448:	1f 90       	pop	r1
     44a:	18 95       	reti

0000044c <__vector_28>:
     44c:	1f 92       	push	r1
     44e:	0f 92       	push	r0
     450:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     454:	0f 92       	push	r0
     456:	11 24       	eor	r1, r1
     458:	2f 93       	push	r18
     45a:	8f 93       	push	r24
     45c:	9f 93       	push	r25
     45e:	ef 93       	push	r30
     460:	ff 93       	push	r31
     462:	cf 93       	push	r28
     464:	df 93       	push	r29
     466:	1f 92       	push	r1
     468:	cd b7       	in	r28, 0x3d	; 61
     46a:	de b7       	in	r29, 0x3e	; 62
     46c:	8e ec       	ldi	r24, 0xCE	; 206
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	fc 01       	movw	r30, r24
     472:	80 81       	ld	r24, Z
     474:	89 83       	std	Y+1, r24	; 0x01
     476:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <uart_str_complete1>
     47a:	88 23       	and	r24, r24
     47c:	31 f5       	brne	.+76     	; 0x4ca <__vector_28+0x7e>
     47e:	89 81       	ldd	r24, Y+1	; 0x01
     480:	8a 30       	cpi	r24, 0x0A	; 10
     482:	b1 f0       	breq	.+44     	; 0x4b0 <__vector_28+0x64>
     484:	89 81       	ldd	r24, Y+1	; 0x01
     486:	8d 30       	cpi	r24, 0x0D	; 13
     488:	99 f0       	breq	.+38     	; 0x4b0 <__vector_28+0x64>
     48a:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <uart_str_count1>
     48e:	82 33       	cpi	r24, 0x32	; 50
     490:	78 f4       	brcc	.+30     	; 0x4b0 <__vector_28+0x64>
     492:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <uart_str_count1>
     496:	88 2f       	mov	r24, r24
     498:	90 e0       	ldi	r25, 0x00	; 0
     49a:	89 5c       	subi	r24, 0xC9	; 201
     49c:	9d 4f       	sbci	r25, 0xFD	; 253
     49e:	29 81       	ldd	r18, Y+1	; 0x01
     4a0:	fc 01       	movw	r30, r24
     4a2:	20 83       	st	Z, r18
     4a4:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <uart_str_count1>
     4a8:	8f 5f       	subi	r24, 0xFF	; 255
     4aa:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <uart_str_count1>
     4ae:	0d c0       	rjmp	.+26     	; 0x4ca <__vector_28+0x7e>
     4b0:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <uart_str_count1>
     4b4:	88 2f       	mov	r24, r24
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	89 5c       	subi	r24, 0xC9	; 201
     4ba:	9d 4f       	sbci	r25, 0xFD	; 253
     4bc:	fc 01       	movw	r30, r24
     4be:	10 82       	st	Z, r1
     4c0:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <uart_str_count1>
     4c4:	81 e0       	ldi	r24, 0x01	; 1
     4c6:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <uart_str_complete1>
     4ca:	00 00       	nop
     4cc:	0f 90       	pop	r0
     4ce:	df 91       	pop	r29
     4d0:	cf 91       	pop	r28
     4d2:	ff 91       	pop	r31
     4d4:	ef 91       	pop	r30
     4d6:	9f 91       	pop	r25
     4d8:	8f 91       	pop	r24
     4da:	2f 91       	pop	r18
     4dc:	0f 90       	pop	r0
     4de:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     4e2:	0f 90       	pop	r0
     4e4:	1f 90       	pop	r1
     4e6:	18 95       	reti

000004e8 <start_up_routine>:

void start_up_routine ()
{
     4e8:	cf 93       	push	r28
     4ea:	df 93       	push	r29
     4ec:	cd b7       	in	r28, 0x3d	; 61
     4ee:	de b7       	in	r29, 0x3e	; 62
	init_BT_CAR_V2_0();			// Das Board wird hier initialisiert
     4f0:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <init_BT_CAR_V2_0>
	wait_1ms(1000);
     4f4:	68 ee       	ldi	r22, 0xE8	; 232
     4f6:	73 e0       	ldi	r23, 0x03	; 3
     4f8:	80 e0       	ldi	r24, 0x00	; 0
     4fa:	90 e0       	ldi	r25, 0x00	; 0
     4fc:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <wait_1ms>
	init_ADC();
     500:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <init_ADC>
	init_UART0();
     504:	0e 94 0f 01 	call	0x21e	; 0x21e <init_UART0>
	init_UART1();
     508:	0e 94 30 01 	call	0x260	; 0x260 <init_UART1>
	wait_1ms(1000);
     50c:	68 ee       	ldi	r22, 0xE8	; 232
     50e:	73 e0       	ldi	r23, 0x03	; 3
     510:	80 e0       	ldi	r24, 0x00	; 0
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <wait_1ms>
	//while (final_data[0]!='D')
	//{
	//	to_pc('R');
	//}
	
}
     518:	00 00       	nop
     51a:	df 91       	pop	r29
     51c:	cf 91       	pop	r28
     51e:	08 95       	ret

00000520 <main>:

int main (void)
{
     520:	cf 92       	push	r12
     522:	ef 92       	push	r14
     524:	0f 93       	push	r16
     526:	1f 93       	push	r17
     528:	cf 93       	push	r28
     52a:	df 93       	push	r29
     52c:	cd b7       	in	r28, 0x3d	; 61
     52e:	de b7       	in	r29, 0x3e	; 62
     530:	c9 50       	subi	r28, 0x09	; 9
     532:	d1 40       	sbci	r29, 0x01	; 1
     534:	0f b6       	in	r0, 0x3f	; 63
     536:	f8 94       	cli
     538:	de bf       	out	0x3e, r29	; 62
     53a:	0f be       	out	0x3f, r0	; 63
     53c:	cd bf       	out	0x3d, r28	; 61
	start_up_routine();
     53e:	0e 94 74 02 	call	0x4e8	; 0x4e8 <start_up_routine>
	unsigned char taster;
	unsigned char direction;
	int recieved_X; 
	int recieved_Y;
	int Z=-20;
     542:	8c ee       	ldi	r24, 0xEC	; 236
     544:	9f ef       	ldi	r25, 0xFF	; 255
     546:	99 87       	std	Y+9, r25	; 0x09
     548:	88 87       	std	Y+8, r24	; 0x08
	unsigned char buffer [30];
	unsigned char check=0;
     54a:	1d 82       	std	Y+5, r1	; 0x05
	unsigned char counter=0;
     54c:	1e 82       	std	Y+6, r1	; 0x06
	unsigned char routine_done=0;
     54e:	1f 82       	std	Y+7, r1	; 0x07
	unsigned int sound[14]={262,277,294,311,330,349,370,392,415,440,466,494,523,0};
     550:	ce 01       	movw	r24, r28
     552:	88 55       	subi	r24, 0x58	; 88
     554:	9f 4f       	sbci	r25, 0xFF	; 255
     556:	2c e1       	ldi	r18, 0x1C	; 28
     558:	e3 ee       	ldi	r30, 0xE3	; 227
     55a:	f1 e0       	ldi	r31, 0x01	; 1
     55c:	dc 01       	movw	r26, r24
     55e:	01 90       	ld	r0, Z+
     560:	0d 92       	st	X+, r0
     562:	2a 95       	dec	r18
     564:	e1 f7       	brne	.-8      	; 0x55e <main+0x3e>
	unsigned char music[50]={0,0,2,2,0,0,5,5,4,4,4,4,0,0,2,2,0,0,7,7,5,5,5,5,0,0,12,12,9,9,5,5,4,4,2,2,10,10,9,9,5,5,7,7,5,5,5,5,5,5};
     566:	ce 01       	movw	r24, r28
     568:	8c 53       	subi	r24, 0x3C	; 60
     56a:	9f 4f       	sbci	r25, 0xFF	; 255
     56c:	22 e3       	ldi	r18, 0x32	; 50
     56e:	ef ef       	ldi	r30, 0xFF	; 255
     570:	f1 e0       	ldi	r31, 0x01	; 1
     572:	dc 01       	movw	r26, r24
     574:	01 90       	ld	r0, Z+
     576:	0d 92       	st	X+, r0
     578:	2a 95       	dec	r18
     57a:	e1 f7       	brne	.-8      	; 0x574 <main+0x54>
	unsigned char sound_buffer[20];
	unsigned int tone;
	unsigned char start=0;
     57c:	1a 86       	std	Y+10, r1	; 0x0a
	clear_lcd();
     57e:	0e 94 85 0d 	call	0x1b0a	; 0x1b0a <clear_lcd>
	
	to_uARM("M2210 F500 T20\n");
     582:	8e e5       	ldi	r24, 0x5E	; 94
     584:	91 e0       	ldi	r25, 0x01	; 1
     586:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     58a:	80 e0       	ldi	r24, 0x00	; 0
     58c:	90 e0       	ldi	r25, 0x00	; 0
     58e:	a8 ec       	ldi	r26, 0xC8	; 200
     590:	b2 e4       	ldi	r27, 0x42	; 66
     592:	8c a7       	std	Y+44, r24	; 0x2c
     594:	9d a7       	std	Y+45, r25	; 0x2d
     596:	ae a7       	std	Y+46, r26	; 0x2e
     598:	bf a7       	std	Y+47, r27	; 0x2f

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     59a:	20 e0       	ldi	r18, 0x00	; 0
     59c:	30 e0       	ldi	r19, 0x00	; 0
     59e:	4a e7       	ldi	r20, 0x7A	; 122
     5a0:	55 e4       	ldi	r21, 0x45	; 69
     5a2:	6c a5       	ldd	r22, Y+44	; 0x2c
     5a4:	7d a5       	ldd	r23, Y+45	; 0x2d
     5a6:	8e a5       	ldd	r24, Y+46	; 0x2e
     5a8:	9f a5       	ldd	r25, Y+47	; 0x2f
     5aa:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
     5ae:	dc 01       	movw	r26, r24
     5b0:	cb 01       	movw	r24, r22
     5b2:	88 ab       	std	Y+48, r24	; 0x30
     5b4:	99 ab       	std	Y+49, r25	; 0x31
     5b6:	aa ab       	std	Y+50, r26	; 0x32
     5b8:	bb ab       	std	Y+51, r27	; 0x33
	if (__tmp < 1.0)
     5ba:	20 e0       	ldi	r18, 0x00	; 0
     5bc:	30 e0       	ldi	r19, 0x00	; 0
     5be:	40 e8       	ldi	r20, 0x80	; 128
     5c0:	5f e3       	ldi	r21, 0x3F	; 63
     5c2:	68 a9       	ldd	r22, Y+48	; 0x30
     5c4:	79 a9       	ldd	r23, Y+49	; 0x31
     5c6:	8a a9       	ldd	r24, Y+50	; 0x32
     5c8:	9b a9       	ldd	r25, Y+51	; 0x33
     5ca:	0e 94 06 0e 	call	0x1c0c	; 0x1c0c <__cmpsf2>
     5ce:	88 23       	and	r24, r24
     5d0:	2c f4       	brge	.+10     	; 0x5dc <main+0xbc>
		__ticks = 1;
     5d2:	81 e0       	ldi	r24, 0x01	; 1
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	9d ab       	std	Y+53, r25	; 0x35
     5d8:	8c ab       	std	Y+52, r24	; 0x34
     5da:	3f c0       	rjmp	.+126    	; 0x65a <main+0x13a>
	else if (__tmp > 65535)
     5dc:	20 e0       	ldi	r18, 0x00	; 0
     5de:	3f ef       	ldi	r19, 0xFF	; 255
     5e0:	4f e7       	ldi	r20, 0x7F	; 127
     5e2:	57 e4       	ldi	r21, 0x47	; 71
     5e4:	68 a9       	ldd	r22, Y+48	; 0x30
     5e6:	79 a9       	ldd	r23, Y+49	; 0x31
     5e8:	8a a9       	ldd	r24, Y+50	; 0x32
     5ea:	9b a9       	ldd	r25, Y+51	; 0x33
     5ec:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <__gesf2>
     5f0:	18 16       	cp	r1, r24
     5f2:	4c f5       	brge	.+82     	; 0x646 <main+0x126>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5f4:	20 e0       	ldi	r18, 0x00	; 0
     5f6:	30 e0       	ldi	r19, 0x00	; 0
     5f8:	40 e2       	ldi	r20, 0x20	; 32
     5fa:	51 e4       	ldi	r21, 0x41	; 65
     5fc:	6c a5       	ldd	r22, Y+44	; 0x2c
     5fe:	7d a5       	ldd	r23, Y+45	; 0x2d
     600:	8e a5       	ldd	r24, Y+46	; 0x2e
     602:	9f a5       	ldd	r25, Y+47	; 0x2f
     604:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
     608:	dc 01       	movw	r26, r24
     60a:	cb 01       	movw	r24, r22
     60c:	bc 01       	movw	r22, r24
     60e:	cd 01       	movw	r24, r26
     610:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <__fixunssfsi>
     614:	dc 01       	movw	r26, r24
     616:	cb 01       	movw	r24, r22
     618:	9d ab       	std	Y+53, r25	; 0x35
     61a:	8c ab       	std	Y+52, r24	; 0x34
     61c:	0f c0       	rjmp	.+30     	; 0x63c <main+0x11c>
     61e:	80 e9       	ldi	r24, 0x90	; 144
     620:	91 e0       	ldi	r25, 0x01	; 1
     622:	9f ab       	std	Y+55, r25	; 0x37
     624:	8e ab       	std	Y+54, r24	; 0x36
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     626:	8e a9       	ldd	r24, Y+54	; 0x36
     628:	9f a9       	ldd	r25, Y+55	; 0x37
     62a:	01 97       	sbiw	r24, 0x01	; 1
     62c:	f1 f7       	brne	.-4      	; 0x62a <main+0x10a>
     62e:	9f ab       	std	Y+55, r25	; 0x37
     630:	8e ab       	std	Y+54, r24	; 0x36
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     632:	8c a9       	ldd	r24, Y+52	; 0x34
     634:	9d a9       	ldd	r25, Y+53	; 0x35
     636:	01 97       	sbiw	r24, 0x01	; 1
     638:	9d ab       	std	Y+53, r25	; 0x35
     63a:	8c ab       	std	Y+52, r24	; 0x34
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     63c:	8c a9       	ldd	r24, Y+52	; 0x34
     63e:	9d a9       	ldd	r25, Y+53	; 0x35
     640:	89 2b       	or	r24, r25
     642:	69 f7       	brne	.-38     	; 0x61e <main+0xfe>
     644:	14 c0       	rjmp	.+40     	; 0x66e <main+0x14e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     646:	68 a9       	ldd	r22, Y+48	; 0x30
     648:	79 a9       	ldd	r23, Y+49	; 0x31
     64a:	8a a9       	ldd	r24, Y+50	; 0x32
     64c:	9b a9       	ldd	r25, Y+51	; 0x33
     64e:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <__fixunssfsi>
     652:	dc 01       	movw	r26, r24
     654:	cb 01       	movw	r24, r22
     656:	9d ab       	std	Y+53, r25	; 0x35
     658:	8c ab       	std	Y+52, r24	; 0x34
     65a:	8c a9       	ldd	r24, Y+52	; 0x34
     65c:	9d a9       	ldd	r25, Y+53	; 0x35
     65e:	99 af       	std	Y+57, r25	; 0x39
     660:	88 af       	std	Y+56, r24	; 0x38
     662:	88 ad       	ldd	r24, Y+56	; 0x38
     664:	99 ad       	ldd	r25, Y+57	; 0x39
     666:	01 97       	sbiw	r24, 0x01	; 1
     668:	f1 f7       	brne	.-4      	; 0x666 <main+0x146>
     66a:	99 af       	std	Y+57, r25	; 0x39
     66c:	88 af       	std	Y+56, r24	; 0x38
	
	_delay_ms(100);
	send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
     66e:	8e e6       	ldi	r24, 0x6E	; 110
     670:	91 e0       	ldi	r25, 0x01	; 1
     672:	0e 94 ad 01 	call	0x35a	; 0x35a <send_to_uArm>
	while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     676:	04 c0       	rjmp	.+8      	; 0x680 <main+0x160>
	{
		to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
     678:	80 e0       	ldi	r24, 0x00	; 0
     67a:	91 e0       	ldi	r25, 0x01	; 1
     67c:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
	
	to_uARM("M2210 F500 T20\n");
	
	_delay_ms(100);
	send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
	while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     680:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <uart_string1+0x4>
     684:	81 33       	cpi	r24, 0x31	; 49
     686:	c1 f3       	breq	.-16     	; 0x678 <main+0x158>
	{
		to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
	}
	to_uARM("M2210 F500 T200\n");
     688:	85 e8       	ldi	r24, 0x85	; 133
     68a:	91 e0       	ldi	r25, 0x01	; 1
     68c:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     690:	80 e0       	ldi	r24, 0x00	; 0
     692:	90 e0       	ldi	r25, 0x00	; 0
     694:	a8 e4       	ldi	r26, 0x48	; 72
     696:	b3 e4       	ldi	r27, 0x43	; 67
     698:	8b 8b       	std	Y+19, r24	; 0x13
     69a:	9c 8b       	std	Y+20, r25	; 0x14
     69c:	ad 8b       	std	Y+21, r26	; 0x15
     69e:	be 8b       	std	Y+22, r27	; 0x16

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     6a0:	8e 01       	movw	r16, r28
     6a2:	0c 5b       	subi	r16, 0xBC	; 188
     6a4:	1f 4f       	sbci	r17, 0xFF	; 255
     6a6:	20 e0       	ldi	r18, 0x00	; 0
     6a8:	30 e0       	ldi	r19, 0x00	; 0
     6aa:	4a e7       	ldi	r20, 0x7A	; 122
     6ac:	55 e4       	ldi	r21, 0x45	; 69
     6ae:	6b 89       	ldd	r22, Y+19	; 0x13
     6b0:	7c 89       	ldd	r23, Y+20	; 0x14
     6b2:	8d 89       	ldd	r24, Y+21	; 0x15
     6b4:	9e 89       	ldd	r25, Y+22	; 0x16
     6b6:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
     6ba:	dc 01       	movw	r26, r24
     6bc:	cb 01       	movw	r24, r22
     6be:	f8 01       	movw	r30, r16
     6c0:	80 83       	st	Z, r24
     6c2:	91 83       	std	Z+1, r25	; 0x01
     6c4:	a2 83       	std	Z+2, r26	; 0x02
     6c6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     6c8:	ce 01       	movw	r24, r28
     6ca:	8c 5b       	subi	r24, 0xBC	; 188
     6cc:	9f 4f       	sbci	r25, 0xFF	; 255
     6ce:	20 e0       	ldi	r18, 0x00	; 0
     6d0:	30 e0       	ldi	r19, 0x00	; 0
     6d2:	40 e8       	ldi	r20, 0x80	; 128
     6d4:	5f e3       	ldi	r21, 0x3F	; 63
     6d6:	fc 01       	movw	r30, r24
     6d8:	60 81       	ld	r22, Z
     6da:	71 81       	ldd	r23, Z+1	; 0x01
     6dc:	82 81       	ldd	r24, Z+2	; 0x02
     6de:	93 81       	ldd	r25, Z+3	; 0x03
     6e0:	0e 94 06 0e 	call	0x1c0c	; 0x1c0c <__cmpsf2>
     6e4:	88 23       	and	r24, r24
     6e6:	4c f4       	brge	.+18     	; 0x6fa <main+0x1da>
		__ticks = 1;
     6e8:	ce 01       	movw	r24, r28
     6ea:	88 5b       	subi	r24, 0xB8	; 184
     6ec:	9f 4f       	sbci	r25, 0xFF	; 255
     6ee:	21 e0       	ldi	r18, 0x01	; 1
     6f0:	30 e0       	ldi	r19, 0x00	; 0
     6f2:	fc 01       	movw	r30, r24
     6f4:	31 83       	std	Z+1, r19	; 0x01
     6f6:	20 83       	st	Z, r18
     6f8:	69 c0       	rjmp	.+210    	; 0x7cc <main+0x2ac>
	else if (__tmp > 65535)
     6fa:	ce 01       	movw	r24, r28
     6fc:	8c 5b       	subi	r24, 0xBC	; 188
     6fe:	9f 4f       	sbci	r25, 0xFF	; 255
     700:	20 e0       	ldi	r18, 0x00	; 0
     702:	3f ef       	ldi	r19, 0xFF	; 255
     704:	4f e7       	ldi	r20, 0x7F	; 127
     706:	57 e4       	ldi	r21, 0x47	; 71
     708:	fc 01       	movw	r30, r24
     70a:	60 81       	ld	r22, Z
     70c:	71 81       	ldd	r23, Z+1	; 0x01
     70e:	82 81       	ldd	r24, Z+2	; 0x02
     710:	93 81       	ldd	r25, Z+3	; 0x03
     712:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <__gesf2>
     716:	18 16       	cp	r1, r24
     718:	0c f0       	brlt	.+2      	; 0x71c <main+0x1fc>
     71a:	46 c0       	rjmp	.+140    	; 0x7a8 <main+0x288>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     71c:	20 e0       	ldi	r18, 0x00	; 0
     71e:	30 e0       	ldi	r19, 0x00	; 0
     720:	40 e2       	ldi	r20, 0x20	; 32
     722:	51 e4       	ldi	r21, 0x41	; 65
     724:	6b 89       	ldd	r22, Y+19	; 0x13
     726:	7c 89       	ldd	r23, Y+20	; 0x14
     728:	8d 89       	ldd	r24, Y+21	; 0x15
     72a:	9e 89       	ldd	r25, Y+22	; 0x16
     72c:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
     730:	dc 01       	movw	r26, r24
     732:	cb 01       	movw	r24, r22
     734:	8e 01       	movw	r16, r28
     736:	08 5b       	subi	r16, 0xB8	; 184
     738:	1f 4f       	sbci	r17, 0xFF	; 255
     73a:	bc 01       	movw	r22, r24
     73c:	cd 01       	movw	r24, r26
     73e:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <__fixunssfsi>
     742:	dc 01       	movw	r26, r24
     744:	cb 01       	movw	r24, r22
     746:	f8 01       	movw	r30, r16
     748:	91 83       	std	Z+1, r25	; 0x01
     74a:	80 83       	st	Z, r24
     74c:	24 c0       	rjmp	.+72     	; 0x796 <main+0x276>
     74e:	ce 01       	movw	r24, r28
     750:	86 5b       	subi	r24, 0xB6	; 182
     752:	9f 4f       	sbci	r25, 0xFF	; 255
     754:	20 e9       	ldi	r18, 0x90	; 144
     756:	31 e0       	ldi	r19, 0x01	; 1
     758:	fc 01       	movw	r30, r24
     75a:	31 83       	std	Z+1, r19	; 0x01
     75c:	20 83       	st	Z, r18
     75e:	ce 01       	movw	r24, r28
     760:	86 5b       	subi	r24, 0xB6	; 182
     762:	9f 4f       	sbci	r25, 0xFF	; 255
     764:	fc 01       	movw	r30, r24
     766:	80 81       	ld	r24, Z
     768:	91 81       	ldd	r25, Z+1	; 0x01
     76a:	01 97       	sbiw	r24, 0x01	; 1
     76c:	f1 f7       	brne	.-4      	; 0x76a <main+0x24a>
     76e:	9e 01       	movw	r18, r28
     770:	26 5b       	subi	r18, 0xB6	; 182
     772:	3f 4f       	sbci	r19, 0xFF	; 255
     774:	f9 01       	movw	r30, r18
     776:	91 83       	std	Z+1, r25	; 0x01
     778:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     77a:	ce 01       	movw	r24, r28
     77c:	88 5b       	subi	r24, 0xB8	; 184
     77e:	9f 4f       	sbci	r25, 0xFF	; 255
     780:	9e 01       	movw	r18, r28
     782:	28 5b       	subi	r18, 0xB8	; 184
     784:	3f 4f       	sbci	r19, 0xFF	; 255
     786:	f9 01       	movw	r30, r18
     788:	20 81       	ld	r18, Z
     78a:	31 81       	ldd	r19, Z+1	; 0x01
     78c:	21 50       	subi	r18, 0x01	; 1
     78e:	31 09       	sbc	r19, r1
     790:	fc 01       	movw	r30, r24
     792:	31 83       	std	Z+1, r19	; 0x01
     794:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     796:	ce 01       	movw	r24, r28
     798:	88 5b       	subi	r24, 0xB8	; 184
     79a:	9f 4f       	sbci	r25, 0xFF	; 255
     79c:	fc 01       	movw	r30, r24
     79e:	80 81       	ld	r24, Z
     7a0:	91 81       	ldd	r25, Z+1	; 0x01
     7a2:	89 2b       	or	r24, r25
     7a4:	a1 f6       	brne	.-88     	; 0x74e <main+0x22e>
     7a6:	2c c0       	rjmp	.+88     	; 0x800 <main+0x2e0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7a8:	8e 01       	movw	r16, r28
     7aa:	08 5b       	subi	r16, 0xB8	; 184
     7ac:	1f 4f       	sbci	r17, 0xFF	; 255
     7ae:	ce 01       	movw	r24, r28
     7b0:	8c 5b       	subi	r24, 0xBC	; 188
     7b2:	9f 4f       	sbci	r25, 0xFF	; 255
     7b4:	fc 01       	movw	r30, r24
     7b6:	60 81       	ld	r22, Z
     7b8:	71 81       	ldd	r23, Z+1	; 0x01
     7ba:	82 81       	ldd	r24, Z+2	; 0x02
     7bc:	93 81       	ldd	r25, Z+3	; 0x03
     7be:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <__fixunssfsi>
     7c2:	dc 01       	movw	r26, r24
     7c4:	cb 01       	movw	r24, r22
     7c6:	f8 01       	movw	r30, r16
     7c8:	91 83       	std	Z+1, r25	; 0x01
     7ca:	80 83       	st	Z, r24
     7cc:	ce 01       	movw	r24, r28
     7ce:	84 5b       	subi	r24, 0xB4	; 180
     7d0:	9f 4f       	sbci	r25, 0xFF	; 255
     7d2:	9e 01       	movw	r18, r28
     7d4:	28 5b       	subi	r18, 0xB8	; 184
     7d6:	3f 4f       	sbci	r19, 0xFF	; 255
     7d8:	f9 01       	movw	r30, r18
     7da:	20 81       	ld	r18, Z
     7dc:	31 81       	ldd	r19, Z+1	; 0x01
     7de:	fc 01       	movw	r30, r24
     7e0:	31 83       	std	Z+1, r19	; 0x01
     7e2:	20 83       	st	Z, r18
     7e4:	ce 01       	movw	r24, r28
     7e6:	84 5b       	subi	r24, 0xB4	; 180
     7e8:	9f 4f       	sbci	r25, 0xFF	; 255
     7ea:	fc 01       	movw	r30, r24
     7ec:	80 81       	ld	r24, Z
     7ee:	91 81       	ldd	r25, Z+1	; 0x01
     7f0:	01 97       	sbiw	r24, 0x01	; 1
     7f2:	f1 f7       	brne	.-4      	; 0x7f0 <main+0x2d0>
     7f4:	9e 01       	movw	r18, r28
     7f6:	24 5b       	subi	r18, 0xB4	; 180
     7f8:	3f 4f       	sbci	r19, 0xFF	; 255
     7fa:	f9 01       	movw	r30, r18
     7fc:	91 83       	std	Z+1, r25	; 0x01
     7fe:	80 83       	st	Z, r24
	_delay_ms(200);
	to_uARM("M2210 F1000 T500\n");
     800:	86 e9       	ldi	r24, 0x96	; 150
     802:	91 e0       	ldi	r25, 0x01	; 1
     804:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     808:	80 e0       	ldi	r24, 0x00	; 0
     80a:	90 e0       	ldi	r25, 0x00	; 0
     80c:	aa ef       	ldi	r26, 0xFA	; 250
     80e:	b3 e4       	ldi	r27, 0x43	; 67
     810:	8b 87       	std	Y+11, r24	; 0x0b
     812:	9c 87       	std	Y+12, r25	; 0x0c
     814:	ad 87       	std	Y+13, r26	; 0x0d
     816:	be 87       	std	Y+14, r27	; 0x0e

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     818:	20 e0       	ldi	r18, 0x00	; 0
     81a:	30 e0       	ldi	r19, 0x00	; 0
     81c:	4a e7       	ldi	r20, 0x7A	; 122
     81e:	55 e4       	ldi	r21, 0x45	; 69
     820:	6b 85       	ldd	r22, Y+11	; 0x0b
     822:	7c 85       	ldd	r23, Y+12	; 0x0c
     824:	8d 85       	ldd	r24, Y+13	; 0x0d
     826:	9e 85       	ldd	r25, Y+14	; 0x0e
     828:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
     82c:	dc 01       	movw	r26, r24
     82e:	cb 01       	movw	r24, r22
     830:	8a af       	std	Y+58, r24	; 0x3a
     832:	9b af       	std	Y+59, r25	; 0x3b
     834:	ac af       	std	Y+60, r26	; 0x3c
     836:	bd af       	std	Y+61, r27	; 0x3d
	if (__tmp < 1.0)
     838:	20 e0       	ldi	r18, 0x00	; 0
     83a:	30 e0       	ldi	r19, 0x00	; 0
     83c:	40 e8       	ldi	r20, 0x80	; 128
     83e:	5f e3       	ldi	r21, 0x3F	; 63
     840:	6a ad       	ldd	r22, Y+58	; 0x3a
     842:	7b ad       	ldd	r23, Y+59	; 0x3b
     844:	8c ad       	ldd	r24, Y+60	; 0x3c
     846:	9d ad       	ldd	r25, Y+61	; 0x3d
     848:	0e 94 06 0e 	call	0x1c0c	; 0x1c0c <__cmpsf2>
     84c:	88 23       	and	r24, r24
     84e:	2c f4       	brge	.+10     	; 0x85a <main+0x33a>
		__ticks = 1;
     850:	81 e0       	ldi	r24, 0x01	; 1
     852:	90 e0       	ldi	r25, 0x00	; 0
     854:	9f af       	std	Y+63, r25	; 0x3f
     856:	8e af       	std	Y+62, r24	; 0x3e
     858:	4b c0       	rjmp	.+150    	; 0x8f0 <main+0x3d0>
	else if (__tmp > 65535)
     85a:	20 e0       	ldi	r18, 0x00	; 0
     85c:	3f ef       	ldi	r19, 0xFF	; 255
     85e:	4f e7       	ldi	r20, 0x7F	; 127
     860:	57 e4       	ldi	r21, 0x47	; 71
     862:	6a ad       	ldd	r22, Y+58	; 0x3a
     864:	7b ad       	ldd	r23, Y+59	; 0x3b
     866:	8c ad       	ldd	r24, Y+60	; 0x3c
     868:	9d ad       	ldd	r25, Y+61	; 0x3d
     86a:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <__gesf2>
     86e:	18 16       	cp	r1, r24
     870:	ac f5       	brge	.+106    	; 0x8dc <main+0x3bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     872:	20 e0       	ldi	r18, 0x00	; 0
     874:	30 e0       	ldi	r19, 0x00	; 0
     876:	40 e2       	ldi	r20, 0x20	; 32
     878:	51 e4       	ldi	r21, 0x41	; 65
     87a:	6b 85       	ldd	r22, Y+11	; 0x0b
     87c:	7c 85       	ldd	r23, Y+12	; 0x0c
     87e:	8d 85       	ldd	r24, Y+13	; 0x0d
     880:	9e 85       	ldd	r25, Y+14	; 0x0e
     882:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
     886:	dc 01       	movw	r26, r24
     888:	cb 01       	movw	r24, r22
     88a:	bc 01       	movw	r22, r24
     88c:	cd 01       	movw	r24, r26
     88e:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <__fixunssfsi>
     892:	dc 01       	movw	r26, r24
     894:	cb 01       	movw	r24, r22
     896:	9f af       	std	Y+63, r25	; 0x3f
     898:	8e af       	std	Y+62, r24	; 0x3e
     89a:	1b c0       	rjmp	.+54     	; 0x8d2 <main+0x3b2>
     89c:	ce 01       	movw	r24, r28
     89e:	80 5c       	subi	r24, 0xC0	; 192
     8a0:	9f 4f       	sbci	r25, 0xFF	; 255
     8a2:	20 e9       	ldi	r18, 0x90	; 144
     8a4:	31 e0       	ldi	r19, 0x01	; 1
     8a6:	fc 01       	movw	r30, r24
     8a8:	31 83       	std	Z+1, r19	; 0x01
     8aa:	20 83       	st	Z, r18
     8ac:	ce 01       	movw	r24, r28
     8ae:	80 5c       	subi	r24, 0xC0	; 192
     8b0:	9f 4f       	sbci	r25, 0xFF	; 255
     8b2:	fc 01       	movw	r30, r24
     8b4:	80 81       	ld	r24, Z
     8b6:	91 81       	ldd	r25, Z+1	; 0x01
     8b8:	01 97       	sbiw	r24, 0x01	; 1
     8ba:	f1 f7       	brne	.-4      	; 0x8b8 <main+0x398>
     8bc:	9e 01       	movw	r18, r28
     8be:	20 5c       	subi	r18, 0xC0	; 192
     8c0:	3f 4f       	sbci	r19, 0xFF	; 255
     8c2:	f9 01       	movw	r30, r18
     8c4:	91 83       	std	Z+1, r25	; 0x01
     8c6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8c8:	8e ad       	ldd	r24, Y+62	; 0x3e
     8ca:	9f ad       	ldd	r25, Y+63	; 0x3f
     8cc:	01 97       	sbiw	r24, 0x01	; 1
     8ce:	9f af       	std	Y+63, r25	; 0x3f
     8d0:	8e af       	std	Y+62, r24	; 0x3e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8d2:	8e ad       	ldd	r24, Y+62	; 0x3e
     8d4:	9f ad       	ldd	r25, Y+63	; 0x3f
     8d6:	89 2b       	or	r24, r25
     8d8:	09 f7       	brne	.-62     	; 0x89c <main+0x37c>
     8da:	20 c0       	rjmp	.+64     	; 0x91c <main+0x3fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     8dc:	6a ad       	ldd	r22, Y+58	; 0x3a
     8de:	7b ad       	ldd	r23, Y+59	; 0x3b
     8e0:	8c ad       	ldd	r24, Y+60	; 0x3c
     8e2:	9d ad       	ldd	r25, Y+61	; 0x3d
     8e4:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <__fixunssfsi>
     8e8:	dc 01       	movw	r26, r24
     8ea:	cb 01       	movw	r24, r22
     8ec:	9f af       	std	Y+63, r25	; 0x3f
     8ee:	8e af       	std	Y+62, r24	; 0x3e
     8f0:	ce 01       	movw	r24, r28
     8f2:	8e 5b       	subi	r24, 0xBE	; 190
     8f4:	9f 4f       	sbci	r25, 0xFF	; 255
     8f6:	2e ad       	ldd	r18, Y+62	; 0x3e
     8f8:	3f ad       	ldd	r19, Y+63	; 0x3f
     8fa:	fc 01       	movw	r30, r24
     8fc:	31 83       	std	Z+1, r19	; 0x01
     8fe:	20 83       	st	Z, r18
     900:	ce 01       	movw	r24, r28
     902:	8e 5b       	subi	r24, 0xBE	; 190
     904:	9f 4f       	sbci	r25, 0xFF	; 255
     906:	fc 01       	movw	r30, r24
     908:	80 81       	ld	r24, Z
     90a:	91 81       	ldd	r25, Z+1	; 0x01
     90c:	01 97       	sbiw	r24, 0x01	; 1
     90e:	f1 f7       	brne	.-4      	; 0x90c <main+0x3ec>
     910:	9e 01       	movw	r18, r28
     912:	2e 5b       	subi	r18, 0xBE	; 190
     914:	3f 4f       	sbci	r19, 0xFF	; 255
     916:	f9 01       	movw	r30, r18
     918:	91 83       	std	Z+1, r25	; 0x01
     91a:	80 83       	st	Z, r24
	_delay_ms(500);
	to_uARM("M2210 F2000 T500\n");
     91c:	88 ea       	ldi	r24, 0xA8	; 168
     91e:	91 e0       	ldi	r25, 0x01	; 1
     920:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
	while(1)
	{
	//	direction=get_direction();
		taster = get_LCD_Taster();
     924:	0e 94 bf 00 	call	0x17e	; 0x17e <get_LCD_Taster>
     928:	8f 8b       	std	Y+23, r24	; 0x17
		DIP_Switch=get_DIP_Switch();
     92a:	0e 94 5d 00 	call	0xba	; 0xba <get_DIP_Switch>
     92e:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <__data_end>
				//}
			//}
		//}
		
		
		if (taster&0x08)
     932:	8f 89       	ldd	r24, Y+23	; 0x17
     934:	88 2f       	mov	r24, r24
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	88 70       	andi	r24, 0x08	; 8
     93a:	99 27       	eor	r25, r25
     93c:	89 2b       	or	r24, r25
     93e:	09 f4       	brne	.+2      	; 0x942 <main+0x422>
     940:	92 c1       	rjmp	.+804    	; 0xc66 <main+0x746>
		{
			send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
     942:	8e e6       	ldi	r24, 0x6E	; 110
     944:	91 e0       	ldi	r25, 0x01	; 1
     946:	0e 94 ad 01 	call	0x35a	; 0x35a <send_to_uArm>
			while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     94a:	04 c0       	rjmp	.+8      	; 0x954 <main+0x434>
			{
				to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
     94c:	80 e0       	ldi	r24, 0x00	; 0
     94e:	91 e0       	ldi	r25, 0x01	; 1
     950:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
		
		
		if (taster&0x08)
		{
			send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
			while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     954:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <uart_string1+0x4>
     958:	81 33       	cpi	r24, 0x31	; 49
     95a:	c1 f3       	breq	.-16     	; 0x94c <main+0x42c>
			{
				to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
			}
			//to_uARM("M2210 F2000 T200\n");
			if (DIP_Switch&0x01)
     95c:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <__data_end>
     960:	88 2f       	mov	r24, r24
     962:	90 e0       	ldi	r25, 0x00	; 0
     964:	81 70       	andi	r24, 0x01	; 1
     966:	99 27       	eor	r25, r25
     968:	89 2b       	or	r24, r25
     96a:	09 f4       	brne	.+2      	; 0x96e <main+0x44e>
     96c:	7c c1       	rjmp	.+760    	; 0xc66 <main+0x746>
			{
				to_uARM("M2210 F500 T200\n");
     96e:	85 e8       	ldi	r24, 0x85	; 133
     970:	91 e0       	ldi	r25, 0x01	; 1
     972:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     976:	80 e0       	ldi	r24, 0x00	; 0
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	a8 e4       	ldi	r26, 0x48	; 72
     97c:	b3 e4       	ldi	r27, 0x43	; 67
     97e:	88 a7       	std	Y+40, r24	; 0x28
     980:	99 a7       	std	Y+41, r25	; 0x29
     982:	aa a7       	std	Y+42, r26	; 0x2a
     984:	bb a7       	std	Y+43, r27	; 0x2b

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     986:	8e 01       	movw	r16, r28
     988:	08 5a       	subi	r16, 0xA8	; 168
     98a:	1f 4f       	sbci	r17, 0xFF	; 255
     98c:	20 e0       	ldi	r18, 0x00	; 0
     98e:	30 e0       	ldi	r19, 0x00	; 0
     990:	4a e7       	ldi	r20, 0x7A	; 122
     992:	55 e4       	ldi	r21, 0x45	; 69
     994:	68 a5       	ldd	r22, Y+40	; 0x28
     996:	79 a5       	ldd	r23, Y+41	; 0x29
     998:	8a a5       	ldd	r24, Y+42	; 0x2a
     99a:	9b a5       	ldd	r25, Y+43	; 0x2b
     99c:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
     9a0:	dc 01       	movw	r26, r24
     9a2:	cb 01       	movw	r24, r22
     9a4:	f8 01       	movw	r30, r16
     9a6:	80 83       	st	Z, r24
     9a8:	91 83       	std	Z+1, r25	; 0x01
     9aa:	a2 83       	std	Z+2, r26	; 0x02
     9ac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     9ae:	ce 01       	movw	r24, r28
     9b0:	88 5a       	subi	r24, 0xA8	; 168
     9b2:	9f 4f       	sbci	r25, 0xFF	; 255
     9b4:	20 e0       	ldi	r18, 0x00	; 0
     9b6:	30 e0       	ldi	r19, 0x00	; 0
     9b8:	40 e8       	ldi	r20, 0x80	; 128
     9ba:	5f e3       	ldi	r21, 0x3F	; 63
     9bc:	fc 01       	movw	r30, r24
     9be:	60 81       	ld	r22, Z
     9c0:	71 81       	ldd	r23, Z+1	; 0x01
     9c2:	82 81       	ldd	r24, Z+2	; 0x02
     9c4:	93 81       	ldd	r25, Z+3	; 0x03
     9c6:	0e 94 06 0e 	call	0x1c0c	; 0x1c0c <__cmpsf2>
     9ca:	88 23       	and	r24, r24
     9cc:	4c f4       	brge	.+18     	; 0x9e0 <main+0x4c0>
		__ticks = 1;
     9ce:	ce 01       	movw	r24, r28
     9d0:	84 5a       	subi	r24, 0xA4	; 164
     9d2:	9f 4f       	sbci	r25, 0xFF	; 255
     9d4:	21 e0       	ldi	r18, 0x01	; 1
     9d6:	30 e0       	ldi	r19, 0x00	; 0
     9d8:	fc 01       	movw	r30, r24
     9da:	31 83       	std	Z+1, r19	; 0x01
     9dc:	20 83       	st	Z, r18
     9de:	69 c0       	rjmp	.+210    	; 0xab2 <main+0x592>
	else if (__tmp > 65535)
     9e0:	ce 01       	movw	r24, r28
     9e2:	88 5a       	subi	r24, 0xA8	; 168
     9e4:	9f 4f       	sbci	r25, 0xFF	; 255
     9e6:	20 e0       	ldi	r18, 0x00	; 0
     9e8:	3f ef       	ldi	r19, 0xFF	; 255
     9ea:	4f e7       	ldi	r20, 0x7F	; 127
     9ec:	57 e4       	ldi	r21, 0x47	; 71
     9ee:	fc 01       	movw	r30, r24
     9f0:	60 81       	ld	r22, Z
     9f2:	71 81       	ldd	r23, Z+1	; 0x01
     9f4:	82 81       	ldd	r24, Z+2	; 0x02
     9f6:	93 81       	ldd	r25, Z+3	; 0x03
     9f8:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <__gesf2>
     9fc:	18 16       	cp	r1, r24
     9fe:	0c f0       	brlt	.+2      	; 0xa02 <main+0x4e2>
     a00:	46 c0       	rjmp	.+140    	; 0xa8e <main+0x56e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a02:	20 e0       	ldi	r18, 0x00	; 0
     a04:	30 e0       	ldi	r19, 0x00	; 0
     a06:	40 e2       	ldi	r20, 0x20	; 32
     a08:	51 e4       	ldi	r21, 0x41	; 65
     a0a:	68 a5       	ldd	r22, Y+40	; 0x28
     a0c:	79 a5       	ldd	r23, Y+41	; 0x29
     a0e:	8a a5       	ldd	r24, Y+42	; 0x2a
     a10:	9b a5       	ldd	r25, Y+43	; 0x2b
     a12:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
     a16:	dc 01       	movw	r26, r24
     a18:	cb 01       	movw	r24, r22
     a1a:	8e 01       	movw	r16, r28
     a1c:	04 5a       	subi	r16, 0xA4	; 164
     a1e:	1f 4f       	sbci	r17, 0xFF	; 255
     a20:	bc 01       	movw	r22, r24
     a22:	cd 01       	movw	r24, r26
     a24:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <__fixunssfsi>
     a28:	dc 01       	movw	r26, r24
     a2a:	cb 01       	movw	r24, r22
     a2c:	f8 01       	movw	r30, r16
     a2e:	91 83       	std	Z+1, r25	; 0x01
     a30:	80 83       	st	Z, r24
     a32:	24 c0       	rjmp	.+72     	; 0xa7c <main+0x55c>
     a34:	ce 01       	movw	r24, r28
     a36:	82 5a       	subi	r24, 0xA2	; 162
     a38:	9f 4f       	sbci	r25, 0xFF	; 255
     a3a:	20 e9       	ldi	r18, 0x90	; 144
     a3c:	31 e0       	ldi	r19, 0x01	; 1
     a3e:	fc 01       	movw	r30, r24
     a40:	31 83       	std	Z+1, r19	; 0x01
     a42:	20 83       	st	Z, r18
     a44:	ce 01       	movw	r24, r28
     a46:	82 5a       	subi	r24, 0xA2	; 162
     a48:	9f 4f       	sbci	r25, 0xFF	; 255
     a4a:	fc 01       	movw	r30, r24
     a4c:	80 81       	ld	r24, Z
     a4e:	91 81       	ldd	r25, Z+1	; 0x01
     a50:	01 97       	sbiw	r24, 0x01	; 1
     a52:	f1 f7       	brne	.-4      	; 0xa50 <main+0x530>
     a54:	9e 01       	movw	r18, r28
     a56:	22 5a       	subi	r18, 0xA2	; 162
     a58:	3f 4f       	sbci	r19, 0xFF	; 255
     a5a:	f9 01       	movw	r30, r18
     a5c:	91 83       	std	Z+1, r25	; 0x01
     a5e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a60:	ce 01       	movw	r24, r28
     a62:	84 5a       	subi	r24, 0xA4	; 164
     a64:	9f 4f       	sbci	r25, 0xFF	; 255
     a66:	9e 01       	movw	r18, r28
     a68:	24 5a       	subi	r18, 0xA4	; 164
     a6a:	3f 4f       	sbci	r19, 0xFF	; 255
     a6c:	f9 01       	movw	r30, r18
     a6e:	20 81       	ld	r18, Z
     a70:	31 81       	ldd	r19, Z+1	; 0x01
     a72:	21 50       	subi	r18, 0x01	; 1
     a74:	31 09       	sbc	r19, r1
     a76:	fc 01       	movw	r30, r24
     a78:	31 83       	std	Z+1, r19	; 0x01
     a7a:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a7c:	ce 01       	movw	r24, r28
     a7e:	84 5a       	subi	r24, 0xA4	; 164
     a80:	9f 4f       	sbci	r25, 0xFF	; 255
     a82:	fc 01       	movw	r30, r24
     a84:	80 81       	ld	r24, Z
     a86:	91 81       	ldd	r25, Z+1	; 0x01
     a88:	89 2b       	or	r24, r25
     a8a:	a1 f6       	brne	.-88     	; 0xa34 <main+0x514>
     a8c:	2c c0       	rjmp	.+88     	; 0xae6 <main+0x5c6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a8e:	8e 01       	movw	r16, r28
     a90:	04 5a       	subi	r16, 0xA4	; 164
     a92:	1f 4f       	sbci	r17, 0xFF	; 255
     a94:	ce 01       	movw	r24, r28
     a96:	88 5a       	subi	r24, 0xA8	; 168
     a98:	9f 4f       	sbci	r25, 0xFF	; 255
     a9a:	fc 01       	movw	r30, r24
     a9c:	60 81       	ld	r22, Z
     a9e:	71 81       	ldd	r23, Z+1	; 0x01
     aa0:	82 81       	ldd	r24, Z+2	; 0x02
     aa2:	93 81       	ldd	r25, Z+3	; 0x03
     aa4:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <__fixunssfsi>
     aa8:	dc 01       	movw	r26, r24
     aaa:	cb 01       	movw	r24, r22
     aac:	f8 01       	movw	r30, r16
     aae:	91 83       	std	Z+1, r25	; 0x01
     ab0:	80 83       	st	Z, r24
     ab2:	ce 01       	movw	r24, r28
     ab4:	80 5a       	subi	r24, 0xA0	; 160
     ab6:	9f 4f       	sbci	r25, 0xFF	; 255
     ab8:	9e 01       	movw	r18, r28
     aba:	24 5a       	subi	r18, 0xA4	; 164
     abc:	3f 4f       	sbci	r19, 0xFF	; 255
     abe:	f9 01       	movw	r30, r18
     ac0:	20 81       	ld	r18, Z
     ac2:	31 81       	ldd	r19, Z+1	; 0x01
     ac4:	fc 01       	movw	r30, r24
     ac6:	31 83       	std	Z+1, r19	; 0x01
     ac8:	20 83       	st	Z, r18
     aca:	ce 01       	movw	r24, r28
     acc:	80 5a       	subi	r24, 0xA0	; 160
     ace:	9f 4f       	sbci	r25, 0xFF	; 255
     ad0:	fc 01       	movw	r30, r24
     ad2:	80 81       	ld	r24, Z
     ad4:	91 81       	ldd	r25, Z+1	; 0x01
     ad6:	01 97       	sbiw	r24, 0x01	; 1
     ad8:	f1 f7       	brne	.-4      	; 0xad6 <main+0x5b6>
     ada:	9e 01       	movw	r18, r28
     adc:	20 5a       	subi	r18, 0xA0	; 160
     ade:	3f 4f       	sbci	r19, 0xFF	; 255
     ae0:	f9 01       	movw	r30, r18
     ae2:	91 83       	std	Z+1, r25	; 0x01
     ae4:	80 83       	st	Z, r24
				_delay_ms(200);
				to_uARM("M2210 F1000 T500\n");
     ae6:	86 e9       	ldi	r24, 0x96	; 150
     ae8:	91 e0       	ldi	r25, 0x01	; 1
     aea:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     aee:	80 e0       	ldi	r24, 0x00	; 0
     af0:	90 e0       	ldi	r25, 0x00	; 0
     af2:	aa ef       	ldi	r26, 0xFA	; 250
     af4:	b3 e4       	ldi	r27, 0x43	; 67
     af6:	8f 87       	std	Y+15, r24	; 0x0f
     af8:	98 8b       	std	Y+16, r25	; 0x10
     afa:	a9 8b       	std	Y+17, r26	; 0x11
     afc:	ba 8b       	std	Y+18, r27	; 0x12

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     afe:	8e 01       	movw	r16, r28
     b00:	02 5b       	subi	r16, 0xB2	; 178
     b02:	1f 4f       	sbci	r17, 0xFF	; 255
     b04:	20 e0       	ldi	r18, 0x00	; 0
     b06:	30 e0       	ldi	r19, 0x00	; 0
     b08:	4a e7       	ldi	r20, 0x7A	; 122
     b0a:	55 e4       	ldi	r21, 0x45	; 69
     b0c:	6f 85       	ldd	r22, Y+15	; 0x0f
     b0e:	78 89       	ldd	r23, Y+16	; 0x10
     b10:	89 89       	ldd	r24, Y+17	; 0x11
     b12:	9a 89       	ldd	r25, Y+18	; 0x12
     b14:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
     b18:	dc 01       	movw	r26, r24
     b1a:	cb 01       	movw	r24, r22
     b1c:	f8 01       	movw	r30, r16
     b1e:	80 83       	st	Z, r24
     b20:	91 83       	std	Z+1, r25	; 0x01
     b22:	a2 83       	std	Z+2, r26	; 0x02
     b24:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     b26:	ce 01       	movw	r24, r28
     b28:	82 5b       	subi	r24, 0xB2	; 178
     b2a:	9f 4f       	sbci	r25, 0xFF	; 255
     b2c:	20 e0       	ldi	r18, 0x00	; 0
     b2e:	30 e0       	ldi	r19, 0x00	; 0
     b30:	40 e8       	ldi	r20, 0x80	; 128
     b32:	5f e3       	ldi	r21, 0x3F	; 63
     b34:	fc 01       	movw	r30, r24
     b36:	60 81       	ld	r22, Z
     b38:	71 81       	ldd	r23, Z+1	; 0x01
     b3a:	82 81       	ldd	r24, Z+2	; 0x02
     b3c:	93 81       	ldd	r25, Z+3	; 0x03
     b3e:	0e 94 06 0e 	call	0x1c0c	; 0x1c0c <__cmpsf2>
     b42:	88 23       	and	r24, r24
     b44:	4c f4       	brge	.+18     	; 0xb58 <main+0x638>
		__ticks = 1;
     b46:	ce 01       	movw	r24, r28
     b48:	8e 5a       	subi	r24, 0xAE	; 174
     b4a:	9f 4f       	sbci	r25, 0xFF	; 255
     b4c:	21 e0       	ldi	r18, 0x01	; 1
     b4e:	30 e0       	ldi	r19, 0x00	; 0
     b50:	fc 01       	movw	r30, r24
     b52:	31 83       	std	Z+1, r19	; 0x01
     b54:	20 83       	st	Z, r18
     b56:	69 c0       	rjmp	.+210    	; 0xc2a <main+0x70a>
	else if (__tmp > 65535)
     b58:	ce 01       	movw	r24, r28
     b5a:	82 5b       	subi	r24, 0xB2	; 178
     b5c:	9f 4f       	sbci	r25, 0xFF	; 255
     b5e:	20 e0       	ldi	r18, 0x00	; 0
     b60:	3f ef       	ldi	r19, 0xFF	; 255
     b62:	4f e7       	ldi	r20, 0x7F	; 127
     b64:	57 e4       	ldi	r21, 0x47	; 71
     b66:	fc 01       	movw	r30, r24
     b68:	60 81       	ld	r22, Z
     b6a:	71 81       	ldd	r23, Z+1	; 0x01
     b6c:	82 81       	ldd	r24, Z+2	; 0x02
     b6e:	93 81       	ldd	r25, Z+3	; 0x03
     b70:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <__gesf2>
     b74:	18 16       	cp	r1, r24
     b76:	0c f0       	brlt	.+2      	; 0xb7a <main+0x65a>
     b78:	46 c0       	rjmp	.+140    	; 0xc06 <main+0x6e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b7a:	20 e0       	ldi	r18, 0x00	; 0
     b7c:	30 e0       	ldi	r19, 0x00	; 0
     b7e:	40 e2       	ldi	r20, 0x20	; 32
     b80:	51 e4       	ldi	r21, 0x41	; 65
     b82:	6f 85       	ldd	r22, Y+15	; 0x0f
     b84:	78 89       	ldd	r23, Y+16	; 0x10
     b86:	89 89       	ldd	r24, Y+17	; 0x11
     b88:	9a 89       	ldd	r25, Y+18	; 0x12
     b8a:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
     b8e:	dc 01       	movw	r26, r24
     b90:	cb 01       	movw	r24, r22
     b92:	8e 01       	movw	r16, r28
     b94:	0e 5a       	subi	r16, 0xAE	; 174
     b96:	1f 4f       	sbci	r17, 0xFF	; 255
     b98:	bc 01       	movw	r22, r24
     b9a:	cd 01       	movw	r24, r26
     b9c:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <__fixunssfsi>
     ba0:	dc 01       	movw	r26, r24
     ba2:	cb 01       	movw	r24, r22
     ba4:	f8 01       	movw	r30, r16
     ba6:	91 83       	std	Z+1, r25	; 0x01
     ba8:	80 83       	st	Z, r24
     baa:	24 c0       	rjmp	.+72     	; 0xbf4 <main+0x6d4>
     bac:	ce 01       	movw	r24, r28
     bae:	8c 5a       	subi	r24, 0xAC	; 172
     bb0:	9f 4f       	sbci	r25, 0xFF	; 255
     bb2:	20 e9       	ldi	r18, 0x90	; 144
     bb4:	31 e0       	ldi	r19, 0x01	; 1
     bb6:	fc 01       	movw	r30, r24
     bb8:	31 83       	std	Z+1, r19	; 0x01
     bba:	20 83       	st	Z, r18
     bbc:	ce 01       	movw	r24, r28
     bbe:	8c 5a       	subi	r24, 0xAC	; 172
     bc0:	9f 4f       	sbci	r25, 0xFF	; 255
     bc2:	fc 01       	movw	r30, r24
     bc4:	80 81       	ld	r24, Z
     bc6:	91 81       	ldd	r25, Z+1	; 0x01
     bc8:	01 97       	sbiw	r24, 0x01	; 1
     bca:	f1 f7       	brne	.-4      	; 0xbc8 <main+0x6a8>
     bcc:	9e 01       	movw	r18, r28
     bce:	2c 5a       	subi	r18, 0xAC	; 172
     bd0:	3f 4f       	sbci	r19, 0xFF	; 255
     bd2:	f9 01       	movw	r30, r18
     bd4:	91 83       	std	Z+1, r25	; 0x01
     bd6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     bd8:	ce 01       	movw	r24, r28
     bda:	8e 5a       	subi	r24, 0xAE	; 174
     bdc:	9f 4f       	sbci	r25, 0xFF	; 255
     bde:	9e 01       	movw	r18, r28
     be0:	2e 5a       	subi	r18, 0xAE	; 174
     be2:	3f 4f       	sbci	r19, 0xFF	; 255
     be4:	f9 01       	movw	r30, r18
     be6:	20 81       	ld	r18, Z
     be8:	31 81       	ldd	r19, Z+1	; 0x01
     bea:	21 50       	subi	r18, 0x01	; 1
     bec:	31 09       	sbc	r19, r1
     bee:	fc 01       	movw	r30, r24
     bf0:	31 83       	std	Z+1, r19	; 0x01
     bf2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     bf4:	ce 01       	movw	r24, r28
     bf6:	8e 5a       	subi	r24, 0xAE	; 174
     bf8:	9f 4f       	sbci	r25, 0xFF	; 255
     bfa:	fc 01       	movw	r30, r24
     bfc:	80 81       	ld	r24, Z
     bfe:	91 81       	ldd	r25, Z+1	; 0x01
     c00:	89 2b       	or	r24, r25
     c02:	a1 f6       	brne	.-88     	; 0xbac <main+0x68c>
     c04:	2c c0       	rjmp	.+88     	; 0xc5e <main+0x73e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c06:	8e 01       	movw	r16, r28
     c08:	0e 5a       	subi	r16, 0xAE	; 174
     c0a:	1f 4f       	sbci	r17, 0xFF	; 255
     c0c:	ce 01       	movw	r24, r28
     c0e:	82 5b       	subi	r24, 0xB2	; 178
     c10:	9f 4f       	sbci	r25, 0xFF	; 255
     c12:	fc 01       	movw	r30, r24
     c14:	60 81       	ld	r22, Z
     c16:	71 81       	ldd	r23, Z+1	; 0x01
     c18:	82 81       	ldd	r24, Z+2	; 0x02
     c1a:	93 81       	ldd	r25, Z+3	; 0x03
     c1c:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <__fixunssfsi>
     c20:	dc 01       	movw	r26, r24
     c22:	cb 01       	movw	r24, r22
     c24:	f8 01       	movw	r30, r16
     c26:	91 83       	std	Z+1, r25	; 0x01
     c28:	80 83       	st	Z, r24
     c2a:	ce 01       	movw	r24, r28
     c2c:	8a 5a       	subi	r24, 0xAA	; 170
     c2e:	9f 4f       	sbci	r25, 0xFF	; 255
     c30:	9e 01       	movw	r18, r28
     c32:	2e 5a       	subi	r18, 0xAE	; 174
     c34:	3f 4f       	sbci	r19, 0xFF	; 255
     c36:	f9 01       	movw	r30, r18
     c38:	20 81       	ld	r18, Z
     c3a:	31 81       	ldd	r19, Z+1	; 0x01
     c3c:	fc 01       	movw	r30, r24
     c3e:	31 83       	std	Z+1, r19	; 0x01
     c40:	20 83       	st	Z, r18
     c42:	ce 01       	movw	r24, r28
     c44:	8a 5a       	subi	r24, 0xAA	; 170
     c46:	9f 4f       	sbci	r25, 0xFF	; 255
     c48:	fc 01       	movw	r30, r24
     c4a:	80 81       	ld	r24, Z
     c4c:	91 81       	ldd	r25, Z+1	; 0x01
     c4e:	01 97       	sbiw	r24, 0x01	; 1
     c50:	f1 f7       	brne	.-4      	; 0xc4e <main+0x72e>
     c52:	9e 01       	movw	r18, r28
     c54:	2a 5a       	subi	r18, 0xAA	; 170
     c56:	3f 4f       	sbci	r19, 0xFF	; 255
     c58:	f9 01       	movw	r30, r18
     c5a:	91 83       	std	Z+1, r25	; 0x01
     c5c:	80 83       	st	Z, r24
				_delay_ms(500);
				to_uARM("M2210 F2000 T500\n");
     c5e:	88 ea       	ldi	r24, 0xA8	; 168
     c60:	91 e0       	ldi	r25, 0x01	; 1
     c62:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
			}
		}
		if (uart_str_complete!=0)
     c66:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <uart_str_complete>
     c6a:	88 23       	and	r24, r24
     c6c:	09 f4       	brne	.+2      	; 0xc70 <main+0x750>
     c6e:	5a ce       	rjmp	.-844    	; 0x924 <main+0x404>
		{
			routine_done=0;
     c70:	1f 82       	std	Y+7, r1	; 0x07
			uart_str_complete=0;
     c72:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <uart_str_complete>
			send_Byte_0('1');	
     c76:	81 e3       	ldi	r24, 0x31	; 49
     c78:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
			for (counter=0;counter<=data_bytes_recieved;counter++)
     c7c:	1e 82       	std	Y+6, r1	; 0x06
     c7e:	3b c2       	rjmp	.+1142   	; 0x10f6 <main+0xbd6>
			{
				switch (final_data[counter])//final data decoding
     c80:	8e 81       	ldd	r24, Y+6	; 0x06
     c82:	88 2f       	mov	r24, r24
     c84:	90 e0       	ldi	r25, 0x00	; 0
     c86:	8b 56       	subi	r24, 0x6B	; 107
     c88:	9d 4f       	sbci	r25, 0xFD	; 253
     c8a:	fc 01       	movw	r30, r24
     c8c:	80 81       	ld	r24, Z
     c8e:	88 2f       	mov	r24, r24
     c90:	90 e0       	ldi	r25, 0x00	; 0
     c92:	88 35       	cpi	r24, 0x58	; 88
     c94:	91 05       	cpc	r25, r1
     c96:	49 f0       	breq	.+18     	; 0xcaa <main+0x78a>
     c98:	89 35       	cpi	r24, 0x59	; 89
     c9a:	91 05       	cpc	r25, r1
     c9c:	09 f4       	brne	.+2      	; 0xca0 <main+0x780>
     c9e:	14 c1       	rjmp	.+552    	; 0xec8 <main+0x9a8>
     ca0:	8f 34       	cpi	r24, 0x4F	; 79
     ca2:	91 05       	cpc	r25, r1
     ca4:	09 f4       	brne	.+2      	; 0xca8 <main+0x788>
     ca6:	1f c2       	rjmp	.+1086   	; 0x10e6 <main+0xbc6>
     ca8:	23 c2       	rjmp	.+1094   	; 0x10f0 <main+0xbd0>
				{
					case 'X':
						recieved_Y=(final_data[counter+1]-48)*1000+(final_data[counter+2]-48)*100+(final_data[counter+3]-48)*10+final_data[counter+4]-48;
     caa:	8e 81       	ldd	r24, Y+6	; 0x06
     cac:	88 2f       	mov	r24, r24
     cae:	90 e0       	ldi	r25, 0x00	; 0
     cb0:	01 96       	adiw	r24, 0x01	; 1
     cb2:	8b 56       	subi	r24, 0x6B	; 107
     cb4:	9d 4f       	sbci	r25, 0xFD	; 253
     cb6:	fc 01       	movw	r30, r24
     cb8:	80 81       	ld	r24, Z
     cba:	88 2f       	mov	r24, r24
     cbc:	90 e0       	ldi	r25, 0x00	; 0
     cbe:	ac 01       	movw	r20, r24
     cc0:	40 53       	subi	r20, 0x30	; 48
     cc2:	51 09       	sbc	r21, r1
     cc4:	88 ee       	ldi	r24, 0xE8	; 232
     cc6:	93 e0       	ldi	r25, 0x03	; 3
     cc8:	48 9f       	mul	r20, r24
     cca:	90 01       	movw	r18, r0
     ccc:	49 9f       	mul	r20, r25
     cce:	30 0d       	add	r19, r0
     cd0:	58 9f       	mul	r21, r24
     cd2:	30 0d       	add	r19, r0
     cd4:	11 24       	eor	r1, r1
     cd6:	8e 81       	ldd	r24, Y+6	; 0x06
     cd8:	88 2f       	mov	r24, r24
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	02 96       	adiw	r24, 0x02	; 2
     cde:	8b 56       	subi	r24, 0x6B	; 107
     ce0:	9d 4f       	sbci	r25, 0xFD	; 253
     ce2:	fc 01       	movw	r30, r24
     ce4:	80 81       	ld	r24, Z
     ce6:	88 2f       	mov	r24, r24
     ce8:	90 e0       	ldi	r25, 0x00	; 0
     cea:	ac 01       	movw	r20, r24
     cec:	40 53       	subi	r20, 0x30	; 48
     cee:	51 09       	sbc	r21, r1
     cf0:	64 e6       	ldi	r22, 0x64	; 100
     cf2:	64 9f       	mul	r22, r20
     cf4:	c0 01       	movw	r24, r0
     cf6:	65 9f       	mul	r22, r21
     cf8:	90 0d       	add	r25, r0
     cfa:	11 24       	eor	r1, r1
     cfc:	28 0f       	add	r18, r24
     cfe:	39 1f       	adc	r19, r25
     d00:	8e 81       	ldd	r24, Y+6	; 0x06
     d02:	88 2f       	mov	r24, r24
     d04:	90 e0       	ldi	r25, 0x00	; 0
     d06:	03 96       	adiw	r24, 0x03	; 3
     d08:	8b 56       	subi	r24, 0x6B	; 107
     d0a:	9d 4f       	sbci	r25, 0xFD	; 253
     d0c:	fc 01       	movw	r30, r24
     d0e:	80 81       	ld	r24, Z
     d10:	88 2f       	mov	r24, r24
     d12:	90 e0       	ldi	r25, 0x00	; 0
     d14:	c0 97       	sbiw	r24, 0x30	; 48
     d16:	88 0f       	add	r24, r24
     d18:	99 1f       	adc	r25, r25
     d1a:	ac 01       	movw	r20, r24
     d1c:	44 0f       	add	r20, r20
     d1e:	55 1f       	adc	r21, r21
     d20:	44 0f       	add	r20, r20
     d22:	55 1f       	adc	r21, r21
     d24:	84 0f       	add	r24, r20
     d26:	95 1f       	adc	r25, r21
     d28:	28 0f       	add	r18, r24
     d2a:	39 1f       	adc	r19, r25
     d2c:	8e 81       	ldd	r24, Y+6	; 0x06
     d2e:	88 2f       	mov	r24, r24
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	04 96       	adiw	r24, 0x04	; 4
     d34:	8b 56       	subi	r24, 0x6B	; 107
     d36:	9d 4f       	sbci	r25, 0xFD	; 253
     d38:	fc 01       	movw	r30, r24
     d3a:	80 81       	ld	r24, Z
     d3c:	88 2f       	mov	r24, r24
     d3e:	90 e0       	ldi	r25, 0x00	; 0
     d40:	82 0f       	add	r24, r18
     d42:	93 1f       	adc	r25, r19
     d44:	c0 97       	sbiw	r24, 0x30	; 48
     d46:	9c 83       	std	Y+4, r25	; 0x04
     d48:	8b 83       	std	Y+3, r24	; 0x03
						send_Byte_0('1');
     d4a:	81 e3       	ldi	r24, 0x31	; 49
     d4c:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
     d50:	80 e0       	ldi	r24, 0x00	; 0
     d52:	90 e0       	ldi	r25, 0x00	; 0
     d54:	a0 e0       	ldi	r26, 0x00	; 0
     d56:	b0 e4       	ldi	r27, 0x40	; 64
     d58:	8c a3       	std	Y+36, r24	; 0x24
     d5a:	9d a3       	std	Y+37, r25	; 0x25
     d5c:	ae a3       	std	Y+38, r26	; 0x26
     d5e:	bf a3       	std	Y+39, r27	; 0x27

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     d60:	8e 01       	movw	r16, r28
     d62:	0e 59       	subi	r16, 0x9E	; 158
     d64:	1f 4f       	sbci	r17, 0xFF	; 255
     d66:	20 e0       	ldi	r18, 0x00	; 0
     d68:	30 e0       	ldi	r19, 0x00	; 0
     d6a:	4a e7       	ldi	r20, 0x7A	; 122
     d6c:	55 e4       	ldi	r21, 0x45	; 69
     d6e:	6c a1       	ldd	r22, Y+36	; 0x24
     d70:	7d a1       	ldd	r23, Y+37	; 0x25
     d72:	8e a1       	ldd	r24, Y+38	; 0x26
     d74:	9f a1       	ldd	r25, Y+39	; 0x27
     d76:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
     d7a:	dc 01       	movw	r26, r24
     d7c:	cb 01       	movw	r24, r22
     d7e:	f8 01       	movw	r30, r16
     d80:	80 83       	st	Z, r24
     d82:	91 83       	std	Z+1, r25	; 0x01
     d84:	a2 83       	std	Z+2, r26	; 0x02
     d86:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d88:	ce 01       	movw	r24, r28
     d8a:	8e 59       	subi	r24, 0x9E	; 158
     d8c:	9f 4f       	sbci	r25, 0xFF	; 255
     d8e:	20 e0       	ldi	r18, 0x00	; 0
     d90:	30 e0       	ldi	r19, 0x00	; 0
     d92:	40 e8       	ldi	r20, 0x80	; 128
     d94:	5f e3       	ldi	r21, 0x3F	; 63
     d96:	fc 01       	movw	r30, r24
     d98:	60 81       	ld	r22, Z
     d9a:	71 81       	ldd	r23, Z+1	; 0x01
     d9c:	82 81       	ldd	r24, Z+2	; 0x02
     d9e:	93 81       	ldd	r25, Z+3	; 0x03
     da0:	0e 94 06 0e 	call	0x1c0c	; 0x1c0c <__cmpsf2>
     da4:	88 23       	and	r24, r24
     da6:	4c f4       	brge	.+18     	; 0xdba <main+0x89a>
		__ticks = 1;
     da8:	ce 01       	movw	r24, r28
     daa:	8a 59       	subi	r24, 0x9A	; 154
     dac:	9f 4f       	sbci	r25, 0xFF	; 255
     dae:	21 e0       	ldi	r18, 0x01	; 1
     db0:	30 e0       	ldi	r19, 0x00	; 0
     db2:	fc 01       	movw	r30, r24
     db4:	31 83       	std	Z+1, r19	; 0x01
     db6:	20 83       	st	Z, r18
     db8:	69 c0       	rjmp	.+210    	; 0xe8c <main+0x96c>
	else if (__tmp > 65535)
     dba:	ce 01       	movw	r24, r28
     dbc:	8e 59       	subi	r24, 0x9E	; 158
     dbe:	9f 4f       	sbci	r25, 0xFF	; 255
     dc0:	20 e0       	ldi	r18, 0x00	; 0
     dc2:	3f ef       	ldi	r19, 0xFF	; 255
     dc4:	4f e7       	ldi	r20, 0x7F	; 127
     dc6:	57 e4       	ldi	r21, 0x47	; 71
     dc8:	fc 01       	movw	r30, r24
     dca:	60 81       	ld	r22, Z
     dcc:	71 81       	ldd	r23, Z+1	; 0x01
     dce:	82 81       	ldd	r24, Z+2	; 0x02
     dd0:	93 81       	ldd	r25, Z+3	; 0x03
     dd2:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <__gesf2>
     dd6:	18 16       	cp	r1, r24
     dd8:	0c f0       	brlt	.+2      	; 0xddc <main+0x8bc>
     dda:	46 c0       	rjmp	.+140    	; 0xe68 <main+0x948>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ddc:	20 e0       	ldi	r18, 0x00	; 0
     dde:	30 e0       	ldi	r19, 0x00	; 0
     de0:	40 e2       	ldi	r20, 0x20	; 32
     de2:	51 e4       	ldi	r21, 0x41	; 65
     de4:	6c a1       	ldd	r22, Y+36	; 0x24
     de6:	7d a1       	ldd	r23, Y+37	; 0x25
     de8:	8e a1       	ldd	r24, Y+38	; 0x26
     dea:	9f a1       	ldd	r25, Y+39	; 0x27
     dec:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
     df0:	dc 01       	movw	r26, r24
     df2:	cb 01       	movw	r24, r22
     df4:	8e 01       	movw	r16, r28
     df6:	0a 59       	subi	r16, 0x9A	; 154
     df8:	1f 4f       	sbci	r17, 0xFF	; 255
     dfa:	bc 01       	movw	r22, r24
     dfc:	cd 01       	movw	r24, r26
     dfe:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <__fixunssfsi>
     e02:	dc 01       	movw	r26, r24
     e04:	cb 01       	movw	r24, r22
     e06:	f8 01       	movw	r30, r16
     e08:	91 83       	std	Z+1, r25	; 0x01
     e0a:	80 83       	st	Z, r24
     e0c:	24 c0       	rjmp	.+72     	; 0xe56 <main+0x936>
     e0e:	ce 01       	movw	r24, r28
     e10:	88 59       	subi	r24, 0x98	; 152
     e12:	9f 4f       	sbci	r25, 0xFF	; 255
     e14:	20 e9       	ldi	r18, 0x90	; 144
     e16:	31 e0       	ldi	r19, 0x01	; 1
     e18:	fc 01       	movw	r30, r24
     e1a:	31 83       	std	Z+1, r19	; 0x01
     e1c:	20 83       	st	Z, r18
     e1e:	ce 01       	movw	r24, r28
     e20:	88 59       	subi	r24, 0x98	; 152
     e22:	9f 4f       	sbci	r25, 0xFF	; 255
     e24:	fc 01       	movw	r30, r24
     e26:	80 81       	ld	r24, Z
     e28:	91 81       	ldd	r25, Z+1	; 0x01
     e2a:	01 97       	sbiw	r24, 0x01	; 1
     e2c:	f1 f7       	brne	.-4      	; 0xe2a <main+0x90a>
     e2e:	9e 01       	movw	r18, r28
     e30:	28 59       	subi	r18, 0x98	; 152
     e32:	3f 4f       	sbci	r19, 0xFF	; 255
     e34:	f9 01       	movw	r30, r18
     e36:	91 83       	std	Z+1, r25	; 0x01
     e38:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e3a:	ce 01       	movw	r24, r28
     e3c:	8a 59       	subi	r24, 0x9A	; 154
     e3e:	9f 4f       	sbci	r25, 0xFF	; 255
     e40:	9e 01       	movw	r18, r28
     e42:	2a 59       	subi	r18, 0x9A	; 154
     e44:	3f 4f       	sbci	r19, 0xFF	; 255
     e46:	f9 01       	movw	r30, r18
     e48:	20 81       	ld	r18, Z
     e4a:	31 81       	ldd	r19, Z+1	; 0x01
     e4c:	21 50       	subi	r18, 0x01	; 1
     e4e:	31 09       	sbc	r19, r1
     e50:	fc 01       	movw	r30, r24
     e52:	31 83       	std	Z+1, r19	; 0x01
     e54:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e56:	ce 01       	movw	r24, r28
     e58:	8a 59       	subi	r24, 0x9A	; 154
     e5a:	9f 4f       	sbci	r25, 0xFF	; 255
     e5c:	fc 01       	movw	r30, r24
     e5e:	80 81       	ld	r24, Z
     e60:	91 81       	ldd	r25, Z+1	; 0x01
     e62:	89 2b       	or	r24, r25
     e64:	a1 f6       	brne	.-88     	; 0xe0e <main+0x8ee>
     e66:	2c c0       	rjmp	.+88     	; 0xec0 <main+0x9a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e68:	8e 01       	movw	r16, r28
     e6a:	0a 59       	subi	r16, 0x9A	; 154
     e6c:	1f 4f       	sbci	r17, 0xFF	; 255
     e6e:	ce 01       	movw	r24, r28
     e70:	8e 59       	subi	r24, 0x9E	; 158
     e72:	9f 4f       	sbci	r25, 0xFF	; 255
     e74:	fc 01       	movw	r30, r24
     e76:	60 81       	ld	r22, Z
     e78:	71 81       	ldd	r23, Z+1	; 0x01
     e7a:	82 81       	ldd	r24, Z+2	; 0x02
     e7c:	93 81       	ldd	r25, Z+3	; 0x03
     e7e:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <__fixunssfsi>
     e82:	dc 01       	movw	r26, r24
     e84:	cb 01       	movw	r24, r22
     e86:	f8 01       	movw	r30, r16
     e88:	91 83       	std	Z+1, r25	; 0x01
     e8a:	80 83       	st	Z, r24
     e8c:	ce 01       	movw	r24, r28
     e8e:	86 59       	subi	r24, 0x96	; 150
     e90:	9f 4f       	sbci	r25, 0xFF	; 255
     e92:	9e 01       	movw	r18, r28
     e94:	2a 59       	subi	r18, 0x9A	; 154
     e96:	3f 4f       	sbci	r19, 0xFF	; 255
     e98:	f9 01       	movw	r30, r18
     e9a:	20 81       	ld	r18, Z
     e9c:	31 81       	ldd	r19, Z+1	; 0x01
     e9e:	fc 01       	movw	r30, r24
     ea0:	31 83       	std	Z+1, r19	; 0x01
     ea2:	20 83       	st	Z, r18
     ea4:	ce 01       	movw	r24, r28
     ea6:	86 59       	subi	r24, 0x96	; 150
     ea8:	9f 4f       	sbci	r25, 0xFF	; 255
     eaa:	fc 01       	movw	r30, r24
     eac:	80 81       	ld	r24, Z
     eae:	91 81       	ldd	r25, Z+1	; 0x01
     eb0:	01 97       	sbiw	r24, 0x01	; 1
     eb2:	f1 f7       	brne	.-4      	; 0xeb0 <main+0x990>
     eb4:	9e 01       	movw	r18, r28
     eb6:	26 59       	subi	r18, 0x96	; 150
     eb8:	3f 4f       	sbci	r19, 0xFF	; 255
     eba:	f9 01       	movw	r30, r18
     ebc:	91 83       	std	Z+1, r25	; 0x01
     ebe:	80 83       	st	Z, r24
						_delay_ms(2);
						check++;
     ec0:	8d 81       	ldd	r24, Y+5	; 0x05
     ec2:	8f 5f       	subi	r24, 0xFF	; 255
     ec4:	8d 83       	std	Y+5, r24	; 0x05
					break;
     ec6:	14 c1       	rjmp	.+552    	; 0x10f0 <main+0xbd0>
				
					case 'Y':
						recieved_X=(final_data[counter+1]-48)*1000+(final_data[counter+2]-48)*100+(final_data[counter+3]-48)*10+final_data[counter+4]-48;
     ec8:	8e 81       	ldd	r24, Y+6	; 0x06
     eca:	88 2f       	mov	r24, r24
     ecc:	90 e0       	ldi	r25, 0x00	; 0
     ece:	01 96       	adiw	r24, 0x01	; 1
     ed0:	8b 56       	subi	r24, 0x6B	; 107
     ed2:	9d 4f       	sbci	r25, 0xFD	; 253
     ed4:	fc 01       	movw	r30, r24
     ed6:	80 81       	ld	r24, Z
     ed8:	88 2f       	mov	r24, r24
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	ac 01       	movw	r20, r24
     ede:	40 53       	subi	r20, 0x30	; 48
     ee0:	51 09       	sbc	r21, r1
     ee2:	88 ee       	ldi	r24, 0xE8	; 232
     ee4:	93 e0       	ldi	r25, 0x03	; 3
     ee6:	48 9f       	mul	r20, r24
     ee8:	90 01       	movw	r18, r0
     eea:	49 9f       	mul	r20, r25
     eec:	30 0d       	add	r19, r0
     eee:	58 9f       	mul	r21, r24
     ef0:	30 0d       	add	r19, r0
     ef2:	11 24       	eor	r1, r1
     ef4:	8e 81       	ldd	r24, Y+6	; 0x06
     ef6:	88 2f       	mov	r24, r24
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	02 96       	adiw	r24, 0x02	; 2
     efc:	8b 56       	subi	r24, 0x6B	; 107
     efe:	9d 4f       	sbci	r25, 0xFD	; 253
     f00:	fc 01       	movw	r30, r24
     f02:	80 81       	ld	r24, Z
     f04:	88 2f       	mov	r24, r24
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	ac 01       	movw	r20, r24
     f0a:	40 53       	subi	r20, 0x30	; 48
     f0c:	51 09       	sbc	r21, r1
     f0e:	64 e6       	ldi	r22, 0x64	; 100
     f10:	64 9f       	mul	r22, r20
     f12:	c0 01       	movw	r24, r0
     f14:	65 9f       	mul	r22, r21
     f16:	90 0d       	add	r25, r0
     f18:	11 24       	eor	r1, r1
     f1a:	28 0f       	add	r18, r24
     f1c:	39 1f       	adc	r19, r25
     f1e:	8e 81       	ldd	r24, Y+6	; 0x06
     f20:	88 2f       	mov	r24, r24
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	03 96       	adiw	r24, 0x03	; 3
     f26:	8b 56       	subi	r24, 0x6B	; 107
     f28:	9d 4f       	sbci	r25, 0xFD	; 253
     f2a:	fc 01       	movw	r30, r24
     f2c:	80 81       	ld	r24, Z
     f2e:	88 2f       	mov	r24, r24
     f30:	90 e0       	ldi	r25, 0x00	; 0
     f32:	c0 97       	sbiw	r24, 0x30	; 48
     f34:	88 0f       	add	r24, r24
     f36:	99 1f       	adc	r25, r25
     f38:	ac 01       	movw	r20, r24
     f3a:	44 0f       	add	r20, r20
     f3c:	55 1f       	adc	r21, r21
     f3e:	44 0f       	add	r20, r20
     f40:	55 1f       	adc	r21, r21
     f42:	84 0f       	add	r24, r20
     f44:	95 1f       	adc	r25, r21
     f46:	28 0f       	add	r18, r24
     f48:	39 1f       	adc	r19, r25
     f4a:	8e 81       	ldd	r24, Y+6	; 0x06
     f4c:	88 2f       	mov	r24, r24
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	04 96       	adiw	r24, 0x04	; 4
     f52:	8b 56       	subi	r24, 0x6B	; 107
     f54:	9d 4f       	sbci	r25, 0xFD	; 253
     f56:	fc 01       	movw	r30, r24
     f58:	80 81       	ld	r24, Z
     f5a:	88 2f       	mov	r24, r24
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	82 0f       	add	r24, r18
     f60:	93 1f       	adc	r25, r19
     f62:	c0 97       	sbiw	r24, 0x30	; 48
     f64:	9a 83       	std	Y+2, r25	; 0x02
     f66:	89 83       	std	Y+1, r24	; 0x01
						send_Byte_0('1');
     f68:	81 e3       	ldi	r24, 0x31	; 49
     f6a:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
     f6e:	80 e0       	ldi	r24, 0x00	; 0
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	a0 e0       	ldi	r26, 0x00	; 0
     f74:	b0 e4       	ldi	r27, 0x40	; 64
     f76:	88 8f       	std	Y+24, r24	; 0x18
     f78:	99 8f       	std	Y+25, r25	; 0x19
     f7a:	aa 8f       	std	Y+26, r26	; 0x1a
     f7c:	bb 8f       	std	Y+27, r27	; 0x1b

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     f7e:	8e 01       	movw	r16, r28
     f80:	04 59       	subi	r16, 0x94	; 148
     f82:	1f 4f       	sbci	r17, 0xFF	; 255
     f84:	20 e0       	ldi	r18, 0x00	; 0
     f86:	30 e0       	ldi	r19, 0x00	; 0
     f88:	4a e7       	ldi	r20, 0x7A	; 122
     f8a:	55 e4       	ldi	r21, 0x45	; 69
     f8c:	68 8d       	ldd	r22, Y+24	; 0x18
     f8e:	79 8d       	ldd	r23, Y+25	; 0x19
     f90:	8a 8d       	ldd	r24, Y+26	; 0x1a
     f92:	9b 8d       	ldd	r25, Y+27	; 0x1b
     f94:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
     f98:	dc 01       	movw	r26, r24
     f9a:	cb 01       	movw	r24, r22
     f9c:	f8 01       	movw	r30, r16
     f9e:	80 83       	st	Z, r24
     fa0:	91 83       	std	Z+1, r25	; 0x01
     fa2:	a2 83       	std	Z+2, r26	; 0x02
     fa4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     fa6:	ce 01       	movw	r24, r28
     fa8:	84 59       	subi	r24, 0x94	; 148
     faa:	9f 4f       	sbci	r25, 0xFF	; 255
     fac:	20 e0       	ldi	r18, 0x00	; 0
     fae:	30 e0       	ldi	r19, 0x00	; 0
     fb0:	40 e8       	ldi	r20, 0x80	; 128
     fb2:	5f e3       	ldi	r21, 0x3F	; 63
     fb4:	fc 01       	movw	r30, r24
     fb6:	60 81       	ld	r22, Z
     fb8:	71 81       	ldd	r23, Z+1	; 0x01
     fba:	82 81       	ldd	r24, Z+2	; 0x02
     fbc:	93 81       	ldd	r25, Z+3	; 0x03
     fbe:	0e 94 06 0e 	call	0x1c0c	; 0x1c0c <__cmpsf2>
     fc2:	88 23       	and	r24, r24
     fc4:	4c f4       	brge	.+18     	; 0xfd8 <main+0xab8>
		__ticks = 1;
     fc6:	ce 01       	movw	r24, r28
     fc8:	80 59       	subi	r24, 0x90	; 144
     fca:	9f 4f       	sbci	r25, 0xFF	; 255
     fcc:	21 e0       	ldi	r18, 0x01	; 1
     fce:	30 e0       	ldi	r19, 0x00	; 0
     fd0:	fc 01       	movw	r30, r24
     fd2:	31 83       	std	Z+1, r19	; 0x01
     fd4:	20 83       	st	Z, r18
     fd6:	69 c0       	rjmp	.+210    	; 0x10aa <main+0xb8a>
	else if (__tmp > 65535)
     fd8:	ce 01       	movw	r24, r28
     fda:	84 59       	subi	r24, 0x94	; 148
     fdc:	9f 4f       	sbci	r25, 0xFF	; 255
     fde:	20 e0       	ldi	r18, 0x00	; 0
     fe0:	3f ef       	ldi	r19, 0xFF	; 255
     fe2:	4f e7       	ldi	r20, 0x7F	; 127
     fe4:	57 e4       	ldi	r21, 0x47	; 71
     fe6:	fc 01       	movw	r30, r24
     fe8:	60 81       	ld	r22, Z
     fea:	71 81       	ldd	r23, Z+1	; 0x01
     fec:	82 81       	ldd	r24, Z+2	; 0x02
     fee:	93 81       	ldd	r25, Z+3	; 0x03
     ff0:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <__gesf2>
     ff4:	18 16       	cp	r1, r24
     ff6:	0c f0       	brlt	.+2      	; 0xffa <main+0xada>
     ff8:	46 c0       	rjmp	.+140    	; 0x1086 <main+0xb66>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ffa:	20 e0       	ldi	r18, 0x00	; 0
     ffc:	30 e0       	ldi	r19, 0x00	; 0
     ffe:	40 e2       	ldi	r20, 0x20	; 32
    1000:	51 e4       	ldi	r21, 0x41	; 65
    1002:	68 8d       	ldd	r22, Y+24	; 0x18
    1004:	79 8d       	ldd	r23, Y+25	; 0x19
    1006:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1008:	9b 8d       	ldd	r25, Y+27	; 0x1b
    100a:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
    100e:	dc 01       	movw	r26, r24
    1010:	cb 01       	movw	r24, r22
    1012:	8e 01       	movw	r16, r28
    1014:	00 59       	subi	r16, 0x90	; 144
    1016:	1f 4f       	sbci	r17, 0xFF	; 255
    1018:	bc 01       	movw	r22, r24
    101a:	cd 01       	movw	r24, r26
    101c:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <__fixunssfsi>
    1020:	dc 01       	movw	r26, r24
    1022:	cb 01       	movw	r24, r22
    1024:	f8 01       	movw	r30, r16
    1026:	91 83       	std	Z+1, r25	; 0x01
    1028:	80 83       	st	Z, r24
    102a:	24 c0       	rjmp	.+72     	; 0x1074 <main+0xb54>
    102c:	ce 01       	movw	r24, r28
    102e:	8e 58       	subi	r24, 0x8E	; 142
    1030:	9f 4f       	sbci	r25, 0xFF	; 255
    1032:	20 e9       	ldi	r18, 0x90	; 144
    1034:	31 e0       	ldi	r19, 0x01	; 1
    1036:	fc 01       	movw	r30, r24
    1038:	31 83       	std	Z+1, r19	; 0x01
    103a:	20 83       	st	Z, r18
    103c:	ce 01       	movw	r24, r28
    103e:	8e 58       	subi	r24, 0x8E	; 142
    1040:	9f 4f       	sbci	r25, 0xFF	; 255
    1042:	fc 01       	movw	r30, r24
    1044:	80 81       	ld	r24, Z
    1046:	91 81       	ldd	r25, Z+1	; 0x01
    1048:	01 97       	sbiw	r24, 0x01	; 1
    104a:	f1 f7       	brne	.-4      	; 0x1048 <main+0xb28>
    104c:	9e 01       	movw	r18, r28
    104e:	2e 58       	subi	r18, 0x8E	; 142
    1050:	3f 4f       	sbci	r19, 0xFF	; 255
    1052:	f9 01       	movw	r30, r18
    1054:	91 83       	std	Z+1, r25	; 0x01
    1056:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1058:	ce 01       	movw	r24, r28
    105a:	80 59       	subi	r24, 0x90	; 144
    105c:	9f 4f       	sbci	r25, 0xFF	; 255
    105e:	9e 01       	movw	r18, r28
    1060:	20 59       	subi	r18, 0x90	; 144
    1062:	3f 4f       	sbci	r19, 0xFF	; 255
    1064:	f9 01       	movw	r30, r18
    1066:	20 81       	ld	r18, Z
    1068:	31 81       	ldd	r19, Z+1	; 0x01
    106a:	21 50       	subi	r18, 0x01	; 1
    106c:	31 09       	sbc	r19, r1
    106e:	fc 01       	movw	r30, r24
    1070:	31 83       	std	Z+1, r19	; 0x01
    1072:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1074:	ce 01       	movw	r24, r28
    1076:	80 59       	subi	r24, 0x90	; 144
    1078:	9f 4f       	sbci	r25, 0xFF	; 255
    107a:	fc 01       	movw	r30, r24
    107c:	80 81       	ld	r24, Z
    107e:	91 81       	ldd	r25, Z+1	; 0x01
    1080:	89 2b       	or	r24, r25
    1082:	a1 f6       	brne	.-88     	; 0x102c <main+0xb0c>
    1084:	2c c0       	rjmp	.+88     	; 0x10de <main+0xbbe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1086:	8e 01       	movw	r16, r28
    1088:	00 59       	subi	r16, 0x90	; 144
    108a:	1f 4f       	sbci	r17, 0xFF	; 255
    108c:	ce 01       	movw	r24, r28
    108e:	84 59       	subi	r24, 0x94	; 148
    1090:	9f 4f       	sbci	r25, 0xFF	; 255
    1092:	fc 01       	movw	r30, r24
    1094:	60 81       	ld	r22, Z
    1096:	71 81       	ldd	r23, Z+1	; 0x01
    1098:	82 81       	ldd	r24, Z+2	; 0x02
    109a:	93 81       	ldd	r25, Z+3	; 0x03
    109c:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <__fixunssfsi>
    10a0:	dc 01       	movw	r26, r24
    10a2:	cb 01       	movw	r24, r22
    10a4:	f8 01       	movw	r30, r16
    10a6:	91 83       	std	Z+1, r25	; 0x01
    10a8:	80 83       	st	Z, r24
    10aa:	ce 01       	movw	r24, r28
    10ac:	8c 58       	subi	r24, 0x8C	; 140
    10ae:	9f 4f       	sbci	r25, 0xFF	; 255
    10b0:	9e 01       	movw	r18, r28
    10b2:	20 59       	subi	r18, 0x90	; 144
    10b4:	3f 4f       	sbci	r19, 0xFF	; 255
    10b6:	f9 01       	movw	r30, r18
    10b8:	20 81       	ld	r18, Z
    10ba:	31 81       	ldd	r19, Z+1	; 0x01
    10bc:	fc 01       	movw	r30, r24
    10be:	31 83       	std	Z+1, r19	; 0x01
    10c0:	20 83       	st	Z, r18
    10c2:	ce 01       	movw	r24, r28
    10c4:	8c 58       	subi	r24, 0x8C	; 140
    10c6:	9f 4f       	sbci	r25, 0xFF	; 255
    10c8:	fc 01       	movw	r30, r24
    10ca:	80 81       	ld	r24, Z
    10cc:	91 81       	ldd	r25, Z+1	; 0x01
    10ce:	01 97       	sbiw	r24, 0x01	; 1
    10d0:	f1 f7       	brne	.-4      	; 0x10ce <main+0xbae>
    10d2:	9e 01       	movw	r18, r28
    10d4:	2c 58       	subi	r18, 0x8C	; 140
    10d6:	3f 4f       	sbci	r19, 0xFF	; 255
    10d8:	f9 01       	movw	r30, r18
    10da:	91 83       	std	Z+1, r25	; 0x01
    10dc:	80 83       	st	Z, r24
						_delay_ms(2);
						check++;
    10de:	8d 81       	ldd	r24, Y+5	; 0x05
    10e0:	8f 5f       	subi	r24, 0xFF	; 255
    10e2:	8d 83       	std	Y+5, r24	; 0x05
					break;
    10e4:	05 c0       	rjmp	.+10     	; 0x10f0 <main+0xbd0>
						
					case 'O':
					routine_done=1;
    10e6:	81 e0       	ldi	r24, 0x01	; 1
    10e8:	8f 83       	std	Y+7, r24	; 0x07
					check++;	
    10ea:	8d 81       	ldd	r24, Y+5	; 0x05
    10ec:	8f 5f       	subi	r24, 0xFF	; 255
    10ee:	8d 83       	std	Y+5, r24	; 0x05
		if (uart_str_complete!=0)
		{
			routine_done=0;
			uart_str_complete=0;
			send_Byte_0('1');	
			for (counter=0;counter<=data_bytes_recieved;counter++)
    10f0:	8e 81       	ldd	r24, Y+6	; 0x06
    10f2:	8f 5f       	subi	r24, 0xFF	; 255
    10f4:	8e 83       	std	Y+6, r24	; 0x06
    10f6:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <data_bytes_recieved>
    10fa:	9e 81       	ldd	r25, Y+6	; 0x06
    10fc:	89 17       	cp	r24, r25
    10fe:	08 f0       	brcs	.+2      	; 0x1102 <__stack+0x3>
    1100:	bf cd       	rjmp	.-1154   	; 0xc80 <main+0x760>
					case 'O':
					routine_done=1;
					check++;	
				}
			}
			data_bytes_recieved=0;
    1102:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <data_bytes_recieved>
			if ((check==0)||(check>2))
    1106:	8d 81       	ldd	r24, Y+5	; 0x05
    1108:	88 23       	and	r24, r24
    110a:	19 f0       	breq	.+6      	; 0x1112 <__stack+0x13>
    110c:	8d 81       	ldd	r24, Y+5	; 0x05
    110e:	83 30       	cpi	r24, 0x03	; 3
    1110:	20 f0       	brcs	.+8      	; 0x111a <__stack+0x1b>
			{
				send_Byte_0('0');
    1112:	80 e3       	ldi	r24, 0x30	; 48
    1114:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
    1118:	01 c0       	rjmp	.+2      	; 0x111c <__stack+0x1d>
			}
			else
			{
				check=0;
    111a:	1d 82       	std	Y+5, r1	; 0x05
			}
			if (routine_done>=1)
    111c:	8f 81       	ldd	r24, Y+7	; 0x07
    111e:	88 23       	and	r24, r24
    1120:	09 f4       	brne	.+2      	; 0x1124 <__stack+0x25>
    1122:	94 c1       	rjmp	.+808    	; 0x144c <__stack+0x34d>
			{
				send_to_uArm("G0 X200 Y0 Z150 F6000\n");
    1124:	8e e6       	ldi	r24, 0x6E	; 110
    1126:	91 e0       	ldi	r25, 0x01	; 1
    1128:	0e 94 ad 01 	call	0x35a	; 0x35a <send_to_uArm>
				routine_done=0;
    112c:	1f 82       	std	Y+7, r1	; 0x07
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    112e:	04 c0       	rjmp	.+8      	; 0x1138 <__stack+0x39>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
    1130:	80 e0       	ldi	r24, 0x00	; 0
    1132:	91 e0       	ldi	r25, 0x01	; 1
    1134:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
			}
			if (routine_done>=1)
			{
				send_to_uArm("G0 X200 Y0 Z150 F6000\n");
				routine_done=0;
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    1138:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <uart_string1+0x4>
    113c:	81 33       	cpi	r24, 0x31	; 49
    113e:	c1 f3       	breq	.-16     	; 0x1130 <__stack+0x31>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
				}
				if (DIP_Switch&0x01)
    1140:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <__data_end>
    1144:	88 2f       	mov	r24, r24
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	81 70       	andi	r24, 0x01	; 1
    114a:	99 27       	eor	r25, r25
    114c:	89 2b       	or	r24, r25
    114e:	09 f4       	brne	.+2      	; 0x1152 <__stack+0x53>
    1150:	e9 cb       	rjmp	.-2094   	; 0x924 <main+0x404>
				{
					to_uARM("M2210 F500 T200\n");
    1152:	85 e8       	ldi	r24, 0x85	; 133
    1154:	91 e0       	ldi	r25, 0x01	; 1
    1156:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    115a:	80 e0       	ldi	r24, 0x00	; 0
    115c:	90 e0       	ldi	r25, 0x00	; 0
    115e:	a8 e4       	ldi	r26, 0x48	; 72
    1160:	b3 e4       	ldi	r27, 0x43	; 67
    1162:	88 a3       	std	Y+32, r24	; 0x20
    1164:	99 a3       	std	Y+33, r25	; 0x21
    1166:	aa a3       	std	Y+34, r26	; 0x22
    1168:	bb a3       	std	Y+35, r27	; 0x23

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    116a:	8e 01       	movw	r16, r28
    116c:	00 58       	subi	r16, 0x80	; 128
    116e:	1f 4f       	sbci	r17, 0xFF	; 255
    1170:	20 e0       	ldi	r18, 0x00	; 0
    1172:	30 e0       	ldi	r19, 0x00	; 0
    1174:	4a e7       	ldi	r20, 0x7A	; 122
    1176:	55 e4       	ldi	r21, 0x45	; 69
    1178:	68 a1       	ldd	r22, Y+32	; 0x20
    117a:	79 a1       	ldd	r23, Y+33	; 0x21
    117c:	8a a1       	ldd	r24, Y+34	; 0x22
    117e:	9b a1       	ldd	r25, Y+35	; 0x23
    1180:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
    1184:	dc 01       	movw	r26, r24
    1186:	cb 01       	movw	r24, r22
    1188:	f8 01       	movw	r30, r16
    118a:	80 83       	st	Z, r24
    118c:	91 83       	std	Z+1, r25	; 0x01
    118e:	a2 83       	std	Z+2, r26	; 0x02
    1190:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1192:	ce 01       	movw	r24, r28
    1194:	80 58       	subi	r24, 0x80	; 128
    1196:	9f 4f       	sbci	r25, 0xFF	; 255
    1198:	20 e0       	ldi	r18, 0x00	; 0
    119a:	30 e0       	ldi	r19, 0x00	; 0
    119c:	40 e8       	ldi	r20, 0x80	; 128
    119e:	5f e3       	ldi	r21, 0x3F	; 63
    11a0:	fc 01       	movw	r30, r24
    11a2:	60 81       	ld	r22, Z
    11a4:	71 81       	ldd	r23, Z+1	; 0x01
    11a6:	82 81       	ldd	r24, Z+2	; 0x02
    11a8:	93 81       	ldd	r25, Z+3	; 0x03
    11aa:	0e 94 06 0e 	call	0x1c0c	; 0x1c0c <__cmpsf2>
    11ae:	88 23       	and	r24, r24
    11b0:	4c f4       	brge	.+18     	; 0x11c4 <__stack+0xc5>
		__ticks = 1;
    11b2:	ce 01       	movw	r24, r28
    11b4:	8c 57       	subi	r24, 0x7C	; 124
    11b6:	9f 4f       	sbci	r25, 0xFF	; 255
    11b8:	21 e0       	ldi	r18, 0x01	; 1
    11ba:	30 e0       	ldi	r19, 0x00	; 0
    11bc:	fc 01       	movw	r30, r24
    11be:	31 83       	std	Z+1, r19	; 0x01
    11c0:	20 83       	st	Z, r18
    11c2:	69 c0       	rjmp	.+210    	; 0x1296 <__stack+0x197>
	else if (__tmp > 65535)
    11c4:	ce 01       	movw	r24, r28
    11c6:	80 58       	subi	r24, 0x80	; 128
    11c8:	9f 4f       	sbci	r25, 0xFF	; 255
    11ca:	20 e0       	ldi	r18, 0x00	; 0
    11cc:	3f ef       	ldi	r19, 0xFF	; 255
    11ce:	4f e7       	ldi	r20, 0x7F	; 127
    11d0:	57 e4       	ldi	r21, 0x47	; 71
    11d2:	fc 01       	movw	r30, r24
    11d4:	60 81       	ld	r22, Z
    11d6:	71 81       	ldd	r23, Z+1	; 0x01
    11d8:	82 81       	ldd	r24, Z+2	; 0x02
    11da:	93 81       	ldd	r25, Z+3	; 0x03
    11dc:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <__gesf2>
    11e0:	18 16       	cp	r1, r24
    11e2:	0c f0       	brlt	.+2      	; 0x11e6 <__stack+0xe7>
    11e4:	46 c0       	rjmp	.+140    	; 0x1272 <__stack+0x173>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11e6:	20 e0       	ldi	r18, 0x00	; 0
    11e8:	30 e0       	ldi	r19, 0x00	; 0
    11ea:	40 e2       	ldi	r20, 0x20	; 32
    11ec:	51 e4       	ldi	r21, 0x41	; 65
    11ee:	68 a1       	ldd	r22, Y+32	; 0x20
    11f0:	79 a1       	ldd	r23, Y+33	; 0x21
    11f2:	8a a1       	ldd	r24, Y+34	; 0x22
    11f4:	9b a1       	ldd	r25, Y+35	; 0x23
    11f6:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
    11fa:	dc 01       	movw	r26, r24
    11fc:	cb 01       	movw	r24, r22
    11fe:	8e 01       	movw	r16, r28
    1200:	0c 57       	subi	r16, 0x7C	; 124
    1202:	1f 4f       	sbci	r17, 0xFF	; 255
    1204:	bc 01       	movw	r22, r24
    1206:	cd 01       	movw	r24, r26
    1208:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <__fixunssfsi>
    120c:	dc 01       	movw	r26, r24
    120e:	cb 01       	movw	r24, r22
    1210:	f8 01       	movw	r30, r16
    1212:	91 83       	std	Z+1, r25	; 0x01
    1214:	80 83       	st	Z, r24
    1216:	24 c0       	rjmp	.+72     	; 0x1260 <__stack+0x161>
    1218:	ce 01       	movw	r24, r28
    121a:	8a 57       	subi	r24, 0x7A	; 122
    121c:	9f 4f       	sbci	r25, 0xFF	; 255
    121e:	20 e9       	ldi	r18, 0x90	; 144
    1220:	31 e0       	ldi	r19, 0x01	; 1
    1222:	fc 01       	movw	r30, r24
    1224:	31 83       	std	Z+1, r19	; 0x01
    1226:	20 83       	st	Z, r18
    1228:	ce 01       	movw	r24, r28
    122a:	8a 57       	subi	r24, 0x7A	; 122
    122c:	9f 4f       	sbci	r25, 0xFF	; 255
    122e:	fc 01       	movw	r30, r24
    1230:	80 81       	ld	r24, Z
    1232:	91 81       	ldd	r25, Z+1	; 0x01
    1234:	01 97       	sbiw	r24, 0x01	; 1
    1236:	f1 f7       	brne	.-4      	; 0x1234 <__stack+0x135>
    1238:	9e 01       	movw	r18, r28
    123a:	2a 57       	subi	r18, 0x7A	; 122
    123c:	3f 4f       	sbci	r19, 0xFF	; 255
    123e:	f9 01       	movw	r30, r18
    1240:	91 83       	std	Z+1, r25	; 0x01
    1242:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1244:	ce 01       	movw	r24, r28
    1246:	8c 57       	subi	r24, 0x7C	; 124
    1248:	9f 4f       	sbci	r25, 0xFF	; 255
    124a:	9e 01       	movw	r18, r28
    124c:	2c 57       	subi	r18, 0x7C	; 124
    124e:	3f 4f       	sbci	r19, 0xFF	; 255
    1250:	f9 01       	movw	r30, r18
    1252:	20 81       	ld	r18, Z
    1254:	31 81       	ldd	r19, Z+1	; 0x01
    1256:	21 50       	subi	r18, 0x01	; 1
    1258:	31 09       	sbc	r19, r1
    125a:	fc 01       	movw	r30, r24
    125c:	31 83       	std	Z+1, r19	; 0x01
    125e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1260:	ce 01       	movw	r24, r28
    1262:	8c 57       	subi	r24, 0x7C	; 124
    1264:	9f 4f       	sbci	r25, 0xFF	; 255
    1266:	fc 01       	movw	r30, r24
    1268:	80 81       	ld	r24, Z
    126a:	91 81       	ldd	r25, Z+1	; 0x01
    126c:	89 2b       	or	r24, r25
    126e:	a1 f6       	brne	.-88     	; 0x1218 <__stack+0x119>
    1270:	2c c0       	rjmp	.+88     	; 0x12ca <__stack+0x1cb>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1272:	8e 01       	movw	r16, r28
    1274:	0c 57       	subi	r16, 0x7C	; 124
    1276:	1f 4f       	sbci	r17, 0xFF	; 255
    1278:	ce 01       	movw	r24, r28
    127a:	80 58       	subi	r24, 0x80	; 128
    127c:	9f 4f       	sbci	r25, 0xFF	; 255
    127e:	fc 01       	movw	r30, r24
    1280:	60 81       	ld	r22, Z
    1282:	71 81       	ldd	r23, Z+1	; 0x01
    1284:	82 81       	ldd	r24, Z+2	; 0x02
    1286:	93 81       	ldd	r25, Z+3	; 0x03
    1288:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <__fixunssfsi>
    128c:	dc 01       	movw	r26, r24
    128e:	cb 01       	movw	r24, r22
    1290:	f8 01       	movw	r30, r16
    1292:	91 83       	std	Z+1, r25	; 0x01
    1294:	80 83       	st	Z, r24
    1296:	ce 01       	movw	r24, r28
    1298:	88 57       	subi	r24, 0x78	; 120
    129a:	9f 4f       	sbci	r25, 0xFF	; 255
    129c:	9e 01       	movw	r18, r28
    129e:	2c 57       	subi	r18, 0x7C	; 124
    12a0:	3f 4f       	sbci	r19, 0xFF	; 255
    12a2:	f9 01       	movw	r30, r18
    12a4:	20 81       	ld	r18, Z
    12a6:	31 81       	ldd	r19, Z+1	; 0x01
    12a8:	fc 01       	movw	r30, r24
    12aa:	31 83       	std	Z+1, r19	; 0x01
    12ac:	20 83       	st	Z, r18
    12ae:	ce 01       	movw	r24, r28
    12b0:	88 57       	subi	r24, 0x78	; 120
    12b2:	9f 4f       	sbci	r25, 0xFF	; 255
    12b4:	fc 01       	movw	r30, r24
    12b6:	80 81       	ld	r24, Z
    12b8:	91 81       	ldd	r25, Z+1	; 0x01
    12ba:	01 97       	sbiw	r24, 0x01	; 1
    12bc:	f1 f7       	brne	.-4      	; 0x12ba <__stack+0x1bb>
    12be:	9e 01       	movw	r18, r28
    12c0:	28 57       	subi	r18, 0x78	; 120
    12c2:	3f 4f       	sbci	r19, 0xFF	; 255
    12c4:	f9 01       	movw	r30, r18
    12c6:	91 83       	std	Z+1, r25	; 0x01
    12c8:	80 83       	st	Z, r24
					_delay_ms(200);
					to_uARM("M2210 F1000 T500\n");
    12ca:	86 e9       	ldi	r24, 0x96	; 150
    12cc:	91 e0       	ldi	r25, 0x01	; 1
    12ce:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    12d2:	80 e0       	ldi	r24, 0x00	; 0
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	aa ef       	ldi	r26, 0xFA	; 250
    12d8:	b3 e4       	ldi	r27, 0x43	; 67
    12da:	8c 8f       	std	Y+28, r24	; 0x1c
    12dc:	9d 8f       	std	Y+29, r25	; 0x1d
    12de:	ae 8f       	std	Y+30, r26	; 0x1e
    12e0:	bf 8f       	std	Y+31, r27	; 0x1f

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    12e2:	8e 01       	movw	r16, r28
    12e4:	0a 58       	subi	r16, 0x8A	; 138
    12e6:	1f 4f       	sbci	r17, 0xFF	; 255
    12e8:	20 e0       	ldi	r18, 0x00	; 0
    12ea:	30 e0       	ldi	r19, 0x00	; 0
    12ec:	4a e7       	ldi	r20, 0x7A	; 122
    12ee:	55 e4       	ldi	r21, 0x45	; 69
    12f0:	6c 8d       	ldd	r22, Y+28	; 0x1c
    12f2:	7d 8d       	ldd	r23, Y+29	; 0x1d
    12f4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    12f6:	9f 8d       	ldd	r25, Y+31	; 0x1f
    12f8:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
    12fc:	dc 01       	movw	r26, r24
    12fe:	cb 01       	movw	r24, r22
    1300:	f8 01       	movw	r30, r16
    1302:	80 83       	st	Z, r24
    1304:	91 83       	std	Z+1, r25	; 0x01
    1306:	a2 83       	std	Z+2, r26	; 0x02
    1308:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    130a:	ce 01       	movw	r24, r28
    130c:	8a 58       	subi	r24, 0x8A	; 138
    130e:	9f 4f       	sbci	r25, 0xFF	; 255
    1310:	20 e0       	ldi	r18, 0x00	; 0
    1312:	30 e0       	ldi	r19, 0x00	; 0
    1314:	40 e8       	ldi	r20, 0x80	; 128
    1316:	5f e3       	ldi	r21, 0x3F	; 63
    1318:	fc 01       	movw	r30, r24
    131a:	60 81       	ld	r22, Z
    131c:	71 81       	ldd	r23, Z+1	; 0x01
    131e:	82 81       	ldd	r24, Z+2	; 0x02
    1320:	93 81       	ldd	r25, Z+3	; 0x03
    1322:	0e 94 06 0e 	call	0x1c0c	; 0x1c0c <__cmpsf2>
    1326:	88 23       	and	r24, r24
    1328:	4c f4       	brge	.+18     	; 0x133c <__stack+0x23d>
		__ticks = 1;
    132a:	ce 01       	movw	r24, r28
    132c:	86 58       	subi	r24, 0x86	; 134
    132e:	9f 4f       	sbci	r25, 0xFF	; 255
    1330:	21 e0       	ldi	r18, 0x01	; 1
    1332:	30 e0       	ldi	r19, 0x00	; 0
    1334:	fc 01       	movw	r30, r24
    1336:	31 83       	std	Z+1, r19	; 0x01
    1338:	20 83       	st	Z, r18
    133a:	69 c0       	rjmp	.+210    	; 0x140e <__stack+0x30f>
	else if (__tmp > 65535)
    133c:	ce 01       	movw	r24, r28
    133e:	8a 58       	subi	r24, 0x8A	; 138
    1340:	9f 4f       	sbci	r25, 0xFF	; 255
    1342:	20 e0       	ldi	r18, 0x00	; 0
    1344:	3f ef       	ldi	r19, 0xFF	; 255
    1346:	4f e7       	ldi	r20, 0x7F	; 127
    1348:	57 e4       	ldi	r21, 0x47	; 71
    134a:	fc 01       	movw	r30, r24
    134c:	60 81       	ld	r22, Z
    134e:	71 81       	ldd	r23, Z+1	; 0x01
    1350:	82 81       	ldd	r24, Z+2	; 0x02
    1352:	93 81       	ldd	r25, Z+3	; 0x03
    1354:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <__gesf2>
    1358:	18 16       	cp	r1, r24
    135a:	0c f0       	brlt	.+2      	; 0x135e <__stack+0x25f>
    135c:	46 c0       	rjmp	.+140    	; 0x13ea <__stack+0x2eb>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    135e:	20 e0       	ldi	r18, 0x00	; 0
    1360:	30 e0       	ldi	r19, 0x00	; 0
    1362:	40 e2       	ldi	r20, 0x20	; 32
    1364:	51 e4       	ldi	r21, 0x41	; 65
    1366:	6c 8d       	ldd	r22, Y+28	; 0x1c
    1368:	7d 8d       	ldd	r23, Y+29	; 0x1d
    136a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    136c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    136e:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
    1372:	dc 01       	movw	r26, r24
    1374:	cb 01       	movw	r24, r22
    1376:	8e 01       	movw	r16, r28
    1378:	06 58       	subi	r16, 0x86	; 134
    137a:	1f 4f       	sbci	r17, 0xFF	; 255
    137c:	bc 01       	movw	r22, r24
    137e:	cd 01       	movw	r24, r26
    1380:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <__fixunssfsi>
    1384:	dc 01       	movw	r26, r24
    1386:	cb 01       	movw	r24, r22
    1388:	f8 01       	movw	r30, r16
    138a:	91 83       	std	Z+1, r25	; 0x01
    138c:	80 83       	st	Z, r24
    138e:	24 c0       	rjmp	.+72     	; 0x13d8 <__stack+0x2d9>
    1390:	ce 01       	movw	r24, r28
    1392:	84 58       	subi	r24, 0x84	; 132
    1394:	9f 4f       	sbci	r25, 0xFF	; 255
    1396:	20 e9       	ldi	r18, 0x90	; 144
    1398:	31 e0       	ldi	r19, 0x01	; 1
    139a:	fc 01       	movw	r30, r24
    139c:	31 83       	std	Z+1, r19	; 0x01
    139e:	20 83       	st	Z, r18
    13a0:	ce 01       	movw	r24, r28
    13a2:	84 58       	subi	r24, 0x84	; 132
    13a4:	9f 4f       	sbci	r25, 0xFF	; 255
    13a6:	fc 01       	movw	r30, r24
    13a8:	80 81       	ld	r24, Z
    13aa:	91 81       	ldd	r25, Z+1	; 0x01
    13ac:	01 97       	sbiw	r24, 0x01	; 1
    13ae:	f1 f7       	brne	.-4      	; 0x13ac <__stack+0x2ad>
    13b0:	9e 01       	movw	r18, r28
    13b2:	24 58       	subi	r18, 0x84	; 132
    13b4:	3f 4f       	sbci	r19, 0xFF	; 255
    13b6:	f9 01       	movw	r30, r18
    13b8:	91 83       	std	Z+1, r25	; 0x01
    13ba:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13bc:	ce 01       	movw	r24, r28
    13be:	86 58       	subi	r24, 0x86	; 134
    13c0:	9f 4f       	sbci	r25, 0xFF	; 255
    13c2:	9e 01       	movw	r18, r28
    13c4:	26 58       	subi	r18, 0x86	; 134
    13c6:	3f 4f       	sbci	r19, 0xFF	; 255
    13c8:	f9 01       	movw	r30, r18
    13ca:	20 81       	ld	r18, Z
    13cc:	31 81       	ldd	r19, Z+1	; 0x01
    13ce:	21 50       	subi	r18, 0x01	; 1
    13d0:	31 09       	sbc	r19, r1
    13d2:	fc 01       	movw	r30, r24
    13d4:	31 83       	std	Z+1, r19	; 0x01
    13d6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13d8:	ce 01       	movw	r24, r28
    13da:	86 58       	subi	r24, 0x86	; 134
    13dc:	9f 4f       	sbci	r25, 0xFF	; 255
    13de:	fc 01       	movw	r30, r24
    13e0:	80 81       	ld	r24, Z
    13e2:	91 81       	ldd	r25, Z+1	; 0x01
    13e4:	89 2b       	or	r24, r25
    13e6:	a1 f6       	brne	.-88     	; 0x1390 <__stack+0x291>
    13e8:	2c c0       	rjmp	.+88     	; 0x1442 <__stack+0x343>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13ea:	8e 01       	movw	r16, r28
    13ec:	06 58       	subi	r16, 0x86	; 134
    13ee:	1f 4f       	sbci	r17, 0xFF	; 255
    13f0:	ce 01       	movw	r24, r28
    13f2:	8a 58       	subi	r24, 0x8A	; 138
    13f4:	9f 4f       	sbci	r25, 0xFF	; 255
    13f6:	fc 01       	movw	r30, r24
    13f8:	60 81       	ld	r22, Z
    13fa:	71 81       	ldd	r23, Z+1	; 0x01
    13fc:	82 81       	ldd	r24, Z+2	; 0x02
    13fe:	93 81       	ldd	r25, Z+3	; 0x03
    1400:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <__fixunssfsi>
    1404:	dc 01       	movw	r26, r24
    1406:	cb 01       	movw	r24, r22
    1408:	f8 01       	movw	r30, r16
    140a:	91 83       	std	Z+1, r25	; 0x01
    140c:	80 83       	st	Z, r24
    140e:	ce 01       	movw	r24, r28
    1410:	82 58       	subi	r24, 0x82	; 130
    1412:	9f 4f       	sbci	r25, 0xFF	; 255
    1414:	9e 01       	movw	r18, r28
    1416:	26 58       	subi	r18, 0x86	; 134
    1418:	3f 4f       	sbci	r19, 0xFF	; 255
    141a:	f9 01       	movw	r30, r18
    141c:	20 81       	ld	r18, Z
    141e:	31 81       	ldd	r19, Z+1	; 0x01
    1420:	fc 01       	movw	r30, r24
    1422:	31 83       	std	Z+1, r19	; 0x01
    1424:	20 83       	st	Z, r18
    1426:	ce 01       	movw	r24, r28
    1428:	82 58       	subi	r24, 0x82	; 130
    142a:	9f 4f       	sbci	r25, 0xFF	; 255
    142c:	fc 01       	movw	r30, r24
    142e:	80 81       	ld	r24, Z
    1430:	91 81       	ldd	r25, Z+1	; 0x01
    1432:	01 97       	sbiw	r24, 0x01	; 1
    1434:	f1 f7       	brne	.-4      	; 0x1432 <__stack+0x333>
    1436:	9e 01       	movw	r18, r28
    1438:	22 58       	subi	r18, 0x82	; 130
    143a:	3f 4f       	sbci	r19, 0xFF	; 255
    143c:	f9 01       	movw	r30, r18
    143e:	91 83       	std	Z+1, r25	; 0x01
    1440:	80 83       	st	Z, r24
					_delay_ms(500);
					to_uARM("M2210 F2000 T500\n");
    1442:	88 ea       	ldi	r24, 0xA8	; 168
    1444:	91 e0       	ldi	r25, 0x01	; 1
    1446:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    144a:	6c ca       	rjmp	.-2856   	; 0x924 <main+0x404>
				}
			}
			else
			{
				if (DIP_Switch&0x80)
    144c:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <__data_end>
    1450:	88 23       	and	r24, r24
    1452:	f4 f4       	brge	.+60     	; 0x1490 <__stack+0x391>
				{
					write_zahl(2,10,recieved_X,4,0,0);
    1454:	89 81       	ldd	r24, Y+1	; 0x01
    1456:	9a 81       	ldd	r25, Y+2	; 0x02
    1458:	09 2e       	mov	r0, r25
    145a:	00 0c       	add	r0, r0
    145c:	aa 0b       	sbc	r26, r26
    145e:	bb 0b       	sbc	r27, r27
    1460:	c1 2c       	mov	r12, r1
    1462:	e1 2c       	mov	r14, r1
    1464:	04 e0       	ldi	r16, 0x04	; 4
    1466:	9c 01       	movw	r18, r24
    1468:	ad 01       	movw	r20, r26
    146a:	6a e0       	ldi	r22, 0x0A	; 10
    146c:	82 e0       	ldi	r24, 0x02	; 2
    146e:	0e 94 48 0c 	call	0x1890	; 0x1890 <write_zahl>
					write_zahl(3,10,recieved_Y,4,0,0);
    1472:	8b 81       	ldd	r24, Y+3	; 0x03
    1474:	9c 81       	ldd	r25, Y+4	; 0x04
    1476:	09 2e       	mov	r0, r25
    1478:	00 0c       	add	r0, r0
    147a:	aa 0b       	sbc	r26, r26
    147c:	bb 0b       	sbc	r27, r27
    147e:	c1 2c       	mov	r12, r1
    1480:	e1 2c       	mov	r14, r1
    1482:	04 e0       	ldi	r16, 0x04	; 4
    1484:	9c 01       	movw	r18, r24
    1486:	ad 01       	movw	r20, r26
    1488:	6a e0       	ldi	r22, 0x0A	; 10
    148a:	83 e0       	ldi	r24, 0x03	; 3
    148c:	0e 94 48 0c 	call	0x1890	; 0x1890 <write_zahl>
				}	
				//Grid anpassung
				recieved_X-=384;
    1490:	89 81       	ldd	r24, Y+1	; 0x01
    1492:	9a 81       	ldd	r25, Y+2	; 0x02
    1494:	80 58       	subi	r24, 0x80	; 128
    1496:	91 40       	sbci	r25, 0x01	; 1
    1498:	9a 83       	std	Y+2, r25	; 0x02
    149a:	89 83       	std	Y+1, r24	; 0x01
				recieved_Y-=512;				
    149c:	8b 81       	ldd	r24, Y+3	; 0x03
    149e:	9c 81       	ldd	r25, Y+4	; 0x04
    14a0:	92 50       	subi	r25, 0x02	; 2
    14a2:	9c 83       	std	Y+4, r25	; 0x04
    14a4:	8b 83       	std	Y+3, r24	; 0x03
				recieved_X=((recieved_X/5)*-1)+200;
    14a6:	89 81       	ldd	r24, Y+1	; 0x01
    14a8:	9a 81       	ldd	r25, Y+2	; 0x02
    14aa:	25 e0       	ldi	r18, 0x05	; 5
    14ac:	30 e0       	ldi	r19, 0x00	; 0
    14ae:	b9 01       	movw	r22, r18
    14b0:	0e 94 21 0f 	call	0x1e42	; 0x1e42 <__divmodhi4>
    14b4:	cb 01       	movw	r24, r22
    14b6:	9c 01       	movw	r18, r24
    14b8:	88 ec       	ldi	r24, 0xC8	; 200
    14ba:	90 e0       	ldi	r25, 0x00	; 0
    14bc:	82 1b       	sub	r24, r18
    14be:	93 0b       	sbc	r25, r19
    14c0:	9a 83       	std	Y+2, r25	; 0x02
    14c2:	89 83       	std	Y+1, r24	; 0x01
				recieved_Y=(recieved_Y/5)*-1;	
    14c4:	8b 81       	ldd	r24, Y+3	; 0x03
    14c6:	9c 81       	ldd	r25, Y+4	; 0x04
    14c8:	25 e0       	ldi	r18, 0x05	; 5
    14ca:	30 e0       	ldi	r19, 0x00	; 0
    14cc:	b9 01       	movw	r22, r18
    14ce:	0e 94 21 0f 	call	0x1e42	; 0x1e42 <__divmodhi4>
    14d2:	cb 01       	movw	r24, r22
    14d4:	91 95       	neg	r25
    14d6:	81 95       	neg	r24
    14d8:	91 09       	sbc	r25, r1
    14da:	9c 83       	std	Y+4, r25	; 0x04
    14dc:	8b 83       	std	Y+3, r24	; 0x03
				////////////////
							
				snprintf(buffer,30,"G0 X%d Y%d Z-20 F6000\n",recieved_X,recieved_Y);
    14de:	8c 81       	ldd	r24, Y+4	; 0x04
    14e0:	8f 93       	push	r24
    14e2:	8b 81       	ldd	r24, Y+3	; 0x03
    14e4:	8f 93       	push	r24
    14e6:	8a 81       	ldd	r24, Y+2	; 0x02
    14e8:	8f 93       	push	r24
    14ea:	89 81       	ldd	r24, Y+1	; 0x01
    14ec:	8f 93       	push	r24
    14ee:	8a eb       	ldi	r24, 0xBA	; 186
    14f0:	91 e0       	ldi	r25, 0x01	; 1
    14f2:	89 2f       	mov	r24, r25
    14f4:	8f 93       	push	r24
    14f6:	8a eb       	ldi	r24, 0xBA	; 186
    14f8:	91 e0       	ldi	r25, 0x01	; 1
    14fa:	8f 93       	push	r24
    14fc:	1f 92       	push	r1
    14fe:	8e e1       	ldi	r24, 0x1E	; 30
    1500:	8f 93       	push	r24
    1502:	ce 01       	movw	r24, r28
    1504:	86 57       	subi	r24, 0x76	; 118
    1506:	9f 4f       	sbci	r25, 0xFF	; 255
    1508:	29 2f       	mov	r18, r25
    150a:	2f 93       	push	r18
    150c:	8f 93       	push	r24
    150e:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <snprintf>
    1512:	8d b7       	in	r24, 0x3d	; 61
    1514:	9e b7       	in	r25, 0x3e	; 62
    1516:	0a 96       	adiw	r24, 0x0a	; 10
    1518:	0f b6       	in	r0, 0x3f	; 63
    151a:	f8 94       	cli
    151c:	de bf       	out	0x3e, r29	; 62
    151e:	0f be       	out	0x3f, r0	; 63
    1520:	cd bf       	out	0x3d, r28	; 61
				if (DIP_Switch&0x80)
    1522:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <__data_end>
    1526:	88 23       	and	r24, r24
    1528:	f4 f4       	brge	.+60     	; 0x1566 <__stack+0x467>
				{
					write_zahl(2,0,recieved_X,4,0,0);
    152a:	89 81       	ldd	r24, Y+1	; 0x01
    152c:	9a 81       	ldd	r25, Y+2	; 0x02
    152e:	09 2e       	mov	r0, r25
    1530:	00 0c       	add	r0, r0
    1532:	aa 0b       	sbc	r26, r26
    1534:	bb 0b       	sbc	r27, r27
    1536:	c1 2c       	mov	r12, r1
    1538:	e1 2c       	mov	r14, r1
    153a:	04 e0       	ldi	r16, 0x04	; 4
    153c:	9c 01       	movw	r18, r24
    153e:	ad 01       	movw	r20, r26
    1540:	60 e0       	ldi	r22, 0x00	; 0
    1542:	82 e0       	ldi	r24, 0x02	; 2
    1544:	0e 94 48 0c 	call	0x1890	; 0x1890 <write_zahl>
					write_zahl(3,0,recieved_Y,4,0,0);
    1548:	8b 81       	ldd	r24, Y+3	; 0x03
    154a:	9c 81       	ldd	r25, Y+4	; 0x04
    154c:	09 2e       	mov	r0, r25
    154e:	00 0c       	add	r0, r0
    1550:	aa 0b       	sbc	r26, r26
    1552:	bb 0b       	sbc	r27, r27
    1554:	c1 2c       	mov	r12, r1
    1556:	e1 2c       	mov	r14, r1
    1558:	04 e0       	ldi	r16, 0x04	; 4
    155a:	9c 01       	movw	r18, r24
    155c:	ad 01       	movw	r20, r26
    155e:	60 e0       	ldi	r22, 0x00	; 0
    1560:	83 e0       	ldi	r24, 0x03	; 3
    1562:	0e 94 48 0c 	call	0x1890	; 0x1890 <write_zahl>
				}
				send_to_uArm(buffer);
    1566:	ce 01       	movw	r24, r28
    1568:	86 57       	subi	r24, 0x76	; 118
    156a:	9f 4f       	sbci	r25, 0xFF	; 255
    156c:	0e 94 ad 01 	call	0x35a	; 0x35a <send_to_uArm>
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    1570:	04 c0       	rjmp	.+8      	; 0x157a <__stack+0x47b>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
    1572:	80 e0       	ldi	r24, 0x00	; 0
    1574:	91 e0       	ldi	r25, 0x01	; 1
    1576:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
				{
					write_zahl(2,0,recieved_X,4,0,0);
					write_zahl(3,0,recieved_Y,4,0,0);
				}
				send_to_uArm(buffer);
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    157a:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <uart_string1+0x4>
    157e:	81 33       	cpi	r24, 0x31	; 49
    1580:	c1 f3       	breq	.-16     	; 0x1572 <__stack+0x473>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
					
				}
				if (DIP_Switch&0x01)
    1582:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <__data_end>
    1586:	88 2f       	mov	r24, r24
    1588:	90 e0       	ldi	r25, 0x00	; 0
    158a:	81 70       	andi	r24, 0x01	; 1
    158c:	99 27       	eor	r25, r25
    158e:	89 2b       	or	r24, r25
    1590:	21 f0       	breq	.+8      	; 0x159a <__stack+0x49b>
				{
					to_uARM("M2210 F2000 T200\n");
    1592:	81 ed       	ldi	r24, 0xD1	; 209
    1594:	91 e0       	ldi	r25, 0x01	; 1
    1596:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
				}
				send_Byte_0('1');
    159a:	81 e3       	ldi	r24, 0x31	; 49
    159c:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
			}	
		}
	} //end while(1)
    15a0:	c1 c9       	rjmp	.-3198   	; 0x924 <main+0x404>

000015a2 <init_Timer0_1ms_int>:
    15a2:	cf 93       	push	r28
    15a4:	df 93       	push	r29
    15a6:	cd b7       	in	r28, 0x3d	; 61
    15a8:	de b7       	in	r29, 0x3e	; 62
    15aa:	84 e4       	ldi	r24, 0x44	; 68
    15ac:	90 e0       	ldi	r25, 0x00	; 0
    15ae:	24 e4       	ldi	r18, 0x44	; 68
    15b0:	30 e0       	ldi	r19, 0x00	; 0
    15b2:	f9 01       	movw	r30, r18
    15b4:	20 81       	ld	r18, Z
    15b6:	22 60       	ori	r18, 0x02	; 2
    15b8:	fc 01       	movw	r30, r24
    15ba:	20 83       	st	Z, r18
    15bc:	85 e4       	ldi	r24, 0x45	; 69
    15be:	90 e0       	ldi	r25, 0x00	; 0
    15c0:	25 e4       	ldi	r18, 0x45	; 69
    15c2:	30 e0       	ldi	r19, 0x00	; 0
    15c4:	f9 01       	movw	r30, r18
    15c6:	20 81       	ld	r18, Z
    15c8:	23 60       	ori	r18, 0x03	; 3
    15ca:	fc 01       	movw	r30, r24
    15cc:	20 83       	st	Z, r18
    15ce:	87 e4       	ldi	r24, 0x47	; 71
    15d0:	90 e0       	ldi	r25, 0x00	; 0
    15d2:	29 ef       	ldi	r18, 0xF9	; 249
    15d4:	fc 01       	movw	r30, r24
    15d6:	20 83       	st	Z, r18
    15d8:	8e e6       	ldi	r24, 0x6E	; 110
    15da:	90 e0       	ldi	r25, 0x00	; 0
    15dc:	2e e6       	ldi	r18, 0x6E	; 110
    15de:	30 e0       	ldi	r19, 0x00	; 0
    15e0:	f9 01       	movw	r30, r18
    15e2:	20 81       	ld	r18, Z
    15e4:	22 60       	ori	r18, 0x02	; 2
    15e6:	fc 01       	movw	r30, r24
    15e8:	20 83       	st	Z, r18
    15ea:	00 00       	nop
    15ec:	df 91       	pop	r29
    15ee:	cf 91       	pop	r28
    15f0:	08 95       	ret

000015f2 <__vector_16>:
    15f2:	1f 92       	push	r1
    15f4:	0f 92       	push	r0
    15f6:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    15fa:	0f 92       	push	r0
    15fc:	11 24       	eor	r1, r1
    15fe:	2f 93       	push	r18
    1600:	3f 93       	push	r19
    1602:	4f 93       	push	r20
    1604:	5f 93       	push	r21
    1606:	6f 93       	push	r22
    1608:	7f 93       	push	r23
    160a:	8f 93       	push	r24
    160c:	9f 93       	push	r25
    160e:	af 93       	push	r26
    1610:	bf 93       	push	r27
    1612:	ef 93       	push	r30
    1614:	ff 93       	push	r31
    1616:	cf 93       	push	r28
    1618:	df 93       	push	r29
    161a:	cd b7       	in	r28, 0x3d	; 61
    161c:	de b7       	in	r29, 0x3e	; 62
    161e:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <tick_1ms>
    1622:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <tick_1ms+0x1>
    1626:	a0 91 70 02 	lds	r26, 0x0270	; 0x800270 <tick_1ms+0x2>
    162a:	b0 91 71 02 	lds	r27, 0x0271	; 0x800271 <tick_1ms+0x3>
    162e:	01 96       	adiw	r24, 0x01	; 1
    1630:	a1 1d       	adc	r26, r1
    1632:	b1 1d       	adc	r27, r1
    1634:	80 93 6e 02 	sts	0x026E, r24	; 0x80026e <tick_1ms>
    1638:	90 93 6f 02 	sts	0x026F, r25	; 0x80026f <tick_1ms+0x1>
    163c:	a0 93 70 02 	sts	0x0270, r26	; 0x800270 <tick_1ms+0x2>
    1640:	b0 93 71 02 	sts	0x0271, r27	; 0x800271 <tick_1ms+0x3>
    1644:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <tick_1ms>
    1648:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <tick_1ms+0x1>
    164c:	a0 91 70 02 	lds	r26, 0x0270	; 0x800270 <tick_1ms+0x2>
    1650:	b0 91 71 02 	lds	r27, 0x0271	; 0x800271 <tick_1ms+0x3>
    1654:	28 ee       	ldi	r18, 0xE8	; 232
    1656:	33 e0       	ldi	r19, 0x03	; 3
    1658:	40 e0       	ldi	r20, 0x00	; 0
    165a:	50 e0       	ldi	r21, 0x00	; 0
    165c:	bc 01       	movw	r22, r24
    165e:	cd 01       	movw	r24, r26
    1660:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <__udivmodsi4>
    1664:	dc 01       	movw	r26, r24
    1666:	cb 01       	movw	r24, r22
    1668:	89 2b       	or	r24, r25
    166a:	8a 2b       	or	r24, r26
    166c:	8b 2b       	or	r24, r27
    166e:	99 f4       	brne	.+38     	; 0x1696 <__vector_16+0xa4>
    1670:	80 91 72 02 	lds	r24, 0x0272	; 0x800272 <tick_1s>
    1674:	90 91 73 02 	lds	r25, 0x0273	; 0x800273 <tick_1s+0x1>
    1678:	a0 91 74 02 	lds	r26, 0x0274	; 0x800274 <tick_1s+0x2>
    167c:	b0 91 75 02 	lds	r27, 0x0275	; 0x800275 <tick_1s+0x3>
    1680:	01 96       	adiw	r24, 0x01	; 1
    1682:	a1 1d       	adc	r26, r1
    1684:	b1 1d       	adc	r27, r1
    1686:	80 93 72 02 	sts	0x0272, r24	; 0x800272 <tick_1s>
    168a:	90 93 73 02 	sts	0x0273, r25	; 0x800273 <tick_1s+0x1>
    168e:	a0 93 74 02 	sts	0x0274, r26	; 0x800274 <tick_1s+0x2>
    1692:	b0 93 75 02 	sts	0x0275, r27	; 0x800275 <tick_1s+0x3>
    1696:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <tick_1ms_cnt>
    169a:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <tick_1ms_cnt+0x1>
    169e:	a0 91 6c 02 	lds	r26, 0x026C	; 0x80026c <tick_1ms_cnt+0x2>
    16a2:	b0 91 6d 02 	lds	r27, 0x026D	; 0x80026d <tick_1ms_cnt+0x3>
    16a6:	89 2b       	or	r24, r25
    16a8:	8a 2b       	or	r24, r26
    16aa:	8b 2b       	or	r24, r27
    16ac:	99 f0       	breq	.+38     	; 0x16d4 <__vector_16+0xe2>
    16ae:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <tick_1ms_cnt>
    16b2:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <tick_1ms_cnt+0x1>
    16b6:	a0 91 6c 02 	lds	r26, 0x026C	; 0x80026c <tick_1ms_cnt+0x2>
    16ba:	b0 91 6d 02 	lds	r27, 0x026D	; 0x80026d <tick_1ms_cnt+0x3>
    16be:	01 97       	sbiw	r24, 0x01	; 1
    16c0:	a1 09       	sbc	r26, r1
    16c2:	b1 09       	sbc	r27, r1
    16c4:	80 93 6a 02 	sts	0x026A, r24	; 0x80026a <tick_1ms_cnt>
    16c8:	90 93 6b 02 	sts	0x026B, r25	; 0x80026b <tick_1ms_cnt+0x1>
    16cc:	a0 93 6c 02 	sts	0x026C, r26	; 0x80026c <tick_1ms_cnt+0x2>
    16d0:	b0 93 6d 02 	sts	0x026D, r27	; 0x80026d <tick_1ms_cnt+0x3>
    16d4:	00 00       	nop
    16d6:	df 91       	pop	r29
    16d8:	cf 91       	pop	r28
    16da:	ff 91       	pop	r31
    16dc:	ef 91       	pop	r30
    16de:	bf 91       	pop	r27
    16e0:	af 91       	pop	r26
    16e2:	9f 91       	pop	r25
    16e4:	8f 91       	pop	r24
    16e6:	7f 91       	pop	r23
    16e8:	6f 91       	pop	r22
    16ea:	5f 91       	pop	r21
    16ec:	4f 91       	pop	r20
    16ee:	3f 91       	pop	r19
    16f0:	2f 91       	pop	r18
    16f2:	0f 90       	pop	r0
    16f4:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    16f8:	0f 90       	pop	r0
    16fa:	1f 90       	pop	r1
    16fc:	18 95       	reti

000016fe <wait_1ms>:
    16fe:	cf 93       	push	r28
    1700:	df 93       	push	r29
    1702:	00 d0       	rcall	.+0      	; 0x1704 <wait_1ms+0x6>
    1704:	00 d0       	rcall	.+0      	; 0x1706 <wait_1ms+0x8>
    1706:	cd b7       	in	r28, 0x3d	; 61
    1708:	de b7       	in	r29, 0x3e	; 62
    170a:	69 83       	std	Y+1, r22	; 0x01
    170c:	7a 83       	std	Y+2, r23	; 0x02
    170e:	8b 83       	std	Y+3, r24	; 0x03
    1710:	9c 83       	std	Y+4, r25	; 0x04
    1712:	89 81       	ldd	r24, Y+1	; 0x01
    1714:	9a 81       	ldd	r25, Y+2	; 0x02
    1716:	ab 81       	ldd	r26, Y+3	; 0x03
    1718:	bc 81       	ldd	r27, Y+4	; 0x04
    171a:	89 2b       	or	r24, r25
    171c:	8a 2b       	or	r24, r26
    171e:	8b 2b       	or	r24, r27
    1720:	69 f0       	breq	.+26     	; 0x173c <wait_1ms+0x3e>
    1722:	89 81       	ldd	r24, Y+1	; 0x01
    1724:	9a 81       	ldd	r25, Y+2	; 0x02
    1726:	ab 81       	ldd	r26, Y+3	; 0x03
    1728:	bc 81       	ldd	r27, Y+4	; 0x04
    172a:	80 93 6a 02 	sts	0x026A, r24	; 0x80026a <tick_1ms_cnt>
    172e:	90 93 6b 02 	sts	0x026B, r25	; 0x80026b <tick_1ms_cnt+0x1>
    1732:	a0 93 6c 02 	sts	0x026C, r26	; 0x80026c <tick_1ms_cnt+0x2>
    1736:	b0 93 6d 02 	sts	0x026D, r27	; 0x80026d <tick_1ms_cnt+0x3>
    173a:	0c c0       	rjmp	.+24     	; 0x1754 <wait_1ms+0x56>
    173c:	81 e0       	ldi	r24, 0x01	; 1
    173e:	90 e0       	ldi	r25, 0x00	; 0
    1740:	a0 e0       	ldi	r26, 0x00	; 0
    1742:	b0 e0       	ldi	r27, 0x00	; 0
    1744:	80 93 6a 02 	sts	0x026A, r24	; 0x80026a <tick_1ms_cnt>
    1748:	90 93 6b 02 	sts	0x026B, r25	; 0x80026b <tick_1ms_cnt+0x1>
    174c:	a0 93 6c 02 	sts	0x026C, r26	; 0x80026c <tick_1ms_cnt+0x2>
    1750:	b0 93 6d 02 	sts	0x026D, r27	; 0x80026d <tick_1ms_cnt+0x3>
    1754:	00 00       	nop
    1756:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <tick_1ms_cnt>
    175a:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <tick_1ms_cnt+0x1>
    175e:	a0 91 6c 02 	lds	r26, 0x026C	; 0x80026c <tick_1ms_cnt+0x2>
    1762:	b0 91 6d 02 	lds	r27, 0x026D	; 0x80026d <tick_1ms_cnt+0x3>
    1766:	89 2b       	or	r24, r25
    1768:	8a 2b       	or	r24, r26
    176a:	8b 2b       	or	r24, r27
    176c:	a1 f7       	brne	.-24     	; 0x1756 <wait_1ms+0x58>
    176e:	00 00       	nop
    1770:	0f 90       	pop	r0
    1772:	0f 90       	pop	r0
    1774:	0f 90       	pop	r0
    1776:	0f 90       	pop	r0
    1778:	df 91       	pop	r29
    177a:	cf 91       	pop	r28
    177c:	08 95       	ret

0000177e <delay_nop>:
    177e:	cf 93       	push	r28
    1780:	df 93       	push	r29
    1782:	00 d0       	rcall	.+0      	; 0x1784 <delay_nop+0x6>
    1784:	cd b7       	in	r28, 0x3d	; 61
    1786:	de b7       	in	r29, 0x3e	; 62
    1788:	8a 83       	std	Y+2, r24	; 0x02
    178a:	19 82       	std	Y+1, r1	; 0x01
    178c:	04 c0       	rjmp	.+8      	; 0x1796 <delay_nop+0x18>
    178e:	00 00       	nop
    1790:	89 81       	ldd	r24, Y+1	; 0x01
    1792:	8f 5f       	subi	r24, 0xFF	; 255
    1794:	89 83       	std	Y+1, r24	; 0x01
    1796:	99 81       	ldd	r25, Y+1	; 0x01
    1798:	8a 81       	ldd	r24, Y+2	; 0x02
    179a:	98 17       	cp	r25, r24
    179c:	c0 f3       	brcs	.-16     	; 0x178e <delay_nop+0x10>
    179e:	00 00       	nop
    17a0:	0f 90       	pop	r0
    17a2:	0f 90       	pop	r0
    17a4:	df 91       	pop	r29
    17a6:	cf 91       	pop	r28
    17a8:	08 95       	ret

000017aa <write_lcd_f>:
    17aa:	91 e0       	ldi	r25, 0x01	; 1
    17ac:	90 93 76 02 	sts	0x0276, r25	; 0x800276 <write_RGB_LCD_activ>
    17b0:	40 9a       	sbi	0x08, 0	; 8
    17b2:	41 98       	cbi	0x08, 1	; 8
    17b4:	41 98       	cbi	0x08, 1	; 8
    17b6:	41 9a       	sbi	0x08, 1	; 8
    17b8:	41 9a       	sbi	0x08, 1	; 8
    17ba:	41 98       	cbi	0x08, 1	; 8
    17bc:	41 98       	cbi	0x08, 1	; 8
    17be:	41 9a       	sbi	0x08, 1	; 8
    17c0:	41 9a       	sbi	0x08, 1	; 8
    17c2:	41 98       	cbi	0x08, 1	; 8
    17c4:	41 98       	cbi	0x08, 1	; 8
    17c6:	41 9a       	sbi	0x08, 1	; 8
    17c8:	41 9a       	sbi	0x08, 1	; 8
    17ca:	41 98       	cbi	0x08, 1	; 8
    17cc:	41 98       	cbi	0x08, 1	; 8
    17ce:	41 9a       	sbi	0x08, 1	; 8
    17d0:	41 9a       	sbi	0x08, 1	; 8
    17d2:	41 98       	cbi	0x08, 1	; 8
    17d4:	41 98       	cbi	0x08, 1	; 8
    17d6:	41 9a       	sbi	0x08, 1	; 8
    17d8:	40 98       	cbi	0x08, 0	; 8
    17da:	41 98       	cbi	0x08, 1	; 8
    17dc:	41 98       	cbi	0x08, 1	; 8
    17de:	41 9a       	sbi	0x08, 1	; 8
    17e0:	83 34       	cpi	r24, 0x43	; 67
    17e2:	a9 f1       	breq	.+106    	; 0x184e <write_lcd_f+0xa4>
    17e4:	40 9a       	sbi	0x08, 0	; 8
    17e6:	41 98       	cbi	0x08, 1	; 8
    17e8:	41 98       	cbi	0x08, 1	; 8
    17ea:	41 9a       	sbi	0x08, 1	; 8
    17ec:	40 98       	cbi	0x08, 0	; 8
    17ee:	41 98       	cbi	0x08, 1	; 8
    17f0:	41 98       	cbi	0x08, 1	; 8
    17f2:	41 9a       	sbi	0x08, 1	; 8
    17f4:	84 e0       	ldi	r24, 0x04	; 4
    17f6:	41 98       	cbi	0x08, 1	; 8
    17f8:	60 ff       	sbrs	r22, 0
    17fa:	27 c0       	rjmp	.+78     	; 0x184a <write_lcd_f+0xa0>
    17fc:	40 9a       	sbi	0x08, 0	; 8
    17fe:	66 95       	lsr	r22
    1800:	41 98       	cbi	0x08, 1	; 8
    1802:	41 9a       	sbi	0x08, 1	; 8
    1804:	81 50       	subi	r24, 0x01	; 1
    1806:	b9 f7       	brne	.-18     	; 0x17f6 <write_lcd_f+0x4c>
    1808:	40 98       	cbi	0x08, 0	; 8
    180a:	84 e0       	ldi	r24, 0x04	; 4
    180c:	41 98       	cbi	0x08, 1	; 8
    180e:	41 98       	cbi	0x08, 1	; 8
    1810:	41 9a       	sbi	0x08, 1	; 8
    1812:	81 50       	subi	r24, 0x01	; 1
    1814:	d9 f7       	brne	.-10     	; 0x180c <write_lcd_f+0x62>
    1816:	84 e0       	ldi	r24, 0x04	; 4
    1818:	41 98       	cbi	0x08, 1	; 8
    181a:	60 ff       	sbrs	r22, 0
    181c:	14 c0       	rjmp	.+40     	; 0x1846 <write_lcd_f+0x9c>
    181e:	40 9a       	sbi	0x08, 0	; 8
    1820:	66 95       	lsr	r22
    1822:	41 98       	cbi	0x08, 1	; 8
    1824:	41 9a       	sbi	0x08, 1	; 8
    1826:	81 50       	subi	r24, 0x01	; 1
    1828:	b9 f7       	brne	.-18     	; 0x1818 <write_lcd_f+0x6e>
    182a:	40 98       	cbi	0x08, 0	; 8
    182c:	84 e0       	ldi	r24, 0x04	; 4
    182e:	41 98       	cbi	0x08, 1	; 8
    1830:	41 98       	cbi	0x08, 1	; 8
    1832:	41 9a       	sbi	0x08, 1	; 8
    1834:	81 50       	subi	r24, 0x01	; 1
    1836:	d9 f7       	brne	.-10     	; 0x182e <write_lcd_f+0x84>
    1838:	84 e1       	ldi	r24, 0x14	; 20
    183a:	40 9a       	sbi	0x08, 0	; 8
    183c:	81 50       	subi	r24, 0x01	; 1
    183e:	e9 f7       	brne	.-6      	; 0x183a <write_lcd_f+0x90>
    1840:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <write_RGB_LCD_activ>
    1844:	08 95       	ret
    1846:	40 98       	cbi	0x08, 0	; 8
    1848:	eb cf       	rjmp	.-42     	; 0x1820 <write_lcd_f+0x76>
    184a:	40 98       	cbi	0x08, 0	; 8
    184c:	d8 cf       	rjmp	.-80     	; 0x17fe <write_lcd_f+0x54>
    184e:	40 98       	cbi	0x08, 0	; 8
    1850:	ca cf       	rjmp	.-108    	; 0x17e6 <write_lcd_f+0x3c>

00001852 <write_text_ram>:
    1852:	0f 93       	push	r16
    1854:	1f 93       	push	r17
    1856:	df 93       	push	r29
    1858:	8a 01       	movw	r16, r20
    185a:	90 e2       	ldi	r25, 0x20	; 32
    185c:	89 9f       	mul	r24, r25
    185e:	60 0d       	add	r22, r0
    1860:	11 24       	eor	r1, r1
    1862:	60 68       	ori	r22, 0x80	; 128
    1864:	83 e4       	ldi	r24, 0x43	; 67
    1866:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <write_lcd_f>
    186a:	f8 01       	movw	r30, r16
    186c:	60 81       	ld	r22, Z
    186e:	66 23       	and	r22, r22
    1870:	59 f0       	breq	.+22     	; 0x1888 <write_text_ram+0x36>
    1872:	d0 e0       	ldi	r29, 0x00	; 0
    1874:	df 5f       	subi	r29, 0xFF	; 255
    1876:	84 e4       	ldi	r24, 0x44	; 68
    1878:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <write_lcd_f>
    187c:	f8 01       	movw	r30, r16
    187e:	ed 0f       	add	r30, r29
    1880:	f1 1d       	adc	r31, r1
    1882:	60 81       	ld	r22, Z
    1884:	61 11       	cpse	r22, r1
    1886:	f6 cf       	rjmp	.-20     	; 0x1874 <write_text_ram+0x22>
    1888:	df 91       	pop	r29
    188a:	1f 91       	pop	r17
    188c:	0f 91       	pop	r16
    188e:	08 95       	ret

00001890 <write_zahl>:
    1890:	2f 92       	push	r2
    1892:	3f 92       	push	r3
    1894:	4f 92       	push	r4
    1896:	5f 92       	push	r5
    1898:	6f 92       	push	r6
    189a:	7f 92       	push	r7
    189c:	8f 92       	push	r8
    189e:	9f 92       	push	r9
    18a0:	af 92       	push	r10
    18a2:	bf 92       	push	r11
    18a4:	cf 92       	push	r12
    18a6:	df 92       	push	r13
    18a8:	ef 92       	push	r14
    18aa:	ff 92       	push	r15
    18ac:	0f 93       	push	r16
    18ae:	1f 93       	push	r17
    18b0:	cf 93       	push	r28
    18b2:	df 93       	push	r29
    18b4:	cd b7       	in	r28, 0x3d	; 61
    18b6:	de b7       	in	r29, 0x3e	; 62
    18b8:	63 97       	sbiw	r28, 0x13	; 19
    18ba:	0f b6       	in	r0, 0x3f	; 63
    18bc:	f8 94       	cli
    18be:	de bf       	out	0x3e, r29	; 62
    18c0:	0f be       	out	0x3f, r0	; 63
    18c2:	cd bf       	out	0x3d, r28	; 61
    18c4:	8a 8b       	std	Y+18, r24	; 0x12
    18c6:	6b 8b       	std	Y+19, r22	; 0x13
    18c8:	29 01       	movw	r4, r18
    18ca:	3a 01       	movw	r6, r20
    18cc:	c8 8a       	std	Y+16, r12	; 0x10
    18ce:	04 36       	cpi	r16, 0x64	; 100
    18d0:	08 f4       	brcc	.+2      	; 0x18d4 <write_zahl+0x44>
    18d2:	bd c0       	rjmp	.+378    	; 0x1a4e <write_zahl+0x1be>
    18d4:	04 56       	subi	r16, 0x64	; 100
    18d6:	19 8a       	std	Y+17, r1	; 0x11
    18d8:	0b 30       	cpi	r16, 0x0B	; 11
    18da:	08 f0       	brcs	.+2      	; 0x18de <write_zahl+0x4e>
    18dc:	0a e0       	ldi	r16, 0x0A	; 10
    18de:	ef 86       	std	Y+15, r14	; 0x0f
    18e0:	88 89       	ldd	r24, Y+16	; 0x10
    18e2:	8e 15       	cp	r24, r14
    18e4:	08 f4       	brcc	.+2      	; 0x18e8 <write_zahl+0x58>
    18e6:	8f 87       	std	Y+15, r24	; 0x0f
    18e8:	20 2e       	mov	r2, r16
    18ea:	31 2c       	mov	r3, r1
    18ec:	c1 01       	movw	r24, r2
    18ee:	ef 85       	ldd	r30, Y+15	; 0x0f
    18f0:	8e 0f       	add	r24, r30
    18f2:	91 1d       	adc	r25, r1
    18f4:	0b 97       	sbiw	r24, 0x0b	; 11
    18f6:	1c f0       	brlt	.+6      	; 0x18fe <write_zahl+0x6e>
    18f8:	8a e0       	ldi	r24, 0x0A	; 10
    18fa:	80 1b       	sub	r24, r16
    18fc:	8f 87       	std	Y+15, r24	; 0x0f
    18fe:	c3 01       	movw	r24, r6
    1900:	b2 01       	movw	r22, r4
    1902:	2a e0       	ldi	r18, 0x0A	; 10
    1904:	30 e0       	ldi	r19, 0x00	; 0
    1906:	40 e0       	ldi	r20, 0x00	; 0
    1908:	50 e0       	ldi	r21, 0x00	; 0
    190a:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <__udivmodsi4>
    190e:	60 5d       	subi	r22, 0xD0	; 208
    1910:	6c 87       	std	Y+12, r22	; 0x0c
    1912:	1a e0       	ldi	r17, 0x0A	; 10
    1914:	3a e0       	ldi	r19, 0x0A	; 10
    1916:	c3 2e       	mov	r12, r19
    1918:	d1 2c       	mov	r13, r1
    191a:	e1 2c       	mov	r14, r1
    191c:	f1 2c       	mov	r15, r1
    191e:	4a e0       	ldi	r20, 0x0A	; 10
    1920:	84 2e       	mov	r8, r20
    1922:	91 2c       	mov	r9, r1
    1924:	a1 2c       	mov	r10, r1
    1926:	b1 2c       	mov	r11, r1
    1928:	81 e0       	ldi	r24, 0x01	; 1
    192a:	90 e0       	ldi	r25, 0x00	; 0
    192c:	8c 0f       	add	r24, r28
    192e:	9d 1f       	adc	r25, r29
    1930:	81 0f       	add	r24, r17
    1932:	91 1d       	adc	r25, r1
    1934:	9e 87       	std	Y+14, r25	; 0x0e
    1936:	8d 87       	std	Y+13, r24	; 0x0d
    1938:	c3 01       	movw	r24, r6
    193a:	b2 01       	movw	r22, r4
    193c:	a7 01       	movw	r20, r14
    193e:	96 01       	movw	r18, r12
    1940:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <__udivmodsi4>
    1944:	ca 01       	movw	r24, r20
    1946:	b9 01       	movw	r22, r18
    1948:	a5 01       	movw	r20, r10
    194a:	94 01       	movw	r18, r8
    194c:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <__udivmodsi4>
    1950:	60 5d       	subi	r22, 0xD0	; 208
    1952:	ed 85       	ldd	r30, Y+13	; 0x0d
    1954:	fe 85       	ldd	r31, Y+14	; 0x0e
    1956:	60 83       	st	Z, r22
    1958:	cc 0c       	add	r12, r12
    195a:	dd 1c       	adc	r13, r13
    195c:	ee 1c       	adc	r14, r14
    195e:	ff 1c       	adc	r15, r15
    1960:	d7 01       	movw	r26, r14
    1962:	c6 01       	movw	r24, r12
    1964:	88 0f       	add	r24, r24
    1966:	99 1f       	adc	r25, r25
    1968:	aa 1f       	adc	r26, r26
    196a:	bb 1f       	adc	r27, r27
    196c:	88 0f       	add	r24, r24
    196e:	99 1f       	adc	r25, r25
    1970:	aa 1f       	adc	r26, r26
    1972:	bb 1f       	adc	r27, r27
    1974:	c8 0e       	add	r12, r24
    1976:	d9 1e       	adc	r13, r25
    1978:	ea 1e       	adc	r14, r26
    197a:	fb 1e       	adc	r15, r27
    197c:	11 50       	subi	r17, 0x01	; 1
    197e:	a0 f6       	brcc	.-88     	; 0x1928 <write_zahl+0x98>
    1980:	2c e0       	ldi	r18, 0x0C	; 12
    1982:	f8 89       	ldd	r31, Y+16	; 0x10
    1984:	2f 1b       	sub	r18, r31
    1986:	82 2f       	mov	r24, r18
    1988:	80 1b       	sub	r24, r16
    198a:	00 23       	and	r16, r16
    198c:	09 f4       	brne	.+2      	; 0x1990 <write_zahl+0x100>
    198e:	85 c0       	rjmp	.+266    	; 0x1a9a <write_zahl+0x20a>
    1990:	fe 01       	movw	r30, r28
    1992:	31 96       	adiw	r30, 0x01	; 1
    1994:	a1 e0       	ldi	r26, 0x01	; 1
    1996:	b0 e0       	ldi	r27, 0x00	; 0
    1998:	ac 0f       	add	r26, r28
    199a:	bd 1f       	adc	r27, r29
    199c:	a8 0f       	add	r26, r24
    199e:	b1 1d       	adc	r27, r1
    19a0:	9c 91       	ld	r25, X
    19a2:	91 93       	st	Z+, r25
    19a4:	8f 5f       	subi	r24, 0xFF	; 255
    19a6:	28 13       	cpse	r18, r24
    19a8:	f5 cf       	rjmp	.-22     	; 0x1994 <write_zahl+0x104>
    19aa:	8f 85       	ldd	r24, Y+15	; 0x0f
    19ac:	81 11       	cpse	r24, r1
    19ae:	52 c0       	rjmp	.+164    	; 0x1a54 <write_zahl+0x1c4>
    19b0:	f1 01       	movw	r30, r2
    19b2:	81 e0       	ldi	r24, 0x01	; 1
    19b4:	90 e0       	ldi	r25, 0x00	; 0
    19b6:	8c 0f       	add	r24, r28
    19b8:	9d 1f       	adc	r25, r29
    19ba:	e8 0f       	add	r30, r24
    19bc:	f9 1f       	adc	r31, r25
    19be:	10 82       	st	Z, r1
    19c0:	99 89       	ldd	r25, Y+17	; 0x11
    19c2:	99 23       	and	r25, r25
    19c4:	21 f1       	breq	.+72     	; 0x1a0e <write_zahl+0x17e>
    19c6:	89 81       	ldd	r24, Y+1	; 0x01
    19c8:	80 33       	cpi	r24, 0x30	; 48
    19ca:	09 f5       	brne	.+66     	; 0x1a0e <write_zahl+0x17e>
    19cc:	a1 01       	movw	r20, r2
    19ce:	41 50       	subi	r20, 0x01	; 1
    19d0:	51 09       	sbc	r21, r1
    19d2:	14 16       	cp	r1, r20
    19d4:	15 06       	cpc	r1, r21
    19d6:	dc f4       	brge	.+54     	; 0x1a0e <write_zahl+0x17e>
    19d8:	80 e0       	ldi	r24, 0x00	; 0
    19da:	90 e0       	ldi	r25, 0x00	; 0
    19dc:	20 e0       	ldi	r18, 0x00	; 0
    19de:	60 e2       	ldi	r22, 0x20	; 32
    19e0:	03 c0       	rjmp	.+6      	; 0x19e8 <write_zahl+0x158>
    19e2:	84 17       	cp	r24, r20
    19e4:	95 07       	cpc	r25, r21
    19e6:	9c f4       	brge	.+38     	; 0x1a0e <write_zahl+0x17e>
    19e8:	2f 5f       	subi	r18, 0xFF	; 255
    19ea:	e1 e0       	ldi	r30, 0x01	; 1
    19ec:	f0 e0       	ldi	r31, 0x00	; 0
    19ee:	ec 0f       	add	r30, r28
    19f0:	fd 1f       	adc	r31, r29
    19f2:	e8 0f       	add	r30, r24
    19f4:	f9 1f       	adc	r31, r25
    19f6:	60 83       	st	Z, r22
    19f8:	82 2f       	mov	r24, r18
    19fa:	90 e0       	ldi	r25, 0x00	; 0
    19fc:	e1 e0       	ldi	r30, 0x01	; 1
    19fe:	f0 e0       	ldi	r31, 0x00	; 0
    1a00:	ec 0f       	add	r30, r28
    1a02:	fd 1f       	adc	r31, r29
    1a04:	e8 0f       	add	r30, r24
    1a06:	f9 1f       	adc	r31, r25
    1a08:	30 81       	ld	r19, Z
    1a0a:	30 33       	cpi	r19, 0x30	; 48
    1a0c:	51 f3       	breq	.-44     	; 0x19e2 <write_zahl+0x152>
    1a0e:	ae 01       	movw	r20, r28
    1a10:	4f 5f       	subi	r20, 0xFF	; 255
    1a12:	5f 4f       	sbci	r21, 0xFF	; 255
    1a14:	6b 89       	ldd	r22, Y+19	; 0x13
    1a16:	8a 89       	ldd	r24, Y+18	; 0x12
    1a18:	0e 94 29 0c 	call	0x1852	; 0x1852 <write_text_ram>
    1a1c:	63 96       	adiw	r28, 0x13	; 19
    1a1e:	0f b6       	in	r0, 0x3f	; 63
    1a20:	f8 94       	cli
    1a22:	de bf       	out	0x3e, r29	; 62
    1a24:	0f be       	out	0x3f, r0	; 63
    1a26:	cd bf       	out	0x3d, r28	; 61
    1a28:	df 91       	pop	r29
    1a2a:	cf 91       	pop	r28
    1a2c:	1f 91       	pop	r17
    1a2e:	0f 91       	pop	r16
    1a30:	ff 90       	pop	r15
    1a32:	ef 90       	pop	r14
    1a34:	df 90       	pop	r13
    1a36:	cf 90       	pop	r12
    1a38:	bf 90       	pop	r11
    1a3a:	af 90       	pop	r10
    1a3c:	9f 90       	pop	r9
    1a3e:	8f 90       	pop	r8
    1a40:	7f 90       	pop	r7
    1a42:	6f 90       	pop	r6
    1a44:	5f 90       	pop	r5
    1a46:	4f 90       	pop	r4
    1a48:	3f 90       	pop	r3
    1a4a:	2f 90       	pop	r2
    1a4c:	08 95       	ret
    1a4e:	21 e0       	ldi	r18, 0x01	; 1
    1a50:	29 8b       	std	Y+17, r18	; 0x11
    1a52:	42 cf       	rjmp	.-380    	; 0x18d8 <write_zahl+0x48>
    1a54:	0f 5f       	subi	r16, 0xFF	; 255
    1a56:	8e e2       	ldi	r24, 0x2E	; 46
    1a58:	e1 e0       	ldi	r30, 0x01	; 1
    1a5a:	f0 e0       	ldi	r31, 0x00	; 0
    1a5c:	ec 0f       	add	r30, r28
    1a5e:	fd 1f       	adc	r31, r29
    1a60:	e2 0d       	add	r30, r2
    1a62:	f3 1d       	adc	r31, r3
    1a64:	80 83       	st	Z, r24
    1a66:	e0 2f       	mov	r30, r16
    1a68:	20 1b       	sub	r18, r16
    1a6a:	82 2f       	mov	r24, r18
    1a6c:	8e 0f       	add	r24, r30
    1a6e:	a1 e0       	ldi	r26, 0x01	; 1
    1a70:	b0 e0       	ldi	r27, 0x00	; 0
    1a72:	ac 0f       	add	r26, r28
    1a74:	bd 1f       	adc	r27, r29
    1a76:	a8 0f       	add	r26, r24
    1a78:	b1 1d       	adc	r27, r1
    1a7a:	8c 91       	ld	r24, X
    1a7c:	a1 e0       	ldi	r26, 0x01	; 1
    1a7e:	b0 e0       	ldi	r27, 0x00	; 0
    1a80:	ac 0f       	add	r26, r28
    1a82:	bd 1f       	adc	r27, r29
    1a84:	ae 0f       	add	r26, r30
    1a86:	b1 1d       	adc	r27, r1
    1a88:	8c 93       	st	X, r24
    1a8a:	ef 5f       	subi	r30, 0xFF	; 255
    1a8c:	8e 2f       	mov	r24, r30
    1a8e:	80 1b       	sub	r24, r16
    1a90:	9f 85       	ldd	r25, Y+15	; 0x0f
    1a92:	89 17       	cp	r24, r25
    1a94:	50 f3       	brcs	.-44     	; 0x1a6a <write_zahl+0x1da>
    1a96:	f0 e0       	ldi	r31, 0x00	; 0
    1a98:	8c cf       	rjmp	.-232    	; 0x19b2 <write_zahl+0x122>
    1a9a:	ef 85       	ldd	r30, Y+15	; 0x0f
    1a9c:	ee 23       	and	r30, r30
    1a9e:	21 f0       	breq	.+8      	; 0x1aa8 <write_zahl+0x218>
    1aa0:	8e e2       	ldi	r24, 0x2E	; 46
    1aa2:	89 83       	std	Y+1, r24	; 0x01
    1aa4:	01 e0       	ldi	r16, 0x01	; 1
    1aa6:	df cf       	rjmp	.-66     	; 0x1a66 <write_zahl+0x1d6>
    1aa8:	e0 e0       	ldi	r30, 0x00	; 0
    1aaa:	f0 e0       	ldi	r31, 0x00	; 0
    1aac:	82 cf       	rjmp	.-252    	; 0x19b2 <write_zahl+0x122>

00001aae <lcd_init>:
    1aae:	df 93       	push	r29
    1ab0:	38 9a       	sbi	0x07, 0	; 7
    1ab2:	39 9a       	sbi	0x07, 1	; 7
    1ab4:	d2 e3       	ldi	r29, 0x32	; 50
    1ab6:	88 e7       	ldi	r24, 0x78	; 120
    1ab8:	0e 94 bf 0b 	call	0x177e	; 0x177e <delay_nop>
    1abc:	d1 50       	subi	r29, 0x01	; 1
    1abe:	d9 f7       	brne	.-10     	; 0x1ab6 <lcd_init+0x8>
    1ac0:	64 e3       	ldi	r22, 0x34	; 52
    1ac2:	83 e4       	ldi	r24, 0x43	; 67
    1ac4:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <write_lcd_f>
    1ac8:	64 e3       	ldi	r22, 0x34	; 52
    1aca:	83 e4       	ldi	r24, 0x43	; 67
    1acc:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <write_lcd_f>
    1ad0:	69 e0       	ldi	r22, 0x09	; 9
    1ad2:	83 e4       	ldi	r24, 0x43	; 67
    1ad4:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <write_lcd_f>
    1ad8:	60 e3       	ldi	r22, 0x30	; 48
    1ada:	83 e4       	ldi	r24, 0x43	; 67
    1adc:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <write_lcd_f>
    1ae0:	6c e0       	ldi	r22, 0x0C	; 12
    1ae2:	83 e4       	ldi	r24, 0x43	; 67
    1ae4:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <write_lcd_f>
    1ae8:	61 e0       	ldi	r22, 0x01	; 1
    1aea:	83 e4       	ldi	r24, 0x43	; 67
    1aec:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <write_lcd_f>
    1af0:	d8 e0       	ldi	r29, 0x08	; 8
    1af2:	88 e7       	ldi	r24, 0x78	; 120
    1af4:	0e 94 bf 0b 	call	0x177e	; 0x177e <delay_nop>
    1af8:	d1 50       	subi	r29, 0x01	; 1
    1afa:	d9 f7       	brne	.-10     	; 0x1af2 <lcd_init+0x44>
    1afc:	67 e0       	ldi	r22, 0x07	; 7
    1afe:	83 e4       	ldi	r24, 0x43	; 67
    1b00:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <write_lcd_f>
    1b04:	df 91       	pop	r29
    1b06:	0c 94 d1 0a 	jmp	0x15a2	; 0x15a2 <init_Timer0_1ms_int>

00001b0a <clear_lcd>:
    1b0a:	df 93       	push	r29
    1b0c:	61 e0       	ldi	r22, 0x01	; 1
    1b0e:	83 e4       	ldi	r24, 0x43	; 67
    1b10:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <write_lcd_f>
    1b14:	d8 e0       	ldi	r29, 0x08	; 8
    1b16:	88 e7       	ldi	r24, 0x78	; 120
    1b18:	0e 94 bf 0b 	call	0x177e	; 0x177e <delay_nop>
    1b1c:	d1 50       	subi	r29, 0x01	; 1
    1b1e:	d9 f7       	brne	.-10     	; 0x1b16 <clear_lcd+0xc>
    1b20:	df 91       	pop	r29
    1b22:	08 95       	ret

00001b24 <LED_Show>:
    1b24:	cf 93       	push	r28
    1b26:	df 93       	push	r29
    1b28:	1f 92       	push	r1
    1b2a:	cd b7       	in	r28, 0x3d	; 61
    1b2c:	de b7       	in	r29, 0x3e	; 62
    1b2e:	85 e2       	ldi	r24, 0x25	; 37
    1b30:	90 e0       	ldi	r25, 0x00	; 0
    1b32:	21 e0       	ldi	r18, 0x01	; 1
    1b34:	fc 01       	movw	r30, r24
    1b36:	20 83       	st	Z, r18
    1b38:	19 82       	std	Y+1, r1	; 0x01
    1b3a:	17 c0       	rjmp	.+46     	; 0x1b6a <LED_Show+0x46>
    1b3c:	62 e3       	ldi	r22, 0x32	; 50
    1b3e:	70 e0       	ldi	r23, 0x00	; 0
    1b40:	80 e0       	ldi	r24, 0x00	; 0
    1b42:	90 e0       	ldi	r25, 0x00	; 0
    1b44:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <wait_1ms>
    1b48:	85 e2       	ldi	r24, 0x25	; 37
    1b4a:	90 e0       	ldi	r25, 0x00	; 0
    1b4c:	29 81       	ldd	r18, Y+1	; 0x01
    1b4e:	42 2f       	mov	r20, r18
    1b50:	50 e0       	ldi	r21, 0x00	; 0
    1b52:	21 e0       	ldi	r18, 0x01	; 1
    1b54:	30 e0       	ldi	r19, 0x00	; 0
    1b56:	02 c0       	rjmp	.+4      	; 0x1b5c <LED_Show+0x38>
    1b58:	22 0f       	add	r18, r18
    1b5a:	33 1f       	adc	r19, r19
    1b5c:	4a 95       	dec	r20
    1b5e:	e2 f7       	brpl	.-8      	; 0x1b58 <LED_Show+0x34>
    1b60:	fc 01       	movw	r30, r24
    1b62:	20 83       	st	Z, r18
    1b64:	89 81       	ldd	r24, Y+1	; 0x01
    1b66:	8f 5f       	subi	r24, 0xFF	; 255
    1b68:	89 83       	std	Y+1, r24	; 0x01
    1b6a:	89 81       	ldd	r24, Y+1	; 0x01
    1b6c:	88 30       	cpi	r24, 0x08	; 8
    1b6e:	30 f3       	brcs	.-52     	; 0x1b3c <LED_Show+0x18>
    1b70:	85 e2       	ldi	r24, 0x25	; 37
    1b72:	90 e0       	ldi	r25, 0x00	; 0
    1b74:	20 e8       	ldi	r18, 0x80	; 128
    1b76:	fc 01       	movw	r30, r24
    1b78:	20 83       	st	Z, r18
    1b7a:	19 82       	std	Y+1, r1	; 0x01
    1b7c:	17 c0       	rjmp	.+46     	; 0x1bac <LED_Show+0x88>
    1b7e:	62 e3       	ldi	r22, 0x32	; 50
    1b80:	70 e0       	ldi	r23, 0x00	; 0
    1b82:	80 e0       	ldi	r24, 0x00	; 0
    1b84:	90 e0       	ldi	r25, 0x00	; 0
    1b86:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <wait_1ms>
    1b8a:	85 e2       	ldi	r24, 0x25	; 37
    1b8c:	90 e0       	ldi	r25, 0x00	; 0
    1b8e:	29 81       	ldd	r18, Y+1	; 0x01
    1b90:	42 2f       	mov	r20, r18
    1b92:	50 e0       	ldi	r21, 0x00	; 0
    1b94:	20 e8       	ldi	r18, 0x80	; 128
    1b96:	30 e0       	ldi	r19, 0x00	; 0
    1b98:	02 c0       	rjmp	.+4      	; 0x1b9e <LED_Show+0x7a>
    1b9a:	35 95       	asr	r19
    1b9c:	27 95       	ror	r18
    1b9e:	4a 95       	dec	r20
    1ba0:	e2 f7       	brpl	.-8      	; 0x1b9a <LED_Show+0x76>
    1ba2:	fc 01       	movw	r30, r24
    1ba4:	20 83       	st	Z, r18
    1ba6:	89 81       	ldd	r24, Y+1	; 0x01
    1ba8:	8f 5f       	subi	r24, 0xFF	; 255
    1baa:	89 83       	std	Y+1, r24	; 0x01
    1bac:	89 81       	ldd	r24, Y+1	; 0x01
    1bae:	88 30       	cpi	r24, 0x08	; 8
    1bb0:	30 f3       	brcs	.-52     	; 0x1b7e <LED_Show+0x5a>
    1bb2:	64 e6       	ldi	r22, 0x64	; 100
    1bb4:	70 e0       	ldi	r23, 0x00	; 0
    1bb6:	80 e0       	ldi	r24, 0x00	; 0
    1bb8:	90 e0       	ldi	r25, 0x00	; 0
    1bba:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <wait_1ms>
    1bbe:	85 e2       	ldi	r24, 0x25	; 37
    1bc0:	90 e0       	ldi	r25, 0x00	; 0
    1bc2:	fc 01       	movw	r30, r24
    1bc4:	10 82       	st	Z, r1
    1bc6:	00 00       	nop
    1bc8:	0f 90       	pop	r0
    1bca:	df 91       	pop	r29
    1bcc:	cf 91       	pop	r28
    1bce:	08 95       	ret

00001bd0 <init_BT_CAR_V2_0>:
    1bd0:	cf 93       	push	r28
    1bd2:	df 93       	push	r29
    1bd4:	cd b7       	in	r28, 0x3d	; 61
    1bd6:	de b7       	in	r29, 0x3e	; 62
    1bd8:	81 e2       	ldi	r24, 0x21	; 33
    1bda:	90 e0       	ldi	r25, 0x00	; 0
    1bdc:	20 e6       	ldi	r18, 0x60	; 96
    1bde:	fc 01       	movw	r30, r24
    1be0:	20 83       	st	Z, r18
    1be2:	84 e2       	ldi	r24, 0x24	; 36
    1be4:	90 e0       	ldi	r25, 0x00	; 0
    1be6:	2f ef       	ldi	r18, 0xFF	; 255
    1be8:	fc 01       	movw	r30, r24
    1bea:	20 83       	st	Z, r18
    1bec:	8a e2       	ldi	r24, 0x2A	; 42
    1bee:	90 e0       	ldi	r25, 0x00	; 0
    1bf0:	2c ef       	ldi	r18, 0xFC	; 252
    1bf2:	fc 01       	movw	r30, r24
    1bf4:	20 83       	st	Z, r18
    1bf6:	78 94       	sei
    1bf8:	0e 94 57 0d 	call	0x1aae	; 0x1aae <lcd_init>
    1bfc:	0e 94 85 0d 	call	0x1b0a	; 0x1b0a <clear_lcd>
    1c00:	0e 94 92 0d 	call	0x1b24	; 0x1b24 <LED_Show>
    1c04:	00 00       	nop
    1c06:	df 91       	pop	r29
    1c08:	cf 91       	pop	r28
    1c0a:	08 95       	ret

00001c0c <__cmpsf2>:
    1c0c:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fp_cmp>
    1c10:	08 f4       	brcc	.+2      	; 0x1c14 <__cmpsf2+0x8>
    1c12:	81 e0       	ldi	r24, 0x01	; 1
    1c14:	08 95       	ret

00001c16 <__fixunssfsi>:
    1c16:	0e 94 66 0e 	call	0x1ccc	; 0x1ccc <__fp_splitA>
    1c1a:	88 f0       	brcs	.+34     	; 0x1c3e <__fixunssfsi+0x28>
    1c1c:	9f 57       	subi	r25, 0x7F	; 127
    1c1e:	98 f0       	brcs	.+38     	; 0x1c46 <__fixunssfsi+0x30>
    1c20:	b9 2f       	mov	r27, r25
    1c22:	99 27       	eor	r25, r25
    1c24:	b7 51       	subi	r27, 0x17	; 23
    1c26:	b0 f0       	brcs	.+44     	; 0x1c54 <__fixunssfsi+0x3e>
    1c28:	e1 f0       	breq	.+56     	; 0x1c62 <__fixunssfsi+0x4c>
    1c2a:	66 0f       	add	r22, r22
    1c2c:	77 1f       	adc	r23, r23
    1c2e:	88 1f       	adc	r24, r24
    1c30:	99 1f       	adc	r25, r25
    1c32:	1a f0       	brmi	.+6      	; 0x1c3a <__fixunssfsi+0x24>
    1c34:	ba 95       	dec	r27
    1c36:	c9 f7       	brne	.-14     	; 0x1c2a <__fixunssfsi+0x14>
    1c38:	14 c0       	rjmp	.+40     	; 0x1c62 <__fixunssfsi+0x4c>
    1c3a:	b1 30       	cpi	r27, 0x01	; 1
    1c3c:	91 f0       	breq	.+36     	; 0x1c62 <__fixunssfsi+0x4c>
    1c3e:	0e 94 80 0e 	call	0x1d00	; 0x1d00 <__fp_zero>
    1c42:	b1 e0       	ldi	r27, 0x01	; 1
    1c44:	08 95       	ret
    1c46:	0c 94 80 0e 	jmp	0x1d00	; 0x1d00 <__fp_zero>
    1c4a:	67 2f       	mov	r22, r23
    1c4c:	78 2f       	mov	r23, r24
    1c4e:	88 27       	eor	r24, r24
    1c50:	b8 5f       	subi	r27, 0xF8	; 248
    1c52:	39 f0       	breq	.+14     	; 0x1c62 <__fixunssfsi+0x4c>
    1c54:	b9 3f       	cpi	r27, 0xF9	; 249
    1c56:	cc f3       	brlt	.-14     	; 0x1c4a <__fixunssfsi+0x34>
    1c58:	86 95       	lsr	r24
    1c5a:	77 95       	ror	r23
    1c5c:	67 95       	ror	r22
    1c5e:	b3 95       	inc	r27
    1c60:	d9 f7       	brne	.-10     	; 0x1c58 <__fixunssfsi+0x42>
    1c62:	3e f4       	brtc	.+14     	; 0x1c72 <__fixunssfsi+0x5c>
    1c64:	90 95       	com	r25
    1c66:	80 95       	com	r24
    1c68:	70 95       	com	r23
    1c6a:	61 95       	neg	r22
    1c6c:	7f 4f       	sbci	r23, 0xFF	; 255
    1c6e:	8f 4f       	sbci	r24, 0xFF	; 255
    1c70:	9f 4f       	sbci	r25, 0xFF	; 255
    1c72:	08 95       	ret

00001c74 <__fp_cmp>:
    1c74:	99 0f       	add	r25, r25
    1c76:	00 08       	sbc	r0, r0
    1c78:	55 0f       	add	r21, r21
    1c7a:	aa 0b       	sbc	r26, r26
    1c7c:	e0 e8       	ldi	r30, 0x80	; 128
    1c7e:	fe ef       	ldi	r31, 0xFE	; 254
    1c80:	16 16       	cp	r1, r22
    1c82:	17 06       	cpc	r1, r23
    1c84:	e8 07       	cpc	r30, r24
    1c86:	f9 07       	cpc	r31, r25
    1c88:	c0 f0       	brcs	.+48     	; 0x1cba <__fp_cmp+0x46>
    1c8a:	12 16       	cp	r1, r18
    1c8c:	13 06       	cpc	r1, r19
    1c8e:	e4 07       	cpc	r30, r20
    1c90:	f5 07       	cpc	r31, r21
    1c92:	98 f0       	brcs	.+38     	; 0x1cba <__fp_cmp+0x46>
    1c94:	62 1b       	sub	r22, r18
    1c96:	73 0b       	sbc	r23, r19
    1c98:	84 0b       	sbc	r24, r20
    1c9a:	95 0b       	sbc	r25, r21
    1c9c:	39 f4       	brne	.+14     	; 0x1cac <__fp_cmp+0x38>
    1c9e:	0a 26       	eor	r0, r26
    1ca0:	61 f0       	breq	.+24     	; 0x1cba <__fp_cmp+0x46>
    1ca2:	23 2b       	or	r18, r19
    1ca4:	24 2b       	or	r18, r20
    1ca6:	25 2b       	or	r18, r21
    1ca8:	21 f4       	brne	.+8      	; 0x1cb2 <__fp_cmp+0x3e>
    1caa:	08 95       	ret
    1cac:	0a 26       	eor	r0, r26
    1cae:	09 f4       	brne	.+2      	; 0x1cb2 <__fp_cmp+0x3e>
    1cb0:	a1 40       	sbci	r26, 0x01	; 1
    1cb2:	a6 95       	lsr	r26
    1cb4:	8f ef       	ldi	r24, 0xFF	; 255
    1cb6:	81 1d       	adc	r24, r1
    1cb8:	81 1d       	adc	r24, r1
    1cba:	08 95       	ret

00001cbc <__fp_split3>:
    1cbc:	57 fd       	sbrc	r21, 7
    1cbe:	90 58       	subi	r25, 0x80	; 128
    1cc0:	44 0f       	add	r20, r20
    1cc2:	55 1f       	adc	r21, r21
    1cc4:	59 f0       	breq	.+22     	; 0x1cdc <__fp_splitA+0x10>
    1cc6:	5f 3f       	cpi	r21, 0xFF	; 255
    1cc8:	71 f0       	breq	.+28     	; 0x1ce6 <__fp_splitA+0x1a>
    1cca:	47 95       	ror	r20

00001ccc <__fp_splitA>:
    1ccc:	88 0f       	add	r24, r24
    1cce:	97 fb       	bst	r25, 7
    1cd0:	99 1f       	adc	r25, r25
    1cd2:	61 f0       	breq	.+24     	; 0x1cec <__fp_splitA+0x20>
    1cd4:	9f 3f       	cpi	r25, 0xFF	; 255
    1cd6:	79 f0       	breq	.+30     	; 0x1cf6 <__fp_splitA+0x2a>
    1cd8:	87 95       	ror	r24
    1cda:	08 95       	ret
    1cdc:	12 16       	cp	r1, r18
    1cde:	13 06       	cpc	r1, r19
    1ce0:	14 06       	cpc	r1, r20
    1ce2:	55 1f       	adc	r21, r21
    1ce4:	f2 cf       	rjmp	.-28     	; 0x1cca <__fp_split3+0xe>
    1ce6:	46 95       	lsr	r20
    1ce8:	f1 df       	rcall	.-30     	; 0x1ccc <__fp_splitA>
    1cea:	08 c0       	rjmp	.+16     	; 0x1cfc <__fp_splitA+0x30>
    1cec:	16 16       	cp	r1, r22
    1cee:	17 06       	cpc	r1, r23
    1cf0:	18 06       	cpc	r1, r24
    1cf2:	99 1f       	adc	r25, r25
    1cf4:	f1 cf       	rjmp	.-30     	; 0x1cd8 <__fp_splitA+0xc>
    1cf6:	86 95       	lsr	r24
    1cf8:	71 05       	cpc	r23, r1
    1cfa:	61 05       	cpc	r22, r1
    1cfc:	08 94       	sec
    1cfe:	08 95       	ret

00001d00 <__fp_zero>:
    1d00:	e8 94       	clt

00001d02 <__fp_szero>:
    1d02:	bb 27       	eor	r27, r27
    1d04:	66 27       	eor	r22, r22
    1d06:	77 27       	eor	r23, r23
    1d08:	cb 01       	movw	r24, r22
    1d0a:	97 f9       	bld	r25, 7
    1d0c:	08 95       	ret

00001d0e <__gesf2>:
    1d0e:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fp_cmp>
    1d12:	08 f4       	brcc	.+2      	; 0x1d16 <__gesf2+0x8>
    1d14:	8f ef       	ldi	r24, 0xFF	; 255
    1d16:	08 95       	ret

00001d18 <__mulsf3>:
    1d18:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3x>
    1d1c:	0c 94 10 0f 	jmp	0x1e20	; 0x1e20 <__fp_round>
    1d20:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <__fp_pscA>
    1d24:	38 f0       	brcs	.+14     	; 0x1d34 <__mulsf3+0x1c>
    1d26:	0e 94 09 0f 	call	0x1e12	; 0x1e12 <__fp_pscB>
    1d2a:	20 f0       	brcs	.+8      	; 0x1d34 <__mulsf3+0x1c>
    1d2c:	95 23       	and	r25, r21
    1d2e:	11 f0       	breq	.+4      	; 0x1d34 <__mulsf3+0x1c>
    1d30:	0c 94 f9 0e 	jmp	0x1df2	; 0x1df2 <__fp_inf>
    1d34:	0c 94 ff 0e 	jmp	0x1dfe	; 0x1dfe <__fp_nan>
    1d38:	11 24       	eor	r1, r1
    1d3a:	0c 94 81 0e 	jmp	0x1d02	; 0x1d02 <__fp_szero>

00001d3e <__mulsf3x>:
    1d3e:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__fp_split3>
    1d42:	70 f3       	brcs	.-36     	; 0x1d20 <__mulsf3+0x8>

00001d44 <__mulsf3_pse>:
    1d44:	95 9f       	mul	r25, r21
    1d46:	c1 f3       	breq	.-16     	; 0x1d38 <__mulsf3+0x20>
    1d48:	95 0f       	add	r25, r21
    1d4a:	50 e0       	ldi	r21, 0x00	; 0
    1d4c:	55 1f       	adc	r21, r21
    1d4e:	62 9f       	mul	r22, r18
    1d50:	f0 01       	movw	r30, r0
    1d52:	72 9f       	mul	r23, r18
    1d54:	bb 27       	eor	r27, r27
    1d56:	f0 0d       	add	r31, r0
    1d58:	b1 1d       	adc	r27, r1
    1d5a:	63 9f       	mul	r22, r19
    1d5c:	aa 27       	eor	r26, r26
    1d5e:	f0 0d       	add	r31, r0
    1d60:	b1 1d       	adc	r27, r1
    1d62:	aa 1f       	adc	r26, r26
    1d64:	64 9f       	mul	r22, r20
    1d66:	66 27       	eor	r22, r22
    1d68:	b0 0d       	add	r27, r0
    1d6a:	a1 1d       	adc	r26, r1
    1d6c:	66 1f       	adc	r22, r22
    1d6e:	82 9f       	mul	r24, r18
    1d70:	22 27       	eor	r18, r18
    1d72:	b0 0d       	add	r27, r0
    1d74:	a1 1d       	adc	r26, r1
    1d76:	62 1f       	adc	r22, r18
    1d78:	73 9f       	mul	r23, r19
    1d7a:	b0 0d       	add	r27, r0
    1d7c:	a1 1d       	adc	r26, r1
    1d7e:	62 1f       	adc	r22, r18
    1d80:	83 9f       	mul	r24, r19
    1d82:	a0 0d       	add	r26, r0
    1d84:	61 1d       	adc	r22, r1
    1d86:	22 1f       	adc	r18, r18
    1d88:	74 9f       	mul	r23, r20
    1d8a:	33 27       	eor	r19, r19
    1d8c:	a0 0d       	add	r26, r0
    1d8e:	61 1d       	adc	r22, r1
    1d90:	23 1f       	adc	r18, r19
    1d92:	84 9f       	mul	r24, r20
    1d94:	60 0d       	add	r22, r0
    1d96:	21 1d       	adc	r18, r1
    1d98:	82 2f       	mov	r24, r18
    1d9a:	76 2f       	mov	r23, r22
    1d9c:	6a 2f       	mov	r22, r26
    1d9e:	11 24       	eor	r1, r1
    1da0:	9f 57       	subi	r25, 0x7F	; 127
    1da2:	50 40       	sbci	r21, 0x00	; 0
    1da4:	9a f0       	brmi	.+38     	; 0x1dcc <__mulsf3_pse+0x88>
    1da6:	f1 f0       	breq	.+60     	; 0x1de4 <__mulsf3_pse+0xa0>
    1da8:	88 23       	and	r24, r24
    1daa:	4a f0       	brmi	.+18     	; 0x1dbe <__mulsf3_pse+0x7a>
    1dac:	ee 0f       	add	r30, r30
    1dae:	ff 1f       	adc	r31, r31
    1db0:	bb 1f       	adc	r27, r27
    1db2:	66 1f       	adc	r22, r22
    1db4:	77 1f       	adc	r23, r23
    1db6:	88 1f       	adc	r24, r24
    1db8:	91 50       	subi	r25, 0x01	; 1
    1dba:	50 40       	sbci	r21, 0x00	; 0
    1dbc:	a9 f7       	brne	.-22     	; 0x1da8 <__mulsf3_pse+0x64>
    1dbe:	9e 3f       	cpi	r25, 0xFE	; 254
    1dc0:	51 05       	cpc	r21, r1
    1dc2:	80 f0       	brcs	.+32     	; 0x1de4 <__mulsf3_pse+0xa0>
    1dc4:	0c 94 f9 0e 	jmp	0x1df2	; 0x1df2 <__fp_inf>
    1dc8:	0c 94 81 0e 	jmp	0x1d02	; 0x1d02 <__fp_szero>
    1dcc:	5f 3f       	cpi	r21, 0xFF	; 255
    1dce:	e4 f3       	brlt	.-8      	; 0x1dc8 <__mulsf3_pse+0x84>
    1dd0:	98 3e       	cpi	r25, 0xE8	; 232
    1dd2:	d4 f3       	brlt	.-12     	; 0x1dc8 <__mulsf3_pse+0x84>
    1dd4:	86 95       	lsr	r24
    1dd6:	77 95       	ror	r23
    1dd8:	67 95       	ror	r22
    1dda:	b7 95       	ror	r27
    1ddc:	f7 95       	ror	r31
    1dde:	e7 95       	ror	r30
    1de0:	9f 5f       	subi	r25, 0xFF	; 255
    1de2:	c1 f7       	brne	.-16     	; 0x1dd4 <__mulsf3_pse+0x90>
    1de4:	fe 2b       	or	r31, r30
    1de6:	88 0f       	add	r24, r24
    1de8:	91 1d       	adc	r25, r1
    1dea:	96 95       	lsr	r25
    1dec:	87 95       	ror	r24
    1dee:	97 f9       	bld	r25, 7
    1df0:	08 95       	ret

00001df2 <__fp_inf>:
    1df2:	97 f9       	bld	r25, 7
    1df4:	9f 67       	ori	r25, 0x7F	; 127
    1df6:	80 e8       	ldi	r24, 0x80	; 128
    1df8:	70 e0       	ldi	r23, 0x00	; 0
    1dfa:	60 e0       	ldi	r22, 0x00	; 0
    1dfc:	08 95       	ret

00001dfe <__fp_nan>:
    1dfe:	9f ef       	ldi	r25, 0xFF	; 255
    1e00:	80 ec       	ldi	r24, 0xC0	; 192
    1e02:	08 95       	ret

00001e04 <__fp_pscA>:
    1e04:	00 24       	eor	r0, r0
    1e06:	0a 94       	dec	r0
    1e08:	16 16       	cp	r1, r22
    1e0a:	17 06       	cpc	r1, r23
    1e0c:	18 06       	cpc	r1, r24
    1e0e:	09 06       	cpc	r0, r25
    1e10:	08 95       	ret

00001e12 <__fp_pscB>:
    1e12:	00 24       	eor	r0, r0
    1e14:	0a 94       	dec	r0
    1e16:	12 16       	cp	r1, r18
    1e18:	13 06       	cpc	r1, r19
    1e1a:	14 06       	cpc	r1, r20
    1e1c:	05 06       	cpc	r0, r21
    1e1e:	08 95       	ret

00001e20 <__fp_round>:
    1e20:	09 2e       	mov	r0, r25
    1e22:	03 94       	inc	r0
    1e24:	00 0c       	add	r0, r0
    1e26:	11 f4       	brne	.+4      	; 0x1e2c <__fp_round+0xc>
    1e28:	88 23       	and	r24, r24
    1e2a:	52 f0       	brmi	.+20     	; 0x1e40 <__fp_round+0x20>
    1e2c:	bb 0f       	add	r27, r27
    1e2e:	40 f4       	brcc	.+16     	; 0x1e40 <__fp_round+0x20>
    1e30:	bf 2b       	or	r27, r31
    1e32:	11 f4       	brne	.+4      	; 0x1e38 <__fp_round+0x18>
    1e34:	60 ff       	sbrs	r22, 0
    1e36:	04 c0       	rjmp	.+8      	; 0x1e40 <__fp_round+0x20>
    1e38:	6f 5f       	subi	r22, 0xFF	; 255
    1e3a:	7f 4f       	sbci	r23, 0xFF	; 255
    1e3c:	8f 4f       	sbci	r24, 0xFF	; 255
    1e3e:	9f 4f       	sbci	r25, 0xFF	; 255
    1e40:	08 95       	ret

00001e42 <__divmodhi4>:
    1e42:	97 fb       	bst	r25, 7
    1e44:	07 2e       	mov	r0, r23
    1e46:	16 f4       	brtc	.+4      	; 0x1e4c <__divmodhi4+0xa>
    1e48:	00 94       	com	r0
    1e4a:	07 d0       	rcall	.+14     	; 0x1e5a <__divmodhi4_neg1>
    1e4c:	77 fd       	sbrc	r23, 7
    1e4e:	09 d0       	rcall	.+18     	; 0x1e62 <__divmodhi4_neg2>
    1e50:	0e 94 57 0f 	call	0x1eae	; 0x1eae <__udivmodhi4>
    1e54:	07 fc       	sbrc	r0, 7
    1e56:	05 d0       	rcall	.+10     	; 0x1e62 <__divmodhi4_neg2>
    1e58:	3e f4       	brtc	.+14     	; 0x1e68 <__divmodhi4_exit>

00001e5a <__divmodhi4_neg1>:
    1e5a:	90 95       	com	r25
    1e5c:	81 95       	neg	r24
    1e5e:	9f 4f       	sbci	r25, 0xFF	; 255
    1e60:	08 95       	ret

00001e62 <__divmodhi4_neg2>:
    1e62:	70 95       	com	r23
    1e64:	61 95       	neg	r22
    1e66:	7f 4f       	sbci	r23, 0xFF	; 255

00001e68 <__divmodhi4_exit>:
    1e68:	08 95       	ret

00001e6a <__udivmodsi4>:
    1e6a:	a1 e2       	ldi	r26, 0x21	; 33
    1e6c:	1a 2e       	mov	r1, r26
    1e6e:	aa 1b       	sub	r26, r26
    1e70:	bb 1b       	sub	r27, r27
    1e72:	fd 01       	movw	r30, r26
    1e74:	0d c0       	rjmp	.+26     	; 0x1e90 <__udivmodsi4_ep>

00001e76 <__udivmodsi4_loop>:
    1e76:	aa 1f       	adc	r26, r26
    1e78:	bb 1f       	adc	r27, r27
    1e7a:	ee 1f       	adc	r30, r30
    1e7c:	ff 1f       	adc	r31, r31
    1e7e:	a2 17       	cp	r26, r18
    1e80:	b3 07       	cpc	r27, r19
    1e82:	e4 07       	cpc	r30, r20
    1e84:	f5 07       	cpc	r31, r21
    1e86:	20 f0       	brcs	.+8      	; 0x1e90 <__udivmodsi4_ep>
    1e88:	a2 1b       	sub	r26, r18
    1e8a:	b3 0b       	sbc	r27, r19
    1e8c:	e4 0b       	sbc	r30, r20
    1e8e:	f5 0b       	sbc	r31, r21

00001e90 <__udivmodsi4_ep>:
    1e90:	66 1f       	adc	r22, r22
    1e92:	77 1f       	adc	r23, r23
    1e94:	88 1f       	adc	r24, r24
    1e96:	99 1f       	adc	r25, r25
    1e98:	1a 94       	dec	r1
    1e9a:	69 f7       	brne	.-38     	; 0x1e76 <__udivmodsi4_loop>
    1e9c:	60 95       	com	r22
    1e9e:	70 95       	com	r23
    1ea0:	80 95       	com	r24
    1ea2:	90 95       	com	r25
    1ea4:	9b 01       	movw	r18, r22
    1ea6:	ac 01       	movw	r20, r24
    1ea8:	bd 01       	movw	r22, r26
    1eaa:	cf 01       	movw	r24, r30
    1eac:	08 95       	ret

00001eae <__udivmodhi4>:
    1eae:	aa 1b       	sub	r26, r26
    1eb0:	bb 1b       	sub	r27, r27
    1eb2:	51 e1       	ldi	r21, 0x11	; 17
    1eb4:	07 c0       	rjmp	.+14     	; 0x1ec4 <__udivmodhi4_ep>

00001eb6 <__udivmodhi4_loop>:
    1eb6:	aa 1f       	adc	r26, r26
    1eb8:	bb 1f       	adc	r27, r27
    1eba:	a6 17       	cp	r26, r22
    1ebc:	b7 07       	cpc	r27, r23
    1ebe:	10 f0       	brcs	.+4      	; 0x1ec4 <__udivmodhi4_ep>
    1ec0:	a6 1b       	sub	r26, r22
    1ec2:	b7 0b       	sbc	r27, r23

00001ec4 <__udivmodhi4_ep>:
    1ec4:	88 1f       	adc	r24, r24
    1ec6:	99 1f       	adc	r25, r25
    1ec8:	5a 95       	dec	r21
    1eca:	a9 f7       	brne	.-22     	; 0x1eb6 <__udivmodhi4_loop>
    1ecc:	80 95       	com	r24
    1ece:	90 95       	com	r25
    1ed0:	bc 01       	movw	r22, r24
    1ed2:	cd 01       	movw	r24, r26
    1ed4:	08 95       	ret

00001ed6 <snprintf>:
    1ed6:	ae e0       	ldi	r26, 0x0E	; 14
    1ed8:	b0 e0       	ldi	r27, 0x00	; 0
    1eda:	e1 e7       	ldi	r30, 0x71	; 113
    1edc:	ff e0       	ldi	r31, 0x0F	; 15
    1ede:	0c 94 3a 12 	jmp	0x2474	; 0x2474 <__prologue_saves__+0x1c>
    1ee2:	0d 89       	ldd	r16, Y+21	; 0x15
    1ee4:	1e 89       	ldd	r17, Y+22	; 0x16
    1ee6:	8f 89       	ldd	r24, Y+23	; 0x17
    1ee8:	98 8d       	ldd	r25, Y+24	; 0x18
    1eea:	26 e0       	ldi	r18, 0x06	; 6
    1eec:	2c 83       	std	Y+4, r18	; 0x04
    1eee:	1a 83       	std	Y+2, r17	; 0x02
    1ef0:	09 83       	std	Y+1, r16	; 0x01
    1ef2:	97 ff       	sbrs	r25, 7
    1ef4:	02 c0       	rjmp	.+4      	; 0x1efa <snprintf+0x24>
    1ef6:	80 e0       	ldi	r24, 0x00	; 0
    1ef8:	90 e8       	ldi	r25, 0x80	; 128
    1efa:	01 97       	sbiw	r24, 0x01	; 1
    1efc:	9e 83       	std	Y+6, r25	; 0x06
    1efe:	8d 83       	std	Y+5, r24	; 0x05
    1f00:	ae 01       	movw	r20, r28
    1f02:	45 5e       	subi	r20, 0xE5	; 229
    1f04:	5f 4f       	sbci	r21, 0xFF	; 255
    1f06:	69 8d       	ldd	r22, Y+25	; 0x19
    1f08:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1f0a:	ce 01       	movw	r24, r28
    1f0c:	01 96       	adiw	r24, 0x01	; 1
    1f0e:	0e 94 9b 0f 	call	0x1f36	; 0x1f36 <vfprintf>
    1f12:	4d 81       	ldd	r20, Y+5	; 0x05
    1f14:	5e 81       	ldd	r21, Y+6	; 0x06
    1f16:	57 fd       	sbrc	r21, 7
    1f18:	0a c0       	rjmp	.+20     	; 0x1f2e <snprintf+0x58>
    1f1a:	2f 81       	ldd	r18, Y+7	; 0x07
    1f1c:	38 85       	ldd	r19, Y+8	; 0x08
    1f1e:	42 17       	cp	r20, r18
    1f20:	53 07       	cpc	r21, r19
    1f22:	0c f4       	brge	.+2      	; 0x1f26 <snprintf+0x50>
    1f24:	9a 01       	movw	r18, r20
    1f26:	f8 01       	movw	r30, r16
    1f28:	e2 0f       	add	r30, r18
    1f2a:	f3 1f       	adc	r31, r19
    1f2c:	10 82       	st	Z, r1
    1f2e:	2e 96       	adiw	r28, 0x0e	; 14
    1f30:	e4 e0       	ldi	r30, 0x04	; 4
    1f32:	0c 94 56 12 	jmp	0x24ac	; 0x24ac <__epilogue_restores__+0x1c>

00001f36 <vfprintf>:
    1f36:	ab e0       	ldi	r26, 0x0B	; 11
    1f38:	b0 e0       	ldi	r27, 0x00	; 0
    1f3a:	e1 ea       	ldi	r30, 0xA1	; 161
    1f3c:	ff e0       	ldi	r31, 0x0F	; 15
    1f3e:	0c 94 2c 12 	jmp	0x2458	; 0x2458 <__prologue_saves__>
    1f42:	6c 01       	movw	r12, r24
    1f44:	7b 01       	movw	r14, r22
    1f46:	8a 01       	movw	r16, r20
    1f48:	fc 01       	movw	r30, r24
    1f4a:	17 82       	std	Z+7, r1	; 0x07
    1f4c:	16 82       	std	Z+6, r1	; 0x06
    1f4e:	83 81       	ldd	r24, Z+3	; 0x03
    1f50:	81 ff       	sbrs	r24, 1
    1f52:	cc c1       	rjmp	.+920    	; 0x22ec <vfprintf+0x3b6>
    1f54:	ce 01       	movw	r24, r28
    1f56:	01 96       	adiw	r24, 0x01	; 1
    1f58:	3c 01       	movw	r6, r24
    1f5a:	f6 01       	movw	r30, r12
    1f5c:	93 81       	ldd	r25, Z+3	; 0x03
    1f5e:	f7 01       	movw	r30, r14
    1f60:	93 fd       	sbrc	r25, 3
    1f62:	85 91       	lpm	r24, Z+
    1f64:	93 ff       	sbrs	r25, 3
    1f66:	81 91       	ld	r24, Z+
    1f68:	7f 01       	movw	r14, r30
    1f6a:	88 23       	and	r24, r24
    1f6c:	09 f4       	brne	.+2      	; 0x1f70 <vfprintf+0x3a>
    1f6e:	ba c1       	rjmp	.+884    	; 0x22e4 <vfprintf+0x3ae>
    1f70:	85 32       	cpi	r24, 0x25	; 37
    1f72:	39 f4       	brne	.+14     	; 0x1f82 <vfprintf+0x4c>
    1f74:	93 fd       	sbrc	r25, 3
    1f76:	85 91       	lpm	r24, Z+
    1f78:	93 ff       	sbrs	r25, 3
    1f7a:	81 91       	ld	r24, Z+
    1f7c:	7f 01       	movw	r14, r30
    1f7e:	85 32       	cpi	r24, 0x25	; 37
    1f80:	29 f4       	brne	.+10     	; 0x1f8c <vfprintf+0x56>
    1f82:	b6 01       	movw	r22, r12
    1f84:	90 e0       	ldi	r25, 0x00	; 0
    1f86:	0e 94 92 11 	call	0x2324	; 0x2324 <fputc>
    1f8a:	e7 cf       	rjmp	.-50     	; 0x1f5a <vfprintf+0x24>
    1f8c:	91 2c       	mov	r9, r1
    1f8e:	21 2c       	mov	r2, r1
    1f90:	31 2c       	mov	r3, r1
    1f92:	ff e1       	ldi	r31, 0x1F	; 31
    1f94:	f3 15       	cp	r31, r3
    1f96:	d8 f0       	brcs	.+54     	; 0x1fce <vfprintf+0x98>
    1f98:	8b 32       	cpi	r24, 0x2B	; 43
    1f9a:	79 f0       	breq	.+30     	; 0x1fba <vfprintf+0x84>
    1f9c:	38 f4       	brcc	.+14     	; 0x1fac <vfprintf+0x76>
    1f9e:	80 32       	cpi	r24, 0x20	; 32
    1fa0:	79 f0       	breq	.+30     	; 0x1fc0 <vfprintf+0x8a>
    1fa2:	83 32       	cpi	r24, 0x23	; 35
    1fa4:	a1 f4       	brne	.+40     	; 0x1fce <vfprintf+0x98>
    1fa6:	23 2d       	mov	r18, r3
    1fa8:	20 61       	ori	r18, 0x10	; 16
    1faa:	1d c0       	rjmp	.+58     	; 0x1fe6 <vfprintf+0xb0>
    1fac:	8d 32       	cpi	r24, 0x2D	; 45
    1fae:	61 f0       	breq	.+24     	; 0x1fc8 <vfprintf+0x92>
    1fb0:	80 33       	cpi	r24, 0x30	; 48
    1fb2:	69 f4       	brne	.+26     	; 0x1fce <vfprintf+0x98>
    1fb4:	23 2d       	mov	r18, r3
    1fb6:	21 60       	ori	r18, 0x01	; 1
    1fb8:	16 c0       	rjmp	.+44     	; 0x1fe6 <vfprintf+0xb0>
    1fba:	83 2d       	mov	r24, r3
    1fbc:	82 60       	ori	r24, 0x02	; 2
    1fbe:	38 2e       	mov	r3, r24
    1fc0:	e3 2d       	mov	r30, r3
    1fc2:	e4 60       	ori	r30, 0x04	; 4
    1fc4:	3e 2e       	mov	r3, r30
    1fc6:	2a c0       	rjmp	.+84     	; 0x201c <vfprintf+0xe6>
    1fc8:	f3 2d       	mov	r31, r3
    1fca:	f8 60       	ori	r31, 0x08	; 8
    1fcc:	1d c0       	rjmp	.+58     	; 0x2008 <vfprintf+0xd2>
    1fce:	37 fc       	sbrc	r3, 7
    1fd0:	2d c0       	rjmp	.+90     	; 0x202c <vfprintf+0xf6>
    1fd2:	20 ed       	ldi	r18, 0xD0	; 208
    1fd4:	28 0f       	add	r18, r24
    1fd6:	2a 30       	cpi	r18, 0x0A	; 10
    1fd8:	40 f0       	brcs	.+16     	; 0x1fea <vfprintf+0xb4>
    1fda:	8e 32       	cpi	r24, 0x2E	; 46
    1fdc:	b9 f4       	brne	.+46     	; 0x200c <vfprintf+0xd6>
    1fde:	36 fc       	sbrc	r3, 6
    1fe0:	81 c1       	rjmp	.+770    	; 0x22e4 <vfprintf+0x3ae>
    1fe2:	23 2d       	mov	r18, r3
    1fe4:	20 64       	ori	r18, 0x40	; 64
    1fe6:	32 2e       	mov	r3, r18
    1fe8:	19 c0       	rjmp	.+50     	; 0x201c <vfprintf+0xe6>
    1fea:	36 fe       	sbrs	r3, 6
    1fec:	06 c0       	rjmp	.+12     	; 0x1ffa <vfprintf+0xc4>
    1fee:	8a e0       	ldi	r24, 0x0A	; 10
    1ff0:	98 9e       	mul	r9, r24
    1ff2:	20 0d       	add	r18, r0
    1ff4:	11 24       	eor	r1, r1
    1ff6:	92 2e       	mov	r9, r18
    1ff8:	11 c0       	rjmp	.+34     	; 0x201c <vfprintf+0xe6>
    1ffa:	ea e0       	ldi	r30, 0x0A	; 10
    1ffc:	2e 9e       	mul	r2, r30
    1ffe:	20 0d       	add	r18, r0
    2000:	11 24       	eor	r1, r1
    2002:	22 2e       	mov	r2, r18
    2004:	f3 2d       	mov	r31, r3
    2006:	f0 62       	ori	r31, 0x20	; 32
    2008:	3f 2e       	mov	r3, r31
    200a:	08 c0       	rjmp	.+16     	; 0x201c <vfprintf+0xe6>
    200c:	8c 36       	cpi	r24, 0x6C	; 108
    200e:	21 f4       	brne	.+8      	; 0x2018 <vfprintf+0xe2>
    2010:	83 2d       	mov	r24, r3
    2012:	80 68       	ori	r24, 0x80	; 128
    2014:	38 2e       	mov	r3, r24
    2016:	02 c0       	rjmp	.+4      	; 0x201c <vfprintf+0xe6>
    2018:	88 36       	cpi	r24, 0x68	; 104
    201a:	41 f4       	brne	.+16     	; 0x202c <vfprintf+0xf6>
    201c:	f7 01       	movw	r30, r14
    201e:	93 fd       	sbrc	r25, 3
    2020:	85 91       	lpm	r24, Z+
    2022:	93 ff       	sbrs	r25, 3
    2024:	81 91       	ld	r24, Z+
    2026:	7f 01       	movw	r14, r30
    2028:	81 11       	cpse	r24, r1
    202a:	b3 cf       	rjmp	.-154    	; 0x1f92 <vfprintf+0x5c>
    202c:	98 2f       	mov	r25, r24
    202e:	9f 7d       	andi	r25, 0xDF	; 223
    2030:	95 54       	subi	r25, 0x45	; 69
    2032:	93 30       	cpi	r25, 0x03	; 3
    2034:	28 f4       	brcc	.+10     	; 0x2040 <vfprintf+0x10a>
    2036:	0c 5f       	subi	r16, 0xFC	; 252
    2038:	1f 4f       	sbci	r17, 0xFF	; 255
    203a:	9f e3       	ldi	r25, 0x3F	; 63
    203c:	99 83       	std	Y+1, r25	; 0x01
    203e:	0d c0       	rjmp	.+26     	; 0x205a <vfprintf+0x124>
    2040:	83 36       	cpi	r24, 0x63	; 99
    2042:	31 f0       	breq	.+12     	; 0x2050 <vfprintf+0x11a>
    2044:	83 37       	cpi	r24, 0x73	; 115
    2046:	71 f0       	breq	.+28     	; 0x2064 <vfprintf+0x12e>
    2048:	83 35       	cpi	r24, 0x53	; 83
    204a:	09 f0       	breq	.+2      	; 0x204e <vfprintf+0x118>
    204c:	59 c0       	rjmp	.+178    	; 0x2100 <vfprintf+0x1ca>
    204e:	21 c0       	rjmp	.+66     	; 0x2092 <vfprintf+0x15c>
    2050:	f8 01       	movw	r30, r16
    2052:	80 81       	ld	r24, Z
    2054:	89 83       	std	Y+1, r24	; 0x01
    2056:	0e 5f       	subi	r16, 0xFE	; 254
    2058:	1f 4f       	sbci	r17, 0xFF	; 255
    205a:	88 24       	eor	r8, r8
    205c:	83 94       	inc	r8
    205e:	91 2c       	mov	r9, r1
    2060:	53 01       	movw	r10, r6
    2062:	13 c0       	rjmp	.+38     	; 0x208a <vfprintf+0x154>
    2064:	28 01       	movw	r4, r16
    2066:	f2 e0       	ldi	r31, 0x02	; 2
    2068:	4f 0e       	add	r4, r31
    206a:	51 1c       	adc	r5, r1
    206c:	f8 01       	movw	r30, r16
    206e:	a0 80       	ld	r10, Z
    2070:	b1 80       	ldd	r11, Z+1	; 0x01
    2072:	36 fe       	sbrs	r3, 6
    2074:	03 c0       	rjmp	.+6      	; 0x207c <vfprintf+0x146>
    2076:	69 2d       	mov	r22, r9
    2078:	70 e0       	ldi	r23, 0x00	; 0
    207a:	02 c0       	rjmp	.+4      	; 0x2080 <vfprintf+0x14a>
    207c:	6f ef       	ldi	r22, 0xFF	; 255
    207e:	7f ef       	ldi	r23, 0xFF	; 255
    2080:	c5 01       	movw	r24, r10
    2082:	0e 94 87 11 	call	0x230e	; 0x230e <strnlen>
    2086:	4c 01       	movw	r8, r24
    2088:	82 01       	movw	r16, r4
    208a:	f3 2d       	mov	r31, r3
    208c:	ff 77       	andi	r31, 0x7F	; 127
    208e:	3f 2e       	mov	r3, r31
    2090:	16 c0       	rjmp	.+44     	; 0x20be <vfprintf+0x188>
    2092:	28 01       	movw	r4, r16
    2094:	22 e0       	ldi	r18, 0x02	; 2
    2096:	42 0e       	add	r4, r18
    2098:	51 1c       	adc	r5, r1
    209a:	f8 01       	movw	r30, r16
    209c:	a0 80       	ld	r10, Z
    209e:	b1 80       	ldd	r11, Z+1	; 0x01
    20a0:	36 fe       	sbrs	r3, 6
    20a2:	03 c0       	rjmp	.+6      	; 0x20aa <vfprintf+0x174>
    20a4:	69 2d       	mov	r22, r9
    20a6:	70 e0       	ldi	r23, 0x00	; 0
    20a8:	02 c0       	rjmp	.+4      	; 0x20ae <vfprintf+0x178>
    20aa:	6f ef       	ldi	r22, 0xFF	; 255
    20ac:	7f ef       	ldi	r23, 0xFF	; 255
    20ae:	c5 01       	movw	r24, r10
    20b0:	0e 94 7c 11 	call	0x22f8	; 0x22f8 <strnlen_P>
    20b4:	4c 01       	movw	r8, r24
    20b6:	f3 2d       	mov	r31, r3
    20b8:	f0 68       	ori	r31, 0x80	; 128
    20ba:	3f 2e       	mov	r3, r31
    20bc:	82 01       	movw	r16, r4
    20be:	33 fc       	sbrc	r3, 3
    20c0:	1b c0       	rjmp	.+54     	; 0x20f8 <vfprintf+0x1c2>
    20c2:	82 2d       	mov	r24, r2
    20c4:	90 e0       	ldi	r25, 0x00	; 0
    20c6:	88 16       	cp	r8, r24
    20c8:	99 06       	cpc	r9, r25
    20ca:	b0 f4       	brcc	.+44     	; 0x20f8 <vfprintf+0x1c2>
    20cc:	b6 01       	movw	r22, r12
    20ce:	80 e2       	ldi	r24, 0x20	; 32
    20d0:	90 e0       	ldi	r25, 0x00	; 0
    20d2:	0e 94 92 11 	call	0x2324	; 0x2324 <fputc>
    20d6:	2a 94       	dec	r2
    20d8:	f4 cf       	rjmp	.-24     	; 0x20c2 <vfprintf+0x18c>
    20da:	f5 01       	movw	r30, r10
    20dc:	37 fc       	sbrc	r3, 7
    20de:	85 91       	lpm	r24, Z+
    20e0:	37 fe       	sbrs	r3, 7
    20e2:	81 91       	ld	r24, Z+
    20e4:	5f 01       	movw	r10, r30
    20e6:	b6 01       	movw	r22, r12
    20e8:	90 e0       	ldi	r25, 0x00	; 0
    20ea:	0e 94 92 11 	call	0x2324	; 0x2324 <fputc>
    20ee:	21 10       	cpse	r2, r1
    20f0:	2a 94       	dec	r2
    20f2:	21 e0       	ldi	r18, 0x01	; 1
    20f4:	82 1a       	sub	r8, r18
    20f6:	91 08       	sbc	r9, r1
    20f8:	81 14       	cp	r8, r1
    20fa:	91 04       	cpc	r9, r1
    20fc:	71 f7       	brne	.-36     	; 0x20da <vfprintf+0x1a4>
    20fe:	e8 c0       	rjmp	.+464    	; 0x22d0 <vfprintf+0x39a>
    2100:	84 36       	cpi	r24, 0x64	; 100
    2102:	11 f0       	breq	.+4      	; 0x2108 <vfprintf+0x1d2>
    2104:	89 36       	cpi	r24, 0x69	; 105
    2106:	41 f5       	brne	.+80     	; 0x2158 <vfprintf+0x222>
    2108:	f8 01       	movw	r30, r16
    210a:	37 fe       	sbrs	r3, 7
    210c:	07 c0       	rjmp	.+14     	; 0x211c <vfprintf+0x1e6>
    210e:	60 81       	ld	r22, Z
    2110:	71 81       	ldd	r23, Z+1	; 0x01
    2112:	82 81       	ldd	r24, Z+2	; 0x02
    2114:	93 81       	ldd	r25, Z+3	; 0x03
    2116:	0c 5f       	subi	r16, 0xFC	; 252
    2118:	1f 4f       	sbci	r17, 0xFF	; 255
    211a:	08 c0       	rjmp	.+16     	; 0x212c <vfprintf+0x1f6>
    211c:	60 81       	ld	r22, Z
    211e:	71 81       	ldd	r23, Z+1	; 0x01
    2120:	07 2e       	mov	r0, r23
    2122:	00 0c       	add	r0, r0
    2124:	88 0b       	sbc	r24, r24
    2126:	99 0b       	sbc	r25, r25
    2128:	0e 5f       	subi	r16, 0xFE	; 254
    212a:	1f 4f       	sbci	r17, 0xFF	; 255
    212c:	f3 2d       	mov	r31, r3
    212e:	ff 76       	andi	r31, 0x6F	; 111
    2130:	3f 2e       	mov	r3, r31
    2132:	97 ff       	sbrs	r25, 7
    2134:	09 c0       	rjmp	.+18     	; 0x2148 <vfprintf+0x212>
    2136:	90 95       	com	r25
    2138:	80 95       	com	r24
    213a:	70 95       	com	r23
    213c:	61 95       	neg	r22
    213e:	7f 4f       	sbci	r23, 0xFF	; 255
    2140:	8f 4f       	sbci	r24, 0xFF	; 255
    2142:	9f 4f       	sbci	r25, 0xFF	; 255
    2144:	f0 68       	ori	r31, 0x80	; 128
    2146:	3f 2e       	mov	r3, r31
    2148:	2a e0       	ldi	r18, 0x0A	; 10
    214a:	30 e0       	ldi	r19, 0x00	; 0
    214c:	a3 01       	movw	r20, r6
    214e:	0e 94 ce 11 	call	0x239c	; 0x239c <__ultoa_invert>
    2152:	88 2e       	mov	r8, r24
    2154:	86 18       	sub	r8, r6
    2156:	45 c0       	rjmp	.+138    	; 0x21e2 <vfprintf+0x2ac>
    2158:	85 37       	cpi	r24, 0x75	; 117
    215a:	31 f4       	brne	.+12     	; 0x2168 <vfprintf+0x232>
    215c:	23 2d       	mov	r18, r3
    215e:	2f 7e       	andi	r18, 0xEF	; 239
    2160:	b2 2e       	mov	r11, r18
    2162:	2a e0       	ldi	r18, 0x0A	; 10
    2164:	30 e0       	ldi	r19, 0x00	; 0
    2166:	25 c0       	rjmp	.+74     	; 0x21b2 <vfprintf+0x27c>
    2168:	93 2d       	mov	r25, r3
    216a:	99 7f       	andi	r25, 0xF9	; 249
    216c:	b9 2e       	mov	r11, r25
    216e:	8f 36       	cpi	r24, 0x6F	; 111
    2170:	c1 f0       	breq	.+48     	; 0x21a2 <vfprintf+0x26c>
    2172:	18 f4       	brcc	.+6      	; 0x217a <vfprintf+0x244>
    2174:	88 35       	cpi	r24, 0x58	; 88
    2176:	79 f0       	breq	.+30     	; 0x2196 <vfprintf+0x260>
    2178:	b5 c0       	rjmp	.+362    	; 0x22e4 <vfprintf+0x3ae>
    217a:	80 37       	cpi	r24, 0x70	; 112
    217c:	19 f0       	breq	.+6      	; 0x2184 <vfprintf+0x24e>
    217e:	88 37       	cpi	r24, 0x78	; 120
    2180:	21 f0       	breq	.+8      	; 0x218a <vfprintf+0x254>
    2182:	b0 c0       	rjmp	.+352    	; 0x22e4 <vfprintf+0x3ae>
    2184:	e9 2f       	mov	r30, r25
    2186:	e0 61       	ori	r30, 0x10	; 16
    2188:	be 2e       	mov	r11, r30
    218a:	b4 fe       	sbrs	r11, 4
    218c:	0d c0       	rjmp	.+26     	; 0x21a8 <vfprintf+0x272>
    218e:	fb 2d       	mov	r31, r11
    2190:	f4 60       	ori	r31, 0x04	; 4
    2192:	bf 2e       	mov	r11, r31
    2194:	09 c0       	rjmp	.+18     	; 0x21a8 <vfprintf+0x272>
    2196:	34 fe       	sbrs	r3, 4
    2198:	0a c0       	rjmp	.+20     	; 0x21ae <vfprintf+0x278>
    219a:	29 2f       	mov	r18, r25
    219c:	26 60       	ori	r18, 0x06	; 6
    219e:	b2 2e       	mov	r11, r18
    21a0:	06 c0       	rjmp	.+12     	; 0x21ae <vfprintf+0x278>
    21a2:	28 e0       	ldi	r18, 0x08	; 8
    21a4:	30 e0       	ldi	r19, 0x00	; 0
    21a6:	05 c0       	rjmp	.+10     	; 0x21b2 <vfprintf+0x27c>
    21a8:	20 e1       	ldi	r18, 0x10	; 16
    21aa:	30 e0       	ldi	r19, 0x00	; 0
    21ac:	02 c0       	rjmp	.+4      	; 0x21b2 <vfprintf+0x27c>
    21ae:	20 e1       	ldi	r18, 0x10	; 16
    21b0:	32 e0       	ldi	r19, 0x02	; 2
    21b2:	f8 01       	movw	r30, r16
    21b4:	b7 fe       	sbrs	r11, 7
    21b6:	07 c0       	rjmp	.+14     	; 0x21c6 <vfprintf+0x290>
    21b8:	60 81       	ld	r22, Z
    21ba:	71 81       	ldd	r23, Z+1	; 0x01
    21bc:	82 81       	ldd	r24, Z+2	; 0x02
    21be:	93 81       	ldd	r25, Z+3	; 0x03
    21c0:	0c 5f       	subi	r16, 0xFC	; 252
    21c2:	1f 4f       	sbci	r17, 0xFF	; 255
    21c4:	06 c0       	rjmp	.+12     	; 0x21d2 <vfprintf+0x29c>
    21c6:	60 81       	ld	r22, Z
    21c8:	71 81       	ldd	r23, Z+1	; 0x01
    21ca:	80 e0       	ldi	r24, 0x00	; 0
    21cc:	90 e0       	ldi	r25, 0x00	; 0
    21ce:	0e 5f       	subi	r16, 0xFE	; 254
    21d0:	1f 4f       	sbci	r17, 0xFF	; 255
    21d2:	a3 01       	movw	r20, r6
    21d4:	0e 94 ce 11 	call	0x239c	; 0x239c <__ultoa_invert>
    21d8:	88 2e       	mov	r8, r24
    21da:	86 18       	sub	r8, r6
    21dc:	fb 2d       	mov	r31, r11
    21de:	ff 77       	andi	r31, 0x7F	; 127
    21e0:	3f 2e       	mov	r3, r31
    21e2:	36 fe       	sbrs	r3, 6
    21e4:	0d c0       	rjmp	.+26     	; 0x2200 <vfprintf+0x2ca>
    21e6:	23 2d       	mov	r18, r3
    21e8:	2e 7f       	andi	r18, 0xFE	; 254
    21ea:	a2 2e       	mov	r10, r18
    21ec:	89 14       	cp	r8, r9
    21ee:	58 f4       	brcc	.+22     	; 0x2206 <vfprintf+0x2d0>
    21f0:	34 fe       	sbrs	r3, 4
    21f2:	0b c0       	rjmp	.+22     	; 0x220a <vfprintf+0x2d4>
    21f4:	32 fc       	sbrc	r3, 2
    21f6:	09 c0       	rjmp	.+18     	; 0x220a <vfprintf+0x2d4>
    21f8:	83 2d       	mov	r24, r3
    21fa:	8e 7e       	andi	r24, 0xEE	; 238
    21fc:	a8 2e       	mov	r10, r24
    21fe:	05 c0       	rjmp	.+10     	; 0x220a <vfprintf+0x2d4>
    2200:	b8 2c       	mov	r11, r8
    2202:	a3 2c       	mov	r10, r3
    2204:	03 c0       	rjmp	.+6      	; 0x220c <vfprintf+0x2d6>
    2206:	b8 2c       	mov	r11, r8
    2208:	01 c0       	rjmp	.+2      	; 0x220c <vfprintf+0x2d6>
    220a:	b9 2c       	mov	r11, r9
    220c:	a4 fe       	sbrs	r10, 4
    220e:	0f c0       	rjmp	.+30     	; 0x222e <vfprintf+0x2f8>
    2210:	fe 01       	movw	r30, r28
    2212:	e8 0d       	add	r30, r8
    2214:	f1 1d       	adc	r31, r1
    2216:	80 81       	ld	r24, Z
    2218:	80 33       	cpi	r24, 0x30	; 48
    221a:	21 f4       	brne	.+8      	; 0x2224 <vfprintf+0x2ee>
    221c:	9a 2d       	mov	r25, r10
    221e:	99 7e       	andi	r25, 0xE9	; 233
    2220:	a9 2e       	mov	r10, r25
    2222:	09 c0       	rjmp	.+18     	; 0x2236 <vfprintf+0x300>
    2224:	a2 fe       	sbrs	r10, 2
    2226:	06 c0       	rjmp	.+12     	; 0x2234 <vfprintf+0x2fe>
    2228:	b3 94       	inc	r11
    222a:	b3 94       	inc	r11
    222c:	04 c0       	rjmp	.+8      	; 0x2236 <vfprintf+0x300>
    222e:	8a 2d       	mov	r24, r10
    2230:	86 78       	andi	r24, 0x86	; 134
    2232:	09 f0       	breq	.+2      	; 0x2236 <vfprintf+0x300>
    2234:	b3 94       	inc	r11
    2236:	a3 fc       	sbrc	r10, 3
    2238:	11 c0       	rjmp	.+34     	; 0x225c <vfprintf+0x326>
    223a:	a0 fe       	sbrs	r10, 0
    223c:	06 c0       	rjmp	.+12     	; 0x224a <vfprintf+0x314>
    223e:	b2 14       	cp	r11, r2
    2240:	88 f4       	brcc	.+34     	; 0x2264 <vfprintf+0x32e>
    2242:	28 0c       	add	r2, r8
    2244:	92 2c       	mov	r9, r2
    2246:	9b 18       	sub	r9, r11
    2248:	0e c0       	rjmp	.+28     	; 0x2266 <vfprintf+0x330>
    224a:	b2 14       	cp	r11, r2
    224c:	60 f4       	brcc	.+24     	; 0x2266 <vfprintf+0x330>
    224e:	b6 01       	movw	r22, r12
    2250:	80 e2       	ldi	r24, 0x20	; 32
    2252:	90 e0       	ldi	r25, 0x00	; 0
    2254:	0e 94 92 11 	call	0x2324	; 0x2324 <fputc>
    2258:	b3 94       	inc	r11
    225a:	f7 cf       	rjmp	.-18     	; 0x224a <vfprintf+0x314>
    225c:	b2 14       	cp	r11, r2
    225e:	18 f4       	brcc	.+6      	; 0x2266 <vfprintf+0x330>
    2260:	2b 18       	sub	r2, r11
    2262:	02 c0       	rjmp	.+4      	; 0x2268 <vfprintf+0x332>
    2264:	98 2c       	mov	r9, r8
    2266:	21 2c       	mov	r2, r1
    2268:	a4 fe       	sbrs	r10, 4
    226a:	10 c0       	rjmp	.+32     	; 0x228c <vfprintf+0x356>
    226c:	b6 01       	movw	r22, r12
    226e:	80 e3       	ldi	r24, 0x30	; 48
    2270:	90 e0       	ldi	r25, 0x00	; 0
    2272:	0e 94 92 11 	call	0x2324	; 0x2324 <fputc>
    2276:	a2 fe       	sbrs	r10, 2
    2278:	17 c0       	rjmp	.+46     	; 0x22a8 <vfprintf+0x372>
    227a:	a1 fc       	sbrc	r10, 1
    227c:	03 c0       	rjmp	.+6      	; 0x2284 <vfprintf+0x34e>
    227e:	88 e7       	ldi	r24, 0x78	; 120
    2280:	90 e0       	ldi	r25, 0x00	; 0
    2282:	02 c0       	rjmp	.+4      	; 0x2288 <vfprintf+0x352>
    2284:	88 e5       	ldi	r24, 0x58	; 88
    2286:	90 e0       	ldi	r25, 0x00	; 0
    2288:	b6 01       	movw	r22, r12
    228a:	0c c0       	rjmp	.+24     	; 0x22a4 <vfprintf+0x36e>
    228c:	8a 2d       	mov	r24, r10
    228e:	86 78       	andi	r24, 0x86	; 134
    2290:	59 f0       	breq	.+22     	; 0x22a8 <vfprintf+0x372>
    2292:	a1 fe       	sbrs	r10, 1
    2294:	02 c0       	rjmp	.+4      	; 0x229a <vfprintf+0x364>
    2296:	8b e2       	ldi	r24, 0x2B	; 43
    2298:	01 c0       	rjmp	.+2      	; 0x229c <vfprintf+0x366>
    229a:	80 e2       	ldi	r24, 0x20	; 32
    229c:	a7 fc       	sbrc	r10, 7
    229e:	8d e2       	ldi	r24, 0x2D	; 45
    22a0:	b6 01       	movw	r22, r12
    22a2:	90 e0       	ldi	r25, 0x00	; 0
    22a4:	0e 94 92 11 	call	0x2324	; 0x2324 <fputc>
    22a8:	89 14       	cp	r8, r9
    22aa:	38 f4       	brcc	.+14     	; 0x22ba <vfprintf+0x384>
    22ac:	b6 01       	movw	r22, r12
    22ae:	80 e3       	ldi	r24, 0x30	; 48
    22b0:	90 e0       	ldi	r25, 0x00	; 0
    22b2:	0e 94 92 11 	call	0x2324	; 0x2324 <fputc>
    22b6:	9a 94       	dec	r9
    22b8:	f7 cf       	rjmp	.-18     	; 0x22a8 <vfprintf+0x372>
    22ba:	8a 94       	dec	r8
    22bc:	f3 01       	movw	r30, r6
    22be:	e8 0d       	add	r30, r8
    22c0:	f1 1d       	adc	r31, r1
    22c2:	80 81       	ld	r24, Z
    22c4:	b6 01       	movw	r22, r12
    22c6:	90 e0       	ldi	r25, 0x00	; 0
    22c8:	0e 94 92 11 	call	0x2324	; 0x2324 <fputc>
    22cc:	81 10       	cpse	r8, r1
    22ce:	f5 cf       	rjmp	.-22     	; 0x22ba <vfprintf+0x384>
    22d0:	22 20       	and	r2, r2
    22d2:	09 f4       	brne	.+2      	; 0x22d6 <vfprintf+0x3a0>
    22d4:	42 ce       	rjmp	.-892    	; 0x1f5a <vfprintf+0x24>
    22d6:	b6 01       	movw	r22, r12
    22d8:	80 e2       	ldi	r24, 0x20	; 32
    22da:	90 e0       	ldi	r25, 0x00	; 0
    22dc:	0e 94 92 11 	call	0x2324	; 0x2324 <fputc>
    22e0:	2a 94       	dec	r2
    22e2:	f6 cf       	rjmp	.-20     	; 0x22d0 <vfprintf+0x39a>
    22e4:	f6 01       	movw	r30, r12
    22e6:	86 81       	ldd	r24, Z+6	; 0x06
    22e8:	97 81       	ldd	r25, Z+7	; 0x07
    22ea:	02 c0       	rjmp	.+4      	; 0x22f0 <vfprintf+0x3ba>
    22ec:	8f ef       	ldi	r24, 0xFF	; 255
    22ee:	9f ef       	ldi	r25, 0xFF	; 255
    22f0:	2b 96       	adiw	r28, 0x0b	; 11
    22f2:	e2 e1       	ldi	r30, 0x12	; 18
    22f4:	0c 94 48 12 	jmp	0x2490	; 0x2490 <__epilogue_restores__>

000022f8 <strnlen_P>:
    22f8:	fc 01       	movw	r30, r24
    22fa:	05 90       	lpm	r0, Z+
    22fc:	61 50       	subi	r22, 0x01	; 1
    22fe:	70 40       	sbci	r23, 0x00	; 0
    2300:	01 10       	cpse	r0, r1
    2302:	d8 f7       	brcc	.-10     	; 0x22fa <strnlen_P+0x2>
    2304:	80 95       	com	r24
    2306:	90 95       	com	r25
    2308:	8e 0f       	add	r24, r30
    230a:	9f 1f       	adc	r25, r31
    230c:	08 95       	ret

0000230e <strnlen>:
    230e:	fc 01       	movw	r30, r24
    2310:	61 50       	subi	r22, 0x01	; 1
    2312:	70 40       	sbci	r23, 0x00	; 0
    2314:	01 90       	ld	r0, Z+
    2316:	01 10       	cpse	r0, r1
    2318:	d8 f7       	brcc	.-10     	; 0x2310 <strnlen+0x2>
    231a:	80 95       	com	r24
    231c:	90 95       	com	r25
    231e:	8e 0f       	add	r24, r30
    2320:	9f 1f       	adc	r25, r31
    2322:	08 95       	ret

00002324 <fputc>:
    2324:	0f 93       	push	r16
    2326:	1f 93       	push	r17
    2328:	cf 93       	push	r28
    232a:	df 93       	push	r29
    232c:	fb 01       	movw	r30, r22
    232e:	23 81       	ldd	r18, Z+3	; 0x03
    2330:	21 fd       	sbrc	r18, 1
    2332:	03 c0       	rjmp	.+6      	; 0x233a <fputc+0x16>
    2334:	8f ef       	ldi	r24, 0xFF	; 255
    2336:	9f ef       	ldi	r25, 0xFF	; 255
    2338:	2c c0       	rjmp	.+88     	; 0x2392 <fputc+0x6e>
    233a:	22 ff       	sbrs	r18, 2
    233c:	16 c0       	rjmp	.+44     	; 0x236a <fputc+0x46>
    233e:	46 81       	ldd	r20, Z+6	; 0x06
    2340:	57 81       	ldd	r21, Z+7	; 0x07
    2342:	24 81       	ldd	r18, Z+4	; 0x04
    2344:	35 81       	ldd	r19, Z+5	; 0x05
    2346:	42 17       	cp	r20, r18
    2348:	53 07       	cpc	r21, r19
    234a:	44 f4       	brge	.+16     	; 0x235c <fputc+0x38>
    234c:	a0 81       	ld	r26, Z
    234e:	b1 81       	ldd	r27, Z+1	; 0x01
    2350:	9d 01       	movw	r18, r26
    2352:	2f 5f       	subi	r18, 0xFF	; 255
    2354:	3f 4f       	sbci	r19, 0xFF	; 255
    2356:	31 83       	std	Z+1, r19	; 0x01
    2358:	20 83       	st	Z, r18
    235a:	8c 93       	st	X, r24
    235c:	26 81       	ldd	r18, Z+6	; 0x06
    235e:	37 81       	ldd	r19, Z+7	; 0x07
    2360:	2f 5f       	subi	r18, 0xFF	; 255
    2362:	3f 4f       	sbci	r19, 0xFF	; 255
    2364:	37 83       	std	Z+7, r19	; 0x07
    2366:	26 83       	std	Z+6, r18	; 0x06
    2368:	14 c0       	rjmp	.+40     	; 0x2392 <fputc+0x6e>
    236a:	8b 01       	movw	r16, r22
    236c:	ec 01       	movw	r28, r24
    236e:	fb 01       	movw	r30, r22
    2370:	00 84       	ldd	r0, Z+8	; 0x08
    2372:	f1 85       	ldd	r31, Z+9	; 0x09
    2374:	e0 2d       	mov	r30, r0
    2376:	09 95       	icall
    2378:	89 2b       	or	r24, r25
    237a:	e1 f6       	brne	.-72     	; 0x2334 <fputc+0x10>
    237c:	d8 01       	movw	r26, r16
    237e:	16 96       	adiw	r26, 0x06	; 6
    2380:	8d 91       	ld	r24, X+
    2382:	9c 91       	ld	r25, X
    2384:	17 97       	sbiw	r26, 0x07	; 7
    2386:	01 96       	adiw	r24, 0x01	; 1
    2388:	17 96       	adiw	r26, 0x07	; 7
    238a:	9c 93       	st	X, r25
    238c:	8e 93       	st	-X, r24
    238e:	16 97       	sbiw	r26, 0x06	; 6
    2390:	ce 01       	movw	r24, r28
    2392:	df 91       	pop	r29
    2394:	cf 91       	pop	r28
    2396:	1f 91       	pop	r17
    2398:	0f 91       	pop	r16
    239a:	08 95       	ret

0000239c <__ultoa_invert>:
    239c:	fa 01       	movw	r30, r20
    239e:	aa 27       	eor	r26, r26
    23a0:	28 30       	cpi	r18, 0x08	; 8
    23a2:	51 f1       	breq	.+84     	; 0x23f8 <__ultoa_invert+0x5c>
    23a4:	20 31       	cpi	r18, 0x10	; 16
    23a6:	81 f1       	breq	.+96     	; 0x2408 <__ultoa_invert+0x6c>
    23a8:	e8 94       	clt
    23aa:	6f 93       	push	r22
    23ac:	6e 7f       	andi	r22, 0xFE	; 254
    23ae:	6e 5f       	subi	r22, 0xFE	; 254
    23b0:	7f 4f       	sbci	r23, 0xFF	; 255
    23b2:	8f 4f       	sbci	r24, 0xFF	; 255
    23b4:	9f 4f       	sbci	r25, 0xFF	; 255
    23b6:	af 4f       	sbci	r26, 0xFF	; 255
    23b8:	b1 e0       	ldi	r27, 0x01	; 1
    23ba:	3e d0       	rcall	.+124    	; 0x2438 <__ultoa_invert+0x9c>
    23bc:	b4 e0       	ldi	r27, 0x04	; 4
    23be:	3c d0       	rcall	.+120    	; 0x2438 <__ultoa_invert+0x9c>
    23c0:	67 0f       	add	r22, r23
    23c2:	78 1f       	adc	r23, r24
    23c4:	89 1f       	adc	r24, r25
    23c6:	9a 1f       	adc	r25, r26
    23c8:	a1 1d       	adc	r26, r1
    23ca:	68 0f       	add	r22, r24
    23cc:	79 1f       	adc	r23, r25
    23ce:	8a 1f       	adc	r24, r26
    23d0:	91 1d       	adc	r25, r1
    23d2:	a1 1d       	adc	r26, r1
    23d4:	6a 0f       	add	r22, r26
    23d6:	71 1d       	adc	r23, r1
    23d8:	81 1d       	adc	r24, r1
    23da:	91 1d       	adc	r25, r1
    23dc:	a1 1d       	adc	r26, r1
    23de:	20 d0       	rcall	.+64     	; 0x2420 <__ultoa_invert+0x84>
    23e0:	09 f4       	brne	.+2      	; 0x23e4 <__ultoa_invert+0x48>
    23e2:	68 94       	set
    23e4:	3f 91       	pop	r19
    23e6:	2a e0       	ldi	r18, 0x0A	; 10
    23e8:	26 9f       	mul	r18, r22
    23ea:	11 24       	eor	r1, r1
    23ec:	30 19       	sub	r19, r0
    23ee:	30 5d       	subi	r19, 0xD0	; 208
    23f0:	31 93       	st	Z+, r19
    23f2:	de f6       	brtc	.-74     	; 0x23aa <__ultoa_invert+0xe>
    23f4:	cf 01       	movw	r24, r30
    23f6:	08 95       	ret
    23f8:	46 2f       	mov	r20, r22
    23fa:	47 70       	andi	r20, 0x07	; 7
    23fc:	40 5d       	subi	r20, 0xD0	; 208
    23fe:	41 93       	st	Z+, r20
    2400:	b3 e0       	ldi	r27, 0x03	; 3
    2402:	0f d0       	rcall	.+30     	; 0x2422 <__ultoa_invert+0x86>
    2404:	c9 f7       	brne	.-14     	; 0x23f8 <__ultoa_invert+0x5c>
    2406:	f6 cf       	rjmp	.-20     	; 0x23f4 <__ultoa_invert+0x58>
    2408:	46 2f       	mov	r20, r22
    240a:	4f 70       	andi	r20, 0x0F	; 15
    240c:	40 5d       	subi	r20, 0xD0	; 208
    240e:	4a 33       	cpi	r20, 0x3A	; 58
    2410:	18 f0       	brcs	.+6      	; 0x2418 <__ultoa_invert+0x7c>
    2412:	49 5d       	subi	r20, 0xD9	; 217
    2414:	31 fd       	sbrc	r19, 1
    2416:	40 52       	subi	r20, 0x20	; 32
    2418:	41 93       	st	Z+, r20
    241a:	02 d0       	rcall	.+4      	; 0x2420 <__ultoa_invert+0x84>
    241c:	a9 f7       	brne	.-22     	; 0x2408 <__ultoa_invert+0x6c>
    241e:	ea cf       	rjmp	.-44     	; 0x23f4 <__ultoa_invert+0x58>
    2420:	b4 e0       	ldi	r27, 0x04	; 4
    2422:	a6 95       	lsr	r26
    2424:	97 95       	ror	r25
    2426:	87 95       	ror	r24
    2428:	77 95       	ror	r23
    242a:	67 95       	ror	r22
    242c:	ba 95       	dec	r27
    242e:	c9 f7       	brne	.-14     	; 0x2422 <__ultoa_invert+0x86>
    2430:	00 97       	sbiw	r24, 0x00	; 0
    2432:	61 05       	cpc	r22, r1
    2434:	71 05       	cpc	r23, r1
    2436:	08 95       	ret
    2438:	9b 01       	movw	r18, r22
    243a:	ac 01       	movw	r20, r24
    243c:	0a 2e       	mov	r0, r26
    243e:	06 94       	lsr	r0
    2440:	57 95       	ror	r21
    2442:	47 95       	ror	r20
    2444:	37 95       	ror	r19
    2446:	27 95       	ror	r18
    2448:	ba 95       	dec	r27
    244a:	c9 f7       	brne	.-14     	; 0x243e <__ultoa_invert+0xa2>
    244c:	62 0f       	add	r22, r18
    244e:	73 1f       	adc	r23, r19
    2450:	84 1f       	adc	r24, r20
    2452:	95 1f       	adc	r25, r21
    2454:	a0 1d       	adc	r26, r0
    2456:	08 95       	ret

00002458 <__prologue_saves__>:
    2458:	2f 92       	push	r2
    245a:	3f 92       	push	r3
    245c:	4f 92       	push	r4
    245e:	5f 92       	push	r5
    2460:	6f 92       	push	r6
    2462:	7f 92       	push	r7
    2464:	8f 92       	push	r8
    2466:	9f 92       	push	r9
    2468:	af 92       	push	r10
    246a:	bf 92       	push	r11
    246c:	cf 92       	push	r12
    246e:	df 92       	push	r13
    2470:	ef 92       	push	r14
    2472:	ff 92       	push	r15
    2474:	0f 93       	push	r16
    2476:	1f 93       	push	r17
    2478:	cf 93       	push	r28
    247a:	df 93       	push	r29
    247c:	cd b7       	in	r28, 0x3d	; 61
    247e:	de b7       	in	r29, 0x3e	; 62
    2480:	ca 1b       	sub	r28, r26
    2482:	db 0b       	sbc	r29, r27
    2484:	0f b6       	in	r0, 0x3f	; 63
    2486:	f8 94       	cli
    2488:	de bf       	out	0x3e, r29	; 62
    248a:	0f be       	out	0x3f, r0	; 63
    248c:	cd bf       	out	0x3d, r28	; 61
    248e:	09 94       	ijmp

00002490 <__epilogue_restores__>:
    2490:	2a 88       	ldd	r2, Y+18	; 0x12
    2492:	39 88       	ldd	r3, Y+17	; 0x11
    2494:	48 88       	ldd	r4, Y+16	; 0x10
    2496:	5f 84       	ldd	r5, Y+15	; 0x0f
    2498:	6e 84       	ldd	r6, Y+14	; 0x0e
    249a:	7d 84       	ldd	r7, Y+13	; 0x0d
    249c:	8c 84       	ldd	r8, Y+12	; 0x0c
    249e:	9b 84       	ldd	r9, Y+11	; 0x0b
    24a0:	aa 84       	ldd	r10, Y+10	; 0x0a
    24a2:	b9 84       	ldd	r11, Y+9	; 0x09
    24a4:	c8 84       	ldd	r12, Y+8	; 0x08
    24a6:	df 80       	ldd	r13, Y+7	; 0x07
    24a8:	ee 80       	ldd	r14, Y+6	; 0x06
    24aa:	fd 80       	ldd	r15, Y+5	; 0x05
    24ac:	0c 81       	ldd	r16, Y+4	; 0x04
    24ae:	1b 81       	ldd	r17, Y+3	; 0x03
    24b0:	aa 81       	ldd	r26, Y+2	; 0x02
    24b2:	b9 81       	ldd	r27, Y+1	; 0x01
    24b4:	ce 0f       	add	r28, r30
    24b6:	d1 1d       	adc	r29, r1
    24b8:	0f b6       	in	r0, 0x3f	; 63
    24ba:	f8 94       	cli
    24bc:	de bf       	out	0x3e, r29	; 62
    24be:	0f be       	out	0x3f, r0	; 63
    24c0:	cd bf       	out	0x3d, r28	; 61
    24c2:	ed 01       	movw	r28, r26
    24c4:	08 95       	ret

000024c6 <_exit>:
    24c6:	f8 94       	cli

000024c8 <__stop_program>:
    24c8:	ff cf       	rjmp	.-2      	; 0x24c8 <__stop_program>
