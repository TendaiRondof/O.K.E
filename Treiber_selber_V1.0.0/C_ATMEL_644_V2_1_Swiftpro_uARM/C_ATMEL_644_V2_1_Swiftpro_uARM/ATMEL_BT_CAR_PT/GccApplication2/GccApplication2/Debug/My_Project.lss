
My_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000148  00800100  00001f50  00001fe4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001f50  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006c  00800248  00800248  0000212c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000212c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002188  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  000021c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001517  00000000  00000000  00002320  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b39  00000000  00000000  00003837  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000119d  00000000  00000000  00004370  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000056c  00000000  00000000  00005510  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008ef  00000000  00000000  00005a7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b1e  00000000  00000000  0000636b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  00006e89  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b2 00 	jmp	0x164	; 0x164 <__ctors_end>
       4:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
       8:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
       c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      10:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      14:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      18:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      1c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      20:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      24:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      28:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      2c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      30:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      34:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      38:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      3c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      40:	0c 94 15 08 	jmp	0x102a	; 0x102a <__vector_16>
      44:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      48:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      4c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      50:	0c 94 66 02 	jmp	0x4cc	; 0x4cc <__vector_20>
      54:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      58:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      5c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      60:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      64:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      68:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      6c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      70:	0c 94 f4 02 	jmp	0x5e8	; 0x5e8 <__vector_28>
      74:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      78:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      7c:	aa 02       	muls	r26, r26
      7e:	c6 02       	muls	r28, r22
      80:	c6 02       	muls	r28, r22
      82:	c6 02       	muls	r28, r22
      84:	c6 02       	muls	r28, r22
      86:	c6 02       	muls	r28, r22
      88:	c6 02       	muls	r28, r22
      8a:	c6 02       	muls	r28, r22
      8c:	c6 02       	muls	r28, r22
      8e:	c6 02       	muls	r28, r22
      90:	c6 02       	muls	r28, r22
      92:	c6 02       	muls	r28, r22
      94:	c6 02       	muls	r28, r22
      96:	c6 02       	muls	r28, r22
      98:	c6 02       	muls	r28, r22
      9a:	c6 02       	muls	r28, r22
      9c:	c6 02       	muls	r28, r22
      9e:	c6 02       	muls	r28, r22
      a0:	c6 02       	muls	r28, r22
      a2:	c6 02       	muls	r28, r22
      a4:	c6 02       	muls	r28, r22
      a6:	c6 02       	muls	r28, r22
      a8:	c6 02       	muls	r28, r22
      aa:	c6 02       	muls	r28, r22
      ac:	c6 02       	muls	r28, r22
      ae:	c6 02       	muls	r28, r22
      b0:	c6 02       	muls	r28, r22
      b2:	c6 02       	muls	r28, r22
      b4:	c6 02       	muls	r28, r22
      b6:	c6 02       	muls	r28, r22
      b8:	c6 02       	muls	r28, r22
      ba:	c6 02       	muls	r28, r22
      bc:	c6 02       	muls	r28, r22
      be:	c6 02       	muls	r28, r22
      c0:	c6 02       	muls	r28, r22
      c2:	c6 02       	muls	r28, r22
      c4:	c6 02       	muls	r28, r22
      c6:	c6 02       	muls	r28, r22
      c8:	c6 02       	muls	r28, r22
      ca:	c6 02       	muls	r28, r22
      cc:	c6 02       	muls	r28, r22
      ce:	c6 02       	muls	r28, r22
      d0:	c6 02       	muls	r28, r22
      d2:	c6 02       	muls	r28, r22
      d4:	c6 02       	muls	r28, r22
      d6:	c6 02       	muls	r28, r22
      d8:	c6 02       	muls	r28, r22
      da:	c6 02       	muls	r28, r22
      dc:	c6 02       	muls	r28, r22
      de:	c6 02       	muls	r28, r22
      e0:	c6 02       	muls	r28, r22
      e2:	c6 02       	muls	r28, r22
      e4:	c6 02       	muls	r28, r22
      e6:	c6 02       	muls	r28, r22
      e8:	c6 02       	muls	r28, r22
      ea:	97 02       	muls	r25, r23
      ec:	c6 02       	muls	r28, r22
      ee:	a0 02       	muls	r26, r16
      f0:	c2 02       	muls	r28, r18
      f2:	be 02       	muls	r27, r30
      f4:	c6 02       	muls	r28, r22
      f6:	ba 02       	muls	r27, r26
      f8:	c6 02       	muls	r28, r22
      fa:	c6 02       	muls	r28, r22
      fc:	c6 02       	muls	r28, r22
      fe:	c6 02       	muls	r28, r22
     100:	c6 02       	muls	r28, r22
     102:	c6 02       	muls	r28, r22
     104:	c6 02       	muls	r28, r22
     106:	b0 02       	muls	r27, r16
     108:	c6 02       	muls	r28, r22
     10a:	c6 02       	muls	r28, r22
     10c:	c6 02       	muls	r28, r22
     10e:	a5 02       	muls	r26, r21

00000110 <__trampolines_end>:
     110:	20 20       	and	r2, r0
     112:	20 20       	and	r2, r0
     114:	20 20       	and	r2, r0
     116:	20 20       	and	r2, r0
     118:	4f 4b       	sbci	r20, 0xBF	; 191
     11a:	45 20       	and	r4, r5
     11c:	20 20       	and	r2, r0
     11e:	20 20       	and	r2, r0
     120:	20 20       	and	r2, r0
     122:	20 20       	and	r2, r0
	...

00000125 <__c.2558>:
     125:	20 20 20 20 20 20 20 20 42 59 20 20 20 20 20 20             BY      
     135:	20 20 20 20 00                                          .

0000013a <__c.2560>:
     13a:	20 20 20 20 20 20 20 20 4a 41 4e 20 20 20 20 20             JAN     
     14a:	20 20 20 20 00                                          .

0000014f <__c.2562>:
     14f:	20 20 20 20 20 20 20 54 45 4e 44 41 49 20 20 20            TENDAI   
     15f:	20 20 20 20 00                                          .

00000164 <__ctors_end>:
     164:	11 24       	eor	r1, r1
     166:	1f be       	out	0x3f, r1	; 63
     168:	cf ef       	ldi	r28, 0xFF	; 255
     16a:	d0 e1       	ldi	r29, 0x10	; 16
     16c:	de bf       	out	0x3e, r29	; 62
     16e:	cd bf       	out	0x3d, r28	; 61

00000170 <__do_copy_data>:
     170:	12 e0       	ldi	r17, 0x02	; 2
     172:	a0 e0       	ldi	r26, 0x00	; 0
     174:	b1 e0       	ldi	r27, 0x01	; 1
     176:	e0 e5       	ldi	r30, 0x50	; 80
     178:	ff e1       	ldi	r31, 0x1F	; 31
     17a:	02 c0       	rjmp	.+4      	; 0x180 <__do_copy_data+0x10>
     17c:	05 90       	lpm	r0, Z+
     17e:	0d 92       	st	X+, r0
     180:	a8 34       	cpi	r26, 0x48	; 72
     182:	b1 07       	cpc	r27, r17
     184:	d9 f7       	brne	.-10     	; 0x17c <__do_copy_data+0xc>

00000186 <__do_clear_bss>:
     186:	22 e0       	ldi	r18, 0x02	; 2
     188:	a8 e4       	ldi	r26, 0x48	; 72
     18a:	b2 e0       	ldi	r27, 0x02	; 2
     18c:	01 c0       	rjmp	.+2      	; 0x190 <.do_clear_bss_start>

0000018e <.do_clear_bss_loop>:
     18e:	1d 92       	st	X+, r1

00000190 <.do_clear_bss_start>:
     190:	a4 3b       	cpi	r26, 0xB4	; 180
     192:	b2 07       	cpc	r27, r18
     194:	e1 f7       	brne	.-8      	; 0x18e <.do_clear_bss_loop>
     196:	0e 94 e7 04 	call	0x9ce	; 0x9ce <main>
     19a:	0c 94 a6 0f 	jmp	0x1f4c	; 0x1f4c <_exit>

0000019e <__bad_interrupt>:
     19e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a2 <get_DIP_Switch>:
	}
	if ((x>300)&&(x<700)&&(y<700)&&(y>300))
	{
		return 0;
	}
}
     1a2:	cf 93       	push	r28
     1a4:	df 93       	push	r29
     1a6:	00 d0       	rcall	.+0      	; 0x1a8 <get_DIP_Switch+0x6>
     1a8:	1f 92       	push	r1
     1aa:	cd b7       	in	r28, 0x3d	; 61
     1ac:	de b7       	in	r29, 0x3e	; 62
     1ae:	19 82       	std	Y+1, r1	; 0x01
     1b0:	82 e2       	ldi	r24, 0x22	; 34
     1b2:	90 e0       	ldi	r25, 0x00	; 0
     1b4:	22 e2       	ldi	r18, 0x22	; 34
     1b6:	30 e0       	ldi	r19, 0x00	; 0
     1b8:	f9 01       	movw	r30, r18
     1ba:	20 81       	ld	r18, Z
     1bc:	20 62       	ori	r18, 0x20	; 32
     1be:	fc 01       	movw	r30, r24
     1c0:	20 83       	st	Z, r18
     1c2:	82 e2       	ldi	r24, 0x22	; 34
     1c4:	90 e0       	ldi	r25, 0x00	; 0
     1c6:	22 e2       	ldi	r18, 0x22	; 34
     1c8:	30 e0       	ldi	r19, 0x00	; 0
     1ca:	f9 01       	movw	r30, r18
     1cc:	20 81       	ld	r18, Z
     1ce:	2f 7d       	andi	r18, 0xDF	; 223
     1d0:	fc 01       	movw	r30, r24
     1d2:	20 83       	st	Z, r18
     1d4:	82 e2       	ldi	r24, 0x22	; 34
     1d6:	90 e0       	ldi	r25, 0x00	; 0
     1d8:	22 e2       	ldi	r18, 0x22	; 34
     1da:	30 e0       	ldi	r19, 0x00	; 0
     1dc:	f9 01       	movw	r30, r18
     1de:	20 81       	ld	r18, Z
     1e0:	20 62       	ori	r18, 0x20	; 32
     1e2:	fc 01       	movw	r30, r24
     1e4:	20 83       	st	Z, r18
     1e6:	87 e0       	ldi	r24, 0x07	; 7
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	9b 83       	std	Y+3, r25	; 0x03
     1ec:	8a 83       	std	Y+2, r24	; 0x02
     1ee:	30 c0       	rjmp	.+96     	; 0x250 <get_DIP_Switch+0xae>
     1f0:	80 e2       	ldi	r24, 0x20	; 32
     1f2:	90 e0       	ldi	r25, 0x00	; 0
     1f4:	fc 01       	movw	r30, r24
     1f6:	80 81       	ld	r24, Z
     1f8:	88 2f       	mov	r24, r24
     1fa:	90 e0       	ldi	r25, 0x00	; 0
     1fc:	80 78       	andi	r24, 0x80	; 128
     1fe:	99 27       	eor	r25, r25
     200:	47 e0       	ldi	r20, 0x07	; 7
     202:	50 e0       	ldi	r21, 0x00	; 0
     204:	2a 81       	ldd	r18, Y+2	; 0x02
     206:	3b 81       	ldd	r19, Y+3	; 0x03
     208:	ba 01       	movw	r22, r20
     20a:	62 1b       	sub	r22, r18
     20c:	73 0b       	sbc	r23, r19
     20e:	9b 01       	movw	r18, r22
     210:	02 c0       	rjmp	.+4      	; 0x216 <get_DIP_Switch+0x74>
     212:	95 95       	asr	r25
     214:	87 95       	ror	r24
     216:	2a 95       	dec	r18
     218:	e2 f7       	brpl	.-8      	; 0x212 <get_DIP_Switch+0x70>
     21a:	98 2f       	mov	r25, r24
     21c:	89 81       	ldd	r24, Y+1	; 0x01
     21e:	89 2b       	or	r24, r25
     220:	89 83       	std	Y+1, r24	; 0x01
     222:	82 e2       	ldi	r24, 0x22	; 34
     224:	90 e0       	ldi	r25, 0x00	; 0
     226:	22 e2       	ldi	r18, 0x22	; 34
     228:	30 e0       	ldi	r19, 0x00	; 0
     22a:	f9 01       	movw	r30, r18
     22c:	20 81       	ld	r18, Z
     22e:	2f 7b       	andi	r18, 0xBF	; 191
     230:	fc 01       	movw	r30, r24
     232:	20 83       	st	Z, r18
     234:	82 e2       	ldi	r24, 0x22	; 34
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	22 e2       	ldi	r18, 0x22	; 34
     23a:	30 e0       	ldi	r19, 0x00	; 0
     23c:	f9 01       	movw	r30, r18
     23e:	20 81       	ld	r18, Z
     240:	20 64       	ori	r18, 0x40	; 64
     242:	fc 01       	movw	r30, r24
     244:	20 83       	st	Z, r18
     246:	8a 81       	ldd	r24, Y+2	; 0x02
     248:	9b 81       	ldd	r25, Y+3	; 0x03
     24a:	01 97       	sbiw	r24, 0x01	; 1
     24c:	9b 83       	std	Y+3, r25	; 0x03
     24e:	8a 83       	std	Y+2, r24	; 0x02
     250:	8a 81       	ldd	r24, Y+2	; 0x02
     252:	9b 81       	ldd	r25, Y+3	; 0x03
     254:	99 23       	and	r25, r25
     256:	64 f6       	brge	.-104    	; 0x1f0 <get_DIP_Switch+0x4e>
     258:	89 81       	ldd	r24, Y+1	; 0x01
     25a:	0f 90       	pop	r0
     25c:	0f 90       	pop	r0
     25e:	0f 90       	pop	r0
     260:	df 91       	pop	r29
     262:	cf 91       	pop	r28
     264:	08 95       	ret

00000266 <get_LCD_Taster>:
     266:	cf 93       	push	r28
     268:	df 93       	push	r29
     26a:	00 d0       	rcall	.+0      	; 0x26c <get_LCD_Taster+0x6>
     26c:	cd b7       	in	r28, 0x3d	; 61
     26e:	de b7       	in	r29, 0x3e	; 62
     270:	83 e2       	ldi	r24, 0x23	; 35
     272:	90 e0       	ldi	r25, 0x00	; 0
     274:	fc 01       	movw	r30, r24
     276:	80 81       	ld	r24, Z
     278:	89 83       	std	Y+1, r24	; 0x01
     27a:	85 e2       	ldi	r24, 0x25	; 37
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	25 e2       	ldi	r18, 0x25	; 37
     280:	30 e0       	ldi	r19, 0x00	; 0
     282:	f9 01       	movw	r30, r18
     284:	20 81       	ld	r18, Z
     286:	20 7f       	andi	r18, 0xF0	; 240
     288:	fc 01       	movw	r30, r24
     28a:	20 83       	st	Z, r18
     28c:	84 e2       	ldi	r24, 0x24	; 36
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	20 ef       	ldi	r18, 0xF0	; 240
     292:	fc 01       	movw	r30, r24
     294:	20 83       	st	Z, r18
	...
     2aa:	83 e2       	ldi	r24, 0x23	; 35
     2ac:	90 e0       	ldi	r25, 0x00	; 0
     2ae:	fc 01       	movw	r30, r24
     2b0:	80 81       	ld	r24, Z
     2b2:	8f 70       	andi	r24, 0x0F	; 15
     2b4:	8a 83       	std	Y+2, r24	; 0x02
     2b6:	84 e2       	ldi	r24, 0x24	; 36
     2b8:	90 e0       	ldi	r25, 0x00	; 0
     2ba:	2f ef       	ldi	r18, 0xFF	; 255
     2bc:	fc 01       	movw	r30, r24
     2be:	20 83       	st	Z, r18
     2c0:	85 e2       	ldi	r24, 0x25	; 37
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	29 81       	ldd	r18, Y+1	; 0x01
     2c6:	fc 01       	movw	r30, r24
     2c8:	20 83       	st	Z, r18
     2ca:	8a 81       	ldd	r24, Y+2	; 0x02
     2cc:	0f 90       	pop	r0
     2ce:	0f 90       	pop	r0
     2d0:	df 91       	pop	r29
     2d2:	cf 91       	pop	r28
     2d4:	08 95       	ret

000002d6 <init_ADC>:
     2d6:	cf 93       	push	r28
     2d8:	df 93       	push	r29
     2da:	cd b7       	in	r28, 0x3d	; 61
     2dc:	de b7       	in	r29, 0x3e	; 62
     2de:	8a e7       	ldi	r24, 0x7A	; 122
     2e0:	90 e0       	ldi	r25, 0x00	; 0
     2e2:	2a e7       	ldi	r18, 0x7A	; 122
     2e4:	30 e0       	ldi	r19, 0x00	; 0
     2e6:	f9 01       	movw	r30, r18
     2e8:	20 81       	ld	r18, Z
     2ea:	20 68       	ori	r18, 0x80	; 128
     2ec:	fc 01       	movw	r30, r24
     2ee:	20 83       	st	Z, r18
     2f0:	8c e7       	ldi	r24, 0x7C	; 124
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	2c e7       	ldi	r18, 0x7C	; 124
     2f6:	30 e0       	ldi	r19, 0x00	; 0
     2f8:	f9 01       	movw	r30, r18
     2fa:	20 81       	ld	r18, Z
     2fc:	20 64       	ori	r18, 0x40	; 64
     2fe:	fc 01       	movw	r30, r24
     300:	20 83       	st	Z, r18
     302:	8a e7       	ldi	r24, 0x7A	; 122
     304:	90 e0       	ldi	r25, 0x00	; 0
     306:	2a e7       	ldi	r18, 0x7A	; 122
     308:	30 e0       	ldi	r19, 0x00	; 0
     30a:	f9 01       	movw	r30, r18
     30c:	20 81       	ld	r18, Z
     30e:	27 60       	ori	r18, 0x07	; 7
     310:	fc 01       	movw	r30, r24
     312:	20 83       	st	Z, r18
     314:	00 00       	nop
     316:	df 91       	pop	r29
     318:	cf 91       	pop	r28
     31a:	08 95       	ret

0000031c <init_UART0>:
     31c:	cf 93       	push	r28
     31e:	df 93       	push	r29
     320:	cd b7       	in	r28, 0x3d	; 61
     322:	de b7       	in	r29, 0x3e	; 62
     324:	84 ec       	ldi	r24, 0xC4	; 196
     326:	90 e0       	ldi	r25, 0x00	; 0
     328:	20 e1       	ldi	r18, 0x10	; 16
     32a:	30 e0       	ldi	r19, 0x00	; 0
     32c:	fc 01       	movw	r30, r24
     32e:	31 83       	std	Z+1, r19	; 0x01
     330:	20 83       	st	Z, r18
     332:	80 ec       	ldi	r24, 0xC0	; 192
     334:	90 e0       	ldi	r25, 0x00	; 0
     336:	20 ec       	ldi	r18, 0xC0	; 192
     338:	30 e0       	ldi	r19, 0x00	; 0
     33a:	f9 01       	movw	r30, r18
     33c:	20 81       	ld	r18, Z
     33e:	22 60       	ori	r18, 0x02	; 2
     340:	fc 01       	movw	r30, r24
     342:	20 83       	st	Z, r18
     344:	81 ec       	ldi	r24, 0xC1	; 193
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	21 ec       	ldi	r18, 0xC1	; 193
     34a:	30 e0       	ldi	r19, 0x00	; 0
     34c:	f9 01       	movw	r30, r18
     34e:	20 81       	ld	r18, Z
     350:	28 69       	ori	r18, 0x98	; 152
     352:	fc 01       	movw	r30, r24
     354:	20 83       	st	Z, r18
     356:	00 00       	nop
     358:	df 91       	pop	r29
     35a:	cf 91       	pop	r28
     35c:	08 95       	ret

0000035e <init_UART1>:
     35e:	cf 93       	push	r28
     360:	df 93       	push	r29
     362:	cd b7       	in	r28, 0x3d	; 61
     364:	de b7       	in	r29, 0x3e	; 62
     366:	8c ec       	ldi	r24, 0xCC	; 204
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	20 e1       	ldi	r18, 0x10	; 16
     36c:	30 e0       	ldi	r19, 0x00	; 0
     36e:	fc 01       	movw	r30, r24
     370:	31 83       	std	Z+1, r19	; 0x01
     372:	20 83       	st	Z, r18
     374:	88 ec       	ldi	r24, 0xC8	; 200
     376:	90 e0       	ldi	r25, 0x00	; 0
     378:	28 ec       	ldi	r18, 0xC8	; 200
     37a:	30 e0       	ldi	r19, 0x00	; 0
     37c:	f9 01       	movw	r30, r18
     37e:	20 81       	ld	r18, Z
     380:	22 60       	ori	r18, 0x02	; 2
     382:	fc 01       	movw	r30, r24
     384:	20 83       	st	Z, r18
     386:	89 ec       	ldi	r24, 0xC9	; 201
     388:	90 e0       	ldi	r25, 0x00	; 0
     38a:	29 ec       	ldi	r18, 0xC9	; 201
     38c:	30 e0       	ldi	r19, 0x00	; 0
     38e:	f9 01       	movw	r30, r18
     390:	20 81       	ld	r18, Z
     392:	28 69       	ori	r18, 0x98	; 152
     394:	fc 01       	movw	r30, r24
     396:	20 83       	st	Z, r18
     398:	00 00       	nop
     39a:	df 91       	pop	r29
     39c:	cf 91       	pop	r28
     39e:	08 95       	ret

000003a0 <send_Byte_0>:
     3a0:	cf 93       	push	r28
     3a2:	df 93       	push	r29
     3a4:	1f 92       	push	r1
     3a6:	cd b7       	in	r28, 0x3d	; 61
     3a8:	de b7       	in	r29, 0x3e	; 62
     3aa:	89 83       	std	Y+1, r24	; 0x01
     3ac:	00 00       	nop
     3ae:	80 ec       	ldi	r24, 0xC0	; 192
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	fc 01       	movw	r30, r24
     3b4:	80 81       	ld	r24, Z
     3b6:	88 2f       	mov	r24, r24
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	80 72       	andi	r24, 0x20	; 32
     3bc:	99 27       	eor	r25, r25
     3be:	89 2b       	or	r24, r25
     3c0:	b1 f3       	breq	.-20     	; 0x3ae <send_Byte_0+0xe>
     3c2:	86 ec       	ldi	r24, 0xC6	; 198
     3c4:	90 e0       	ldi	r25, 0x00	; 0
     3c6:	29 81       	ldd	r18, Y+1	; 0x01
     3c8:	fc 01       	movw	r30, r24
     3ca:	20 83       	st	Z, r18
     3cc:	00 00       	nop
     3ce:	0f 90       	pop	r0
     3d0:	df 91       	pop	r29
     3d2:	cf 91       	pop	r28
     3d4:	08 95       	ret

000003d6 <send_Byte_1>:
     3d6:	cf 93       	push	r28
     3d8:	df 93       	push	r29
     3da:	1f 92       	push	r1
     3dc:	cd b7       	in	r28, 0x3d	; 61
     3de:	de b7       	in	r29, 0x3e	; 62
     3e0:	89 83       	std	Y+1, r24	; 0x01
     3e2:	00 00       	nop
     3e4:	88 ec       	ldi	r24, 0xC8	; 200
     3e6:	90 e0       	ldi	r25, 0x00	; 0
     3e8:	fc 01       	movw	r30, r24
     3ea:	80 81       	ld	r24, Z
     3ec:	88 2f       	mov	r24, r24
     3ee:	90 e0       	ldi	r25, 0x00	; 0
     3f0:	80 72       	andi	r24, 0x20	; 32
     3f2:	99 27       	eor	r25, r25
     3f4:	89 2b       	or	r24, r25
     3f6:	b1 f3       	breq	.-20     	; 0x3e4 <send_Byte_1+0xe>
     3f8:	8e ec       	ldi	r24, 0xCE	; 206
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	29 81       	ldd	r18, Y+1	; 0x01
     3fe:	fc 01       	movw	r30, r24
     400:	20 83       	st	Z, r18
     402:	00 00       	nop
     404:	0f 90       	pop	r0
     406:	df 91       	pop	r29
     408:	cf 91       	pop	r28
     40a:	08 95       	ret

0000040c <to_pc>:
     40c:	cf 93       	push	r28
     40e:	df 93       	push	r29
     410:	00 d0       	rcall	.+0      	; 0x412 <to_pc+0x6>
     412:	cd b7       	in	r28, 0x3d	; 61
     414:	de b7       	in	r29, 0x3e	; 62
     416:	9a 83       	std	Y+2, r25	; 0x02
     418:	89 83       	std	Y+1, r24	; 0x01
     41a:	0b c0       	rjmp	.+22     	; 0x432 <to_pc+0x26>
     41c:	89 81       	ldd	r24, Y+1	; 0x01
     41e:	9a 81       	ldd	r25, Y+2	; 0x02
     420:	fc 01       	movw	r30, r24
     422:	80 81       	ld	r24, Z
     424:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <send_Byte_0>
     428:	89 81       	ldd	r24, Y+1	; 0x01
     42a:	9a 81       	ldd	r25, Y+2	; 0x02
     42c:	01 96       	adiw	r24, 0x01	; 1
     42e:	9a 83       	std	Y+2, r25	; 0x02
     430:	89 83       	std	Y+1, r24	; 0x01
     432:	89 81       	ldd	r24, Y+1	; 0x01
     434:	9a 81       	ldd	r25, Y+2	; 0x02
     436:	fc 01       	movw	r30, r24
     438:	80 81       	ld	r24, Z
     43a:	88 23       	and	r24, r24
     43c:	79 f7       	brne	.-34     	; 0x41c <to_pc+0x10>
     43e:	10 92 8f 02 	sts	0x028F, r1	; 0x80028f <uart_str_complete>
     442:	00 00       	nop
     444:	0f 90       	pop	r0
     446:	0f 90       	pop	r0
     448:	df 91       	pop	r29
     44a:	cf 91       	pop	r28
     44c:	08 95       	ret

0000044e <to_uARM>:
     44e:	cf 93       	push	r28
     450:	df 93       	push	r29
     452:	00 d0       	rcall	.+0      	; 0x454 <to_uARM+0x6>
     454:	cd b7       	in	r28, 0x3d	; 61
     456:	de b7       	in	r29, 0x3e	; 62
     458:	9a 83       	std	Y+2, r25	; 0x02
     45a:	89 83       	std	Y+1, r24	; 0x01
     45c:	0b c0       	rjmp	.+22     	; 0x474 <to_uARM+0x26>
     45e:	89 81       	ldd	r24, Y+1	; 0x01
     460:	9a 81       	ldd	r25, Y+2	; 0x02
     462:	fc 01       	movw	r30, r24
     464:	80 81       	ld	r24, Z
     466:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <send_Byte_1>
     46a:	89 81       	ldd	r24, Y+1	; 0x01
     46c:	9a 81       	ldd	r25, Y+2	; 0x02
     46e:	01 96       	adiw	r24, 0x01	; 1
     470:	9a 83       	std	Y+2, r25	; 0x02
     472:	89 83       	std	Y+1, r24	; 0x01
     474:	89 81       	ldd	r24, Y+1	; 0x01
     476:	9a 81       	ldd	r25, Y+2	; 0x02
     478:	fc 01       	movw	r30, r24
     47a:	80 81       	ld	r24, Z
     47c:	88 23       	and	r24, r24
     47e:	79 f7       	brne	.-34     	; 0x45e <to_uARM+0x10>
     480:	10 92 49 02 	sts	0x0249, r1	; 0x800249 <uart_str_complete1>
     484:	00 00       	nop
     486:	0f 90       	pop	r0
     488:	0f 90       	pop	r0
     48a:	df 91       	pop	r29
     48c:	cf 91       	pop	r28
     48e:	08 95       	ret

00000490 <send_to_uArm>:
     490:	cf 93       	push	r28
     492:	df 93       	push	r29
     494:	00 d0       	rcall	.+0      	; 0x496 <send_to_uArm+0x6>
     496:	cd b7       	in	r28, 0x3d	; 61
     498:	de b7       	in	r29, 0x3e	; 62
     49a:	9a 83       	std	Y+2, r25	; 0x02
     49c:	89 83       	std	Y+1, r24	; 0x01
     49e:	89 81       	ldd	r24, Y+1	; 0x01
     4a0:	9a 81       	ldd	r25, Y+2	; 0x02
     4a2:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
     4a6:	80 e0       	ldi	r24, 0x00	; 0
     4a8:	91 e0       	ldi	r25, 0x01	; 1
     4aa:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
     4ae:	04 c0       	rjmp	.+8      	; 0x4b8 <send_to_uArm+0x28>
     4b0:	80 e0       	ldi	r24, 0x00	; 0
     4b2:	91 e0       	ldi	r25, 0x01	; 1
     4b4:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
     4b8:	80 91 4f 02 	lds	r24, 0x024F	; 0x80024f <uart_string1+0x4>
     4bc:	81 33       	cpi	r24, 0x31	; 49
     4be:	c1 f3       	breq	.-16     	; 0x4b0 <send_to_uArm+0x20>
     4c0:	00 00       	nop
     4c2:	0f 90       	pop	r0
     4c4:	0f 90       	pop	r0
     4c6:	df 91       	pop	r29
     4c8:	cf 91       	pop	r28
     4ca:	08 95       	ret

000004cc <__vector_20>:
     4cc:	1f 92       	push	r1
     4ce:	0f 92       	push	r0
     4d0:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     4d4:	0f 92       	push	r0
     4d6:	11 24       	eor	r1, r1
     4d8:	2f 93       	push	r18
     4da:	3f 93       	push	r19
     4dc:	4f 93       	push	r20
     4de:	5f 93       	push	r21
     4e0:	6f 93       	push	r22
     4e2:	7f 93       	push	r23
     4e4:	8f 93       	push	r24
     4e6:	9f 93       	push	r25
     4e8:	af 93       	push	r26
     4ea:	bf 93       	push	r27
     4ec:	ef 93       	push	r30
     4ee:	ff 93       	push	r31
     4f0:	cf 93       	push	r28
     4f2:	df 93       	push	r29
     4f4:	1f 92       	push	r1
     4f6:	cd b7       	in	r28, 0x3d	; 61
     4f8:	de b7       	in	r29, 0x3e	; 62
     4fa:	86 ec       	ldi	r24, 0xC6	; 198
     4fc:	90 e0       	ldi	r25, 0x00	; 0
     4fe:	fc 01       	movw	r30, r24
     500:	80 81       	ld	r24, Z
     502:	89 83       	std	Y+1, r24	; 0x01
     504:	89 81       	ldd	r24, Y+1	; 0x01
     506:	88 2f       	mov	r24, r24
     508:	90 e0       	ldi	r25, 0x00	; 0
     50a:	09 2e       	mov	r0, r25
     50c:	00 0c       	add	r0, r0
     50e:	aa 0b       	sbc	r26, r26
     510:	bb 0b       	sbc	r27, r27
     512:	4a e0       	ldi	r20, 0x0A	; 10
     514:	50 e0       	ldi	r21, 0x00	; 0
     516:	29 e4       	ldi	r18, 0x49	; 73
     518:	30 e0       	ldi	r19, 0x00	; 0
     51a:	84 1b       	sub	r24, r20
     51c:	95 0b       	sbc	r25, r21
     51e:	28 17       	cp	r18, r24
     520:	39 07       	cpc	r19, r25
     522:	a0 f1       	brcs	.+104    	; 0x58c <__vector_20+0xc0>
     524:	82 5c       	subi	r24, 0xC2	; 194
     526:	9f 4f       	sbci	r25, 0xFF	; 255
     528:	fc 01       	movw	r30, r24
     52a:	0c 94 94 0c 	jmp	0x1928	; 0x1928 <__tablejump2__>
     52e:	80 e3       	ldi	r24, 0x30	; 48
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	0e 94 53 03 	call	0x6a6	; 0x6a6 <set_led_mode>
     536:	87 e0       	ldi	r24, 0x07	; 7
     538:	91 e0       	ldi	r25, 0x01	; 1
     53a:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
     53e:	3e c0       	rjmp	.+124    	; 0x5bc <__vector_20+0xf0>
     540:	80 e1       	ldi	r24, 0x10	; 16
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	0e 94 53 03 	call	0x6a6	; 0x6a6 <set_led_mode>
     548:	39 c0       	rjmp	.+114    	; 0x5bc <__vector_20+0xf0>
     54a:	80 e4       	ldi	r24, 0x40	; 64
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	0e 94 53 03 	call	0x6a6	; 0x6a6 <set_led_mode>
     552:	34 c0       	rjmp	.+104    	; 0x5bc <__vector_20+0xf0>
     554:	10 92 97 02 	sts	0x0297, r1	; 0x800297 <data_bytes_recieved>
     558:	81 e0       	ldi	r24, 0x01	; 1
     55a:	80 93 8f 02 	sts	0x028F, r24	; 0x80028f <uart_str_complete>
     55e:	2e c0       	rjmp	.+92     	; 0x5bc <__vector_20+0xf0>
     560:	80 e2       	ldi	r24, 0x20	; 32
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	0e 94 53 03 	call	0x6a6	; 0x6a6 <set_led_mode>
     568:	0e 94 83 04 	call	0x906	; 0x906 <start_nowait>
     56c:	81 e0       	ldi	r24, 0x01	; 1
     56e:	80 93 90 02 	sts	0x0290, r24	; 0x800290 <routine_done>
     572:	24 c0       	rjmp	.+72     	; 0x5bc <__vector_20+0xf0>
     574:	81 e0       	ldi	r24, 0x01	; 1
     576:	80 93 94 02 	sts	0x0294, r24	; 0x800294 <good>
     57a:	20 c0       	rjmp	.+64     	; 0x5bc <__vector_20+0xf0>
     57c:	81 e0       	ldi	r24, 0x01	; 1
     57e:	80 93 7e 02 	sts	0x027E, r24	; 0x80027e <false_state>
     582:	1c c0       	rjmp	.+56     	; 0x5bc <__vector_20+0xf0>
     584:	81 e0       	ldi	r24, 0x01	; 1
     586:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <pc_ready>
     58a:	18 c0       	rjmp	.+48     	; 0x5bc <__vector_20+0xf0>
     58c:	85 e2       	ldi	r24, 0x25	; 37
     58e:	90 e0       	ldi	r25, 0x00	; 0
     590:	25 e2       	ldi	r18, 0x25	; 37
     592:	30 e0       	ldi	r19, 0x00	; 0
     594:	f9 01       	movw	r30, r18
     596:	20 81       	ld	r18, Z
     598:	21 60       	ori	r18, 0x01	; 1
     59a:	fc 01       	movw	r30, r24
     59c:	20 83       	st	Z, r18
     59e:	80 91 97 02 	lds	r24, 0x0297	; 0x800297 <data_bytes_recieved>
     5a2:	88 2f       	mov	r24, r24
     5a4:	90 e0       	ldi	r25, 0x00	; 0
     5a6:	87 56       	subi	r24, 0x67	; 103
     5a8:	9d 4f       	sbci	r25, 0xFD	; 253
     5aa:	29 81       	ldd	r18, Y+1	; 0x01
     5ac:	fc 01       	movw	r30, r24
     5ae:	20 83       	st	Z, r18
     5b0:	80 91 97 02 	lds	r24, 0x0297	; 0x800297 <data_bytes_recieved>
     5b4:	8f 5f       	subi	r24, 0xFF	; 255
     5b6:	80 93 97 02 	sts	0x0297, r24	; 0x800297 <data_bytes_recieved>
     5ba:	00 00       	nop
     5bc:	00 00       	nop
     5be:	0f 90       	pop	r0
     5c0:	df 91       	pop	r29
     5c2:	cf 91       	pop	r28
     5c4:	ff 91       	pop	r31
     5c6:	ef 91       	pop	r30
     5c8:	bf 91       	pop	r27
     5ca:	af 91       	pop	r26
     5cc:	9f 91       	pop	r25
     5ce:	8f 91       	pop	r24
     5d0:	7f 91       	pop	r23
     5d2:	6f 91       	pop	r22
     5d4:	5f 91       	pop	r21
     5d6:	4f 91       	pop	r20
     5d8:	3f 91       	pop	r19
     5da:	2f 91       	pop	r18
     5dc:	0f 90       	pop	r0
     5de:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     5e2:	0f 90       	pop	r0
     5e4:	1f 90       	pop	r1
     5e6:	18 95       	reti

000005e8 <__vector_28>:
     5e8:	1f 92       	push	r1
     5ea:	0f 92       	push	r0
     5ec:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     5f0:	0f 92       	push	r0
     5f2:	11 24       	eor	r1, r1
     5f4:	2f 93       	push	r18
     5f6:	8f 93       	push	r24
     5f8:	9f 93       	push	r25
     5fa:	ef 93       	push	r30
     5fc:	ff 93       	push	r31
     5fe:	cf 93       	push	r28
     600:	df 93       	push	r29
     602:	1f 92       	push	r1
     604:	cd b7       	in	r28, 0x3d	; 61
     606:	de b7       	in	r29, 0x3e	; 62
     608:	8e ec       	ldi	r24, 0xCE	; 206
     60a:	90 e0       	ldi	r25, 0x00	; 0
     60c:	fc 01       	movw	r30, r24
     60e:	80 81       	ld	r24, Z
     610:	89 83       	std	Y+1, r24	; 0x01
     612:	80 91 49 02 	lds	r24, 0x0249	; 0x800249 <uart_str_complete1>
     616:	88 23       	and	r24, r24
     618:	31 f5       	brne	.+76     	; 0x666 <__vector_28+0x7e>
     61a:	89 81       	ldd	r24, Y+1	; 0x01
     61c:	8a 30       	cpi	r24, 0x0A	; 10
     61e:	b1 f0       	breq	.+44     	; 0x64c <__vector_28+0x64>
     620:	89 81       	ldd	r24, Y+1	; 0x01
     622:	8d 30       	cpi	r24, 0x0D	; 13
     624:	99 f0       	breq	.+38     	; 0x64c <__vector_28+0x64>
     626:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <uart_str_count1>
     62a:	82 33       	cpi	r24, 0x32	; 50
     62c:	78 f4       	brcc	.+30     	; 0x64c <__vector_28+0x64>
     62e:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <uart_str_count1>
     632:	88 2f       	mov	r24, r24
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	85 5b       	subi	r24, 0xB5	; 181
     638:	9d 4f       	sbci	r25, 0xFD	; 253
     63a:	29 81       	ldd	r18, Y+1	; 0x01
     63c:	fc 01       	movw	r30, r24
     63e:	20 83       	st	Z, r18
     640:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <uart_str_count1>
     644:	8f 5f       	subi	r24, 0xFF	; 255
     646:	80 93 4a 02 	sts	0x024A, r24	; 0x80024a <uart_str_count1>
     64a:	0d c0       	rjmp	.+26     	; 0x666 <__vector_28+0x7e>
     64c:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <uart_str_count1>
     650:	88 2f       	mov	r24, r24
     652:	90 e0       	ldi	r25, 0x00	; 0
     654:	85 5b       	subi	r24, 0xB5	; 181
     656:	9d 4f       	sbci	r25, 0xFD	; 253
     658:	fc 01       	movw	r30, r24
     65a:	10 82       	st	Z, r1
     65c:	10 92 4a 02 	sts	0x024A, r1	; 0x80024a <uart_str_count1>
     660:	81 e0       	ldi	r24, 0x01	; 1
     662:	80 93 49 02 	sts	0x0249, r24	; 0x800249 <uart_str_complete1>
     666:	00 00       	nop
     668:	0f 90       	pop	r0
     66a:	df 91       	pop	r29
     66c:	cf 91       	pop	r28
     66e:	ff 91       	pop	r31
     670:	ef 91       	pop	r30
     672:	9f 91       	pop	r25
     674:	8f 91       	pop	r24
     676:	2f 91       	pop	r18
     678:	0f 90       	pop	r0
     67a:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     67e:	0f 90       	pop	r0
     680:	1f 90       	pop	r1
     682:	18 95       	reti

00000684 <clear_port>:
void clear_port()
{
     684:	cf 93       	push	r28
     686:	df 93       	push	r29
     688:	cd b7       	in	r28, 0x3d	; 61
     68a:	de b7       	in	r29, 0x3e	; 62
	PORTD&=~0x70;
     68c:	8b e2       	ldi	r24, 0x2B	; 43
     68e:	90 e0       	ldi	r25, 0x00	; 0
     690:	2b e2       	ldi	r18, 0x2B	; 43
     692:	30 e0       	ldi	r19, 0x00	; 0
     694:	f9 01       	movw	r30, r18
     696:	20 81       	ld	r18, Z
     698:	2f 78       	andi	r18, 0x8F	; 143
     69a:	fc 01       	movw	r30, r24
     69c:	20 83       	st	Z, r18
}
     69e:	00 00       	nop
     6a0:	df 91       	pop	r29
     6a2:	cf 91       	pop	r28
     6a4:	08 95       	ret

000006a6 <set_led_mode>:
void set_led_mode (unsigned char modus)
{
     6a6:	cf 93       	push	r28
     6a8:	df 93       	push	r29
     6aa:	1f 92       	push	r1
     6ac:	cd b7       	in	r28, 0x3d	; 61
     6ae:	de b7       	in	r29, 0x3e	; 62
     6b0:	89 83       	std	Y+1, r24	; 0x01
	clear_port();
     6b2:	0e 94 42 03 	call	0x684	; 0x684 <clear_port>
	PORTD|=modus;
     6b6:	8b e2       	ldi	r24, 0x2B	; 43
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	2b e2       	ldi	r18, 0x2B	; 43
     6bc:	30 e0       	ldi	r19, 0x00	; 0
     6be:	f9 01       	movw	r30, r18
     6c0:	30 81       	ld	r19, Z
     6c2:	29 81       	ldd	r18, Y+1	; 0x01
     6c4:	23 2b       	or	r18, r19
     6c6:	fc 01       	movw	r30, r24
     6c8:	20 83       	st	Z, r18
}
     6ca:	00 00       	nop
     6cc:	0f 90       	pop	r0
     6ce:	df 91       	pop	r29
     6d0:	cf 91       	pop	r28
     6d2:	08 95       	ret

000006d4 <make_sound>:
void make_sound()
{
     6d4:	cf 93       	push	r28
     6d6:	df 93       	push	r29
     6d8:	cd b7       	in	r28, 0x3d	; 61
     6da:	de b7       	in	r29, 0x3e	; 62
     6dc:	6c 97       	sbiw	r28, 0x1c	; 28
     6de:	0f b6       	in	r0, 0x3f	; 63
     6e0:	f8 94       	cli
     6e2:	de bf       	out	0x3e, r29	; 62
     6e4:	0f be       	out	0x3f, r0	; 63
     6e6:	cd bf       	out	0x3d, r28	; 61
	to_uARM("M2210 F500 T200\n");
     6e8:	89 e6       	ldi	r24, 0x69	; 105
     6ea:	91 e0       	ldi	r25, 0x01	; 1
     6ec:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a8 e4       	ldi	r26, 0x48	; 72
     6f6:	b3 e4       	ldi	r27, 0x43	; 67
     6f8:	89 83       	std	Y+1, r24	; 0x01
     6fa:	9a 83       	std	Y+2, r25	; 0x02
     6fc:	ab 83       	std	Y+3, r26	; 0x03
     6fe:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     700:	20 e0       	ldi	r18, 0x00	; 0
     702:	30 e0       	ldi	r19, 0x00	; 0
     704:	4a e7       	ldi	r20, 0x7A	; 122
     706:	55 e4       	ldi	r21, 0x45	; 69
     708:	69 81       	ldd	r22, Y+1	; 0x01
     70a:	7a 81       	ldd	r23, Y+2	; 0x02
     70c:	8b 81       	ldd	r24, Y+3	; 0x03
     70e:	9c 81       	ldd	r25, Y+4	; 0x04
     710:	0e 94 c9 0b 	call	0x1792	; 0x1792 <__mulsf3>
     714:	dc 01       	movw	r26, r24
     716:	cb 01       	movw	r24, r22
     718:	8b 8b       	std	Y+19, r24	; 0x13
     71a:	9c 8b       	std	Y+20, r25	; 0x14
     71c:	ad 8b       	std	Y+21, r26	; 0x15
     71e:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     720:	20 e0       	ldi	r18, 0x00	; 0
     722:	30 e0       	ldi	r19, 0x00	; 0
     724:	40 e8       	ldi	r20, 0x80	; 128
     726:	5f e3       	ldi	r21, 0x3F	; 63
     728:	6b 89       	ldd	r22, Y+19	; 0x13
     72a:	7c 89       	ldd	r23, Y+20	; 0x14
     72c:	8d 89       	ldd	r24, Y+21	; 0x15
     72e:	9e 89       	ldd	r25, Y+22	; 0x16
     730:	0e 94 43 0b 	call	0x1686	; 0x1686 <__cmpsf2>
     734:	88 23       	and	r24, r24
     736:	2c f4       	brge	.+10     	; 0x742 <make_sound+0x6e>
		__ticks = 1;
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	98 8f       	std	Y+24, r25	; 0x18
     73e:	8f 8b       	std	Y+23, r24	; 0x17
     740:	3f c0       	rjmp	.+126    	; 0x7c0 <make_sound+0xec>
	else if (__tmp > 65535)
     742:	20 e0       	ldi	r18, 0x00	; 0
     744:	3f ef       	ldi	r19, 0xFF	; 255
     746:	4f e7       	ldi	r20, 0x7F	; 127
     748:	57 e4       	ldi	r21, 0x47	; 71
     74a:	6b 89       	ldd	r22, Y+19	; 0x13
     74c:	7c 89       	ldd	r23, Y+20	; 0x14
     74e:	8d 89       	ldd	r24, Y+21	; 0x15
     750:	9e 89       	ldd	r25, Y+22	; 0x16
     752:	0e 94 c4 0b 	call	0x1788	; 0x1788 <__gesf2>
     756:	18 16       	cp	r1, r24
     758:	4c f5       	brge	.+82     	; 0x7ac <make_sound+0xd8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     75a:	20 e0       	ldi	r18, 0x00	; 0
     75c:	30 e0       	ldi	r19, 0x00	; 0
     75e:	40 e2       	ldi	r20, 0x20	; 32
     760:	51 e4       	ldi	r21, 0x41	; 65
     762:	69 81       	ldd	r22, Y+1	; 0x01
     764:	7a 81       	ldd	r23, Y+2	; 0x02
     766:	8b 81       	ldd	r24, Y+3	; 0x03
     768:	9c 81       	ldd	r25, Y+4	; 0x04
     76a:	0e 94 c9 0b 	call	0x1792	; 0x1792 <__mulsf3>
     76e:	dc 01       	movw	r26, r24
     770:	cb 01       	movw	r24, r22
     772:	bc 01       	movw	r22, r24
     774:	cd 01       	movw	r24, r26
     776:	0e 94 48 0b 	call	0x1690	; 0x1690 <__fixunssfsi>
     77a:	dc 01       	movw	r26, r24
     77c:	cb 01       	movw	r24, r22
     77e:	98 8f       	std	Y+24, r25	; 0x18
     780:	8f 8b       	std	Y+23, r24	; 0x17
     782:	0f c0       	rjmp	.+30     	; 0x7a2 <make_sound+0xce>
     784:	80 e9       	ldi	r24, 0x90	; 144
     786:	91 e0       	ldi	r25, 0x01	; 1
     788:	9a 8f       	std	Y+26, r25	; 0x1a
     78a:	89 8f       	std	Y+25, r24	; 0x19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     78c:	89 8d       	ldd	r24, Y+25	; 0x19
     78e:	9a 8d       	ldd	r25, Y+26	; 0x1a
     790:	01 97       	sbiw	r24, 0x01	; 1
     792:	f1 f7       	brne	.-4      	; 0x790 <make_sound+0xbc>
     794:	9a 8f       	std	Y+26, r25	; 0x1a
     796:	89 8f       	std	Y+25, r24	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     798:	8f 89       	ldd	r24, Y+23	; 0x17
     79a:	98 8d       	ldd	r25, Y+24	; 0x18
     79c:	01 97       	sbiw	r24, 0x01	; 1
     79e:	98 8f       	std	Y+24, r25	; 0x18
     7a0:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     7a2:	8f 89       	ldd	r24, Y+23	; 0x17
     7a4:	98 8d       	ldd	r25, Y+24	; 0x18
     7a6:	89 2b       	or	r24, r25
     7a8:	69 f7       	brne	.-38     	; 0x784 <make_sound+0xb0>
     7aa:	14 c0       	rjmp	.+40     	; 0x7d4 <make_sound+0x100>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7ac:	6b 89       	ldd	r22, Y+19	; 0x13
     7ae:	7c 89       	ldd	r23, Y+20	; 0x14
     7b0:	8d 89       	ldd	r24, Y+21	; 0x15
     7b2:	9e 89       	ldd	r25, Y+22	; 0x16
     7b4:	0e 94 48 0b 	call	0x1690	; 0x1690 <__fixunssfsi>
     7b8:	dc 01       	movw	r26, r24
     7ba:	cb 01       	movw	r24, r22
     7bc:	98 8f       	std	Y+24, r25	; 0x18
     7be:	8f 8b       	std	Y+23, r24	; 0x17
     7c0:	8f 89       	ldd	r24, Y+23	; 0x17
     7c2:	98 8d       	ldd	r25, Y+24	; 0x18
     7c4:	9c 8f       	std	Y+28, r25	; 0x1c
     7c6:	8b 8f       	std	Y+27, r24	; 0x1b
     7c8:	8b 8d       	ldd	r24, Y+27	; 0x1b
     7ca:	9c 8d       	ldd	r25, Y+28	; 0x1c
     7cc:	01 97       	sbiw	r24, 0x01	; 1
     7ce:	f1 f7       	brne	.-4      	; 0x7cc <make_sound+0xf8>
     7d0:	9c 8f       	std	Y+28, r25	; 0x1c
     7d2:	8b 8f       	std	Y+27, r24	; 0x1b
	_delay_ms(200);
	to_uARM("M2210 F1000 T500\n");
     7d4:	8a e7       	ldi	r24, 0x7A	; 122
     7d6:	91 e0       	ldi	r25, 0x01	; 1
     7d8:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
     7dc:	80 e0       	ldi	r24, 0x00	; 0
     7de:	90 e0       	ldi	r25, 0x00	; 0
     7e0:	aa ef       	ldi	r26, 0xFA	; 250
     7e2:	b3 e4       	ldi	r27, 0x43	; 67
     7e4:	8d 83       	std	Y+5, r24	; 0x05
     7e6:	9e 83       	std	Y+6, r25	; 0x06
     7e8:	af 83       	std	Y+7, r26	; 0x07
     7ea:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     7ec:	20 e0       	ldi	r18, 0x00	; 0
     7ee:	30 e0       	ldi	r19, 0x00	; 0
     7f0:	4a e7       	ldi	r20, 0x7A	; 122
     7f2:	55 e4       	ldi	r21, 0x45	; 69
     7f4:	6d 81       	ldd	r22, Y+5	; 0x05
     7f6:	7e 81       	ldd	r23, Y+6	; 0x06
     7f8:	8f 81       	ldd	r24, Y+7	; 0x07
     7fa:	98 85       	ldd	r25, Y+8	; 0x08
     7fc:	0e 94 c9 0b 	call	0x1792	; 0x1792 <__mulsf3>
     800:	dc 01       	movw	r26, r24
     802:	cb 01       	movw	r24, r22
     804:	89 87       	std	Y+9, r24	; 0x09
     806:	9a 87       	std	Y+10, r25	; 0x0a
     808:	ab 87       	std	Y+11, r26	; 0x0b
     80a:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     80c:	20 e0       	ldi	r18, 0x00	; 0
     80e:	30 e0       	ldi	r19, 0x00	; 0
     810:	40 e8       	ldi	r20, 0x80	; 128
     812:	5f e3       	ldi	r21, 0x3F	; 63
     814:	69 85       	ldd	r22, Y+9	; 0x09
     816:	7a 85       	ldd	r23, Y+10	; 0x0a
     818:	8b 85       	ldd	r24, Y+11	; 0x0b
     81a:	9c 85       	ldd	r25, Y+12	; 0x0c
     81c:	0e 94 43 0b 	call	0x1686	; 0x1686 <__cmpsf2>
     820:	88 23       	and	r24, r24
     822:	2c f4       	brge	.+10     	; 0x82e <make_sound+0x15a>
		__ticks = 1;
     824:	81 e0       	ldi	r24, 0x01	; 1
     826:	90 e0       	ldi	r25, 0x00	; 0
     828:	9e 87       	std	Y+14, r25	; 0x0e
     82a:	8d 87       	std	Y+13, r24	; 0x0d
     82c:	3f c0       	rjmp	.+126    	; 0x8ac <make_sound+0x1d8>
	else if (__tmp > 65535)
     82e:	20 e0       	ldi	r18, 0x00	; 0
     830:	3f ef       	ldi	r19, 0xFF	; 255
     832:	4f e7       	ldi	r20, 0x7F	; 127
     834:	57 e4       	ldi	r21, 0x47	; 71
     836:	69 85       	ldd	r22, Y+9	; 0x09
     838:	7a 85       	ldd	r23, Y+10	; 0x0a
     83a:	8b 85       	ldd	r24, Y+11	; 0x0b
     83c:	9c 85       	ldd	r25, Y+12	; 0x0c
     83e:	0e 94 c4 0b 	call	0x1788	; 0x1788 <__gesf2>
     842:	18 16       	cp	r1, r24
     844:	4c f5       	brge	.+82     	; 0x898 <make_sound+0x1c4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     846:	20 e0       	ldi	r18, 0x00	; 0
     848:	30 e0       	ldi	r19, 0x00	; 0
     84a:	40 e2       	ldi	r20, 0x20	; 32
     84c:	51 e4       	ldi	r21, 0x41	; 65
     84e:	6d 81       	ldd	r22, Y+5	; 0x05
     850:	7e 81       	ldd	r23, Y+6	; 0x06
     852:	8f 81       	ldd	r24, Y+7	; 0x07
     854:	98 85       	ldd	r25, Y+8	; 0x08
     856:	0e 94 c9 0b 	call	0x1792	; 0x1792 <__mulsf3>
     85a:	dc 01       	movw	r26, r24
     85c:	cb 01       	movw	r24, r22
     85e:	bc 01       	movw	r22, r24
     860:	cd 01       	movw	r24, r26
     862:	0e 94 48 0b 	call	0x1690	; 0x1690 <__fixunssfsi>
     866:	dc 01       	movw	r26, r24
     868:	cb 01       	movw	r24, r22
     86a:	9e 87       	std	Y+14, r25	; 0x0e
     86c:	8d 87       	std	Y+13, r24	; 0x0d
     86e:	0f c0       	rjmp	.+30     	; 0x88e <make_sound+0x1ba>
     870:	80 e9       	ldi	r24, 0x90	; 144
     872:	91 e0       	ldi	r25, 0x01	; 1
     874:	98 8b       	std	Y+16, r25	; 0x10
     876:	8f 87       	std	Y+15, r24	; 0x0f
     878:	8f 85       	ldd	r24, Y+15	; 0x0f
     87a:	98 89       	ldd	r25, Y+16	; 0x10
     87c:	01 97       	sbiw	r24, 0x01	; 1
     87e:	f1 f7       	brne	.-4      	; 0x87c <make_sound+0x1a8>
     880:	98 8b       	std	Y+16, r25	; 0x10
     882:	8f 87       	std	Y+15, r24	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     884:	8d 85       	ldd	r24, Y+13	; 0x0d
     886:	9e 85       	ldd	r25, Y+14	; 0x0e
     888:	01 97       	sbiw	r24, 0x01	; 1
     88a:	9e 87       	std	Y+14, r25	; 0x0e
     88c:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     88e:	8d 85       	ldd	r24, Y+13	; 0x0d
     890:	9e 85       	ldd	r25, Y+14	; 0x0e
     892:	89 2b       	or	r24, r25
     894:	69 f7       	brne	.-38     	; 0x870 <make_sound+0x19c>
     896:	14 c0       	rjmp	.+40     	; 0x8c0 <make_sound+0x1ec>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     898:	69 85       	ldd	r22, Y+9	; 0x09
     89a:	7a 85       	ldd	r23, Y+10	; 0x0a
     89c:	8b 85       	ldd	r24, Y+11	; 0x0b
     89e:	9c 85       	ldd	r25, Y+12	; 0x0c
     8a0:	0e 94 48 0b 	call	0x1690	; 0x1690 <__fixunssfsi>
     8a4:	dc 01       	movw	r26, r24
     8a6:	cb 01       	movw	r24, r22
     8a8:	9e 87       	std	Y+14, r25	; 0x0e
     8aa:	8d 87       	std	Y+13, r24	; 0x0d
     8ac:	8d 85       	ldd	r24, Y+13	; 0x0d
     8ae:	9e 85       	ldd	r25, Y+14	; 0x0e
     8b0:	9a 8b       	std	Y+18, r25	; 0x12
     8b2:	89 8b       	std	Y+17, r24	; 0x11
     8b4:	89 89       	ldd	r24, Y+17	; 0x11
     8b6:	9a 89       	ldd	r25, Y+18	; 0x12
     8b8:	01 97       	sbiw	r24, 0x01	; 1
     8ba:	f1 f7       	brne	.-4      	; 0x8b8 <make_sound+0x1e4>
     8bc:	9a 8b       	std	Y+18, r25	; 0x12
     8be:	89 8b       	std	Y+17, r24	; 0x11
	_delay_ms(500);
	to_uARM("M2210 F2000 T500\n");
     8c0:	8c e8       	ldi	r24, 0x8C	; 140
     8c2:	91 e0       	ldi	r25, 0x01	; 1
     8c4:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
}
     8c8:	00 00       	nop
     8ca:	6c 96       	adiw	r28, 0x1c	; 28
     8cc:	0f b6       	in	r0, 0x3f	; 63
     8ce:	f8 94       	cli
     8d0:	de bf       	out	0x3e, r29	; 62
     8d2:	0f be       	out	0x3f, r0	; 63
     8d4:	cd bf       	out	0x3d, r28	; 61
     8d6:	df 91       	pop	r29
     8d8:	cf 91       	pop	r28
     8da:	08 95       	ret

000008dc <goto_start>:
void goto_start()
{
     8dc:	cf 93       	push	r28
     8de:	df 93       	push	r29
     8e0:	cd b7       	in	r28, 0x3d	; 61
     8e2:	de b7       	in	r29, 0x3e	; 62
	send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
     8e4:	8e e9       	ldi	r24, 0x9E	; 158
     8e6:	91 e0       	ldi	r25, 0x01	; 1
     8e8:	0e 94 48 02 	call	0x490	; 0x490 <send_to_uArm>
	while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     8ec:	04 c0       	rjmp	.+8      	; 0x8f6 <goto_start+0x1a>
	{
		to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
     8ee:	80 e0       	ldi	r24, 0x00	; 0
     8f0:	91 e0       	ldi	r25, 0x01	; 1
     8f2:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
	to_uARM("M2210 F2000 T500\n");
}
void goto_start()
{
	send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
	while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     8f6:	80 91 4f 02 	lds	r24, 0x024F	; 0x80024f <uart_string1+0x4>
     8fa:	81 33       	cpi	r24, 0x31	; 49
     8fc:	c1 f3       	breq	.-16     	; 0x8ee <goto_start+0x12>
	{
		to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
	}
}
     8fe:	00 00       	nop
     900:	df 91       	pop	r29
     902:	cf 91       	pop	r28
     904:	08 95       	ret

00000906 <start_nowait>:
void start_nowait()
{
     906:	cf 93       	push	r28
     908:	df 93       	push	r29
     90a:	cd b7       	in	r28, 0x3d	; 61
     90c:	de b7       	in	r29, 0x3e	; 62
	send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
     90e:	8e e9       	ldi	r24, 0x9E	; 158
     910:	91 e0       	ldi	r25, 0x01	; 1
     912:	0e 94 48 02 	call	0x490	; 0x490 <send_to_uArm>
}
     916:	00 00       	nop
     918:	df 91       	pop	r29
     91a:	cf 91       	pop	r28
     91c:	08 95       	ret

0000091e <start_up_routine>:
void start_up_routine ()
{
     91e:	cf 93       	push	r28
     920:	df 93       	push	r29
     922:	cd b7       	in	r28, 0x3d	; 61
     924:	de b7       	in	r29, 0x3e	; 62
	init_BT_CAR_V2_0();			// Das Board wird hier initialisiern
     926:	0e 94 25 0b 	call	0x164a	; 0x164a <init_BT_CAR_V2_0>
	wait_1ms(10);
     92a:	6a e0       	ldi	r22, 0x0A	; 10
     92c:	70 e0       	ldi	r23, 0x00	; 0
     92e:	80 e0       	ldi	r24, 0x00	; 0
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	0e 94 9b 08 	call	0x1136	; 0x1136 <wait_1ms>
	init_ADC();
     936:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <init_ADC>
	init_UART0();
     93a:	0e 94 8e 01 	call	0x31c	; 0x31c <init_UART0>
	init_UART1();
     93e:	0e 94 af 01 	call	0x35e	; 0x35e <init_UART1>
	wait_1ms(10);
     942:	6a e0       	ldi	r22, 0x0A	; 10
     944:	70 e0       	ldi	r23, 0x00	; 0
     946:	80 e0       	ldi	r24, 0x00	; 0
     948:	90 e0       	ldi	r25, 0x00	; 0
     94a:	0e 94 9b 08 	call	0x1136	; 0x1136 <wait_1ms>
	wait_1ms(50);
     94e:	62 e3       	ldi	r22, 0x32	; 50
     950:	70 e0       	ldi	r23, 0x00	; 0
     952:	80 e0       	ldi	r24, 0x00	; 0
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	0e 94 9b 08 	call	0x1136	; 0x1136 <wait_1ms>
	write_text(0,0,PSTR("        OKE         "));
     95a:	80 e1       	ldi	r24, 0x10	; 16
     95c:	91 e0       	ldi	r25, 0x01	; 1
     95e:	ac 01       	movw	r20, r24
     960:	60 e0       	ldi	r22, 0x00	; 0
     962:	80 e0       	ldi	r24, 0x00	; 0
     964:	0e 94 45 09 	call	0x128a	; 0x128a <write_text>
	write_text(1,0,PSTR("        BY          "));
     968:	85 e2       	ldi	r24, 0x25	; 37
     96a:	91 e0       	ldi	r25, 0x01	; 1
     96c:	ac 01       	movw	r20, r24
     96e:	60 e0       	ldi	r22, 0x00	; 0
     970:	81 e0       	ldi	r24, 0x01	; 1
     972:	0e 94 45 09 	call	0x128a	; 0x128a <write_text>
	write_text(2,0,PSTR("        JAN         "));
     976:	8a e3       	ldi	r24, 0x3A	; 58
     978:	91 e0       	ldi	r25, 0x01	; 1
     97a:	ac 01       	movw	r20, r24
     97c:	60 e0       	ldi	r22, 0x00	; 0
     97e:	82 e0       	ldi	r24, 0x02	; 2
     980:	0e 94 45 09 	call	0x128a	; 0x128a <write_text>
	write_text(3,0,PSTR("       TENDAI       "));
     984:	8f e4       	ldi	r24, 0x4F	; 79
     986:	91 e0       	ldi	r25, 0x01	; 1
     988:	ac 01       	movw	r20, r24
     98a:	60 e0       	ldi	r22, 0x00	; 0
     98c:	83 e0       	ldi	r24, 0x03	; 3
     98e:	0e 94 45 09 	call	0x128a	; 0x128a <write_text>
	set_led_mode(IDLE);
     992:	80 e4       	ldi	r24, 0x40	; 64
     994:	0e 94 53 03 	call	0x6a6	; 0x6a6 <set_led_mode>
	goto_start();
     998:	0e 94 6e 04 	call	0x8dc	; 0x8dc <goto_start>
	make_sound();
     99c:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <make_sound>
	while(pc_ready==0)
     9a0:	09 c0       	rjmp	.+18     	; 0x9b4 <start_up_routine+0x96>
	{
		send_Byte_0('D');
     9a2:	84 e4       	ldi	r24, 0x44	; 68
     9a4:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <send_Byte_0>
		wait_1ms(500);
     9a8:	64 ef       	ldi	r22, 0xF4	; 244
     9aa:	71 e0       	ldi	r23, 0x01	; 1
     9ac:	80 e0       	ldi	r24, 0x00	; 0
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	0e 94 9b 08 	call	0x1136	; 0x1136 <wait_1ms>
	write_text(2,0,PSTR("        JAN         "));
	write_text(3,0,PSTR("       TENDAI       "));
	set_led_mode(IDLE);
	goto_start();
	make_sound();
	while(pc_ready==0)
     9b4:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <pc_ready>
     9b8:	88 23       	and	r24, r24
     9ba:	99 f3       	breq	.-26     	; 0x9a2 <start_up_routine+0x84>
	{
		send_Byte_0('D');
		wait_1ms(500);
	}
	goto_start();
     9bc:	0e 94 6e 04 	call	0x8dc	; 0x8dc <goto_start>
	set_led_mode(FINISHED);
     9c0:	80 e2       	ldi	r24, 0x20	; 32
     9c2:	0e 94 53 03 	call	0x6a6	; 0x6a6 <set_led_mode>
}
     9c6:	00 00       	nop
     9c8:	df 91       	pop	r29
     9ca:	cf 91       	pop	r28
     9cc:	08 95       	ret

000009ce <main>:



int main (void)
{
     9ce:	cf 92       	push	r12
     9d0:	ef 92       	push	r14
     9d2:	0f 93       	push	r16
     9d4:	cf 93       	push	r28
     9d6:	df 93       	push	r29
     9d8:	cd b7       	in	r28, 0x3d	; 61
     9da:	de b7       	in	r29, 0x3e	; 62
     9dc:	cb 56       	subi	r28, 0x6B	; 107
     9de:	d1 09       	sbc	r29, r1
     9e0:	0f b6       	in	r0, 0x3f	; 63
     9e2:	f8 94       	cli
     9e4:	de bf       	out	0x3e, r29	; 62
     9e6:	0f be       	out	0x3f, r0	; 63
     9e8:	cd bf       	out	0x3d, r28	; 61
	unsigned char taster,direction,counter,go_through;
	int recieved_X,recieved_Y;
	unsigned char buffer [30];
	unsigned char return_buffer[30];
	start_up_routine();
     9ea:	0e 94 8f 04 	call	0x91e	; 0x91e <start_up_routine>
			//
	//} letter;
	*/

	//Note	Frequency (Hz)	
	goto_start();
     9ee:	0e 94 6e 04 	call	0x8dc	; 0x8dc <goto_start>
	to_uARM("M2210 F500 T20\n");
     9f2:	85 eb       	ldi	r24, 0xB5	; 181
     9f4:	91 e0       	ldi	r25, 0x01	; 1
     9f6:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
	clear_lcd();
     9fa:	0e 94 c2 0a 	call	0x1584	; 0x1584 <clear_lcd>
	wait_1ms(10);
     9fe:	6a e0       	ldi	r22, 0x0A	; 10
     a00:	70 e0       	ldi	r23, 0x00	; 0
     a02:	80 e0       	ldi	r24, 0x00	; 0
     a04:	90 e0       	ldi	r25, 0x00	; 0
     a06:	0e 94 9b 08 	call	0x1136	; 0x1136 <wait_1ms>
	write_text(0,0,"       O.K.E.       ");
     a0a:	45 ec       	ldi	r20, 0xC5	; 197
     a0c:	51 e0       	ldi	r21, 0x01	; 1
     a0e:	60 e0       	ldi	r22, 0x00	; 0
     a10:	80 e0       	ldi	r24, 0x00	; 0
     a12:	0e 94 45 09 	call	0x128a	; 0x128a <write_text>
	write_text(1,1,"        BY          ");
     a16:	4a ed       	ldi	r20, 0xDA	; 218
     a18:	51 e0       	ldi	r21, 0x01	; 1
     a1a:	61 e0       	ldi	r22, 0x01	; 1
     a1c:	81 e0       	ldi	r24, 0x01	; 1
     a1e:	0e 94 45 09 	call	0x128a	; 0x128a <write_text>
	write_text(2,0,"        JAN         ");
     a22:	4f ee       	ldi	r20, 0xEF	; 239
     a24:	51 e0       	ldi	r21, 0x01	; 1
     a26:	60 e0       	ldi	r22, 0x00	; 0
     a28:	82 e0       	ldi	r24, 0x02	; 2
     a2a:	0e 94 45 09 	call	0x128a	; 0x128a <write_text>
	write_text(3,0,"       TENDAI       ");
     a2e:	44 e0       	ldi	r20, 0x04	; 4
     a30:	52 e0       	ldi	r21, 0x02	; 2
     a32:	60 e0       	ldi	r22, 0x00	; 0
     a34:	83 e0       	ldi	r24, 0x03	; 3
     a36:	0e 94 45 09 	call	0x128a	; 0x128a <write_text>
     a3a:	80 e0       	ldi	r24, 0x00	; 0
     a3c:	90 e8       	ldi	r25, 0x80	; 128
     a3e:	ab e3       	ldi	r26, 0x3B	; 59
     a40:	b5 e4       	ldi	r27, 0x45	; 69
     a42:	8e 87       	std	Y+14, r24	; 0x0e
     a44:	9f 87       	std	Y+15, r25	; 0x0f
     a46:	a8 8b       	std	Y+16, r26	; 0x10
     a48:	b9 8b       	std	Y+17, r27	; 0x11

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     a4a:	20 e0       	ldi	r18, 0x00	; 0
     a4c:	30 e0       	ldi	r19, 0x00	; 0
     a4e:	4a e7       	ldi	r20, 0x7A	; 122
     a50:	55 e4       	ldi	r21, 0x45	; 69
     a52:	6e 85       	ldd	r22, Y+14	; 0x0e
     a54:	7f 85       	ldd	r23, Y+15	; 0x0f
     a56:	88 89       	ldd	r24, Y+16	; 0x10
     a58:	99 89       	ldd	r25, Y+17	; 0x11
     a5a:	0e 94 c9 0b 	call	0x1792	; 0x1792 <__mulsf3>
     a5e:	dc 01       	movw	r26, r24
     a60:	cb 01       	movw	r24, r22
     a62:	8a 8b       	std	Y+18, r24	; 0x12
     a64:	9b 8b       	std	Y+19, r25	; 0x13
     a66:	ac 8b       	std	Y+20, r26	; 0x14
     a68:	bd 8b       	std	Y+21, r27	; 0x15
	if (__tmp < 1.0)
     a6a:	20 e0       	ldi	r18, 0x00	; 0
     a6c:	30 e0       	ldi	r19, 0x00	; 0
     a6e:	40 e8       	ldi	r20, 0x80	; 128
     a70:	5f e3       	ldi	r21, 0x3F	; 63
     a72:	6a 89       	ldd	r22, Y+18	; 0x12
     a74:	7b 89       	ldd	r23, Y+19	; 0x13
     a76:	8c 89       	ldd	r24, Y+20	; 0x14
     a78:	9d 89       	ldd	r25, Y+21	; 0x15
     a7a:	0e 94 43 0b 	call	0x1686	; 0x1686 <__cmpsf2>
     a7e:	88 23       	and	r24, r24
     a80:	2c f4       	brge	.+10     	; 0xa8c <main+0xbe>
		__ticks = 1;
     a82:	81 e0       	ldi	r24, 0x01	; 1
     a84:	90 e0       	ldi	r25, 0x00	; 0
     a86:	9f 8b       	std	Y+23, r25	; 0x17
     a88:	8e 8b       	std	Y+22, r24	; 0x16
     a8a:	3f c0       	rjmp	.+126    	; 0xb0a <main+0x13c>
	else if (__tmp > 65535)
     a8c:	20 e0       	ldi	r18, 0x00	; 0
     a8e:	3f ef       	ldi	r19, 0xFF	; 255
     a90:	4f e7       	ldi	r20, 0x7F	; 127
     a92:	57 e4       	ldi	r21, 0x47	; 71
     a94:	6a 89       	ldd	r22, Y+18	; 0x12
     a96:	7b 89       	ldd	r23, Y+19	; 0x13
     a98:	8c 89       	ldd	r24, Y+20	; 0x14
     a9a:	9d 89       	ldd	r25, Y+21	; 0x15
     a9c:	0e 94 c4 0b 	call	0x1788	; 0x1788 <__gesf2>
     aa0:	18 16       	cp	r1, r24
     aa2:	4c f5       	brge	.+82     	; 0xaf6 <main+0x128>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     aa4:	20 e0       	ldi	r18, 0x00	; 0
     aa6:	30 e0       	ldi	r19, 0x00	; 0
     aa8:	40 e2       	ldi	r20, 0x20	; 32
     aaa:	51 e4       	ldi	r21, 0x41	; 65
     aac:	6e 85       	ldd	r22, Y+14	; 0x0e
     aae:	7f 85       	ldd	r23, Y+15	; 0x0f
     ab0:	88 89       	ldd	r24, Y+16	; 0x10
     ab2:	99 89       	ldd	r25, Y+17	; 0x11
     ab4:	0e 94 c9 0b 	call	0x1792	; 0x1792 <__mulsf3>
     ab8:	dc 01       	movw	r26, r24
     aba:	cb 01       	movw	r24, r22
     abc:	bc 01       	movw	r22, r24
     abe:	cd 01       	movw	r24, r26
     ac0:	0e 94 48 0b 	call	0x1690	; 0x1690 <__fixunssfsi>
     ac4:	dc 01       	movw	r26, r24
     ac6:	cb 01       	movw	r24, r22
     ac8:	9f 8b       	std	Y+23, r25	; 0x17
     aca:	8e 8b       	std	Y+22, r24	; 0x16
     acc:	0f c0       	rjmp	.+30     	; 0xaec <main+0x11e>
     ace:	80 e9       	ldi	r24, 0x90	; 144
     ad0:	91 e0       	ldi	r25, 0x01	; 1
     ad2:	99 8f       	std	Y+25, r25	; 0x19
     ad4:	88 8f       	std	Y+24, r24	; 0x18
     ad6:	88 8d       	ldd	r24, Y+24	; 0x18
     ad8:	99 8d       	ldd	r25, Y+25	; 0x19
     ada:	01 97       	sbiw	r24, 0x01	; 1
     adc:	f1 f7       	brne	.-4      	; 0xada <main+0x10c>
     ade:	99 8f       	std	Y+25, r25	; 0x19
     ae0:	88 8f       	std	Y+24, r24	; 0x18
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ae2:	8e 89       	ldd	r24, Y+22	; 0x16
     ae4:	9f 89       	ldd	r25, Y+23	; 0x17
     ae6:	01 97       	sbiw	r24, 0x01	; 1
     ae8:	9f 8b       	std	Y+23, r25	; 0x17
     aea:	8e 8b       	std	Y+22, r24	; 0x16
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     aec:	8e 89       	ldd	r24, Y+22	; 0x16
     aee:	9f 89       	ldd	r25, Y+23	; 0x17
     af0:	89 2b       	or	r24, r25
     af2:	69 f7       	brne	.-38     	; 0xace <main+0x100>
     af4:	14 c0       	rjmp	.+40     	; 0xb1e <main+0x150>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     af6:	6a 89       	ldd	r22, Y+18	; 0x12
     af8:	7b 89       	ldd	r23, Y+19	; 0x13
     afa:	8c 89       	ldd	r24, Y+20	; 0x14
     afc:	9d 89       	ldd	r25, Y+21	; 0x15
     afe:	0e 94 48 0b 	call	0x1690	; 0x1690 <__fixunssfsi>
     b02:	dc 01       	movw	r26, r24
     b04:	cb 01       	movw	r24, r22
     b06:	9f 8b       	std	Y+23, r25	; 0x17
     b08:	8e 8b       	std	Y+22, r24	; 0x16
     b0a:	8e 89       	ldd	r24, Y+22	; 0x16
     b0c:	9f 89       	ldd	r25, Y+23	; 0x17
     b0e:	9b 8f       	std	Y+27, r25	; 0x1b
     b10:	8a 8f       	std	Y+26, r24	; 0x1a
     b12:	8a 8d       	ldd	r24, Y+26	; 0x1a
     b14:	9b 8d       	ldd	r25, Y+27	; 0x1b
     b16:	01 97       	sbiw	r24, 0x01	; 1
     b18:	f1 f7       	brne	.-4      	; 0xb16 <main+0x148>
     b1a:	9b 8f       	std	Y+27, r25	; 0x1b
     b1c:	8a 8f       	std	Y+26, r24	; 0x1a
	_delay_ms(3000);
	set_led_mode(IDLE);
     b1e:	80 e4       	ldi	r24, 0x40	; 64
     b20:	0e 94 53 03 	call	0x6a6	; 0x6a6 <set_led_mode>
	clear_lcd();
     b24:	0e 94 c2 0a 	call	0x1584	; 0x1584 <clear_lcd>
	goto_start();
     b28:	0e 94 6e 04 	call	0x8dc	; 0x8dc <goto_start>
	while(1)
	{
	//	direction=get_direction();
		
		DIP_Switch=get_DIP_Switch();
     b2c:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <get_DIP_Switch>
     b30:	80 93 48 02 	sts	0x0248, r24	; 0x800248 <__data_end>
		write_zahl(3,0,lol,4,0,0);
     b34:	80 91 80 02 	lds	r24, 0x0280	; 0x800280 <lol>
     b38:	90 91 81 02 	lds	r25, 0x0281	; 0x800281 <lol+0x1>
     b3c:	cc 01       	movw	r24, r24
     b3e:	a0 e0       	ldi	r26, 0x00	; 0
     b40:	b0 e0       	ldi	r27, 0x00	; 0
     b42:	c1 2c       	mov	r12, r1
     b44:	e1 2c       	mov	r14, r1
     b46:	04 e0       	ldi	r16, 0x04	; 4
     b48:	9c 01       	movw	r18, r24
     b4a:	ad 01       	movw	r20, r26
     b4c:	60 e0       	ldi	r22, 0x00	; 0
     b4e:	83 e0       	ldi	r24, 0x03	; 3
     b50:	0e 94 85 09 	call	0x130a	; 0x130a <write_zahl>
		if (taster&0x08)
     b54:	89 81       	ldd	r24, Y+1	; 0x01
     b56:	88 2f       	mov	r24, r24
     b58:	90 e0       	ldi	r25, 0x00	; 0
     b5a:	88 70       	andi	r24, 0x08	; 8
     b5c:	99 27       	eor	r25, r25
     b5e:	89 2b       	or	r24, r25
     b60:	21 f0       	breq	.+8      	; 0xb6a <main+0x19c>
		{
			goto_start();
     b62:	0e 94 6e 04 	call	0x8dc	; 0x8dc <goto_start>
			make_sound();
     b66:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <make_sound>
		}		
		if (routine_done>=1) //if routine done
     b6a:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <routine_done>
     b6e:	88 23       	and	r24, r24
     b70:	21 f0       	breq	.+8      	; 0xb7a <main+0x1ac>
		{
			make_sound();
     b72:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <make_sound>
			routine_done=0;
     b76:	10 92 90 02 	sts	0x0290, r1	; 0x800290 <routine_done>
		}
		if (uart_str_complete!=0)
     b7a:	80 91 8f 02 	lds	r24, 0x028F	; 0x80028f <uart_str_complete>
     b7e:	88 23       	and	r24, r24
     b80:	a9 f2       	breq	.-86     	; 0xb2c <main+0x15e>
		{
			uart_str_complete=0;
     b82:	10 92 8f 02 	sts	0x028F, r1	; 0x80028f <uart_str_complete>
			send_Byte_0('1');	
     b86:	81 e3       	ldi	r24, 0x31	; 49
     b88:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <send_Byte_0>
			PORTB|=0x02;
     b8c:	85 e2       	ldi	r24, 0x25	; 37
     b8e:	90 e0       	ldi	r25, 0x00	; 0
     b90:	25 e2       	ldi	r18, 0x25	; 37
     b92:	30 e0       	ldi	r19, 0x00	; 0
     b94:	f9 01       	movw	r30, r18
     b96:	20 81       	ld	r18, Z
     b98:	22 60       	ori	r18, 0x02	; 2
     b9a:	fc 01       	movw	r30, r24
     b9c:	20 83       	st	Z, r18
			recieved_Y=(data[1]-48)*1000+(data[2]-48)*100+(data[3]-48)*10+data[4]-48;
     b9e:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <data+0x1>
     ba2:	88 2f       	mov	r24, r24
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	ac 01       	movw	r20, r24
     ba8:	40 53       	subi	r20, 0x30	; 48
     baa:	51 09       	sbc	r21, r1
     bac:	88 ee       	ldi	r24, 0xE8	; 232
     bae:	93 e0       	ldi	r25, 0x03	; 3
     bb0:	48 9f       	mul	r20, r24
     bb2:	90 01       	movw	r18, r0
     bb4:	49 9f       	mul	r20, r25
     bb6:	30 0d       	add	r19, r0
     bb8:	58 9f       	mul	r21, r24
     bba:	30 0d       	add	r19, r0
     bbc:	11 24       	eor	r1, r1
     bbe:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <data+0x2>
     bc2:	88 2f       	mov	r24, r24
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	ac 01       	movw	r20, r24
     bc8:	40 53       	subi	r20, 0x30	; 48
     bca:	51 09       	sbc	r21, r1
     bcc:	64 e6       	ldi	r22, 0x64	; 100
     bce:	64 9f       	mul	r22, r20
     bd0:	c0 01       	movw	r24, r0
     bd2:	65 9f       	mul	r22, r21
     bd4:	90 0d       	add	r25, r0
     bd6:	11 24       	eor	r1, r1
     bd8:	28 0f       	add	r18, r24
     bda:	39 1f       	adc	r19, r25
     bdc:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <data+0x3>
     be0:	88 2f       	mov	r24, r24
     be2:	90 e0       	ldi	r25, 0x00	; 0
     be4:	c0 97       	sbiw	r24, 0x30	; 48
     be6:	88 0f       	add	r24, r24
     be8:	99 1f       	adc	r25, r25
     bea:	ac 01       	movw	r20, r24
     bec:	44 0f       	add	r20, r20
     bee:	55 1f       	adc	r21, r21
     bf0:	44 0f       	add	r20, r20
     bf2:	55 1f       	adc	r21, r21
     bf4:	84 0f       	add	r24, r20
     bf6:	95 1f       	adc	r25, r21
     bf8:	28 0f       	add	r18, r24
     bfa:	39 1f       	adc	r19, r25
     bfc:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <data+0x4>
     c00:	88 2f       	mov	r24, r24
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	82 0f       	add	r24, r18
     c06:	93 1f       	adc	r25, r19
     c08:	c0 97       	sbiw	r24, 0x30	; 48
     c0a:	9f 83       	std	Y+7, r25	; 0x07
     c0c:	8e 83       	std	Y+6, r24	; 0x06
			recieved_X=(data[6]-48)*1000+(data[7]-48)*100+(data[8]-48)*10+data[9]-48;
     c0e:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <data+0x6>
     c12:	88 2f       	mov	r24, r24
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	ac 01       	movw	r20, r24
     c18:	40 53       	subi	r20, 0x30	; 48
     c1a:	51 09       	sbc	r21, r1
     c1c:	88 ee       	ldi	r24, 0xE8	; 232
     c1e:	93 e0       	ldi	r25, 0x03	; 3
     c20:	48 9f       	mul	r20, r24
     c22:	90 01       	movw	r18, r0
     c24:	49 9f       	mul	r20, r25
     c26:	30 0d       	add	r19, r0
     c28:	58 9f       	mul	r21, r24
     c2a:	30 0d       	add	r19, r0
     c2c:	11 24       	eor	r1, r1
     c2e:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <data+0x7>
     c32:	88 2f       	mov	r24, r24
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	ac 01       	movw	r20, r24
     c38:	40 53       	subi	r20, 0x30	; 48
     c3a:	51 09       	sbc	r21, r1
     c3c:	64 e6       	ldi	r22, 0x64	; 100
     c3e:	64 9f       	mul	r22, r20
     c40:	c0 01       	movw	r24, r0
     c42:	65 9f       	mul	r22, r21
     c44:	90 0d       	add	r25, r0
     c46:	11 24       	eor	r1, r1
     c48:	28 0f       	add	r18, r24
     c4a:	39 1f       	adc	r19, r25
     c4c:	80 91 a1 02 	lds	r24, 0x02A1	; 0x8002a1 <data+0x8>
     c50:	88 2f       	mov	r24, r24
     c52:	90 e0       	ldi	r25, 0x00	; 0
     c54:	c0 97       	sbiw	r24, 0x30	; 48
     c56:	88 0f       	add	r24, r24
     c58:	99 1f       	adc	r25, r25
     c5a:	ac 01       	movw	r20, r24
     c5c:	44 0f       	add	r20, r20
     c5e:	55 1f       	adc	r21, r21
     c60:	44 0f       	add	r20, r20
     c62:	55 1f       	adc	r21, r21
     c64:	84 0f       	add	r24, r20
     c66:	95 1f       	adc	r25, r21
     c68:	28 0f       	add	r18, r24
     c6a:	39 1f       	adc	r19, r25
     c6c:	80 91 a2 02 	lds	r24, 0x02A2	; 0x8002a2 <data+0x9>
     c70:	88 2f       	mov	r24, r24
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	82 0f       	add	r24, r18
     c76:	93 1f       	adc	r25, r19
     c78:	c0 97       	sbiw	r24, 0x30	; 48
     c7a:	99 87       	std	Y+9, r25	; 0x09
     c7c:	88 87       	std	Y+8, r24	; 0x08
			write_zahl(0,0,recieved_X,5,0,0);
     c7e:	88 85       	ldd	r24, Y+8	; 0x08
     c80:	99 85       	ldd	r25, Y+9	; 0x09
     c82:	09 2e       	mov	r0, r25
     c84:	00 0c       	add	r0, r0
     c86:	aa 0b       	sbc	r26, r26
     c88:	bb 0b       	sbc	r27, r27
     c8a:	c1 2c       	mov	r12, r1
     c8c:	e1 2c       	mov	r14, r1
     c8e:	05 e0       	ldi	r16, 0x05	; 5
     c90:	9c 01       	movw	r18, r24
     c92:	ad 01       	movw	r20, r26
     c94:	60 e0       	ldi	r22, 0x00	; 0
     c96:	80 e0       	ldi	r24, 0x00	; 0
     c98:	0e 94 85 09 	call	0x130a	; 0x130a <write_zahl>
			write_zahl(1,0,recieved_Y,5,0,0);
     c9c:	8e 81       	ldd	r24, Y+6	; 0x06
     c9e:	9f 81       	ldd	r25, Y+7	; 0x07
     ca0:	09 2e       	mov	r0, r25
     ca2:	00 0c       	add	r0, r0
     ca4:	aa 0b       	sbc	r26, r26
     ca6:	bb 0b       	sbc	r27, r27
     ca8:	c1 2c       	mov	r12, r1
     caa:	e1 2c       	mov	r14, r1
     cac:	05 e0       	ldi	r16, 0x05	; 5
     cae:	9c 01       	movw	r18, r24
     cb0:	ad 01       	movw	r20, r26
     cb2:	60 e0       	ldi	r22, 0x00	; 0
     cb4:	81 e0       	ldi	r24, 0x01	; 1
     cb6:	0e 94 85 09 	call	0x130a	; 0x130a <write_zahl>
     cba:	80 e0       	ldi	r24, 0x00	; 0
     cbc:	90 e0       	ldi	r25, 0x00	; 0
     cbe:	a0 e0       	ldi	r26, 0x00	; 0
     cc0:	b0 e4       	ldi	r27, 0x40	; 64
     cc2:	8a 83       	std	Y+2, r24	; 0x02
     cc4:	9b 83       	std	Y+3, r25	; 0x03
     cc6:	ac 83       	std	Y+4, r26	; 0x04
     cc8:	bd 83       	std	Y+5, r27	; 0x05

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     cca:	20 e0       	ldi	r18, 0x00	; 0
     ccc:	30 e0       	ldi	r19, 0x00	; 0
     cce:	4a e7       	ldi	r20, 0x7A	; 122
     cd0:	55 e4       	ldi	r21, 0x45	; 69
     cd2:	6a 81       	ldd	r22, Y+2	; 0x02
     cd4:	7b 81       	ldd	r23, Y+3	; 0x03
     cd6:	8c 81       	ldd	r24, Y+4	; 0x04
     cd8:	9d 81       	ldd	r25, Y+5	; 0x05
     cda:	0e 94 c9 0b 	call	0x1792	; 0x1792 <__mulsf3>
     cde:	dc 01       	movw	r26, r24
     ce0:	cb 01       	movw	r24, r22
     ce2:	8c 8f       	std	Y+28, r24	; 0x1c
     ce4:	9d 8f       	std	Y+29, r25	; 0x1d
     ce6:	ae 8f       	std	Y+30, r26	; 0x1e
     ce8:	bf 8f       	std	Y+31, r27	; 0x1f
	if (__tmp < 1.0)
     cea:	20 e0       	ldi	r18, 0x00	; 0
     cec:	30 e0       	ldi	r19, 0x00	; 0
     cee:	40 e8       	ldi	r20, 0x80	; 128
     cf0:	5f e3       	ldi	r21, 0x3F	; 63
     cf2:	6c 8d       	ldd	r22, Y+28	; 0x1c
     cf4:	7d 8d       	ldd	r23, Y+29	; 0x1d
     cf6:	8e 8d       	ldd	r24, Y+30	; 0x1e
     cf8:	9f 8d       	ldd	r25, Y+31	; 0x1f
     cfa:	0e 94 43 0b 	call	0x1686	; 0x1686 <__cmpsf2>
     cfe:	88 23       	and	r24, r24
     d00:	2c f4       	brge	.+10     	; 0xd0c <main+0x33e>
		__ticks = 1;
     d02:	81 e0       	ldi	r24, 0x01	; 1
     d04:	90 e0       	ldi	r25, 0x00	; 0
     d06:	99 a3       	std	Y+33, r25	; 0x21
     d08:	88 a3       	std	Y+32, r24	; 0x20
     d0a:	3f c0       	rjmp	.+126    	; 0xd8a <main+0x3bc>
	else if (__tmp > 65535)
     d0c:	20 e0       	ldi	r18, 0x00	; 0
     d0e:	3f ef       	ldi	r19, 0xFF	; 255
     d10:	4f e7       	ldi	r20, 0x7F	; 127
     d12:	57 e4       	ldi	r21, 0x47	; 71
     d14:	6c 8d       	ldd	r22, Y+28	; 0x1c
     d16:	7d 8d       	ldd	r23, Y+29	; 0x1d
     d18:	8e 8d       	ldd	r24, Y+30	; 0x1e
     d1a:	9f 8d       	ldd	r25, Y+31	; 0x1f
     d1c:	0e 94 c4 0b 	call	0x1788	; 0x1788 <__gesf2>
     d20:	18 16       	cp	r1, r24
     d22:	4c f5       	brge	.+82     	; 0xd76 <main+0x3a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d24:	20 e0       	ldi	r18, 0x00	; 0
     d26:	30 e0       	ldi	r19, 0x00	; 0
     d28:	40 e2       	ldi	r20, 0x20	; 32
     d2a:	51 e4       	ldi	r21, 0x41	; 65
     d2c:	6a 81       	ldd	r22, Y+2	; 0x02
     d2e:	7b 81       	ldd	r23, Y+3	; 0x03
     d30:	8c 81       	ldd	r24, Y+4	; 0x04
     d32:	9d 81       	ldd	r25, Y+5	; 0x05
     d34:	0e 94 c9 0b 	call	0x1792	; 0x1792 <__mulsf3>
     d38:	dc 01       	movw	r26, r24
     d3a:	cb 01       	movw	r24, r22
     d3c:	bc 01       	movw	r22, r24
     d3e:	cd 01       	movw	r24, r26
     d40:	0e 94 48 0b 	call	0x1690	; 0x1690 <__fixunssfsi>
     d44:	dc 01       	movw	r26, r24
     d46:	cb 01       	movw	r24, r22
     d48:	99 a3       	std	Y+33, r25	; 0x21
     d4a:	88 a3       	std	Y+32, r24	; 0x20
     d4c:	0f c0       	rjmp	.+30     	; 0xd6c <main+0x39e>
     d4e:	80 e9       	ldi	r24, 0x90	; 144
     d50:	91 e0       	ldi	r25, 0x01	; 1
     d52:	9b a3       	std	Y+35, r25	; 0x23
     d54:	8a a3       	std	Y+34, r24	; 0x22
     d56:	8a a1       	ldd	r24, Y+34	; 0x22
     d58:	9b a1       	ldd	r25, Y+35	; 0x23
     d5a:	01 97       	sbiw	r24, 0x01	; 1
     d5c:	f1 f7       	brne	.-4      	; 0xd5a <main+0x38c>
     d5e:	9b a3       	std	Y+35, r25	; 0x23
     d60:	8a a3       	std	Y+34, r24	; 0x22
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d62:	88 a1       	ldd	r24, Y+32	; 0x20
     d64:	99 a1       	ldd	r25, Y+33	; 0x21
     d66:	01 97       	sbiw	r24, 0x01	; 1
     d68:	99 a3       	std	Y+33, r25	; 0x21
     d6a:	88 a3       	std	Y+32, r24	; 0x20
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d6c:	88 a1       	ldd	r24, Y+32	; 0x20
     d6e:	99 a1       	ldd	r25, Y+33	; 0x21
     d70:	89 2b       	or	r24, r25
     d72:	69 f7       	brne	.-38     	; 0xd4e <main+0x380>
     d74:	14 c0       	rjmp	.+40     	; 0xd9e <main+0x3d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d76:	6c 8d       	ldd	r22, Y+28	; 0x1c
     d78:	7d 8d       	ldd	r23, Y+29	; 0x1d
     d7a:	8e 8d       	ldd	r24, Y+30	; 0x1e
     d7c:	9f 8d       	ldd	r25, Y+31	; 0x1f
     d7e:	0e 94 48 0b 	call	0x1690	; 0x1690 <__fixunssfsi>
     d82:	dc 01       	movw	r26, r24
     d84:	cb 01       	movw	r24, r22
     d86:	99 a3       	std	Y+33, r25	; 0x21
     d88:	88 a3       	std	Y+32, r24	; 0x20
     d8a:	88 a1       	ldd	r24, Y+32	; 0x20
     d8c:	99 a1       	ldd	r25, Y+33	; 0x21
     d8e:	9d a3       	std	Y+37, r25	; 0x25
     d90:	8c a3       	std	Y+36, r24	; 0x24
     d92:	8c a1       	ldd	r24, Y+36	; 0x24
     d94:	9d a1       	ldd	r25, Y+37	; 0x25
     d96:	01 97       	sbiw	r24, 0x01	; 1
     d98:	f1 f7       	brne	.-4      	; 0xd96 <main+0x3c8>
     d9a:	9d a3       	std	Y+37, r25	; 0x25
     d9c:	8c a3       	std	Y+36, r24	; 0x24
			_delay_ms(2);
			snprintf(return_buffer,30,"%d %d",recieved_X,recieved_Y);
     d9e:	8f 81       	ldd	r24, Y+7	; 0x07
     da0:	8f 93       	push	r24
     da2:	8e 81       	ldd	r24, Y+6	; 0x06
     da4:	8f 93       	push	r24
     da6:	89 85       	ldd	r24, Y+9	; 0x09
     da8:	8f 93       	push	r24
     daa:	88 85       	ldd	r24, Y+8	; 0x08
     dac:	8f 93       	push	r24
     dae:	89 e1       	ldi	r24, 0x19	; 25
     db0:	92 e0       	ldi	r25, 0x02	; 2
     db2:	89 2f       	mov	r24, r25
     db4:	8f 93       	push	r24
     db6:	89 e1       	ldi	r24, 0x19	; 25
     db8:	92 e0       	ldi	r25, 0x02	; 2
     dba:	8f 93       	push	r24
     dbc:	1f 92       	push	r1
     dbe:	8e e1       	ldi	r24, 0x1E	; 30
     dc0:	8f 93       	push	r24
     dc2:	ce 01       	movw	r24, r28
     dc4:	82 5b       	subi	r24, 0xB2	; 178
     dc6:	9f 4f       	sbci	r25, 0xFF	; 255
     dc8:	29 2f       	mov	r18, r25
     dca:	2f 93       	push	r18
     dcc:	8f 93       	push	r24
     dce:	0e 94 ae 0c 	call	0x195c	; 0x195c <snprintf>
     dd2:	8d b7       	in	r24, 0x3d	; 61
     dd4:	9e b7       	in	r25, 0x3e	; 62
     dd6:	0a 96       	adiw	r24, 0x0a	; 10
     dd8:	0f b6       	in	r0, 0x3f	; 63
     dda:	f8 94       	cli
     ddc:	de bf       	out	0x3e, r29	; 62
     dde:	0f be       	out	0x3f, r0	; 63
     de0:	cd bf       	out	0x3d, r28	; 61
			to_pc(return_buffer);
     de2:	ce 01       	movw	r24, r28
     de4:	82 5b       	subi	r24, 0xB2	; 178
     de6:	9f 4f       	sbci	r25, 0xFF	; 255
     de8:	0e 94 06 02 	call	0x40c	; 0x40c <to_pc>
			while(((false_state==0)&&(good==0))||((taster&0x01)!=0))
     dec:	03 c0       	rjmp	.+6      	; 0xdf4 <main+0x426>
			{
				taster = get_LCD_Taster();
     dee:	0e 94 33 01 	call	0x266	; 0x266 <get_LCD_Taster>
     df2:	89 83       	std	Y+1, r24	; 0x01
			write_zahl(0,0,recieved_X,5,0,0);
			write_zahl(1,0,recieved_Y,5,0,0);
			_delay_ms(2);
			snprintf(return_buffer,30,"%d %d",recieved_X,recieved_Y);
			to_pc(return_buffer);
			while(((false_state==0)&&(good==0))||((taster&0x01)!=0))
     df4:	80 91 7e 02 	lds	r24, 0x027E	; 0x80027e <false_state>
     df8:	88 23       	and	r24, r24
     dfa:	21 f4       	brne	.+8      	; 0xe04 <main+0x436>
     dfc:	80 91 94 02 	lds	r24, 0x0294	; 0x800294 <good>
     e00:	88 23       	and	r24, r24
     e02:	a9 f3       	breq	.-22     	; 0xdee <main+0x420>
     e04:	89 81       	ldd	r24, Y+1	; 0x01
     e06:	88 2f       	mov	r24, r24
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	81 70       	andi	r24, 0x01	; 1
     e0c:	99 27       	eor	r25, r25
     e0e:	89 2b       	or	r24, r25
     e10:	71 f7       	brne	.-36     	; 0xdee <main+0x420>
			{
				taster = get_LCD_Taster();
			}
			if (good!=0)
     e12:	80 91 94 02 	lds	r24, 0x0294	; 0x800294 <good>
     e16:	88 23       	and	r24, r24
     e18:	09 f4       	brne	.+2      	; 0xe1c <main+0x44e>
     e1a:	d5 c0       	rjmp	.+426    	; 0xfc6 <main+0x5f8>
			{
				PORTB|0x04;
     e1c:	85 e2       	ldi	r24, 0x25	; 37
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	fc 01       	movw	r30, r24
     e22:	80 81       	ld	r24, Z
				//Grid anpassung
				recieved_X-=384;
     e24:	88 85       	ldd	r24, Y+8	; 0x08
     e26:	99 85       	ldd	r25, Y+9	; 0x09
     e28:	80 58       	subi	r24, 0x80	; 128
     e2a:	91 40       	sbci	r25, 0x01	; 1
     e2c:	99 87       	std	Y+9, r25	; 0x09
     e2e:	88 87       	std	Y+8, r24	; 0x08
				recieved_Y-=512;
     e30:	8e 81       	ldd	r24, Y+6	; 0x06
     e32:	9f 81       	ldd	r25, Y+7	; 0x07
     e34:	92 50       	subi	r25, 0x02	; 2
     e36:	9f 83       	std	Y+7, r25	; 0x07
     e38:	8e 83       	std	Y+6, r24	; 0x06
				recieved_X=((recieved_X/5)*-1)+200;
     e3a:	88 85       	ldd	r24, Y+8	; 0x08
     e3c:	99 85       	ldd	r25, Y+9	; 0x09
     e3e:	25 e0       	ldi	r18, 0x05	; 5
     e40:	30 e0       	ldi	r19, 0x00	; 0
     e42:	b9 01       	movw	r22, r18
     e44:	0e 94 5e 0c 	call	0x18bc	; 0x18bc <__divmodhi4>
     e48:	cb 01       	movw	r24, r22
     e4a:	9c 01       	movw	r18, r24
     e4c:	88 ec       	ldi	r24, 0xC8	; 200
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	82 1b       	sub	r24, r18
     e52:	93 0b       	sbc	r25, r19
     e54:	99 87       	std	Y+9, r25	; 0x09
     e56:	88 87       	std	Y+8, r24	; 0x08
				recieved_Y=(recieved_Y/5)*-1;
     e58:	8e 81       	ldd	r24, Y+6	; 0x06
     e5a:	9f 81       	ldd	r25, Y+7	; 0x07
     e5c:	25 e0       	ldi	r18, 0x05	; 5
     e5e:	30 e0       	ldi	r19, 0x00	; 0
     e60:	b9 01       	movw	r22, r18
     e62:	0e 94 5e 0c 	call	0x18bc	; 0x18bc <__divmodhi4>
     e66:	cb 01       	movw	r24, r22
     e68:	91 95       	neg	r25
     e6a:	81 95       	neg	r24
     e6c:	91 09       	sbc	r25, r1
     e6e:	9f 83       	std	Y+7, r25	; 0x07
     e70:	8e 83       	std	Y+6, r24	; 0x06
				snprintf(buffer,30,"G0 X%d Y%d Z-20 F6000\n",recieved_X,recieved_Y);//////////////////form new string
     e72:	8f 81       	ldd	r24, Y+7	; 0x07
     e74:	8f 93       	push	r24
     e76:	8e 81       	ldd	r24, Y+6	; 0x06
     e78:	8f 93       	push	r24
     e7a:	89 85       	ldd	r24, Y+9	; 0x09
     e7c:	8f 93       	push	r24
     e7e:	88 85       	ldd	r24, Y+8	; 0x08
     e80:	8f 93       	push	r24
     e82:	8f e1       	ldi	r24, 0x1F	; 31
     e84:	92 e0       	ldi	r25, 0x02	; 2
     e86:	89 2f       	mov	r24, r25
     e88:	8f 93       	push	r24
     e8a:	8f e1       	ldi	r24, 0x1F	; 31
     e8c:	92 e0       	ldi	r25, 0x02	; 2
     e8e:	8f 93       	push	r24
     e90:	1f 92       	push	r1
     e92:	8e e1       	ldi	r24, 0x1E	; 30
     e94:	8f 93       	push	r24
     e96:	ce 01       	movw	r24, r28
     e98:	c0 96       	adiw	r24, 0x30	; 48
     e9a:	29 2f       	mov	r18, r25
     e9c:	2f 93       	push	r18
     e9e:	8f 93       	push	r24
     ea0:	0e 94 ae 0c 	call	0x195c	; 0x195c <snprintf>
     ea4:	8d b7       	in	r24, 0x3d	; 61
     ea6:	9e b7       	in	r25, 0x3e	; 62
     ea8:	0a 96       	adiw	r24, 0x0a	; 10
     eaa:	0f b6       	in	r0, 0x3f	; 63
     eac:	f8 94       	cli
     eae:	de bf       	out	0x3e, r29	; 62
     eb0:	0f be       	out	0x3f, r0	; 63
     eb2:	cd bf       	out	0x3d, r28	; 61
				send_to_uArm(buffer);		//send new string
     eb4:	ce 01       	movw	r24, r28
     eb6:	c0 96       	adiw	r24, 0x30	; 48
     eb8:	0e 94 48 02 	call	0x490	; 0x490 <send_to_uArm>
     ebc:	80 e0       	ldi	r24, 0x00	; 0
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	a0 e0       	ldi	r26, 0x00	; 0
     ec2:	b0 e4       	ldi	r27, 0x40	; 64
     ec4:	8a 87       	std	Y+10, r24	; 0x0a
     ec6:	9b 87       	std	Y+11, r25	; 0x0b
     ec8:	ac 87       	std	Y+12, r26	; 0x0c
     eca:	bd 87       	std	Y+13, r27	; 0x0d

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     ecc:	20 e0       	ldi	r18, 0x00	; 0
     ece:	30 e0       	ldi	r19, 0x00	; 0
     ed0:	4a e7       	ldi	r20, 0x7A	; 122
     ed2:	55 e4       	ldi	r21, 0x45	; 69
     ed4:	6a 85       	ldd	r22, Y+10	; 0x0a
     ed6:	7b 85       	ldd	r23, Y+11	; 0x0b
     ed8:	8c 85       	ldd	r24, Y+12	; 0x0c
     eda:	9d 85       	ldd	r25, Y+13	; 0x0d
     edc:	0e 94 c9 0b 	call	0x1792	; 0x1792 <__mulsf3>
     ee0:	dc 01       	movw	r26, r24
     ee2:	cb 01       	movw	r24, r22
     ee4:	8e a3       	std	Y+38, r24	; 0x26
     ee6:	9f a3       	std	Y+39, r25	; 0x27
     ee8:	a8 a7       	std	Y+40, r26	; 0x28
     eea:	b9 a7       	std	Y+41, r27	; 0x29
	if (__tmp < 1.0)
     eec:	20 e0       	ldi	r18, 0x00	; 0
     eee:	30 e0       	ldi	r19, 0x00	; 0
     ef0:	40 e8       	ldi	r20, 0x80	; 128
     ef2:	5f e3       	ldi	r21, 0x3F	; 63
     ef4:	6e a1       	ldd	r22, Y+38	; 0x26
     ef6:	7f a1       	ldd	r23, Y+39	; 0x27
     ef8:	88 a5       	ldd	r24, Y+40	; 0x28
     efa:	99 a5       	ldd	r25, Y+41	; 0x29
     efc:	0e 94 43 0b 	call	0x1686	; 0x1686 <__cmpsf2>
     f00:	88 23       	and	r24, r24
     f02:	2c f4       	brge	.+10     	; 0xf0e <main+0x540>
		__ticks = 1;
     f04:	81 e0       	ldi	r24, 0x01	; 1
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	9b a7       	std	Y+43, r25	; 0x2b
     f0a:	8a a7       	std	Y+42, r24	; 0x2a
     f0c:	3f c0       	rjmp	.+126    	; 0xf8c <main+0x5be>
	else if (__tmp > 65535)
     f0e:	20 e0       	ldi	r18, 0x00	; 0
     f10:	3f ef       	ldi	r19, 0xFF	; 255
     f12:	4f e7       	ldi	r20, 0x7F	; 127
     f14:	57 e4       	ldi	r21, 0x47	; 71
     f16:	6e a1       	ldd	r22, Y+38	; 0x26
     f18:	7f a1       	ldd	r23, Y+39	; 0x27
     f1a:	88 a5       	ldd	r24, Y+40	; 0x28
     f1c:	99 a5       	ldd	r25, Y+41	; 0x29
     f1e:	0e 94 c4 0b 	call	0x1788	; 0x1788 <__gesf2>
     f22:	18 16       	cp	r1, r24
     f24:	4c f5       	brge	.+82     	; 0xf78 <main+0x5aa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f26:	20 e0       	ldi	r18, 0x00	; 0
     f28:	30 e0       	ldi	r19, 0x00	; 0
     f2a:	40 e2       	ldi	r20, 0x20	; 32
     f2c:	51 e4       	ldi	r21, 0x41	; 65
     f2e:	6a 85       	ldd	r22, Y+10	; 0x0a
     f30:	7b 85       	ldd	r23, Y+11	; 0x0b
     f32:	8c 85       	ldd	r24, Y+12	; 0x0c
     f34:	9d 85       	ldd	r25, Y+13	; 0x0d
     f36:	0e 94 c9 0b 	call	0x1792	; 0x1792 <__mulsf3>
     f3a:	dc 01       	movw	r26, r24
     f3c:	cb 01       	movw	r24, r22
     f3e:	bc 01       	movw	r22, r24
     f40:	cd 01       	movw	r24, r26
     f42:	0e 94 48 0b 	call	0x1690	; 0x1690 <__fixunssfsi>
     f46:	dc 01       	movw	r26, r24
     f48:	cb 01       	movw	r24, r22
     f4a:	9b a7       	std	Y+43, r25	; 0x2b
     f4c:	8a a7       	std	Y+42, r24	; 0x2a
     f4e:	0f c0       	rjmp	.+30     	; 0xf6e <main+0x5a0>
     f50:	80 e9       	ldi	r24, 0x90	; 144
     f52:	91 e0       	ldi	r25, 0x01	; 1
     f54:	9d a7       	std	Y+45, r25	; 0x2d
     f56:	8c a7       	std	Y+44, r24	; 0x2c
     f58:	8c a5       	ldd	r24, Y+44	; 0x2c
     f5a:	9d a5       	ldd	r25, Y+45	; 0x2d
     f5c:	01 97       	sbiw	r24, 0x01	; 1
     f5e:	f1 f7       	brne	.-4      	; 0xf5c <main+0x58e>
     f60:	9d a7       	std	Y+45, r25	; 0x2d
     f62:	8c a7       	std	Y+44, r24	; 0x2c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f64:	8a a5       	ldd	r24, Y+42	; 0x2a
     f66:	9b a5       	ldd	r25, Y+43	; 0x2b
     f68:	01 97       	sbiw	r24, 0x01	; 1
     f6a:	9b a7       	std	Y+43, r25	; 0x2b
     f6c:	8a a7       	std	Y+42, r24	; 0x2a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f6e:	8a a5       	ldd	r24, Y+42	; 0x2a
     f70:	9b a5       	ldd	r25, Y+43	; 0x2b
     f72:	89 2b       	or	r24, r25
     f74:	69 f7       	brne	.-38     	; 0xf50 <main+0x582>
     f76:	14 c0       	rjmp	.+40     	; 0xfa0 <main+0x5d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f78:	6e a1       	ldd	r22, Y+38	; 0x26
     f7a:	7f a1       	ldd	r23, Y+39	; 0x27
     f7c:	88 a5       	ldd	r24, Y+40	; 0x28
     f7e:	99 a5       	ldd	r25, Y+41	; 0x29
     f80:	0e 94 48 0b 	call	0x1690	; 0x1690 <__fixunssfsi>
     f84:	dc 01       	movw	r26, r24
     f86:	cb 01       	movw	r24, r22
     f88:	9b a7       	std	Y+43, r25	; 0x2b
     f8a:	8a a7       	std	Y+42, r24	; 0x2a
     f8c:	8a a5       	ldd	r24, Y+42	; 0x2a
     f8e:	9b a5       	ldd	r25, Y+43	; 0x2b
     f90:	9f a7       	std	Y+47, r25	; 0x2f
     f92:	8e a7       	std	Y+46, r24	; 0x2e
     f94:	8e a5       	ldd	r24, Y+46	; 0x2e
     f96:	9f a5       	ldd	r25, Y+47	; 0x2f
     f98:	01 97       	sbiw	r24, 0x01	; 1
     f9a:	f1 f7       	brne	.-4      	; 0xf98 <main+0x5ca>
     f9c:	9f a7       	std	Y+47, r25	; 0x2f
     f9e:	8e a7       	std	Y+46, r24	; 0x2e
				_delay_ms(2);
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     fa0:	04 c0       	rjmp	.+8      	; 0xfaa <main+0x5dc>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
     fa2:	80 e0       	ldi	r24, 0x00	; 0
     fa4:	91 e0       	ldi	r25, 0x01	; 1
     fa6:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
				recieved_X=((recieved_X/5)*-1)+200;
				recieved_Y=(recieved_Y/5)*-1;
				snprintf(buffer,30,"G0 X%d Y%d Z-20 F6000\n",recieved_X,recieved_Y);//////////////////form new string
				send_to_uArm(buffer);		//send new string
				_delay_ms(2);
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     faa:	80 91 4f 02 	lds	r24, 0x024F	; 0x80024f <uart_string1+0x4>
     fae:	81 33       	cpi	r24, 0x31	; 49
     fb0:	c1 f3       	breq	.-16     	; 0xfa2 <main+0x5d4>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
				}
				to_uARM("M2210 F2000 T200\n");
     fb2:	86 e3       	ldi	r24, 0x36	; 54
     fb4:	92 e0       	ldi	r25, 0x02	; 2
     fb6:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
				send_Byte_0('1');		//return that action done
     fba:	81 e3       	ldi	r24, 0x31	; 49
     fbc:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <send_Byte_0>
				good=0;
     fc0:	10 92 94 02 	sts	0x0294, r1	; 0x800294 <good>
     fc4:	b3 cd       	rjmp	.-1178   	; 0xb2c <main+0x15e>
			}
			else
			{
				PORTB|0x08;
     fc6:	85 e2       	ldi	r24, 0x25	; 37
     fc8:	90 e0       	ldi	r25, 0x00	; 0
     fca:	fc 01       	movw	r30, r24
     fcc:	80 81       	ld	r24, Z
				set_led_mode(IDLE);
     fce:	80 e4       	ldi	r24, 0x40	; 64
     fd0:	0e 94 53 03 	call	0x6a6	; 0x6a6 <set_led_mode>
				false_state=0;
     fd4:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <false_state>
			}
			
		}		
	} //end while(1)
     fd8:	a9 cd       	rjmp	.-1198   	; 0xb2c <main+0x15e>

00000fda <init_Timer0_1ms_int>:
     fda:	cf 93       	push	r28
     fdc:	df 93       	push	r29
     fde:	cd b7       	in	r28, 0x3d	; 61
     fe0:	de b7       	in	r29, 0x3e	; 62
     fe2:	84 e4       	ldi	r24, 0x44	; 68
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	24 e4       	ldi	r18, 0x44	; 68
     fe8:	30 e0       	ldi	r19, 0x00	; 0
     fea:	f9 01       	movw	r30, r18
     fec:	20 81       	ld	r18, Z
     fee:	22 60       	ori	r18, 0x02	; 2
     ff0:	fc 01       	movw	r30, r24
     ff2:	20 83       	st	Z, r18
     ff4:	85 e4       	ldi	r24, 0x45	; 69
     ff6:	90 e0       	ldi	r25, 0x00	; 0
     ff8:	25 e4       	ldi	r18, 0x45	; 69
     ffa:	30 e0       	ldi	r19, 0x00	; 0
     ffc:	f9 01       	movw	r30, r18
     ffe:	20 81       	ld	r18, Z
    1000:	23 60       	ori	r18, 0x03	; 3
    1002:	fc 01       	movw	r30, r24
    1004:	20 83       	st	Z, r18
    1006:	87 e4       	ldi	r24, 0x47	; 71
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	29 ef       	ldi	r18, 0xF9	; 249
    100c:	fc 01       	movw	r30, r24
    100e:	20 83       	st	Z, r18
    1010:	8e e6       	ldi	r24, 0x6E	; 110
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	2e e6       	ldi	r18, 0x6E	; 110
    1016:	30 e0       	ldi	r19, 0x00	; 0
    1018:	f9 01       	movw	r30, r18
    101a:	20 81       	ld	r18, Z
    101c:	22 60       	ori	r18, 0x02	; 2
    101e:	fc 01       	movw	r30, r24
    1020:	20 83       	st	Z, r18
    1022:	00 00       	nop
    1024:	df 91       	pop	r29
    1026:	cf 91       	pop	r28
    1028:	08 95       	ret

0000102a <__vector_16>:
    102a:	1f 92       	push	r1
    102c:	0f 92       	push	r0
    102e:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1032:	0f 92       	push	r0
    1034:	11 24       	eor	r1, r1
    1036:	2f 93       	push	r18
    1038:	3f 93       	push	r19
    103a:	4f 93       	push	r20
    103c:	5f 93       	push	r21
    103e:	6f 93       	push	r22
    1040:	7f 93       	push	r23
    1042:	8f 93       	push	r24
    1044:	9f 93       	push	r25
    1046:	af 93       	push	r26
    1048:	bf 93       	push	r27
    104a:	ef 93       	push	r30
    104c:	ff 93       	push	r31
    104e:	cf 93       	push	r28
    1050:	df 93       	push	r29
    1052:	cd b7       	in	r28, 0x3d	; 61
    1054:	de b7       	in	r29, 0x3e	; 62
    1056:	80 91 86 02 	lds	r24, 0x0286	; 0x800286 <tick_1ms>
    105a:	90 91 87 02 	lds	r25, 0x0287	; 0x800287 <tick_1ms+0x1>
    105e:	a0 91 88 02 	lds	r26, 0x0288	; 0x800288 <tick_1ms+0x2>
    1062:	b0 91 89 02 	lds	r27, 0x0289	; 0x800289 <tick_1ms+0x3>
    1066:	01 96       	adiw	r24, 0x01	; 1
    1068:	a1 1d       	adc	r26, r1
    106a:	b1 1d       	adc	r27, r1
    106c:	80 93 86 02 	sts	0x0286, r24	; 0x800286 <tick_1ms>
    1070:	90 93 87 02 	sts	0x0287, r25	; 0x800287 <tick_1ms+0x1>
    1074:	a0 93 88 02 	sts	0x0288, r26	; 0x800288 <tick_1ms+0x2>
    1078:	b0 93 89 02 	sts	0x0289, r27	; 0x800289 <tick_1ms+0x3>
    107c:	80 91 86 02 	lds	r24, 0x0286	; 0x800286 <tick_1ms>
    1080:	90 91 87 02 	lds	r25, 0x0287	; 0x800287 <tick_1ms+0x1>
    1084:	a0 91 88 02 	lds	r26, 0x0288	; 0x800288 <tick_1ms+0x2>
    1088:	b0 91 89 02 	lds	r27, 0x0289	; 0x800289 <tick_1ms+0x3>
    108c:	28 ee       	ldi	r18, 0xE8	; 232
    108e:	33 e0       	ldi	r19, 0x03	; 3
    1090:	40 e0       	ldi	r20, 0x00	; 0
    1092:	50 e0       	ldi	r21, 0x00	; 0
    1094:	bc 01       	movw	r22, r24
    1096:	cd 01       	movw	r24, r26
    1098:	0e 94 72 0c 	call	0x18e4	; 0x18e4 <__udivmodsi4>
    109c:	dc 01       	movw	r26, r24
    109e:	cb 01       	movw	r24, r22
    10a0:	89 2b       	or	r24, r25
    10a2:	8a 2b       	or	r24, r26
    10a4:	8b 2b       	or	r24, r27
    10a6:	99 f4       	brne	.+38     	; 0x10ce <__vector_16+0xa4>
    10a8:	80 91 8a 02 	lds	r24, 0x028A	; 0x80028a <tick_1s>
    10ac:	90 91 8b 02 	lds	r25, 0x028B	; 0x80028b <tick_1s+0x1>
    10b0:	a0 91 8c 02 	lds	r26, 0x028C	; 0x80028c <tick_1s+0x2>
    10b4:	b0 91 8d 02 	lds	r27, 0x028D	; 0x80028d <tick_1s+0x3>
    10b8:	01 96       	adiw	r24, 0x01	; 1
    10ba:	a1 1d       	adc	r26, r1
    10bc:	b1 1d       	adc	r27, r1
    10be:	80 93 8a 02 	sts	0x028A, r24	; 0x80028a <tick_1s>
    10c2:	90 93 8b 02 	sts	0x028B, r25	; 0x80028b <tick_1s+0x1>
    10c6:	a0 93 8c 02 	sts	0x028C, r26	; 0x80028c <tick_1s+0x2>
    10ca:	b0 93 8d 02 	sts	0x028D, r27	; 0x80028d <tick_1s+0x3>
    10ce:	80 91 82 02 	lds	r24, 0x0282	; 0x800282 <tick_1ms_cnt>
    10d2:	90 91 83 02 	lds	r25, 0x0283	; 0x800283 <tick_1ms_cnt+0x1>
    10d6:	a0 91 84 02 	lds	r26, 0x0284	; 0x800284 <tick_1ms_cnt+0x2>
    10da:	b0 91 85 02 	lds	r27, 0x0285	; 0x800285 <tick_1ms_cnt+0x3>
    10de:	89 2b       	or	r24, r25
    10e0:	8a 2b       	or	r24, r26
    10e2:	8b 2b       	or	r24, r27
    10e4:	99 f0       	breq	.+38     	; 0x110c <__stack+0xd>
    10e6:	80 91 82 02 	lds	r24, 0x0282	; 0x800282 <tick_1ms_cnt>
    10ea:	90 91 83 02 	lds	r25, 0x0283	; 0x800283 <tick_1ms_cnt+0x1>
    10ee:	a0 91 84 02 	lds	r26, 0x0284	; 0x800284 <tick_1ms_cnt+0x2>
    10f2:	b0 91 85 02 	lds	r27, 0x0285	; 0x800285 <tick_1ms_cnt+0x3>
    10f6:	01 97       	sbiw	r24, 0x01	; 1
    10f8:	a1 09       	sbc	r26, r1
    10fa:	b1 09       	sbc	r27, r1
    10fc:	80 93 82 02 	sts	0x0282, r24	; 0x800282 <tick_1ms_cnt>
    1100:	90 93 83 02 	sts	0x0283, r25	; 0x800283 <tick_1ms_cnt+0x1>
    1104:	a0 93 84 02 	sts	0x0284, r26	; 0x800284 <tick_1ms_cnt+0x2>
    1108:	b0 93 85 02 	sts	0x0285, r27	; 0x800285 <tick_1ms_cnt+0x3>
    110c:	00 00       	nop
    110e:	df 91       	pop	r29
    1110:	cf 91       	pop	r28
    1112:	ff 91       	pop	r31
    1114:	ef 91       	pop	r30
    1116:	bf 91       	pop	r27
    1118:	af 91       	pop	r26
    111a:	9f 91       	pop	r25
    111c:	8f 91       	pop	r24
    111e:	7f 91       	pop	r23
    1120:	6f 91       	pop	r22
    1122:	5f 91       	pop	r21
    1124:	4f 91       	pop	r20
    1126:	3f 91       	pop	r19
    1128:	2f 91       	pop	r18
    112a:	0f 90       	pop	r0
    112c:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1130:	0f 90       	pop	r0
    1132:	1f 90       	pop	r1
    1134:	18 95       	reti

00001136 <wait_1ms>:
    1136:	cf 93       	push	r28
    1138:	df 93       	push	r29
    113a:	00 d0       	rcall	.+0      	; 0x113c <wait_1ms+0x6>
    113c:	00 d0       	rcall	.+0      	; 0x113e <wait_1ms+0x8>
    113e:	cd b7       	in	r28, 0x3d	; 61
    1140:	de b7       	in	r29, 0x3e	; 62
    1142:	69 83       	std	Y+1, r22	; 0x01
    1144:	7a 83       	std	Y+2, r23	; 0x02
    1146:	8b 83       	std	Y+3, r24	; 0x03
    1148:	9c 83       	std	Y+4, r25	; 0x04
    114a:	89 81       	ldd	r24, Y+1	; 0x01
    114c:	9a 81       	ldd	r25, Y+2	; 0x02
    114e:	ab 81       	ldd	r26, Y+3	; 0x03
    1150:	bc 81       	ldd	r27, Y+4	; 0x04
    1152:	89 2b       	or	r24, r25
    1154:	8a 2b       	or	r24, r26
    1156:	8b 2b       	or	r24, r27
    1158:	69 f0       	breq	.+26     	; 0x1174 <wait_1ms+0x3e>
    115a:	89 81       	ldd	r24, Y+1	; 0x01
    115c:	9a 81       	ldd	r25, Y+2	; 0x02
    115e:	ab 81       	ldd	r26, Y+3	; 0x03
    1160:	bc 81       	ldd	r27, Y+4	; 0x04
    1162:	80 93 82 02 	sts	0x0282, r24	; 0x800282 <tick_1ms_cnt>
    1166:	90 93 83 02 	sts	0x0283, r25	; 0x800283 <tick_1ms_cnt+0x1>
    116a:	a0 93 84 02 	sts	0x0284, r26	; 0x800284 <tick_1ms_cnt+0x2>
    116e:	b0 93 85 02 	sts	0x0285, r27	; 0x800285 <tick_1ms_cnt+0x3>
    1172:	0c c0       	rjmp	.+24     	; 0x118c <wait_1ms+0x56>
    1174:	81 e0       	ldi	r24, 0x01	; 1
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	a0 e0       	ldi	r26, 0x00	; 0
    117a:	b0 e0       	ldi	r27, 0x00	; 0
    117c:	80 93 82 02 	sts	0x0282, r24	; 0x800282 <tick_1ms_cnt>
    1180:	90 93 83 02 	sts	0x0283, r25	; 0x800283 <tick_1ms_cnt+0x1>
    1184:	a0 93 84 02 	sts	0x0284, r26	; 0x800284 <tick_1ms_cnt+0x2>
    1188:	b0 93 85 02 	sts	0x0285, r27	; 0x800285 <tick_1ms_cnt+0x3>
    118c:	00 00       	nop
    118e:	80 91 82 02 	lds	r24, 0x0282	; 0x800282 <tick_1ms_cnt>
    1192:	90 91 83 02 	lds	r25, 0x0283	; 0x800283 <tick_1ms_cnt+0x1>
    1196:	a0 91 84 02 	lds	r26, 0x0284	; 0x800284 <tick_1ms_cnt+0x2>
    119a:	b0 91 85 02 	lds	r27, 0x0285	; 0x800285 <tick_1ms_cnt+0x3>
    119e:	89 2b       	or	r24, r25
    11a0:	8a 2b       	or	r24, r26
    11a2:	8b 2b       	or	r24, r27
    11a4:	a1 f7       	brne	.-24     	; 0x118e <wait_1ms+0x58>
    11a6:	00 00       	nop
    11a8:	0f 90       	pop	r0
    11aa:	0f 90       	pop	r0
    11ac:	0f 90       	pop	r0
    11ae:	0f 90       	pop	r0
    11b0:	df 91       	pop	r29
    11b2:	cf 91       	pop	r28
    11b4:	08 95       	ret

000011b6 <delay_nop>:
    11b6:	cf 93       	push	r28
    11b8:	df 93       	push	r29
    11ba:	00 d0       	rcall	.+0      	; 0x11bc <delay_nop+0x6>
    11bc:	cd b7       	in	r28, 0x3d	; 61
    11be:	de b7       	in	r29, 0x3e	; 62
    11c0:	8a 83       	std	Y+2, r24	; 0x02
    11c2:	19 82       	std	Y+1, r1	; 0x01
    11c4:	04 c0       	rjmp	.+8      	; 0x11ce <delay_nop+0x18>
    11c6:	00 00       	nop
    11c8:	89 81       	ldd	r24, Y+1	; 0x01
    11ca:	8f 5f       	subi	r24, 0xFF	; 255
    11cc:	89 83       	std	Y+1, r24	; 0x01
    11ce:	99 81       	ldd	r25, Y+1	; 0x01
    11d0:	8a 81       	ldd	r24, Y+2	; 0x02
    11d2:	98 17       	cp	r25, r24
    11d4:	c0 f3       	brcs	.-16     	; 0x11c6 <delay_nop+0x10>
    11d6:	00 00       	nop
    11d8:	0f 90       	pop	r0
    11da:	0f 90       	pop	r0
    11dc:	df 91       	pop	r29
    11de:	cf 91       	pop	r28
    11e0:	08 95       	ret

000011e2 <write_lcd_f>:
    11e2:	91 e0       	ldi	r25, 0x01	; 1
    11e4:	90 93 8e 02 	sts	0x028E, r25	; 0x80028e <write_RGB_LCD_activ>
    11e8:	40 9a       	sbi	0x08, 0	; 8
    11ea:	41 98       	cbi	0x08, 1	; 8
    11ec:	41 98       	cbi	0x08, 1	; 8
    11ee:	41 9a       	sbi	0x08, 1	; 8
    11f0:	41 9a       	sbi	0x08, 1	; 8
    11f2:	41 98       	cbi	0x08, 1	; 8
    11f4:	41 98       	cbi	0x08, 1	; 8
    11f6:	41 9a       	sbi	0x08, 1	; 8
    11f8:	41 9a       	sbi	0x08, 1	; 8
    11fa:	41 98       	cbi	0x08, 1	; 8
    11fc:	41 98       	cbi	0x08, 1	; 8
    11fe:	41 9a       	sbi	0x08, 1	; 8
    1200:	41 9a       	sbi	0x08, 1	; 8
    1202:	41 98       	cbi	0x08, 1	; 8
    1204:	41 98       	cbi	0x08, 1	; 8
    1206:	41 9a       	sbi	0x08, 1	; 8
    1208:	41 9a       	sbi	0x08, 1	; 8
    120a:	41 98       	cbi	0x08, 1	; 8
    120c:	41 98       	cbi	0x08, 1	; 8
    120e:	41 9a       	sbi	0x08, 1	; 8
    1210:	40 98       	cbi	0x08, 0	; 8
    1212:	41 98       	cbi	0x08, 1	; 8
    1214:	41 98       	cbi	0x08, 1	; 8
    1216:	41 9a       	sbi	0x08, 1	; 8
    1218:	83 34       	cpi	r24, 0x43	; 67
    121a:	a9 f1       	breq	.+106    	; 0x1286 <write_lcd_f+0xa4>
    121c:	40 9a       	sbi	0x08, 0	; 8
    121e:	41 98       	cbi	0x08, 1	; 8
    1220:	41 98       	cbi	0x08, 1	; 8
    1222:	41 9a       	sbi	0x08, 1	; 8
    1224:	40 98       	cbi	0x08, 0	; 8
    1226:	41 98       	cbi	0x08, 1	; 8
    1228:	41 98       	cbi	0x08, 1	; 8
    122a:	41 9a       	sbi	0x08, 1	; 8
    122c:	84 e0       	ldi	r24, 0x04	; 4
    122e:	41 98       	cbi	0x08, 1	; 8
    1230:	60 ff       	sbrs	r22, 0
    1232:	27 c0       	rjmp	.+78     	; 0x1282 <write_lcd_f+0xa0>
    1234:	40 9a       	sbi	0x08, 0	; 8
    1236:	66 95       	lsr	r22
    1238:	41 98       	cbi	0x08, 1	; 8
    123a:	41 9a       	sbi	0x08, 1	; 8
    123c:	81 50       	subi	r24, 0x01	; 1
    123e:	b9 f7       	brne	.-18     	; 0x122e <write_lcd_f+0x4c>
    1240:	40 98       	cbi	0x08, 0	; 8
    1242:	84 e0       	ldi	r24, 0x04	; 4
    1244:	41 98       	cbi	0x08, 1	; 8
    1246:	41 98       	cbi	0x08, 1	; 8
    1248:	41 9a       	sbi	0x08, 1	; 8
    124a:	81 50       	subi	r24, 0x01	; 1
    124c:	d9 f7       	brne	.-10     	; 0x1244 <write_lcd_f+0x62>
    124e:	84 e0       	ldi	r24, 0x04	; 4
    1250:	41 98       	cbi	0x08, 1	; 8
    1252:	60 ff       	sbrs	r22, 0
    1254:	14 c0       	rjmp	.+40     	; 0x127e <write_lcd_f+0x9c>
    1256:	40 9a       	sbi	0x08, 0	; 8
    1258:	66 95       	lsr	r22
    125a:	41 98       	cbi	0x08, 1	; 8
    125c:	41 9a       	sbi	0x08, 1	; 8
    125e:	81 50       	subi	r24, 0x01	; 1
    1260:	b9 f7       	brne	.-18     	; 0x1250 <write_lcd_f+0x6e>
    1262:	40 98       	cbi	0x08, 0	; 8
    1264:	84 e0       	ldi	r24, 0x04	; 4
    1266:	41 98       	cbi	0x08, 1	; 8
    1268:	41 98       	cbi	0x08, 1	; 8
    126a:	41 9a       	sbi	0x08, 1	; 8
    126c:	81 50       	subi	r24, 0x01	; 1
    126e:	d9 f7       	brne	.-10     	; 0x1266 <write_lcd_f+0x84>
    1270:	84 e1       	ldi	r24, 0x14	; 20
    1272:	40 9a       	sbi	0x08, 0	; 8
    1274:	81 50       	subi	r24, 0x01	; 1
    1276:	e9 f7       	brne	.-6      	; 0x1272 <write_lcd_f+0x90>
    1278:	10 92 8e 02 	sts	0x028E, r1	; 0x80028e <write_RGB_LCD_activ>
    127c:	08 95       	ret
    127e:	40 98       	cbi	0x08, 0	; 8
    1280:	eb cf       	rjmp	.-42     	; 0x1258 <write_lcd_f+0x76>
    1282:	40 98       	cbi	0x08, 0	; 8
    1284:	d8 cf       	rjmp	.-80     	; 0x1236 <write_lcd_f+0x54>
    1286:	40 98       	cbi	0x08, 0	; 8
    1288:	ca cf       	rjmp	.-108    	; 0x121e <write_lcd_f+0x3c>

0000128a <write_text>:
    128a:	0f 93       	push	r16
    128c:	1f 93       	push	r17
    128e:	df 93       	push	r29
    1290:	8a 01       	movw	r16, r20
    1292:	90 e2       	ldi	r25, 0x20	; 32
    1294:	89 9f       	mul	r24, r25
    1296:	60 0d       	add	r22, r0
    1298:	11 24       	eor	r1, r1
    129a:	60 68       	ori	r22, 0x80	; 128
    129c:	83 e4       	ldi	r24, 0x43	; 67
    129e:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <write_lcd_f>
    12a2:	f8 01       	movw	r30, r16
    12a4:	64 91       	lpm	r22, Z
    12a6:	66 23       	and	r22, r22
    12a8:	69 f0       	breq	.+26     	; 0x12c4 <write_text+0x3a>
    12aa:	d1 e0       	ldi	r29, 0x01	; 1
    12ac:	84 e4       	ldi	r24, 0x44	; 68
    12ae:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <write_lcd_f>
    12b2:	81 e0       	ldi	r24, 0x01	; 1
    12b4:	8d 0f       	add	r24, r29
    12b6:	f8 01       	movw	r30, r16
    12b8:	ed 0f       	add	r30, r29
    12ba:	f1 1d       	adc	r31, r1
    12bc:	64 91       	lpm	r22, Z
    12be:	d8 2f       	mov	r29, r24
    12c0:	61 11       	cpse	r22, r1
    12c2:	f4 cf       	rjmp	.-24     	; 0x12ac <write_text+0x22>
    12c4:	df 91       	pop	r29
    12c6:	1f 91       	pop	r17
    12c8:	0f 91       	pop	r16
    12ca:	08 95       	ret

000012cc <write_text_ram>:
    12cc:	0f 93       	push	r16
    12ce:	1f 93       	push	r17
    12d0:	df 93       	push	r29
    12d2:	8a 01       	movw	r16, r20
    12d4:	90 e2       	ldi	r25, 0x20	; 32
    12d6:	89 9f       	mul	r24, r25
    12d8:	60 0d       	add	r22, r0
    12da:	11 24       	eor	r1, r1
    12dc:	60 68       	ori	r22, 0x80	; 128
    12de:	83 e4       	ldi	r24, 0x43	; 67
    12e0:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <write_lcd_f>
    12e4:	f8 01       	movw	r30, r16
    12e6:	60 81       	ld	r22, Z
    12e8:	66 23       	and	r22, r22
    12ea:	59 f0       	breq	.+22     	; 0x1302 <write_text_ram+0x36>
    12ec:	d0 e0       	ldi	r29, 0x00	; 0
    12ee:	df 5f       	subi	r29, 0xFF	; 255
    12f0:	84 e4       	ldi	r24, 0x44	; 68
    12f2:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <write_lcd_f>
    12f6:	f8 01       	movw	r30, r16
    12f8:	ed 0f       	add	r30, r29
    12fa:	f1 1d       	adc	r31, r1
    12fc:	60 81       	ld	r22, Z
    12fe:	61 11       	cpse	r22, r1
    1300:	f6 cf       	rjmp	.-20     	; 0x12ee <write_text_ram+0x22>
    1302:	df 91       	pop	r29
    1304:	1f 91       	pop	r17
    1306:	0f 91       	pop	r16
    1308:	08 95       	ret

0000130a <write_zahl>:
    130a:	2f 92       	push	r2
    130c:	3f 92       	push	r3
    130e:	4f 92       	push	r4
    1310:	5f 92       	push	r5
    1312:	6f 92       	push	r6
    1314:	7f 92       	push	r7
    1316:	8f 92       	push	r8
    1318:	9f 92       	push	r9
    131a:	af 92       	push	r10
    131c:	bf 92       	push	r11
    131e:	cf 92       	push	r12
    1320:	df 92       	push	r13
    1322:	ef 92       	push	r14
    1324:	ff 92       	push	r15
    1326:	0f 93       	push	r16
    1328:	1f 93       	push	r17
    132a:	cf 93       	push	r28
    132c:	df 93       	push	r29
    132e:	cd b7       	in	r28, 0x3d	; 61
    1330:	de b7       	in	r29, 0x3e	; 62
    1332:	63 97       	sbiw	r28, 0x13	; 19
    1334:	0f b6       	in	r0, 0x3f	; 63
    1336:	f8 94       	cli
    1338:	de bf       	out	0x3e, r29	; 62
    133a:	0f be       	out	0x3f, r0	; 63
    133c:	cd bf       	out	0x3d, r28	; 61
    133e:	8a 8b       	std	Y+18, r24	; 0x12
    1340:	6b 8b       	std	Y+19, r22	; 0x13
    1342:	29 01       	movw	r4, r18
    1344:	3a 01       	movw	r6, r20
    1346:	c8 8a       	std	Y+16, r12	; 0x10
    1348:	04 36       	cpi	r16, 0x64	; 100
    134a:	08 f4       	brcc	.+2      	; 0x134e <write_zahl+0x44>
    134c:	bd c0       	rjmp	.+378    	; 0x14c8 <write_zahl+0x1be>
    134e:	04 56       	subi	r16, 0x64	; 100
    1350:	19 8a       	std	Y+17, r1	; 0x11
    1352:	0b 30       	cpi	r16, 0x0B	; 11
    1354:	08 f0       	brcs	.+2      	; 0x1358 <write_zahl+0x4e>
    1356:	0a e0       	ldi	r16, 0x0A	; 10
    1358:	ef 86       	std	Y+15, r14	; 0x0f
    135a:	88 89       	ldd	r24, Y+16	; 0x10
    135c:	8e 15       	cp	r24, r14
    135e:	08 f4       	brcc	.+2      	; 0x1362 <write_zahl+0x58>
    1360:	8f 87       	std	Y+15, r24	; 0x0f
    1362:	20 2e       	mov	r2, r16
    1364:	31 2c       	mov	r3, r1
    1366:	c1 01       	movw	r24, r2
    1368:	ef 85       	ldd	r30, Y+15	; 0x0f
    136a:	8e 0f       	add	r24, r30
    136c:	91 1d       	adc	r25, r1
    136e:	0b 97       	sbiw	r24, 0x0b	; 11
    1370:	1c f0       	brlt	.+6      	; 0x1378 <write_zahl+0x6e>
    1372:	8a e0       	ldi	r24, 0x0A	; 10
    1374:	80 1b       	sub	r24, r16
    1376:	8f 87       	std	Y+15, r24	; 0x0f
    1378:	c3 01       	movw	r24, r6
    137a:	b2 01       	movw	r22, r4
    137c:	2a e0       	ldi	r18, 0x0A	; 10
    137e:	30 e0       	ldi	r19, 0x00	; 0
    1380:	40 e0       	ldi	r20, 0x00	; 0
    1382:	50 e0       	ldi	r21, 0x00	; 0
    1384:	0e 94 72 0c 	call	0x18e4	; 0x18e4 <__udivmodsi4>
    1388:	60 5d       	subi	r22, 0xD0	; 208
    138a:	6c 87       	std	Y+12, r22	; 0x0c
    138c:	1a e0       	ldi	r17, 0x0A	; 10
    138e:	3a e0       	ldi	r19, 0x0A	; 10
    1390:	c3 2e       	mov	r12, r19
    1392:	d1 2c       	mov	r13, r1
    1394:	e1 2c       	mov	r14, r1
    1396:	f1 2c       	mov	r15, r1
    1398:	4a e0       	ldi	r20, 0x0A	; 10
    139a:	84 2e       	mov	r8, r20
    139c:	91 2c       	mov	r9, r1
    139e:	a1 2c       	mov	r10, r1
    13a0:	b1 2c       	mov	r11, r1
    13a2:	81 e0       	ldi	r24, 0x01	; 1
    13a4:	90 e0       	ldi	r25, 0x00	; 0
    13a6:	8c 0f       	add	r24, r28
    13a8:	9d 1f       	adc	r25, r29
    13aa:	81 0f       	add	r24, r17
    13ac:	91 1d       	adc	r25, r1
    13ae:	9e 87       	std	Y+14, r25	; 0x0e
    13b0:	8d 87       	std	Y+13, r24	; 0x0d
    13b2:	c3 01       	movw	r24, r6
    13b4:	b2 01       	movw	r22, r4
    13b6:	a7 01       	movw	r20, r14
    13b8:	96 01       	movw	r18, r12
    13ba:	0e 94 72 0c 	call	0x18e4	; 0x18e4 <__udivmodsi4>
    13be:	ca 01       	movw	r24, r20
    13c0:	b9 01       	movw	r22, r18
    13c2:	a5 01       	movw	r20, r10
    13c4:	94 01       	movw	r18, r8
    13c6:	0e 94 72 0c 	call	0x18e4	; 0x18e4 <__udivmodsi4>
    13ca:	60 5d       	subi	r22, 0xD0	; 208
    13cc:	ed 85       	ldd	r30, Y+13	; 0x0d
    13ce:	fe 85       	ldd	r31, Y+14	; 0x0e
    13d0:	60 83       	st	Z, r22
    13d2:	cc 0c       	add	r12, r12
    13d4:	dd 1c       	adc	r13, r13
    13d6:	ee 1c       	adc	r14, r14
    13d8:	ff 1c       	adc	r15, r15
    13da:	d7 01       	movw	r26, r14
    13dc:	c6 01       	movw	r24, r12
    13de:	88 0f       	add	r24, r24
    13e0:	99 1f       	adc	r25, r25
    13e2:	aa 1f       	adc	r26, r26
    13e4:	bb 1f       	adc	r27, r27
    13e6:	88 0f       	add	r24, r24
    13e8:	99 1f       	adc	r25, r25
    13ea:	aa 1f       	adc	r26, r26
    13ec:	bb 1f       	adc	r27, r27
    13ee:	c8 0e       	add	r12, r24
    13f0:	d9 1e       	adc	r13, r25
    13f2:	ea 1e       	adc	r14, r26
    13f4:	fb 1e       	adc	r15, r27
    13f6:	11 50       	subi	r17, 0x01	; 1
    13f8:	a0 f6       	brcc	.-88     	; 0x13a2 <write_zahl+0x98>
    13fa:	2c e0       	ldi	r18, 0x0C	; 12
    13fc:	f8 89       	ldd	r31, Y+16	; 0x10
    13fe:	2f 1b       	sub	r18, r31
    1400:	82 2f       	mov	r24, r18
    1402:	80 1b       	sub	r24, r16
    1404:	00 23       	and	r16, r16
    1406:	09 f4       	brne	.+2      	; 0x140a <write_zahl+0x100>
    1408:	85 c0       	rjmp	.+266    	; 0x1514 <write_zahl+0x20a>
    140a:	fe 01       	movw	r30, r28
    140c:	31 96       	adiw	r30, 0x01	; 1
    140e:	a1 e0       	ldi	r26, 0x01	; 1
    1410:	b0 e0       	ldi	r27, 0x00	; 0
    1412:	ac 0f       	add	r26, r28
    1414:	bd 1f       	adc	r27, r29
    1416:	a8 0f       	add	r26, r24
    1418:	b1 1d       	adc	r27, r1
    141a:	9c 91       	ld	r25, X
    141c:	91 93       	st	Z+, r25
    141e:	8f 5f       	subi	r24, 0xFF	; 255
    1420:	28 13       	cpse	r18, r24
    1422:	f5 cf       	rjmp	.-22     	; 0x140e <write_zahl+0x104>
    1424:	8f 85       	ldd	r24, Y+15	; 0x0f
    1426:	81 11       	cpse	r24, r1
    1428:	52 c0       	rjmp	.+164    	; 0x14ce <write_zahl+0x1c4>
    142a:	f1 01       	movw	r30, r2
    142c:	81 e0       	ldi	r24, 0x01	; 1
    142e:	90 e0       	ldi	r25, 0x00	; 0
    1430:	8c 0f       	add	r24, r28
    1432:	9d 1f       	adc	r25, r29
    1434:	e8 0f       	add	r30, r24
    1436:	f9 1f       	adc	r31, r25
    1438:	10 82       	st	Z, r1
    143a:	99 89       	ldd	r25, Y+17	; 0x11
    143c:	99 23       	and	r25, r25
    143e:	21 f1       	breq	.+72     	; 0x1488 <write_zahl+0x17e>
    1440:	89 81       	ldd	r24, Y+1	; 0x01
    1442:	80 33       	cpi	r24, 0x30	; 48
    1444:	09 f5       	brne	.+66     	; 0x1488 <write_zahl+0x17e>
    1446:	a1 01       	movw	r20, r2
    1448:	41 50       	subi	r20, 0x01	; 1
    144a:	51 09       	sbc	r21, r1
    144c:	14 16       	cp	r1, r20
    144e:	15 06       	cpc	r1, r21
    1450:	dc f4       	brge	.+54     	; 0x1488 <write_zahl+0x17e>
    1452:	80 e0       	ldi	r24, 0x00	; 0
    1454:	90 e0       	ldi	r25, 0x00	; 0
    1456:	20 e0       	ldi	r18, 0x00	; 0
    1458:	60 e2       	ldi	r22, 0x20	; 32
    145a:	03 c0       	rjmp	.+6      	; 0x1462 <write_zahl+0x158>
    145c:	84 17       	cp	r24, r20
    145e:	95 07       	cpc	r25, r21
    1460:	9c f4       	brge	.+38     	; 0x1488 <write_zahl+0x17e>
    1462:	2f 5f       	subi	r18, 0xFF	; 255
    1464:	e1 e0       	ldi	r30, 0x01	; 1
    1466:	f0 e0       	ldi	r31, 0x00	; 0
    1468:	ec 0f       	add	r30, r28
    146a:	fd 1f       	adc	r31, r29
    146c:	e8 0f       	add	r30, r24
    146e:	f9 1f       	adc	r31, r25
    1470:	60 83       	st	Z, r22
    1472:	82 2f       	mov	r24, r18
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	e1 e0       	ldi	r30, 0x01	; 1
    1478:	f0 e0       	ldi	r31, 0x00	; 0
    147a:	ec 0f       	add	r30, r28
    147c:	fd 1f       	adc	r31, r29
    147e:	e8 0f       	add	r30, r24
    1480:	f9 1f       	adc	r31, r25
    1482:	30 81       	ld	r19, Z
    1484:	30 33       	cpi	r19, 0x30	; 48
    1486:	51 f3       	breq	.-44     	; 0x145c <write_zahl+0x152>
    1488:	ae 01       	movw	r20, r28
    148a:	4f 5f       	subi	r20, 0xFF	; 255
    148c:	5f 4f       	sbci	r21, 0xFF	; 255
    148e:	6b 89       	ldd	r22, Y+19	; 0x13
    1490:	8a 89       	ldd	r24, Y+18	; 0x12
    1492:	0e 94 66 09 	call	0x12cc	; 0x12cc <write_text_ram>
    1496:	63 96       	adiw	r28, 0x13	; 19
    1498:	0f b6       	in	r0, 0x3f	; 63
    149a:	f8 94       	cli
    149c:	de bf       	out	0x3e, r29	; 62
    149e:	0f be       	out	0x3f, r0	; 63
    14a0:	cd bf       	out	0x3d, r28	; 61
    14a2:	df 91       	pop	r29
    14a4:	cf 91       	pop	r28
    14a6:	1f 91       	pop	r17
    14a8:	0f 91       	pop	r16
    14aa:	ff 90       	pop	r15
    14ac:	ef 90       	pop	r14
    14ae:	df 90       	pop	r13
    14b0:	cf 90       	pop	r12
    14b2:	bf 90       	pop	r11
    14b4:	af 90       	pop	r10
    14b6:	9f 90       	pop	r9
    14b8:	8f 90       	pop	r8
    14ba:	7f 90       	pop	r7
    14bc:	6f 90       	pop	r6
    14be:	5f 90       	pop	r5
    14c0:	4f 90       	pop	r4
    14c2:	3f 90       	pop	r3
    14c4:	2f 90       	pop	r2
    14c6:	08 95       	ret
    14c8:	21 e0       	ldi	r18, 0x01	; 1
    14ca:	29 8b       	std	Y+17, r18	; 0x11
    14cc:	42 cf       	rjmp	.-380    	; 0x1352 <write_zahl+0x48>
    14ce:	0f 5f       	subi	r16, 0xFF	; 255
    14d0:	8e e2       	ldi	r24, 0x2E	; 46
    14d2:	e1 e0       	ldi	r30, 0x01	; 1
    14d4:	f0 e0       	ldi	r31, 0x00	; 0
    14d6:	ec 0f       	add	r30, r28
    14d8:	fd 1f       	adc	r31, r29
    14da:	e2 0d       	add	r30, r2
    14dc:	f3 1d       	adc	r31, r3
    14de:	80 83       	st	Z, r24
    14e0:	e0 2f       	mov	r30, r16
    14e2:	20 1b       	sub	r18, r16
    14e4:	82 2f       	mov	r24, r18
    14e6:	8e 0f       	add	r24, r30
    14e8:	a1 e0       	ldi	r26, 0x01	; 1
    14ea:	b0 e0       	ldi	r27, 0x00	; 0
    14ec:	ac 0f       	add	r26, r28
    14ee:	bd 1f       	adc	r27, r29
    14f0:	a8 0f       	add	r26, r24
    14f2:	b1 1d       	adc	r27, r1
    14f4:	8c 91       	ld	r24, X
    14f6:	a1 e0       	ldi	r26, 0x01	; 1
    14f8:	b0 e0       	ldi	r27, 0x00	; 0
    14fa:	ac 0f       	add	r26, r28
    14fc:	bd 1f       	adc	r27, r29
    14fe:	ae 0f       	add	r26, r30
    1500:	b1 1d       	adc	r27, r1
    1502:	8c 93       	st	X, r24
    1504:	ef 5f       	subi	r30, 0xFF	; 255
    1506:	8e 2f       	mov	r24, r30
    1508:	80 1b       	sub	r24, r16
    150a:	9f 85       	ldd	r25, Y+15	; 0x0f
    150c:	89 17       	cp	r24, r25
    150e:	50 f3       	brcs	.-44     	; 0x14e4 <write_zahl+0x1da>
    1510:	f0 e0       	ldi	r31, 0x00	; 0
    1512:	8c cf       	rjmp	.-232    	; 0x142c <write_zahl+0x122>
    1514:	ef 85       	ldd	r30, Y+15	; 0x0f
    1516:	ee 23       	and	r30, r30
    1518:	21 f0       	breq	.+8      	; 0x1522 <write_zahl+0x218>
    151a:	8e e2       	ldi	r24, 0x2E	; 46
    151c:	89 83       	std	Y+1, r24	; 0x01
    151e:	01 e0       	ldi	r16, 0x01	; 1
    1520:	df cf       	rjmp	.-66     	; 0x14e0 <write_zahl+0x1d6>
    1522:	e0 e0       	ldi	r30, 0x00	; 0
    1524:	f0 e0       	ldi	r31, 0x00	; 0
    1526:	82 cf       	rjmp	.-252    	; 0x142c <write_zahl+0x122>

00001528 <lcd_init>:
    1528:	df 93       	push	r29
    152a:	38 9a       	sbi	0x07, 0	; 7
    152c:	39 9a       	sbi	0x07, 1	; 7
    152e:	d2 e3       	ldi	r29, 0x32	; 50
    1530:	88 e7       	ldi	r24, 0x78	; 120
    1532:	0e 94 db 08 	call	0x11b6	; 0x11b6 <delay_nop>
    1536:	d1 50       	subi	r29, 0x01	; 1
    1538:	d9 f7       	brne	.-10     	; 0x1530 <lcd_init+0x8>
    153a:	64 e3       	ldi	r22, 0x34	; 52
    153c:	83 e4       	ldi	r24, 0x43	; 67
    153e:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <write_lcd_f>
    1542:	64 e3       	ldi	r22, 0x34	; 52
    1544:	83 e4       	ldi	r24, 0x43	; 67
    1546:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <write_lcd_f>
    154a:	69 e0       	ldi	r22, 0x09	; 9
    154c:	83 e4       	ldi	r24, 0x43	; 67
    154e:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <write_lcd_f>
    1552:	60 e3       	ldi	r22, 0x30	; 48
    1554:	83 e4       	ldi	r24, 0x43	; 67
    1556:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <write_lcd_f>
    155a:	6c e0       	ldi	r22, 0x0C	; 12
    155c:	83 e4       	ldi	r24, 0x43	; 67
    155e:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <write_lcd_f>
    1562:	61 e0       	ldi	r22, 0x01	; 1
    1564:	83 e4       	ldi	r24, 0x43	; 67
    1566:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <write_lcd_f>
    156a:	d8 e0       	ldi	r29, 0x08	; 8
    156c:	88 e7       	ldi	r24, 0x78	; 120
    156e:	0e 94 db 08 	call	0x11b6	; 0x11b6 <delay_nop>
    1572:	d1 50       	subi	r29, 0x01	; 1
    1574:	d9 f7       	brne	.-10     	; 0x156c <lcd_init+0x44>
    1576:	67 e0       	ldi	r22, 0x07	; 7
    1578:	83 e4       	ldi	r24, 0x43	; 67
    157a:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <write_lcd_f>
    157e:	df 91       	pop	r29
    1580:	0c 94 ed 07 	jmp	0xfda	; 0xfda <init_Timer0_1ms_int>

00001584 <clear_lcd>:
    1584:	df 93       	push	r29
    1586:	61 e0       	ldi	r22, 0x01	; 1
    1588:	83 e4       	ldi	r24, 0x43	; 67
    158a:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <write_lcd_f>
    158e:	d8 e0       	ldi	r29, 0x08	; 8
    1590:	88 e7       	ldi	r24, 0x78	; 120
    1592:	0e 94 db 08 	call	0x11b6	; 0x11b6 <delay_nop>
    1596:	d1 50       	subi	r29, 0x01	; 1
    1598:	d9 f7       	brne	.-10     	; 0x1590 <clear_lcd+0xc>
    159a:	df 91       	pop	r29
    159c:	08 95       	ret

0000159e <LED_Show>:
    159e:	cf 93       	push	r28
    15a0:	df 93       	push	r29
    15a2:	1f 92       	push	r1
    15a4:	cd b7       	in	r28, 0x3d	; 61
    15a6:	de b7       	in	r29, 0x3e	; 62
    15a8:	85 e2       	ldi	r24, 0x25	; 37
    15aa:	90 e0       	ldi	r25, 0x00	; 0
    15ac:	21 e0       	ldi	r18, 0x01	; 1
    15ae:	fc 01       	movw	r30, r24
    15b0:	20 83       	st	Z, r18
    15b2:	19 82       	std	Y+1, r1	; 0x01
    15b4:	17 c0       	rjmp	.+46     	; 0x15e4 <LED_Show+0x46>
    15b6:	62 e3       	ldi	r22, 0x32	; 50
    15b8:	70 e0       	ldi	r23, 0x00	; 0
    15ba:	80 e0       	ldi	r24, 0x00	; 0
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	0e 94 9b 08 	call	0x1136	; 0x1136 <wait_1ms>
    15c2:	85 e2       	ldi	r24, 0x25	; 37
    15c4:	90 e0       	ldi	r25, 0x00	; 0
    15c6:	29 81       	ldd	r18, Y+1	; 0x01
    15c8:	42 2f       	mov	r20, r18
    15ca:	50 e0       	ldi	r21, 0x00	; 0
    15cc:	21 e0       	ldi	r18, 0x01	; 1
    15ce:	30 e0       	ldi	r19, 0x00	; 0
    15d0:	02 c0       	rjmp	.+4      	; 0x15d6 <LED_Show+0x38>
    15d2:	22 0f       	add	r18, r18
    15d4:	33 1f       	adc	r19, r19
    15d6:	4a 95       	dec	r20
    15d8:	e2 f7       	brpl	.-8      	; 0x15d2 <LED_Show+0x34>
    15da:	fc 01       	movw	r30, r24
    15dc:	20 83       	st	Z, r18
    15de:	89 81       	ldd	r24, Y+1	; 0x01
    15e0:	8f 5f       	subi	r24, 0xFF	; 255
    15e2:	89 83       	std	Y+1, r24	; 0x01
    15e4:	89 81       	ldd	r24, Y+1	; 0x01
    15e6:	88 30       	cpi	r24, 0x08	; 8
    15e8:	30 f3       	brcs	.-52     	; 0x15b6 <LED_Show+0x18>
    15ea:	85 e2       	ldi	r24, 0x25	; 37
    15ec:	90 e0       	ldi	r25, 0x00	; 0
    15ee:	20 e8       	ldi	r18, 0x80	; 128
    15f0:	fc 01       	movw	r30, r24
    15f2:	20 83       	st	Z, r18
    15f4:	19 82       	std	Y+1, r1	; 0x01
    15f6:	17 c0       	rjmp	.+46     	; 0x1626 <LED_Show+0x88>
    15f8:	62 e3       	ldi	r22, 0x32	; 50
    15fa:	70 e0       	ldi	r23, 0x00	; 0
    15fc:	80 e0       	ldi	r24, 0x00	; 0
    15fe:	90 e0       	ldi	r25, 0x00	; 0
    1600:	0e 94 9b 08 	call	0x1136	; 0x1136 <wait_1ms>
    1604:	85 e2       	ldi	r24, 0x25	; 37
    1606:	90 e0       	ldi	r25, 0x00	; 0
    1608:	29 81       	ldd	r18, Y+1	; 0x01
    160a:	42 2f       	mov	r20, r18
    160c:	50 e0       	ldi	r21, 0x00	; 0
    160e:	20 e8       	ldi	r18, 0x80	; 128
    1610:	30 e0       	ldi	r19, 0x00	; 0
    1612:	02 c0       	rjmp	.+4      	; 0x1618 <LED_Show+0x7a>
    1614:	35 95       	asr	r19
    1616:	27 95       	ror	r18
    1618:	4a 95       	dec	r20
    161a:	e2 f7       	brpl	.-8      	; 0x1614 <LED_Show+0x76>
    161c:	fc 01       	movw	r30, r24
    161e:	20 83       	st	Z, r18
    1620:	89 81       	ldd	r24, Y+1	; 0x01
    1622:	8f 5f       	subi	r24, 0xFF	; 255
    1624:	89 83       	std	Y+1, r24	; 0x01
    1626:	89 81       	ldd	r24, Y+1	; 0x01
    1628:	88 30       	cpi	r24, 0x08	; 8
    162a:	30 f3       	brcs	.-52     	; 0x15f8 <LED_Show+0x5a>
    162c:	64 e6       	ldi	r22, 0x64	; 100
    162e:	70 e0       	ldi	r23, 0x00	; 0
    1630:	80 e0       	ldi	r24, 0x00	; 0
    1632:	90 e0       	ldi	r25, 0x00	; 0
    1634:	0e 94 9b 08 	call	0x1136	; 0x1136 <wait_1ms>
    1638:	85 e2       	ldi	r24, 0x25	; 37
    163a:	90 e0       	ldi	r25, 0x00	; 0
    163c:	fc 01       	movw	r30, r24
    163e:	10 82       	st	Z, r1
    1640:	00 00       	nop
    1642:	0f 90       	pop	r0
    1644:	df 91       	pop	r29
    1646:	cf 91       	pop	r28
    1648:	08 95       	ret

0000164a <init_BT_CAR_V2_0>:
    164a:	cf 93       	push	r28
    164c:	df 93       	push	r29
    164e:	cd b7       	in	r28, 0x3d	; 61
    1650:	de b7       	in	r29, 0x3e	; 62
    1652:	81 e2       	ldi	r24, 0x21	; 33
    1654:	90 e0       	ldi	r25, 0x00	; 0
    1656:	20 e6       	ldi	r18, 0x60	; 96
    1658:	fc 01       	movw	r30, r24
    165a:	20 83       	st	Z, r18
    165c:	84 e2       	ldi	r24, 0x24	; 36
    165e:	90 e0       	ldi	r25, 0x00	; 0
    1660:	2f ef       	ldi	r18, 0xFF	; 255
    1662:	fc 01       	movw	r30, r24
    1664:	20 83       	st	Z, r18
    1666:	8a e2       	ldi	r24, 0x2A	; 42
    1668:	90 e0       	ldi	r25, 0x00	; 0
    166a:	2c ef       	ldi	r18, 0xFC	; 252
    166c:	fc 01       	movw	r30, r24
    166e:	20 83       	st	Z, r18
    1670:	78 94       	sei
    1672:	0e 94 94 0a 	call	0x1528	; 0x1528 <lcd_init>
    1676:	0e 94 c2 0a 	call	0x1584	; 0x1584 <clear_lcd>
    167a:	0e 94 cf 0a 	call	0x159e	; 0x159e <LED_Show>
    167e:	00 00       	nop
    1680:	df 91       	pop	r29
    1682:	cf 91       	pop	r28
    1684:	08 95       	ret

00001686 <__cmpsf2>:
    1686:	0e 94 77 0b 	call	0x16ee	; 0x16ee <__fp_cmp>
    168a:	08 f4       	brcc	.+2      	; 0x168e <__cmpsf2+0x8>
    168c:	81 e0       	ldi	r24, 0x01	; 1
    168e:	08 95       	ret

00001690 <__fixunssfsi>:
    1690:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fp_splitA>
    1694:	88 f0       	brcs	.+34     	; 0x16b8 <__fixunssfsi+0x28>
    1696:	9f 57       	subi	r25, 0x7F	; 127
    1698:	98 f0       	brcs	.+38     	; 0x16c0 <__fixunssfsi+0x30>
    169a:	b9 2f       	mov	r27, r25
    169c:	99 27       	eor	r25, r25
    169e:	b7 51       	subi	r27, 0x17	; 23
    16a0:	b0 f0       	brcs	.+44     	; 0x16ce <__fixunssfsi+0x3e>
    16a2:	e1 f0       	breq	.+56     	; 0x16dc <__fixunssfsi+0x4c>
    16a4:	66 0f       	add	r22, r22
    16a6:	77 1f       	adc	r23, r23
    16a8:	88 1f       	adc	r24, r24
    16aa:	99 1f       	adc	r25, r25
    16ac:	1a f0       	brmi	.+6      	; 0x16b4 <__fixunssfsi+0x24>
    16ae:	ba 95       	dec	r27
    16b0:	c9 f7       	brne	.-14     	; 0x16a4 <__fixunssfsi+0x14>
    16b2:	14 c0       	rjmp	.+40     	; 0x16dc <__fixunssfsi+0x4c>
    16b4:	b1 30       	cpi	r27, 0x01	; 1
    16b6:	91 f0       	breq	.+36     	; 0x16dc <__fixunssfsi+0x4c>
    16b8:	0e 94 bd 0b 	call	0x177a	; 0x177a <__fp_zero>
    16bc:	b1 e0       	ldi	r27, 0x01	; 1
    16be:	08 95       	ret
    16c0:	0c 94 bd 0b 	jmp	0x177a	; 0x177a <__fp_zero>
    16c4:	67 2f       	mov	r22, r23
    16c6:	78 2f       	mov	r23, r24
    16c8:	88 27       	eor	r24, r24
    16ca:	b8 5f       	subi	r27, 0xF8	; 248
    16cc:	39 f0       	breq	.+14     	; 0x16dc <__fixunssfsi+0x4c>
    16ce:	b9 3f       	cpi	r27, 0xF9	; 249
    16d0:	cc f3       	brlt	.-14     	; 0x16c4 <__fixunssfsi+0x34>
    16d2:	86 95       	lsr	r24
    16d4:	77 95       	ror	r23
    16d6:	67 95       	ror	r22
    16d8:	b3 95       	inc	r27
    16da:	d9 f7       	brne	.-10     	; 0x16d2 <__fixunssfsi+0x42>
    16dc:	3e f4       	brtc	.+14     	; 0x16ec <__fixunssfsi+0x5c>
    16de:	90 95       	com	r25
    16e0:	80 95       	com	r24
    16e2:	70 95       	com	r23
    16e4:	61 95       	neg	r22
    16e6:	7f 4f       	sbci	r23, 0xFF	; 255
    16e8:	8f 4f       	sbci	r24, 0xFF	; 255
    16ea:	9f 4f       	sbci	r25, 0xFF	; 255
    16ec:	08 95       	ret

000016ee <__fp_cmp>:
    16ee:	99 0f       	add	r25, r25
    16f0:	00 08       	sbc	r0, r0
    16f2:	55 0f       	add	r21, r21
    16f4:	aa 0b       	sbc	r26, r26
    16f6:	e0 e8       	ldi	r30, 0x80	; 128
    16f8:	fe ef       	ldi	r31, 0xFE	; 254
    16fa:	16 16       	cp	r1, r22
    16fc:	17 06       	cpc	r1, r23
    16fe:	e8 07       	cpc	r30, r24
    1700:	f9 07       	cpc	r31, r25
    1702:	c0 f0       	brcs	.+48     	; 0x1734 <__fp_cmp+0x46>
    1704:	12 16       	cp	r1, r18
    1706:	13 06       	cpc	r1, r19
    1708:	e4 07       	cpc	r30, r20
    170a:	f5 07       	cpc	r31, r21
    170c:	98 f0       	brcs	.+38     	; 0x1734 <__fp_cmp+0x46>
    170e:	62 1b       	sub	r22, r18
    1710:	73 0b       	sbc	r23, r19
    1712:	84 0b       	sbc	r24, r20
    1714:	95 0b       	sbc	r25, r21
    1716:	39 f4       	brne	.+14     	; 0x1726 <__fp_cmp+0x38>
    1718:	0a 26       	eor	r0, r26
    171a:	61 f0       	breq	.+24     	; 0x1734 <__fp_cmp+0x46>
    171c:	23 2b       	or	r18, r19
    171e:	24 2b       	or	r18, r20
    1720:	25 2b       	or	r18, r21
    1722:	21 f4       	brne	.+8      	; 0x172c <__fp_cmp+0x3e>
    1724:	08 95       	ret
    1726:	0a 26       	eor	r0, r26
    1728:	09 f4       	brne	.+2      	; 0x172c <__fp_cmp+0x3e>
    172a:	a1 40       	sbci	r26, 0x01	; 1
    172c:	a6 95       	lsr	r26
    172e:	8f ef       	ldi	r24, 0xFF	; 255
    1730:	81 1d       	adc	r24, r1
    1732:	81 1d       	adc	r24, r1
    1734:	08 95       	ret

00001736 <__fp_split3>:
    1736:	57 fd       	sbrc	r21, 7
    1738:	90 58       	subi	r25, 0x80	; 128
    173a:	44 0f       	add	r20, r20
    173c:	55 1f       	adc	r21, r21
    173e:	59 f0       	breq	.+22     	; 0x1756 <__fp_splitA+0x10>
    1740:	5f 3f       	cpi	r21, 0xFF	; 255
    1742:	71 f0       	breq	.+28     	; 0x1760 <__fp_splitA+0x1a>
    1744:	47 95       	ror	r20

00001746 <__fp_splitA>:
    1746:	88 0f       	add	r24, r24
    1748:	97 fb       	bst	r25, 7
    174a:	99 1f       	adc	r25, r25
    174c:	61 f0       	breq	.+24     	; 0x1766 <__fp_splitA+0x20>
    174e:	9f 3f       	cpi	r25, 0xFF	; 255
    1750:	79 f0       	breq	.+30     	; 0x1770 <__fp_splitA+0x2a>
    1752:	87 95       	ror	r24
    1754:	08 95       	ret
    1756:	12 16       	cp	r1, r18
    1758:	13 06       	cpc	r1, r19
    175a:	14 06       	cpc	r1, r20
    175c:	55 1f       	adc	r21, r21
    175e:	f2 cf       	rjmp	.-28     	; 0x1744 <__fp_split3+0xe>
    1760:	46 95       	lsr	r20
    1762:	f1 df       	rcall	.-30     	; 0x1746 <__fp_splitA>
    1764:	08 c0       	rjmp	.+16     	; 0x1776 <__fp_splitA+0x30>
    1766:	16 16       	cp	r1, r22
    1768:	17 06       	cpc	r1, r23
    176a:	18 06       	cpc	r1, r24
    176c:	99 1f       	adc	r25, r25
    176e:	f1 cf       	rjmp	.-30     	; 0x1752 <__fp_splitA+0xc>
    1770:	86 95       	lsr	r24
    1772:	71 05       	cpc	r23, r1
    1774:	61 05       	cpc	r22, r1
    1776:	08 94       	sec
    1778:	08 95       	ret

0000177a <__fp_zero>:
    177a:	e8 94       	clt

0000177c <__fp_szero>:
    177c:	bb 27       	eor	r27, r27
    177e:	66 27       	eor	r22, r22
    1780:	77 27       	eor	r23, r23
    1782:	cb 01       	movw	r24, r22
    1784:	97 f9       	bld	r25, 7
    1786:	08 95       	ret

00001788 <__gesf2>:
    1788:	0e 94 77 0b 	call	0x16ee	; 0x16ee <__fp_cmp>
    178c:	08 f4       	brcc	.+2      	; 0x1790 <__gesf2+0x8>
    178e:	8f ef       	ldi	r24, 0xFF	; 255
    1790:	08 95       	ret

00001792 <__mulsf3>:
    1792:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <__mulsf3x>
    1796:	0c 94 4d 0c 	jmp	0x189a	; 0x189a <__fp_round>
    179a:	0e 94 3f 0c 	call	0x187e	; 0x187e <__fp_pscA>
    179e:	38 f0       	brcs	.+14     	; 0x17ae <__mulsf3+0x1c>
    17a0:	0e 94 46 0c 	call	0x188c	; 0x188c <__fp_pscB>
    17a4:	20 f0       	brcs	.+8      	; 0x17ae <__mulsf3+0x1c>
    17a6:	95 23       	and	r25, r21
    17a8:	11 f0       	breq	.+4      	; 0x17ae <__mulsf3+0x1c>
    17aa:	0c 94 36 0c 	jmp	0x186c	; 0x186c <__fp_inf>
    17ae:	0c 94 3c 0c 	jmp	0x1878	; 0x1878 <__fp_nan>
    17b2:	11 24       	eor	r1, r1
    17b4:	0c 94 be 0b 	jmp	0x177c	; 0x177c <__fp_szero>

000017b8 <__mulsf3x>:
    17b8:	0e 94 9b 0b 	call	0x1736	; 0x1736 <__fp_split3>
    17bc:	70 f3       	brcs	.-36     	; 0x179a <__mulsf3+0x8>

000017be <__mulsf3_pse>:
    17be:	95 9f       	mul	r25, r21
    17c0:	c1 f3       	breq	.-16     	; 0x17b2 <__mulsf3+0x20>
    17c2:	95 0f       	add	r25, r21
    17c4:	50 e0       	ldi	r21, 0x00	; 0
    17c6:	55 1f       	adc	r21, r21
    17c8:	62 9f       	mul	r22, r18
    17ca:	f0 01       	movw	r30, r0
    17cc:	72 9f       	mul	r23, r18
    17ce:	bb 27       	eor	r27, r27
    17d0:	f0 0d       	add	r31, r0
    17d2:	b1 1d       	adc	r27, r1
    17d4:	63 9f       	mul	r22, r19
    17d6:	aa 27       	eor	r26, r26
    17d8:	f0 0d       	add	r31, r0
    17da:	b1 1d       	adc	r27, r1
    17dc:	aa 1f       	adc	r26, r26
    17de:	64 9f       	mul	r22, r20
    17e0:	66 27       	eor	r22, r22
    17e2:	b0 0d       	add	r27, r0
    17e4:	a1 1d       	adc	r26, r1
    17e6:	66 1f       	adc	r22, r22
    17e8:	82 9f       	mul	r24, r18
    17ea:	22 27       	eor	r18, r18
    17ec:	b0 0d       	add	r27, r0
    17ee:	a1 1d       	adc	r26, r1
    17f0:	62 1f       	adc	r22, r18
    17f2:	73 9f       	mul	r23, r19
    17f4:	b0 0d       	add	r27, r0
    17f6:	a1 1d       	adc	r26, r1
    17f8:	62 1f       	adc	r22, r18
    17fa:	83 9f       	mul	r24, r19
    17fc:	a0 0d       	add	r26, r0
    17fe:	61 1d       	adc	r22, r1
    1800:	22 1f       	adc	r18, r18
    1802:	74 9f       	mul	r23, r20
    1804:	33 27       	eor	r19, r19
    1806:	a0 0d       	add	r26, r0
    1808:	61 1d       	adc	r22, r1
    180a:	23 1f       	adc	r18, r19
    180c:	84 9f       	mul	r24, r20
    180e:	60 0d       	add	r22, r0
    1810:	21 1d       	adc	r18, r1
    1812:	82 2f       	mov	r24, r18
    1814:	76 2f       	mov	r23, r22
    1816:	6a 2f       	mov	r22, r26
    1818:	11 24       	eor	r1, r1
    181a:	9f 57       	subi	r25, 0x7F	; 127
    181c:	50 40       	sbci	r21, 0x00	; 0
    181e:	9a f0       	brmi	.+38     	; 0x1846 <__mulsf3_pse+0x88>
    1820:	f1 f0       	breq	.+60     	; 0x185e <__mulsf3_pse+0xa0>
    1822:	88 23       	and	r24, r24
    1824:	4a f0       	brmi	.+18     	; 0x1838 <__mulsf3_pse+0x7a>
    1826:	ee 0f       	add	r30, r30
    1828:	ff 1f       	adc	r31, r31
    182a:	bb 1f       	adc	r27, r27
    182c:	66 1f       	adc	r22, r22
    182e:	77 1f       	adc	r23, r23
    1830:	88 1f       	adc	r24, r24
    1832:	91 50       	subi	r25, 0x01	; 1
    1834:	50 40       	sbci	r21, 0x00	; 0
    1836:	a9 f7       	brne	.-22     	; 0x1822 <__mulsf3_pse+0x64>
    1838:	9e 3f       	cpi	r25, 0xFE	; 254
    183a:	51 05       	cpc	r21, r1
    183c:	80 f0       	brcs	.+32     	; 0x185e <__mulsf3_pse+0xa0>
    183e:	0c 94 36 0c 	jmp	0x186c	; 0x186c <__fp_inf>
    1842:	0c 94 be 0b 	jmp	0x177c	; 0x177c <__fp_szero>
    1846:	5f 3f       	cpi	r21, 0xFF	; 255
    1848:	e4 f3       	brlt	.-8      	; 0x1842 <__mulsf3_pse+0x84>
    184a:	98 3e       	cpi	r25, 0xE8	; 232
    184c:	d4 f3       	brlt	.-12     	; 0x1842 <__mulsf3_pse+0x84>
    184e:	86 95       	lsr	r24
    1850:	77 95       	ror	r23
    1852:	67 95       	ror	r22
    1854:	b7 95       	ror	r27
    1856:	f7 95       	ror	r31
    1858:	e7 95       	ror	r30
    185a:	9f 5f       	subi	r25, 0xFF	; 255
    185c:	c1 f7       	brne	.-16     	; 0x184e <__mulsf3_pse+0x90>
    185e:	fe 2b       	or	r31, r30
    1860:	88 0f       	add	r24, r24
    1862:	91 1d       	adc	r25, r1
    1864:	96 95       	lsr	r25
    1866:	87 95       	ror	r24
    1868:	97 f9       	bld	r25, 7
    186a:	08 95       	ret

0000186c <__fp_inf>:
    186c:	97 f9       	bld	r25, 7
    186e:	9f 67       	ori	r25, 0x7F	; 127
    1870:	80 e8       	ldi	r24, 0x80	; 128
    1872:	70 e0       	ldi	r23, 0x00	; 0
    1874:	60 e0       	ldi	r22, 0x00	; 0
    1876:	08 95       	ret

00001878 <__fp_nan>:
    1878:	9f ef       	ldi	r25, 0xFF	; 255
    187a:	80 ec       	ldi	r24, 0xC0	; 192
    187c:	08 95       	ret

0000187e <__fp_pscA>:
    187e:	00 24       	eor	r0, r0
    1880:	0a 94       	dec	r0
    1882:	16 16       	cp	r1, r22
    1884:	17 06       	cpc	r1, r23
    1886:	18 06       	cpc	r1, r24
    1888:	09 06       	cpc	r0, r25
    188a:	08 95       	ret

0000188c <__fp_pscB>:
    188c:	00 24       	eor	r0, r0
    188e:	0a 94       	dec	r0
    1890:	12 16       	cp	r1, r18
    1892:	13 06       	cpc	r1, r19
    1894:	14 06       	cpc	r1, r20
    1896:	05 06       	cpc	r0, r21
    1898:	08 95       	ret

0000189a <__fp_round>:
    189a:	09 2e       	mov	r0, r25
    189c:	03 94       	inc	r0
    189e:	00 0c       	add	r0, r0
    18a0:	11 f4       	brne	.+4      	; 0x18a6 <__fp_round+0xc>
    18a2:	88 23       	and	r24, r24
    18a4:	52 f0       	brmi	.+20     	; 0x18ba <__fp_round+0x20>
    18a6:	bb 0f       	add	r27, r27
    18a8:	40 f4       	brcc	.+16     	; 0x18ba <__fp_round+0x20>
    18aa:	bf 2b       	or	r27, r31
    18ac:	11 f4       	brne	.+4      	; 0x18b2 <__fp_round+0x18>
    18ae:	60 ff       	sbrs	r22, 0
    18b0:	04 c0       	rjmp	.+8      	; 0x18ba <__fp_round+0x20>
    18b2:	6f 5f       	subi	r22, 0xFF	; 255
    18b4:	7f 4f       	sbci	r23, 0xFF	; 255
    18b6:	8f 4f       	sbci	r24, 0xFF	; 255
    18b8:	9f 4f       	sbci	r25, 0xFF	; 255
    18ba:	08 95       	ret

000018bc <__divmodhi4>:
    18bc:	97 fb       	bst	r25, 7
    18be:	07 2e       	mov	r0, r23
    18c0:	16 f4       	brtc	.+4      	; 0x18c6 <__divmodhi4+0xa>
    18c2:	00 94       	com	r0
    18c4:	07 d0       	rcall	.+14     	; 0x18d4 <__divmodhi4_neg1>
    18c6:	77 fd       	sbrc	r23, 7
    18c8:	09 d0       	rcall	.+18     	; 0x18dc <__divmodhi4_neg2>
    18ca:	0e 94 9a 0c 	call	0x1934	; 0x1934 <__udivmodhi4>
    18ce:	07 fc       	sbrc	r0, 7
    18d0:	05 d0       	rcall	.+10     	; 0x18dc <__divmodhi4_neg2>
    18d2:	3e f4       	brtc	.+14     	; 0x18e2 <__divmodhi4_exit>

000018d4 <__divmodhi4_neg1>:
    18d4:	90 95       	com	r25
    18d6:	81 95       	neg	r24
    18d8:	9f 4f       	sbci	r25, 0xFF	; 255
    18da:	08 95       	ret

000018dc <__divmodhi4_neg2>:
    18dc:	70 95       	com	r23
    18de:	61 95       	neg	r22
    18e0:	7f 4f       	sbci	r23, 0xFF	; 255

000018e2 <__divmodhi4_exit>:
    18e2:	08 95       	ret

000018e4 <__udivmodsi4>:
    18e4:	a1 e2       	ldi	r26, 0x21	; 33
    18e6:	1a 2e       	mov	r1, r26
    18e8:	aa 1b       	sub	r26, r26
    18ea:	bb 1b       	sub	r27, r27
    18ec:	fd 01       	movw	r30, r26
    18ee:	0d c0       	rjmp	.+26     	; 0x190a <__udivmodsi4_ep>

000018f0 <__udivmodsi4_loop>:
    18f0:	aa 1f       	adc	r26, r26
    18f2:	bb 1f       	adc	r27, r27
    18f4:	ee 1f       	adc	r30, r30
    18f6:	ff 1f       	adc	r31, r31
    18f8:	a2 17       	cp	r26, r18
    18fa:	b3 07       	cpc	r27, r19
    18fc:	e4 07       	cpc	r30, r20
    18fe:	f5 07       	cpc	r31, r21
    1900:	20 f0       	brcs	.+8      	; 0x190a <__udivmodsi4_ep>
    1902:	a2 1b       	sub	r26, r18
    1904:	b3 0b       	sbc	r27, r19
    1906:	e4 0b       	sbc	r30, r20
    1908:	f5 0b       	sbc	r31, r21

0000190a <__udivmodsi4_ep>:
    190a:	66 1f       	adc	r22, r22
    190c:	77 1f       	adc	r23, r23
    190e:	88 1f       	adc	r24, r24
    1910:	99 1f       	adc	r25, r25
    1912:	1a 94       	dec	r1
    1914:	69 f7       	brne	.-38     	; 0x18f0 <__udivmodsi4_loop>
    1916:	60 95       	com	r22
    1918:	70 95       	com	r23
    191a:	80 95       	com	r24
    191c:	90 95       	com	r25
    191e:	9b 01       	movw	r18, r22
    1920:	ac 01       	movw	r20, r24
    1922:	bd 01       	movw	r22, r26
    1924:	cf 01       	movw	r24, r30
    1926:	08 95       	ret

00001928 <__tablejump2__>:
    1928:	ee 0f       	add	r30, r30
    192a:	ff 1f       	adc	r31, r31
    192c:	05 90       	lpm	r0, Z+
    192e:	f4 91       	lpm	r31, Z
    1930:	e0 2d       	mov	r30, r0
    1932:	09 94       	ijmp

00001934 <__udivmodhi4>:
    1934:	aa 1b       	sub	r26, r26
    1936:	bb 1b       	sub	r27, r27
    1938:	51 e1       	ldi	r21, 0x11	; 17
    193a:	07 c0       	rjmp	.+14     	; 0x194a <__udivmodhi4_ep>

0000193c <__udivmodhi4_loop>:
    193c:	aa 1f       	adc	r26, r26
    193e:	bb 1f       	adc	r27, r27
    1940:	a6 17       	cp	r26, r22
    1942:	b7 07       	cpc	r27, r23
    1944:	10 f0       	brcs	.+4      	; 0x194a <__udivmodhi4_ep>
    1946:	a6 1b       	sub	r26, r22
    1948:	b7 0b       	sbc	r27, r23

0000194a <__udivmodhi4_ep>:
    194a:	88 1f       	adc	r24, r24
    194c:	99 1f       	adc	r25, r25
    194e:	5a 95       	dec	r21
    1950:	a9 f7       	brne	.-22     	; 0x193c <__udivmodhi4_loop>
    1952:	80 95       	com	r24
    1954:	90 95       	com	r25
    1956:	bc 01       	movw	r22, r24
    1958:	cd 01       	movw	r24, r26
    195a:	08 95       	ret

0000195c <snprintf>:
    195c:	ae e0       	ldi	r26, 0x0E	; 14
    195e:	b0 e0       	ldi	r27, 0x00	; 0
    1960:	e4 eb       	ldi	r30, 0xB4	; 180
    1962:	fc e0       	ldi	r31, 0x0C	; 12
    1964:	0c 94 7d 0f 	jmp	0x1efa	; 0x1efa <__prologue_saves__+0x1c>
    1968:	0d 89       	ldd	r16, Y+21	; 0x15
    196a:	1e 89       	ldd	r17, Y+22	; 0x16
    196c:	8f 89       	ldd	r24, Y+23	; 0x17
    196e:	98 8d       	ldd	r25, Y+24	; 0x18
    1970:	26 e0       	ldi	r18, 0x06	; 6
    1972:	2c 83       	std	Y+4, r18	; 0x04
    1974:	1a 83       	std	Y+2, r17	; 0x02
    1976:	09 83       	std	Y+1, r16	; 0x01
    1978:	97 ff       	sbrs	r25, 7
    197a:	02 c0       	rjmp	.+4      	; 0x1980 <snprintf+0x24>
    197c:	80 e0       	ldi	r24, 0x00	; 0
    197e:	90 e8       	ldi	r25, 0x80	; 128
    1980:	01 97       	sbiw	r24, 0x01	; 1
    1982:	9e 83       	std	Y+6, r25	; 0x06
    1984:	8d 83       	std	Y+5, r24	; 0x05
    1986:	ae 01       	movw	r20, r28
    1988:	45 5e       	subi	r20, 0xE5	; 229
    198a:	5f 4f       	sbci	r21, 0xFF	; 255
    198c:	69 8d       	ldd	r22, Y+25	; 0x19
    198e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1990:	ce 01       	movw	r24, r28
    1992:	01 96       	adiw	r24, 0x01	; 1
    1994:	0e 94 de 0c 	call	0x19bc	; 0x19bc <vfprintf>
    1998:	4d 81       	ldd	r20, Y+5	; 0x05
    199a:	5e 81       	ldd	r21, Y+6	; 0x06
    199c:	57 fd       	sbrc	r21, 7
    199e:	0a c0       	rjmp	.+20     	; 0x19b4 <snprintf+0x58>
    19a0:	2f 81       	ldd	r18, Y+7	; 0x07
    19a2:	38 85       	ldd	r19, Y+8	; 0x08
    19a4:	42 17       	cp	r20, r18
    19a6:	53 07       	cpc	r21, r19
    19a8:	0c f4       	brge	.+2      	; 0x19ac <snprintf+0x50>
    19aa:	9a 01       	movw	r18, r20
    19ac:	f8 01       	movw	r30, r16
    19ae:	e2 0f       	add	r30, r18
    19b0:	f3 1f       	adc	r31, r19
    19b2:	10 82       	st	Z, r1
    19b4:	2e 96       	adiw	r28, 0x0e	; 14
    19b6:	e4 e0       	ldi	r30, 0x04	; 4
    19b8:	0c 94 99 0f 	jmp	0x1f32	; 0x1f32 <__epilogue_restores__+0x1c>

000019bc <vfprintf>:
    19bc:	ab e0       	ldi	r26, 0x0B	; 11
    19be:	b0 e0       	ldi	r27, 0x00	; 0
    19c0:	e4 ee       	ldi	r30, 0xE4	; 228
    19c2:	fc e0       	ldi	r31, 0x0C	; 12
    19c4:	0c 94 6f 0f 	jmp	0x1ede	; 0x1ede <__prologue_saves__>
    19c8:	6c 01       	movw	r12, r24
    19ca:	7b 01       	movw	r14, r22
    19cc:	8a 01       	movw	r16, r20
    19ce:	fc 01       	movw	r30, r24
    19d0:	17 82       	std	Z+7, r1	; 0x07
    19d2:	16 82       	std	Z+6, r1	; 0x06
    19d4:	83 81       	ldd	r24, Z+3	; 0x03
    19d6:	81 ff       	sbrs	r24, 1
    19d8:	cc c1       	rjmp	.+920    	; 0x1d72 <vfprintf+0x3b6>
    19da:	ce 01       	movw	r24, r28
    19dc:	01 96       	adiw	r24, 0x01	; 1
    19de:	3c 01       	movw	r6, r24
    19e0:	f6 01       	movw	r30, r12
    19e2:	93 81       	ldd	r25, Z+3	; 0x03
    19e4:	f7 01       	movw	r30, r14
    19e6:	93 fd       	sbrc	r25, 3
    19e8:	85 91       	lpm	r24, Z+
    19ea:	93 ff       	sbrs	r25, 3
    19ec:	81 91       	ld	r24, Z+
    19ee:	7f 01       	movw	r14, r30
    19f0:	88 23       	and	r24, r24
    19f2:	09 f4       	brne	.+2      	; 0x19f6 <vfprintf+0x3a>
    19f4:	ba c1       	rjmp	.+884    	; 0x1d6a <vfprintf+0x3ae>
    19f6:	85 32       	cpi	r24, 0x25	; 37
    19f8:	39 f4       	brne	.+14     	; 0x1a08 <vfprintf+0x4c>
    19fa:	93 fd       	sbrc	r25, 3
    19fc:	85 91       	lpm	r24, Z+
    19fe:	93 ff       	sbrs	r25, 3
    1a00:	81 91       	ld	r24, Z+
    1a02:	7f 01       	movw	r14, r30
    1a04:	85 32       	cpi	r24, 0x25	; 37
    1a06:	29 f4       	brne	.+10     	; 0x1a12 <vfprintf+0x56>
    1a08:	b6 01       	movw	r22, r12
    1a0a:	90 e0       	ldi	r25, 0x00	; 0
    1a0c:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <fputc>
    1a10:	e7 cf       	rjmp	.-50     	; 0x19e0 <vfprintf+0x24>
    1a12:	91 2c       	mov	r9, r1
    1a14:	21 2c       	mov	r2, r1
    1a16:	31 2c       	mov	r3, r1
    1a18:	ff e1       	ldi	r31, 0x1F	; 31
    1a1a:	f3 15       	cp	r31, r3
    1a1c:	d8 f0       	brcs	.+54     	; 0x1a54 <vfprintf+0x98>
    1a1e:	8b 32       	cpi	r24, 0x2B	; 43
    1a20:	79 f0       	breq	.+30     	; 0x1a40 <vfprintf+0x84>
    1a22:	38 f4       	brcc	.+14     	; 0x1a32 <vfprintf+0x76>
    1a24:	80 32       	cpi	r24, 0x20	; 32
    1a26:	79 f0       	breq	.+30     	; 0x1a46 <vfprintf+0x8a>
    1a28:	83 32       	cpi	r24, 0x23	; 35
    1a2a:	a1 f4       	brne	.+40     	; 0x1a54 <vfprintf+0x98>
    1a2c:	23 2d       	mov	r18, r3
    1a2e:	20 61       	ori	r18, 0x10	; 16
    1a30:	1d c0       	rjmp	.+58     	; 0x1a6c <vfprintf+0xb0>
    1a32:	8d 32       	cpi	r24, 0x2D	; 45
    1a34:	61 f0       	breq	.+24     	; 0x1a4e <vfprintf+0x92>
    1a36:	80 33       	cpi	r24, 0x30	; 48
    1a38:	69 f4       	brne	.+26     	; 0x1a54 <vfprintf+0x98>
    1a3a:	23 2d       	mov	r18, r3
    1a3c:	21 60       	ori	r18, 0x01	; 1
    1a3e:	16 c0       	rjmp	.+44     	; 0x1a6c <vfprintf+0xb0>
    1a40:	83 2d       	mov	r24, r3
    1a42:	82 60       	ori	r24, 0x02	; 2
    1a44:	38 2e       	mov	r3, r24
    1a46:	e3 2d       	mov	r30, r3
    1a48:	e4 60       	ori	r30, 0x04	; 4
    1a4a:	3e 2e       	mov	r3, r30
    1a4c:	2a c0       	rjmp	.+84     	; 0x1aa2 <vfprintf+0xe6>
    1a4e:	f3 2d       	mov	r31, r3
    1a50:	f8 60       	ori	r31, 0x08	; 8
    1a52:	1d c0       	rjmp	.+58     	; 0x1a8e <vfprintf+0xd2>
    1a54:	37 fc       	sbrc	r3, 7
    1a56:	2d c0       	rjmp	.+90     	; 0x1ab2 <vfprintf+0xf6>
    1a58:	20 ed       	ldi	r18, 0xD0	; 208
    1a5a:	28 0f       	add	r18, r24
    1a5c:	2a 30       	cpi	r18, 0x0A	; 10
    1a5e:	40 f0       	brcs	.+16     	; 0x1a70 <vfprintf+0xb4>
    1a60:	8e 32       	cpi	r24, 0x2E	; 46
    1a62:	b9 f4       	brne	.+46     	; 0x1a92 <vfprintf+0xd6>
    1a64:	36 fc       	sbrc	r3, 6
    1a66:	81 c1       	rjmp	.+770    	; 0x1d6a <vfprintf+0x3ae>
    1a68:	23 2d       	mov	r18, r3
    1a6a:	20 64       	ori	r18, 0x40	; 64
    1a6c:	32 2e       	mov	r3, r18
    1a6e:	19 c0       	rjmp	.+50     	; 0x1aa2 <vfprintf+0xe6>
    1a70:	36 fe       	sbrs	r3, 6
    1a72:	06 c0       	rjmp	.+12     	; 0x1a80 <vfprintf+0xc4>
    1a74:	8a e0       	ldi	r24, 0x0A	; 10
    1a76:	98 9e       	mul	r9, r24
    1a78:	20 0d       	add	r18, r0
    1a7a:	11 24       	eor	r1, r1
    1a7c:	92 2e       	mov	r9, r18
    1a7e:	11 c0       	rjmp	.+34     	; 0x1aa2 <vfprintf+0xe6>
    1a80:	ea e0       	ldi	r30, 0x0A	; 10
    1a82:	2e 9e       	mul	r2, r30
    1a84:	20 0d       	add	r18, r0
    1a86:	11 24       	eor	r1, r1
    1a88:	22 2e       	mov	r2, r18
    1a8a:	f3 2d       	mov	r31, r3
    1a8c:	f0 62       	ori	r31, 0x20	; 32
    1a8e:	3f 2e       	mov	r3, r31
    1a90:	08 c0       	rjmp	.+16     	; 0x1aa2 <vfprintf+0xe6>
    1a92:	8c 36       	cpi	r24, 0x6C	; 108
    1a94:	21 f4       	brne	.+8      	; 0x1a9e <vfprintf+0xe2>
    1a96:	83 2d       	mov	r24, r3
    1a98:	80 68       	ori	r24, 0x80	; 128
    1a9a:	38 2e       	mov	r3, r24
    1a9c:	02 c0       	rjmp	.+4      	; 0x1aa2 <vfprintf+0xe6>
    1a9e:	88 36       	cpi	r24, 0x68	; 104
    1aa0:	41 f4       	brne	.+16     	; 0x1ab2 <vfprintf+0xf6>
    1aa2:	f7 01       	movw	r30, r14
    1aa4:	93 fd       	sbrc	r25, 3
    1aa6:	85 91       	lpm	r24, Z+
    1aa8:	93 ff       	sbrs	r25, 3
    1aaa:	81 91       	ld	r24, Z+
    1aac:	7f 01       	movw	r14, r30
    1aae:	81 11       	cpse	r24, r1
    1ab0:	b3 cf       	rjmp	.-154    	; 0x1a18 <vfprintf+0x5c>
    1ab2:	98 2f       	mov	r25, r24
    1ab4:	9f 7d       	andi	r25, 0xDF	; 223
    1ab6:	95 54       	subi	r25, 0x45	; 69
    1ab8:	93 30       	cpi	r25, 0x03	; 3
    1aba:	28 f4       	brcc	.+10     	; 0x1ac6 <vfprintf+0x10a>
    1abc:	0c 5f       	subi	r16, 0xFC	; 252
    1abe:	1f 4f       	sbci	r17, 0xFF	; 255
    1ac0:	9f e3       	ldi	r25, 0x3F	; 63
    1ac2:	99 83       	std	Y+1, r25	; 0x01
    1ac4:	0d c0       	rjmp	.+26     	; 0x1ae0 <vfprintf+0x124>
    1ac6:	83 36       	cpi	r24, 0x63	; 99
    1ac8:	31 f0       	breq	.+12     	; 0x1ad6 <vfprintf+0x11a>
    1aca:	83 37       	cpi	r24, 0x73	; 115
    1acc:	71 f0       	breq	.+28     	; 0x1aea <vfprintf+0x12e>
    1ace:	83 35       	cpi	r24, 0x53	; 83
    1ad0:	09 f0       	breq	.+2      	; 0x1ad4 <vfprintf+0x118>
    1ad2:	59 c0       	rjmp	.+178    	; 0x1b86 <vfprintf+0x1ca>
    1ad4:	21 c0       	rjmp	.+66     	; 0x1b18 <vfprintf+0x15c>
    1ad6:	f8 01       	movw	r30, r16
    1ad8:	80 81       	ld	r24, Z
    1ada:	89 83       	std	Y+1, r24	; 0x01
    1adc:	0e 5f       	subi	r16, 0xFE	; 254
    1ade:	1f 4f       	sbci	r17, 0xFF	; 255
    1ae0:	88 24       	eor	r8, r8
    1ae2:	83 94       	inc	r8
    1ae4:	91 2c       	mov	r9, r1
    1ae6:	53 01       	movw	r10, r6
    1ae8:	13 c0       	rjmp	.+38     	; 0x1b10 <vfprintf+0x154>
    1aea:	28 01       	movw	r4, r16
    1aec:	f2 e0       	ldi	r31, 0x02	; 2
    1aee:	4f 0e       	add	r4, r31
    1af0:	51 1c       	adc	r5, r1
    1af2:	f8 01       	movw	r30, r16
    1af4:	a0 80       	ld	r10, Z
    1af6:	b1 80       	ldd	r11, Z+1	; 0x01
    1af8:	36 fe       	sbrs	r3, 6
    1afa:	03 c0       	rjmp	.+6      	; 0x1b02 <vfprintf+0x146>
    1afc:	69 2d       	mov	r22, r9
    1afe:	70 e0       	ldi	r23, 0x00	; 0
    1b00:	02 c0       	rjmp	.+4      	; 0x1b06 <vfprintf+0x14a>
    1b02:	6f ef       	ldi	r22, 0xFF	; 255
    1b04:	7f ef       	ldi	r23, 0xFF	; 255
    1b06:	c5 01       	movw	r24, r10
    1b08:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <strnlen>
    1b0c:	4c 01       	movw	r8, r24
    1b0e:	82 01       	movw	r16, r4
    1b10:	f3 2d       	mov	r31, r3
    1b12:	ff 77       	andi	r31, 0x7F	; 127
    1b14:	3f 2e       	mov	r3, r31
    1b16:	16 c0       	rjmp	.+44     	; 0x1b44 <vfprintf+0x188>
    1b18:	28 01       	movw	r4, r16
    1b1a:	22 e0       	ldi	r18, 0x02	; 2
    1b1c:	42 0e       	add	r4, r18
    1b1e:	51 1c       	adc	r5, r1
    1b20:	f8 01       	movw	r30, r16
    1b22:	a0 80       	ld	r10, Z
    1b24:	b1 80       	ldd	r11, Z+1	; 0x01
    1b26:	36 fe       	sbrs	r3, 6
    1b28:	03 c0       	rjmp	.+6      	; 0x1b30 <vfprintf+0x174>
    1b2a:	69 2d       	mov	r22, r9
    1b2c:	70 e0       	ldi	r23, 0x00	; 0
    1b2e:	02 c0       	rjmp	.+4      	; 0x1b34 <vfprintf+0x178>
    1b30:	6f ef       	ldi	r22, 0xFF	; 255
    1b32:	7f ef       	ldi	r23, 0xFF	; 255
    1b34:	c5 01       	movw	r24, r10
    1b36:	0e 94 bf 0e 	call	0x1d7e	; 0x1d7e <strnlen_P>
    1b3a:	4c 01       	movw	r8, r24
    1b3c:	f3 2d       	mov	r31, r3
    1b3e:	f0 68       	ori	r31, 0x80	; 128
    1b40:	3f 2e       	mov	r3, r31
    1b42:	82 01       	movw	r16, r4
    1b44:	33 fc       	sbrc	r3, 3
    1b46:	1b c0       	rjmp	.+54     	; 0x1b7e <vfprintf+0x1c2>
    1b48:	82 2d       	mov	r24, r2
    1b4a:	90 e0       	ldi	r25, 0x00	; 0
    1b4c:	88 16       	cp	r8, r24
    1b4e:	99 06       	cpc	r9, r25
    1b50:	b0 f4       	brcc	.+44     	; 0x1b7e <vfprintf+0x1c2>
    1b52:	b6 01       	movw	r22, r12
    1b54:	80 e2       	ldi	r24, 0x20	; 32
    1b56:	90 e0       	ldi	r25, 0x00	; 0
    1b58:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <fputc>
    1b5c:	2a 94       	dec	r2
    1b5e:	f4 cf       	rjmp	.-24     	; 0x1b48 <vfprintf+0x18c>
    1b60:	f5 01       	movw	r30, r10
    1b62:	37 fc       	sbrc	r3, 7
    1b64:	85 91       	lpm	r24, Z+
    1b66:	37 fe       	sbrs	r3, 7
    1b68:	81 91       	ld	r24, Z+
    1b6a:	5f 01       	movw	r10, r30
    1b6c:	b6 01       	movw	r22, r12
    1b6e:	90 e0       	ldi	r25, 0x00	; 0
    1b70:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <fputc>
    1b74:	21 10       	cpse	r2, r1
    1b76:	2a 94       	dec	r2
    1b78:	21 e0       	ldi	r18, 0x01	; 1
    1b7a:	82 1a       	sub	r8, r18
    1b7c:	91 08       	sbc	r9, r1
    1b7e:	81 14       	cp	r8, r1
    1b80:	91 04       	cpc	r9, r1
    1b82:	71 f7       	brne	.-36     	; 0x1b60 <vfprintf+0x1a4>
    1b84:	e8 c0       	rjmp	.+464    	; 0x1d56 <vfprintf+0x39a>
    1b86:	84 36       	cpi	r24, 0x64	; 100
    1b88:	11 f0       	breq	.+4      	; 0x1b8e <vfprintf+0x1d2>
    1b8a:	89 36       	cpi	r24, 0x69	; 105
    1b8c:	41 f5       	brne	.+80     	; 0x1bde <vfprintf+0x222>
    1b8e:	f8 01       	movw	r30, r16
    1b90:	37 fe       	sbrs	r3, 7
    1b92:	07 c0       	rjmp	.+14     	; 0x1ba2 <vfprintf+0x1e6>
    1b94:	60 81       	ld	r22, Z
    1b96:	71 81       	ldd	r23, Z+1	; 0x01
    1b98:	82 81       	ldd	r24, Z+2	; 0x02
    1b9a:	93 81       	ldd	r25, Z+3	; 0x03
    1b9c:	0c 5f       	subi	r16, 0xFC	; 252
    1b9e:	1f 4f       	sbci	r17, 0xFF	; 255
    1ba0:	08 c0       	rjmp	.+16     	; 0x1bb2 <vfprintf+0x1f6>
    1ba2:	60 81       	ld	r22, Z
    1ba4:	71 81       	ldd	r23, Z+1	; 0x01
    1ba6:	07 2e       	mov	r0, r23
    1ba8:	00 0c       	add	r0, r0
    1baa:	88 0b       	sbc	r24, r24
    1bac:	99 0b       	sbc	r25, r25
    1bae:	0e 5f       	subi	r16, 0xFE	; 254
    1bb0:	1f 4f       	sbci	r17, 0xFF	; 255
    1bb2:	f3 2d       	mov	r31, r3
    1bb4:	ff 76       	andi	r31, 0x6F	; 111
    1bb6:	3f 2e       	mov	r3, r31
    1bb8:	97 ff       	sbrs	r25, 7
    1bba:	09 c0       	rjmp	.+18     	; 0x1bce <vfprintf+0x212>
    1bbc:	90 95       	com	r25
    1bbe:	80 95       	com	r24
    1bc0:	70 95       	com	r23
    1bc2:	61 95       	neg	r22
    1bc4:	7f 4f       	sbci	r23, 0xFF	; 255
    1bc6:	8f 4f       	sbci	r24, 0xFF	; 255
    1bc8:	9f 4f       	sbci	r25, 0xFF	; 255
    1bca:	f0 68       	ori	r31, 0x80	; 128
    1bcc:	3f 2e       	mov	r3, r31
    1bce:	2a e0       	ldi	r18, 0x0A	; 10
    1bd0:	30 e0       	ldi	r19, 0x00	; 0
    1bd2:	a3 01       	movw	r20, r6
    1bd4:	0e 94 11 0f 	call	0x1e22	; 0x1e22 <__ultoa_invert>
    1bd8:	88 2e       	mov	r8, r24
    1bda:	86 18       	sub	r8, r6
    1bdc:	45 c0       	rjmp	.+138    	; 0x1c68 <vfprintf+0x2ac>
    1bde:	85 37       	cpi	r24, 0x75	; 117
    1be0:	31 f4       	brne	.+12     	; 0x1bee <vfprintf+0x232>
    1be2:	23 2d       	mov	r18, r3
    1be4:	2f 7e       	andi	r18, 0xEF	; 239
    1be6:	b2 2e       	mov	r11, r18
    1be8:	2a e0       	ldi	r18, 0x0A	; 10
    1bea:	30 e0       	ldi	r19, 0x00	; 0
    1bec:	25 c0       	rjmp	.+74     	; 0x1c38 <vfprintf+0x27c>
    1bee:	93 2d       	mov	r25, r3
    1bf0:	99 7f       	andi	r25, 0xF9	; 249
    1bf2:	b9 2e       	mov	r11, r25
    1bf4:	8f 36       	cpi	r24, 0x6F	; 111
    1bf6:	c1 f0       	breq	.+48     	; 0x1c28 <vfprintf+0x26c>
    1bf8:	18 f4       	brcc	.+6      	; 0x1c00 <vfprintf+0x244>
    1bfa:	88 35       	cpi	r24, 0x58	; 88
    1bfc:	79 f0       	breq	.+30     	; 0x1c1c <vfprintf+0x260>
    1bfe:	b5 c0       	rjmp	.+362    	; 0x1d6a <vfprintf+0x3ae>
    1c00:	80 37       	cpi	r24, 0x70	; 112
    1c02:	19 f0       	breq	.+6      	; 0x1c0a <vfprintf+0x24e>
    1c04:	88 37       	cpi	r24, 0x78	; 120
    1c06:	21 f0       	breq	.+8      	; 0x1c10 <vfprintf+0x254>
    1c08:	b0 c0       	rjmp	.+352    	; 0x1d6a <vfprintf+0x3ae>
    1c0a:	e9 2f       	mov	r30, r25
    1c0c:	e0 61       	ori	r30, 0x10	; 16
    1c0e:	be 2e       	mov	r11, r30
    1c10:	b4 fe       	sbrs	r11, 4
    1c12:	0d c0       	rjmp	.+26     	; 0x1c2e <vfprintf+0x272>
    1c14:	fb 2d       	mov	r31, r11
    1c16:	f4 60       	ori	r31, 0x04	; 4
    1c18:	bf 2e       	mov	r11, r31
    1c1a:	09 c0       	rjmp	.+18     	; 0x1c2e <vfprintf+0x272>
    1c1c:	34 fe       	sbrs	r3, 4
    1c1e:	0a c0       	rjmp	.+20     	; 0x1c34 <vfprintf+0x278>
    1c20:	29 2f       	mov	r18, r25
    1c22:	26 60       	ori	r18, 0x06	; 6
    1c24:	b2 2e       	mov	r11, r18
    1c26:	06 c0       	rjmp	.+12     	; 0x1c34 <vfprintf+0x278>
    1c28:	28 e0       	ldi	r18, 0x08	; 8
    1c2a:	30 e0       	ldi	r19, 0x00	; 0
    1c2c:	05 c0       	rjmp	.+10     	; 0x1c38 <vfprintf+0x27c>
    1c2e:	20 e1       	ldi	r18, 0x10	; 16
    1c30:	30 e0       	ldi	r19, 0x00	; 0
    1c32:	02 c0       	rjmp	.+4      	; 0x1c38 <vfprintf+0x27c>
    1c34:	20 e1       	ldi	r18, 0x10	; 16
    1c36:	32 e0       	ldi	r19, 0x02	; 2
    1c38:	f8 01       	movw	r30, r16
    1c3a:	b7 fe       	sbrs	r11, 7
    1c3c:	07 c0       	rjmp	.+14     	; 0x1c4c <vfprintf+0x290>
    1c3e:	60 81       	ld	r22, Z
    1c40:	71 81       	ldd	r23, Z+1	; 0x01
    1c42:	82 81       	ldd	r24, Z+2	; 0x02
    1c44:	93 81       	ldd	r25, Z+3	; 0x03
    1c46:	0c 5f       	subi	r16, 0xFC	; 252
    1c48:	1f 4f       	sbci	r17, 0xFF	; 255
    1c4a:	06 c0       	rjmp	.+12     	; 0x1c58 <vfprintf+0x29c>
    1c4c:	60 81       	ld	r22, Z
    1c4e:	71 81       	ldd	r23, Z+1	; 0x01
    1c50:	80 e0       	ldi	r24, 0x00	; 0
    1c52:	90 e0       	ldi	r25, 0x00	; 0
    1c54:	0e 5f       	subi	r16, 0xFE	; 254
    1c56:	1f 4f       	sbci	r17, 0xFF	; 255
    1c58:	a3 01       	movw	r20, r6
    1c5a:	0e 94 11 0f 	call	0x1e22	; 0x1e22 <__ultoa_invert>
    1c5e:	88 2e       	mov	r8, r24
    1c60:	86 18       	sub	r8, r6
    1c62:	fb 2d       	mov	r31, r11
    1c64:	ff 77       	andi	r31, 0x7F	; 127
    1c66:	3f 2e       	mov	r3, r31
    1c68:	36 fe       	sbrs	r3, 6
    1c6a:	0d c0       	rjmp	.+26     	; 0x1c86 <vfprintf+0x2ca>
    1c6c:	23 2d       	mov	r18, r3
    1c6e:	2e 7f       	andi	r18, 0xFE	; 254
    1c70:	a2 2e       	mov	r10, r18
    1c72:	89 14       	cp	r8, r9
    1c74:	58 f4       	brcc	.+22     	; 0x1c8c <vfprintf+0x2d0>
    1c76:	34 fe       	sbrs	r3, 4
    1c78:	0b c0       	rjmp	.+22     	; 0x1c90 <vfprintf+0x2d4>
    1c7a:	32 fc       	sbrc	r3, 2
    1c7c:	09 c0       	rjmp	.+18     	; 0x1c90 <vfprintf+0x2d4>
    1c7e:	83 2d       	mov	r24, r3
    1c80:	8e 7e       	andi	r24, 0xEE	; 238
    1c82:	a8 2e       	mov	r10, r24
    1c84:	05 c0       	rjmp	.+10     	; 0x1c90 <vfprintf+0x2d4>
    1c86:	b8 2c       	mov	r11, r8
    1c88:	a3 2c       	mov	r10, r3
    1c8a:	03 c0       	rjmp	.+6      	; 0x1c92 <vfprintf+0x2d6>
    1c8c:	b8 2c       	mov	r11, r8
    1c8e:	01 c0       	rjmp	.+2      	; 0x1c92 <vfprintf+0x2d6>
    1c90:	b9 2c       	mov	r11, r9
    1c92:	a4 fe       	sbrs	r10, 4
    1c94:	0f c0       	rjmp	.+30     	; 0x1cb4 <vfprintf+0x2f8>
    1c96:	fe 01       	movw	r30, r28
    1c98:	e8 0d       	add	r30, r8
    1c9a:	f1 1d       	adc	r31, r1
    1c9c:	80 81       	ld	r24, Z
    1c9e:	80 33       	cpi	r24, 0x30	; 48
    1ca0:	21 f4       	brne	.+8      	; 0x1caa <vfprintf+0x2ee>
    1ca2:	9a 2d       	mov	r25, r10
    1ca4:	99 7e       	andi	r25, 0xE9	; 233
    1ca6:	a9 2e       	mov	r10, r25
    1ca8:	09 c0       	rjmp	.+18     	; 0x1cbc <vfprintf+0x300>
    1caa:	a2 fe       	sbrs	r10, 2
    1cac:	06 c0       	rjmp	.+12     	; 0x1cba <vfprintf+0x2fe>
    1cae:	b3 94       	inc	r11
    1cb0:	b3 94       	inc	r11
    1cb2:	04 c0       	rjmp	.+8      	; 0x1cbc <vfprintf+0x300>
    1cb4:	8a 2d       	mov	r24, r10
    1cb6:	86 78       	andi	r24, 0x86	; 134
    1cb8:	09 f0       	breq	.+2      	; 0x1cbc <vfprintf+0x300>
    1cba:	b3 94       	inc	r11
    1cbc:	a3 fc       	sbrc	r10, 3
    1cbe:	11 c0       	rjmp	.+34     	; 0x1ce2 <vfprintf+0x326>
    1cc0:	a0 fe       	sbrs	r10, 0
    1cc2:	06 c0       	rjmp	.+12     	; 0x1cd0 <vfprintf+0x314>
    1cc4:	b2 14       	cp	r11, r2
    1cc6:	88 f4       	brcc	.+34     	; 0x1cea <vfprintf+0x32e>
    1cc8:	28 0c       	add	r2, r8
    1cca:	92 2c       	mov	r9, r2
    1ccc:	9b 18       	sub	r9, r11
    1cce:	0e c0       	rjmp	.+28     	; 0x1cec <vfprintf+0x330>
    1cd0:	b2 14       	cp	r11, r2
    1cd2:	60 f4       	brcc	.+24     	; 0x1cec <vfprintf+0x330>
    1cd4:	b6 01       	movw	r22, r12
    1cd6:	80 e2       	ldi	r24, 0x20	; 32
    1cd8:	90 e0       	ldi	r25, 0x00	; 0
    1cda:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <fputc>
    1cde:	b3 94       	inc	r11
    1ce0:	f7 cf       	rjmp	.-18     	; 0x1cd0 <vfprintf+0x314>
    1ce2:	b2 14       	cp	r11, r2
    1ce4:	18 f4       	brcc	.+6      	; 0x1cec <vfprintf+0x330>
    1ce6:	2b 18       	sub	r2, r11
    1ce8:	02 c0       	rjmp	.+4      	; 0x1cee <vfprintf+0x332>
    1cea:	98 2c       	mov	r9, r8
    1cec:	21 2c       	mov	r2, r1
    1cee:	a4 fe       	sbrs	r10, 4
    1cf0:	10 c0       	rjmp	.+32     	; 0x1d12 <vfprintf+0x356>
    1cf2:	b6 01       	movw	r22, r12
    1cf4:	80 e3       	ldi	r24, 0x30	; 48
    1cf6:	90 e0       	ldi	r25, 0x00	; 0
    1cf8:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <fputc>
    1cfc:	a2 fe       	sbrs	r10, 2
    1cfe:	17 c0       	rjmp	.+46     	; 0x1d2e <vfprintf+0x372>
    1d00:	a1 fc       	sbrc	r10, 1
    1d02:	03 c0       	rjmp	.+6      	; 0x1d0a <vfprintf+0x34e>
    1d04:	88 e7       	ldi	r24, 0x78	; 120
    1d06:	90 e0       	ldi	r25, 0x00	; 0
    1d08:	02 c0       	rjmp	.+4      	; 0x1d0e <vfprintf+0x352>
    1d0a:	88 e5       	ldi	r24, 0x58	; 88
    1d0c:	90 e0       	ldi	r25, 0x00	; 0
    1d0e:	b6 01       	movw	r22, r12
    1d10:	0c c0       	rjmp	.+24     	; 0x1d2a <vfprintf+0x36e>
    1d12:	8a 2d       	mov	r24, r10
    1d14:	86 78       	andi	r24, 0x86	; 134
    1d16:	59 f0       	breq	.+22     	; 0x1d2e <vfprintf+0x372>
    1d18:	a1 fe       	sbrs	r10, 1
    1d1a:	02 c0       	rjmp	.+4      	; 0x1d20 <vfprintf+0x364>
    1d1c:	8b e2       	ldi	r24, 0x2B	; 43
    1d1e:	01 c0       	rjmp	.+2      	; 0x1d22 <vfprintf+0x366>
    1d20:	80 e2       	ldi	r24, 0x20	; 32
    1d22:	a7 fc       	sbrc	r10, 7
    1d24:	8d e2       	ldi	r24, 0x2D	; 45
    1d26:	b6 01       	movw	r22, r12
    1d28:	90 e0       	ldi	r25, 0x00	; 0
    1d2a:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <fputc>
    1d2e:	89 14       	cp	r8, r9
    1d30:	38 f4       	brcc	.+14     	; 0x1d40 <vfprintf+0x384>
    1d32:	b6 01       	movw	r22, r12
    1d34:	80 e3       	ldi	r24, 0x30	; 48
    1d36:	90 e0       	ldi	r25, 0x00	; 0
    1d38:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <fputc>
    1d3c:	9a 94       	dec	r9
    1d3e:	f7 cf       	rjmp	.-18     	; 0x1d2e <vfprintf+0x372>
    1d40:	8a 94       	dec	r8
    1d42:	f3 01       	movw	r30, r6
    1d44:	e8 0d       	add	r30, r8
    1d46:	f1 1d       	adc	r31, r1
    1d48:	80 81       	ld	r24, Z
    1d4a:	b6 01       	movw	r22, r12
    1d4c:	90 e0       	ldi	r25, 0x00	; 0
    1d4e:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <fputc>
    1d52:	81 10       	cpse	r8, r1
    1d54:	f5 cf       	rjmp	.-22     	; 0x1d40 <vfprintf+0x384>
    1d56:	22 20       	and	r2, r2
    1d58:	09 f4       	brne	.+2      	; 0x1d5c <vfprintf+0x3a0>
    1d5a:	42 ce       	rjmp	.-892    	; 0x19e0 <vfprintf+0x24>
    1d5c:	b6 01       	movw	r22, r12
    1d5e:	80 e2       	ldi	r24, 0x20	; 32
    1d60:	90 e0       	ldi	r25, 0x00	; 0
    1d62:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <fputc>
    1d66:	2a 94       	dec	r2
    1d68:	f6 cf       	rjmp	.-20     	; 0x1d56 <vfprintf+0x39a>
    1d6a:	f6 01       	movw	r30, r12
    1d6c:	86 81       	ldd	r24, Z+6	; 0x06
    1d6e:	97 81       	ldd	r25, Z+7	; 0x07
    1d70:	02 c0       	rjmp	.+4      	; 0x1d76 <vfprintf+0x3ba>
    1d72:	8f ef       	ldi	r24, 0xFF	; 255
    1d74:	9f ef       	ldi	r25, 0xFF	; 255
    1d76:	2b 96       	adiw	r28, 0x0b	; 11
    1d78:	e2 e1       	ldi	r30, 0x12	; 18
    1d7a:	0c 94 8b 0f 	jmp	0x1f16	; 0x1f16 <__epilogue_restores__>

00001d7e <strnlen_P>:
    1d7e:	fc 01       	movw	r30, r24
    1d80:	05 90       	lpm	r0, Z+
    1d82:	61 50       	subi	r22, 0x01	; 1
    1d84:	70 40       	sbci	r23, 0x00	; 0
    1d86:	01 10       	cpse	r0, r1
    1d88:	d8 f7       	brcc	.-10     	; 0x1d80 <strnlen_P+0x2>
    1d8a:	80 95       	com	r24
    1d8c:	90 95       	com	r25
    1d8e:	8e 0f       	add	r24, r30
    1d90:	9f 1f       	adc	r25, r31
    1d92:	08 95       	ret

00001d94 <strnlen>:
    1d94:	fc 01       	movw	r30, r24
    1d96:	61 50       	subi	r22, 0x01	; 1
    1d98:	70 40       	sbci	r23, 0x00	; 0
    1d9a:	01 90       	ld	r0, Z+
    1d9c:	01 10       	cpse	r0, r1
    1d9e:	d8 f7       	brcc	.-10     	; 0x1d96 <strnlen+0x2>
    1da0:	80 95       	com	r24
    1da2:	90 95       	com	r25
    1da4:	8e 0f       	add	r24, r30
    1da6:	9f 1f       	adc	r25, r31
    1da8:	08 95       	ret

00001daa <fputc>:
    1daa:	0f 93       	push	r16
    1dac:	1f 93       	push	r17
    1dae:	cf 93       	push	r28
    1db0:	df 93       	push	r29
    1db2:	fb 01       	movw	r30, r22
    1db4:	23 81       	ldd	r18, Z+3	; 0x03
    1db6:	21 fd       	sbrc	r18, 1
    1db8:	03 c0       	rjmp	.+6      	; 0x1dc0 <fputc+0x16>
    1dba:	8f ef       	ldi	r24, 0xFF	; 255
    1dbc:	9f ef       	ldi	r25, 0xFF	; 255
    1dbe:	2c c0       	rjmp	.+88     	; 0x1e18 <fputc+0x6e>
    1dc0:	22 ff       	sbrs	r18, 2
    1dc2:	16 c0       	rjmp	.+44     	; 0x1df0 <fputc+0x46>
    1dc4:	46 81       	ldd	r20, Z+6	; 0x06
    1dc6:	57 81       	ldd	r21, Z+7	; 0x07
    1dc8:	24 81       	ldd	r18, Z+4	; 0x04
    1dca:	35 81       	ldd	r19, Z+5	; 0x05
    1dcc:	42 17       	cp	r20, r18
    1dce:	53 07       	cpc	r21, r19
    1dd0:	44 f4       	brge	.+16     	; 0x1de2 <fputc+0x38>
    1dd2:	a0 81       	ld	r26, Z
    1dd4:	b1 81       	ldd	r27, Z+1	; 0x01
    1dd6:	9d 01       	movw	r18, r26
    1dd8:	2f 5f       	subi	r18, 0xFF	; 255
    1dda:	3f 4f       	sbci	r19, 0xFF	; 255
    1ddc:	31 83       	std	Z+1, r19	; 0x01
    1dde:	20 83       	st	Z, r18
    1de0:	8c 93       	st	X, r24
    1de2:	26 81       	ldd	r18, Z+6	; 0x06
    1de4:	37 81       	ldd	r19, Z+7	; 0x07
    1de6:	2f 5f       	subi	r18, 0xFF	; 255
    1de8:	3f 4f       	sbci	r19, 0xFF	; 255
    1dea:	37 83       	std	Z+7, r19	; 0x07
    1dec:	26 83       	std	Z+6, r18	; 0x06
    1dee:	14 c0       	rjmp	.+40     	; 0x1e18 <fputc+0x6e>
    1df0:	8b 01       	movw	r16, r22
    1df2:	ec 01       	movw	r28, r24
    1df4:	fb 01       	movw	r30, r22
    1df6:	00 84       	ldd	r0, Z+8	; 0x08
    1df8:	f1 85       	ldd	r31, Z+9	; 0x09
    1dfa:	e0 2d       	mov	r30, r0
    1dfc:	09 95       	icall
    1dfe:	89 2b       	or	r24, r25
    1e00:	e1 f6       	brne	.-72     	; 0x1dba <fputc+0x10>
    1e02:	d8 01       	movw	r26, r16
    1e04:	16 96       	adiw	r26, 0x06	; 6
    1e06:	8d 91       	ld	r24, X+
    1e08:	9c 91       	ld	r25, X
    1e0a:	17 97       	sbiw	r26, 0x07	; 7
    1e0c:	01 96       	adiw	r24, 0x01	; 1
    1e0e:	17 96       	adiw	r26, 0x07	; 7
    1e10:	9c 93       	st	X, r25
    1e12:	8e 93       	st	-X, r24
    1e14:	16 97       	sbiw	r26, 0x06	; 6
    1e16:	ce 01       	movw	r24, r28
    1e18:	df 91       	pop	r29
    1e1a:	cf 91       	pop	r28
    1e1c:	1f 91       	pop	r17
    1e1e:	0f 91       	pop	r16
    1e20:	08 95       	ret

00001e22 <__ultoa_invert>:
    1e22:	fa 01       	movw	r30, r20
    1e24:	aa 27       	eor	r26, r26
    1e26:	28 30       	cpi	r18, 0x08	; 8
    1e28:	51 f1       	breq	.+84     	; 0x1e7e <__ultoa_invert+0x5c>
    1e2a:	20 31       	cpi	r18, 0x10	; 16
    1e2c:	81 f1       	breq	.+96     	; 0x1e8e <__ultoa_invert+0x6c>
    1e2e:	e8 94       	clt
    1e30:	6f 93       	push	r22
    1e32:	6e 7f       	andi	r22, 0xFE	; 254
    1e34:	6e 5f       	subi	r22, 0xFE	; 254
    1e36:	7f 4f       	sbci	r23, 0xFF	; 255
    1e38:	8f 4f       	sbci	r24, 0xFF	; 255
    1e3a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e3c:	af 4f       	sbci	r26, 0xFF	; 255
    1e3e:	b1 e0       	ldi	r27, 0x01	; 1
    1e40:	3e d0       	rcall	.+124    	; 0x1ebe <__ultoa_invert+0x9c>
    1e42:	b4 e0       	ldi	r27, 0x04	; 4
    1e44:	3c d0       	rcall	.+120    	; 0x1ebe <__ultoa_invert+0x9c>
    1e46:	67 0f       	add	r22, r23
    1e48:	78 1f       	adc	r23, r24
    1e4a:	89 1f       	adc	r24, r25
    1e4c:	9a 1f       	adc	r25, r26
    1e4e:	a1 1d       	adc	r26, r1
    1e50:	68 0f       	add	r22, r24
    1e52:	79 1f       	adc	r23, r25
    1e54:	8a 1f       	adc	r24, r26
    1e56:	91 1d       	adc	r25, r1
    1e58:	a1 1d       	adc	r26, r1
    1e5a:	6a 0f       	add	r22, r26
    1e5c:	71 1d       	adc	r23, r1
    1e5e:	81 1d       	adc	r24, r1
    1e60:	91 1d       	adc	r25, r1
    1e62:	a1 1d       	adc	r26, r1
    1e64:	20 d0       	rcall	.+64     	; 0x1ea6 <__ultoa_invert+0x84>
    1e66:	09 f4       	brne	.+2      	; 0x1e6a <__ultoa_invert+0x48>
    1e68:	68 94       	set
    1e6a:	3f 91       	pop	r19
    1e6c:	2a e0       	ldi	r18, 0x0A	; 10
    1e6e:	26 9f       	mul	r18, r22
    1e70:	11 24       	eor	r1, r1
    1e72:	30 19       	sub	r19, r0
    1e74:	30 5d       	subi	r19, 0xD0	; 208
    1e76:	31 93       	st	Z+, r19
    1e78:	de f6       	brtc	.-74     	; 0x1e30 <__ultoa_invert+0xe>
    1e7a:	cf 01       	movw	r24, r30
    1e7c:	08 95       	ret
    1e7e:	46 2f       	mov	r20, r22
    1e80:	47 70       	andi	r20, 0x07	; 7
    1e82:	40 5d       	subi	r20, 0xD0	; 208
    1e84:	41 93       	st	Z+, r20
    1e86:	b3 e0       	ldi	r27, 0x03	; 3
    1e88:	0f d0       	rcall	.+30     	; 0x1ea8 <__ultoa_invert+0x86>
    1e8a:	c9 f7       	brne	.-14     	; 0x1e7e <__ultoa_invert+0x5c>
    1e8c:	f6 cf       	rjmp	.-20     	; 0x1e7a <__ultoa_invert+0x58>
    1e8e:	46 2f       	mov	r20, r22
    1e90:	4f 70       	andi	r20, 0x0F	; 15
    1e92:	40 5d       	subi	r20, 0xD0	; 208
    1e94:	4a 33       	cpi	r20, 0x3A	; 58
    1e96:	18 f0       	brcs	.+6      	; 0x1e9e <__ultoa_invert+0x7c>
    1e98:	49 5d       	subi	r20, 0xD9	; 217
    1e9a:	31 fd       	sbrc	r19, 1
    1e9c:	40 52       	subi	r20, 0x20	; 32
    1e9e:	41 93       	st	Z+, r20
    1ea0:	02 d0       	rcall	.+4      	; 0x1ea6 <__ultoa_invert+0x84>
    1ea2:	a9 f7       	brne	.-22     	; 0x1e8e <__ultoa_invert+0x6c>
    1ea4:	ea cf       	rjmp	.-44     	; 0x1e7a <__ultoa_invert+0x58>
    1ea6:	b4 e0       	ldi	r27, 0x04	; 4
    1ea8:	a6 95       	lsr	r26
    1eaa:	97 95       	ror	r25
    1eac:	87 95       	ror	r24
    1eae:	77 95       	ror	r23
    1eb0:	67 95       	ror	r22
    1eb2:	ba 95       	dec	r27
    1eb4:	c9 f7       	brne	.-14     	; 0x1ea8 <__ultoa_invert+0x86>
    1eb6:	00 97       	sbiw	r24, 0x00	; 0
    1eb8:	61 05       	cpc	r22, r1
    1eba:	71 05       	cpc	r23, r1
    1ebc:	08 95       	ret
    1ebe:	9b 01       	movw	r18, r22
    1ec0:	ac 01       	movw	r20, r24
    1ec2:	0a 2e       	mov	r0, r26
    1ec4:	06 94       	lsr	r0
    1ec6:	57 95       	ror	r21
    1ec8:	47 95       	ror	r20
    1eca:	37 95       	ror	r19
    1ecc:	27 95       	ror	r18
    1ece:	ba 95       	dec	r27
    1ed0:	c9 f7       	brne	.-14     	; 0x1ec4 <__ultoa_invert+0xa2>
    1ed2:	62 0f       	add	r22, r18
    1ed4:	73 1f       	adc	r23, r19
    1ed6:	84 1f       	adc	r24, r20
    1ed8:	95 1f       	adc	r25, r21
    1eda:	a0 1d       	adc	r26, r0
    1edc:	08 95       	ret

00001ede <__prologue_saves__>:
    1ede:	2f 92       	push	r2
    1ee0:	3f 92       	push	r3
    1ee2:	4f 92       	push	r4
    1ee4:	5f 92       	push	r5
    1ee6:	6f 92       	push	r6
    1ee8:	7f 92       	push	r7
    1eea:	8f 92       	push	r8
    1eec:	9f 92       	push	r9
    1eee:	af 92       	push	r10
    1ef0:	bf 92       	push	r11
    1ef2:	cf 92       	push	r12
    1ef4:	df 92       	push	r13
    1ef6:	ef 92       	push	r14
    1ef8:	ff 92       	push	r15
    1efa:	0f 93       	push	r16
    1efc:	1f 93       	push	r17
    1efe:	cf 93       	push	r28
    1f00:	df 93       	push	r29
    1f02:	cd b7       	in	r28, 0x3d	; 61
    1f04:	de b7       	in	r29, 0x3e	; 62
    1f06:	ca 1b       	sub	r28, r26
    1f08:	db 0b       	sbc	r29, r27
    1f0a:	0f b6       	in	r0, 0x3f	; 63
    1f0c:	f8 94       	cli
    1f0e:	de bf       	out	0x3e, r29	; 62
    1f10:	0f be       	out	0x3f, r0	; 63
    1f12:	cd bf       	out	0x3d, r28	; 61
    1f14:	09 94       	ijmp

00001f16 <__epilogue_restores__>:
    1f16:	2a 88       	ldd	r2, Y+18	; 0x12
    1f18:	39 88       	ldd	r3, Y+17	; 0x11
    1f1a:	48 88       	ldd	r4, Y+16	; 0x10
    1f1c:	5f 84       	ldd	r5, Y+15	; 0x0f
    1f1e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1f20:	7d 84       	ldd	r7, Y+13	; 0x0d
    1f22:	8c 84       	ldd	r8, Y+12	; 0x0c
    1f24:	9b 84       	ldd	r9, Y+11	; 0x0b
    1f26:	aa 84       	ldd	r10, Y+10	; 0x0a
    1f28:	b9 84       	ldd	r11, Y+9	; 0x09
    1f2a:	c8 84       	ldd	r12, Y+8	; 0x08
    1f2c:	df 80       	ldd	r13, Y+7	; 0x07
    1f2e:	ee 80       	ldd	r14, Y+6	; 0x06
    1f30:	fd 80       	ldd	r15, Y+5	; 0x05
    1f32:	0c 81       	ldd	r16, Y+4	; 0x04
    1f34:	1b 81       	ldd	r17, Y+3	; 0x03
    1f36:	aa 81       	ldd	r26, Y+2	; 0x02
    1f38:	b9 81       	ldd	r27, Y+1	; 0x01
    1f3a:	ce 0f       	add	r28, r30
    1f3c:	d1 1d       	adc	r29, r1
    1f3e:	0f b6       	in	r0, 0x3f	; 63
    1f40:	f8 94       	cli
    1f42:	de bf       	out	0x3e, r29	; 62
    1f44:	0f be       	out	0x3f, r0	; 63
    1f46:	cd bf       	out	0x3d, r28	; 61
    1f48:	ed 01       	movw	r28, r26
    1f4a:	08 95       	ret

00001f4c <_exit>:
    1f4c:	f8 94       	cli

00001f4e <__stop_program>:
    1f4e:	ff cf       	rjmp	.-2      	; 0x1f4e <__stop_program>
