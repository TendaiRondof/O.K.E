
My_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001fc  00800100  00006460  000064f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00006460  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006c  008002fc  008002fc  000066f0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000066f0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000674c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  0000678c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000297a  00000000  00000000  000068fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b4f  00000000  00000000  00009276  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000208e  00000000  00000000  00009dc5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005e4  00000000  00000000  0000be54  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000935  00000000  00000000  0000c438  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c2a  00000000  00000000  0000cd6d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  0000d997  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b2 00 	jmp	0x164	; 0x164 <__ctors_end>
       4:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
       8:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
       c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      10:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      14:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      18:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      1c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      20:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      24:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      28:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      2c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      30:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      34:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      38:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      3c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      40:	0c 94 9d 2a 	jmp	0x553a	; 0x553a <__vector_16>
      44:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      48:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      4c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      50:	0c 94 66 02 	jmp	0x4cc	; 0x4cc <__vector_20>
      54:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      58:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      5c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      60:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      64:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      68:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      6c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      70:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__vector_28>
      74:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      78:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      7c:	ad 02       	muls	r26, r29
      7e:	cd 02       	muls	r28, r29
      80:	cd 02       	muls	r28, r29
      82:	cd 02       	muls	r28, r29
      84:	cd 02       	muls	r28, r29
      86:	cd 02       	muls	r28, r29
      88:	cd 02       	muls	r28, r29
      8a:	cd 02       	muls	r28, r29
      8c:	cd 02       	muls	r28, r29
      8e:	cd 02       	muls	r28, r29
      90:	cd 02       	muls	r28, r29
      92:	cd 02       	muls	r28, r29
      94:	cd 02       	muls	r28, r29
      96:	cd 02       	muls	r28, r29
      98:	cd 02       	muls	r28, r29
      9a:	cd 02       	muls	r28, r29
      9c:	cd 02       	muls	r28, r29
      9e:	cd 02       	muls	r28, r29
      a0:	cd 02       	muls	r28, r29
      a2:	cd 02       	muls	r28, r29
      a4:	cd 02       	muls	r28, r29
      a6:	cd 02       	muls	r28, r29
      a8:	cd 02       	muls	r28, r29
      aa:	cd 02       	muls	r28, r29
      ac:	cd 02       	muls	r28, r29
      ae:	cd 02       	muls	r28, r29
      b0:	cd 02       	muls	r28, r29
      b2:	cd 02       	muls	r28, r29
      b4:	cd 02       	muls	r28, r29
      b6:	cd 02       	muls	r28, r29
      b8:	cd 02       	muls	r28, r29
      ba:	cd 02       	muls	r28, r29
      bc:	cd 02       	muls	r28, r29
      be:	cd 02       	muls	r28, r29
      c0:	cd 02       	muls	r28, r29
      c2:	cd 02       	muls	r28, r29
      c4:	cd 02       	muls	r28, r29
      c6:	cd 02       	muls	r28, r29
      c8:	cd 02       	muls	r28, r29
      ca:	cd 02       	muls	r28, r29
      cc:	cd 02       	muls	r28, r29
      ce:	cd 02       	muls	r28, r29
      d0:	cd 02       	muls	r28, r29
      d2:	cd 02       	muls	r28, r29
      d4:	cd 02       	muls	r28, r29
      d6:	cd 02       	muls	r28, r29
      d8:	cd 02       	muls	r28, r29
      da:	cd 02       	muls	r28, r29
      dc:	cd 02       	muls	r28, r29
      de:	cd 02       	muls	r28, r29
      e0:	cd 02       	muls	r28, r29
      e2:	cd 02       	muls	r28, r29
      e4:	cd 02       	muls	r28, r29
      e6:	cd 02       	muls	r28, r29
      e8:	cd 02       	muls	r28, r29
      ea:	97 02       	muls	r25, r23
      ec:	cd 02       	muls	r28, r29
      ee:	a0 02       	muls	r26, r16
      f0:	c5 02       	muls	r28, r21
      f2:	c1 02       	muls	r28, r17
      f4:	cd 02       	muls	r28, r29
      f6:	bd 02       	muls	r27, r29
      f8:	cd 02       	muls	r28, r29
      fa:	cd 02       	muls	r28, r29
      fc:	cd 02       	muls	r28, r29
      fe:	cd 02       	muls	r28, r29
     100:	cd 02       	muls	r28, r29
     102:	c9 02       	muls	r28, r25
     104:	cd 02       	muls	r28, r29
     106:	b3 02       	muls	r27, r19
     108:	cd 02       	muls	r28, r29
     10a:	cd 02       	muls	r28, r29
     10c:	cd 02       	muls	r28, r29
     10e:	a8 02       	muls	r26, r24

00000110 <__trampolines_end>:
     110:	20 20       	and	r2, r0
     112:	20 20       	and	r2, r0
     114:	20 20       	and	r2, r0
     116:	20 20       	and	r2, r0
     118:	4f 4b       	sbci	r20, 0xBF	; 191
     11a:	45 20       	and	r4, r5
     11c:	20 20       	and	r2, r0
     11e:	20 20       	and	r2, r0
     120:	20 20       	and	r2, r0
     122:	20 20       	and	r2, r0
	...

00000125 <__c.2578>:
     125:	20 20 20 20 20 20 20 20 42 59 20 20 20 20 20 20             BY      
     135:	20 20 20 20 00                                          .

0000013a <__c.2580>:
     13a:	20 20 20 20 20 20 20 20 4a 41 4e 20 20 20 20 20             JAN     
     14a:	20 20 20 20 00                                          .

0000014f <__c.2582>:
     14f:	20 20 20 20 20 20 20 54 45 4e 44 41 49 20 20 20            TENDAI   
     15f:	20 20 20 20 00                                          .

00000164 <__ctors_end>:
     164:	11 24       	eor	r1, r1
     166:	1f be       	out	0x3f, r1	; 63
     168:	cf ef       	ldi	r28, 0xFF	; 255
     16a:	d0 e1       	ldi	r29, 0x10	; 16
     16c:	de bf       	out	0x3e, r29	; 62
     16e:	cd bf       	out	0x3d, r28	; 61

00000170 <__do_copy_data>:
     170:	12 e0       	ldi	r17, 0x02	; 2
     172:	a0 e0       	ldi	r26, 0x00	; 0
     174:	b1 e0       	ldi	r27, 0x01	; 1
     176:	e0 e6       	ldi	r30, 0x60	; 96
     178:	f4 e6       	ldi	r31, 0x64	; 100
     17a:	02 c0       	rjmp	.+4      	; 0x180 <__do_copy_data+0x10>
     17c:	05 90       	lpm	r0, Z+
     17e:	0d 92       	st	X+, r0
     180:	ac 3f       	cpi	r26, 0xFC	; 252
     182:	b1 07       	cpc	r27, r17
     184:	d9 f7       	brne	.-10     	; 0x17c <__do_copy_data+0xc>

00000186 <__do_clear_bss>:
     186:	23 e0       	ldi	r18, 0x03	; 3
     188:	ac ef       	ldi	r26, 0xFC	; 252
     18a:	b2 e0       	ldi	r27, 0x02	; 2
     18c:	01 c0       	rjmp	.+2      	; 0x190 <.do_clear_bss_start>

0000018e <.do_clear_bss_loop>:
     18e:	1d 92       	st	X+, r1

00000190 <.do_clear_bss_start>:
     190:	a8 36       	cpi	r26, 0x68	; 104
     192:	b2 07       	cpc	r27, r18
     194:	e1 f7       	brne	.-8      	; 0x18e <.do_clear_bss_loop>
     196:	0e 94 d2 27 	call	0x4fa4	; 0x4fa4 <main>
     19a:	0c 94 2e 32 	jmp	0x645c	; 0x645c <_exit>

0000019e <__bad_interrupt>:
     19e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a2 <get_DIP_Switch>:
	}
	if ((x>300)&&(x<700)&&(y<700)&&(y>300))
	{
		return 0;
	}
}
     1a2:	cf 93       	push	r28
     1a4:	df 93       	push	r29
     1a6:	00 d0       	rcall	.+0      	; 0x1a8 <get_DIP_Switch+0x6>
     1a8:	1f 92       	push	r1
     1aa:	cd b7       	in	r28, 0x3d	; 61
     1ac:	de b7       	in	r29, 0x3e	; 62
     1ae:	19 82       	std	Y+1, r1	; 0x01
     1b0:	82 e2       	ldi	r24, 0x22	; 34
     1b2:	90 e0       	ldi	r25, 0x00	; 0
     1b4:	22 e2       	ldi	r18, 0x22	; 34
     1b6:	30 e0       	ldi	r19, 0x00	; 0
     1b8:	f9 01       	movw	r30, r18
     1ba:	20 81       	ld	r18, Z
     1bc:	20 62       	ori	r18, 0x20	; 32
     1be:	fc 01       	movw	r30, r24
     1c0:	20 83       	st	Z, r18
     1c2:	82 e2       	ldi	r24, 0x22	; 34
     1c4:	90 e0       	ldi	r25, 0x00	; 0
     1c6:	22 e2       	ldi	r18, 0x22	; 34
     1c8:	30 e0       	ldi	r19, 0x00	; 0
     1ca:	f9 01       	movw	r30, r18
     1cc:	20 81       	ld	r18, Z
     1ce:	2f 7d       	andi	r18, 0xDF	; 223
     1d0:	fc 01       	movw	r30, r24
     1d2:	20 83       	st	Z, r18
     1d4:	82 e2       	ldi	r24, 0x22	; 34
     1d6:	90 e0       	ldi	r25, 0x00	; 0
     1d8:	22 e2       	ldi	r18, 0x22	; 34
     1da:	30 e0       	ldi	r19, 0x00	; 0
     1dc:	f9 01       	movw	r30, r18
     1de:	20 81       	ld	r18, Z
     1e0:	20 62       	ori	r18, 0x20	; 32
     1e2:	fc 01       	movw	r30, r24
     1e4:	20 83       	st	Z, r18
     1e6:	87 e0       	ldi	r24, 0x07	; 7
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	9b 83       	std	Y+3, r25	; 0x03
     1ec:	8a 83       	std	Y+2, r24	; 0x02
     1ee:	30 c0       	rjmp	.+96     	; 0x250 <get_DIP_Switch+0xae>
     1f0:	80 e2       	ldi	r24, 0x20	; 32
     1f2:	90 e0       	ldi	r25, 0x00	; 0
     1f4:	fc 01       	movw	r30, r24
     1f6:	80 81       	ld	r24, Z
     1f8:	88 2f       	mov	r24, r24
     1fa:	90 e0       	ldi	r25, 0x00	; 0
     1fc:	80 78       	andi	r24, 0x80	; 128
     1fe:	99 27       	eor	r25, r25
     200:	47 e0       	ldi	r20, 0x07	; 7
     202:	50 e0       	ldi	r21, 0x00	; 0
     204:	2a 81       	ldd	r18, Y+2	; 0x02
     206:	3b 81       	ldd	r19, Y+3	; 0x03
     208:	ba 01       	movw	r22, r20
     20a:	62 1b       	sub	r22, r18
     20c:	73 0b       	sbc	r23, r19
     20e:	9b 01       	movw	r18, r22
     210:	02 c0       	rjmp	.+4      	; 0x216 <get_DIP_Switch+0x74>
     212:	95 95       	asr	r25
     214:	87 95       	ror	r24
     216:	2a 95       	dec	r18
     218:	e2 f7       	brpl	.-8      	; 0x212 <get_DIP_Switch+0x70>
     21a:	98 2f       	mov	r25, r24
     21c:	89 81       	ldd	r24, Y+1	; 0x01
     21e:	89 2b       	or	r24, r25
     220:	89 83       	std	Y+1, r24	; 0x01
     222:	82 e2       	ldi	r24, 0x22	; 34
     224:	90 e0       	ldi	r25, 0x00	; 0
     226:	22 e2       	ldi	r18, 0x22	; 34
     228:	30 e0       	ldi	r19, 0x00	; 0
     22a:	f9 01       	movw	r30, r18
     22c:	20 81       	ld	r18, Z
     22e:	2f 7b       	andi	r18, 0xBF	; 191
     230:	fc 01       	movw	r30, r24
     232:	20 83       	st	Z, r18
     234:	82 e2       	ldi	r24, 0x22	; 34
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	22 e2       	ldi	r18, 0x22	; 34
     23a:	30 e0       	ldi	r19, 0x00	; 0
     23c:	f9 01       	movw	r30, r18
     23e:	20 81       	ld	r18, Z
     240:	20 64       	ori	r18, 0x40	; 64
     242:	fc 01       	movw	r30, r24
     244:	20 83       	st	Z, r18
     246:	8a 81       	ldd	r24, Y+2	; 0x02
     248:	9b 81       	ldd	r25, Y+3	; 0x03
     24a:	01 97       	sbiw	r24, 0x01	; 1
     24c:	9b 83       	std	Y+3, r25	; 0x03
     24e:	8a 83       	std	Y+2, r24	; 0x02
     250:	8a 81       	ldd	r24, Y+2	; 0x02
     252:	9b 81       	ldd	r25, Y+3	; 0x03
     254:	99 23       	and	r25, r25
     256:	64 f6       	brge	.-104    	; 0x1f0 <get_DIP_Switch+0x4e>
     258:	89 81       	ldd	r24, Y+1	; 0x01
     25a:	0f 90       	pop	r0
     25c:	0f 90       	pop	r0
     25e:	0f 90       	pop	r0
     260:	df 91       	pop	r29
     262:	cf 91       	pop	r28
     264:	08 95       	ret

00000266 <get_LCD_Taster>:
     266:	cf 93       	push	r28
     268:	df 93       	push	r29
     26a:	00 d0       	rcall	.+0      	; 0x26c <get_LCD_Taster+0x6>
     26c:	cd b7       	in	r28, 0x3d	; 61
     26e:	de b7       	in	r29, 0x3e	; 62
     270:	83 e2       	ldi	r24, 0x23	; 35
     272:	90 e0       	ldi	r25, 0x00	; 0
     274:	fc 01       	movw	r30, r24
     276:	80 81       	ld	r24, Z
     278:	89 83       	std	Y+1, r24	; 0x01
     27a:	85 e2       	ldi	r24, 0x25	; 37
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	25 e2       	ldi	r18, 0x25	; 37
     280:	30 e0       	ldi	r19, 0x00	; 0
     282:	f9 01       	movw	r30, r18
     284:	20 81       	ld	r18, Z
     286:	20 7f       	andi	r18, 0xF0	; 240
     288:	fc 01       	movw	r30, r24
     28a:	20 83       	st	Z, r18
     28c:	84 e2       	ldi	r24, 0x24	; 36
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	20 ef       	ldi	r18, 0xF0	; 240
     292:	fc 01       	movw	r30, r24
     294:	20 83       	st	Z, r18
	...
     2aa:	83 e2       	ldi	r24, 0x23	; 35
     2ac:	90 e0       	ldi	r25, 0x00	; 0
     2ae:	fc 01       	movw	r30, r24
     2b0:	80 81       	ld	r24, Z
     2b2:	8f 70       	andi	r24, 0x0F	; 15
     2b4:	8a 83       	std	Y+2, r24	; 0x02
     2b6:	84 e2       	ldi	r24, 0x24	; 36
     2b8:	90 e0       	ldi	r25, 0x00	; 0
     2ba:	2f ef       	ldi	r18, 0xFF	; 255
     2bc:	fc 01       	movw	r30, r24
     2be:	20 83       	st	Z, r18
     2c0:	85 e2       	ldi	r24, 0x25	; 37
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	29 81       	ldd	r18, Y+1	; 0x01
     2c6:	fc 01       	movw	r30, r24
     2c8:	20 83       	st	Z, r18
     2ca:	8a 81       	ldd	r24, Y+2	; 0x02
     2cc:	0f 90       	pop	r0
     2ce:	0f 90       	pop	r0
     2d0:	df 91       	pop	r29
     2d2:	cf 91       	pop	r28
     2d4:	08 95       	ret

000002d6 <init_ADC>:
     2d6:	cf 93       	push	r28
     2d8:	df 93       	push	r29
     2da:	cd b7       	in	r28, 0x3d	; 61
     2dc:	de b7       	in	r29, 0x3e	; 62
     2de:	8a e7       	ldi	r24, 0x7A	; 122
     2e0:	90 e0       	ldi	r25, 0x00	; 0
     2e2:	2a e7       	ldi	r18, 0x7A	; 122
     2e4:	30 e0       	ldi	r19, 0x00	; 0
     2e6:	f9 01       	movw	r30, r18
     2e8:	20 81       	ld	r18, Z
     2ea:	20 68       	ori	r18, 0x80	; 128
     2ec:	fc 01       	movw	r30, r24
     2ee:	20 83       	st	Z, r18
     2f0:	8c e7       	ldi	r24, 0x7C	; 124
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	2c e7       	ldi	r18, 0x7C	; 124
     2f6:	30 e0       	ldi	r19, 0x00	; 0
     2f8:	f9 01       	movw	r30, r18
     2fa:	20 81       	ld	r18, Z
     2fc:	20 64       	ori	r18, 0x40	; 64
     2fe:	fc 01       	movw	r30, r24
     300:	20 83       	st	Z, r18
     302:	8a e7       	ldi	r24, 0x7A	; 122
     304:	90 e0       	ldi	r25, 0x00	; 0
     306:	2a e7       	ldi	r18, 0x7A	; 122
     308:	30 e0       	ldi	r19, 0x00	; 0
     30a:	f9 01       	movw	r30, r18
     30c:	20 81       	ld	r18, Z
     30e:	27 60       	ori	r18, 0x07	; 7
     310:	fc 01       	movw	r30, r24
     312:	20 83       	st	Z, r18
     314:	00 00       	nop
     316:	df 91       	pop	r29
     318:	cf 91       	pop	r28
     31a:	08 95       	ret

0000031c <init_UART0>:
     31c:	cf 93       	push	r28
     31e:	df 93       	push	r29
     320:	cd b7       	in	r28, 0x3d	; 61
     322:	de b7       	in	r29, 0x3e	; 62
     324:	84 ec       	ldi	r24, 0xC4	; 196
     326:	90 e0       	ldi	r25, 0x00	; 0
     328:	20 e1       	ldi	r18, 0x10	; 16
     32a:	30 e0       	ldi	r19, 0x00	; 0
     32c:	fc 01       	movw	r30, r24
     32e:	31 83       	std	Z+1, r19	; 0x01
     330:	20 83       	st	Z, r18
     332:	80 ec       	ldi	r24, 0xC0	; 192
     334:	90 e0       	ldi	r25, 0x00	; 0
     336:	20 ec       	ldi	r18, 0xC0	; 192
     338:	30 e0       	ldi	r19, 0x00	; 0
     33a:	f9 01       	movw	r30, r18
     33c:	20 81       	ld	r18, Z
     33e:	22 60       	ori	r18, 0x02	; 2
     340:	fc 01       	movw	r30, r24
     342:	20 83       	st	Z, r18
     344:	81 ec       	ldi	r24, 0xC1	; 193
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	21 ec       	ldi	r18, 0xC1	; 193
     34a:	30 e0       	ldi	r19, 0x00	; 0
     34c:	f9 01       	movw	r30, r18
     34e:	20 81       	ld	r18, Z
     350:	28 69       	ori	r18, 0x98	; 152
     352:	fc 01       	movw	r30, r24
     354:	20 83       	st	Z, r18
     356:	00 00       	nop
     358:	df 91       	pop	r29
     35a:	cf 91       	pop	r28
     35c:	08 95       	ret

0000035e <init_UART1>:
     35e:	cf 93       	push	r28
     360:	df 93       	push	r29
     362:	cd b7       	in	r28, 0x3d	; 61
     364:	de b7       	in	r29, 0x3e	; 62
     366:	8c ec       	ldi	r24, 0xCC	; 204
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	20 e1       	ldi	r18, 0x10	; 16
     36c:	30 e0       	ldi	r19, 0x00	; 0
     36e:	fc 01       	movw	r30, r24
     370:	31 83       	std	Z+1, r19	; 0x01
     372:	20 83       	st	Z, r18
     374:	88 ec       	ldi	r24, 0xC8	; 200
     376:	90 e0       	ldi	r25, 0x00	; 0
     378:	28 ec       	ldi	r18, 0xC8	; 200
     37a:	30 e0       	ldi	r19, 0x00	; 0
     37c:	f9 01       	movw	r30, r18
     37e:	20 81       	ld	r18, Z
     380:	22 60       	ori	r18, 0x02	; 2
     382:	fc 01       	movw	r30, r24
     384:	20 83       	st	Z, r18
     386:	89 ec       	ldi	r24, 0xC9	; 201
     388:	90 e0       	ldi	r25, 0x00	; 0
     38a:	29 ec       	ldi	r18, 0xC9	; 201
     38c:	30 e0       	ldi	r19, 0x00	; 0
     38e:	f9 01       	movw	r30, r18
     390:	20 81       	ld	r18, Z
     392:	28 69       	ori	r18, 0x98	; 152
     394:	fc 01       	movw	r30, r24
     396:	20 83       	st	Z, r18
     398:	00 00       	nop
     39a:	df 91       	pop	r29
     39c:	cf 91       	pop	r28
     39e:	08 95       	ret

000003a0 <send_Byte_0>:
     3a0:	cf 93       	push	r28
     3a2:	df 93       	push	r29
     3a4:	1f 92       	push	r1
     3a6:	cd b7       	in	r28, 0x3d	; 61
     3a8:	de b7       	in	r29, 0x3e	; 62
     3aa:	89 83       	std	Y+1, r24	; 0x01
     3ac:	00 00       	nop
     3ae:	80 ec       	ldi	r24, 0xC0	; 192
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	fc 01       	movw	r30, r24
     3b4:	80 81       	ld	r24, Z
     3b6:	88 2f       	mov	r24, r24
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	80 72       	andi	r24, 0x20	; 32
     3bc:	99 27       	eor	r25, r25
     3be:	89 2b       	or	r24, r25
     3c0:	b1 f3       	breq	.-20     	; 0x3ae <send_Byte_0+0xe>
     3c2:	86 ec       	ldi	r24, 0xC6	; 198
     3c4:	90 e0       	ldi	r25, 0x00	; 0
     3c6:	29 81       	ldd	r18, Y+1	; 0x01
     3c8:	fc 01       	movw	r30, r24
     3ca:	20 83       	st	Z, r18
     3cc:	00 00       	nop
     3ce:	0f 90       	pop	r0
     3d0:	df 91       	pop	r29
     3d2:	cf 91       	pop	r28
     3d4:	08 95       	ret

000003d6 <send_Byte_1>:
     3d6:	cf 93       	push	r28
     3d8:	df 93       	push	r29
     3da:	1f 92       	push	r1
     3dc:	cd b7       	in	r28, 0x3d	; 61
     3de:	de b7       	in	r29, 0x3e	; 62
     3e0:	89 83       	std	Y+1, r24	; 0x01
     3e2:	00 00       	nop
     3e4:	88 ec       	ldi	r24, 0xC8	; 200
     3e6:	90 e0       	ldi	r25, 0x00	; 0
     3e8:	fc 01       	movw	r30, r24
     3ea:	80 81       	ld	r24, Z
     3ec:	88 2f       	mov	r24, r24
     3ee:	90 e0       	ldi	r25, 0x00	; 0
     3f0:	80 72       	andi	r24, 0x20	; 32
     3f2:	99 27       	eor	r25, r25
     3f4:	89 2b       	or	r24, r25
     3f6:	b1 f3       	breq	.-20     	; 0x3e4 <send_Byte_1+0xe>
     3f8:	8e ec       	ldi	r24, 0xCE	; 206
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	29 81       	ldd	r18, Y+1	; 0x01
     3fe:	fc 01       	movw	r30, r24
     400:	20 83       	st	Z, r18
     402:	00 00       	nop
     404:	0f 90       	pop	r0
     406:	df 91       	pop	r29
     408:	cf 91       	pop	r28
     40a:	08 95       	ret

0000040c <to_pc>:
     40c:	cf 93       	push	r28
     40e:	df 93       	push	r29
     410:	00 d0       	rcall	.+0      	; 0x412 <to_pc+0x6>
     412:	cd b7       	in	r28, 0x3d	; 61
     414:	de b7       	in	r29, 0x3e	; 62
     416:	9a 83       	std	Y+2, r25	; 0x02
     418:	89 83       	std	Y+1, r24	; 0x01
     41a:	0b c0       	rjmp	.+22     	; 0x432 <to_pc+0x26>
     41c:	89 81       	ldd	r24, Y+1	; 0x01
     41e:	9a 81       	ldd	r25, Y+2	; 0x02
     420:	fc 01       	movw	r30, r24
     422:	80 81       	ld	r24, Z
     424:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <send_Byte_0>
     428:	89 81       	ldd	r24, Y+1	; 0x01
     42a:	9a 81       	ldd	r25, Y+2	; 0x02
     42c:	01 96       	adiw	r24, 0x01	; 1
     42e:	9a 83       	std	Y+2, r25	; 0x02
     430:	89 83       	std	Y+1, r24	; 0x01
     432:	89 81       	ldd	r24, Y+1	; 0x01
     434:	9a 81       	ldd	r25, Y+2	; 0x02
     436:	fc 01       	movw	r30, r24
     438:	80 81       	ld	r24, Z
     43a:	88 23       	and	r24, r24
     43c:	79 f7       	brne	.-34     	; 0x41c <to_pc+0x10>
     43e:	10 92 43 03 	sts	0x0343, r1	; 0x800343 <uart_str_complete>
     442:	00 00       	nop
     444:	0f 90       	pop	r0
     446:	0f 90       	pop	r0
     448:	df 91       	pop	r29
     44a:	cf 91       	pop	r28
     44c:	08 95       	ret

0000044e <to_uARM>:
     44e:	cf 93       	push	r28
     450:	df 93       	push	r29
     452:	00 d0       	rcall	.+0      	; 0x454 <to_uARM+0x6>
     454:	cd b7       	in	r28, 0x3d	; 61
     456:	de b7       	in	r29, 0x3e	; 62
     458:	9a 83       	std	Y+2, r25	; 0x02
     45a:	89 83       	std	Y+1, r24	; 0x01
     45c:	0b c0       	rjmp	.+22     	; 0x474 <to_uARM+0x26>
     45e:	89 81       	ldd	r24, Y+1	; 0x01
     460:	9a 81       	ldd	r25, Y+2	; 0x02
     462:	fc 01       	movw	r30, r24
     464:	80 81       	ld	r24, Z
     466:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <send_Byte_1>
     46a:	89 81       	ldd	r24, Y+1	; 0x01
     46c:	9a 81       	ldd	r25, Y+2	; 0x02
     46e:	01 96       	adiw	r24, 0x01	; 1
     470:	9a 83       	std	Y+2, r25	; 0x02
     472:	89 83       	std	Y+1, r24	; 0x01
     474:	89 81       	ldd	r24, Y+1	; 0x01
     476:	9a 81       	ldd	r25, Y+2	; 0x02
     478:	fc 01       	movw	r30, r24
     47a:	80 81       	ld	r24, Z
     47c:	88 23       	and	r24, r24
     47e:	79 f7       	brne	.-34     	; 0x45e <to_uARM+0x10>
     480:	10 92 fd 02 	sts	0x02FD, r1	; 0x8002fd <uart_str_complete1>
     484:	00 00       	nop
     486:	0f 90       	pop	r0
     488:	0f 90       	pop	r0
     48a:	df 91       	pop	r29
     48c:	cf 91       	pop	r28
     48e:	08 95       	ret

00000490 <send_to_uArm>:
     490:	cf 93       	push	r28
     492:	df 93       	push	r29
     494:	00 d0       	rcall	.+0      	; 0x496 <send_to_uArm+0x6>
     496:	cd b7       	in	r28, 0x3d	; 61
     498:	de b7       	in	r29, 0x3e	; 62
     49a:	9a 83       	std	Y+2, r25	; 0x02
     49c:	89 83       	std	Y+1, r24	; 0x01
     49e:	89 81       	ldd	r24, Y+1	; 0x01
     4a0:	9a 81       	ldd	r25, Y+2	; 0x02
     4a2:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
     4a6:	80 e0       	ldi	r24, 0x00	; 0
     4a8:	91 e0       	ldi	r25, 0x01	; 1
     4aa:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
     4ae:	04 c0       	rjmp	.+8      	; 0x4b8 <send_to_uArm+0x28>
     4b0:	80 e0       	ldi	r24, 0x00	; 0
     4b2:	91 e0       	ldi	r25, 0x01	; 1
     4b4:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
     4b8:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <uart_string1+0x4>
     4bc:	81 33       	cpi	r24, 0x31	; 49
     4be:	c1 f3       	breq	.-16     	; 0x4b0 <send_to_uArm+0x20>
     4c0:	00 00       	nop
     4c2:	0f 90       	pop	r0
     4c4:	0f 90       	pop	r0
     4c6:	df 91       	pop	r29
     4c8:	cf 91       	pop	r28
     4ca:	08 95       	ret

000004cc <__vector_20>:
     4cc:	1f 92       	push	r1
     4ce:	0f 92       	push	r0
     4d0:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     4d4:	0f 92       	push	r0
     4d6:	11 24       	eor	r1, r1
     4d8:	2f 93       	push	r18
     4da:	3f 93       	push	r19
     4dc:	4f 93       	push	r20
     4de:	5f 93       	push	r21
     4e0:	6f 93       	push	r22
     4e2:	7f 93       	push	r23
     4e4:	8f 93       	push	r24
     4e6:	9f 93       	push	r25
     4e8:	af 93       	push	r26
     4ea:	bf 93       	push	r27
     4ec:	ef 93       	push	r30
     4ee:	ff 93       	push	r31
     4f0:	cf 93       	push	r28
     4f2:	df 93       	push	r29
     4f4:	1f 92       	push	r1
     4f6:	cd b7       	in	r28, 0x3d	; 61
     4f8:	de b7       	in	r29, 0x3e	; 62
     4fa:	86 ec       	ldi	r24, 0xC6	; 198
     4fc:	90 e0       	ldi	r25, 0x00	; 0
     4fe:	fc 01       	movw	r30, r24
     500:	80 81       	ld	r24, Z
     502:	89 83       	std	Y+1, r24	; 0x01
     504:	89 81       	ldd	r24, Y+1	; 0x01
     506:	88 2f       	mov	r24, r24
     508:	90 e0       	ldi	r25, 0x00	; 0
     50a:	09 2e       	mov	r0, r25
     50c:	00 0c       	add	r0, r0
     50e:	aa 0b       	sbc	r26, r26
     510:	bb 0b       	sbc	r27, r27
     512:	4a e0       	ldi	r20, 0x0A	; 10
     514:	50 e0       	ldi	r21, 0x00	; 0
     516:	29 e4       	ldi	r18, 0x49	; 73
     518:	30 e0       	ldi	r19, 0x00	; 0
     51a:	84 1b       	sub	r24, r20
     51c:	95 0b       	sbc	r25, r21
     51e:	28 17       	cp	r18, r24
     520:	39 07       	cpc	r19, r25
     522:	d8 f1       	brcs	.+118    	; 0x59a <__vector_20+0xce>
     524:	82 5c       	subi	r24, 0xC2	; 194
     526:	9f 4f       	sbci	r25, 0xFF	; 255
     528:	fc 01       	movw	r30, r24
     52a:	0c 94 1c 2f 	jmp	0x5e38	; 0x5e38 <__tablejump2__>
     52e:	80 e3       	ldi	r24, 0x30	; 48
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	0e 94 51 03 	call	0x6a2	; 0x6a2 <set_led_mode>
     536:	87 e0       	ldi	r24, 0x07	; 7
     538:	91 e0       	ldi	r25, 0x01	; 1
     53a:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
     53e:	3c c0       	rjmp	.+120    	; 0x5b8 <__vector_20+0xec>
     540:	80 e1       	ldi	r24, 0x10	; 16
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	0e 94 51 03 	call	0x6a2	; 0x6a2 <set_led_mode>
     548:	81 e0       	ldi	r24, 0x01	; 1
     54a:	80 93 45 03 	sts	0x0345, r24	; 0x800345 <play_sound>
     54e:	34 c0       	rjmp	.+104    	; 0x5b8 <__vector_20+0xec>
     550:	80 e4       	ldi	r24, 0x40	; 64
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	0e 94 51 03 	call	0x6a2	; 0x6a2 <set_led_mode>
     558:	2f c0       	rjmp	.+94     	; 0x5b8 <__vector_20+0xec>
     55a:	10 92 4b 03 	sts	0x034B, r1	; 0x80034b <data_bytes_recieved>
     55e:	81 e0       	ldi	r24, 0x01	; 1
     560:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <uart_str_complete>
     564:	29 c0       	rjmp	.+82     	; 0x5b8 <__vector_20+0xec>
     566:	80 e2       	ldi	r24, 0x20	; 32
     568:	90 e0       	ldi	r25, 0x00	; 0
     56a:	0e 94 51 03 	call	0x6a2	; 0x6a2 <set_led_mode>
     56e:	0e 94 97 04 	call	0x92e	; 0x92e <start_nowait>
     572:	81 e0       	ldi	r24, 0x01	; 1
     574:	80 93 44 03 	sts	0x0344, r24	; 0x800344 <routine_done>
     578:	1f c0       	rjmp	.+62     	; 0x5b8 <__vector_20+0xec>
     57a:	81 e0       	ldi	r24, 0x01	; 1
     57c:	80 93 48 03 	sts	0x0348, r24	; 0x800348 <good>
     580:	1b c0       	rjmp	.+54     	; 0x5b8 <__vector_20+0xec>
     582:	81 e0       	ldi	r24, 0x01	; 1
     584:	80 93 32 03 	sts	0x0332, r24	; 0x800332 <false_state>
     588:	17 c0       	rjmp	.+46     	; 0x5b8 <__vector_20+0xec>
     58a:	81 e0       	ldi	r24, 0x01	; 1
     58c:	80 93 33 03 	sts	0x0333, r24	; 0x800333 <pc_ready>
     590:	13 c0       	rjmp	.+38     	; 0x5b8 <__vector_20+0xec>
     592:	81 e0       	ldi	r24, 0x01	; 1
     594:	80 93 45 03 	sts	0x0345, r24	; 0x800345 <play_sound>
     598:	0f c0       	rjmp	.+30     	; 0x5b8 <__vector_20+0xec>
     59a:	80 91 4b 03 	lds	r24, 0x034B	; 0x80034b <data_bytes_recieved>
     59e:	88 2f       	mov	r24, r24
     5a0:	90 e0       	ldi	r25, 0x00	; 0
     5a2:	83 5b       	subi	r24, 0xB3	; 179
     5a4:	9c 4f       	sbci	r25, 0xFC	; 252
     5a6:	29 81       	ldd	r18, Y+1	; 0x01
     5a8:	fc 01       	movw	r30, r24
     5aa:	20 83       	st	Z, r18
     5ac:	80 91 4b 03 	lds	r24, 0x034B	; 0x80034b <data_bytes_recieved>
     5b0:	8f 5f       	subi	r24, 0xFF	; 255
     5b2:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <data_bytes_recieved>
     5b6:	00 00       	nop
     5b8:	00 00       	nop
     5ba:	0f 90       	pop	r0
     5bc:	df 91       	pop	r29
     5be:	cf 91       	pop	r28
     5c0:	ff 91       	pop	r31
     5c2:	ef 91       	pop	r30
     5c4:	bf 91       	pop	r27
     5c6:	af 91       	pop	r26
     5c8:	9f 91       	pop	r25
     5ca:	8f 91       	pop	r24
     5cc:	7f 91       	pop	r23
     5ce:	6f 91       	pop	r22
     5d0:	5f 91       	pop	r21
     5d2:	4f 91       	pop	r20
     5d4:	3f 91       	pop	r19
     5d6:	2f 91       	pop	r18
     5d8:	0f 90       	pop	r0
     5da:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     5de:	0f 90       	pop	r0
     5e0:	1f 90       	pop	r1
     5e2:	18 95       	reti

000005e4 <__vector_28>:
     5e4:	1f 92       	push	r1
     5e6:	0f 92       	push	r0
     5e8:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     5ec:	0f 92       	push	r0
     5ee:	11 24       	eor	r1, r1
     5f0:	2f 93       	push	r18
     5f2:	8f 93       	push	r24
     5f4:	9f 93       	push	r25
     5f6:	ef 93       	push	r30
     5f8:	ff 93       	push	r31
     5fa:	cf 93       	push	r28
     5fc:	df 93       	push	r29
     5fe:	1f 92       	push	r1
     600:	cd b7       	in	r28, 0x3d	; 61
     602:	de b7       	in	r29, 0x3e	; 62
     604:	8e ec       	ldi	r24, 0xCE	; 206
     606:	90 e0       	ldi	r25, 0x00	; 0
     608:	fc 01       	movw	r30, r24
     60a:	80 81       	ld	r24, Z
     60c:	89 83       	std	Y+1, r24	; 0x01
     60e:	80 91 fd 02 	lds	r24, 0x02FD	; 0x8002fd <uart_str_complete1>
     612:	88 23       	and	r24, r24
     614:	31 f5       	brne	.+76     	; 0x662 <__vector_28+0x7e>
     616:	89 81       	ldd	r24, Y+1	; 0x01
     618:	8a 30       	cpi	r24, 0x0A	; 10
     61a:	b1 f0       	breq	.+44     	; 0x648 <__vector_28+0x64>
     61c:	89 81       	ldd	r24, Y+1	; 0x01
     61e:	8d 30       	cpi	r24, 0x0D	; 13
     620:	99 f0       	breq	.+38     	; 0x648 <__vector_28+0x64>
     622:	80 91 fe 02 	lds	r24, 0x02FE	; 0x8002fe <uart_str_count1>
     626:	82 33       	cpi	r24, 0x32	; 50
     628:	78 f4       	brcc	.+30     	; 0x648 <__vector_28+0x64>
     62a:	80 91 fe 02 	lds	r24, 0x02FE	; 0x8002fe <uart_str_count1>
     62e:	88 2f       	mov	r24, r24
     630:	90 e0       	ldi	r25, 0x00	; 0
     632:	81 50       	subi	r24, 0x01	; 1
     634:	9d 4f       	sbci	r25, 0xFD	; 253
     636:	29 81       	ldd	r18, Y+1	; 0x01
     638:	fc 01       	movw	r30, r24
     63a:	20 83       	st	Z, r18
     63c:	80 91 fe 02 	lds	r24, 0x02FE	; 0x8002fe <uart_str_count1>
     640:	8f 5f       	subi	r24, 0xFF	; 255
     642:	80 93 fe 02 	sts	0x02FE, r24	; 0x8002fe <uart_str_count1>
     646:	0d c0       	rjmp	.+26     	; 0x662 <__vector_28+0x7e>
     648:	80 91 fe 02 	lds	r24, 0x02FE	; 0x8002fe <uart_str_count1>
     64c:	88 2f       	mov	r24, r24
     64e:	90 e0       	ldi	r25, 0x00	; 0
     650:	81 50       	subi	r24, 0x01	; 1
     652:	9d 4f       	sbci	r25, 0xFD	; 253
     654:	fc 01       	movw	r30, r24
     656:	10 82       	st	Z, r1
     658:	10 92 fe 02 	sts	0x02FE, r1	; 0x8002fe <uart_str_count1>
     65c:	81 e0       	ldi	r24, 0x01	; 1
     65e:	80 93 fd 02 	sts	0x02FD, r24	; 0x8002fd <uart_str_complete1>
     662:	00 00       	nop
     664:	0f 90       	pop	r0
     666:	df 91       	pop	r29
     668:	cf 91       	pop	r28
     66a:	ff 91       	pop	r31
     66c:	ef 91       	pop	r30
     66e:	9f 91       	pop	r25
     670:	8f 91       	pop	r24
     672:	2f 91       	pop	r18
     674:	0f 90       	pop	r0
     676:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     67a:	0f 90       	pop	r0
     67c:	1f 90       	pop	r1
     67e:	18 95       	reti

00000680 <clear_port>:
void clear_port()
{
     680:	cf 93       	push	r28
     682:	df 93       	push	r29
     684:	cd b7       	in	r28, 0x3d	; 61
     686:	de b7       	in	r29, 0x3e	; 62
	PORTD&=~0x70;
     688:	8b e2       	ldi	r24, 0x2B	; 43
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	2b e2       	ldi	r18, 0x2B	; 43
     68e:	30 e0       	ldi	r19, 0x00	; 0
     690:	f9 01       	movw	r30, r18
     692:	20 81       	ld	r18, Z
     694:	2f 78       	andi	r18, 0x8F	; 143
     696:	fc 01       	movw	r30, r24
     698:	20 83       	st	Z, r18
}
     69a:	00 00       	nop
     69c:	df 91       	pop	r29
     69e:	cf 91       	pop	r28
     6a0:	08 95       	ret

000006a2 <set_led_mode>:
void set_led_mode (unsigned char modus)
{
     6a2:	cf 93       	push	r28
     6a4:	df 93       	push	r29
     6a6:	1f 92       	push	r1
     6a8:	cd b7       	in	r28, 0x3d	; 61
     6aa:	de b7       	in	r29, 0x3e	; 62
     6ac:	89 83       	std	Y+1, r24	; 0x01
	clear_port();
     6ae:	0e 94 40 03 	call	0x680	; 0x680 <clear_port>
	PORTD|=modus;
     6b2:	8b e2       	ldi	r24, 0x2B	; 43
     6b4:	90 e0       	ldi	r25, 0x00	; 0
     6b6:	2b e2       	ldi	r18, 0x2B	; 43
     6b8:	30 e0       	ldi	r19, 0x00	; 0
     6ba:	f9 01       	movw	r30, r18
     6bc:	30 81       	ld	r19, Z
     6be:	29 81       	ldd	r18, Y+1	; 0x01
     6c0:	23 2b       	or	r18, r19
     6c2:	fc 01       	movw	r30, r24
     6c4:	20 83       	st	Z, r18
}
     6c6:	00 00       	nop
     6c8:	0f 90       	pop	r0
     6ca:	df 91       	pop	r29
     6cc:	cf 91       	pop	r28
     6ce:	08 95       	ret

000006d0 <make_sound>:
void make_sound()
{
     6d0:	cf 93       	push	r28
     6d2:	df 93       	push	r29
     6d4:	cd b7       	in	r28, 0x3d	; 61
     6d6:	de b7       	in	r29, 0x3e	; 62
     6d8:	6c 97       	sbiw	r28, 0x1c	; 28
     6da:	0f b6       	in	r0, 0x3f	; 63
     6dc:	f8 94       	cli
     6de:	de bf       	out	0x3e, r29	; 62
     6e0:	0f be       	out	0x3f, r0	; 63
     6e2:	cd bf       	out	0x3d, r28	; 61
	to_uARM("M2210 F500 T200\n");
     6e4:	89 e6       	ldi	r24, 0x69	; 105
     6e6:	91 e0       	ldi	r25, 0x01	; 1
     6e8:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
     6ec:	80 e0       	ldi	r24, 0x00	; 0
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	a8 e4       	ldi	r26, 0x48	; 72
     6f2:	b3 e4       	ldi	r27, 0x43	; 67
     6f4:	89 83       	std	Y+1, r24	; 0x01
     6f6:	9a 83       	std	Y+2, r25	; 0x02
     6f8:	ab 83       	std	Y+3, r26	; 0x03
     6fa:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     6fc:	20 e0       	ldi	r18, 0x00	; 0
     6fe:	30 e0       	ldi	r19, 0x00	; 0
     700:	4a e7       	ldi	r20, 0x7A	; 122
     702:	55 e4       	ldi	r21, 0x45	; 69
     704:	69 81       	ldd	r22, Y+1	; 0x01
     706:	7a 81       	ldd	r23, Y+2	; 0x02
     708:	8b 81       	ldd	r24, Y+3	; 0x03
     70a:	9c 81       	ldd	r25, Y+4	; 0x04
     70c:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
     710:	dc 01       	movw	r26, r24
     712:	cb 01       	movw	r24, r22
     714:	8b 8b       	std	Y+19, r24	; 0x13
     716:	9c 8b       	std	Y+20, r25	; 0x14
     718:	ad 8b       	std	Y+21, r26	; 0x15
     71a:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     71c:	20 e0       	ldi	r18, 0x00	; 0
     71e:	30 e0       	ldi	r19, 0x00	; 0
     720:	40 e8       	ldi	r20, 0x80	; 128
     722:	5f e3       	ldi	r21, 0x3F	; 63
     724:	6b 89       	ldd	r22, Y+19	; 0x13
     726:	7c 89       	ldd	r23, Y+20	; 0x14
     728:	8d 89       	ldd	r24, Y+21	; 0x15
     72a:	9e 89       	ldd	r25, Y+22	; 0x16
     72c:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
     730:	88 23       	and	r24, r24
     732:	2c f4       	brge	.+10     	; 0x73e <make_sound+0x6e>
		__ticks = 1;
     734:	81 e0       	ldi	r24, 0x01	; 1
     736:	90 e0       	ldi	r25, 0x00	; 0
     738:	98 8f       	std	Y+24, r25	; 0x18
     73a:	8f 8b       	std	Y+23, r24	; 0x17
     73c:	3f c0       	rjmp	.+126    	; 0x7bc <make_sound+0xec>
	else if (__tmp > 65535)
     73e:	20 e0       	ldi	r18, 0x00	; 0
     740:	3f ef       	ldi	r19, 0xFF	; 255
     742:	4f e7       	ldi	r20, 0x7F	; 127
     744:	57 e4       	ldi	r21, 0x47	; 71
     746:	6b 89       	ldd	r22, Y+19	; 0x13
     748:	7c 89       	ldd	r23, Y+20	; 0x14
     74a:	8d 89       	ldd	r24, Y+21	; 0x15
     74c:	9e 89       	ldd	r25, Y+22	; 0x16
     74e:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
     752:	18 16       	cp	r1, r24
     754:	4c f5       	brge	.+82     	; 0x7a8 <make_sound+0xd8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     756:	20 e0       	ldi	r18, 0x00	; 0
     758:	30 e0       	ldi	r19, 0x00	; 0
     75a:	40 e2       	ldi	r20, 0x20	; 32
     75c:	51 e4       	ldi	r21, 0x41	; 65
     75e:	69 81       	ldd	r22, Y+1	; 0x01
     760:	7a 81       	ldd	r23, Y+2	; 0x02
     762:	8b 81       	ldd	r24, Y+3	; 0x03
     764:	9c 81       	ldd	r25, Y+4	; 0x04
     766:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
     76a:	dc 01       	movw	r26, r24
     76c:	cb 01       	movw	r24, r22
     76e:	bc 01       	movw	r22, r24
     770:	cd 01       	movw	r24, r26
     772:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
     776:	dc 01       	movw	r26, r24
     778:	cb 01       	movw	r24, r22
     77a:	98 8f       	std	Y+24, r25	; 0x18
     77c:	8f 8b       	std	Y+23, r24	; 0x17
     77e:	0f c0       	rjmp	.+30     	; 0x79e <make_sound+0xce>
     780:	80 e9       	ldi	r24, 0x90	; 144
     782:	91 e0       	ldi	r25, 0x01	; 1
     784:	9a 8f       	std	Y+26, r25	; 0x1a
     786:	89 8f       	std	Y+25, r24	; 0x19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     788:	89 8d       	ldd	r24, Y+25	; 0x19
     78a:	9a 8d       	ldd	r25, Y+26	; 0x1a
     78c:	01 97       	sbiw	r24, 0x01	; 1
     78e:	f1 f7       	brne	.-4      	; 0x78c <make_sound+0xbc>
     790:	9a 8f       	std	Y+26, r25	; 0x1a
     792:	89 8f       	std	Y+25, r24	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     794:	8f 89       	ldd	r24, Y+23	; 0x17
     796:	98 8d       	ldd	r25, Y+24	; 0x18
     798:	01 97       	sbiw	r24, 0x01	; 1
     79a:	98 8f       	std	Y+24, r25	; 0x18
     79c:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     79e:	8f 89       	ldd	r24, Y+23	; 0x17
     7a0:	98 8d       	ldd	r25, Y+24	; 0x18
     7a2:	89 2b       	or	r24, r25
     7a4:	69 f7       	brne	.-38     	; 0x780 <make_sound+0xb0>
     7a6:	14 c0       	rjmp	.+40     	; 0x7d0 <make_sound+0x100>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7a8:	6b 89       	ldd	r22, Y+19	; 0x13
     7aa:	7c 89       	ldd	r23, Y+20	; 0x14
     7ac:	8d 89       	ldd	r24, Y+21	; 0x15
     7ae:	9e 89       	ldd	r25, Y+22	; 0x16
     7b0:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
     7b4:	dc 01       	movw	r26, r24
     7b6:	cb 01       	movw	r24, r22
     7b8:	98 8f       	std	Y+24, r25	; 0x18
     7ba:	8f 8b       	std	Y+23, r24	; 0x17
     7bc:	8f 89       	ldd	r24, Y+23	; 0x17
     7be:	98 8d       	ldd	r25, Y+24	; 0x18
     7c0:	9c 8f       	std	Y+28, r25	; 0x1c
     7c2:	8b 8f       	std	Y+27, r24	; 0x1b
     7c4:	8b 8d       	ldd	r24, Y+27	; 0x1b
     7c6:	9c 8d       	ldd	r25, Y+28	; 0x1c
     7c8:	01 97       	sbiw	r24, 0x01	; 1
     7ca:	f1 f7       	brne	.-4      	; 0x7c8 <make_sound+0xf8>
     7cc:	9c 8f       	std	Y+28, r25	; 0x1c
     7ce:	8b 8f       	std	Y+27, r24	; 0x1b
	_delay_ms(200);
	to_uARM("M2210 F1000 T500\n");
     7d0:	8a e7       	ldi	r24, 0x7A	; 122
     7d2:	91 e0       	ldi	r25, 0x01	; 1
     7d4:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
     7d8:	80 e0       	ldi	r24, 0x00	; 0
     7da:	90 e0       	ldi	r25, 0x00	; 0
     7dc:	aa ef       	ldi	r26, 0xFA	; 250
     7de:	b3 e4       	ldi	r27, 0x43	; 67
     7e0:	8d 83       	std	Y+5, r24	; 0x05
     7e2:	9e 83       	std	Y+6, r25	; 0x06
     7e4:	af 83       	std	Y+7, r26	; 0x07
     7e6:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     7e8:	20 e0       	ldi	r18, 0x00	; 0
     7ea:	30 e0       	ldi	r19, 0x00	; 0
     7ec:	4a e7       	ldi	r20, 0x7A	; 122
     7ee:	55 e4       	ldi	r21, 0x45	; 69
     7f0:	6d 81       	ldd	r22, Y+5	; 0x05
     7f2:	7e 81       	ldd	r23, Y+6	; 0x06
     7f4:	8f 81       	ldd	r24, Y+7	; 0x07
     7f6:	98 85       	ldd	r25, Y+8	; 0x08
     7f8:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
     7fc:	dc 01       	movw	r26, r24
     7fe:	cb 01       	movw	r24, r22
     800:	89 87       	std	Y+9, r24	; 0x09
     802:	9a 87       	std	Y+10, r25	; 0x0a
     804:	ab 87       	std	Y+11, r26	; 0x0b
     806:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     808:	20 e0       	ldi	r18, 0x00	; 0
     80a:	30 e0       	ldi	r19, 0x00	; 0
     80c:	40 e8       	ldi	r20, 0x80	; 128
     80e:	5f e3       	ldi	r21, 0x3F	; 63
     810:	69 85       	ldd	r22, Y+9	; 0x09
     812:	7a 85       	ldd	r23, Y+10	; 0x0a
     814:	8b 85       	ldd	r24, Y+11	; 0x0b
     816:	9c 85       	ldd	r25, Y+12	; 0x0c
     818:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
     81c:	88 23       	and	r24, r24
     81e:	2c f4       	brge	.+10     	; 0x82a <make_sound+0x15a>
		__ticks = 1;
     820:	81 e0       	ldi	r24, 0x01	; 1
     822:	90 e0       	ldi	r25, 0x00	; 0
     824:	9e 87       	std	Y+14, r25	; 0x0e
     826:	8d 87       	std	Y+13, r24	; 0x0d
     828:	3f c0       	rjmp	.+126    	; 0x8a8 <make_sound+0x1d8>
	else if (__tmp > 65535)
     82a:	20 e0       	ldi	r18, 0x00	; 0
     82c:	3f ef       	ldi	r19, 0xFF	; 255
     82e:	4f e7       	ldi	r20, 0x7F	; 127
     830:	57 e4       	ldi	r21, 0x47	; 71
     832:	69 85       	ldd	r22, Y+9	; 0x09
     834:	7a 85       	ldd	r23, Y+10	; 0x0a
     836:	8b 85       	ldd	r24, Y+11	; 0x0b
     838:	9c 85       	ldd	r25, Y+12	; 0x0c
     83a:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
     83e:	18 16       	cp	r1, r24
     840:	4c f5       	brge	.+82     	; 0x894 <make_sound+0x1c4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     842:	20 e0       	ldi	r18, 0x00	; 0
     844:	30 e0       	ldi	r19, 0x00	; 0
     846:	40 e2       	ldi	r20, 0x20	; 32
     848:	51 e4       	ldi	r21, 0x41	; 65
     84a:	6d 81       	ldd	r22, Y+5	; 0x05
     84c:	7e 81       	ldd	r23, Y+6	; 0x06
     84e:	8f 81       	ldd	r24, Y+7	; 0x07
     850:	98 85       	ldd	r25, Y+8	; 0x08
     852:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
     856:	dc 01       	movw	r26, r24
     858:	cb 01       	movw	r24, r22
     85a:	bc 01       	movw	r22, r24
     85c:	cd 01       	movw	r24, r26
     85e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
     862:	dc 01       	movw	r26, r24
     864:	cb 01       	movw	r24, r22
     866:	9e 87       	std	Y+14, r25	; 0x0e
     868:	8d 87       	std	Y+13, r24	; 0x0d
     86a:	0f c0       	rjmp	.+30     	; 0x88a <make_sound+0x1ba>
     86c:	80 e9       	ldi	r24, 0x90	; 144
     86e:	91 e0       	ldi	r25, 0x01	; 1
     870:	98 8b       	std	Y+16, r25	; 0x10
     872:	8f 87       	std	Y+15, r24	; 0x0f
     874:	8f 85       	ldd	r24, Y+15	; 0x0f
     876:	98 89       	ldd	r25, Y+16	; 0x10
     878:	01 97       	sbiw	r24, 0x01	; 1
     87a:	f1 f7       	brne	.-4      	; 0x878 <make_sound+0x1a8>
     87c:	98 8b       	std	Y+16, r25	; 0x10
     87e:	8f 87       	std	Y+15, r24	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     880:	8d 85       	ldd	r24, Y+13	; 0x0d
     882:	9e 85       	ldd	r25, Y+14	; 0x0e
     884:	01 97       	sbiw	r24, 0x01	; 1
     886:	9e 87       	std	Y+14, r25	; 0x0e
     888:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     88a:	8d 85       	ldd	r24, Y+13	; 0x0d
     88c:	9e 85       	ldd	r25, Y+14	; 0x0e
     88e:	89 2b       	or	r24, r25
     890:	69 f7       	brne	.-38     	; 0x86c <make_sound+0x19c>
     892:	14 c0       	rjmp	.+40     	; 0x8bc <make_sound+0x1ec>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     894:	69 85       	ldd	r22, Y+9	; 0x09
     896:	7a 85       	ldd	r23, Y+10	; 0x0a
     898:	8b 85       	ldd	r24, Y+11	; 0x0b
     89a:	9c 85       	ldd	r25, Y+12	; 0x0c
     89c:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
     8a0:	dc 01       	movw	r26, r24
     8a2:	cb 01       	movw	r24, r22
     8a4:	9e 87       	std	Y+14, r25	; 0x0e
     8a6:	8d 87       	std	Y+13, r24	; 0x0d
     8a8:	8d 85       	ldd	r24, Y+13	; 0x0d
     8aa:	9e 85       	ldd	r25, Y+14	; 0x0e
     8ac:	9a 8b       	std	Y+18, r25	; 0x12
     8ae:	89 8b       	std	Y+17, r24	; 0x11
     8b0:	89 89       	ldd	r24, Y+17	; 0x11
     8b2:	9a 89       	ldd	r25, Y+18	; 0x12
     8b4:	01 97       	sbiw	r24, 0x01	; 1
     8b6:	f1 f7       	brne	.-4      	; 0x8b4 <make_sound+0x1e4>
     8b8:	9a 8b       	std	Y+18, r25	; 0x12
     8ba:	89 8b       	std	Y+17, r24	; 0x11
	_delay_ms(500);
	to_uARM("M2210 F2000 T500\n");
     8bc:	8c e8       	ldi	r24, 0x8C	; 140
     8be:	91 e0       	ldi	r25, 0x01	; 1
     8c0:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
}
     8c4:	00 00       	nop
     8c6:	6c 96       	adiw	r28, 0x1c	; 28
     8c8:	0f b6       	in	r0, 0x3f	; 63
     8ca:	f8 94       	cli
     8cc:	de bf       	out	0x3e, r29	; 62
     8ce:	0f be       	out	0x3f, r0	; 63
     8d0:	cd bf       	out	0x3d, r28	; 61
     8d2:	df 91       	pop	r29
     8d4:	cf 91       	pop	r28
     8d6:	08 95       	ret

000008d8 <goto_start>:
void goto_start()
{
     8d8:	cf 93       	push	r28
     8da:	df 93       	push	r29
     8dc:	cd b7       	in	r28, 0x3d	; 61
     8de:	de b7       	in	r29, 0x3e	; 62
	send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
     8e0:	8e e9       	ldi	r24, 0x9E	; 158
     8e2:	91 e0       	ldi	r25, 0x01	; 1
     8e4:	0e 94 48 02 	call	0x490	; 0x490 <send_to_uArm>
	while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     8e8:	04 c0       	rjmp	.+8      	; 0x8f2 <goto_start+0x1a>
	{
		to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
     8ea:	80 e0       	ldi	r24, 0x00	; 0
     8ec:	91 e0       	ldi	r25, 0x01	; 1
     8ee:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
	to_uARM("M2210 F2000 T500\n");
}
void goto_start()
{
	send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
	while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     8f2:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <uart_string1+0x4>
     8f6:	81 33       	cpi	r24, 0x31	; 49
     8f8:	c1 f3       	breq	.-16     	; 0x8ea <goto_start+0x12>
	{
		to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
	}
}
     8fa:	00 00       	nop
     8fc:	df 91       	pop	r29
     8fe:	cf 91       	pop	r28
     900:	08 95       	ret

00000902 <beep>:
void beep(unsigned char dipswitch)
{
     902:	cf 93       	push	r28
     904:	df 93       	push	r29
     906:	1f 92       	push	r1
     908:	cd b7       	in	r28, 0x3d	; 61
     90a:	de b7       	in	r29, 0x3e	; 62
     90c:	89 83       	std	Y+1, r24	; 0x01
	if (dipswitch&0x01)
     90e:	89 81       	ldd	r24, Y+1	; 0x01
     910:	88 2f       	mov	r24, r24
     912:	90 e0       	ldi	r25, 0x00	; 0
     914:	81 70       	andi	r24, 0x01	; 1
     916:	99 27       	eor	r25, r25
     918:	89 2b       	or	r24, r25
     91a:	21 f0       	breq	.+8      	; 0x924 <beep+0x22>
	{
		to_uARM("M2210 F2000 T200\n");
     91c:	85 eb       	ldi	r24, 0xB5	; 181
     91e:	91 e0       	ldi	r25, 0x01	; 1
     920:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
	}
}
     924:	00 00       	nop
     926:	0f 90       	pop	r0
     928:	df 91       	pop	r29
     92a:	cf 91       	pop	r28
     92c:	08 95       	ret

0000092e <start_nowait>:
void start_nowait()
{
     92e:	cf 93       	push	r28
     930:	df 93       	push	r29
     932:	cd b7       	in	r28, 0x3d	; 61
     934:	de b7       	in	r29, 0x3e	; 62
	send_to_uArm("G0 X200 Y0 Z150 F6000\n");			//ausgansgpkt	(200 0 150)
     936:	8e e9       	ldi	r24, 0x9E	; 158
     938:	91 e0       	ldi	r25, 0x01	; 1
     93a:	0e 94 48 02 	call	0x490	; 0x490 <send_to_uArm>
}
     93e:	00 00       	nop
     940:	df 91       	pop	r29
     942:	cf 91       	pop	r28
     944:	08 95       	ret

00000946 <start_up_routine>:
void start_up_routine ()
{
     946:	cf 93       	push	r28
     948:	df 93       	push	r29
     94a:	cd b7       	in	r28, 0x3d	; 61
     94c:	de b7       	in	r29, 0x3e	; 62
	init_BT_CAR_V2_0();			// Das Board wird hier initialisiern
     94e:	0e 94 ad 2d 	call	0x5b5a	; 0x5b5a <init_BT_CAR_V2_0>
	wait_1ms(10);
     952:	6a e0       	ldi	r22, 0x0A	; 10
     954:	70 e0       	ldi	r23, 0x00	; 0
     956:	80 e0       	ldi	r24, 0x00	; 0
     958:	90 e0       	ldi	r25, 0x00	; 0
     95a:	0e 94 23 2b 	call	0x5646	; 0x5646 <wait_1ms>
	init_ADC();
     95e:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <init_ADC>
	init_UART0();
     962:	0e 94 8e 01 	call	0x31c	; 0x31c <init_UART0>
	init_UART1();
     966:	0e 94 af 01 	call	0x35e	; 0x35e <init_UART1>
	wait_1ms(10);
     96a:	6a e0       	ldi	r22, 0x0A	; 10
     96c:	70 e0       	ldi	r23, 0x00	; 0
     96e:	80 e0       	ldi	r24, 0x00	; 0
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	0e 94 23 2b 	call	0x5646	; 0x5646 <wait_1ms>
	//write_text(0,0,PSTR("        OKE         "));
	//write_text(1,0,PSTR("        BY          "));
	//write_text(2,0,PSTR("        JAN         "));
	//write_text(3,0,PSTR("       TENDAI       "));
	set_led_mode(IDLE);
     976:	80 e4       	ldi	r24, 0x40	; 64
     978:	0e 94 51 03 	call	0x6a2	; 0x6a2 <set_led_mode>
	goto_start();
     97c:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <goto_start>
	make_sound();
     980:	0e 94 68 03 	call	0x6d0	; 0x6d0 <make_sound>
	wait_1ms(2000);	
     984:	60 ed       	ldi	r22, 0xD0	; 208
     986:	77 e0       	ldi	r23, 0x07	; 7
     988:	80 e0       	ldi	r24, 0x00	; 0
     98a:	90 e0       	ldi	r25, 0x00	; 0
     98c:	0e 94 23 2b 	call	0x5646	; 0x5646 <wait_1ms>
	//while(pc_ready==0)
	//{
		//send_Byte_0('D');
		//wait_1ms(500);
	//}
	goto_start();
     990:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <goto_start>
	set_led_mode(FINISHED);
     994:	80 e2       	ldi	r24, 0x20	; 32
     996:	0e 94 51 03 	call	0x6a2	; 0x6a2 <set_led_mode>
}
     99a:	00 00       	nop
     99c:	df 91       	pop	r29
     99e:	cf 91       	pop	r28
     9a0:	08 95       	ret

000009a2 <play_somthin_booy>:
void play_somthin_booy()
{
     9a2:	0f 93       	push	r16
     9a4:	1f 93       	push	r17
     9a6:	cf 93       	push	r28
     9a8:	df 93       	push	r29
     9aa:	cd b7       	in	r28, 0x3d	; 61
     9ac:	de b7       	in	r29, 0x3e	; 62
     9ae:	c0 53       	subi	r28, 0x30	; 48
     9b0:	d2 40       	sbci	r29, 0x02	; 2
     9b2:	0f b6       	in	r0, 0x3f	; 63
     9b4:	f8 94       	cli
     9b6:	de bf       	out	0x3e, r29	; 62
     9b8:	0f be       	out	0x3f, r0	; 63
     9ba:	cd bf       	out	0x3d, r28	; 61
	to_uARM("M2210 F660 T100\n");
     9bc:	87 ec       	ldi	r24, 0xC7	; 199
     9be:	91 e0       	ldi	r25, 0x01	; 1
     9c0:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
     9c4:	80 e0       	ldi	r24, 0x00	; 0
     9c6:	90 e0       	ldi	r25, 0x00	; 0
     9c8:	a6 e1       	ldi	r26, 0x16	; 22
     9ca:	b3 e4       	ldi	r27, 0x43	; 67
     9cc:	89 83       	std	Y+1, r24	; 0x01
     9ce:	9a 83       	std	Y+2, r25	; 0x02
     9d0:	ab 83       	std	Y+3, r26	; 0x03
     9d2:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     9d4:	8e 01       	movw	r16, r28
     9d6:	09 5d       	subi	r16, 0xD9	; 217
     9d8:	1d 4f       	sbci	r17, 0xFD	; 253
     9da:	20 e0       	ldi	r18, 0x00	; 0
     9dc:	30 e0       	ldi	r19, 0x00	; 0
     9de:	4a e7       	ldi	r20, 0x7A	; 122
     9e0:	55 e4       	ldi	r21, 0x45	; 69
     9e2:	69 81       	ldd	r22, Y+1	; 0x01
     9e4:	7a 81       	ldd	r23, Y+2	; 0x02
     9e6:	8b 81       	ldd	r24, Y+3	; 0x03
     9e8:	9c 81       	ldd	r25, Y+4	; 0x04
     9ea:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
     9ee:	dc 01       	movw	r26, r24
     9f0:	cb 01       	movw	r24, r22
     9f2:	f8 01       	movw	r30, r16
     9f4:	80 83       	st	Z, r24
     9f6:	91 83       	std	Z+1, r25	; 0x01
     9f8:	a2 83       	std	Z+2, r26	; 0x02
     9fa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     9fc:	ce 01       	movw	r24, r28
     9fe:	89 5d       	subi	r24, 0xD9	; 217
     a00:	9d 4f       	sbci	r25, 0xFD	; 253
     a02:	20 e0       	ldi	r18, 0x00	; 0
     a04:	30 e0       	ldi	r19, 0x00	; 0
     a06:	40 e8       	ldi	r20, 0x80	; 128
     a08:	5f e3       	ldi	r21, 0x3F	; 63
     a0a:	fc 01       	movw	r30, r24
     a0c:	60 81       	ld	r22, Z
     a0e:	71 81       	ldd	r23, Z+1	; 0x01
     a10:	82 81       	ldd	r24, Z+2	; 0x02
     a12:	93 81       	ldd	r25, Z+3	; 0x03
     a14:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
     a18:	88 23       	and	r24, r24
     a1a:	4c f4       	brge	.+18     	; 0xa2e <play_somthin_booy+0x8c>
		__ticks = 1;
     a1c:	ce 01       	movw	r24, r28
     a1e:	85 5d       	subi	r24, 0xD5	; 213
     a20:	9d 4f       	sbci	r25, 0xFD	; 253
     a22:	21 e0       	ldi	r18, 0x01	; 1
     a24:	30 e0       	ldi	r19, 0x00	; 0
     a26:	fc 01       	movw	r30, r24
     a28:	31 83       	std	Z+1, r19	; 0x01
     a2a:	20 83       	st	Z, r18
     a2c:	69 c0       	rjmp	.+210    	; 0xb00 <play_somthin_booy+0x15e>
	else if (__tmp > 65535)
     a2e:	ce 01       	movw	r24, r28
     a30:	89 5d       	subi	r24, 0xD9	; 217
     a32:	9d 4f       	sbci	r25, 0xFD	; 253
     a34:	20 e0       	ldi	r18, 0x00	; 0
     a36:	3f ef       	ldi	r19, 0xFF	; 255
     a38:	4f e7       	ldi	r20, 0x7F	; 127
     a3a:	57 e4       	ldi	r21, 0x47	; 71
     a3c:	fc 01       	movw	r30, r24
     a3e:	60 81       	ld	r22, Z
     a40:	71 81       	ldd	r23, Z+1	; 0x01
     a42:	82 81       	ldd	r24, Z+2	; 0x02
     a44:	93 81       	ldd	r25, Z+3	; 0x03
     a46:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
     a4a:	18 16       	cp	r1, r24
     a4c:	0c f0       	brlt	.+2      	; 0xa50 <play_somthin_booy+0xae>
     a4e:	46 c0       	rjmp	.+140    	; 0xadc <play_somthin_booy+0x13a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a50:	20 e0       	ldi	r18, 0x00	; 0
     a52:	30 e0       	ldi	r19, 0x00	; 0
     a54:	40 e2       	ldi	r20, 0x20	; 32
     a56:	51 e4       	ldi	r21, 0x41	; 65
     a58:	69 81       	ldd	r22, Y+1	; 0x01
     a5a:	7a 81       	ldd	r23, Y+2	; 0x02
     a5c:	8b 81       	ldd	r24, Y+3	; 0x03
     a5e:	9c 81       	ldd	r25, Y+4	; 0x04
     a60:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
     a64:	dc 01       	movw	r26, r24
     a66:	cb 01       	movw	r24, r22
     a68:	8e 01       	movw	r16, r28
     a6a:	05 5d       	subi	r16, 0xD5	; 213
     a6c:	1d 4f       	sbci	r17, 0xFD	; 253
     a6e:	bc 01       	movw	r22, r24
     a70:	cd 01       	movw	r24, r26
     a72:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
     a76:	dc 01       	movw	r26, r24
     a78:	cb 01       	movw	r24, r22
     a7a:	f8 01       	movw	r30, r16
     a7c:	91 83       	std	Z+1, r25	; 0x01
     a7e:	80 83       	st	Z, r24
     a80:	24 c0       	rjmp	.+72     	; 0xaca <play_somthin_booy+0x128>
     a82:	ce 01       	movw	r24, r28
     a84:	83 5d       	subi	r24, 0xD3	; 211
     a86:	9d 4f       	sbci	r25, 0xFD	; 253
     a88:	20 e9       	ldi	r18, 0x90	; 144
     a8a:	31 e0       	ldi	r19, 0x01	; 1
     a8c:	fc 01       	movw	r30, r24
     a8e:	31 83       	std	Z+1, r19	; 0x01
     a90:	20 83       	st	Z, r18
     a92:	ce 01       	movw	r24, r28
     a94:	83 5d       	subi	r24, 0xD3	; 211
     a96:	9d 4f       	sbci	r25, 0xFD	; 253
     a98:	fc 01       	movw	r30, r24
     a9a:	80 81       	ld	r24, Z
     a9c:	91 81       	ldd	r25, Z+1	; 0x01
     a9e:	01 97       	sbiw	r24, 0x01	; 1
     aa0:	f1 f7       	brne	.-4      	; 0xa9e <play_somthin_booy+0xfc>
     aa2:	9e 01       	movw	r18, r28
     aa4:	23 5d       	subi	r18, 0xD3	; 211
     aa6:	3d 4f       	sbci	r19, 0xFD	; 253
     aa8:	f9 01       	movw	r30, r18
     aaa:	91 83       	std	Z+1, r25	; 0x01
     aac:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     aae:	ce 01       	movw	r24, r28
     ab0:	85 5d       	subi	r24, 0xD5	; 213
     ab2:	9d 4f       	sbci	r25, 0xFD	; 253
     ab4:	9e 01       	movw	r18, r28
     ab6:	25 5d       	subi	r18, 0xD5	; 213
     ab8:	3d 4f       	sbci	r19, 0xFD	; 253
     aba:	f9 01       	movw	r30, r18
     abc:	20 81       	ld	r18, Z
     abe:	31 81       	ldd	r19, Z+1	; 0x01
     ac0:	21 50       	subi	r18, 0x01	; 1
     ac2:	31 09       	sbc	r19, r1
     ac4:	fc 01       	movw	r30, r24
     ac6:	31 83       	std	Z+1, r19	; 0x01
     ac8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     aca:	ce 01       	movw	r24, r28
     acc:	85 5d       	subi	r24, 0xD5	; 213
     ace:	9d 4f       	sbci	r25, 0xFD	; 253
     ad0:	fc 01       	movw	r30, r24
     ad2:	80 81       	ld	r24, Z
     ad4:	91 81       	ldd	r25, Z+1	; 0x01
     ad6:	89 2b       	or	r24, r25
     ad8:	a1 f6       	brne	.-88     	; 0xa82 <play_somthin_booy+0xe0>
     ada:	2c c0       	rjmp	.+88     	; 0xb34 <play_somthin_booy+0x192>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     adc:	8e 01       	movw	r16, r28
     ade:	05 5d       	subi	r16, 0xD5	; 213
     ae0:	1d 4f       	sbci	r17, 0xFD	; 253
     ae2:	ce 01       	movw	r24, r28
     ae4:	89 5d       	subi	r24, 0xD9	; 217
     ae6:	9d 4f       	sbci	r25, 0xFD	; 253
     ae8:	fc 01       	movw	r30, r24
     aea:	60 81       	ld	r22, Z
     aec:	71 81       	ldd	r23, Z+1	; 0x01
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
     af6:	dc 01       	movw	r26, r24
     af8:	cb 01       	movw	r24, r22
     afa:	f8 01       	movw	r30, r16
     afc:	91 83       	std	Z+1, r25	; 0x01
     afe:	80 83       	st	Z, r24
     b00:	ce 01       	movw	r24, r28
     b02:	81 5d       	subi	r24, 0xD1	; 209
     b04:	9d 4f       	sbci	r25, 0xFD	; 253
     b06:	9e 01       	movw	r18, r28
     b08:	25 5d       	subi	r18, 0xD5	; 213
     b0a:	3d 4f       	sbci	r19, 0xFD	; 253
     b0c:	f9 01       	movw	r30, r18
     b0e:	20 81       	ld	r18, Z
     b10:	31 81       	ldd	r19, Z+1	; 0x01
     b12:	fc 01       	movw	r30, r24
     b14:	31 83       	std	Z+1, r19	; 0x01
     b16:	20 83       	st	Z, r18
     b18:	ce 01       	movw	r24, r28
     b1a:	81 5d       	subi	r24, 0xD1	; 209
     b1c:	9d 4f       	sbci	r25, 0xFD	; 253
     b1e:	fc 01       	movw	r30, r24
     b20:	80 81       	ld	r24, Z
     b22:	91 81       	ldd	r25, Z+1	; 0x01
     b24:	01 97       	sbiw	r24, 0x01	; 1
     b26:	f1 f7       	brne	.-4      	; 0xb24 <play_somthin_booy+0x182>
     b28:	9e 01       	movw	r18, r28
     b2a:	21 5d       	subi	r18, 0xD1	; 209
     b2c:	3d 4f       	sbci	r19, 0xFD	; 253
     b2e:	f9 01       	movw	r30, r18
     b30:	91 83       	std	Z+1, r25	; 0x01
     b32:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F660 T100\n");
     b34:	87 ec       	ldi	r24, 0xC7	; 199
     b36:	91 e0       	ldi	r25, 0x01	; 1
     b38:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
     b3c:	80 e0       	ldi	r24, 0x00	; 0
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	a6 e9       	ldi	r26, 0x96	; 150
     b42:	b3 e4       	ldi	r27, 0x43	; 67
     b44:	8d 83       	std	Y+5, r24	; 0x05
     b46:	9e 83       	std	Y+6, r25	; 0x06
     b48:	af 83       	std	Y+7, r26	; 0x07
     b4a:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     b4c:	8e 01       	movw	r16, r28
     b4e:	03 5e       	subi	r16, 0xE3	; 227
     b50:	1d 4f       	sbci	r17, 0xFD	; 253
     b52:	20 e0       	ldi	r18, 0x00	; 0
     b54:	30 e0       	ldi	r19, 0x00	; 0
     b56:	4a e7       	ldi	r20, 0x7A	; 122
     b58:	55 e4       	ldi	r21, 0x45	; 69
     b5a:	6d 81       	ldd	r22, Y+5	; 0x05
     b5c:	7e 81       	ldd	r23, Y+6	; 0x06
     b5e:	8f 81       	ldd	r24, Y+7	; 0x07
     b60:	98 85       	ldd	r25, Y+8	; 0x08
     b62:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
     b66:	dc 01       	movw	r26, r24
     b68:	cb 01       	movw	r24, r22
     b6a:	f8 01       	movw	r30, r16
     b6c:	80 83       	st	Z, r24
     b6e:	91 83       	std	Z+1, r25	; 0x01
     b70:	a2 83       	std	Z+2, r26	; 0x02
     b72:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     b74:	ce 01       	movw	r24, r28
     b76:	83 5e       	subi	r24, 0xE3	; 227
     b78:	9d 4f       	sbci	r25, 0xFD	; 253
     b7a:	20 e0       	ldi	r18, 0x00	; 0
     b7c:	30 e0       	ldi	r19, 0x00	; 0
     b7e:	40 e8       	ldi	r20, 0x80	; 128
     b80:	5f e3       	ldi	r21, 0x3F	; 63
     b82:	fc 01       	movw	r30, r24
     b84:	60 81       	ld	r22, Z
     b86:	71 81       	ldd	r23, Z+1	; 0x01
     b88:	82 81       	ldd	r24, Z+2	; 0x02
     b8a:	93 81       	ldd	r25, Z+3	; 0x03
     b8c:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
     b90:	88 23       	and	r24, r24
     b92:	4c f4       	brge	.+18     	; 0xba6 <play_somthin_booy+0x204>
		__ticks = 1;
     b94:	ce 01       	movw	r24, r28
     b96:	8f 5d       	subi	r24, 0xDF	; 223
     b98:	9d 4f       	sbci	r25, 0xFD	; 253
     b9a:	21 e0       	ldi	r18, 0x01	; 1
     b9c:	30 e0       	ldi	r19, 0x00	; 0
     b9e:	fc 01       	movw	r30, r24
     ba0:	31 83       	std	Z+1, r19	; 0x01
     ba2:	20 83       	st	Z, r18
     ba4:	69 c0       	rjmp	.+210    	; 0xc78 <play_somthin_booy+0x2d6>
	else if (__tmp > 65535)
     ba6:	ce 01       	movw	r24, r28
     ba8:	83 5e       	subi	r24, 0xE3	; 227
     baa:	9d 4f       	sbci	r25, 0xFD	; 253
     bac:	20 e0       	ldi	r18, 0x00	; 0
     bae:	3f ef       	ldi	r19, 0xFF	; 255
     bb0:	4f e7       	ldi	r20, 0x7F	; 127
     bb2:	57 e4       	ldi	r21, 0x47	; 71
     bb4:	fc 01       	movw	r30, r24
     bb6:	60 81       	ld	r22, Z
     bb8:	71 81       	ldd	r23, Z+1	; 0x01
     bba:	82 81       	ldd	r24, Z+2	; 0x02
     bbc:	93 81       	ldd	r25, Z+3	; 0x03
     bbe:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
     bc2:	18 16       	cp	r1, r24
     bc4:	0c f0       	brlt	.+2      	; 0xbc8 <play_somthin_booy+0x226>
     bc6:	46 c0       	rjmp	.+140    	; 0xc54 <play_somthin_booy+0x2b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bc8:	20 e0       	ldi	r18, 0x00	; 0
     bca:	30 e0       	ldi	r19, 0x00	; 0
     bcc:	40 e2       	ldi	r20, 0x20	; 32
     bce:	51 e4       	ldi	r21, 0x41	; 65
     bd0:	6d 81       	ldd	r22, Y+5	; 0x05
     bd2:	7e 81       	ldd	r23, Y+6	; 0x06
     bd4:	8f 81       	ldd	r24, Y+7	; 0x07
     bd6:	98 85       	ldd	r25, Y+8	; 0x08
     bd8:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
     bdc:	dc 01       	movw	r26, r24
     bde:	cb 01       	movw	r24, r22
     be0:	8e 01       	movw	r16, r28
     be2:	0f 5d       	subi	r16, 0xDF	; 223
     be4:	1d 4f       	sbci	r17, 0xFD	; 253
     be6:	bc 01       	movw	r22, r24
     be8:	cd 01       	movw	r24, r26
     bea:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
     bee:	dc 01       	movw	r26, r24
     bf0:	cb 01       	movw	r24, r22
     bf2:	f8 01       	movw	r30, r16
     bf4:	91 83       	std	Z+1, r25	; 0x01
     bf6:	80 83       	st	Z, r24
     bf8:	24 c0       	rjmp	.+72     	; 0xc42 <play_somthin_booy+0x2a0>
     bfa:	ce 01       	movw	r24, r28
     bfc:	8d 5d       	subi	r24, 0xDD	; 221
     bfe:	9d 4f       	sbci	r25, 0xFD	; 253
     c00:	20 e9       	ldi	r18, 0x90	; 144
     c02:	31 e0       	ldi	r19, 0x01	; 1
     c04:	fc 01       	movw	r30, r24
     c06:	31 83       	std	Z+1, r19	; 0x01
     c08:	20 83       	st	Z, r18
     c0a:	ce 01       	movw	r24, r28
     c0c:	8d 5d       	subi	r24, 0xDD	; 221
     c0e:	9d 4f       	sbci	r25, 0xFD	; 253
     c10:	fc 01       	movw	r30, r24
     c12:	80 81       	ld	r24, Z
     c14:	91 81       	ldd	r25, Z+1	; 0x01
     c16:	01 97       	sbiw	r24, 0x01	; 1
     c18:	f1 f7       	brne	.-4      	; 0xc16 <play_somthin_booy+0x274>
     c1a:	9e 01       	movw	r18, r28
     c1c:	2d 5d       	subi	r18, 0xDD	; 221
     c1e:	3d 4f       	sbci	r19, 0xFD	; 253
     c20:	f9 01       	movw	r30, r18
     c22:	91 83       	std	Z+1, r25	; 0x01
     c24:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c26:	ce 01       	movw	r24, r28
     c28:	8f 5d       	subi	r24, 0xDF	; 223
     c2a:	9d 4f       	sbci	r25, 0xFD	; 253
     c2c:	9e 01       	movw	r18, r28
     c2e:	2f 5d       	subi	r18, 0xDF	; 223
     c30:	3d 4f       	sbci	r19, 0xFD	; 253
     c32:	f9 01       	movw	r30, r18
     c34:	20 81       	ld	r18, Z
     c36:	31 81       	ldd	r19, Z+1	; 0x01
     c38:	21 50       	subi	r18, 0x01	; 1
     c3a:	31 09       	sbc	r19, r1
     c3c:	fc 01       	movw	r30, r24
     c3e:	31 83       	std	Z+1, r19	; 0x01
     c40:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c42:	ce 01       	movw	r24, r28
     c44:	8f 5d       	subi	r24, 0xDF	; 223
     c46:	9d 4f       	sbci	r25, 0xFD	; 253
     c48:	fc 01       	movw	r30, r24
     c4a:	80 81       	ld	r24, Z
     c4c:	91 81       	ldd	r25, Z+1	; 0x01
     c4e:	89 2b       	or	r24, r25
     c50:	a1 f6       	brne	.-88     	; 0xbfa <play_somthin_booy+0x258>
     c52:	2c c0       	rjmp	.+88     	; 0xcac <play_somthin_booy+0x30a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c54:	8e 01       	movw	r16, r28
     c56:	0f 5d       	subi	r16, 0xDF	; 223
     c58:	1d 4f       	sbci	r17, 0xFD	; 253
     c5a:	ce 01       	movw	r24, r28
     c5c:	83 5e       	subi	r24, 0xE3	; 227
     c5e:	9d 4f       	sbci	r25, 0xFD	; 253
     c60:	fc 01       	movw	r30, r24
     c62:	60 81       	ld	r22, Z
     c64:	71 81       	ldd	r23, Z+1	; 0x01
     c66:	82 81       	ldd	r24, Z+2	; 0x02
     c68:	93 81       	ldd	r25, Z+3	; 0x03
     c6a:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
     c6e:	dc 01       	movw	r26, r24
     c70:	cb 01       	movw	r24, r22
     c72:	f8 01       	movw	r30, r16
     c74:	91 83       	std	Z+1, r25	; 0x01
     c76:	80 83       	st	Z, r24
     c78:	ce 01       	movw	r24, r28
     c7a:	8b 5d       	subi	r24, 0xDB	; 219
     c7c:	9d 4f       	sbci	r25, 0xFD	; 253
     c7e:	9e 01       	movw	r18, r28
     c80:	2f 5d       	subi	r18, 0xDF	; 223
     c82:	3d 4f       	sbci	r19, 0xFD	; 253
     c84:	f9 01       	movw	r30, r18
     c86:	20 81       	ld	r18, Z
     c88:	31 81       	ldd	r19, Z+1	; 0x01
     c8a:	fc 01       	movw	r30, r24
     c8c:	31 83       	std	Z+1, r19	; 0x01
     c8e:	20 83       	st	Z, r18
     c90:	ce 01       	movw	r24, r28
     c92:	8b 5d       	subi	r24, 0xDB	; 219
     c94:	9d 4f       	sbci	r25, 0xFD	; 253
     c96:	fc 01       	movw	r30, r24
     c98:	80 81       	ld	r24, Z
     c9a:	91 81       	ldd	r25, Z+1	; 0x01
     c9c:	01 97       	sbiw	r24, 0x01	; 1
     c9e:	f1 f7       	brne	.-4      	; 0xc9c <play_somthin_booy+0x2fa>
     ca0:	9e 01       	movw	r18, r28
     ca2:	2b 5d       	subi	r18, 0xDB	; 219
     ca4:	3d 4f       	sbci	r19, 0xFD	; 253
     ca6:	f9 01       	movw	r30, r18
     ca8:	91 83       	std	Z+1, r25	; 0x01
     caa:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F660 T100\n");
     cac:	87 ec       	ldi	r24, 0xC7	; 199
     cae:	91 e0       	ldi	r25, 0x01	; 1
     cb0:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
     cb4:	80 e0       	ldi	r24, 0x00	; 0
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	a6 e9       	ldi	r26, 0x96	; 150
     cba:	b3 e4       	ldi	r27, 0x43	; 67
     cbc:	89 87       	std	Y+9, r24	; 0x09
     cbe:	9a 87       	std	Y+10, r25	; 0x0a
     cc0:	ab 87       	std	Y+11, r26	; 0x0b
     cc2:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     cc4:	8e 01       	movw	r16, r28
     cc6:	0d 5e       	subi	r16, 0xED	; 237
     cc8:	1d 4f       	sbci	r17, 0xFD	; 253
     cca:	20 e0       	ldi	r18, 0x00	; 0
     ccc:	30 e0       	ldi	r19, 0x00	; 0
     cce:	4a e7       	ldi	r20, 0x7A	; 122
     cd0:	55 e4       	ldi	r21, 0x45	; 69
     cd2:	69 85       	ldd	r22, Y+9	; 0x09
     cd4:	7a 85       	ldd	r23, Y+10	; 0x0a
     cd6:	8b 85       	ldd	r24, Y+11	; 0x0b
     cd8:	9c 85       	ldd	r25, Y+12	; 0x0c
     cda:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
     cde:	dc 01       	movw	r26, r24
     ce0:	cb 01       	movw	r24, r22
     ce2:	f8 01       	movw	r30, r16
     ce4:	80 83       	st	Z, r24
     ce6:	91 83       	std	Z+1, r25	; 0x01
     ce8:	a2 83       	std	Z+2, r26	; 0x02
     cea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     cec:	ce 01       	movw	r24, r28
     cee:	8d 5e       	subi	r24, 0xED	; 237
     cf0:	9d 4f       	sbci	r25, 0xFD	; 253
     cf2:	20 e0       	ldi	r18, 0x00	; 0
     cf4:	30 e0       	ldi	r19, 0x00	; 0
     cf6:	40 e8       	ldi	r20, 0x80	; 128
     cf8:	5f e3       	ldi	r21, 0x3F	; 63
     cfa:	fc 01       	movw	r30, r24
     cfc:	60 81       	ld	r22, Z
     cfe:	71 81       	ldd	r23, Z+1	; 0x01
     d00:	82 81       	ldd	r24, Z+2	; 0x02
     d02:	93 81       	ldd	r25, Z+3	; 0x03
     d04:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
     d08:	88 23       	and	r24, r24
     d0a:	4c f4       	brge	.+18     	; 0xd1e <play_somthin_booy+0x37c>
		__ticks = 1;
     d0c:	ce 01       	movw	r24, r28
     d0e:	89 5e       	subi	r24, 0xE9	; 233
     d10:	9d 4f       	sbci	r25, 0xFD	; 253
     d12:	21 e0       	ldi	r18, 0x01	; 1
     d14:	30 e0       	ldi	r19, 0x00	; 0
     d16:	fc 01       	movw	r30, r24
     d18:	31 83       	std	Z+1, r19	; 0x01
     d1a:	20 83       	st	Z, r18
     d1c:	69 c0       	rjmp	.+210    	; 0xdf0 <play_somthin_booy+0x44e>
	else if (__tmp > 65535)
     d1e:	ce 01       	movw	r24, r28
     d20:	8d 5e       	subi	r24, 0xED	; 237
     d22:	9d 4f       	sbci	r25, 0xFD	; 253
     d24:	20 e0       	ldi	r18, 0x00	; 0
     d26:	3f ef       	ldi	r19, 0xFF	; 255
     d28:	4f e7       	ldi	r20, 0x7F	; 127
     d2a:	57 e4       	ldi	r21, 0x47	; 71
     d2c:	fc 01       	movw	r30, r24
     d2e:	60 81       	ld	r22, Z
     d30:	71 81       	ldd	r23, Z+1	; 0x01
     d32:	82 81       	ldd	r24, Z+2	; 0x02
     d34:	93 81       	ldd	r25, Z+3	; 0x03
     d36:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
     d3a:	18 16       	cp	r1, r24
     d3c:	0c f0       	brlt	.+2      	; 0xd40 <play_somthin_booy+0x39e>
     d3e:	46 c0       	rjmp	.+140    	; 0xdcc <play_somthin_booy+0x42a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d40:	20 e0       	ldi	r18, 0x00	; 0
     d42:	30 e0       	ldi	r19, 0x00	; 0
     d44:	40 e2       	ldi	r20, 0x20	; 32
     d46:	51 e4       	ldi	r21, 0x41	; 65
     d48:	69 85       	ldd	r22, Y+9	; 0x09
     d4a:	7a 85       	ldd	r23, Y+10	; 0x0a
     d4c:	8b 85       	ldd	r24, Y+11	; 0x0b
     d4e:	9c 85       	ldd	r25, Y+12	; 0x0c
     d50:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
     d54:	dc 01       	movw	r26, r24
     d56:	cb 01       	movw	r24, r22
     d58:	8e 01       	movw	r16, r28
     d5a:	09 5e       	subi	r16, 0xE9	; 233
     d5c:	1d 4f       	sbci	r17, 0xFD	; 253
     d5e:	bc 01       	movw	r22, r24
     d60:	cd 01       	movw	r24, r26
     d62:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
     d66:	dc 01       	movw	r26, r24
     d68:	cb 01       	movw	r24, r22
     d6a:	f8 01       	movw	r30, r16
     d6c:	91 83       	std	Z+1, r25	; 0x01
     d6e:	80 83       	st	Z, r24
     d70:	24 c0       	rjmp	.+72     	; 0xdba <play_somthin_booy+0x418>
     d72:	ce 01       	movw	r24, r28
     d74:	87 5e       	subi	r24, 0xE7	; 231
     d76:	9d 4f       	sbci	r25, 0xFD	; 253
     d78:	20 e9       	ldi	r18, 0x90	; 144
     d7a:	31 e0       	ldi	r19, 0x01	; 1
     d7c:	fc 01       	movw	r30, r24
     d7e:	31 83       	std	Z+1, r19	; 0x01
     d80:	20 83       	st	Z, r18
     d82:	ce 01       	movw	r24, r28
     d84:	87 5e       	subi	r24, 0xE7	; 231
     d86:	9d 4f       	sbci	r25, 0xFD	; 253
     d88:	fc 01       	movw	r30, r24
     d8a:	80 81       	ld	r24, Z
     d8c:	91 81       	ldd	r25, Z+1	; 0x01
     d8e:	01 97       	sbiw	r24, 0x01	; 1
     d90:	f1 f7       	brne	.-4      	; 0xd8e <play_somthin_booy+0x3ec>
     d92:	9e 01       	movw	r18, r28
     d94:	27 5e       	subi	r18, 0xE7	; 231
     d96:	3d 4f       	sbci	r19, 0xFD	; 253
     d98:	f9 01       	movw	r30, r18
     d9a:	91 83       	std	Z+1, r25	; 0x01
     d9c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d9e:	ce 01       	movw	r24, r28
     da0:	89 5e       	subi	r24, 0xE9	; 233
     da2:	9d 4f       	sbci	r25, 0xFD	; 253
     da4:	9e 01       	movw	r18, r28
     da6:	29 5e       	subi	r18, 0xE9	; 233
     da8:	3d 4f       	sbci	r19, 0xFD	; 253
     daa:	f9 01       	movw	r30, r18
     dac:	20 81       	ld	r18, Z
     dae:	31 81       	ldd	r19, Z+1	; 0x01
     db0:	21 50       	subi	r18, 0x01	; 1
     db2:	31 09       	sbc	r19, r1
     db4:	fc 01       	movw	r30, r24
     db6:	31 83       	std	Z+1, r19	; 0x01
     db8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     dba:	ce 01       	movw	r24, r28
     dbc:	89 5e       	subi	r24, 0xE9	; 233
     dbe:	9d 4f       	sbci	r25, 0xFD	; 253
     dc0:	fc 01       	movw	r30, r24
     dc2:	80 81       	ld	r24, Z
     dc4:	91 81       	ldd	r25, Z+1	; 0x01
     dc6:	89 2b       	or	r24, r25
     dc8:	a1 f6       	brne	.-88     	; 0xd72 <play_somthin_booy+0x3d0>
     dca:	2c c0       	rjmp	.+88     	; 0xe24 <play_somthin_booy+0x482>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     dcc:	8e 01       	movw	r16, r28
     dce:	09 5e       	subi	r16, 0xE9	; 233
     dd0:	1d 4f       	sbci	r17, 0xFD	; 253
     dd2:	ce 01       	movw	r24, r28
     dd4:	8d 5e       	subi	r24, 0xED	; 237
     dd6:	9d 4f       	sbci	r25, 0xFD	; 253
     dd8:	fc 01       	movw	r30, r24
     dda:	60 81       	ld	r22, Z
     ddc:	71 81       	ldd	r23, Z+1	; 0x01
     dde:	82 81       	ldd	r24, Z+2	; 0x02
     de0:	93 81       	ldd	r25, Z+3	; 0x03
     de2:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
     de6:	dc 01       	movw	r26, r24
     de8:	cb 01       	movw	r24, r22
     dea:	f8 01       	movw	r30, r16
     dec:	91 83       	std	Z+1, r25	; 0x01
     dee:	80 83       	st	Z, r24
     df0:	ce 01       	movw	r24, r28
     df2:	85 5e       	subi	r24, 0xE5	; 229
     df4:	9d 4f       	sbci	r25, 0xFD	; 253
     df6:	9e 01       	movw	r18, r28
     df8:	29 5e       	subi	r18, 0xE9	; 233
     dfa:	3d 4f       	sbci	r19, 0xFD	; 253
     dfc:	f9 01       	movw	r30, r18
     dfe:	20 81       	ld	r18, Z
     e00:	31 81       	ldd	r19, Z+1	; 0x01
     e02:	fc 01       	movw	r30, r24
     e04:	31 83       	std	Z+1, r19	; 0x01
     e06:	20 83       	st	Z, r18
     e08:	ce 01       	movw	r24, r28
     e0a:	85 5e       	subi	r24, 0xE5	; 229
     e0c:	9d 4f       	sbci	r25, 0xFD	; 253
     e0e:	fc 01       	movw	r30, r24
     e10:	80 81       	ld	r24, Z
     e12:	91 81       	ldd	r25, Z+1	; 0x01
     e14:	01 97       	sbiw	r24, 0x01	; 1
     e16:	f1 f7       	brne	.-4      	; 0xe14 <play_somthin_booy+0x472>
     e18:	9e 01       	movw	r18, r28
     e1a:	25 5e       	subi	r18, 0xE5	; 229
     e1c:	3d 4f       	sbci	r19, 0xFD	; 253
     e1e:	f9 01       	movw	r30, r18
     e20:	91 83       	std	Z+1, r25	; 0x01
     e22:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F510 T100\n");
     e24:	88 ed       	ldi	r24, 0xD8	; 216
     e26:	91 e0       	ldi	r25, 0x01	; 1
     e28:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
     e2c:	80 e0       	ldi	r24, 0x00	; 0
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	a8 ec       	ldi	r26, 0xC8	; 200
     e32:	b2 e4       	ldi	r27, 0x42	; 66
     e34:	8d 87       	std	Y+13, r24	; 0x0d
     e36:	9e 87       	std	Y+14, r25	; 0x0e
     e38:	af 87       	std	Y+15, r26	; 0x0f
     e3a:	b8 8b       	std	Y+16, r27	; 0x10

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     e3c:	8e 01       	movw	r16, r28
     e3e:	07 5f       	subi	r16, 0xF7	; 247
     e40:	1d 4f       	sbci	r17, 0xFD	; 253
     e42:	20 e0       	ldi	r18, 0x00	; 0
     e44:	30 e0       	ldi	r19, 0x00	; 0
     e46:	4a e7       	ldi	r20, 0x7A	; 122
     e48:	55 e4       	ldi	r21, 0x45	; 69
     e4a:	6d 85       	ldd	r22, Y+13	; 0x0d
     e4c:	7e 85       	ldd	r23, Y+14	; 0x0e
     e4e:	8f 85       	ldd	r24, Y+15	; 0x0f
     e50:	98 89       	ldd	r25, Y+16	; 0x10
     e52:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
     e56:	dc 01       	movw	r26, r24
     e58:	cb 01       	movw	r24, r22
     e5a:	f8 01       	movw	r30, r16
     e5c:	80 83       	st	Z, r24
     e5e:	91 83       	std	Z+1, r25	; 0x01
     e60:	a2 83       	std	Z+2, r26	; 0x02
     e62:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     e64:	ce 01       	movw	r24, r28
     e66:	87 5f       	subi	r24, 0xF7	; 247
     e68:	9d 4f       	sbci	r25, 0xFD	; 253
     e6a:	20 e0       	ldi	r18, 0x00	; 0
     e6c:	30 e0       	ldi	r19, 0x00	; 0
     e6e:	40 e8       	ldi	r20, 0x80	; 128
     e70:	5f e3       	ldi	r21, 0x3F	; 63
     e72:	fc 01       	movw	r30, r24
     e74:	60 81       	ld	r22, Z
     e76:	71 81       	ldd	r23, Z+1	; 0x01
     e78:	82 81       	ldd	r24, Z+2	; 0x02
     e7a:	93 81       	ldd	r25, Z+3	; 0x03
     e7c:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
     e80:	88 23       	and	r24, r24
     e82:	4c f4       	brge	.+18     	; 0xe96 <play_somthin_booy+0x4f4>
		__ticks = 1;
     e84:	ce 01       	movw	r24, r28
     e86:	83 5f       	subi	r24, 0xF3	; 243
     e88:	9d 4f       	sbci	r25, 0xFD	; 253
     e8a:	21 e0       	ldi	r18, 0x01	; 1
     e8c:	30 e0       	ldi	r19, 0x00	; 0
     e8e:	fc 01       	movw	r30, r24
     e90:	31 83       	std	Z+1, r19	; 0x01
     e92:	20 83       	st	Z, r18
     e94:	69 c0       	rjmp	.+210    	; 0xf68 <play_somthin_booy+0x5c6>
	else if (__tmp > 65535)
     e96:	ce 01       	movw	r24, r28
     e98:	87 5f       	subi	r24, 0xF7	; 247
     e9a:	9d 4f       	sbci	r25, 0xFD	; 253
     e9c:	20 e0       	ldi	r18, 0x00	; 0
     e9e:	3f ef       	ldi	r19, 0xFF	; 255
     ea0:	4f e7       	ldi	r20, 0x7F	; 127
     ea2:	57 e4       	ldi	r21, 0x47	; 71
     ea4:	fc 01       	movw	r30, r24
     ea6:	60 81       	ld	r22, Z
     ea8:	71 81       	ldd	r23, Z+1	; 0x01
     eaa:	82 81       	ldd	r24, Z+2	; 0x02
     eac:	93 81       	ldd	r25, Z+3	; 0x03
     eae:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
     eb2:	18 16       	cp	r1, r24
     eb4:	0c f0       	brlt	.+2      	; 0xeb8 <play_somthin_booy+0x516>
     eb6:	46 c0       	rjmp	.+140    	; 0xf44 <play_somthin_booy+0x5a2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     eb8:	20 e0       	ldi	r18, 0x00	; 0
     eba:	30 e0       	ldi	r19, 0x00	; 0
     ebc:	40 e2       	ldi	r20, 0x20	; 32
     ebe:	51 e4       	ldi	r21, 0x41	; 65
     ec0:	6d 85       	ldd	r22, Y+13	; 0x0d
     ec2:	7e 85       	ldd	r23, Y+14	; 0x0e
     ec4:	8f 85       	ldd	r24, Y+15	; 0x0f
     ec6:	98 89       	ldd	r25, Y+16	; 0x10
     ec8:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
     ecc:	dc 01       	movw	r26, r24
     ece:	cb 01       	movw	r24, r22
     ed0:	8e 01       	movw	r16, r28
     ed2:	03 5f       	subi	r16, 0xF3	; 243
     ed4:	1d 4f       	sbci	r17, 0xFD	; 253
     ed6:	bc 01       	movw	r22, r24
     ed8:	cd 01       	movw	r24, r26
     eda:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
     ede:	dc 01       	movw	r26, r24
     ee0:	cb 01       	movw	r24, r22
     ee2:	f8 01       	movw	r30, r16
     ee4:	91 83       	std	Z+1, r25	; 0x01
     ee6:	80 83       	st	Z, r24
     ee8:	24 c0       	rjmp	.+72     	; 0xf32 <play_somthin_booy+0x590>
     eea:	ce 01       	movw	r24, r28
     eec:	81 5f       	subi	r24, 0xF1	; 241
     eee:	9d 4f       	sbci	r25, 0xFD	; 253
     ef0:	20 e9       	ldi	r18, 0x90	; 144
     ef2:	31 e0       	ldi	r19, 0x01	; 1
     ef4:	fc 01       	movw	r30, r24
     ef6:	31 83       	std	Z+1, r19	; 0x01
     ef8:	20 83       	st	Z, r18
     efa:	ce 01       	movw	r24, r28
     efc:	81 5f       	subi	r24, 0xF1	; 241
     efe:	9d 4f       	sbci	r25, 0xFD	; 253
     f00:	fc 01       	movw	r30, r24
     f02:	80 81       	ld	r24, Z
     f04:	91 81       	ldd	r25, Z+1	; 0x01
     f06:	01 97       	sbiw	r24, 0x01	; 1
     f08:	f1 f7       	brne	.-4      	; 0xf06 <play_somthin_booy+0x564>
     f0a:	9e 01       	movw	r18, r28
     f0c:	21 5f       	subi	r18, 0xF1	; 241
     f0e:	3d 4f       	sbci	r19, 0xFD	; 253
     f10:	f9 01       	movw	r30, r18
     f12:	91 83       	std	Z+1, r25	; 0x01
     f14:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f16:	ce 01       	movw	r24, r28
     f18:	83 5f       	subi	r24, 0xF3	; 243
     f1a:	9d 4f       	sbci	r25, 0xFD	; 253
     f1c:	9e 01       	movw	r18, r28
     f1e:	23 5f       	subi	r18, 0xF3	; 243
     f20:	3d 4f       	sbci	r19, 0xFD	; 253
     f22:	f9 01       	movw	r30, r18
     f24:	20 81       	ld	r18, Z
     f26:	31 81       	ldd	r19, Z+1	; 0x01
     f28:	21 50       	subi	r18, 0x01	; 1
     f2a:	31 09       	sbc	r19, r1
     f2c:	fc 01       	movw	r30, r24
     f2e:	31 83       	std	Z+1, r19	; 0x01
     f30:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f32:	ce 01       	movw	r24, r28
     f34:	83 5f       	subi	r24, 0xF3	; 243
     f36:	9d 4f       	sbci	r25, 0xFD	; 253
     f38:	fc 01       	movw	r30, r24
     f3a:	80 81       	ld	r24, Z
     f3c:	91 81       	ldd	r25, Z+1	; 0x01
     f3e:	89 2b       	or	r24, r25
     f40:	a1 f6       	brne	.-88     	; 0xeea <play_somthin_booy+0x548>
     f42:	2c c0       	rjmp	.+88     	; 0xf9c <play_somthin_booy+0x5fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f44:	8e 01       	movw	r16, r28
     f46:	03 5f       	subi	r16, 0xF3	; 243
     f48:	1d 4f       	sbci	r17, 0xFD	; 253
     f4a:	ce 01       	movw	r24, r28
     f4c:	87 5f       	subi	r24, 0xF7	; 247
     f4e:	9d 4f       	sbci	r25, 0xFD	; 253
     f50:	fc 01       	movw	r30, r24
     f52:	60 81       	ld	r22, Z
     f54:	71 81       	ldd	r23, Z+1	; 0x01
     f56:	82 81       	ldd	r24, Z+2	; 0x02
     f58:	93 81       	ldd	r25, Z+3	; 0x03
     f5a:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
     f5e:	dc 01       	movw	r26, r24
     f60:	cb 01       	movw	r24, r22
     f62:	f8 01       	movw	r30, r16
     f64:	91 83       	std	Z+1, r25	; 0x01
     f66:	80 83       	st	Z, r24
     f68:	ce 01       	movw	r24, r28
     f6a:	8f 5e       	subi	r24, 0xEF	; 239
     f6c:	9d 4f       	sbci	r25, 0xFD	; 253
     f6e:	9e 01       	movw	r18, r28
     f70:	23 5f       	subi	r18, 0xF3	; 243
     f72:	3d 4f       	sbci	r19, 0xFD	; 253
     f74:	f9 01       	movw	r30, r18
     f76:	20 81       	ld	r18, Z
     f78:	31 81       	ldd	r19, Z+1	; 0x01
     f7a:	fc 01       	movw	r30, r24
     f7c:	31 83       	std	Z+1, r19	; 0x01
     f7e:	20 83       	st	Z, r18
     f80:	ce 01       	movw	r24, r28
     f82:	8f 5e       	subi	r24, 0xEF	; 239
     f84:	9d 4f       	sbci	r25, 0xFD	; 253
     f86:	fc 01       	movw	r30, r24
     f88:	80 81       	ld	r24, Z
     f8a:	91 81       	ldd	r25, Z+1	; 0x01
     f8c:	01 97       	sbiw	r24, 0x01	; 1
     f8e:	f1 f7       	brne	.-4      	; 0xf8c <play_somthin_booy+0x5ea>
     f90:	9e 01       	movw	r18, r28
     f92:	2f 5e       	subi	r18, 0xEF	; 239
     f94:	3d 4f       	sbci	r19, 0xFD	; 253
     f96:	f9 01       	movw	r30, r18
     f98:	91 83       	std	Z+1, r25	; 0x01
     f9a:	80 83       	st	Z, r24
	_delay_ms(100);
	to_uARM("M2210 F660 T100\n");
     f9c:	87 ec       	ldi	r24, 0xC7	; 199
     f9e:	91 e0       	ldi	r25, 0x01	; 1
     fa0:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
     fa4:	80 e0       	ldi	r24, 0x00	; 0
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	a6 e9       	ldi	r26, 0x96	; 150
     faa:	b3 e4       	ldi	r27, 0x43	; 67
     fac:	89 8b       	std	Y+17, r24	; 0x11
     fae:	9a 8b       	std	Y+18, r25	; 0x12
     fb0:	ab 8b       	std	Y+19, r26	; 0x13
     fb2:	bc 8b       	std	Y+20, r27	; 0x14

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     fb4:	8e 01       	movw	r16, r28
     fb6:	01 50       	subi	r16, 0x01	; 1
     fb8:	1e 4f       	sbci	r17, 0xFE	; 254
     fba:	20 e0       	ldi	r18, 0x00	; 0
     fbc:	30 e0       	ldi	r19, 0x00	; 0
     fbe:	4a e7       	ldi	r20, 0x7A	; 122
     fc0:	55 e4       	ldi	r21, 0x45	; 69
     fc2:	69 89       	ldd	r22, Y+17	; 0x11
     fc4:	7a 89       	ldd	r23, Y+18	; 0x12
     fc6:	8b 89       	ldd	r24, Y+19	; 0x13
     fc8:	9c 89       	ldd	r25, Y+20	; 0x14
     fca:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
     fce:	dc 01       	movw	r26, r24
     fd0:	cb 01       	movw	r24, r22
     fd2:	f8 01       	movw	r30, r16
     fd4:	80 83       	st	Z, r24
     fd6:	91 83       	std	Z+1, r25	; 0x01
     fd8:	a2 83       	std	Z+2, r26	; 0x02
     fda:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     fdc:	ce 01       	movw	r24, r28
     fde:	81 50       	subi	r24, 0x01	; 1
     fe0:	9e 4f       	sbci	r25, 0xFE	; 254
     fe2:	20 e0       	ldi	r18, 0x00	; 0
     fe4:	30 e0       	ldi	r19, 0x00	; 0
     fe6:	40 e8       	ldi	r20, 0x80	; 128
     fe8:	5f e3       	ldi	r21, 0x3F	; 63
     fea:	fc 01       	movw	r30, r24
     fec:	60 81       	ld	r22, Z
     fee:	71 81       	ldd	r23, Z+1	; 0x01
     ff0:	82 81       	ldd	r24, Z+2	; 0x02
     ff2:	93 81       	ldd	r25, Z+3	; 0x03
     ff4:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
     ff8:	88 23       	and	r24, r24
     ffa:	4c f4       	brge	.+18     	; 0x100e <play_somthin_booy+0x66c>
		__ticks = 1;
     ffc:	ce 01       	movw	r24, r28
     ffe:	8d 5f       	subi	r24, 0xFD	; 253
    1000:	9d 4f       	sbci	r25, 0xFD	; 253
    1002:	21 e0       	ldi	r18, 0x01	; 1
    1004:	30 e0       	ldi	r19, 0x00	; 0
    1006:	fc 01       	movw	r30, r24
    1008:	31 83       	std	Z+1, r19	; 0x01
    100a:	20 83       	st	Z, r18
    100c:	69 c0       	rjmp	.+210    	; 0x10e0 <play_somthin_booy+0x73e>
	else if (__tmp > 65535)
    100e:	ce 01       	movw	r24, r28
    1010:	81 50       	subi	r24, 0x01	; 1
    1012:	9e 4f       	sbci	r25, 0xFE	; 254
    1014:	20 e0       	ldi	r18, 0x00	; 0
    1016:	3f ef       	ldi	r19, 0xFF	; 255
    1018:	4f e7       	ldi	r20, 0x7F	; 127
    101a:	57 e4       	ldi	r21, 0x47	; 71
    101c:	fc 01       	movw	r30, r24
    101e:	60 81       	ld	r22, Z
    1020:	71 81       	ldd	r23, Z+1	; 0x01
    1022:	82 81       	ldd	r24, Z+2	; 0x02
    1024:	93 81       	ldd	r25, Z+3	; 0x03
    1026:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    102a:	18 16       	cp	r1, r24
    102c:	0c f0       	brlt	.+2      	; 0x1030 <play_somthin_booy+0x68e>
    102e:	46 c0       	rjmp	.+140    	; 0x10bc <play_somthin_booy+0x71a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1030:	20 e0       	ldi	r18, 0x00	; 0
    1032:	30 e0       	ldi	r19, 0x00	; 0
    1034:	40 e2       	ldi	r20, 0x20	; 32
    1036:	51 e4       	ldi	r21, 0x41	; 65
    1038:	69 89       	ldd	r22, Y+17	; 0x11
    103a:	7a 89       	ldd	r23, Y+18	; 0x12
    103c:	8b 89       	ldd	r24, Y+19	; 0x13
    103e:	9c 89       	ldd	r25, Y+20	; 0x14
    1040:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    1044:	dc 01       	movw	r26, r24
    1046:	cb 01       	movw	r24, r22
    1048:	8e 01       	movw	r16, r28
    104a:	0d 5f       	subi	r16, 0xFD	; 253
    104c:	1d 4f       	sbci	r17, 0xFD	; 253
    104e:	bc 01       	movw	r22, r24
    1050:	cd 01       	movw	r24, r26
    1052:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    1056:	dc 01       	movw	r26, r24
    1058:	cb 01       	movw	r24, r22
    105a:	f8 01       	movw	r30, r16
    105c:	91 83       	std	Z+1, r25	; 0x01
    105e:	80 83       	st	Z, r24
    1060:	24 c0       	rjmp	.+72     	; 0x10aa <play_somthin_booy+0x708>
    1062:	ce 01       	movw	r24, r28
    1064:	8b 5f       	subi	r24, 0xFB	; 251
    1066:	9d 4f       	sbci	r25, 0xFD	; 253
    1068:	20 e9       	ldi	r18, 0x90	; 144
    106a:	31 e0       	ldi	r19, 0x01	; 1
    106c:	fc 01       	movw	r30, r24
    106e:	31 83       	std	Z+1, r19	; 0x01
    1070:	20 83       	st	Z, r18
    1072:	ce 01       	movw	r24, r28
    1074:	8b 5f       	subi	r24, 0xFB	; 251
    1076:	9d 4f       	sbci	r25, 0xFD	; 253
    1078:	fc 01       	movw	r30, r24
    107a:	80 81       	ld	r24, Z
    107c:	91 81       	ldd	r25, Z+1	; 0x01
    107e:	01 97       	sbiw	r24, 0x01	; 1
    1080:	f1 f7       	brne	.-4      	; 0x107e <play_somthin_booy+0x6dc>
    1082:	9e 01       	movw	r18, r28
    1084:	2b 5f       	subi	r18, 0xFB	; 251
    1086:	3d 4f       	sbci	r19, 0xFD	; 253
    1088:	f9 01       	movw	r30, r18
    108a:	91 83       	std	Z+1, r25	; 0x01
    108c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    108e:	ce 01       	movw	r24, r28
    1090:	8d 5f       	subi	r24, 0xFD	; 253
    1092:	9d 4f       	sbci	r25, 0xFD	; 253
    1094:	9e 01       	movw	r18, r28
    1096:	2d 5f       	subi	r18, 0xFD	; 253
    1098:	3d 4f       	sbci	r19, 0xFD	; 253
    109a:	f9 01       	movw	r30, r18
    109c:	20 81       	ld	r18, Z
    109e:	31 81       	ldd	r19, Z+1	; 0x01
    10a0:	21 50       	subi	r18, 0x01	; 1
    10a2:	31 09       	sbc	r19, r1
    10a4:	fc 01       	movw	r30, r24
    10a6:	31 83       	std	Z+1, r19	; 0x01
    10a8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10aa:	ce 01       	movw	r24, r28
    10ac:	8d 5f       	subi	r24, 0xFD	; 253
    10ae:	9d 4f       	sbci	r25, 0xFD	; 253
    10b0:	fc 01       	movw	r30, r24
    10b2:	80 81       	ld	r24, Z
    10b4:	91 81       	ldd	r25, Z+1	; 0x01
    10b6:	89 2b       	or	r24, r25
    10b8:	a1 f6       	brne	.-88     	; 0x1062 <play_somthin_booy+0x6c0>
    10ba:	2c c0       	rjmp	.+88     	; 0x1114 <__stack+0x15>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10bc:	8e 01       	movw	r16, r28
    10be:	0d 5f       	subi	r16, 0xFD	; 253
    10c0:	1d 4f       	sbci	r17, 0xFD	; 253
    10c2:	ce 01       	movw	r24, r28
    10c4:	81 50       	subi	r24, 0x01	; 1
    10c6:	9e 4f       	sbci	r25, 0xFE	; 254
    10c8:	fc 01       	movw	r30, r24
    10ca:	60 81       	ld	r22, Z
    10cc:	71 81       	ldd	r23, Z+1	; 0x01
    10ce:	82 81       	ldd	r24, Z+2	; 0x02
    10d0:	93 81       	ldd	r25, Z+3	; 0x03
    10d2:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    10d6:	dc 01       	movw	r26, r24
    10d8:	cb 01       	movw	r24, r22
    10da:	f8 01       	movw	r30, r16
    10dc:	91 83       	std	Z+1, r25	; 0x01
    10de:	80 83       	st	Z, r24
    10e0:	ce 01       	movw	r24, r28
    10e2:	89 5f       	subi	r24, 0xF9	; 249
    10e4:	9d 4f       	sbci	r25, 0xFD	; 253
    10e6:	9e 01       	movw	r18, r28
    10e8:	2d 5f       	subi	r18, 0xFD	; 253
    10ea:	3d 4f       	sbci	r19, 0xFD	; 253
    10ec:	f9 01       	movw	r30, r18
    10ee:	20 81       	ld	r18, Z
    10f0:	31 81       	ldd	r19, Z+1	; 0x01
    10f2:	fc 01       	movw	r30, r24
    10f4:	31 83       	std	Z+1, r19	; 0x01
    10f6:	20 83       	st	Z, r18
    10f8:	ce 01       	movw	r24, r28
    10fa:	89 5f       	subi	r24, 0xF9	; 249
    10fc:	9d 4f       	sbci	r25, 0xFD	; 253
    10fe:	fc 01       	movw	r30, r24
    1100:	80 81       	ld	r24, Z
    1102:	91 81       	ldd	r25, Z+1	; 0x01
    1104:	01 97       	sbiw	r24, 0x01	; 1
    1106:	f1 f7       	brne	.-4      	; 0x1104 <__stack+0x5>
    1108:	9e 01       	movw	r18, r28
    110a:	29 5f       	subi	r18, 0xF9	; 249
    110c:	3d 4f       	sbci	r19, 0xFD	; 253
    110e:	f9 01       	movw	r30, r18
    1110:	91 83       	std	Z+1, r25	; 0x01
    1112:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F770 T100\n");
    1114:	89 ee       	ldi	r24, 0xE9	; 233
    1116:	91 e0       	ldi	r25, 0x01	; 1
    1118:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    111c:	80 e0       	ldi	r24, 0x00	; 0
    111e:	90 e8       	ldi	r25, 0x80	; 128
    1120:	a9 e0       	ldi	r26, 0x09	; 9
    1122:	b4 e4       	ldi	r27, 0x44	; 68
    1124:	8d 8b       	std	Y+21, r24	; 0x15
    1126:	9e 8b       	std	Y+22, r25	; 0x16
    1128:	af 8b       	std	Y+23, r26	; 0x17
    112a:	b8 8f       	std	Y+24, r27	; 0x18

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    112c:	8e 01       	movw	r16, r28
    112e:	0b 50       	subi	r16, 0x0B	; 11
    1130:	1e 4f       	sbci	r17, 0xFE	; 254
    1132:	20 e0       	ldi	r18, 0x00	; 0
    1134:	30 e0       	ldi	r19, 0x00	; 0
    1136:	4a e7       	ldi	r20, 0x7A	; 122
    1138:	55 e4       	ldi	r21, 0x45	; 69
    113a:	6d 89       	ldd	r22, Y+21	; 0x15
    113c:	7e 89       	ldd	r23, Y+22	; 0x16
    113e:	8f 89       	ldd	r24, Y+23	; 0x17
    1140:	98 8d       	ldd	r25, Y+24	; 0x18
    1142:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    1146:	dc 01       	movw	r26, r24
    1148:	cb 01       	movw	r24, r22
    114a:	f8 01       	movw	r30, r16
    114c:	80 83       	st	Z, r24
    114e:	91 83       	std	Z+1, r25	; 0x01
    1150:	a2 83       	std	Z+2, r26	; 0x02
    1152:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1154:	ce 01       	movw	r24, r28
    1156:	8b 50       	subi	r24, 0x0B	; 11
    1158:	9e 4f       	sbci	r25, 0xFE	; 254
    115a:	20 e0       	ldi	r18, 0x00	; 0
    115c:	30 e0       	ldi	r19, 0x00	; 0
    115e:	40 e8       	ldi	r20, 0x80	; 128
    1160:	5f e3       	ldi	r21, 0x3F	; 63
    1162:	fc 01       	movw	r30, r24
    1164:	60 81       	ld	r22, Z
    1166:	71 81       	ldd	r23, Z+1	; 0x01
    1168:	82 81       	ldd	r24, Z+2	; 0x02
    116a:	93 81       	ldd	r25, Z+3	; 0x03
    116c:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    1170:	88 23       	and	r24, r24
    1172:	4c f4       	brge	.+18     	; 0x1186 <__stack+0x87>
		__ticks = 1;
    1174:	ce 01       	movw	r24, r28
    1176:	87 50       	subi	r24, 0x07	; 7
    1178:	9e 4f       	sbci	r25, 0xFE	; 254
    117a:	21 e0       	ldi	r18, 0x01	; 1
    117c:	30 e0       	ldi	r19, 0x00	; 0
    117e:	fc 01       	movw	r30, r24
    1180:	31 83       	std	Z+1, r19	; 0x01
    1182:	20 83       	st	Z, r18
    1184:	69 c0       	rjmp	.+210    	; 0x1258 <__stack+0x159>
	else if (__tmp > 65535)
    1186:	ce 01       	movw	r24, r28
    1188:	8b 50       	subi	r24, 0x0B	; 11
    118a:	9e 4f       	sbci	r25, 0xFE	; 254
    118c:	20 e0       	ldi	r18, 0x00	; 0
    118e:	3f ef       	ldi	r19, 0xFF	; 255
    1190:	4f e7       	ldi	r20, 0x7F	; 127
    1192:	57 e4       	ldi	r21, 0x47	; 71
    1194:	fc 01       	movw	r30, r24
    1196:	60 81       	ld	r22, Z
    1198:	71 81       	ldd	r23, Z+1	; 0x01
    119a:	82 81       	ldd	r24, Z+2	; 0x02
    119c:	93 81       	ldd	r25, Z+3	; 0x03
    119e:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    11a2:	18 16       	cp	r1, r24
    11a4:	0c f0       	brlt	.+2      	; 0x11a8 <__stack+0xa9>
    11a6:	46 c0       	rjmp	.+140    	; 0x1234 <__stack+0x135>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11a8:	20 e0       	ldi	r18, 0x00	; 0
    11aa:	30 e0       	ldi	r19, 0x00	; 0
    11ac:	40 e2       	ldi	r20, 0x20	; 32
    11ae:	51 e4       	ldi	r21, 0x41	; 65
    11b0:	6d 89       	ldd	r22, Y+21	; 0x15
    11b2:	7e 89       	ldd	r23, Y+22	; 0x16
    11b4:	8f 89       	ldd	r24, Y+23	; 0x17
    11b6:	98 8d       	ldd	r25, Y+24	; 0x18
    11b8:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    11bc:	dc 01       	movw	r26, r24
    11be:	cb 01       	movw	r24, r22
    11c0:	8e 01       	movw	r16, r28
    11c2:	07 50       	subi	r16, 0x07	; 7
    11c4:	1e 4f       	sbci	r17, 0xFE	; 254
    11c6:	bc 01       	movw	r22, r24
    11c8:	cd 01       	movw	r24, r26
    11ca:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    11ce:	dc 01       	movw	r26, r24
    11d0:	cb 01       	movw	r24, r22
    11d2:	f8 01       	movw	r30, r16
    11d4:	91 83       	std	Z+1, r25	; 0x01
    11d6:	80 83       	st	Z, r24
    11d8:	24 c0       	rjmp	.+72     	; 0x1222 <__stack+0x123>
    11da:	ce 01       	movw	r24, r28
    11dc:	85 50       	subi	r24, 0x05	; 5
    11de:	9e 4f       	sbci	r25, 0xFE	; 254
    11e0:	20 e9       	ldi	r18, 0x90	; 144
    11e2:	31 e0       	ldi	r19, 0x01	; 1
    11e4:	fc 01       	movw	r30, r24
    11e6:	31 83       	std	Z+1, r19	; 0x01
    11e8:	20 83       	st	Z, r18
    11ea:	ce 01       	movw	r24, r28
    11ec:	85 50       	subi	r24, 0x05	; 5
    11ee:	9e 4f       	sbci	r25, 0xFE	; 254
    11f0:	fc 01       	movw	r30, r24
    11f2:	80 81       	ld	r24, Z
    11f4:	91 81       	ldd	r25, Z+1	; 0x01
    11f6:	01 97       	sbiw	r24, 0x01	; 1
    11f8:	f1 f7       	brne	.-4      	; 0x11f6 <__stack+0xf7>
    11fa:	9e 01       	movw	r18, r28
    11fc:	25 50       	subi	r18, 0x05	; 5
    11fe:	3e 4f       	sbci	r19, 0xFE	; 254
    1200:	f9 01       	movw	r30, r18
    1202:	91 83       	std	Z+1, r25	; 0x01
    1204:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1206:	ce 01       	movw	r24, r28
    1208:	87 50       	subi	r24, 0x07	; 7
    120a:	9e 4f       	sbci	r25, 0xFE	; 254
    120c:	9e 01       	movw	r18, r28
    120e:	27 50       	subi	r18, 0x07	; 7
    1210:	3e 4f       	sbci	r19, 0xFE	; 254
    1212:	f9 01       	movw	r30, r18
    1214:	20 81       	ld	r18, Z
    1216:	31 81       	ldd	r19, Z+1	; 0x01
    1218:	21 50       	subi	r18, 0x01	; 1
    121a:	31 09       	sbc	r19, r1
    121c:	fc 01       	movw	r30, r24
    121e:	31 83       	std	Z+1, r19	; 0x01
    1220:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1222:	ce 01       	movw	r24, r28
    1224:	87 50       	subi	r24, 0x07	; 7
    1226:	9e 4f       	sbci	r25, 0xFE	; 254
    1228:	fc 01       	movw	r30, r24
    122a:	80 81       	ld	r24, Z
    122c:	91 81       	ldd	r25, Z+1	; 0x01
    122e:	89 2b       	or	r24, r25
    1230:	a1 f6       	brne	.-88     	; 0x11da <__stack+0xdb>
    1232:	2c c0       	rjmp	.+88     	; 0x128c <__stack+0x18d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1234:	8e 01       	movw	r16, r28
    1236:	07 50       	subi	r16, 0x07	; 7
    1238:	1e 4f       	sbci	r17, 0xFE	; 254
    123a:	ce 01       	movw	r24, r28
    123c:	8b 50       	subi	r24, 0x0B	; 11
    123e:	9e 4f       	sbci	r25, 0xFE	; 254
    1240:	fc 01       	movw	r30, r24
    1242:	60 81       	ld	r22, Z
    1244:	71 81       	ldd	r23, Z+1	; 0x01
    1246:	82 81       	ldd	r24, Z+2	; 0x02
    1248:	93 81       	ldd	r25, Z+3	; 0x03
    124a:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    124e:	dc 01       	movw	r26, r24
    1250:	cb 01       	movw	r24, r22
    1252:	f8 01       	movw	r30, r16
    1254:	91 83       	std	Z+1, r25	; 0x01
    1256:	80 83       	st	Z, r24
    1258:	ce 01       	movw	r24, r28
    125a:	83 50       	subi	r24, 0x03	; 3
    125c:	9e 4f       	sbci	r25, 0xFE	; 254
    125e:	9e 01       	movw	r18, r28
    1260:	27 50       	subi	r18, 0x07	; 7
    1262:	3e 4f       	sbci	r19, 0xFE	; 254
    1264:	f9 01       	movw	r30, r18
    1266:	20 81       	ld	r18, Z
    1268:	31 81       	ldd	r19, Z+1	; 0x01
    126a:	fc 01       	movw	r30, r24
    126c:	31 83       	std	Z+1, r19	; 0x01
    126e:	20 83       	st	Z, r18
    1270:	ce 01       	movw	r24, r28
    1272:	83 50       	subi	r24, 0x03	; 3
    1274:	9e 4f       	sbci	r25, 0xFE	; 254
    1276:	fc 01       	movw	r30, r24
    1278:	80 81       	ld	r24, Z
    127a:	91 81       	ldd	r25, Z+1	; 0x01
    127c:	01 97       	sbiw	r24, 0x01	; 1
    127e:	f1 f7       	brne	.-4      	; 0x127c <__stack+0x17d>
    1280:	9e 01       	movw	r18, r28
    1282:	23 50       	subi	r18, 0x03	; 3
    1284:	3e 4f       	sbci	r19, 0xFE	; 254
    1286:	f9 01       	movw	r30, r18
    1288:	91 83       	std	Z+1, r25	; 0x01
    128a:	80 83       	st	Z, r24
	_delay_ms(550);
	to_uARM("M2210 F380 T100\n");
    128c:	8a ef       	ldi	r24, 0xFA	; 250
    128e:	91 e0       	ldi	r25, 0x01	; 1
    1290:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    1294:	80 e0       	ldi	r24, 0x00	; 0
    1296:	90 ec       	ldi	r25, 0xC0	; 192
    1298:	af e0       	ldi	r26, 0x0F	; 15
    129a:	b4 e4       	ldi	r27, 0x44	; 68
    129c:	89 8f       	std	Y+25, r24	; 0x19
    129e:	9a 8f       	std	Y+26, r25	; 0x1a
    12a0:	ab 8f       	std	Y+27, r26	; 0x1b
    12a2:	bc 8f       	std	Y+28, r27	; 0x1c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    12a4:	8e 01       	movw	r16, r28
    12a6:	05 51       	subi	r16, 0x15	; 21
    12a8:	1e 4f       	sbci	r17, 0xFE	; 254
    12aa:	20 e0       	ldi	r18, 0x00	; 0
    12ac:	30 e0       	ldi	r19, 0x00	; 0
    12ae:	4a e7       	ldi	r20, 0x7A	; 122
    12b0:	55 e4       	ldi	r21, 0x45	; 69
    12b2:	69 8d       	ldd	r22, Y+25	; 0x19
    12b4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    12b6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    12b8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    12ba:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    12be:	dc 01       	movw	r26, r24
    12c0:	cb 01       	movw	r24, r22
    12c2:	f8 01       	movw	r30, r16
    12c4:	80 83       	st	Z, r24
    12c6:	91 83       	std	Z+1, r25	; 0x01
    12c8:	a2 83       	std	Z+2, r26	; 0x02
    12ca:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    12cc:	ce 01       	movw	r24, r28
    12ce:	85 51       	subi	r24, 0x15	; 21
    12d0:	9e 4f       	sbci	r25, 0xFE	; 254
    12d2:	20 e0       	ldi	r18, 0x00	; 0
    12d4:	30 e0       	ldi	r19, 0x00	; 0
    12d6:	40 e8       	ldi	r20, 0x80	; 128
    12d8:	5f e3       	ldi	r21, 0x3F	; 63
    12da:	fc 01       	movw	r30, r24
    12dc:	60 81       	ld	r22, Z
    12de:	71 81       	ldd	r23, Z+1	; 0x01
    12e0:	82 81       	ldd	r24, Z+2	; 0x02
    12e2:	93 81       	ldd	r25, Z+3	; 0x03
    12e4:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    12e8:	88 23       	and	r24, r24
    12ea:	4c f4       	brge	.+18     	; 0x12fe <__stack+0x1ff>
		__ticks = 1;
    12ec:	ce 01       	movw	r24, r28
    12ee:	81 51       	subi	r24, 0x11	; 17
    12f0:	9e 4f       	sbci	r25, 0xFE	; 254
    12f2:	21 e0       	ldi	r18, 0x01	; 1
    12f4:	30 e0       	ldi	r19, 0x00	; 0
    12f6:	fc 01       	movw	r30, r24
    12f8:	31 83       	std	Z+1, r19	; 0x01
    12fa:	20 83       	st	Z, r18
    12fc:	69 c0       	rjmp	.+210    	; 0x13d0 <__stack+0x2d1>
	else if (__tmp > 65535)
    12fe:	ce 01       	movw	r24, r28
    1300:	85 51       	subi	r24, 0x15	; 21
    1302:	9e 4f       	sbci	r25, 0xFE	; 254
    1304:	20 e0       	ldi	r18, 0x00	; 0
    1306:	3f ef       	ldi	r19, 0xFF	; 255
    1308:	4f e7       	ldi	r20, 0x7F	; 127
    130a:	57 e4       	ldi	r21, 0x47	; 71
    130c:	fc 01       	movw	r30, r24
    130e:	60 81       	ld	r22, Z
    1310:	71 81       	ldd	r23, Z+1	; 0x01
    1312:	82 81       	ldd	r24, Z+2	; 0x02
    1314:	93 81       	ldd	r25, Z+3	; 0x03
    1316:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    131a:	18 16       	cp	r1, r24
    131c:	0c f0       	brlt	.+2      	; 0x1320 <__stack+0x221>
    131e:	46 c0       	rjmp	.+140    	; 0x13ac <__stack+0x2ad>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1320:	20 e0       	ldi	r18, 0x00	; 0
    1322:	30 e0       	ldi	r19, 0x00	; 0
    1324:	40 e2       	ldi	r20, 0x20	; 32
    1326:	51 e4       	ldi	r21, 0x41	; 65
    1328:	69 8d       	ldd	r22, Y+25	; 0x19
    132a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    132c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    132e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1330:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    1334:	dc 01       	movw	r26, r24
    1336:	cb 01       	movw	r24, r22
    1338:	8e 01       	movw	r16, r28
    133a:	01 51       	subi	r16, 0x11	; 17
    133c:	1e 4f       	sbci	r17, 0xFE	; 254
    133e:	bc 01       	movw	r22, r24
    1340:	cd 01       	movw	r24, r26
    1342:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    1346:	dc 01       	movw	r26, r24
    1348:	cb 01       	movw	r24, r22
    134a:	f8 01       	movw	r30, r16
    134c:	91 83       	std	Z+1, r25	; 0x01
    134e:	80 83       	st	Z, r24
    1350:	24 c0       	rjmp	.+72     	; 0x139a <__stack+0x29b>
    1352:	ce 01       	movw	r24, r28
    1354:	8f 50       	subi	r24, 0x0F	; 15
    1356:	9e 4f       	sbci	r25, 0xFE	; 254
    1358:	20 e9       	ldi	r18, 0x90	; 144
    135a:	31 e0       	ldi	r19, 0x01	; 1
    135c:	fc 01       	movw	r30, r24
    135e:	31 83       	std	Z+1, r19	; 0x01
    1360:	20 83       	st	Z, r18
    1362:	ce 01       	movw	r24, r28
    1364:	8f 50       	subi	r24, 0x0F	; 15
    1366:	9e 4f       	sbci	r25, 0xFE	; 254
    1368:	fc 01       	movw	r30, r24
    136a:	80 81       	ld	r24, Z
    136c:	91 81       	ldd	r25, Z+1	; 0x01
    136e:	01 97       	sbiw	r24, 0x01	; 1
    1370:	f1 f7       	brne	.-4      	; 0x136e <__stack+0x26f>
    1372:	9e 01       	movw	r18, r28
    1374:	2f 50       	subi	r18, 0x0F	; 15
    1376:	3e 4f       	sbci	r19, 0xFE	; 254
    1378:	f9 01       	movw	r30, r18
    137a:	91 83       	std	Z+1, r25	; 0x01
    137c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    137e:	ce 01       	movw	r24, r28
    1380:	81 51       	subi	r24, 0x11	; 17
    1382:	9e 4f       	sbci	r25, 0xFE	; 254
    1384:	9e 01       	movw	r18, r28
    1386:	21 51       	subi	r18, 0x11	; 17
    1388:	3e 4f       	sbci	r19, 0xFE	; 254
    138a:	f9 01       	movw	r30, r18
    138c:	20 81       	ld	r18, Z
    138e:	31 81       	ldd	r19, Z+1	; 0x01
    1390:	21 50       	subi	r18, 0x01	; 1
    1392:	31 09       	sbc	r19, r1
    1394:	fc 01       	movw	r30, r24
    1396:	31 83       	std	Z+1, r19	; 0x01
    1398:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    139a:	ce 01       	movw	r24, r28
    139c:	81 51       	subi	r24, 0x11	; 17
    139e:	9e 4f       	sbci	r25, 0xFE	; 254
    13a0:	fc 01       	movw	r30, r24
    13a2:	80 81       	ld	r24, Z
    13a4:	91 81       	ldd	r25, Z+1	; 0x01
    13a6:	89 2b       	or	r24, r25
    13a8:	a1 f6       	brne	.-88     	; 0x1352 <__stack+0x253>
    13aa:	2c c0       	rjmp	.+88     	; 0x1404 <__stack+0x305>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13ac:	8e 01       	movw	r16, r28
    13ae:	01 51       	subi	r16, 0x11	; 17
    13b0:	1e 4f       	sbci	r17, 0xFE	; 254
    13b2:	ce 01       	movw	r24, r28
    13b4:	85 51       	subi	r24, 0x15	; 21
    13b6:	9e 4f       	sbci	r25, 0xFE	; 254
    13b8:	fc 01       	movw	r30, r24
    13ba:	60 81       	ld	r22, Z
    13bc:	71 81       	ldd	r23, Z+1	; 0x01
    13be:	82 81       	ldd	r24, Z+2	; 0x02
    13c0:	93 81       	ldd	r25, Z+3	; 0x03
    13c2:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    13c6:	dc 01       	movw	r26, r24
    13c8:	cb 01       	movw	r24, r22
    13ca:	f8 01       	movw	r30, r16
    13cc:	91 83       	std	Z+1, r25	; 0x01
    13ce:	80 83       	st	Z, r24
    13d0:	ce 01       	movw	r24, r28
    13d2:	8d 50       	subi	r24, 0x0D	; 13
    13d4:	9e 4f       	sbci	r25, 0xFE	; 254
    13d6:	9e 01       	movw	r18, r28
    13d8:	21 51       	subi	r18, 0x11	; 17
    13da:	3e 4f       	sbci	r19, 0xFE	; 254
    13dc:	f9 01       	movw	r30, r18
    13de:	20 81       	ld	r18, Z
    13e0:	31 81       	ldd	r19, Z+1	; 0x01
    13e2:	fc 01       	movw	r30, r24
    13e4:	31 83       	std	Z+1, r19	; 0x01
    13e6:	20 83       	st	Z, r18
    13e8:	ce 01       	movw	r24, r28
    13ea:	8d 50       	subi	r24, 0x0D	; 13
    13ec:	9e 4f       	sbci	r25, 0xFE	; 254
    13ee:	fc 01       	movw	r30, r24
    13f0:	80 81       	ld	r24, Z
    13f2:	91 81       	ldd	r25, Z+1	; 0x01
    13f4:	01 97       	sbiw	r24, 0x01	; 1
    13f6:	f1 f7       	brne	.-4      	; 0x13f4 <__stack+0x2f5>
    13f8:	9e 01       	movw	r18, r28
    13fa:	2d 50       	subi	r18, 0x0D	; 13
    13fc:	3e 4f       	sbci	r19, 0xFE	; 254
    13fe:	f9 01       	movw	r30, r18
    1400:	91 83       	std	Z+1, r25	; 0x01
    1402:	80 83       	st	Z, r24
	_delay_ms(575);
	
	to_uARM("M2210 F510 T100\n");
    1404:	88 ed       	ldi	r24, 0xD8	; 216
    1406:	91 e0       	ldi	r25, 0x01	; 1
    1408:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    140c:	80 e0       	ldi	r24, 0x00	; 0
    140e:	90 e0       	ldi	r25, 0x00	; 0
    1410:	a1 ee       	ldi	r26, 0xE1	; 225
    1412:	b3 e4       	ldi	r27, 0x43	; 67
    1414:	8d 8f       	std	Y+29, r24	; 0x1d
    1416:	9e 8f       	std	Y+30, r25	; 0x1e
    1418:	af 8f       	std	Y+31, r26	; 0x1f
    141a:	b8 a3       	std	Y+32, r27	; 0x20

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    141c:	8e 01       	movw	r16, r28
    141e:	0f 51       	subi	r16, 0x1F	; 31
    1420:	1e 4f       	sbci	r17, 0xFE	; 254
    1422:	20 e0       	ldi	r18, 0x00	; 0
    1424:	30 e0       	ldi	r19, 0x00	; 0
    1426:	4a e7       	ldi	r20, 0x7A	; 122
    1428:	55 e4       	ldi	r21, 0x45	; 69
    142a:	6d 8d       	ldd	r22, Y+29	; 0x1d
    142c:	7e 8d       	ldd	r23, Y+30	; 0x1e
    142e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1430:	98 a1       	ldd	r25, Y+32	; 0x20
    1432:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    1436:	dc 01       	movw	r26, r24
    1438:	cb 01       	movw	r24, r22
    143a:	f8 01       	movw	r30, r16
    143c:	80 83       	st	Z, r24
    143e:	91 83       	std	Z+1, r25	; 0x01
    1440:	a2 83       	std	Z+2, r26	; 0x02
    1442:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1444:	ce 01       	movw	r24, r28
    1446:	8f 51       	subi	r24, 0x1F	; 31
    1448:	9e 4f       	sbci	r25, 0xFE	; 254
    144a:	20 e0       	ldi	r18, 0x00	; 0
    144c:	30 e0       	ldi	r19, 0x00	; 0
    144e:	40 e8       	ldi	r20, 0x80	; 128
    1450:	5f e3       	ldi	r21, 0x3F	; 63
    1452:	fc 01       	movw	r30, r24
    1454:	60 81       	ld	r22, Z
    1456:	71 81       	ldd	r23, Z+1	; 0x01
    1458:	82 81       	ldd	r24, Z+2	; 0x02
    145a:	93 81       	ldd	r25, Z+3	; 0x03
    145c:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    1460:	88 23       	and	r24, r24
    1462:	4c f4       	brge	.+18     	; 0x1476 <__stack+0x377>
		__ticks = 1;
    1464:	ce 01       	movw	r24, r28
    1466:	8b 51       	subi	r24, 0x1B	; 27
    1468:	9e 4f       	sbci	r25, 0xFE	; 254
    146a:	21 e0       	ldi	r18, 0x01	; 1
    146c:	30 e0       	ldi	r19, 0x00	; 0
    146e:	fc 01       	movw	r30, r24
    1470:	31 83       	std	Z+1, r19	; 0x01
    1472:	20 83       	st	Z, r18
    1474:	69 c0       	rjmp	.+210    	; 0x1548 <__stack+0x449>
	else if (__tmp > 65535)
    1476:	ce 01       	movw	r24, r28
    1478:	8f 51       	subi	r24, 0x1F	; 31
    147a:	9e 4f       	sbci	r25, 0xFE	; 254
    147c:	20 e0       	ldi	r18, 0x00	; 0
    147e:	3f ef       	ldi	r19, 0xFF	; 255
    1480:	4f e7       	ldi	r20, 0x7F	; 127
    1482:	57 e4       	ldi	r21, 0x47	; 71
    1484:	fc 01       	movw	r30, r24
    1486:	60 81       	ld	r22, Z
    1488:	71 81       	ldd	r23, Z+1	; 0x01
    148a:	82 81       	ldd	r24, Z+2	; 0x02
    148c:	93 81       	ldd	r25, Z+3	; 0x03
    148e:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    1492:	18 16       	cp	r1, r24
    1494:	0c f0       	brlt	.+2      	; 0x1498 <__stack+0x399>
    1496:	46 c0       	rjmp	.+140    	; 0x1524 <__stack+0x425>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1498:	20 e0       	ldi	r18, 0x00	; 0
    149a:	30 e0       	ldi	r19, 0x00	; 0
    149c:	40 e2       	ldi	r20, 0x20	; 32
    149e:	51 e4       	ldi	r21, 0x41	; 65
    14a0:	6d 8d       	ldd	r22, Y+29	; 0x1d
    14a2:	7e 8d       	ldd	r23, Y+30	; 0x1e
    14a4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    14a6:	98 a1       	ldd	r25, Y+32	; 0x20
    14a8:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    14ac:	dc 01       	movw	r26, r24
    14ae:	cb 01       	movw	r24, r22
    14b0:	8e 01       	movw	r16, r28
    14b2:	0b 51       	subi	r16, 0x1B	; 27
    14b4:	1e 4f       	sbci	r17, 0xFE	; 254
    14b6:	bc 01       	movw	r22, r24
    14b8:	cd 01       	movw	r24, r26
    14ba:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    14be:	dc 01       	movw	r26, r24
    14c0:	cb 01       	movw	r24, r22
    14c2:	f8 01       	movw	r30, r16
    14c4:	91 83       	std	Z+1, r25	; 0x01
    14c6:	80 83       	st	Z, r24
    14c8:	24 c0       	rjmp	.+72     	; 0x1512 <__stack+0x413>
    14ca:	ce 01       	movw	r24, r28
    14cc:	89 51       	subi	r24, 0x19	; 25
    14ce:	9e 4f       	sbci	r25, 0xFE	; 254
    14d0:	20 e9       	ldi	r18, 0x90	; 144
    14d2:	31 e0       	ldi	r19, 0x01	; 1
    14d4:	fc 01       	movw	r30, r24
    14d6:	31 83       	std	Z+1, r19	; 0x01
    14d8:	20 83       	st	Z, r18
    14da:	ce 01       	movw	r24, r28
    14dc:	89 51       	subi	r24, 0x19	; 25
    14de:	9e 4f       	sbci	r25, 0xFE	; 254
    14e0:	fc 01       	movw	r30, r24
    14e2:	80 81       	ld	r24, Z
    14e4:	91 81       	ldd	r25, Z+1	; 0x01
    14e6:	01 97       	sbiw	r24, 0x01	; 1
    14e8:	f1 f7       	brne	.-4      	; 0x14e6 <__stack+0x3e7>
    14ea:	9e 01       	movw	r18, r28
    14ec:	29 51       	subi	r18, 0x19	; 25
    14ee:	3e 4f       	sbci	r19, 0xFE	; 254
    14f0:	f9 01       	movw	r30, r18
    14f2:	91 83       	std	Z+1, r25	; 0x01
    14f4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14f6:	ce 01       	movw	r24, r28
    14f8:	8b 51       	subi	r24, 0x1B	; 27
    14fa:	9e 4f       	sbci	r25, 0xFE	; 254
    14fc:	9e 01       	movw	r18, r28
    14fe:	2b 51       	subi	r18, 0x1B	; 27
    1500:	3e 4f       	sbci	r19, 0xFE	; 254
    1502:	f9 01       	movw	r30, r18
    1504:	20 81       	ld	r18, Z
    1506:	31 81       	ldd	r19, Z+1	; 0x01
    1508:	21 50       	subi	r18, 0x01	; 1
    150a:	31 09       	sbc	r19, r1
    150c:	fc 01       	movw	r30, r24
    150e:	31 83       	std	Z+1, r19	; 0x01
    1510:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1512:	ce 01       	movw	r24, r28
    1514:	8b 51       	subi	r24, 0x1B	; 27
    1516:	9e 4f       	sbci	r25, 0xFE	; 254
    1518:	fc 01       	movw	r30, r24
    151a:	80 81       	ld	r24, Z
    151c:	91 81       	ldd	r25, Z+1	; 0x01
    151e:	89 2b       	or	r24, r25
    1520:	a1 f6       	brne	.-88     	; 0x14ca <__stack+0x3cb>
    1522:	2c c0       	rjmp	.+88     	; 0x157c <__stack+0x47d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1524:	8e 01       	movw	r16, r28
    1526:	0b 51       	subi	r16, 0x1B	; 27
    1528:	1e 4f       	sbci	r17, 0xFE	; 254
    152a:	ce 01       	movw	r24, r28
    152c:	8f 51       	subi	r24, 0x1F	; 31
    152e:	9e 4f       	sbci	r25, 0xFE	; 254
    1530:	fc 01       	movw	r30, r24
    1532:	60 81       	ld	r22, Z
    1534:	71 81       	ldd	r23, Z+1	; 0x01
    1536:	82 81       	ldd	r24, Z+2	; 0x02
    1538:	93 81       	ldd	r25, Z+3	; 0x03
    153a:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    153e:	dc 01       	movw	r26, r24
    1540:	cb 01       	movw	r24, r22
    1542:	f8 01       	movw	r30, r16
    1544:	91 83       	std	Z+1, r25	; 0x01
    1546:	80 83       	st	Z, r24
    1548:	ce 01       	movw	r24, r28
    154a:	87 51       	subi	r24, 0x17	; 23
    154c:	9e 4f       	sbci	r25, 0xFE	; 254
    154e:	9e 01       	movw	r18, r28
    1550:	2b 51       	subi	r18, 0x1B	; 27
    1552:	3e 4f       	sbci	r19, 0xFE	; 254
    1554:	f9 01       	movw	r30, r18
    1556:	20 81       	ld	r18, Z
    1558:	31 81       	ldd	r19, Z+1	; 0x01
    155a:	fc 01       	movw	r30, r24
    155c:	31 83       	std	Z+1, r19	; 0x01
    155e:	20 83       	st	Z, r18
    1560:	ce 01       	movw	r24, r28
    1562:	87 51       	subi	r24, 0x17	; 23
    1564:	9e 4f       	sbci	r25, 0xFE	; 254
    1566:	fc 01       	movw	r30, r24
    1568:	80 81       	ld	r24, Z
    156a:	91 81       	ldd	r25, Z+1	; 0x01
    156c:	01 97       	sbiw	r24, 0x01	; 1
    156e:	f1 f7       	brne	.-4      	; 0x156c <__stack+0x46d>
    1570:	9e 01       	movw	r18, r28
    1572:	27 51       	subi	r18, 0x17	; 23
    1574:	3e 4f       	sbci	r19, 0xFE	; 254
    1576:	f9 01       	movw	r30, r18
    1578:	91 83       	std	Z+1, r25	; 0x01
    157a:	80 83       	st	Z, r24
	_delay_ms(450);
	to_uARM("M2210 F380 T100\n");
    157c:	8a ef       	ldi	r24, 0xFA	; 250
    157e:	91 e0       	ldi	r25, 0x01	; 1
    1580:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    1584:	80 e0       	ldi	r24, 0x00	; 0
    1586:	90 e0       	ldi	r25, 0x00	; 0
    1588:	a8 ec       	ldi	r26, 0xC8	; 200
    158a:	b3 e4       	ldi	r27, 0x43	; 67
    158c:	89 a3       	std	Y+33, r24	; 0x21
    158e:	9a a3       	std	Y+34, r25	; 0x22
    1590:	ab a3       	std	Y+35, r26	; 0x23
    1592:	bc a3       	std	Y+36, r27	; 0x24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1594:	8e 01       	movw	r16, r28
    1596:	09 52       	subi	r16, 0x29	; 41
    1598:	1e 4f       	sbci	r17, 0xFE	; 254
    159a:	20 e0       	ldi	r18, 0x00	; 0
    159c:	30 e0       	ldi	r19, 0x00	; 0
    159e:	4a e7       	ldi	r20, 0x7A	; 122
    15a0:	55 e4       	ldi	r21, 0x45	; 69
    15a2:	69 a1       	ldd	r22, Y+33	; 0x21
    15a4:	7a a1       	ldd	r23, Y+34	; 0x22
    15a6:	8b a1       	ldd	r24, Y+35	; 0x23
    15a8:	9c a1       	ldd	r25, Y+36	; 0x24
    15aa:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    15ae:	dc 01       	movw	r26, r24
    15b0:	cb 01       	movw	r24, r22
    15b2:	f8 01       	movw	r30, r16
    15b4:	80 83       	st	Z, r24
    15b6:	91 83       	std	Z+1, r25	; 0x01
    15b8:	a2 83       	std	Z+2, r26	; 0x02
    15ba:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    15bc:	ce 01       	movw	r24, r28
    15be:	89 52       	subi	r24, 0x29	; 41
    15c0:	9e 4f       	sbci	r25, 0xFE	; 254
    15c2:	20 e0       	ldi	r18, 0x00	; 0
    15c4:	30 e0       	ldi	r19, 0x00	; 0
    15c6:	40 e8       	ldi	r20, 0x80	; 128
    15c8:	5f e3       	ldi	r21, 0x3F	; 63
    15ca:	fc 01       	movw	r30, r24
    15cc:	60 81       	ld	r22, Z
    15ce:	71 81       	ldd	r23, Z+1	; 0x01
    15d0:	82 81       	ldd	r24, Z+2	; 0x02
    15d2:	93 81       	ldd	r25, Z+3	; 0x03
    15d4:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    15d8:	88 23       	and	r24, r24
    15da:	4c f4       	brge	.+18     	; 0x15ee <__stack+0x4ef>
		__ticks = 1;
    15dc:	ce 01       	movw	r24, r28
    15de:	85 52       	subi	r24, 0x25	; 37
    15e0:	9e 4f       	sbci	r25, 0xFE	; 254
    15e2:	21 e0       	ldi	r18, 0x01	; 1
    15e4:	30 e0       	ldi	r19, 0x00	; 0
    15e6:	fc 01       	movw	r30, r24
    15e8:	31 83       	std	Z+1, r19	; 0x01
    15ea:	20 83       	st	Z, r18
    15ec:	69 c0       	rjmp	.+210    	; 0x16c0 <__stack+0x5c1>
	else if (__tmp > 65535)
    15ee:	ce 01       	movw	r24, r28
    15f0:	89 52       	subi	r24, 0x29	; 41
    15f2:	9e 4f       	sbci	r25, 0xFE	; 254
    15f4:	20 e0       	ldi	r18, 0x00	; 0
    15f6:	3f ef       	ldi	r19, 0xFF	; 255
    15f8:	4f e7       	ldi	r20, 0x7F	; 127
    15fa:	57 e4       	ldi	r21, 0x47	; 71
    15fc:	fc 01       	movw	r30, r24
    15fe:	60 81       	ld	r22, Z
    1600:	71 81       	ldd	r23, Z+1	; 0x01
    1602:	82 81       	ldd	r24, Z+2	; 0x02
    1604:	93 81       	ldd	r25, Z+3	; 0x03
    1606:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    160a:	18 16       	cp	r1, r24
    160c:	0c f0       	brlt	.+2      	; 0x1610 <__stack+0x511>
    160e:	46 c0       	rjmp	.+140    	; 0x169c <__stack+0x59d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1610:	20 e0       	ldi	r18, 0x00	; 0
    1612:	30 e0       	ldi	r19, 0x00	; 0
    1614:	40 e2       	ldi	r20, 0x20	; 32
    1616:	51 e4       	ldi	r21, 0x41	; 65
    1618:	69 a1       	ldd	r22, Y+33	; 0x21
    161a:	7a a1       	ldd	r23, Y+34	; 0x22
    161c:	8b a1       	ldd	r24, Y+35	; 0x23
    161e:	9c a1       	ldd	r25, Y+36	; 0x24
    1620:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    1624:	dc 01       	movw	r26, r24
    1626:	cb 01       	movw	r24, r22
    1628:	8e 01       	movw	r16, r28
    162a:	05 52       	subi	r16, 0x25	; 37
    162c:	1e 4f       	sbci	r17, 0xFE	; 254
    162e:	bc 01       	movw	r22, r24
    1630:	cd 01       	movw	r24, r26
    1632:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    1636:	dc 01       	movw	r26, r24
    1638:	cb 01       	movw	r24, r22
    163a:	f8 01       	movw	r30, r16
    163c:	91 83       	std	Z+1, r25	; 0x01
    163e:	80 83       	st	Z, r24
    1640:	24 c0       	rjmp	.+72     	; 0x168a <__stack+0x58b>
    1642:	ce 01       	movw	r24, r28
    1644:	83 52       	subi	r24, 0x23	; 35
    1646:	9e 4f       	sbci	r25, 0xFE	; 254
    1648:	20 e9       	ldi	r18, 0x90	; 144
    164a:	31 e0       	ldi	r19, 0x01	; 1
    164c:	fc 01       	movw	r30, r24
    164e:	31 83       	std	Z+1, r19	; 0x01
    1650:	20 83       	st	Z, r18
    1652:	ce 01       	movw	r24, r28
    1654:	83 52       	subi	r24, 0x23	; 35
    1656:	9e 4f       	sbci	r25, 0xFE	; 254
    1658:	fc 01       	movw	r30, r24
    165a:	80 81       	ld	r24, Z
    165c:	91 81       	ldd	r25, Z+1	; 0x01
    165e:	01 97       	sbiw	r24, 0x01	; 1
    1660:	f1 f7       	brne	.-4      	; 0x165e <__stack+0x55f>
    1662:	9e 01       	movw	r18, r28
    1664:	23 52       	subi	r18, 0x23	; 35
    1666:	3e 4f       	sbci	r19, 0xFE	; 254
    1668:	f9 01       	movw	r30, r18
    166a:	91 83       	std	Z+1, r25	; 0x01
    166c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    166e:	ce 01       	movw	r24, r28
    1670:	85 52       	subi	r24, 0x25	; 37
    1672:	9e 4f       	sbci	r25, 0xFE	; 254
    1674:	9e 01       	movw	r18, r28
    1676:	25 52       	subi	r18, 0x25	; 37
    1678:	3e 4f       	sbci	r19, 0xFE	; 254
    167a:	f9 01       	movw	r30, r18
    167c:	20 81       	ld	r18, Z
    167e:	31 81       	ldd	r19, Z+1	; 0x01
    1680:	21 50       	subi	r18, 0x01	; 1
    1682:	31 09       	sbc	r19, r1
    1684:	fc 01       	movw	r30, r24
    1686:	31 83       	std	Z+1, r19	; 0x01
    1688:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    168a:	ce 01       	movw	r24, r28
    168c:	85 52       	subi	r24, 0x25	; 37
    168e:	9e 4f       	sbci	r25, 0xFE	; 254
    1690:	fc 01       	movw	r30, r24
    1692:	80 81       	ld	r24, Z
    1694:	91 81       	ldd	r25, Z+1	; 0x01
    1696:	89 2b       	or	r24, r25
    1698:	a1 f6       	brne	.-88     	; 0x1642 <__stack+0x543>
    169a:	2c c0       	rjmp	.+88     	; 0x16f4 <__stack+0x5f5>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    169c:	8e 01       	movw	r16, r28
    169e:	05 52       	subi	r16, 0x25	; 37
    16a0:	1e 4f       	sbci	r17, 0xFE	; 254
    16a2:	ce 01       	movw	r24, r28
    16a4:	89 52       	subi	r24, 0x29	; 41
    16a6:	9e 4f       	sbci	r25, 0xFE	; 254
    16a8:	fc 01       	movw	r30, r24
    16aa:	60 81       	ld	r22, Z
    16ac:	71 81       	ldd	r23, Z+1	; 0x01
    16ae:	82 81       	ldd	r24, Z+2	; 0x02
    16b0:	93 81       	ldd	r25, Z+3	; 0x03
    16b2:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    16b6:	dc 01       	movw	r26, r24
    16b8:	cb 01       	movw	r24, r22
    16ba:	f8 01       	movw	r30, r16
    16bc:	91 83       	std	Z+1, r25	; 0x01
    16be:	80 83       	st	Z, r24
    16c0:	ce 01       	movw	r24, r28
    16c2:	81 52       	subi	r24, 0x21	; 33
    16c4:	9e 4f       	sbci	r25, 0xFE	; 254
    16c6:	9e 01       	movw	r18, r28
    16c8:	25 52       	subi	r18, 0x25	; 37
    16ca:	3e 4f       	sbci	r19, 0xFE	; 254
    16cc:	f9 01       	movw	r30, r18
    16ce:	20 81       	ld	r18, Z
    16d0:	31 81       	ldd	r19, Z+1	; 0x01
    16d2:	fc 01       	movw	r30, r24
    16d4:	31 83       	std	Z+1, r19	; 0x01
    16d6:	20 83       	st	Z, r18
    16d8:	ce 01       	movw	r24, r28
    16da:	81 52       	subi	r24, 0x21	; 33
    16dc:	9e 4f       	sbci	r25, 0xFE	; 254
    16de:	fc 01       	movw	r30, r24
    16e0:	80 81       	ld	r24, Z
    16e2:	91 81       	ldd	r25, Z+1	; 0x01
    16e4:	01 97       	sbiw	r24, 0x01	; 1
    16e6:	f1 f7       	brne	.-4      	; 0x16e4 <__stack+0x5e5>
    16e8:	9e 01       	movw	r18, r28
    16ea:	21 52       	subi	r18, 0x21	; 33
    16ec:	3e 4f       	sbci	r19, 0xFE	; 254
    16ee:	f9 01       	movw	r30, r18
    16f0:	91 83       	std	Z+1, r25	; 0x01
    16f2:	80 83       	st	Z, r24
	_delay_ms(400);
	to_uARM("M2210 F320 T100\n");
    16f4:	8b e0       	ldi	r24, 0x0B	; 11
    16f6:	92 e0       	ldi	r25, 0x02	; 2
    16f8:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    16fc:	80 e0       	ldi	r24, 0x00	; 0
    16fe:	90 e0       	ldi	r25, 0x00	; 0
    1700:	aa ef       	ldi	r26, 0xFA	; 250
    1702:	b3 e4       	ldi	r27, 0x43	; 67
    1704:	8d a3       	std	Y+37, r24	; 0x25
    1706:	9e a3       	std	Y+38, r25	; 0x26
    1708:	af a3       	std	Y+39, r26	; 0x27
    170a:	b8 a7       	std	Y+40, r27	; 0x28

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    170c:	8e 01       	movw	r16, r28
    170e:	03 53       	subi	r16, 0x33	; 51
    1710:	1e 4f       	sbci	r17, 0xFE	; 254
    1712:	20 e0       	ldi	r18, 0x00	; 0
    1714:	30 e0       	ldi	r19, 0x00	; 0
    1716:	4a e7       	ldi	r20, 0x7A	; 122
    1718:	55 e4       	ldi	r21, 0x45	; 69
    171a:	6d a1       	ldd	r22, Y+37	; 0x25
    171c:	7e a1       	ldd	r23, Y+38	; 0x26
    171e:	8f a1       	ldd	r24, Y+39	; 0x27
    1720:	98 a5       	ldd	r25, Y+40	; 0x28
    1722:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    1726:	dc 01       	movw	r26, r24
    1728:	cb 01       	movw	r24, r22
    172a:	f8 01       	movw	r30, r16
    172c:	80 83       	st	Z, r24
    172e:	91 83       	std	Z+1, r25	; 0x01
    1730:	a2 83       	std	Z+2, r26	; 0x02
    1732:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1734:	ce 01       	movw	r24, r28
    1736:	83 53       	subi	r24, 0x33	; 51
    1738:	9e 4f       	sbci	r25, 0xFE	; 254
    173a:	20 e0       	ldi	r18, 0x00	; 0
    173c:	30 e0       	ldi	r19, 0x00	; 0
    173e:	40 e8       	ldi	r20, 0x80	; 128
    1740:	5f e3       	ldi	r21, 0x3F	; 63
    1742:	fc 01       	movw	r30, r24
    1744:	60 81       	ld	r22, Z
    1746:	71 81       	ldd	r23, Z+1	; 0x01
    1748:	82 81       	ldd	r24, Z+2	; 0x02
    174a:	93 81       	ldd	r25, Z+3	; 0x03
    174c:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    1750:	88 23       	and	r24, r24
    1752:	4c f4       	brge	.+18     	; 0x1766 <__stack+0x667>
		__ticks = 1;
    1754:	ce 01       	movw	r24, r28
    1756:	8f 52       	subi	r24, 0x2F	; 47
    1758:	9e 4f       	sbci	r25, 0xFE	; 254
    175a:	21 e0       	ldi	r18, 0x01	; 1
    175c:	30 e0       	ldi	r19, 0x00	; 0
    175e:	fc 01       	movw	r30, r24
    1760:	31 83       	std	Z+1, r19	; 0x01
    1762:	20 83       	st	Z, r18
    1764:	69 c0       	rjmp	.+210    	; 0x1838 <__stack+0x739>
	else if (__tmp > 65535)
    1766:	ce 01       	movw	r24, r28
    1768:	83 53       	subi	r24, 0x33	; 51
    176a:	9e 4f       	sbci	r25, 0xFE	; 254
    176c:	20 e0       	ldi	r18, 0x00	; 0
    176e:	3f ef       	ldi	r19, 0xFF	; 255
    1770:	4f e7       	ldi	r20, 0x7F	; 127
    1772:	57 e4       	ldi	r21, 0x47	; 71
    1774:	fc 01       	movw	r30, r24
    1776:	60 81       	ld	r22, Z
    1778:	71 81       	ldd	r23, Z+1	; 0x01
    177a:	82 81       	ldd	r24, Z+2	; 0x02
    177c:	93 81       	ldd	r25, Z+3	; 0x03
    177e:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    1782:	18 16       	cp	r1, r24
    1784:	0c f0       	brlt	.+2      	; 0x1788 <__stack+0x689>
    1786:	46 c0       	rjmp	.+140    	; 0x1814 <__stack+0x715>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1788:	20 e0       	ldi	r18, 0x00	; 0
    178a:	30 e0       	ldi	r19, 0x00	; 0
    178c:	40 e2       	ldi	r20, 0x20	; 32
    178e:	51 e4       	ldi	r21, 0x41	; 65
    1790:	6d a1       	ldd	r22, Y+37	; 0x25
    1792:	7e a1       	ldd	r23, Y+38	; 0x26
    1794:	8f a1       	ldd	r24, Y+39	; 0x27
    1796:	98 a5       	ldd	r25, Y+40	; 0x28
    1798:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    179c:	dc 01       	movw	r26, r24
    179e:	cb 01       	movw	r24, r22
    17a0:	8e 01       	movw	r16, r28
    17a2:	0f 52       	subi	r16, 0x2F	; 47
    17a4:	1e 4f       	sbci	r17, 0xFE	; 254
    17a6:	bc 01       	movw	r22, r24
    17a8:	cd 01       	movw	r24, r26
    17aa:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    17ae:	dc 01       	movw	r26, r24
    17b0:	cb 01       	movw	r24, r22
    17b2:	f8 01       	movw	r30, r16
    17b4:	91 83       	std	Z+1, r25	; 0x01
    17b6:	80 83       	st	Z, r24
    17b8:	24 c0       	rjmp	.+72     	; 0x1802 <__stack+0x703>
    17ba:	ce 01       	movw	r24, r28
    17bc:	8d 52       	subi	r24, 0x2D	; 45
    17be:	9e 4f       	sbci	r25, 0xFE	; 254
    17c0:	20 e9       	ldi	r18, 0x90	; 144
    17c2:	31 e0       	ldi	r19, 0x01	; 1
    17c4:	fc 01       	movw	r30, r24
    17c6:	31 83       	std	Z+1, r19	; 0x01
    17c8:	20 83       	st	Z, r18
    17ca:	ce 01       	movw	r24, r28
    17cc:	8d 52       	subi	r24, 0x2D	; 45
    17ce:	9e 4f       	sbci	r25, 0xFE	; 254
    17d0:	fc 01       	movw	r30, r24
    17d2:	80 81       	ld	r24, Z
    17d4:	91 81       	ldd	r25, Z+1	; 0x01
    17d6:	01 97       	sbiw	r24, 0x01	; 1
    17d8:	f1 f7       	brne	.-4      	; 0x17d6 <__stack+0x6d7>
    17da:	9e 01       	movw	r18, r28
    17dc:	2d 52       	subi	r18, 0x2D	; 45
    17de:	3e 4f       	sbci	r19, 0xFE	; 254
    17e0:	f9 01       	movw	r30, r18
    17e2:	91 83       	std	Z+1, r25	; 0x01
    17e4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17e6:	ce 01       	movw	r24, r28
    17e8:	8f 52       	subi	r24, 0x2F	; 47
    17ea:	9e 4f       	sbci	r25, 0xFE	; 254
    17ec:	9e 01       	movw	r18, r28
    17ee:	2f 52       	subi	r18, 0x2F	; 47
    17f0:	3e 4f       	sbci	r19, 0xFE	; 254
    17f2:	f9 01       	movw	r30, r18
    17f4:	20 81       	ld	r18, Z
    17f6:	31 81       	ldd	r19, Z+1	; 0x01
    17f8:	21 50       	subi	r18, 0x01	; 1
    17fa:	31 09       	sbc	r19, r1
    17fc:	fc 01       	movw	r30, r24
    17fe:	31 83       	std	Z+1, r19	; 0x01
    1800:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1802:	ce 01       	movw	r24, r28
    1804:	8f 52       	subi	r24, 0x2F	; 47
    1806:	9e 4f       	sbci	r25, 0xFE	; 254
    1808:	fc 01       	movw	r30, r24
    180a:	80 81       	ld	r24, Z
    180c:	91 81       	ldd	r25, Z+1	; 0x01
    180e:	89 2b       	or	r24, r25
    1810:	a1 f6       	brne	.-88     	; 0x17ba <__stack+0x6bb>
    1812:	2c c0       	rjmp	.+88     	; 0x186c <__stack+0x76d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1814:	8e 01       	movw	r16, r28
    1816:	0f 52       	subi	r16, 0x2F	; 47
    1818:	1e 4f       	sbci	r17, 0xFE	; 254
    181a:	ce 01       	movw	r24, r28
    181c:	83 53       	subi	r24, 0x33	; 51
    181e:	9e 4f       	sbci	r25, 0xFE	; 254
    1820:	fc 01       	movw	r30, r24
    1822:	60 81       	ld	r22, Z
    1824:	71 81       	ldd	r23, Z+1	; 0x01
    1826:	82 81       	ldd	r24, Z+2	; 0x02
    1828:	93 81       	ldd	r25, Z+3	; 0x03
    182a:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    182e:	dc 01       	movw	r26, r24
    1830:	cb 01       	movw	r24, r22
    1832:	f8 01       	movw	r30, r16
    1834:	91 83       	std	Z+1, r25	; 0x01
    1836:	80 83       	st	Z, r24
    1838:	ce 01       	movw	r24, r28
    183a:	8b 52       	subi	r24, 0x2B	; 43
    183c:	9e 4f       	sbci	r25, 0xFE	; 254
    183e:	9e 01       	movw	r18, r28
    1840:	2f 52       	subi	r18, 0x2F	; 47
    1842:	3e 4f       	sbci	r19, 0xFE	; 254
    1844:	f9 01       	movw	r30, r18
    1846:	20 81       	ld	r18, Z
    1848:	31 81       	ldd	r19, Z+1	; 0x01
    184a:	fc 01       	movw	r30, r24
    184c:	31 83       	std	Z+1, r19	; 0x01
    184e:	20 83       	st	Z, r18
    1850:	ce 01       	movw	r24, r28
    1852:	8b 52       	subi	r24, 0x2B	; 43
    1854:	9e 4f       	sbci	r25, 0xFE	; 254
    1856:	fc 01       	movw	r30, r24
    1858:	80 81       	ld	r24, Z
    185a:	91 81       	ldd	r25, Z+1	; 0x01
    185c:	01 97       	sbiw	r24, 0x01	; 1
    185e:	f1 f7       	brne	.-4      	; 0x185c <__stack+0x75d>
    1860:	9e 01       	movw	r18, r28
    1862:	2b 52       	subi	r18, 0x2B	; 43
    1864:	3e 4f       	sbci	r19, 0xFE	; 254
    1866:	f9 01       	movw	r30, r18
    1868:	91 83       	std	Z+1, r25	; 0x01
    186a:	80 83       	st	Z, r24
	_delay_ms(500);
	to_uARM("M2210 F440 T100\n");
    186c:	8c e1       	ldi	r24, 0x1C	; 28
    186e:	92 e0       	ldi	r25, 0x02	; 2
    1870:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    1874:	80 e0       	ldi	r24, 0x00	; 0
    1876:	90 e0       	ldi	r25, 0x00	; 0
    1878:	a6 e9       	ldi	r26, 0x96	; 150
    187a:	b3 e4       	ldi	r27, 0x43	; 67
    187c:	89 a7       	std	Y+41, r24	; 0x29
    187e:	9a a7       	std	Y+42, r25	; 0x2a
    1880:	ab a7       	std	Y+43, r26	; 0x2b
    1882:	bc a7       	std	Y+44, r27	; 0x2c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1884:	8e 01       	movw	r16, r28
    1886:	0d 53       	subi	r16, 0x3D	; 61
    1888:	1e 4f       	sbci	r17, 0xFE	; 254
    188a:	20 e0       	ldi	r18, 0x00	; 0
    188c:	30 e0       	ldi	r19, 0x00	; 0
    188e:	4a e7       	ldi	r20, 0x7A	; 122
    1890:	55 e4       	ldi	r21, 0x45	; 69
    1892:	69 a5       	ldd	r22, Y+41	; 0x29
    1894:	7a a5       	ldd	r23, Y+42	; 0x2a
    1896:	8b a5       	ldd	r24, Y+43	; 0x2b
    1898:	9c a5       	ldd	r25, Y+44	; 0x2c
    189a:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    189e:	dc 01       	movw	r26, r24
    18a0:	cb 01       	movw	r24, r22
    18a2:	f8 01       	movw	r30, r16
    18a4:	80 83       	st	Z, r24
    18a6:	91 83       	std	Z+1, r25	; 0x01
    18a8:	a2 83       	std	Z+2, r26	; 0x02
    18aa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    18ac:	ce 01       	movw	r24, r28
    18ae:	8d 53       	subi	r24, 0x3D	; 61
    18b0:	9e 4f       	sbci	r25, 0xFE	; 254
    18b2:	20 e0       	ldi	r18, 0x00	; 0
    18b4:	30 e0       	ldi	r19, 0x00	; 0
    18b6:	40 e8       	ldi	r20, 0x80	; 128
    18b8:	5f e3       	ldi	r21, 0x3F	; 63
    18ba:	fc 01       	movw	r30, r24
    18bc:	60 81       	ld	r22, Z
    18be:	71 81       	ldd	r23, Z+1	; 0x01
    18c0:	82 81       	ldd	r24, Z+2	; 0x02
    18c2:	93 81       	ldd	r25, Z+3	; 0x03
    18c4:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    18c8:	88 23       	and	r24, r24
    18ca:	4c f4       	brge	.+18     	; 0x18de <__stack+0x7df>
		__ticks = 1;
    18cc:	ce 01       	movw	r24, r28
    18ce:	89 53       	subi	r24, 0x39	; 57
    18d0:	9e 4f       	sbci	r25, 0xFE	; 254
    18d2:	21 e0       	ldi	r18, 0x01	; 1
    18d4:	30 e0       	ldi	r19, 0x00	; 0
    18d6:	fc 01       	movw	r30, r24
    18d8:	31 83       	std	Z+1, r19	; 0x01
    18da:	20 83       	st	Z, r18
    18dc:	69 c0       	rjmp	.+210    	; 0x19b0 <__stack+0x8b1>
	else if (__tmp > 65535)
    18de:	ce 01       	movw	r24, r28
    18e0:	8d 53       	subi	r24, 0x3D	; 61
    18e2:	9e 4f       	sbci	r25, 0xFE	; 254
    18e4:	20 e0       	ldi	r18, 0x00	; 0
    18e6:	3f ef       	ldi	r19, 0xFF	; 255
    18e8:	4f e7       	ldi	r20, 0x7F	; 127
    18ea:	57 e4       	ldi	r21, 0x47	; 71
    18ec:	fc 01       	movw	r30, r24
    18ee:	60 81       	ld	r22, Z
    18f0:	71 81       	ldd	r23, Z+1	; 0x01
    18f2:	82 81       	ldd	r24, Z+2	; 0x02
    18f4:	93 81       	ldd	r25, Z+3	; 0x03
    18f6:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    18fa:	18 16       	cp	r1, r24
    18fc:	0c f0       	brlt	.+2      	; 0x1900 <__stack+0x801>
    18fe:	46 c0       	rjmp	.+140    	; 0x198c <__stack+0x88d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1900:	20 e0       	ldi	r18, 0x00	; 0
    1902:	30 e0       	ldi	r19, 0x00	; 0
    1904:	40 e2       	ldi	r20, 0x20	; 32
    1906:	51 e4       	ldi	r21, 0x41	; 65
    1908:	69 a5       	ldd	r22, Y+41	; 0x29
    190a:	7a a5       	ldd	r23, Y+42	; 0x2a
    190c:	8b a5       	ldd	r24, Y+43	; 0x2b
    190e:	9c a5       	ldd	r25, Y+44	; 0x2c
    1910:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    1914:	dc 01       	movw	r26, r24
    1916:	cb 01       	movw	r24, r22
    1918:	8e 01       	movw	r16, r28
    191a:	09 53       	subi	r16, 0x39	; 57
    191c:	1e 4f       	sbci	r17, 0xFE	; 254
    191e:	bc 01       	movw	r22, r24
    1920:	cd 01       	movw	r24, r26
    1922:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    1926:	dc 01       	movw	r26, r24
    1928:	cb 01       	movw	r24, r22
    192a:	f8 01       	movw	r30, r16
    192c:	91 83       	std	Z+1, r25	; 0x01
    192e:	80 83       	st	Z, r24
    1930:	24 c0       	rjmp	.+72     	; 0x197a <__stack+0x87b>
    1932:	ce 01       	movw	r24, r28
    1934:	87 53       	subi	r24, 0x37	; 55
    1936:	9e 4f       	sbci	r25, 0xFE	; 254
    1938:	20 e9       	ldi	r18, 0x90	; 144
    193a:	31 e0       	ldi	r19, 0x01	; 1
    193c:	fc 01       	movw	r30, r24
    193e:	31 83       	std	Z+1, r19	; 0x01
    1940:	20 83       	st	Z, r18
    1942:	ce 01       	movw	r24, r28
    1944:	87 53       	subi	r24, 0x37	; 55
    1946:	9e 4f       	sbci	r25, 0xFE	; 254
    1948:	fc 01       	movw	r30, r24
    194a:	80 81       	ld	r24, Z
    194c:	91 81       	ldd	r25, Z+1	; 0x01
    194e:	01 97       	sbiw	r24, 0x01	; 1
    1950:	f1 f7       	brne	.-4      	; 0x194e <__stack+0x84f>
    1952:	9e 01       	movw	r18, r28
    1954:	27 53       	subi	r18, 0x37	; 55
    1956:	3e 4f       	sbci	r19, 0xFE	; 254
    1958:	f9 01       	movw	r30, r18
    195a:	91 83       	std	Z+1, r25	; 0x01
    195c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    195e:	ce 01       	movw	r24, r28
    1960:	89 53       	subi	r24, 0x39	; 57
    1962:	9e 4f       	sbci	r25, 0xFE	; 254
    1964:	9e 01       	movw	r18, r28
    1966:	29 53       	subi	r18, 0x39	; 57
    1968:	3e 4f       	sbci	r19, 0xFE	; 254
    196a:	f9 01       	movw	r30, r18
    196c:	20 81       	ld	r18, Z
    196e:	31 81       	ldd	r19, Z+1	; 0x01
    1970:	21 50       	subi	r18, 0x01	; 1
    1972:	31 09       	sbc	r19, r1
    1974:	fc 01       	movw	r30, r24
    1976:	31 83       	std	Z+1, r19	; 0x01
    1978:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    197a:	ce 01       	movw	r24, r28
    197c:	89 53       	subi	r24, 0x39	; 57
    197e:	9e 4f       	sbci	r25, 0xFE	; 254
    1980:	fc 01       	movw	r30, r24
    1982:	80 81       	ld	r24, Z
    1984:	91 81       	ldd	r25, Z+1	; 0x01
    1986:	89 2b       	or	r24, r25
    1988:	a1 f6       	brne	.-88     	; 0x1932 <__stack+0x833>
    198a:	2c c0       	rjmp	.+88     	; 0x19e4 <__stack+0x8e5>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    198c:	8e 01       	movw	r16, r28
    198e:	09 53       	subi	r16, 0x39	; 57
    1990:	1e 4f       	sbci	r17, 0xFE	; 254
    1992:	ce 01       	movw	r24, r28
    1994:	8d 53       	subi	r24, 0x3D	; 61
    1996:	9e 4f       	sbci	r25, 0xFE	; 254
    1998:	fc 01       	movw	r30, r24
    199a:	60 81       	ld	r22, Z
    199c:	71 81       	ldd	r23, Z+1	; 0x01
    199e:	82 81       	ldd	r24, Z+2	; 0x02
    19a0:	93 81       	ldd	r25, Z+3	; 0x03
    19a2:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    19a6:	dc 01       	movw	r26, r24
    19a8:	cb 01       	movw	r24, r22
    19aa:	f8 01       	movw	r30, r16
    19ac:	91 83       	std	Z+1, r25	; 0x01
    19ae:	80 83       	st	Z, r24
    19b0:	ce 01       	movw	r24, r28
    19b2:	85 53       	subi	r24, 0x35	; 53
    19b4:	9e 4f       	sbci	r25, 0xFE	; 254
    19b6:	9e 01       	movw	r18, r28
    19b8:	29 53       	subi	r18, 0x39	; 57
    19ba:	3e 4f       	sbci	r19, 0xFE	; 254
    19bc:	f9 01       	movw	r30, r18
    19be:	20 81       	ld	r18, Z
    19c0:	31 81       	ldd	r19, Z+1	; 0x01
    19c2:	fc 01       	movw	r30, r24
    19c4:	31 83       	std	Z+1, r19	; 0x01
    19c6:	20 83       	st	Z, r18
    19c8:	ce 01       	movw	r24, r28
    19ca:	85 53       	subi	r24, 0x35	; 53
    19cc:	9e 4f       	sbci	r25, 0xFE	; 254
    19ce:	fc 01       	movw	r30, r24
    19d0:	80 81       	ld	r24, Z
    19d2:	91 81       	ldd	r25, Z+1	; 0x01
    19d4:	01 97       	sbiw	r24, 0x01	; 1
    19d6:	f1 f7       	brne	.-4      	; 0x19d4 <__stack+0x8d5>
    19d8:	9e 01       	movw	r18, r28
    19da:	25 53       	subi	r18, 0x35	; 53
    19dc:	3e 4f       	sbci	r19, 0xFE	; 254
    19de:	f9 01       	movw	r30, r18
    19e0:	91 83       	std	Z+1, r25	; 0x01
    19e2:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F480 T80\n");
    19e4:	8d e2       	ldi	r24, 0x2D	; 45
    19e6:	92 e0       	ldi	r25, 0x02	; 2
    19e8:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    19ec:	80 e0       	ldi	r24, 0x00	; 0
    19ee:	90 e0       	ldi	r25, 0x00	; 0
    19f0:	a5 ea       	ldi	r26, 0xA5	; 165
    19f2:	b3 e4       	ldi	r27, 0x43	; 67
    19f4:	8d a7       	std	Y+45, r24	; 0x2d
    19f6:	9e a7       	std	Y+46, r25	; 0x2e
    19f8:	af a7       	std	Y+47, r26	; 0x2f
    19fa:	b8 ab       	std	Y+48, r27	; 0x30

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    19fc:	8e 01       	movw	r16, r28
    19fe:	07 54       	subi	r16, 0x47	; 71
    1a00:	1e 4f       	sbci	r17, 0xFE	; 254
    1a02:	20 e0       	ldi	r18, 0x00	; 0
    1a04:	30 e0       	ldi	r19, 0x00	; 0
    1a06:	4a e7       	ldi	r20, 0x7A	; 122
    1a08:	55 e4       	ldi	r21, 0x45	; 69
    1a0a:	6d a5       	ldd	r22, Y+45	; 0x2d
    1a0c:	7e a5       	ldd	r23, Y+46	; 0x2e
    1a0e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1a10:	98 a9       	ldd	r25, Y+48	; 0x30
    1a12:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    1a16:	dc 01       	movw	r26, r24
    1a18:	cb 01       	movw	r24, r22
    1a1a:	f8 01       	movw	r30, r16
    1a1c:	80 83       	st	Z, r24
    1a1e:	91 83       	std	Z+1, r25	; 0x01
    1a20:	a2 83       	std	Z+2, r26	; 0x02
    1a22:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1a24:	ce 01       	movw	r24, r28
    1a26:	87 54       	subi	r24, 0x47	; 71
    1a28:	9e 4f       	sbci	r25, 0xFE	; 254
    1a2a:	20 e0       	ldi	r18, 0x00	; 0
    1a2c:	30 e0       	ldi	r19, 0x00	; 0
    1a2e:	40 e8       	ldi	r20, 0x80	; 128
    1a30:	5f e3       	ldi	r21, 0x3F	; 63
    1a32:	fc 01       	movw	r30, r24
    1a34:	60 81       	ld	r22, Z
    1a36:	71 81       	ldd	r23, Z+1	; 0x01
    1a38:	82 81       	ldd	r24, Z+2	; 0x02
    1a3a:	93 81       	ldd	r25, Z+3	; 0x03
    1a3c:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    1a40:	88 23       	and	r24, r24
    1a42:	4c f4       	brge	.+18     	; 0x1a56 <__stack+0x957>
		__ticks = 1;
    1a44:	ce 01       	movw	r24, r28
    1a46:	83 54       	subi	r24, 0x43	; 67
    1a48:	9e 4f       	sbci	r25, 0xFE	; 254
    1a4a:	21 e0       	ldi	r18, 0x01	; 1
    1a4c:	30 e0       	ldi	r19, 0x00	; 0
    1a4e:	fc 01       	movw	r30, r24
    1a50:	31 83       	std	Z+1, r19	; 0x01
    1a52:	20 83       	st	Z, r18
    1a54:	69 c0       	rjmp	.+210    	; 0x1b28 <__stack+0xa29>
	else if (__tmp > 65535)
    1a56:	ce 01       	movw	r24, r28
    1a58:	87 54       	subi	r24, 0x47	; 71
    1a5a:	9e 4f       	sbci	r25, 0xFE	; 254
    1a5c:	20 e0       	ldi	r18, 0x00	; 0
    1a5e:	3f ef       	ldi	r19, 0xFF	; 255
    1a60:	4f e7       	ldi	r20, 0x7F	; 127
    1a62:	57 e4       	ldi	r21, 0x47	; 71
    1a64:	fc 01       	movw	r30, r24
    1a66:	60 81       	ld	r22, Z
    1a68:	71 81       	ldd	r23, Z+1	; 0x01
    1a6a:	82 81       	ldd	r24, Z+2	; 0x02
    1a6c:	93 81       	ldd	r25, Z+3	; 0x03
    1a6e:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    1a72:	18 16       	cp	r1, r24
    1a74:	0c f0       	brlt	.+2      	; 0x1a78 <__stack+0x979>
    1a76:	46 c0       	rjmp	.+140    	; 0x1b04 <__stack+0xa05>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a78:	20 e0       	ldi	r18, 0x00	; 0
    1a7a:	30 e0       	ldi	r19, 0x00	; 0
    1a7c:	40 e2       	ldi	r20, 0x20	; 32
    1a7e:	51 e4       	ldi	r21, 0x41	; 65
    1a80:	6d a5       	ldd	r22, Y+45	; 0x2d
    1a82:	7e a5       	ldd	r23, Y+46	; 0x2e
    1a84:	8f a5       	ldd	r24, Y+47	; 0x2f
    1a86:	98 a9       	ldd	r25, Y+48	; 0x30
    1a88:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    1a8c:	dc 01       	movw	r26, r24
    1a8e:	cb 01       	movw	r24, r22
    1a90:	8e 01       	movw	r16, r28
    1a92:	03 54       	subi	r16, 0x43	; 67
    1a94:	1e 4f       	sbci	r17, 0xFE	; 254
    1a96:	bc 01       	movw	r22, r24
    1a98:	cd 01       	movw	r24, r26
    1a9a:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    1a9e:	dc 01       	movw	r26, r24
    1aa0:	cb 01       	movw	r24, r22
    1aa2:	f8 01       	movw	r30, r16
    1aa4:	91 83       	std	Z+1, r25	; 0x01
    1aa6:	80 83       	st	Z, r24
    1aa8:	24 c0       	rjmp	.+72     	; 0x1af2 <__stack+0x9f3>
    1aaa:	ce 01       	movw	r24, r28
    1aac:	81 54       	subi	r24, 0x41	; 65
    1aae:	9e 4f       	sbci	r25, 0xFE	; 254
    1ab0:	20 e9       	ldi	r18, 0x90	; 144
    1ab2:	31 e0       	ldi	r19, 0x01	; 1
    1ab4:	fc 01       	movw	r30, r24
    1ab6:	31 83       	std	Z+1, r19	; 0x01
    1ab8:	20 83       	st	Z, r18
    1aba:	ce 01       	movw	r24, r28
    1abc:	81 54       	subi	r24, 0x41	; 65
    1abe:	9e 4f       	sbci	r25, 0xFE	; 254
    1ac0:	fc 01       	movw	r30, r24
    1ac2:	80 81       	ld	r24, Z
    1ac4:	91 81       	ldd	r25, Z+1	; 0x01
    1ac6:	01 97       	sbiw	r24, 0x01	; 1
    1ac8:	f1 f7       	brne	.-4      	; 0x1ac6 <__stack+0x9c7>
    1aca:	9e 01       	movw	r18, r28
    1acc:	21 54       	subi	r18, 0x41	; 65
    1ace:	3e 4f       	sbci	r19, 0xFE	; 254
    1ad0:	f9 01       	movw	r30, r18
    1ad2:	91 83       	std	Z+1, r25	; 0x01
    1ad4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ad6:	ce 01       	movw	r24, r28
    1ad8:	83 54       	subi	r24, 0x43	; 67
    1ada:	9e 4f       	sbci	r25, 0xFE	; 254
    1adc:	9e 01       	movw	r18, r28
    1ade:	23 54       	subi	r18, 0x43	; 67
    1ae0:	3e 4f       	sbci	r19, 0xFE	; 254
    1ae2:	f9 01       	movw	r30, r18
    1ae4:	20 81       	ld	r18, Z
    1ae6:	31 81       	ldd	r19, Z+1	; 0x01
    1ae8:	21 50       	subi	r18, 0x01	; 1
    1aea:	31 09       	sbc	r19, r1
    1aec:	fc 01       	movw	r30, r24
    1aee:	31 83       	std	Z+1, r19	; 0x01
    1af0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1af2:	ce 01       	movw	r24, r28
    1af4:	83 54       	subi	r24, 0x43	; 67
    1af6:	9e 4f       	sbci	r25, 0xFE	; 254
    1af8:	fc 01       	movw	r30, r24
    1afa:	80 81       	ld	r24, Z
    1afc:	91 81       	ldd	r25, Z+1	; 0x01
    1afe:	89 2b       	or	r24, r25
    1b00:	a1 f6       	brne	.-88     	; 0x1aaa <__stack+0x9ab>
    1b02:	2c c0       	rjmp	.+88     	; 0x1b5c <__stack+0xa5d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b04:	8e 01       	movw	r16, r28
    1b06:	03 54       	subi	r16, 0x43	; 67
    1b08:	1e 4f       	sbci	r17, 0xFE	; 254
    1b0a:	ce 01       	movw	r24, r28
    1b0c:	87 54       	subi	r24, 0x47	; 71
    1b0e:	9e 4f       	sbci	r25, 0xFE	; 254
    1b10:	fc 01       	movw	r30, r24
    1b12:	60 81       	ld	r22, Z
    1b14:	71 81       	ldd	r23, Z+1	; 0x01
    1b16:	82 81       	ldd	r24, Z+2	; 0x02
    1b18:	93 81       	ldd	r25, Z+3	; 0x03
    1b1a:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    1b1e:	dc 01       	movw	r26, r24
    1b20:	cb 01       	movw	r24, r22
    1b22:	f8 01       	movw	r30, r16
    1b24:	91 83       	std	Z+1, r25	; 0x01
    1b26:	80 83       	st	Z, r24
    1b28:	ce 01       	movw	r24, r28
    1b2a:	8f 53       	subi	r24, 0x3F	; 63
    1b2c:	9e 4f       	sbci	r25, 0xFE	; 254
    1b2e:	9e 01       	movw	r18, r28
    1b30:	23 54       	subi	r18, 0x43	; 67
    1b32:	3e 4f       	sbci	r19, 0xFE	; 254
    1b34:	f9 01       	movw	r30, r18
    1b36:	20 81       	ld	r18, Z
    1b38:	31 81       	ldd	r19, Z+1	; 0x01
    1b3a:	fc 01       	movw	r30, r24
    1b3c:	31 83       	std	Z+1, r19	; 0x01
    1b3e:	20 83       	st	Z, r18
    1b40:	ce 01       	movw	r24, r28
    1b42:	8f 53       	subi	r24, 0x3F	; 63
    1b44:	9e 4f       	sbci	r25, 0xFE	; 254
    1b46:	fc 01       	movw	r30, r24
    1b48:	80 81       	ld	r24, Z
    1b4a:	91 81       	ldd	r25, Z+1	; 0x01
    1b4c:	01 97       	sbiw	r24, 0x01	; 1
    1b4e:	f1 f7       	brne	.-4      	; 0x1b4c <__stack+0xa4d>
    1b50:	9e 01       	movw	r18, r28
    1b52:	2f 53       	subi	r18, 0x3F	; 63
    1b54:	3e 4f       	sbci	r19, 0xFE	; 254
    1b56:	f9 01       	movw	r30, r18
    1b58:	91 83       	std	Z+1, r25	; 0x01
    1b5a:	80 83       	st	Z, r24
	_delay_ms(330);
	to_uARM("M2210 F450 T100\n");
    1b5c:	8d e3       	ldi	r24, 0x3D	; 61
    1b5e:	92 e0       	ldi	r25, 0x02	; 2
    1b60:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    1b64:	80 e0       	ldi	r24, 0x00	; 0
    1b66:	90 e0       	ldi	r25, 0x00	; 0
    1b68:	a6 e1       	ldi	r26, 0x16	; 22
    1b6a:	b3 e4       	ldi	r27, 0x43	; 67
    1b6c:	89 ab       	std	Y+49, r24	; 0x31
    1b6e:	9a ab       	std	Y+50, r25	; 0x32
    1b70:	ab ab       	std	Y+51, r26	; 0x33
    1b72:	bc ab       	std	Y+52, r27	; 0x34

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1b74:	8e 01       	movw	r16, r28
    1b76:	01 55       	subi	r16, 0x51	; 81
    1b78:	1e 4f       	sbci	r17, 0xFE	; 254
    1b7a:	20 e0       	ldi	r18, 0x00	; 0
    1b7c:	30 e0       	ldi	r19, 0x00	; 0
    1b7e:	4a e7       	ldi	r20, 0x7A	; 122
    1b80:	55 e4       	ldi	r21, 0x45	; 69
    1b82:	69 a9       	ldd	r22, Y+49	; 0x31
    1b84:	7a a9       	ldd	r23, Y+50	; 0x32
    1b86:	8b a9       	ldd	r24, Y+51	; 0x33
    1b88:	9c a9       	ldd	r25, Y+52	; 0x34
    1b8a:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    1b8e:	dc 01       	movw	r26, r24
    1b90:	cb 01       	movw	r24, r22
    1b92:	f8 01       	movw	r30, r16
    1b94:	80 83       	st	Z, r24
    1b96:	91 83       	std	Z+1, r25	; 0x01
    1b98:	a2 83       	std	Z+2, r26	; 0x02
    1b9a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b9c:	ce 01       	movw	r24, r28
    1b9e:	81 55       	subi	r24, 0x51	; 81
    1ba0:	9e 4f       	sbci	r25, 0xFE	; 254
    1ba2:	20 e0       	ldi	r18, 0x00	; 0
    1ba4:	30 e0       	ldi	r19, 0x00	; 0
    1ba6:	40 e8       	ldi	r20, 0x80	; 128
    1ba8:	5f e3       	ldi	r21, 0x3F	; 63
    1baa:	fc 01       	movw	r30, r24
    1bac:	60 81       	ld	r22, Z
    1bae:	71 81       	ldd	r23, Z+1	; 0x01
    1bb0:	82 81       	ldd	r24, Z+2	; 0x02
    1bb2:	93 81       	ldd	r25, Z+3	; 0x03
    1bb4:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    1bb8:	88 23       	and	r24, r24
    1bba:	4c f4       	brge	.+18     	; 0x1bce <__stack+0xacf>
		__ticks = 1;
    1bbc:	ce 01       	movw	r24, r28
    1bbe:	8d 54       	subi	r24, 0x4D	; 77
    1bc0:	9e 4f       	sbci	r25, 0xFE	; 254
    1bc2:	21 e0       	ldi	r18, 0x01	; 1
    1bc4:	30 e0       	ldi	r19, 0x00	; 0
    1bc6:	fc 01       	movw	r30, r24
    1bc8:	31 83       	std	Z+1, r19	; 0x01
    1bca:	20 83       	st	Z, r18
    1bcc:	69 c0       	rjmp	.+210    	; 0x1ca0 <__stack+0xba1>
	else if (__tmp > 65535)
    1bce:	ce 01       	movw	r24, r28
    1bd0:	81 55       	subi	r24, 0x51	; 81
    1bd2:	9e 4f       	sbci	r25, 0xFE	; 254
    1bd4:	20 e0       	ldi	r18, 0x00	; 0
    1bd6:	3f ef       	ldi	r19, 0xFF	; 255
    1bd8:	4f e7       	ldi	r20, 0x7F	; 127
    1bda:	57 e4       	ldi	r21, 0x47	; 71
    1bdc:	fc 01       	movw	r30, r24
    1bde:	60 81       	ld	r22, Z
    1be0:	71 81       	ldd	r23, Z+1	; 0x01
    1be2:	82 81       	ldd	r24, Z+2	; 0x02
    1be4:	93 81       	ldd	r25, Z+3	; 0x03
    1be6:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    1bea:	18 16       	cp	r1, r24
    1bec:	0c f0       	brlt	.+2      	; 0x1bf0 <__stack+0xaf1>
    1bee:	46 c0       	rjmp	.+140    	; 0x1c7c <__stack+0xb7d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1bf0:	20 e0       	ldi	r18, 0x00	; 0
    1bf2:	30 e0       	ldi	r19, 0x00	; 0
    1bf4:	40 e2       	ldi	r20, 0x20	; 32
    1bf6:	51 e4       	ldi	r21, 0x41	; 65
    1bf8:	69 a9       	ldd	r22, Y+49	; 0x31
    1bfa:	7a a9       	ldd	r23, Y+50	; 0x32
    1bfc:	8b a9       	ldd	r24, Y+51	; 0x33
    1bfe:	9c a9       	ldd	r25, Y+52	; 0x34
    1c00:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    1c04:	dc 01       	movw	r26, r24
    1c06:	cb 01       	movw	r24, r22
    1c08:	8e 01       	movw	r16, r28
    1c0a:	0d 54       	subi	r16, 0x4D	; 77
    1c0c:	1e 4f       	sbci	r17, 0xFE	; 254
    1c0e:	bc 01       	movw	r22, r24
    1c10:	cd 01       	movw	r24, r26
    1c12:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    1c16:	dc 01       	movw	r26, r24
    1c18:	cb 01       	movw	r24, r22
    1c1a:	f8 01       	movw	r30, r16
    1c1c:	91 83       	std	Z+1, r25	; 0x01
    1c1e:	80 83       	st	Z, r24
    1c20:	24 c0       	rjmp	.+72     	; 0x1c6a <__stack+0xb6b>
    1c22:	ce 01       	movw	r24, r28
    1c24:	8b 54       	subi	r24, 0x4B	; 75
    1c26:	9e 4f       	sbci	r25, 0xFE	; 254
    1c28:	20 e9       	ldi	r18, 0x90	; 144
    1c2a:	31 e0       	ldi	r19, 0x01	; 1
    1c2c:	fc 01       	movw	r30, r24
    1c2e:	31 83       	std	Z+1, r19	; 0x01
    1c30:	20 83       	st	Z, r18
    1c32:	ce 01       	movw	r24, r28
    1c34:	8b 54       	subi	r24, 0x4B	; 75
    1c36:	9e 4f       	sbci	r25, 0xFE	; 254
    1c38:	fc 01       	movw	r30, r24
    1c3a:	80 81       	ld	r24, Z
    1c3c:	91 81       	ldd	r25, Z+1	; 0x01
    1c3e:	01 97       	sbiw	r24, 0x01	; 1
    1c40:	f1 f7       	brne	.-4      	; 0x1c3e <__stack+0xb3f>
    1c42:	9e 01       	movw	r18, r28
    1c44:	2b 54       	subi	r18, 0x4B	; 75
    1c46:	3e 4f       	sbci	r19, 0xFE	; 254
    1c48:	f9 01       	movw	r30, r18
    1c4a:	91 83       	std	Z+1, r25	; 0x01
    1c4c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c4e:	ce 01       	movw	r24, r28
    1c50:	8d 54       	subi	r24, 0x4D	; 77
    1c52:	9e 4f       	sbci	r25, 0xFE	; 254
    1c54:	9e 01       	movw	r18, r28
    1c56:	2d 54       	subi	r18, 0x4D	; 77
    1c58:	3e 4f       	sbci	r19, 0xFE	; 254
    1c5a:	f9 01       	movw	r30, r18
    1c5c:	20 81       	ld	r18, Z
    1c5e:	31 81       	ldd	r19, Z+1	; 0x01
    1c60:	21 50       	subi	r18, 0x01	; 1
    1c62:	31 09       	sbc	r19, r1
    1c64:	fc 01       	movw	r30, r24
    1c66:	31 83       	std	Z+1, r19	; 0x01
    1c68:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c6a:	ce 01       	movw	r24, r28
    1c6c:	8d 54       	subi	r24, 0x4D	; 77
    1c6e:	9e 4f       	sbci	r25, 0xFE	; 254
    1c70:	fc 01       	movw	r30, r24
    1c72:	80 81       	ld	r24, Z
    1c74:	91 81       	ldd	r25, Z+1	; 0x01
    1c76:	89 2b       	or	r24, r25
    1c78:	a1 f6       	brne	.-88     	; 0x1c22 <__stack+0xb23>
    1c7a:	2c c0       	rjmp	.+88     	; 0x1cd4 <__stack+0xbd5>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c7c:	8e 01       	movw	r16, r28
    1c7e:	0d 54       	subi	r16, 0x4D	; 77
    1c80:	1e 4f       	sbci	r17, 0xFE	; 254
    1c82:	ce 01       	movw	r24, r28
    1c84:	81 55       	subi	r24, 0x51	; 81
    1c86:	9e 4f       	sbci	r25, 0xFE	; 254
    1c88:	fc 01       	movw	r30, r24
    1c8a:	60 81       	ld	r22, Z
    1c8c:	71 81       	ldd	r23, Z+1	; 0x01
    1c8e:	82 81       	ldd	r24, Z+2	; 0x02
    1c90:	93 81       	ldd	r25, Z+3	; 0x03
    1c92:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    1c96:	dc 01       	movw	r26, r24
    1c98:	cb 01       	movw	r24, r22
    1c9a:	f8 01       	movw	r30, r16
    1c9c:	91 83       	std	Z+1, r25	; 0x01
    1c9e:	80 83       	st	Z, r24
    1ca0:	ce 01       	movw	r24, r28
    1ca2:	89 54       	subi	r24, 0x49	; 73
    1ca4:	9e 4f       	sbci	r25, 0xFE	; 254
    1ca6:	9e 01       	movw	r18, r28
    1ca8:	2d 54       	subi	r18, 0x4D	; 77
    1caa:	3e 4f       	sbci	r19, 0xFE	; 254
    1cac:	f9 01       	movw	r30, r18
    1cae:	20 81       	ld	r18, Z
    1cb0:	31 81       	ldd	r19, Z+1	; 0x01
    1cb2:	fc 01       	movw	r30, r24
    1cb4:	31 83       	std	Z+1, r19	; 0x01
    1cb6:	20 83       	st	Z, r18
    1cb8:	ce 01       	movw	r24, r28
    1cba:	89 54       	subi	r24, 0x49	; 73
    1cbc:	9e 4f       	sbci	r25, 0xFE	; 254
    1cbe:	fc 01       	movw	r30, r24
    1cc0:	80 81       	ld	r24, Z
    1cc2:	91 81       	ldd	r25, Z+1	; 0x01
    1cc4:	01 97       	sbiw	r24, 0x01	; 1
    1cc6:	f1 f7       	brne	.-4      	; 0x1cc4 <__stack+0xbc5>
    1cc8:	9e 01       	movw	r18, r28
    1cca:	29 54       	subi	r18, 0x49	; 73
    1ccc:	3e 4f       	sbci	r19, 0xFE	; 254
    1cce:	f9 01       	movw	r30, r18
    1cd0:	91 83       	std	Z+1, r25	; 0x01
    1cd2:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F430 T100\n");
    1cd4:	8e e4       	ldi	r24, 0x4E	; 78
    1cd6:	92 e0       	ldi	r25, 0x02	; 2
    1cd8:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    1cdc:	80 e0       	ldi	r24, 0x00	; 0
    1cde:	90 e0       	ldi	r25, 0x00	; 0
    1ce0:	a6 e9       	ldi	r26, 0x96	; 150
    1ce2:	b3 e4       	ldi	r27, 0x43	; 67
    1ce4:	8d ab       	std	Y+53, r24	; 0x35
    1ce6:	9e ab       	std	Y+54, r25	; 0x36
    1ce8:	af ab       	std	Y+55, r26	; 0x37
    1cea:	b8 af       	std	Y+56, r27	; 0x38

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1cec:	8e 01       	movw	r16, r28
    1cee:	0b 55       	subi	r16, 0x5B	; 91
    1cf0:	1e 4f       	sbci	r17, 0xFE	; 254
    1cf2:	20 e0       	ldi	r18, 0x00	; 0
    1cf4:	30 e0       	ldi	r19, 0x00	; 0
    1cf6:	4a e7       	ldi	r20, 0x7A	; 122
    1cf8:	55 e4       	ldi	r21, 0x45	; 69
    1cfa:	6d a9       	ldd	r22, Y+53	; 0x35
    1cfc:	7e a9       	ldd	r23, Y+54	; 0x36
    1cfe:	8f a9       	ldd	r24, Y+55	; 0x37
    1d00:	98 ad       	ldd	r25, Y+56	; 0x38
    1d02:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    1d06:	dc 01       	movw	r26, r24
    1d08:	cb 01       	movw	r24, r22
    1d0a:	f8 01       	movw	r30, r16
    1d0c:	80 83       	st	Z, r24
    1d0e:	91 83       	std	Z+1, r25	; 0x01
    1d10:	a2 83       	std	Z+2, r26	; 0x02
    1d12:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d14:	ce 01       	movw	r24, r28
    1d16:	8b 55       	subi	r24, 0x5B	; 91
    1d18:	9e 4f       	sbci	r25, 0xFE	; 254
    1d1a:	20 e0       	ldi	r18, 0x00	; 0
    1d1c:	30 e0       	ldi	r19, 0x00	; 0
    1d1e:	40 e8       	ldi	r20, 0x80	; 128
    1d20:	5f e3       	ldi	r21, 0x3F	; 63
    1d22:	fc 01       	movw	r30, r24
    1d24:	60 81       	ld	r22, Z
    1d26:	71 81       	ldd	r23, Z+1	; 0x01
    1d28:	82 81       	ldd	r24, Z+2	; 0x02
    1d2a:	93 81       	ldd	r25, Z+3	; 0x03
    1d2c:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    1d30:	88 23       	and	r24, r24
    1d32:	4c f4       	brge	.+18     	; 0x1d46 <__stack+0xc47>
		__ticks = 1;
    1d34:	ce 01       	movw	r24, r28
    1d36:	87 55       	subi	r24, 0x57	; 87
    1d38:	9e 4f       	sbci	r25, 0xFE	; 254
    1d3a:	21 e0       	ldi	r18, 0x01	; 1
    1d3c:	30 e0       	ldi	r19, 0x00	; 0
    1d3e:	fc 01       	movw	r30, r24
    1d40:	31 83       	std	Z+1, r19	; 0x01
    1d42:	20 83       	st	Z, r18
    1d44:	69 c0       	rjmp	.+210    	; 0x1e18 <__stack+0xd19>
	else if (__tmp > 65535)
    1d46:	ce 01       	movw	r24, r28
    1d48:	8b 55       	subi	r24, 0x5B	; 91
    1d4a:	9e 4f       	sbci	r25, 0xFE	; 254
    1d4c:	20 e0       	ldi	r18, 0x00	; 0
    1d4e:	3f ef       	ldi	r19, 0xFF	; 255
    1d50:	4f e7       	ldi	r20, 0x7F	; 127
    1d52:	57 e4       	ldi	r21, 0x47	; 71
    1d54:	fc 01       	movw	r30, r24
    1d56:	60 81       	ld	r22, Z
    1d58:	71 81       	ldd	r23, Z+1	; 0x01
    1d5a:	82 81       	ldd	r24, Z+2	; 0x02
    1d5c:	93 81       	ldd	r25, Z+3	; 0x03
    1d5e:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    1d62:	18 16       	cp	r1, r24
    1d64:	0c f0       	brlt	.+2      	; 0x1d68 <__stack+0xc69>
    1d66:	46 c0       	rjmp	.+140    	; 0x1df4 <__stack+0xcf5>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d68:	20 e0       	ldi	r18, 0x00	; 0
    1d6a:	30 e0       	ldi	r19, 0x00	; 0
    1d6c:	40 e2       	ldi	r20, 0x20	; 32
    1d6e:	51 e4       	ldi	r21, 0x41	; 65
    1d70:	6d a9       	ldd	r22, Y+53	; 0x35
    1d72:	7e a9       	ldd	r23, Y+54	; 0x36
    1d74:	8f a9       	ldd	r24, Y+55	; 0x37
    1d76:	98 ad       	ldd	r25, Y+56	; 0x38
    1d78:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    1d7c:	dc 01       	movw	r26, r24
    1d7e:	cb 01       	movw	r24, r22
    1d80:	8e 01       	movw	r16, r28
    1d82:	07 55       	subi	r16, 0x57	; 87
    1d84:	1e 4f       	sbci	r17, 0xFE	; 254
    1d86:	bc 01       	movw	r22, r24
    1d88:	cd 01       	movw	r24, r26
    1d8a:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    1d8e:	dc 01       	movw	r26, r24
    1d90:	cb 01       	movw	r24, r22
    1d92:	f8 01       	movw	r30, r16
    1d94:	91 83       	std	Z+1, r25	; 0x01
    1d96:	80 83       	st	Z, r24
    1d98:	24 c0       	rjmp	.+72     	; 0x1de2 <__stack+0xce3>
    1d9a:	ce 01       	movw	r24, r28
    1d9c:	85 55       	subi	r24, 0x55	; 85
    1d9e:	9e 4f       	sbci	r25, 0xFE	; 254
    1da0:	20 e9       	ldi	r18, 0x90	; 144
    1da2:	31 e0       	ldi	r19, 0x01	; 1
    1da4:	fc 01       	movw	r30, r24
    1da6:	31 83       	std	Z+1, r19	; 0x01
    1da8:	20 83       	st	Z, r18
    1daa:	ce 01       	movw	r24, r28
    1dac:	85 55       	subi	r24, 0x55	; 85
    1dae:	9e 4f       	sbci	r25, 0xFE	; 254
    1db0:	fc 01       	movw	r30, r24
    1db2:	80 81       	ld	r24, Z
    1db4:	91 81       	ldd	r25, Z+1	; 0x01
    1db6:	01 97       	sbiw	r24, 0x01	; 1
    1db8:	f1 f7       	brne	.-4      	; 0x1db6 <__stack+0xcb7>
    1dba:	9e 01       	movw	r18, r28
    1dbc:	25 55       	subi	r18, 0x55	; 85
    1dbe:	3e 4f       	sbci	r19, 0xFE	; 254
    1dc0:	f9 01       	movw	r30, r18
    1dc2:	91 83       	std	Z+1, r25	; 0x01
    1dc4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dc6:	ce 01       	movw	r24, r28
    1dc8:	87 55       	subi	r24, 0x57	; 87
    1dca:	9e 4f       	sbci	r25, 0xFE	; 254
    1dcc:	9e 01       	movw	r18, r28
    1dce:	27 55       	subi	r18, 0x57	; 87
    1dd0:	3e 4f       	sbci	r19, 0xFE	; 254
    1dd2:	f9 01       	movw	r30, r18
    1dd4:	20 81       	ld	r18, Z
    1dd6:	31 81       	ldd	r19, Z+1	; 0x01
    1dd8:	21 50       	subi	r18, 0x01	; 1
    1dda:	31 09       	sbc	r19, r1
    1ddc:	fc 01       	movw	r30, r24
    1dde:	31 83       	std	Z+1, r19	; 0x01
    1de0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1de2:	ce 01       	movw	r24, r28
    1de4:	87 55       	subi	r24, 0x57	; 87
    1de6:	9e 4f       	sbci	r25, 0xFE	; 254
    1de8:	fc 01       	movw	r30, r24
    1dea:	80 81       	ld	r24, Z
    1dec:	91 81       	ldd	r25, Z+1	; 0x01
    1dee:	89 2b       	or	r24, r25
    1df0:	a1 f6       	brne	.-88     	; 0x1d9a <__stack+0xc9b>
    1df2:	2c c0       	rjmp	.+88     	; 0x1e4c <__stack+0xd4d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1df4:	8e 01       	movw	r16, r28
    1df6:	07 55       	subi	r16, 0x57	; 87
    1df8:	1e 4f       	sbci	r17, 0xFE	; 254
    1dfa:	ce 01       	movw	r24, r28
    1dfc:	8b 55       	subi	r24, 0x5B	; 91
    1dfe:	9e 4f       	sbci	r25, 0xFE	; 254
    1e00:	fc 01       	movw	r30, r24
    1e02:	60 81       	ld	r22, Z
    1e04:	71 81       	ldd	r23, Z+1	; 0x01
    1e06:	82 81       	ldd	r24, Z+2	; 0x02
    1e08:	93 81       	ldd	r25, Z+3	; 0x03
    1e0a:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    1e0e:	dc 01       	movw	r26, r24
    1e10:	cb 01       	movw	r24, r22
    1e12:	f8 01       	movw	r30, r16
    1e14:	91 83       	std	Z+1, r25	; 0x01
    1e16:	80 83       	st	Z, r24
    1e18:	ce 01       	movw	r24, r28
    1e1a:	83 55       	subi	r24, 0x53	; 83
    1e1c:	9e 4f       	sbci	r25, 0xFE	; 254
    1e1e:	9e 01       	movw	r18, r28
    1e20:	27 55       	subi	r18, 0x57	; 87
    1e22:	3e 4f       	sbci	r19, 0xFE	; 254
    1e24:	f9 01       	movw	r30, r18
    1e26:	20 81       	ld	r18, Z
    1e28:	31 81       	ldd	r19, Z+1	; 0x01
    1e2a:	fc 01       	movw	r30, r24
    1e2c:	31 83       	std	Z+1, r19	; 0x01
    1e2e:	20 83       	st	Z, r18
    1e30:	ce 01       	movw	r24, r28
    1e32:	83 55       	subi	r24, 0x53	; 83
    1e34:	9e 4f       	sbci	r25, 0xFE	; 254
    1e36:	fc 01       	movw	r30, r24
    1e38:	80 81       	ld	r24, Z
    1e3a:	91 81       	ldd	r25, Z+1	; 0x01
    1e3c:	01 97       	sbiw	r24, 0x01	; 1
    1e3e:	f1 f7       	brne	.-4      	; 0x1e3c <__stack+0xd3d>
    1e40:	9e 01       	movw	r18, r28
    1e42:	23 55       	subi	r18, 0x53	; 83
    1e44:	3e 4f       	sbci	r19, 0xFE	; 254
    1e46:	f9 01       	movw	r30, r18
    1e48:	91 83       	std	Z+1, r25	; 0x01
    1e4a:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F380 T100\n");
    1e4c:	8a ef       	ldi	r24, 0xFA	; 250
    1e4e:	91 e0       	ldi	r25, 0x01	; 1
    1e50:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    1e54:	80 e0       	ldi	r24, 0x00	; 0
    1e56:	90 e0       	ldi	r25, 0x00	; 0
    1e58:	a8 e4       	ldi	r26, 0x48	; 72
    1e5a:	b3 e4       	ldi	r27, 0x43	; 67
    1e5c:	89 af       	std	Y+57, r24	; 0x39
    1e5e:	9a af       	std	Y+58, r25	; 0x3a
    1e60:	ab af       	std	Y+59, r26	; 0x3b
    1e62:	bc af       	std	Y+60, r27	; 0x3c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1e64:	8e 01       	movw	r16, r28
    1e66:	05 56       	subi	r16, 0x65	; 101
    1e68:	1e 4f       	sbci	r17, 0xFE	; 254
    1e6a:	20 e0       	ldi	r18, 0x00	; 0
    1e6c:	30 e0       	ldi	r19, 0x00	; 0
    1e6e:	4a e7       	ldi	r20, 0x7A	; 122
    1e70:	55 e4       	ldi	r21, 0x45	; 69
    1e72:	69 ad       	ldd	r22, Y+57	; 0x39
    1e74:	7a ad       	ldd	r23, Y+58	; 0x3a
    1e76:	8b ad       	ldd	r24, Y+59	; 0x3b
    1e78:	9c ad       	ldd	r25, Y+60	; 0x3c
    1e7a:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    1e7e:	dc 01       	movw	r26, r24
    1e80:	cb 01       	movw	r24, r22
    1e82:	f8 01       	movw	r30, r16
    1e84:	80 83       	st	Z, r24
    1e86:	91 83       	std	Z+1, r25	; 0x01
    1e88:	a2 83       	std	Z+2, r26	; 0x02
    1e8a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e8c:	ce 01       	movw	r24, r28
    1e8e:	85 56       	subi	r24, 0x65	; 101
    1e90:	9e 4f       	sbci	r25, 0xFE	; 254
    1e92:	20 e0       	ldi	r18, 0x00	; 0
    1e94:	30 e0       	ldi	r19, 0x00	; 0
    1e96:	40 e8       	ldi	r20, 0x80	; 128
    1e98:	5f e3       	ldi	r21, 0x3F	; 63
    1e9a:	fc 01       	movw	r30, r24
    1e9c:	60 81       	ld	r22, Z
    1e9e:	71 81       	ldd	r23, Z+1	; 0x01
    1ea0:	82 81       	ldd	r24, Z+2	; 0x02
    1ea2:	93 81       	ldd	r25, Z+3	; 0x03
    1ea4:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    1ea8:	88 23       	and	r24, r24
    1eaa:	4c f4       	brge	.+18     	; 0x1ebe <__stack+0xdbf>
		__ticks = 1;
    1eac:	ce 01       	movw	r24, r28
    1eae:	81 56       	subi	r24, 0x61	; 97
    1eb0:	9e 4f       	sbci	r25, 0xFE	; 254
    1eb2:	21 e0       	ldi	r18, 0x01	; 1
    1eb4:	30 e0       	ldi	r19, 0x00	; 0
    1eb6:	fc 01       	movw	r30, r24
    1eb8:	31 83       	std	Z+1, r19	; 0x01
    1eba:	20 83       	st	Z, r18
    1ebc:	69 c0       	rjmp	.+210    	; 0x1f90 <__stack+0xe91>
	else if (__tmp > 65535)
    1ebe:	ce 01       	movw	r24, r28
    1ec0:	85 56       	subi	r24, 0x65	; 101
    1ec2:	9e 4f       	sbci	r25, 0xFE	; 254
    1ec4:	20 e0       	ldi	r18, 0x00	; 0
    1ec6:	3f ef       	ldi	r19, 0xFF	; 255
    1ec8:	4f e7       	ldi	r20, 0x7F	; 127
    1eca:	57 e4       	ldi	r21, 0x47	; 71
    1ecc:	fc 01       	movw	r30, r24
    1ece:	60 81       	ld	r22, Z
    1ed0:	71 81       	ldd	r23, Z+1	; 0x01
    1ed2:	82 81       	ldd	r24, Z+2	; 0x02
    1ed4:	93 81       	ldd	r25, Z+3	; 0x03
    1ed6:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    1eda:	18 16       	cp	r1, r24
    1edc:	0c f0       	brlt	.+2      	; 0x1ee0 <__stack+0xde1>
    1ede:	46 c0       	rjmp	.+140    	; 0x1f6c <__stack+0xe6d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ee0:	20 e0       	ldi	r18, 0x00	; 0
    1ee2:	30 e0       	ldi	r19, 0x00	; 0
    1ee4:	40 e2       	ldi	r20, 0x20	; 32
    1ee6:	51 e4       	ldi	r21, 0x41	; 65
    1ee8:	69 ad       	ldd	r22, Y+57	; 0x39
    1eea:	7a ad       	ldd	r23, Y+58	; 0x3a
    1eec:	8b ad       	ldd	r24, Y+59	; 0x3b
    1eee:	9c ad       	ldd	r25, Y+60	; 0x3c
    1ef0:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    1ef4:	dc 01       	movw	r26, r24
    1ef6:	cb 01       	movw	r24, r22
    1ef8:	8e 01       	movw	r16, r28
    1efa:	01 56       	subi	r16, 0x61	; 97
    1efc:	1e 4f       	sbci	r17, 0xFE	; 254
    1efe:	bc 01       	movw	r22, r24
    1f00:	cd 01       	movw	r24, r26
    1f02:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    1f06:	dc 01       	movw	r26, r24
    1f08:	cb 01       	movw	r24, r22
    1f0a:	f8 01       	movw	r30, r16
    1f0c:	91 83       	std	Z+1, r25	; 0x01
    1f0e:	80 83       	st	Z, r24
    1f10:	24 c0       	rjmp	.+72     	; 0x1f5a <__stack+0xe5b>
    1f12:	ce 01       	movw	r24, r28
    1f14:	8f 55       	subi	r24, 0x5F	; 95
    1f16:	9e 4f       	sbci	r25, 0xFE	; 254
    1f18:	20 e9       	ldi	r18, 0x90	; 144
    1f1a:	31 e0       	ldi	r19, 0x01	; 1
    1f1c:	fc 01       	movw	r30, r24
    1f1e:	31 83       	std	Z+1, r19	; 0x01
    1f20:	20 83       	st	Z, r18
    1f22:	ce 01       	movw	r24, r28
    1f24:	8f 55       	subi	r24, 0x5F	; 95
    1f26:	9e 4f       	sbci	r25, 0xFE	; 254
    1f28:	fc 01       	movw	r30, r24
    1f2a:	80 81       	ld	r24, Z
    1f2c:	91 81       	ldd	r25, Z+1	; 0x01
    1f2e:	01 97       	sbiw	r24, 0x01	; 1
    1f30:	f1 f7       	brne	.-4      	; 0x1f2e <__stack+0xe2f>
    1f32:	9e 01       	movw	r18, r28
    1f34:	2f 55       	subi	r18, 0x5F	; 95
    1f36:	3e 4f       	sbci	r19, 0xFE	; 254
    1f38:	f9 01       	movw	r30, r18
    1f3a:	91 83       	std	Z+1, r25	; 0x01
    1f3c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f3e:	ce 01       	movw	r24, r28
    1f40:	81 56       	subi	r24, 0x61	; 97
    1f42:	9e 4f       	sbci	r25, 0xFE	; 254
    1f44:	9e 01       	movw	r18, r28
    1f46:	21 56       	subi	r18, 0x61	; 97
    1f48:	3e 4f       	sbci	r19, 0xFE	; 254
    1f4a:	f9 01       	movw	r30, r18
    1f4c:	20 81       	ld	r18, Z
    1f4e:	31 81       	ldd	r19, Z+1	; 0x01
    1f50:	21 50       	subi	r18, 0x01	; 1
    1f52:	31 09       	sbc	r19, r1
    1f54:	fc 01       	movw	r30, r24
    1f56:	31 83       	std	Z+1, r19	; 0x01
    1f58:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f5a:	ce 01       	movw	r24, r28
    1f5c:	81 56       	subi	r24, 0x61	; 97
    1f5e:	9e 4f       	sbci	r25, 0xFE	; 254
    1f60:	fc 01       	movw	r30, r24
    1f62:	80 81       	ld	r24, Z
    1f64:	91 81       	ldd	r25, Z+1	; 0x01
    1f66:	89 2b       	or	r24, r25
    1f68:	a1 f6       	brne	.-88     	; 0x1f12 <__stack+0xe13>
    1f6a:	2c c0       	rjmp	.+88     	; 0x1fc4 <__stack+0xec5>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f6c:	8e 01       	movw	r16, r28
    1f6e:	01 56       	subi	r16, 0x61	; 97
    1f70:	1e 4f       	sbci	r17, 0xFE	; 254
    1f72:	ce 01       	movw	r24, r28
    1f74:	85 56       	subi	r24, 0x65	; 101
    1f76:	9e 4f       	sbci	r25, 0xFE	; 254
    1f78:	fc 01       	movw	r30, r24
    1f7a:	60 81       	ld	r22, Z
    1f7c:	71 81       	ldd	r23, Z+1	; 0x01
    1f7e:	82 81       	ldd	r24, Z+2	; 0x02
    1f80:	93 81       	ldd	r25, Z+3	; 0x03
    1f82:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    1f86:	dc 01       	movw	r26, r24
    1f88:	cb 01       	movw	r24, r22
    1f8a:	f8 01       	movw	r30, r16
    1f8c:	91 83       	std	Z+1, r25	; 0x01
    1f8e:	80 83       	st	Z, r24
    1f90:	ce 01       	movw	r24, r28
    1f92:	8d 55       	subi	r24, 0x5D	; 93
    1f94:	9e 4f       	sbci	r25, 0xFE	; 254
    1f96:	9e 01       	movw	r18, r28
    1f98:	21 56       	subi	r18, 0x61	; 97
    1f9a:	3e 4f       	sbci	r19, 0xFE	; 254
    1f9c:	f9 01       	movw	r30, r18
    1f9e:	20 81       	ld	r18, Z
    1fa0:	31 81       	ldd	r19, Z+1	; 0x01
    1fa2:	fc 01       	movw	r30, r24
    1fa4:	31 83       	std	Z+1, r19	; 0x01
    1fa6:	20 83       	st	Z, r18
    1fa8:	ce 01       	movw	r24, r28
    1faa:	8d 55       	subi	r24, 0x5D	; 93
    1fac:	9e 4f       	sbci	r25, 0xFE	; 254
    1fae:	fc 01       	movw	r30, r24
    1fb0:	80 81       	ld	r24, Z
    1fb2:	91 81       	ldd	r25, Z+1	; 0x01
    1fb4:	01 97       	sbiw	r24, 0x01	; 1
    1fb6:	f1 f7       	brne	.-4      	; 0x1fb4 <__stack+0xeb5>
    1fb8:	9e 01       	movw	r18, r28
    1fba:	2d 55       	subi	r18, 0x5D	; 93
    1fbc:	3e 4f       	sbci	r19, 0xFE	; 254
    1fbe:	f9 01       	movw	r30, r18
    1fc0:	91 83       	std	Z+1, r25	; 0x01
    1fc2:	80 83       	st	Z, r24
	_delay_ms(200);
	to_uARM("M2210 F660 T80\n");
    1fc4:	8f e5       	ldi	r24, 0x5F	; 95
    1fc6:	92 e0       	ldi	r25, 0x02	; 2
    1fc8:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    1fcc:	80 e0       	ldi	r24, 0x00	; 0
    1fce:	90 e0       	ldi	r25, 0x00	; 0
    1fd0:	a8 e4       	ldi	r26, 0x48	; 72
    1fd2:	b3 e4       	ldi	r27, 0x43	; 67
    1fd4:	9e 01       	movw	r18, r28
    1fd6:	23 5c       	subi	r18, 0xC3	; 195
    1fd8:	3f 4f       	sbci	r19, 0xFF	; 255
    1fda:	f9 01       	movw	r30, r18
    1fdc:	80 83       	st	Z, r24
    1fde:	91 83       	std	Z+1, r25	; 0x01
    1fe0:	a2 83       	std	Z+2, r26	; 0x02
    1fe2:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1fe4:	8e 01       	movw	r16, r28
    1fe6:	0f 56       	subi	r16, 0x6F	; 111
    1fe8:	1e 4f       	sbci	r17, 0xFE	; 254
    1fea:	20 e0       	ldi	r18, 0x00	; 0
    1fec:	30 e0       	ldi	r19, 0x00	; 0
    1fee:	4a e7       	ldi	r20, 0x7A	; 122
    1ff0:	55 e4       	ldi	r21, 0x45	; 69
    1ff2:	ce 01       	movw	r24, r28
    1ff4:	cd 96       	adiw	r24, 0x3d	; 61
    1ff6:	fc 01       	movw	r30, r24
    1ff8:	60 81       	ld	r22, Z
    1ffa:	71 81       	ldd	r23, Z+1	; 0x01
    1ffc:	82 81       	ldd	r24, Z+2	; 0x02
    1ffe:	93 81       	ldd	r25, Z+3	; 0x03
    2000:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    2004:	dc 01       	movw	r26, r24
    2006:	cb 01       	movw	r24, r22
    2008:	f8 01       	movw	r30, r16
    200a:	80 83       	st	Z, r24
    200c:	91 83       	std	Z+1, r25	; 0x01
    200e:	a2 83       	std	Z+2, r26	; 0x02
    2010:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2012:	ce 01       	movw	r24, r28
    2014:	8f 56       	subi	r24, 0x6F	; 111
    2016:	9e 4f       	sbci	r25, 0xFE	; 254
    2018:	20 e0       	ldi	r18, 0x00	; 0
    201a:	30 e0       	ldi	r19, 0x00	; 0
    201c:	40 e8       	ldi	r20, 0x80	; 128
    201e:	5f e3       	ldi	r21, 0x3F	; 63
    2020:	fc 01       	movw	r30, r24
    2022:	60 81       	ld	r22, Z
    2024:	71 81       	ldd	r23, Z+1	; 0x01
    2026:	82 81       	ldd	r24, Z+2	; 0x02
    2028:	93 81       	ldd	r25, Z+3	; 0x03
    202a:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    202e:	88 23       	and	r24, r24
    2030:	4c f4       	brge	.+18     	; 0x2044 <__stack+0xf45>
		__ticks = 1;
    2032:	ce 01       	movw	r24, r28
    2034:	8b 56       	subi	r24, 0x6B	; 107
    2036:	9e 4f       	sbci	r25, 0xFE	; 254
    2038:	21 e0       	ldi	r18, 0x01	; 1
    203a:	30 e0       	ldi	r19, 0x00	; 0
    203c:	fc 01       	movw	r30, r24
    203e:	31 83       	std	Z+1, r19	; 0x01
    2040:	20 83       	st	Z, r18
    2042:	6c c0       	rjmp	.+216    	; 0x211c <__stack+0x101d>
	else if (__tmp > 65535)
    2044:	ce 01       	movw	r24, r28
    2046:	8f 56       	subi	r24, 0x6F	; 111
    2048:	9e 4f       	sbci	r25, 0xFE	; 254
    204a:	20 e0       	ldi	r18, 0x00	; 0
    204c:	3f ef       	ldi	r19, 0xFF	; 255
    204e:	4f e7       	ldi	r20, 0x7F	; 127
    2050:	57 e4       	ldi	r21, 0x47	; 71
    2052:	fc 01       	movw	r30, r24
    2054:	60 81       	ld	r22, Z
    2056:	71 81       	ldd	r23, Z+1	; 0x01
    2058:	82 81       	ldd	r24, Z+2	; 0x02
    205a:	93 81       	ldd	r25, Z+3	; 0x03
    205c:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    2060:	18 16       	cp	r1, r24
    2062:	0c f0       	brlt	.+2      	; 0x2066 <__stack+0xf67>
    2064:	49 c0       	rjmp	.+146    	; 0x20f8 <__stack+0xff9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2066:	20 e0       	ldi	r18, 0x00	; 0
    2068:	30 e0       	ldi	r19, 0x00	; 0
    206a:	40 e2       	ldi	r20, 0x20	; 32
    206c:	51 e4       	ldi	r21, 0x41	; 65
    206e:	ce 01       	movw	r24, r28
    2070:	cd 96       	adiw	r24, 0x3d	; 61
    2072:	fc 01       	movw	r30, r24
    2074:	60 81       	ld	r22, Z
    2076:	71 81       	ldd	r23, Z+1	; 0x01
    2078:	82 81       	ldd	r24, Z+2	; 0x02
    207a:	93 81       	ldd	r25, Z+3	; 0x03
    207c:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    2080:	dc 01       	movw	r26, r24
    2082:	cb 01       	movw	r24, r22
    2084:	8e 01       	movw	r16, r28
    2086:	0b 56       	subi	r16, 0x6B	; 107
    2088:	1e 4f       	sbci	r17, 0xFE	; 254
    208a:	bc 01       	movw	r22, r24
    208c:	cd 01       	movw	r24, r26
    208e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    2092:	dc 01       	movw	r26, r24
    2094:	cb 01       	movw	r24, r22
    2096:	f8 01       	movw	r30, r16
    2098:	91 83       	std	Z+1, r25	; 0x01
    209a:	80 83       	st	Z, r24
    209c:	24 c0       	rjmp	.+72     	; 0x20e6 <__stack+0xfe7>
    209e:	ce 01       	movw	r24, r28
    20a0:	89 56       	subi	r24, 0x69	; 105
    20a2:	9e 4f       	sbci	r25, 0xFE	; 254
    20a4:	20 e9       	ldi	r18, 0x90	; 144
    20a6:	31 e0       	ldi	r19, 0x01	; 1
    20a8:	fc 01       	movw	r30, r24
    20aa:	31 83       	std	Z+1, r19	; 0x01
    20ac:	20 83       	st	Z, r18
    20ae:	ce 01       	movw	r24, r28
    20b0:	89 56       	subi	r24, 0x69	; 105
    20b2:	9e 4f       	sbci	r25, 0xFE	; 254
    20b4:	fc 01       	movw	r30, r24
    20b6:	80 81       	ld	r24, Z
    20b8:	91 81       	ldd	r25, Z+1	; 0x01
    20ba:	01 97       	sbiw	r24, 0x01	; 1
    20bc:	f1 f7       	brne	.-4      	; 0x20ba <__stack+0xfbb>
    20be:	9e 01       	movw	r18, r28
    20c0:	29 56       	subi	r18, 0x69	; 105
    20c2:	3e 4f       	sbci	r19, 0xFE	; 254
    20c4:	f9 01       	movw	r30, r18
    20c6:	91 83       	std	Z+1, r25	; 0x01
    20c8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20ca:	ce 01       	movw	r24, r28
    20cc:	8b 56       	subi	r24, 0x6B	; 107
    20ce:	9e 4f       	sbci	r25, 0xFE	; 254
    20d0:	9e 01       	movw	r18, r28
    20d2:	2b 56       	subi	r18, 0x6B	; 107
    20d4:	3e 4f       	sbci	r19, 0xFE	; 254
    20d6:	f9 01       	movw	r30, r18
    20d8:	20 81       	ld	r18, Z
    20da:	31 81       	ldd	r19, Z+1	; 0x01
    20dc:	21 50       	subi	r18, 0x01	; 1
    20de:	31 09       	sbc	r19, r1
    20e0:	fc 01       	movw	r30, r24
    20e2:	31 83       	std	Z+1, r19	; 0x01
    20e4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20e6:	ce 01       	movw	r24, r28
    20e8:	8b 56       	subi	r24, 0x6B	; 107
    20ea:	9e 4f       	sbci	r25, 0xFE	; 254
    20ec:	fc 01       	movw	r30, r24
    20ee:	80 81       	ld	r24, Z
    20f0:	91 81       	ldd	r25, Z+1	; 0x01
    20f2:	89 2b       	or	r24, r25
    20f4:	a1 f6       	brne	.-88     	; 0x209e <__stack+0xf9f>
    20f6:	2c c0       	rjmp	.+88     	; 0x2150 <__stack+0x1051>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20f8:	8e 01       	movw	r16, r28
    20fa:	0b 56       	subi	r16, 0x6B	; 107
    20fc:	1e 4f       	sbci	r17, 0xFE	; 254
    20fe:	ce 01       	movw	r24, r28
    2100:	8f 56       	subi	r24, 0x6F	; 111
    2102:	9e 4f       	sbci	r25, 0xFE	; 254
    2104:	fc 01       	movw	r30, r24
    2106:	60 81       	ld	r22, Z
    2108:	71 81       	ldd	r23, Z+1	; 0x01
    210a:	82 81       	ldd	r24, Z+2	; 0x02
    210c:	93 81       	ldd	r25, Z+3	; 0x03
    210e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    2112:	dc 01       	movw	r26, r24
    2114:	cb 01       	movw	r24, r22
    2116:	f8 01       	movw	r30, r16
    2118:	91 83       	std	Z+1, r25	; 0x01
    211a:	80 83       	st	Z, r24
    211c:	ce 01       	movw	r24, r28
    211e:	87 56       	subi	r24, 0x67	; 103
    2120:	9e 4f       	sbci	r25, 0xFE	; 254
    2122:	9e 01       	movw	r18, r28
    2124:	2b 56       	subi	r18, 0x6B	; 107
    2126:	3e 4f       	sbci	r19, 0xFE	; 254
    2128:	f9 01       	movw	r30, r18
    212a:	20 81       	ld	r18, Z
    212c:	31 81       	ldd	r19, Z+1	; 0x01
    212e:	fc 01       	movw	r30, r24
    2130:	31 83       	std	Z+1, r19	; 0x01
    2132:	20 83       	st	Z, r18
    2134:	ce 01       	movw	r24, r28
    2136:	87 56       	subi	r24, 0x67	; 103
    2138:	9e 4f       	sbci	r25, 0xFE	; 254
    213a:	fc 01       	movw	r30, r24
    213c:	80 81       	ld	r24, Z
    213e:	91 81       	ldd	r25, Z+1	; 0x01
    2140:	01 97       	sbiw	r24, 0x01	; 1
    2142:	f1 f7       	brne	.-4      	; 0x2140 <__stack+0x1041>
    2144:	9e 01       	movw	r18, r28
    2146:	27 56       	subi	r18, 0x67	; 103
    2148:	3e 4f       	sbci	r19, 0xFE	; 254
    214a:	f9 01       	movw	r30, r18
    214c:	91 83       	std	Z+1, r25	; 0x01
    214e:	80 83       	st	Z, r24
	_delay_ms(200);
	to_uARM("M2210 F760 T50\n");
    2150:	8f e6       	ldi	r24, 0x6F	; 111
    2152:	92 e0       	ldi	r25, 0x02	; 2
    2154:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    2158:	9e 01       	movw	r18, r28
    215a:	2f 5b       	subi	r18, 0xBF	; 191
    215c:	3f 4f       	sbci	r19, 0xFF	; 255
    215e:	80 e0       	ldi	r24, 0x00	; 0
    2160:	90 e0       	ldi	r25, 0x00	; 0
    2162:	a6 e1       	ldi	r26, 0x16	; 22
    2164:	b3 e4       	ldi	r27, 0x43	; 67
    2166:	f9 01       	movw	r30, r18
    2168:	80 83       	st	Z, r24
    216a:	91 83       	std	Z+1, r25	; 0x01
    216c:	a2 83       	std	Z+2, r26	; 0x02
    216e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2170:	8e 01       	movw	r16, r28
    2172:	09 57       	subi	r16, 0x79	; 121
    2174:	1e 4f       	sbci	r17, 0xFE	; 254
    2176:	ce 01       	movw	r24, r28
    2178:	8f 5b       	subi	r24, 0xBF	; 191
    217a:	9f 4f       	sbci	r25, 0xFF	; 255
    217c:	20 e0       	ldi	r18, 0x00	; 0
    217e:	30 e0       	ldi	r19, 0x00	; 0
    2180:	4a e7       	ldi	r20, 0x7A	; 122
    2182:	55 e4       	ldi	r21, 0x45	; 69
    2184:	fc 01       	movw	r30, r24
    2186:	60 81       	ld	r22, Z
    2188:	71 81       	ldd	r23, Z+1	; 0x01
    218a:	82 81       	ldd	r24, Z+2	; 0x02
    218c:	93 81       	ldd	r25, Z+3	; 0x03
    218e:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    2192:	dc 01       	movw	r26, r24
    2194:	cb 01       	movw	r24, r22
    2196:	f8 01       	movw	r30, r16
    2198:	80 83       	st	Z, r24
    219a:	91 83       	std	Z+1, r25	; 0x01
    219c:	a2 83       	std	Z+2, r26	; 0x02
    219e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    21a0:	ce 01       	movw	r24, r28
    21a2:	89 57       	subi	r24, 0x79	; 121
    21a4:	9e 4f       	sbci	r25, 0xFE	; 254
    21a6:	20 e0       	ldi	r18, 0x00	; 0
    21a8:	30 e0       	ldi	r19, 0x00	; 0
    21aa:	40 e8       	ldi	r20, 0x80	; 128
    21ac:	5f e3       	ldi	r21, 0x3F	; 63
    21ae:	fc 01       	movw	r30, r24
    21b0:	60 81       	ld	r22, Z
    21b2:	71 81       	ldd	r23, Z+1	; 0x01
    21b4:	82 81       	ldd	r24, Z+2	; 0x02
    21b6:	93 81       	ldd	r25, Z+3	; 0x03
    21b8:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    21bc:	88 23       	and	r24, r24
    21be:	4c f4       	brge	.+18     	; 0x21d2 <__stack+0x10d3>
		__ticks = 1;
    21c0:	ce 01       	movw	r24, r28
    21c2:	85 57       	subi	r24, 0x75	; 117
    21c4:	9e 4f       	sbci	r25, 0xFE	; 254
    21c6:	21 e0       	ldi	r18, 0x01	; 1
    21c8:	30 e0       	ldi	r19, 0x00	; 0
    21ca:	fc 01       	movw	r30, r24
    21cc:	31 83       	std	Z+1, r19	; 0x01
    21ce:	20 83       	st	Z, r18
    21d0:	6d c0       	rjmp	.+218    	; 0x22ac <__stack+0x11ad>
	else if (__tmp > 65535)
    21d2:	ce 01       	movw	r24, r28
    21d4:	89 57       	subi	r24, 0x79	; 121
    21d6:	9e 4f       	sbci	r25, 0xFE	; 254
    21d8:	20 e0       	ldi	r18, 0x00	; 0
    21da:	3f ef       	ldi	r19, 0xFF	; 255
    21dc:	4f e7       	ldi	r20, 0x7F	; 127
    21de:	57 e4       	ldi	r21, 0x47	; 71
    21e0:	fc 01       	movw	r30, r24
    21e2:	60 81       	ld	r22, Z
    21e4:	71 81       	ldd	r23, Z+1	; 0x01
    21e6:	82 81       	ldd	r24, Z+2	; 0x02
    21e8:	93 81       	ldd	r25, Z+3	; 0x03
    21ea:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    21ee:	18 16       	cp	r1, r24
    21f0:	0c f0       	brlt	.+2      	; 0x21f4 <__stack+0x10f5>
    21f2:	4a c0       	rjmp	.+148    	; 0x2288 <__stack+0x1189>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21f4:	ce 01       	movw	r24, r28
    21f6:	8f 5b       	subi	r24, 0xBF	; 191
    21f8:	9f 4f       	sbci	r25, 0xFF	; 255
    21fa:	20 e0       	ldi	r18, 0x00	; 0
    21fc:	30 e0       	ldi	r19, 0x00	; 0
    21fe:	40 e2       	ldi	r20, 0x20	; 32
    2200:	51 e4       	ldi	r21, 0x41	; 65
    2202:	fc 01       	movw	r30, r24
    2204:	60 81       	ld	r22, Z
    2206:	71 81       	ldd	r23, Z+1	; 0x01
    2208:	82 81       	ldd	r24, Z+2	; 0x02
    220a:	93 81       	ldd	r25, Z+3	; 0x03
    220c:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    2210:	dc 01       	movw	r26, r24
    2212:	cb 01       	movw	r24, r22
    2214:	8e 01       	movw	r16, r28
    2216:	05 57       	subi	r16, 0x75	; 117
    2218:	1e 4f       	sbci	r17, 0xFE	; 254
    221a:	bc 01       	movw	r22, r24
    221c:	cd 01       	movw	r24, r26
    221e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    2222:	dc 01       	movw	r26, r24
    2224:	cb 01       	movw	r24, r22
    2226:	f8 01       	movw	r30, r16
    2228:	91 83       	std	Z+1, r25	; 0x01
    222a:	80 83       	st	Z, r24
    222c:	24 c0       	rjmp	.+72     	; 0x2276 <__stack+0x1177>
    222e:	ce 01       	movw	r24, r28
    2230:	83 57       	subi	r24, 0x73	; 115
    2232:	9e 4f       	sbci	r25, 0xFE	; 254
    2234:	20 e9       	ldi	r18, 0x90	; 144
    2236:	31 e0       	ldi	r19, 0x01	; 1
    2238:	fc 01       	movw	r30, r24
    223a:	31 83       	std	Z+1, r19	; 0x01
    223c:	20 83       	st	Z, r18
    223e:	ce 01       	movw	r24, r28
    2240:	83 57       	subi	r24, 0x73	; 115
    2242:	9e 4f       	sbci	r25, 0xFE	; 254
    2244:	fc 01       	movw	r30, r24
    2246:	80 81       	ld	r24, Z
    2248:	91 81       	ldd	r25, Z+1	; 0x01
    224a:	01 97       	sbiw	r24, 0x01	; 1
    224c:	f1 f7       	brne	.-4      	; 0x224a <__stack+0x114b>
    224e:	9e 01       	movw	r18, r28
    2250:	23 57       	subi	r18, 0x73	; 115
    2252:	3e 4f       	sbci	r19, 0xFE	; 254
    2254:	f9 01       	movw	r30, r18
    2256:	91 83       	std	Z+1, r25	; 0x01
    2258:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    225a:	ce 01       	movw	r24, r28
    225c:	85 57       	subi	r24, 0x75	; 117
    225e:	9e 4f       	sbci	r25, 0xFE	; 254
    2260:	9e 01       	movw	r18, r28
    2262:	25 57       	subi	r18, 0x75	; 117
    2264:	3e 4f       	sbci	r19, 0xFE	; 254
    2266:	f9 01       	movw	r30, r18
    2268:	20 81       	ld	r18, Z
    226a:	31 81       	ldd	r19, Z+1	; 0x01
    226c:	21 50       	subi	r18, 0x01	; 1
    226e:	31 09       	sbc	r19, r1
    2270:	fc 01       	movw	r30, r24
    2272:	31 83       	std	Z+1, r19	; 0x01
    2274:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2276:	ce 01       	movw	r24, r28
    2278:	85 57       	subi	r24, 0x75	; 117
    227a:	9e 4f       	sbci	r25, 0xFE	; 254
    227c:	fc 01       	movw	r30, r24
    227e:	80 81       	ld	r24, Z
    2280:	91 81       	ldd	r25, Z+1	; 0x01
    2282:	89 2b       	or	r24, r25
    2284:	a1 f6       	brne	.-88     	; 0x222e <__stack+0x112f>
    2286:	2c c0       	rjmp	.+88     	; 0x22e0 <__stack+0x11e1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2288:	8e 01       	movw	r16, r28
    228a:	05 57       	subi	r16, 0x75	; 117
    228c:	1e 4f       	sbci	r17, 0xFE	; 254
    228e:	ce 01       	movw	r24, r28
    2290:	89 57       	subi	r24, 0x79	; 121
    2292:	9e 4f       	sbci	r25, 0xFE	; 254
    2294:	fc 01       	movw	r30, r24
    2296:	60 81       	ld	r22, Z
    2298:	71 81       	ldd	r23, Z+1	; 0x01
    229a:	82 81       	ldd	r24, Z+2	; 0x02
    229c:	93 81       	ldd	r25, Z+3	; 0x03
    229e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    22a2:	dc 01       	movw	r26, r24
    22a4:	cb 01       	movw	r24, r22
    22a6:	f8 01       	movw	r30, r16
    22a8:	91 83       	std	Z+1, r25	; 0x01
    22aa:	80 83       	st	Z, r24
    22ac:	ce 01       	movw	r24, r28
    22ae:	81 57       	subi	r24, 0x71	; 113
    22b0:	9e 4f       	sbci	r25, 0xFE	; 254
    22b2:	9e 01       	movw	r18, r28
    22b4:	25 57       	subi	r18, 0x75	; 117
    22b6:	3e 4f       	sbci	r19, 0xFE	; 254
    22b8:	f9 01       	movw	r30, r18
    22ba:	20 81       	ld	r18, Z
    22bc:	31 81       	ldd	r19, Z+1	; 0x01
    22be:	fc 01       	movw	r30, r24
    22c0:	31 83       	std	Z+1, r19	; 0x01
    22c2:	20 83       	st	Z, r18
    22c4:	ce 01       	movw	r24, r28
    22c6:	81 57       	subi	r24, 0x71	; 113
    22c8:	9e 4f       	sbci	r25, 0xFE	; 254
    22ca:	fc 01       	movw	r30, r24
    22cc:	80 81       	ld	r24, Z
    22ce:	91 81       	ldd	r25, Z+1	; 0x01
    22d0:	01 97       	sbiw	r24, 0x01	; 1
    22d2:	f1 f7       	brne	.-4      	; 0x22d0 <__stack+0x11d1>
    22d4:	9e 01       	movw	r18, r28
    22d6:	21 57       	subi	r18, 0x71	; 113
    22d8:	3e 4f       	sbci	r19, 0xFE	; 254
    22da:	f9 01       	movw	r30, r18
    22dc:	91 83       	std	Z+1, r25	; 0x01
    22de:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F860 T100\n");
    22e0:	8f e7       	ldi	r24, 0x7F	; 127
    22e2:	92 e0       	ldi	r25, 0x02	; 2
    22e4:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    22e8:	9e 01       	movw	r18, r28
    22ea:	2b 5b       	subi	r18, 0xBB	; 187
    22ec:	3f 4f       	sbci	r19, 0xFF	; 255
    22ee:	80 e0       	ldi	r24, 0x00	; 0
    22f0:	90 e0       	ldi	r25, 0x00	; 0
    22f2:	a6 e9       	ldi	r26, 0x96	; 150
    22f4:	b3 e4       	ldi	r27, 0x43	; 67
    22f6:	f9 01       	movw	r30, r18
    22f8:	80 83       	st	Z, r24
    22fa:	91 83       	std	Z+1, r25	; 0x01
    22fc:	a2 83       	std	Z+2, r26	; 0x02
    22fe:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2300:	8e 01       	movw	r16, r28
    2302:	03 58       	subi	r16, 0x83	; 131
    2304:	1e 4f       	sbci	r17, 0xFE	; 254
    2306:	ce 01       	movw	r24, r28
    2308:	8b 5b       	subi	r24, 0xBB	; 187
    230a:	9f 4f       	sbci	r25, 0xFF	; 255
    230c:	20 e0       	ldi	r18, 0x00	; 0
    230e:	30 e0       	ldi	r19, 0x00	; 0
    2310:	4a e7       	ldi	r20, 0x7A	; 122
    2312:	55 e4       	ldi	r21, 0x45	; 69
    2314:	fc 01       	movw	r30, r24
    2316:	60 81       	ld	r22, Z
    2318:	71 81       	ldd	r23, Z+1	; 0x01
    231a:	82 81       	ldd	r24, Z+2	; 0x02
    231c:	93 81       	ldd	r25, Z+3	; 0x03
    231e:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    2322:	dc 01       	movw	r26, r24
    2324:	cb 01       	movw	r24, r22
    2326:	f8 01       	movw	r30, r16
    2328:	80 83       	st	Z, r24
    232a:	91 83       	std	Z+1, r25	; 0x01
    232c:	a2 83       	std	Z+2, r26	; 0x02
    232e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2330:	ce 01       	movw	r24, r28
    2332:	83 58       	subi	r24, 0x83	; 131
    2334:	9e 4f       	sbci	r25, 0xFE	; 254
    2336:	20 e0       	ldi	r18, 0x00	; 0
    2338:	30 e0       	ldi	r19, 0x00	; 0
    233a:	40 e8       	ldi	r20, 0x80	; 128
    233c:	5f e3       	ldi	r21, 0x3F	; 63
    233e:	fc 01       	movw	r30, r24
    2340:	60 81       	ld	r22, Z
    2342:	71 81       	ldd	r23, Z+1	; 0x01
    2344:	82 81       	ldd	r24, Z+2	; 0x02
    2346:	93 81       	ldd	r25, Z+3	; 0x03
    2348:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    234c:	88 23       	and	r24, r24
    234e:	4c f4       	brge	.+18     	; 0x2362 <__stack+0x1263>
		__ticks = 1;
    2350:	ce 01       	movw	r24, r28
    2352:	8f 57       	subi	r24, 0x7F	; 127
    2354:	9e 4f       	sbci	r25, 0xFE	; 254
    2356:	21 e0       	ldi	r18, 0x01	; 1
    2358:	30 e0       	ldi	r19, 0x00	; 0
    235a:	fc 01       	movw	r30, r24
    235c:	31 83       	std	Z+1, r19	; 0x01
    235e:	20 83       	st	Z, r18
    2360:	6d c0       	rjmp	.+218    	; 0x243c <__stack+0x133d>
	else if (__tmp > 65535)
    2362:	ce 01       	movw	r24, r28
    2364:	83 58       	subi	r24, 0x83	; 131
    2366:	9e 4f       	sbci	r25, 0xFE	; 254
    2368:	20 e0       	ldi	r18, 0x00	; 0
    236a:	3f ef       	ldi	r19, 0xFF	; 255
    236c:	4f e7       	ldi	r20, 0x7F	; 127
    236e:	57 e4       	ldi	r21, 0x47	; 71
    2370:	fc 01       	movw	r30, r24
    2372:	60 81       	ld	r22, Z
    2374:	71 81       	ldd	r23, Z+1	; 0x01
    2376:	82 81       	ldd	r24, Z+2	; 0x02
    2378:	93 81       	ldd	r25, Z+3	; 0x03
    237a:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    237e:	18 16       	cp	r1, r24
    2380:	0c f0       	brlt	.+2      	; 0x2384 <__stack+0x1285>
    2382:	4a c0       	rjmp	.+148    	; 0x2418 <__stack+0x1319>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2384:	ce 01       	movw	r24, r28
    2386:	8b 5b       	subi	r24, 0xBB	; 187
    2388:	9f 4f       	sbci	r25, 0xFF	; 255
    238a:	20 e0       	ldi	r18, 0x00	; 0
    238c:	30 e0       	ldi	r19, 0x00	; 0
    238e:	40 e2       	ldi	r20, 0x20	; 32
    2390:	51 e4       	ldi	r21, 0x41	; 65
    2392:	fc 01       	movw	r30, r24
    2394:	60 81       	ld	r22, Z
    2396:	71 81       	ldd	r23, Z+1	; 0x01
    2398:	82 81       	ldd	r24, Z+2	; 0x02
    239a:	93 81       	ldd	r25, Z+3	; 0x03
    239c:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    23a0:	dc 01       	movw	r26, r24
    23a2:	cb 01       	movw	r24, r22
    23a4:	8e 01       	movw	r16, r28
    23a6:	0f 57       	subi	r16, 0x7F	; 127
    23a8:	1e 4f       	sbci	r17, 0xFE	; 254
    23aa:	bc 01       	movw	r22, r24
    23ac:	cd 01       	movw	r24, r26
    23ae:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    23b2:	dc 01       	movw	r26, r24
    23b4:	cb 01       	movw	r24, r22
    23b6:	f8 01       	movw	r30, r16
    23b8:	91 83       	std	Z+1, r25	; 0x01
    23ba:	80 83       	st	Z, r24
    23bc:	24 c0       	rjmp	.+72     	; 0x2406 <__stack+0x1307>
    23be:	ce 01       	movw	r24, r28
    23c0:	8d 57       	subi	r24, 0x7D	; 125
    23c2:	9e 4f       	sbci	r25, 0xFE	; 254
    23c4:	20 e9       	ldi	r18, 0x90	; 144
    23c6:	31 e0       	ldi	r19, 0x01	; 1
    23c8:	fc 01       	movw	r30, r24
    23ca:	31 83       	std	Z+1, r19	; 0x01
    23cc:	20 83       	st	Z, r18
    23ce:	ce 01       	movw	r24, r28
    23d0:	8d 57       	subi	r24, 0x7D	; 125
    23d2:	9e 4f       	sbci	r25, 0xFE	; 254
    23d4:	fc 01       	movw	r30, r24
    23d6:	80 81       	ld	r24, Z
    23d8:	91 81       	ldd	r25, Z+1	; 0x01
    23da:	01 97       	sbiw	r24, 0x01	; 1
    23dc:	f1 f7       	brne	.-4      	; 0x23da <__stack+0x12db>
    23de:	9e 01       	movw	r18, r28
    23e0:	2d 57       	subi	r18, 0x7D	; 125
    23e2:	3e 4f       	sbci	r19, 0xFE	; 254
    23e4:	f9 01       	movw	r30, r18
    23e6:	91 83       	std	Z+1, r25	; 0x01
    23e8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23ea:	ce 01       	movw	r24, r28
    23ec:	8f 57       	subi	r24, 0x7F	; 127
    23ee:	9e 4f       	sbci	r25, 0xFE	; 254
    23f0:	9e 01       	movw	r18, r28
    23f2:	2f 57       	subi	r18, 0x7F	; 127
    23f4:	3e 4f       	sbci	r19, 0xFE	; 254
    23f6:	f9 01       	movw	r30, r18
    23f8:	20 81       	ld	r18, Z
    23fa:	31 81       	ldd	r19, Z+1	; 0x01
    23fc:	21 50       	subi	r18, 0x01	; 1
    23fe:	31 09       	sbc	r19, r1
    2400:	fc 01       	movw	r30, r24
    2402:	31 83       	std	Z+1, r19	; 0x01
    2404:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2406:	ce 01       	movw	r24, r28
    2408:	8f 57       	subi	r24, 0x7F	; 127
    240a:	9e 4f       	sbci	r25, 0xFE	; 254
    240c:	fc 01       	movw	r30, r24
    240e:	80 81       	ld	r24, Z
    2410:	91 81       	ldd	r25, Z+1	; 0x01
    2412:	89 2b       	or	r24, r25
    2414:	a1 f6       	brne	.-88     	; 0x23be <__stack+0x12bf>
    2416:	2c c0       	rjmp	.+88     	; 0x2470 <__stack+0x1371>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2418:	8e 01       	movw	r16, r28
    241a:	0f 57       	subi	r16, 0x7F	; 127
    241c:	1e 4f       	sbci	r17, 0xFE	; 254
    241e:	ce 01       	movw	r24, r28
    2420:	83 58       	subi	r24, 0x83	; 131
    2422:	9e 4f       	sbci	r25, 0xFE	; 254
    2424:	fc 01       	movw	r30, r24
    2426:	60 81       	ld	r22, Z
    2428:	71 81       	ldd	r23, Z+1	; 0x01
    242a:	82 81       	ldd	r24, Z+2	; 0x02
    242c:	93 81       	ldd	r25, Z+3	; 0x03
    242e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    2432:	dc 01       	movw	r26, r24
    2434:	cb 01       	movw	r24, r22
    2436:	f8 01       	movw	r30, r16
    2438:	91 83       	std	Z+1, r25	; 0x01
    243a:	80 83       	st	Z, r24
    243c:	ce 01       	movw	r24, r28
    243e:	8b 57       	subi	r24, 0x7B	; 123
    2440:	9e 4f       	sbci	r25, 0xFE	; 254
    2442:	9e 01       	movw	r18, r28
    2444:	2f 57       	subi	r18, 0x7F	; 127
    2446:	3e 4f       	sbci	r19, 0xFE	; 254
    2448:	f9 01       	movw	r30, r18
    244a:	20 81       	ld	r18, Z
    244c:	31 81       	ldd	r19, Z+1	; 0x01
    244e:	fc 01       	movw	r30, r24
    2450:	31 83       	std	Z+1, r19	; 0x01
    2452:	20 83       	st	Z, r18
    2454:	ce 01       	movw	r24, r28
    2456:	8b 57       	subi	r24, 0x7B	; 123
    2458:	9e 4f       	sbci	r25, 0xFE	; 254
    245a:	fc 01       	movw	r30, r24
    245c:	80 81       	ld	r24, Z
    245e:	91 81       	ldd	r25, Z+1	; 0x01
    2460:	01 97       	sbiw	r24, 0x01	; 1
    2462:	f1 f7       	brne	.-4      	; 0x2460 <__stack+0x1361>
    2464:	9e 01       	movw	r18, r28
    2466:	2b 57       	subi	r18, 0x7B	; 123
    2468:	3e 4f       	sbci	r19, 0xFE	; 254
    246a:	f9 01       	movw	r30, r18
    246c:	91 83       	std	Z+1, r25	; 0x01
    246e:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 700 T80\n");
    2470:	80 e9       	ldi	r24, 0x90	; 144
    2472:	92 e0       	ldi	r25, 0x02	; 2
    2474:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    2478:	9e 01       	movw	r18, r28
    247a:	27 5b       	subi	r18, 0xB7	; 183
    247c:	3f 4f       	sbci	r19, 0xFF	; 255
    247e:	80 e0       	ldi	r24, 0x00	; 0
    2480:	90 e0       	ldi	r25, 0x00	; 0
    2482:	a6 e1       	ldi	r26, 0x16	; 22
    2484:	b3 e4       	ldi	r27, 0x43	; 67
    2486:	f9 01       	movw	r30, r18
    2488:	80 83       	st	Z, r24
    248a:	91 83       	std	Z+1, r25	; 0x01
    248c:	a2 83       	std	Z+2, r26	; 0x02
    248e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2490:	8e 01       	movw	r16, r28
    2492:	0d 58       	subi	r16, 0x8D	; 141
    2494:	1e 4f       	sbci	r17, 0xFE	; 254
    2496:	ce 01       	movw	r24, r28
    2498:	87 5b       	subi	r24, 0xB7	; 183
    249a:	9f 4f       	sbci	r25, 0xFF	; 255
    249c:	20 e0       	ldi	r18, 0x00	; 0
    249e:	30 e0       	ldi	r19, 0x00	; 0
    24a0:	4a e7       	ldi	r20, 0x7A	; 122
    24a2:	55 e4       	ldi	r21, 0x45	; 69
    24a4:	fc 01       	movw	r30, r24
    24a6:	60 81       	ld	r22, Z
    24a8:	71 81       	ldd	r23, Z+1	; 0x01
    24aa:	82 81       	ldd	r24, Z+2	; 0x02
    24ac:	93 81       	ldd	r25, Z+3	; 0x03
    24ae:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    24b2:	dc 01       	movw	r26, r24
    24b4:	cb 01       	movw	r24, r22
    24b6:	f8 01       	movw	r30, r16
    24b8:	80 83       	st	Z, r24
    24ba:	91 83       	std	Z+1, r25	; 0x01
    24bc:	a2 83       	std	Z+2, r26	; 0x02
    24be:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    24c0:	ce 01       	movw	r24, r28
    24c2:	8d 58       	subi	r24, 0x8D	; 141
    24c4:	9e 4f       	sbci	r25, 0xFE	; 254
    24c6:	20 e0       	ldi	r18, 0x00	; 0
    24c8:	30 e0       	ldi	r19, 0x00	; 0
    24ca:	40 e8       	ldi	r20, 0x80	; 128
    24cc:	5f e3       	ldi	r21, 0x3F	; 63
    24ce:	fc 01       	movw	r30, r24
    24d0:	60 81       	ld	r22, Z
    24d2:	71 81       	ldd	r23, Z+1	; 0x01
    24d4:	82 81       	ldd	r24, Z+2	; 0x02
    24d6:	93 81       	ldd	r25, Z+3	; 0x03
    24d8:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    24dc:	88 23       	and	r24, r24
    24de:	4c f4       	brge	.+18     	; 0x24f2 <__stack+0x13f3>
		__ticks = 1;
    24e0:	ce 01       	movw	r24, r28
    24e2:	89 58       	subi	r24, 0x89	; 137
    24e4:	9e 4f       	sbci	r25, 0xFE	; 254
    24e6:	21 e0       	ldi	r18, 0x01	; 1
    24e8:	30 e0       	ldi	r19, 0x00	; 0
    24ea:	fc 01       	movw	r30, r24
    24ec:	31 83       	std	Z+1, r19	; 0x01
    24ee:	20 83       	st	Z, r18
    24f0:	6d c0       	rjmp	.+218    	; 0x25cc <__stack+0x14cd>
	else if (__tmp > 65535)
    24f2:	ce 01       	movw	r24, r28
    24f4:	8d 58       	subi	r24, 0x8D	; 141
    24f6:	9e 4f       	sbci	r25, 0xFE	; 254
    24f8:	20 e0       	ldi	r18, 0x00	; 0
    24fa:	3f ef       	ldi	r19, 0xFF	; 255
    24fc:	4f e7       	ldi	r20, 0x7F	; 127
    24fe:	57 e4       	ldi	r21, 0x47	; 71
    2500:	fc 01       	movw	r30, r24
    2502:	60 81       	ld	r22, Z
    2504:	71 81       	ldd	r23, Z+1	; 0x01
    2506:	82 81       	ldd	r24, Z+2	; 0x02
    2508:	93 81       	ldd	r25, Z+3	; 0x03
    250a:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    250e:	18 16       	cp	r1, r24
    2510:	0c f0       	brlt	.+2      	; 0x2514 <__stack+0x1415>
    2512:	4a c0       	rjmp	.+148    	; 0x25a8 <__stack+0x14a9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2514:	ce 01       	movw	r24, r28
    2516:	87 5b       	subi	r24, 0xB7	; 183
    2518:	9f 4f       	sbci	r25, 0xFF	; 255
    251a:	20 e0       	ldi	r18, 0x00	; 0
    251c:	30 e0       	ldi	r19, 0x00	; 0
    251e:	40 e2       	ldi	r20, 0x20	; 32
    2520:	51 e4       	ldi	r21, 0x41	; 65
    2522:	fc 01       	movw	r30, r24
    2524:	60 81       	ld	r22, Z
    2526:	71 81       	ldd	r23, Z+1	; 0x01
    2528:	82 81       	ldd	r24, Z+2	; 0x02
    252a:	93 81       	ldd	r25, Z+3	; 0x03
    252c:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    2530:	dc 01       	movw	r26, r24
    2532:	cb 01       	movw	r24, r22
    2534:	8e 01       	movw	r16, r28
    2536:	09 58       	subi	r16, 0x89	; 137
    2538:	1e 4f       	sbci	r17, 0xFE	; 254
    253a:	bc 01       	movw	r22, r24
    253c:	cd 01       	movw	r24, r26
    253e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    2542:	dc 01       	movw	r26, r24
    2544:	cb 01       	movw	r24, r22
    2546:	f8 01       	movw	r30, r16
    2548:	91 83       	std	Z+1, r25	; 0x01
    254a:	80 83       	st	Z, r24
    254c:	24 c0       	rjmp	.+72     	; 0x2596 <__stack+0x1497>
    254e:	ce 01       	movw	r24, r28
    2550:	87 58       	subi	r24, 0x87	; 135
    2552:	9e 4f       	sbci	r25, 0xFE	; 254
    2554:	20 e9       	ldi	r18, 0x90	; 144
    2556:	31 e0       	ldi	r19, 0x01	; 1
    2558:	fc 01       	movw	r30, r24
    255a:	31 83       	std	Z+1, r19	; 0x01
    255c:	20 83       	st	Z, r18
    255e:	ce 01       	movw	r24, r28
    2560:	87 58       	subi	r24, 0x87	; 135
    2562:	9e 4f       	sbci	r25, 0xFE	; 254
    2564:	fc 01       	movw	r30, r24
    2566:	80 81       	ld	r24, Z
    2568:	91 81       	ldd	r25, Z+1	; 0x01
    256a:	01 97       	sbiw	r24, 0x01	; 1
    256c:	f1 f7       	brne	.-4      	; 0x256a <__stack+0x146b>
    256e:	9e 01       	movw	r18, r28
    2570:	27 58       	subi	r18, 0x87	; 135
    2572:	3e 4f       	sbci	r19, 0xFE	; 254
    2574:	f9 01       	movw	r30, r18
    2576:	91 83       	std	Z+1, r25	; 0x01
    2578:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    257a:	ce 01       	movw	r24, r28
    257c:	89 58       	subi	r24, 0x89	; 137
    257e:	9e 4f       	sbci	r25, 0xFE	; 254
    2580:	9e 01       	movw	r18, r28
    2582:	29 58       	subi	r18, 0x89	; 137
    2584:	3e 4f       	sbci	r19, 0xFE	; 254
    2586:	f9 01       	movw	r30, r18
    2588:	20 81       	ld	r18, Z
    258a:	31 81       	ldd	r19, Z+1	; 0x01
    258c:	21 50       	subi	r18, 0x01	; 1
    258e:	31 09       	sbc	r19, r1
    2590:	fc 01       	movw	r30, r24
    2592:	31 83       	std	Z+1, r19	; 0x01
    2594:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2596:	ce 01       	movw	r24, r28
    2598:	89 58       	subi	r24, 0x89	; 137
    259a:	9e 4f       	sbci	r25, 0xFE	; 254
    259c:	fc 01       	movw	r30, r24
    259e:	80 81       	ld	r24, Z
    25a0:	91 81       	ldd	r25, Z+1	; 0x01
    25a2:	89 2b       	or	r24, r25
    25a4:	a1 f6       	brne	.-88     	; 0x254e <__stack+0x144f>
    25a6:	2c c0       	rjmp	.+88     	; 0x2600 <__stack+0x1501>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25a8:	8e 01       	movw	r16, r28
    25aa:	09 58       	subi	r16, 0x89	; 137
    25ac:	1e 4f       	sbci	r17, 0xFE	; 254
    25ae:	ce 01       	movw	r24, r28
    25b0:	8d 58       	subi	r24, 0x8D	; 141
    25b2:	9e 4f       	sbci	r25, 0xFE	; 254
    25b4:	fc 01       	movw	r30, r24
    25b6:	60 81       	ld	r22, Z
    25b8:	71 81       	ldd	r23, Z+1	; 0x01
    25ba:	82 81       	ldd	r24, Z+2	; 0x02
    25bc:	93 81       	ldd	r25, Z+3	; 0x03
    25be:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    25c2:	dc 01       	movw	r26, r24
    25c4:	cb 01       	movw	r24, r22
    25c6:	f8 01       	movw	r30, r16
    25c8:	91 83       	std	Z+1, r25	; 0x01
    25ca:	80 83       	st	Z, r24
    25cc:	ce 01       	movw	r24, r28
    25ce:	85 58       	subi	r24, 0x85	; 133
    25d0:	9e 4f       	sbci	r25, 0xFE	; 254
    25d2:	9e 01       	movw	r18, r28
    25d4:	29 58       	subi	r18, 0x89	; 137
    25d6:	3e 4f       	sbci	r19, 0xFE	; 254
    25d8:	f9 01       	movw	r30, r18
    25da:	20 81       	ld	r18, Z
    25dc:	31 81       	ldd	r19, Z+1	; 0x01
    25de:	fc 01       	movw	r30, r24
    25e0:	31 83       	std	Z+1, r19	; 0x01
    25e2:	20 83       	st	Z, r18
    25e4:	ce 01       	movw	r24, r28
    25e6:	85 58       	subi	r24, 0x85	; 133
    25e8:	9e 4f       	sbci	r25, 0xFE	; 254
    25ea:	fc 01       	movw	r30, r24
    25ec:	80 81       	ld	r24, Z
    25ee:	91 81       	ldd	r25, Z+1	; 0x01
    25f0:	01 97       	sbiw	r24, 0x01	; 1
    25f2:	f1 f7       	brne	.-4      	; 0x25f0 <__stack+0x14f1>
    25f4:	9e 01       	movw	r18, r28
    25f6:	25 58       	subi	r18, 0x85	; 133
    25f8:	3e 4f       	sbci	r19, 0xFE	; 254
    25fa:	f9 01       	movw	r30, r18
    25fc:	91 83       	std	Z+1, r25	; 0x01
    25fe:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F760 T50\n");
    2600:	8f e6       	ldi	r24, 0x6F	; 111
    2602:	92 e0       	ldi	r25, 0x02	; 2
    2604:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    2608:	9e 01       	movw	r18, r28
    260a:	23 5b       	subi	r18, 0xB3	; 179
    260c:	3f 4f       	sbci	r19, 0xFF	; 255
    260e:	80 e0       	ldi	r24, 0x00	; 0
    2610:	90 e0       	ldi	r25, 0x00	; 0
    2612:	af ea       	ldi	r26, 0xAF	; 175
    2614:	b3 e4       	ldi	r27, 0x43	; 67
    2616:	f9 01       	movw	r30, r18
    2618:	80 83       	st	Z, r24
    261a:	91 83       	std	Z+1, r25	; 0x01
    261c:	a2 83       	std	Z+2, r26	; 0x02
    261e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2620:	8e 01       	movw	r16, r28
    2622:	07 59       	subi	r16, 0x97	; 151
    2624:	1e 4f       	sbci	r17, 0xFE	; 254
    2626:	ce 01       	movw	r24, r28
    2628:	83 5b       	subi	r24, 0xB3	; 179
    262a:	9f 4f       	sbci	r25, 0xFF	; 255
    262c:	20 e0       	ldi	r18, 0x00	; 0
    262e:	30 e0       	ldi	r19, 0x00	; 0
    2630:	4a e7       	ldi	r20, 0x7A	; 122
    2632:	55 e4       	ldi	r21, 0x45	; 69
    2634:	fc 01       	movw	r30, r24
    2636:	60 81       	ld	r22, Z
    2638:	71 81       	ldd	r23, Z+1	; 0x01
    263a:	82 81       	ldd	r24, Z+2	; 0x02
    263c:	93 81       	ldd	r25, Z+3	; 0x03
    263e:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    2642:	dc 01       	movw	r26, r24
    2644:	cb 01       	movw	r24, r22
    2646:	f8 01       	movw	r30, r16
    2648:	80 83       	st	Z, r24
    264a:	91 83       	std	Z+1, r25	; 0x01
    264c:	a2 83       	std	Z+2, r26	; 0x02
    264e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2650:	ce 01       	movw	r24, r28
    2652:	87 59       	subi	r24, 0x97	; 151
    2654:	9e 4f       	sbci	r25, 0xFE	; 254
    2656:	20 e0       	ldi	r18, 0x00	; 0
    2658:	30 e0       	ldi	r19, 0x00	; 0
    265a:	40 e8       	ldi	r20, 0x80	; 128
    265c:	5f e3       	ldi	r21, 0x3F	; 63
    265e:	fc 01       	movw	r30, r24
    2660:	60 81       	ld	r22, Z
    2662:	71 81       	ldd	r23, Z+1	; 0x01
    2664:	82 81       	ldd	r24, Z+2	; 0x02
    2666:	93 81       	ldd	r25, Z+3	; 0x03
    2668:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    266c:	88 23       	and	r24, r24
    266e:	4c f4       	brge	.+18     	; 0x2682 <__stack+0x1583>
		__ticks = 1;
    2670:	ce 01       	movw	r24, r28
    2672:	83 59       	subi	r24, 0x93	; 147
    2674:	9e 4f       	sbci	r25, 0xFE	; 254
    2676:	21 e0       	ldi	r18, 0x01	; 1
    2678:	30 e0       	ldi	r19, 0x00	; 0
    267a:	fc 01       	movw	r30, r24
    267c:	31 83       	std	Z+1, r19	; 0x01
    267e:	20 83       	st	Z, r18
    2680:	6d c0       	rjmp	.+218    	; 0x275c <__stack+0x165d>
	else if (__tmp > 65535)
    2682:	ce 01       	movw	r24, r28
    2684:	87 59       	subi	r24, 0x97	; 151
    2686:	9e 4f       	sbci	r25, 0xFE	; 254
    2688:	20 e0       	ldi	r18, 0x00	; 0
    268a:	3f ef       	ldi	r19, 0xFF	; 255
    268c:	4f e7       	ldi	r20, 0x7F	; 127
    268e:	57 e4       	ldi	r21, 0x47	; 71
    2690:	fc 01       	movw	r30, r24
    2692:	60 81       	ld	r22, Z
    2694:	71 81       	ldd	r23, Z+1	; 0x01
    2696:	82 81       	ldd	r24, Z+2	; 0x02
    2698:	93 81       	ldd	r25, Z+3	; 0x03
    269a:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    269e:	18 16       	cp	r1, r24
    26a0:	0c f0       	brlt	.+2      	; 0x26a4 <__stack+0x15a5>
    26a2:	4a c0       	rjmp	.+148    	; 0x2738 <__stack+0x1639>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26a4:	ce 01       	movw	r24, r28
    26a6:	83 5b       	subi	r24, 0xB3	; 179
    26a8:	9f 4f       	sbci	r25, 0xFF	; 255
    26aa:	20 e0       	ldi	r18, 0x00	; 0
    26ac:	30 e0       	ldi	r19, 0x00	; 0
    26ae:	40 e2       	ldi	r20, 0x20	; 32
    26b0:	51 e4       	ldi	r21, 0x41	; 65
    26b2:	fc 01       	movw	r30, r24
    26b4:	60 81       	ld	r22, Z
    26b6:	71 81       	ldd	r23, Z+1	; 0x01
    26b8:	82 81       	ldd	r24, Z+2	; 0x02
    26ba:	93 81       	ldd	r25, Z+3	; 0x03
    26bc:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    26c0:	dc 01       	movw	r26, r24
    26c2:	cb 01       	movw	r24, r22
    26c4:	8e 01       	movw	r16, r28
    26c6:	03 59       	subi	r16, 0x93	; 147
    26c8:	1e 4f       	sbci	r17, 0xFE	; 254
    26ca:	bc 01       	movw	r22, r24
    26cc:	cd 01       	movw	r24, r26
    26ce:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    26d2:	dc 01       	movw	r26, r24
    26d4:	cb 01       	movw	r24, r22
    26d6:	f8 01       	movw	r30, r16
    26d8:	91 83       	std	Z+1, r25	; 0x01
    26da:	80 83       	st	Z, r24
    26dc:	24 c0       	rjmp	.+72     	; 0x2726 <__stack+0x1627>
    26de:	ce 01       	movw	r24, r28
    26e0:	81 59       	subi	r24, 0x91	; 145
    26e2:	9e 4f       	sbci	r25, 0xFE	; 254
    26e4:	20 e9       	ldi	r18, 0x90	; 144
    26e6:	31 e0       	ldi	r19, 0x01	; 1
    26e8:	fc 01       	movw	r30, r24
    26ea:	31 83       	std	Z+1, r19	; 0x01
    26ec:	20 83       	st	Z, r18
    26ee:	ce 01       	movw	r24, r28
    26f0:	81 59       	subi	r24, 0x91	; 145
    26f2:	9e 4f       	sbci	r25, 0xFE	; 254
    26f4:	fc 01       	movw	r30, r24
    26f6:	80 81       	ld	r24, Z
    26f8:	91 81       	ldd	r25, Z+1	; 0x01
    26fa:	01 97       	sbiw	r24, 0x01	; 1
    26fc:	f1 f7       	brne	.-4      	; 0x26fa <__stack+0x15fb>
    26fe:	9e 01       	movw	r18, r28
    2700:	21 59       	subi	r18, 0x91	; 145
    2702:	3e 4f       	sbci	r19, 0xFE	; 254
    2704:	f9 01       	movw	r30, r18
    2706:	91 83       	std	Z+1, r25	; 0x01
    2708:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    270a:	ce 01       	movw	r24, r28
    270c:	83 59       	subi	r24, 0x93	; 147
    270e:	9e 4f       	sbci	r25, 0xFE	; 254
    2710:	9e 01       	movw	r18, r28
    2712:	23 59       	subi	r18, 0x93	; 147
    2714:	3e 4f       	sbci	r19, 0xFE	; 254
    2716:	f9 01       	movw	r30, r18
    2718:	20 81       	ld	r18, Z
    271a:	31 81       	ldd	r19, Z+1	; 0x01
    271c:	21 50       	subi	r18, 0x01	; 1
    271e:	31 09       	sbc	r19, r1
    2720:	fc 01       	movw	r30, r24
    2722:	31 83       	std	Z+1, r19	; 0x01
    2724:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2726:	ce 01       	movw	r24, r28
    2728:	83 59       	subi	r24, 0x93	; 147
    272a:	9e 4f       	sbci	r25, 0xFE	; 254
    272c:	fc 01       	movw	r30, r24
    272e:	80 81       	ld	r24, Z
    2730:	91 81       	ldd	r25, Z+1	; 0x01
    2732:	89 2b       	or	r24, r25
    2734:	a1 f6       	brne	.-88     	; 0x26de <__stack+0x15df>
    2736:	2c c0       	rjmp	.+88     	; 0x2790 <__stack+0x1691>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2738:	8e 01       	movw	r16, r28
    273a:	03 59       	subi	r16, 0x93	; 147
    273c:	1e 4f       	sbci	r17, 0xFE	; 254
    273e:	ce 01       	movw	r24, r28
    2740:	87 59       	subi	r24, 0x97	; 151
    2742:	9e 4f       	sbci	r25, 0xFE	; 254
    2744:	fc 01       	movw	r30, r24
    2746:	60 81       	ld	r22, Z
    2748:	71 81       	ldd	r23, Z+1	; 0x01
    274a:	82 81       	ldd	r24, Z+2	; 0x02
    274c:	93 81       	ldd	r25, Z+3	; 0x03
    274e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    2752:	dc 01       	movw	r26, r24
    2754:	cb 01       	movw	r24, r22
    2756:	f8 01       	movw	r30, r16
    2758:	91 83       	std	Z+1, r25	; 0x01
    275a:	80 83       	st	Z, r24
    275c:	ce 01       	movw	r24, r28
    275e:	8f 58       	subi	r24, 0x8F	; 143
    2760:	9e 4f       	sbci	r25, 0xFE	; 254
    2762:	9e 01       	movw	r18, r28
    2764:	23 59       	subi	r18, 0x93	; 147
    2766:	3e 4f       	sbci	r19, 0xFE	; 254
    2768:	f9 01       	movw	r30, r18
    276a:	20 81       	ld	r18, Z
    276c:	31 81       	ldd	r19, Z+1	; 0x01
    276e:	fc 01       	movw	r30, r24
    2770:	31 83       	std	Z+1, r19	; 0x01
    2772:	20 83       	st	Z, r18
    2774:	ce 01       	movw	r24, r28
    2776:	8f 58       	subi	r24, 0x8F	; 143
    2778:	9e 4f       	sbci	r25, 0xFE	; 254
    277a:	fc 01       	movw	r30, r24
    277c:	80 81       	ld	r24, Z
    277e:	91 81       	ldd	r25, Z+1	; 0x01
    2780:	01 97       	sbiw	r24, 0x01	; 1
    2782:	f1 f7       	brne	.-4      	; 0x2780 <__stack+0x1681>
    2784:	9e 01       	movw	r18, r28
    2786:	2f 58       	subi	r18, 0x8F	; 143
    2788:	3e 4f       	sbci	r19, 0xFE	; 254
    278a:	f9 01       	movw	r30, r18
    278c:	91 83       	std	Z+1, r25	; 0x01
    278e:	80 83       	st	Z, r24
	_delay_ms(350);
	to_uARM("M2210 F660 T80\n");
    2790:	8f e5       	ldi	r24, 0x5F	; 95
    2792:	92 e0       	ldi	r25, 0x02	; 2
    2794:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    2798:	9e 01       	movw	r18, r28
    279a:	2f 5a       	subi	r18, 0xAF	; 175
    279c:	3f 4f       	sbci	r19, 0xFF	; 255
    279e:	80 e0       	ldi	r24, 0x00	; 0
    27a0:	90 e0       	ldi	r25, 0x00	; 0
    27a2:	a6 e9       	ldi	r26, 0x96	; 150
    27a4:	b3 e4       	ldi	r27, 0x43	; 67
    27a6:	f9 01       	movw	r30, r18
    27a8:	80 83       	st	Z, r24
    27aa:	91 83       	std	Z+1, r25	; 0x01
    27ac:	a2 83       	std	Z+2, r26	; 0x02
    27ae:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    27b0:	8e 01       	movw	r16, r28
    27b2:	01 5a       	subi	r16, 0xA1	; 161
    27b4:	1e 4f       	sbci	r17, 0xFE	; 254
    27b6:	ce 01       	movw	r24, r28
    27b8:	8f 5a       	subi	r24, 0xAF	; 175
    27ba:	9f 4f       	sbci	r25, 0xFF	; 255
    27bc:	20 e0       	ldi	r18, 0x00	; 0
    27be:	30 e0       	ldi	r19, 0x00	; 0
    27c0:	4a e7       	ldi	r20, 0x7A	; 122
    27c2:	55 e4       	ldi	r21, 0x45	; 69
    27c4:	fc 01       	movw	r30, r24
    27c6:	60 81       	ld	r22, Z
    27c8:	71 81       	ldd	r23, Z+1	; 0x01
    27ca:	82 81       	ldd	r24, Z+2	; 0x02
    27cc:	93 81       	ldd	r25, Z+3	; 0x03
    27ce:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    27d2:	dc 01       	movw	r26, r24
    27d4:	cb 01       	movw	r24, r22
    27d6:	f8 01       	movw	r30, r16
    27d8:	80 83       	st	Z, r24
    27da:	91 83       	std	Z+1, r25	; 0x01
    27dc:	a2 83       	std	Z+2, r26	; 0x02
    27de:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    27e0:	ce 01       	movw	r24, r28
    27e2:	81 5a       	subi	r24, 0xA1	; 161
    27e4:	9e 4f       	sbci	r25, 0xFE	; 254
    27e6:	20 e0       	ldi	r18, 0x00	; 0
    27e8:	30 e0       	ldi	r19, 0x00	; 0
    27ea:	40 e8       	ldi	r20, 0x80	; 128
    27ec:	5f e3       	ldi	r21, 0x3F	; 63
    27ee:	fc 01       	movw	r30, r24
    27f0:	60 81       	ld	r22, Z
    27f2:	71 81       	ldd	r23, Z+1	; 0x01
    27f4:	82 81       	ldd	r24, Z+2	; 0x02
    27f6:	93 81       	ldd	r25, Z+3	; 0x03
    27f8:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    27fc:	88 23       	and	r24, r24
    27fe:	4c f4       	brge	.+18     	; 0x2812 <__stack+0x1713>
		__ticks = 1;
    2800:	ce 01       	movw	r24, r28
    2802:	8d 59       	subi	r24, 0x9D	; 157
    2804:	9e 4f       	sbci	r25, 0xFE	; 254
    2806:	21 e0       	ldi	r18, 0x01	; 1
    2808:	30 e0       	ldi	r19, 0x00	; 0
    280a:	fc 01       	movw	r30, r24
    280c:	31 83       	std	Z+1, r19	; 0x01
    280e:	20 83       	st	Z, r18
    2810:	6d c0       	rjmp	.+218    	; 0x28ec <__stack+0x17ed>
	else if (__tmp > 65535)
    2812:	ce 01       	movw	r24, r28
    2814:	81 5a       	subi	r24, 0xA1	; 161
    2816:	9e 4f       	sbci	r25, 0xFE	; 254
    2818:	20 e0       	ldi	r18, 0x00	; 0
    281a:	3f ef       	ldi	r19, 0xFF	; 255
    281c:	4f e7       	ldi	r20, 0x7F	; 127
    281e:	57 e4       	ldi	r21, 0x47	; 71
    2820:	fc 01       	movw	r30, r24
    2822:	60 81       	ld	r22, Z
    2824:	71 81       	ldd	r23, Z+1	; 0x01
    2826:	82 81       	ldd	r24, Z+2	; 0x02
    2828:	93 81       	ldd	r25, Z+3	; 0x03
    282a:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    282e:	18 16       	cp	r1, r24
    2830:	0c f0       	brlt	.+2      	; 0x2834 <__stack+0x1735>
    2832:	4a c0       	rjmp	.+148    	; 0x28c8 <__stack+0x17c9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2834:	ce 01       	movw	r24, r28
    2836:	8f 5a       	subi	r24, 0xAF	; 175
    2838:	9f 4f       	sbci	r25, 0xFF	; 255
    283a:	20 e0       	ldi	r18, 0x00	; 0
    283c:	30 e0       	ldi	r19, 0x00	; 0
    283e:	40 e2       	ldi	r20, 0x20	; 32
    2840:	51 e4       	ldi	r21, 0x41	; 65
    2842:	fc 01       	movw	r30, r24
    2844:	60 81       	ld	r22, Z
    2846:	71 81       	ldd	r23, Z+1	; 0x01
    2848:	82 81       	ldd	r24, Z+2	; 0x02
    284a:	93 81       	ldd	r25, Z+3	; 0x03
    284c:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    2850:	dc 01       	movw	r26, r24
    2852:	cb 01       	movw	r24, r22
    2854:	8e 01       	movw	r16, r28
    2856:	0d 59       	subi	r16, 0x9D	; 157
    2858:	1e 4f       	sbci	r17, 0xFE	; 254
    285a:	bc 01       	movw	r22, r24
    285c:	cd 01       	movw	r24, r26
    285e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    2862:	dc 01       	movw	r26, r24
    2864:	cb 01       	movw	r24, r22
    2866:	f8 01       	movw	r30, r16
    2868:	91 83       	std	Z+1, r25	; 0x01
    286a:	80 83       	st	Z, r24
    286c:	24 c0       	rjmp	.+72     	; 0x28b6 <__stack+0x17b7>
    286e:	ce 01       	movw	r24, r28
    2870:	8b 59       	subi	r24, 0x9B	; 155
    2872:	9e 4f       	sbci	r25, 0xFE	; 254
    2874:	20 e9       	ldi	r18, 0x90	; 144
    2876:	31 e0       	ldi	r19, 0x01	; 1
    2878:	fc 01       	movw	r30, r24
    287a:	31 83       	std	Z+1, r19	; 0x01
    287c:	20 83       	st	Z, r18
    287e:	ce 01       	movw	r24, r28
    2880:	8b 59       	subi	r24, 0x9B	; 155
    2882:	9e 4f       	sbci	r25, 0xFE	; 254
    2884:	fc 01       	movw	r30, r24
    2886:	80 81       	ld	r24, Z
    2888:	91 81       	ldd	r25, Z+1	; 0x01
    288a:	01 97       	sbiw	r24, 0x01	; 1
    288c:	f1 f7       	brne	.-4      	; 0x288a <__stack+0x178b>
    288e:	9e 01       	movw	r18, r28
    2890:	2b 59       	subi	r18, 0x9B	; 155
    2892:	3e 4f       	sbci	r19, 0xFE	; 254
    2894:	f9 01       	movw	r30, r18
    2896:	91 83       	std	Z+1, r25	; 0x01
    2898:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    289a:	ce 01       	movw	r24, r28
    289c:	8d 59       	subi	r24, 0x9D	; 157
    289e:	9e 4f       	sbci	r25, 0xFE	; 254
    28a0:	9e 01       	movw	r18, r28
    28a2:	2d 59       	subi	r18, 0x9D	; 157
    28a4:	3e 4f       	sbci	r19, 0xFE	; 254
    28a6:	f9 01       	movw	r30, r18
    28a8:	20 81       	ld	r18, Z
    28aa:	31 81       	ldd	r19, Z+1	; 0x01
    28ac:	21 50       	subi	r18, 0x01	; 1
    28ae:	31 09       	sbc	r19, r1
    28b0:	fc 01       	movw	r30, r24
    28b2:	31 83       	std	Z+1, r19	; 0x01
    28b4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28b6:	ce 01       	movw	r24, r28
    28b8:	8d 59       	subi	r24, 0x9D	; 157
    28ba:	9e 4f       	sbci	r25, 0xFE	; 254
    28bc:	fc 01       	movw	r30, r24
    28be:	80 81       	ld	r24, Z
    28c0:	91 81       	ldd	r25, Z+1	; 0x01
    28c2:	89 2b       	or	r24, r25
    28c4:	a1 f6       	brne	.-88     	; 0x286e <__stack+0x176f>
    28c6:	2c c0       	rjmp	.+88     	; 0x2920 <__stack+0x1821>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    28c8:	8e 01       	movw	r16, r28
    28ca:	0d 59       	subi	r16, 0x9D	; 157
    28cc:	1e 4f       	sbci	r17, 0xFE	; 254
    28ce:	ce 01       	movw	r24, r28
    28d0:	81 5a       	subi	r24, 0xA1	; 161
    28d2:	9e 4f       	sbci	r25, 0xFE	; 254
    28d4:	fc 01       	movw	r30, r24
    28d6:	60 81       	ld	r22, Z
    28d8:	71 81       	ldd	r23, Z+1	; 0x01
    28da:	82 81       	ldd	r24, Z+2	; 0x02
    28dc:	93 81       	ldd	r25, Z+3	; 0x03
    28de:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    28e2:	dc 01       	movw	r26, r24
    28e4:	cb 01       	movw	r24, r22
    28e6:	f8 01       	movw	r30, r16
    28e8:	91 83       	std	Z+1, r25	; 0x01
    28ea:	80 83       	st	Z, r24
    28ec:	ce 01       	movw	r24, r28
    28ee:	89 59       	subi	r24, 0x99	; 153
    28f0:	9e 4f       	sbci	r25, 0xFE	; 254
    28f2:	9e 01       	movw	r18, r28
    28f4:	2d 59       	subi	r18, 0x9D	; 157
    28f6:	3e 4f       	sbci	r19, 0xFE	; 254
    28f8:	f9 01       	movw	r30, r18
    28fa:	20 81       	ld	r18, Z
    28fc:	31 81       	ldd	r19, Z+1	; 0x01
    28fe:	fc 01       	movw	r30, r24
    2900:	31 83       	std	Z+1, r19	; 0x01
    2902:	20 83       	st	Z, r18
    2904:	ce 01       	movw	r24, r28
    2906:	89 59       	subi	r24, 0x99	; 153
    2908:	9e 4f       	sbci	r25, 0xFE	; 254
    290a:	fc 01       	movw	r30, r24
    290c:	80 81       	ld	r24, Z
    290e:	91 81       	ldd	r25, Z+1	; 0x01
    2910:	01 97       	sbiw	r24, 0x01	; 1
    2912:	f1 f7       	brne	.-4      	; 0x2910 <__stack+0x1811>
    2914:	9e 01       	movw	r18, r28
    2916:	29 59       	subi	r18, 0x99	; 153
    2918:	3e 4f       	sbci	r19, 0xFE	; 254
    291a:	f9 01       	movw	r30, r18
    291c:	91 83       	std	Z+1, r25	; 0x01
    291e:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F520 T80\n");
    2920:	8f e9       	ldi	r24, 0x9F	; 159
    2922:	92 e0       	ldi	r25, 0x02	; 2
    2924:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    2928:	9e 01       	movw	r18, r28
    292a:	2b 5a       	subi	r18, 0xAB	; 171
    292c:	3f 4f       	sbci	r19, 0xFF	; 255
    292e:	80 e0       	ldi	r24, 0x00	; 0
    2930:	90 e0       	ldi	r25, 0x00	; 0
    2932:	a6 e1       	ldi	r26, 0x16	; 22
    2934:	b3 e4       	ldi	r27, 0x43	; 67
    2936:	f9 01       	movw	r30, r18
    2938:	80 83       	st	Z, r24
    293a:	91 83       	std	Z+1, r25	; 0x01
    293c:	a2 83       	std	Z+2, r26	; 0x02
    293e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2940:	8e 01       	movw	r16, r28
    2942:	0b 5a       	subi	r16, 0xAB	; 171
    2944:	1e 4f       	sbci	r17, 0xFE	; 254
    2946:	ce 01       	movw	r24, r28
    2948:	8b 5a       	subi	r24, 0xAB	; 171
    294a:	9f 4f       	sbci	r25, 0xFF	; 255
    294c:	20 e0       	ldi	r18, 0x00	; 0
    294e:	30 e0       	ldi	r19, 0x00	; 0
    2950:	4a e7       	ldi	r20, 0x7A	; 122
    2952:	55 e4       	ldi	r21, 0x45	; 69
    2954:	fc 01       	movw	r30, r24
    2956:	60 81       	ld	r22, Z
    2958:	71 81       	ldd	r23, Z+1	; 0x01
    295a:	82 81       	ldd	r24, Z+2	; 0x02
    295c:	93 81       	ldd	r25, Z+3	; 0x03
    295e:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    2962:	dc 01       	movw	r26, r24
    2964:	cb 01       	movw	r24, r22
    2966:	f8 01       	movw	r30, r16
    2968:	80 83       	st	Z, r24
    296a:	91 83       	std	Z+1, r25	; 0x01
    296c:	a2 83       	std	Z+2, r26	; 0x02
    296e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2970:	ce 01       	movw	r24, r28
    2972:	8b 5a       	subi	r24, 0xAB	; 171
    2974:	9e 4f       	sbci	r25, 0xFE	; 254
    2976:	20 e0       	ldi	r18, 0x00	; 0
    2978:	30 e0       	ldi	r19, 0x00	; 0
    297a:	40 e8       	ldi	r20, 0x80	; 128
    297c:	5f e3       	ldi	r21, 0x3F	; 63
    297e:	fc 01       	movw	r30, r24
    2980:	60 81       	ld	r22, Z
    2982:	71 81       	ldd	r23, Z+1	; 0x01
    2984:	82 81       	ldd	r24, Z+2	; 0x02
    2986:	93 81       	ldd	r25, Z+3	; 0x03
    2988:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    298c:	88 23       	and	r24, r24
    298e:	4c f4       	brge	.+18     	; 0x29a2 <__stack+0x18a3>
		__ticks = 1;
    2990:	ce 01       	movw	r24, r28
    2992:	87 5a       	subi	r24, 0xA7	; 167
    2994:	9e 4f       	sbci	r25, 0xFE	; 254
    2996:	21 e0       	ldi	r18, 0x01	; 1
    2998:	30 e0       	ldi	r19, 0x00	; 0
    299a:	fc 01       	movw	r30, r24
    299c:	31 83       	std	Z+1, r19	; 0x01
    299e:	20 83       	st	Z, r18
    29a0:	6d c0       	rjmp	.+218    	; 0x2a7c <__stack+0x197d>
	else if (__tmp > 65535)
    29a2:	ce 01       	movw	r24, r28
    29a4:	8b 5a       	subi	r24, 0xAB	; 171
    29a6:	9e 4f       	sbci	r25, 0xFE	; 254
    29a8:	20 e0       	ldi	r18, 0x00	; 0
    29aa:	3f ef       	ldi	r19, 0xFF	; 255
    29ac:	4f e7       	ldi	r20, 0x7F	; 127
    29ae:	57 e4       	ldi	r21, 0x47	; 71
    29b0:	fc 01       	movw	r30, r24
    29b2:	60 81       	ld	r22, Z
    29b4:	71 81       	ldd	r23, Z+1	; 0x01
    29b6:	82 81       	ldd	r24, Z+2	; 0x02
    29b8:	93 81       	ldd	r25, Z+3	; 0x03
    29ba:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    29be:	18 16       	cp	r1, r24
    29c0:	0c f0       	brlt	.+2      	; 0x29c4 <__stack+0x18c5>
    29c2:	4a c0       	rjmp	.+148    	; 0x2a58 <__stack+0x1959>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29c4:	ce 01       	movw	r24, r28
    29c6:	8b 5a       	subi	r24, 0xAB	; 171
    29c8:	9f 4f       	sbci	r25, 0xFF	; 255
    29ca:	20 e0       	ldi	r18, 0x00	; 0
    29cc:	30 e0       	ldi	r19, 0x00	; 0
    29ce:	40 e2       	ldi	r20, 0x20	; 32
    29d0:	51 e4       	ldi	r21, 0x41	; 65
    29d2:	fc 01       	movw	r30, r24
    29d4:	60 81       	ld	r22, Z
    29d6:	71 81       	ldd	r23, Z+1	; 0x01
    29d8:	82 81       	ldd	r24, Z+2	; 0x02
    29da:	93 81       	ldd	r25, Z+3	; 0x03
    29dc:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    29e0:	dc 01       	movw	r26, r24
    29e2:	cb 01       	movw	r24, r22
    29e4:	8e 01       	movw	r16, r28
    29e6:	07 5a       	subi	r16, 0xA7	; 167
    29e8:	1e 4f       	sbci	r17, 0xFE	; 254
    29ea:	bc 01       	movw	r22, r24
    29ec:	cd 01       	movw	r24, r26
    29ee:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    29f2:	dc 01       	movw	r26, r24
    29f4:	cb 01       	movw	r24, r22
    29f6:	f8 01       	movw	r30, r16
    29f8:	91 83       	std	Z+1, r25	; 0x01
    29fa:	80 83       	st	Z, r24
    29fc:	24 c0       	rjmp	.+72     	; 0x2a46 <__stack+0x1947>
    29fe:	ce 01       	movw	r24, r28
    2a00:	85 5a       	subi	r24, 0xA5	; 165
    2a02:	9e 4f       	sbci	r25, 0xFE	; 254
    2a04:	20 e9       	ldi	r18, 0x90	; 144
    2a06:	31 e0       	ldi	r19, 0x01	; 1
    2a08:	fc 01       	movw	r30, r24
    2a0a:	31 83       	std	Z+1, r19	; 0x01
    2a0c:	20 83       	st	Z, r18
    2a0e:	ce 01       	movw	r24, r28
    2a10:	85 5a       	subi	r24, 0xA5	; 165
    2a12:	9e 4f       	sbci	r25, 0xFE	; 254
    2a14:	fc 01       	movw	r30, r24
    2a16:	80 81       	ld	r24, Z
    2a18:	91 81       	ldd	r25, Z+1	; 0x01
    2a1a:	01 97       	sbiw	r24, 0x01	; 1
    2a1c:	f1 f7       	brne	.-4      	; 0x2a1a <__stack+0x191b>
    2a1e:	9e 01       	movw	r18, r28
    2a20:	25 5a       	subi	r18, 0xA5	; 165
    2a22:	3e 4f       	sbci	r19, 0xFE	; 254
    2a24:	f9 01       	movw	r30, r18
    2a26:	91 83       	std	Z+1, r25	; 0x01
    2a28:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a2a:	ce 01       	movw	r24, r28
    2a2c:	87 5a       	subi	r24, 0xA7	; 167
    2a2e:	9e 4f       	sbci	r25, 0xFE	; 254
    2a30:	9e 01       	movw	r18, r28
    2a32:	27 5a       	subi	r18, 0xA7	; 167
    2a34:	3e 4f       	sbci	r19, 0xFE	; 254
    2a36:	f9 01       	movw	r30, r18
    2a38:	20 81       	ld	r18, Z
    2a3a:	31 81       	ldd	r19, Z+1	; 0x01
    2a3c:	21 50       	subi	r18, 0x01	; 1
    2a3e:	31 09       	sbc	r19, r1
    2a40:	fc 01       	movw	r30, r24
    2a42:	31 83       	std	Z+1, r19	; 0x01
    2a44:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a46:	ce 01       	movw	r24, r28
    2a48:	87 5a       	subi	r24, 0xA7	; 167
    2a4a:	9e 4f       	sbci	r25, 0xFE	; 254
    2a4c:	fc 01       	movw	r30, r24
    2a4e:	80 81       	ld	r24, Z
    2a50:	91 81       	ldd	r25, Z+1	; 0x01
    2a52:	89 2b       	or	r24, r25
    2a54:	a1 f6       	brne	.-88     	; 0x29fe <__stack+0x18ff>
    2a56:	2c c0       	rjmp	.+88     	; 0x2ab0 <__stack+0x19b1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a58:	8e 01       	movw	r16, r28
    2a5a:	07 5a       	subi	r16, 0xA7	; 167
    2a5c:	1e 4f       	sbci	r17, 0xFE	; 254
    2a5e:	ce 01       	movw	r24, r28
    2a60:	8b 5a       	subi	r24, 0xAB	; 171
    2a62:	9e 4f       	sbci	r25, 0xFE	; 254
    2a64:	fc 01       	movw	r30, r24
    2a66:	60 81       	ld	r22, Z
    2a68:	71 81       	ldd	r23, Z+1	; 0x01
    2a6a:	82 81       	ldd	r24, Z+2	; 0x02
    2a6c:	93 81       	ldd	r25, Z+3	; 0x03
    2a6e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    2a72:	dc 01       	movw	r26, r24
    2a74:	cb 01       	movw	r24, r22
    2a76:	f8 01       	movw	r30, r16
    2a78:	91 83       	std	Z+1, r25	; 0x01
    2a7a:	80 83       	st	Z, r24
    2a7c:	ce 01       	movw	r24, r28
    2a7e:	83 5a       	subi	r24, 0xA3	; 163
    2a80:	9e 4f       	sbci	r25, 0xFE	; 254
    2a82:	9e 01       	movw	r18, r28
    2a84:	27 5a       	subi	r18, 0xA7	; 167
    2a86:	3e 4f       	sbci	r19, 0xFE	; 254
    2a88:	f9 01       	movw	r30, r18
    2a8a:	20 81       	ld	r18, Z
    2a8c:	31 81       	ldd	r19, Z+1	; 0x01
    2a8e:	fc 01       	movw	r30, r24
    2a90:	31 83       	std	Z+1, r19	; 0x01
    2a92:	20 83       	st	Z, r18
    2a94:	ce 01       	movw	r24, r28
    2a96:	83 5a       	subi	r24, 0xA3	; 163
    2a98:	9e 4f       	sbci	r25, 0xFE	; 254
    2a9a:	fc 01       	movw	r30, r24
    2a9c:	80 81       	ld	r24, Z
    2a9e:	91 81       	ldd	r25, Z+1	; 0x01
    2aa0:	01 97       	sbiw	r24, 0x01	; 1
    2aa2:	f1 f7       	brne	.-4      	; 0x2aa0 <__stack+0x19a1>
    2aa4:	9e 01       	movw	r18, r28
    2aa6:	23 5a       	subi	r18, 0xA3	; 163
    2aa8:	3e 4f       	sbci	r19, 0xFE	; 254
    2aaa:	f9 01       	movw	r30, r18
    2aac:	91 83       	std	Z+1, r25	; 0x01
    2aae:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F580 T80\n");
    2ab0:	8f ea       	ldi	r24, 0xAF	; 175
    2ab2:	92 e0       	ldi	r25, 0x02	; 2
    2ab4:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    2ab8:	9e 01       	movw	r18, r28
    2aba:	27 5a       	subi	r18, 0xA7	; 167
    2abc:	3f 4f       	sbci	r19, 0xFF	; 255
    2abe:	80 e0       	ldi	r24, 0x00	; 0
    2ac0:	90 e0       	ldi	r25, 0x00	; 0
    2ac2:	a6 e1       	ldi	r26, 0x16	; 22
    2ac4:	b3 e4       	ldi	r27, 0x43	; 67
    2ac6:	f9 01       	movw	r30, r18
    2ac8:	80 83       	st	Z, r24
    2aca:	91 83       	std	Z+1, r25	; 0x01
    2acc:	a2 83       	std	Z+2, r26	; 0x02
    2ace:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2ad0:	8e 01       	movw	r16, r28
    2ad2:	05 5b       	subi	r16, 0xB5	; 181
    2ad4:	1e 4f       	sbci	r17, 0xFE	; 254
    2ad6:	ce 01       	movw	r24, r28
    2ad8:	87 5a       	subi	r24, 0xA7	; 167
    2ada:	9f 4f       	sbci	r25, 0xFF	; 255
    2adc:	20 e0       	ldi	r18, 0x00	; 0
    2ade:	30 e0       	ldi	r19, 0x00	; 0
    2ae0:	4a e7       	ldi	r20, 0x7A	; 122
    2ae2:	55 e4       	ldi	r21, 0x45	; 69
    2ae4:	fc 01       	movw	r30, r24
    2ae6:	60 81       	ld	r22, Z
    2ae8:	71 81       	ldd	r23, Z+1	; 0x01
    2aea:	82 81       	ldd	r24, Z+2	; 0x02
    2aec:	93 81       	ldd	r25, Z+3	; 0x03
    2aee:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    2af2:	dc 01       	movw	r26, r24
    2af4:	cb 01       	movw	r24, r22
    2af6:	f8 01       	movw	r30, r16
    2af8:	80 83       	st	Z, r24
    2afa:	91 83       	std	Z+1, r25	; 0x01
    2afc:	a2 83       	std	Z+2, r26	; 0x02
    2afe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b00:	ce 01       	movw	r24, r28
    2b02:	85 5b       	subi	r24, 0xB5	; 181
    2b04:	9e 4f       	sbci	r25, 0xFE	; 254
    2b06:	20 e0       	ldi	r18, 0x00	; 0
    2b08:	30 e0       	ldi	r19, 0x00	; 0
    2b0a:	40 e8       	ldi	r20, 0x80	; 128
    2b0c:	5f e3       	ldi	r21, 0x3F	; 63
    2b0e:	fc 01       	movw	r30, r24
    2b10:	60 81       	ld	r22, Z
    2b12:	71 81       	ldd	r23, Z+1	; 0x01
    2b14:	82 81       	ldd	r24, Z+2	; 0x02
    2b16:	93 81       	ldd	r25, Z+3	; 0x03
    2b18:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    2b1c:	88 23       	and	r24, r24
    2b1e:	4c f4       	brge	.+18     	; 0x2b32 <__stack+0x1a33>
		__ticks = 1;
    2b20:	ce 01       	movw	r24, r28
    2b22:	81 5b       	subi	r24, 0xB1	; 177
    2b24:	9e 4f       	sbci	r25, 0xFE	; 254
    2b26:	21 e0       	ldi	r18, 0x01	; 1
    2b28:	30 e0       	ldi	r19, 0x00	; 0
    2b2a:	fc 01       	movw	r30, r24
    2b2c:	31 83       	std	Z+1, r19	; 0x01
    2b2e:	20 83       	st	Z, r18
    2b30:	6d c0       	rjmp	.+218    	; 0x2c0c <__stack+0x1b0d>
	else if (__tmp > 65535)
    2b32:	ce 01       	movw	r24, r28
    2b34:	85 5b       	subi	r24, 0xB5	; 181
    2b36:	9e 4f       	sbci	r25, 0xFE	; 254
    2b38:	20 e0       	ldi	r18, 0x00	; 0
    2b3a:	3f ef       	ldi	r19, 0xFF	; 255
    2b3c:	4f e7       	ldi	r20, 0x7F	; 127
    2b3e:	57 e4       	ldi	r21, 0x47	; 71
    2b40:	fc 01       	movw	r30, r24
    2b42:	60 81       	ld	r22, Z
    2b44:	71 81       	ldd	r23, Z+1	; 0x01
    2b46:	82 81       	ldd	r24, Z+2	; 0x02
    2b48:	93 81       	ldd	r25, Z+3	; 0x03
    2b4a:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    2b4e:	18 16       	cp	r1, r24
    2b50:	0c f0       	brlt	.+2      	; 0x2b54 <__stack+0x1a55>
    2b52:	4a c0       	rjmp	.+148    	; 0x2be8 <__stack+0x1ae9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b54:	ce 01       	movw	r24, r28
    2b56:	87 5a       	subi	r24, 0xA7	; 167
    2b58:	9f 4f       	sbci	r25, 0xFF	; 255
    2b5a:	20 e0       	ldi	r18, 0x00	; 0
    2b5c:	30 e0       	ldi	r19, 0x00	; 0
    2b5e:	40 e2       	ldi	r20, 0x20	; 32
    2b60:	51 e4       	ldi	r21, 0x41	; 65
    2b62:	fc 01       	movw	r30, r24
    2b64:	60 81       	ld	r22, Z
    2b66:	71 81       	ldd	r23, Z+1	; 0x01
    2b68:	82 81       	ldd	r24, Z+2	; 0x02
    2b6a:	93 81       	ldd	r25, Z+3	; 0x03
    2b6c:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    2b70:	dc 01       	movw	r26, r24
    2b72:	cb 01       	movw	r24, r22
    2b74:	8e 01       	movw	r16, r28
    2b76:	01 5b       	subi	r16, 0xB1	; 177
    2b78:	1e 4f       	sbci	r17, 0xFE	; 254
    2b7a:	bc 01       	movw	r22, r24
    2b7c:	cd 01       	movw	r24, r26
    2b7e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    2b82:	dc 01       	movw	r26, r24
    2b84:	cb 01       	movw	r24, r22
    2b86:	f8 01       	movw	r30, r16
    2b88:	91 83       	std	Z+1, r25	; 0x01
    2b8a:	80 83       	st	Z, r24
    2b8c:	24 c0       	rjmp	.+72     	; 0x2bd6 <__stack+0x1ad7>
    2b8e:	ce 01       	movw	r24, r28
    2b90:	8f 5a       	subi	r24, 0xAF	; 175
    2b92:	9e 4f       	sbci	r25, 0xFE	; 254
    2b94:	20 e9       	ldi	r18, 0x90	; 144
    2b96:	31 e0       	ldi	r19, 0x01	; 1
    2b98:	fc 01       	movw	r30, r24
    2b9a:	31 83       	std	Z+1, r19	; 0x01
    2b9c:	20 83       	st	Z, r18
    2b9e:	ce 01       	movw	r24, r28
    2ba0:	8f 5a       	subi	r24, 0xAF	; 175
    2ba2:	9e 4f       	sbci	r25, 0xFE	; 254
    2ba4:	fc 01       	movw	r30, r24
    2ba6:	80 81       	ld	r24, Z
    2ba8:	91 81       	ldd	r25, Z+1	; 0x01
    2baa:	01 97       	sbiw	r24, 0x01	; 1
    2bac:	f1 f7       	brne	.-4      	; 0x2baa <__stack+0x1aab>
    2bae:	9e 01       	movw	r18, r28
    2bb0:	2f 5a       	subi	r18, 0xAF	; 175
    2bb2:	3e 4f       	sbci	r19, 0xFE	; 254
    2bb4:	f9 01       	movw	r30, r18
    2bb6:	91 83       	std	Z+1, r25	; 0x01
    2bb8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bba:	ce 01       	movw	r24, r28
    2bbc:	81 5b       	subi	r24, 0xB1	; 177
    2bbe:	9e 4f       	sbci	r25, 0xFE	; 254
    2bc0:	9e 01       	movw	r18, r28
    2bc2:	21 5b       	subi	r18, 0xB1	; 177
    2bc4:	3e 4f       	sbci	r19, 0xFE	; 254
    2bc6:	f9 01       	movw	r30, r18
    2bc8:	20 81       	ld	r18, Z
    2bca:	31 81       	ldd	r19, Z+1	; 0x01
    2bcc:	21 50       	subi	r18, 0x01	; 1
    2bce:	31 09       	sbc	r19, r1
    2bd0:	fc 01       	movw	r30, r24
    2bd2:	31 83       	std	Z+1, r19	; 0x01
    2bd4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bd6:	ce 01       	movw	r24, r28
    2bd8:	81 5b       	subi	r24, 0xB1	; 177
    2bda:	9e 4f       	sbci	r25, 0xFE	; 254
    2bdc:	fc 01       	movw	r30, r24
    2bde:	80 81       	ld	r24, Z
    2be0:	91 81       	ldd	r25, Z+1	; 0x01
    2be2:	89 2b       	or	r24, r25
    2be4:	a1 f6       	brne	.-88     	; 0x2b8e <__stack+0x1a8f>
    2be6:	2c c0       	rjmp	.+88     	; 0x2c40 <__stack+0x1b41>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2be8:	8e 01       	movw	r16, r28
    2bea:	01 5b       	subi	r16, 0xB1	; 177
    2bec:	1e 4f       	sbci	r17, 0xFE	; 254
    2bee:	ce 01       	movw	r24, r28
    2bf0:	85 5b       	subi	r24, 0xB5	; 181
    2bf2:	9e 4f       	sbci	r25, 0xFE	; 254
    2bf4:	fc 01       	movw	r30, r24
    2bf6:	60 81       	ld	r22, Z
    2bf8:	71 81       	ldd	r23, Z+1	; 0x01
    2bfa:	82 81       	ldd	r24, Z+2	; 0x02
    2bfc:	93 81       	ldd	r25, Z+3	; 0x03
    2bfe:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    2c02:	dc 01       	movw	r26, r24
    2c04:	cb 01       	movw	r24, r22
    2c06:	f8 01       	movw	r30, r16
    2c08:	91 83       	std	Z+1, r25	; 0x01
    2c0a:	80 83       	st	Z, r24
    2c0c:	ce 01       	movw	r24, r28
    2c0e:	8d 5a       	subi	r24, 0xAD	; 173
    2c10:	9e 4f       	sbci	r25, 0xFE	; 254
    2c12:	9e 01       	movw	r18, r28
    2c14:	21 5b       	subi	r18, 0xB1	; 177
    2c16:	3e 4f       	sbci	r19, 0xFE	; 254
    2c18:	f9 01       	movw	r30, r18
    2c1a:	20 81       	ld	r18, Z
    2c1c:	31 81       	ldd	r19, Z+1	; 0x01
    2c1e:	fc 01       	movw	r30, r24
    2c20:	31 83       	std	Z+1, r19	; 0x01
    2c22:	20 83       	st	Z, r18
    2c24:	ce 01       	movw	r24, r28
    2c26:	8d 5a       	subi	r24, 0xAD	; 173
    2c28:	9e 4f       	sbci	r25, 0xFE	; 254
    2c2a:	fc 01       	movw	r30, r24
    2c2c:	80 81       	ld	r24, Z
    2c2e:	91 81       	ldd	r25, Z+1	; 0x01
    2c30:	01 97       	sbiw	r24, 0x01	; 1
    2c32:	f1 f7       	brne	.-4      	; 0x2c30 <__stack+0x1b31>
    2c34:	9e 01       	movw	r18, r28
    2c36:	2d 5a       	subi	r18, 0xAD	; 173
    2c38:	3e 4f       	sbci	r19, 0xFE	; 254
    2c3a:	f9 01       	movw	r30, r18
    2c3c:	91 83       	std	Z+1, r25	; 0x01
    2c3e:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F480 T80\n");
    2c40:	8d e2       	ldi	r24, 0x2D	; 45
    2c42:	92 e0       	ldi	r25, 0x02	; 2
    2c44:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    2c48:	9e 01       	movw	r18, r28
    2c4a:	23 5a       	subi	r18, 0xA3	; 163
    2c4c:	3f 4f       	sbci	r19, 0xFF	; 255
    2c4e:	80 e0       	ldi	r24, 0x00	; 0
    2c50:	90 e0       	ldi	r25, 0x00	; 0
    2c52:	aa ef       	ldi	r26, 0xFA	; 250
    2c54:	b3 e4       	ldi	r27, 0x43	; 67
    2c56:	f9 01       	movw	r30, r18
    2c58:	80 83       	st	Z, r24
    2c5a:	91 83       	std	Z+1, r25	; 0x01
    2c5c:	a2 83       	std	Z+2, r26	; 0x02
    2c5e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2c60:	8e 01       	movw	r16, r28
    2c62:	0f 5b       	subi	r16, 0xBF	; 191
    2c64:	1e 4f       	sbci	r17, 0xFE	; 254
    2c66:	ce 01       	movw	r24, r28
    2c68:	83 5a       	subi	r24, 0xA3	; 163
    2c6a:	9f 4f       	sbci	r25, 0xFF	; 255
    2c6c:	20 e0       	ldi	r18, 0x00	; 0
    2c6e:	30 e0       	ldi	r19, 0x00	; 0
    2c70:	4a e7       	ldi	r20, 0x7A	; 122
    2c72:	55 e4       	ldi	r21, 0x45	; 69
    2c74:	fc 01       	movw	r30, r24
    2c76:	60 81       	ld	r22, Z
    2c78:	71 81       	ldd	r23, Z+1	; 0x01
    2c7a:	82 81       	ldd	r24, Z+2	; 0x02
    2c7c:	93 81       	ldd	r25, Z+3	; 0x03
    2c7e:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    2c82:	dc 01       	movw	r26, r24
    2c84:	cb 01       	movw	r24, r22
    2c86:	f8 01       	movw	r30, r16
    2c88:	80 83       	st	Z, r24
    2c8a:	91 83       	std	Z+1, r25	; 0x01
    2c8c:	a2 83       	std	Z+2, r26	; 0x02
    2c8e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2c90:	ce 01       	movw	r24, r28
    2c92:	8f 5b       	subi	r24, 0xBF	; 191
    2c94:	9e 4f       	sbci	r25, 0xFE	; 254
    2c96:	20 e0       	ldi	r18, 0x00	; 0
    2c98:	30 e0       	ldi	r19, 0x00	; 0
    2c9a:	40 e8       	ldi	r20, 0x80	; 128
    2c9c:	5f e3       	ldi	r21, 0x3F	; 63
    2c9e:	fc 01       	movw	r30, r24
    2ca0:	60 81       	ld	r22, Z
    2ca2:	71 81       	ldd	r23, Z+1	; 0x01
    2ca4:	82 81       	ldd	r24, Z+2	; 0x02
    2ca6:	93 81       	ldd	r25, Z+3	; 0x03
    2ca8:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    2cac:	88 23       	and	r24, r24
    2cae:	4c f4       	brge	.+18     	; 0x2cc2 <__stack+0x1bc3>
		__ticks = 1;
    2cb0:	ce 01       	movw	r24, r28
    2cb2:	8b 5b       	subi	r24, 0xBB	; 187
    2cb4:	9e 4f       	sbci	r25, 0xFE	; 254
    2cb6:	21 e0       	ldi	r18, 0x01	; 1
    2cb8:	30 e0       	ldi	r19, 0x00	; 0
    2cba:	fc 01       	movw	r30, r24
    2cbc:	31 83       	std	Z+1, r19	; 0x01
    2cbe:	20 83       	st	Z, r18
    2cc0:	6d c0       	rjmp	.+218    	; 0x2d9c <__stack+0x1c9d>
	else if (__tmp > 65535)
    2cc2:	ce 01       	movw	r24, r28
    2cc4:	8f 5b       	subi	r24, 0xBF	; 191
    2cc6:	9e 4f       	sbci	r25, 0xFE	; 254
    2cc8:	20 e0       	ldi	r18, 0x00	; 0
    2cca:	3f ef       	ldi	r19, 0xFF	; 255
    2ccc:	4f e7       	ldi	r20, 0x7F	; 127
    2cce:	57 e4       	ldi	r21, 0x47	; 71
    2cd0:	fc 01       	movw	r30, r24
    2cd2:	60 81       	ld	r22, Z
    2cd4:	71 81       	ldd	r23, Z+1	; 0x01
    2cd6:	82 81       	ldd	r24, Z+2	; 0x02
    2cd8:	93 81       	ldd	r25, Z+3	; 0x03
    2cda:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    2cde:	18 16       	cp	r1, r24
    2ce0:	0c f0       	brlt	.+2      	; 0x2ce4 <__stack+0x1be5>
    2ce2:	4a c0       	rjmp	.+148    	; 0x2d78 <__stack+0x1c79>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ce4:	ce 01       	movw	r24, r28
    2ce6:	83 5a       	subi	r24, 0xA3	; 163
    2ce8:	9f 4f       	sbci	r25, 0xFF	; 255
    2cea:	20 e0       	ldi	r18, 0x00	; 0
    2cec:	30 e0       	ldi	r19, 0x00	; 0
    2cee:	40 e2       	ldi	r20, 0x20	; 32
    2cf0:	51 e4       	ldi	r21, 0x41	; 65
    2cf2:	fc 01       	movw	r30, r24
    2cf4:	60 81       	ld	r22, Z
    2cf6:	71 81       	ldd	r23, Z+1	; 0x01
    2cf8:	82 81       	ldd	r24, Z+2	; 0x02
    2cfa:	93 81       	ldd	r25, Z+3	; 0x03
    2cfc:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    2d00:	dc 01       	movw	r26, r24
    2d02:	cb 01       	movw	r24, r22
    2d04:	8e 01       	movw	r16, r28
    2d06:	0b 5b       	subi	r16, 0xBB	; 187
    2d08:	1e 4f       	sbci	r17, 0xFE	; 254
    2d0a:	bc 01       	movw	r22, r24
    2d0c:	cd 01       	movw	r24, r26
    2d0e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    2d12:	dc 01       	movw	r26, r24
    2d14:	cb 01       	movw	r24, r22
    2d16:	f8 01       	movw	r30, r16
    2d18:	91 83       	std	Z+1, r25	; 0x01
    2d1a:	80 83       	st	Z, r24
    2d1c:	24 c0       	rjmp	.+72     	; 0x2d66 <__stack+0x1c67>
    2d1e:	ce 01       	movw	r24, r28
    2d20:	89 5b       	subi	r24, 0xB9	; 185
    2d22:	9e 4f       	sbci	r25, 0xFE	; 254
    2d24:	20 e9       	ldi	r18, 0x90	; 144
    2d26:	31 e0       	ldi	r19, 0x01	; 1
    2d28:	fc 01       	movw	r30, r24
    2d2a:	31 83       	std	Z+1, r19	; 0x01
    2d2c:	20 83       	st	Z, r18
    2d2e:	ce 01       	movw	r24, r28
    2d30:	89 5b       	subi	r24, 0xB9	; 185
    2d32:	9e 4f       	sbci	r25, 0xFE	; 254
    2d34:	fc 01       	movw	r30, r24
    2d36:	80 81       	ld	r24, Z
    2d38:	91 81       	ldd	r25, Z+1	; 0x01
    2d3a:	01 97       	sbiw	r24, 0x01	; 1
    2d3c:	f1 f7       	brne	.-4      	; 0x2d3a <__stack+0x1c3b>
    2d3e:	9e 01       	movw	r18, r28
    2d40:	29 5b       	subi	r18, 0xB9	; 185
    2d42:	3e 4f       	sbci	r19, 0xFE	; 254
    2d44:	f9 01       	movw	r30, r18
    2d46:	91 83       	std	Z+1, r25	; 0x01
    2d48:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d4a:	ce 01       	movw	r24, r28
    2d4c:	8b 5b       	subi	r24, 0xBB	; 187
    2d4e:	9e 4f       	sbci	r25, 0xFE	; 254
    2d50:	9e 01       	movw	r18, r28
    2d52:	2b 5b       	subi	r18, 0xBB	; 187
    2d54:	3e 4f       	sbci	r19, 0xFE	; 254
    2d56:	f9 01       	movw	r30, r18
    2d58:	20 81       	ld	r18, Z
    2d5a:	31 81       	ldd	r19, Z+1	; 0x01
    2d5c:	21 50       	subi	r18, 0x01	; 1
    2d5e:	31 09       	sbc	r19, r1
    2d60:	fc 01       	movw	r30, r24
    2d62:	31 83       	std	Z+1, r19	; 0x01
    2d64:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d66:	ce 01       	movw	r24, r28
    2d68:	8b 5b       	subi	r24, 0xBB	; 187
    2d6a:	9e 4f       	sbci	r25, 0xFE	; 254
    2d6c:	fc 01       	movw	r30, r24
    2d6e:	80 81       	ld	r24, Z
    2d70:	91 81       	ldd	r25, Z+1	; 0x01
    2d72:	89 2b       	or	r24, r25
    2d74:	a1 f6       	brne	.-88     	; 0x2d1e <__stack+0x1c1f>
    2d76:	2c c0       	rjmp	.+88     	; 0x2dd0 <__stack+0x1cd1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d78:	8e 01       	movw	r16, r28
    2d7a:	0b 5b       	subi	r16, 0xBB	; 187
    2d7c:	1e 4f       	sbci	r17, 0xFE	; 254
    2d7e:	ce 01       	movw	r24, r28
    2d80:	8f 5b       	subi	r24, 0xBF	; 191
    2d82:	9e 4f       	sbci	r25, 0xFE	; 254
    2d84:	fc 01       	movw	r30, r24
    2d86:	60 81       	ld	r22, Z
    2d88:	71 81       	ldd	r23, Z+1	; 0x01
    2d8a:	82 81       	ldd	r24, Z+2	; 0x02
    2d8c:	93 81       	ldd	r25, Z+3	; 0x03
    2d8e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    2d92:	dc 01       	movw	r26, r24
    2d94:	cb 01       	movw	r24, r22
    2d96:	f8 01       	movw	r30, r16
    2d98:	91 83       	std	Z+1, r25	; 0x01
    2d9a:	80 83       	st	Z, r24
    2d9c:	ce 01       	movw	r24, r28
    2d9e:	87 5b       	subi	r24, 0xB7	; 183
    2da0:	9e 4f       	sbci	r25, 0xFE	; 254
    2da2:	9e 01       	movw	r18, r28
    2da4:	2b 5b       	subi	r18, 0xBB	; 187
    2da6:	3e 4f       	sbci	r19, 0xFE	; 254
    2da8:	f9 01       	movw	r30, r18
    2daa:	20 81       	ld	r18, Z
    2dac:	31 81       	ldd	r19, Z+1	; 0x01
    2dae:	fc 01       	movw	r30, r24
    2db0:	31 83       	std	Z+1, r19	; 0x01
    2db2:	20 83       	st	Z, r18
    2db4:	ce 01       	movw	r24, r28
    2db6:	87 5b       	subi	r24, 0xB7	; 183
    2db8:	9e 4f       	sbci	r25, 0xFE	; 254
    2dba:	fc 01       	movw	r30, r24
    2dbc:	80 81       	ld	r24, Z
    2dbe:	91 81       	ldd	r25, Z+1	; 0x01
    2dc0:	01 97       	sbiw	r24, 0x01	; 1
    2dc2:	f1 f7       	brne	.-4      	; 0x2dc0 <__stack+0x1cc1>
    2dc4:	9e 01       	movw	r18, r28
    2dc6:	27 5b       	subi	r18, 0xB7	; 183
    2dc8:	3e 4f       	sbci	r19, 0xFE	; 254
    2dca:	f9 01       	movw	r30, r18
    2dcc:	91 83       	std	Z+1, r25	; 0x01
    2dce:	80 83       	st	Z, r24
	_delay_ms(500);
		
	to_uARM("M2210 F510 T100\n");
    2dd0:	88 ed       	ldi	r24, 0xD8	; 216
    2dd2:	91 e0       	ldi	r25, 0x01	; 1
    2dd4:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    2dd8:	9e 01       	movw	r18, r28
    2dda:	2f 59       	subi	r18, 0x9F	; 159
    2ddc:	3f 4f       	sbci	r19, 0xFF	; 255
    2dde:	80 e0       	ldi	r24, 0x00	; 0
    2de0:	90 e0       	ldi	r25, 0x00	; 0
    2de2:	a1 ee       	ldi	r26, 0xE1	; 225
    2de4:	b3 e4       	ldi	r27, 0x43	; 67
    2de6:	f9 01       	movw	r30, r18
    2de8:	80 83       	st	Z, r24
    2dea:	91 83       	std	Z+1, r25	; 0x01
    2dec:	a2 83       	std	Z+2, r26	; 0x02
    2dee:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2df0:	8e 01       	movw	r16, r28
    2df2:	09 5c       	subi	r16, 0xC9	; 201
    2df4:	1e 4f       	sbci	r17, 0xFE	; 254
    2df6:	ce 01       	movw	r24, r28
    2df8:	8f 59       	subi	r24, 0x9F	; 159
    2dfa:	9f 4f       	sbci	r25, 0xFF	; 255
    2dfc:	20 e0       	ldi	r18, 0x00	; 0
    2dfe:	30 e0       	ldi	r19, 0x00	; 0
    2e00:	4a e7       	ldi	r20, 0x7A	; 122
    2e02:	55 e4       	ldi	r21, 0x45	; 69
    2e04:	fc 01       	movw	r30, r24
    2e06:	60 81       	ld	r22, Z
    2e08:	71 81       	ldd	r23, Z+1	; 0x01
    2e0a:	82 81       	ldd	r24, Z+2	; 0x02
    2e0c:	93 81       	ldd	r25, Z+3	; 0x03
    2e0e:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    2e12:	dc 01       	movw	r26, r24
    2e14:	cb 01       	movw	r24, r22
    2e16:	f8 01       	movw	r30, r16
    2e18:	80 83       	st	Z, r24
    2e1a:	91 83       	std	Z+1, r25	; 0x01
    2e1c:	a2 83       	std	Z+2, r26	; 0x02
    2e1e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2e20:	ce 01       	movw	r24, r28
    2e22:	89 5c       	subi	r24, 0xC9	; 201
    2e24:	9e 4f       	sbci	r25, 0xFE	; 254
    2e26:	20 e0       	ldi	r18, 0x00	; 0
    2e28:	30 e0       	ldi	r19, 0x00	; 0
    2e2a:	40 e8       	ldi	r20, 0x80	; 128
    2e2c:	5f e3       	ldi	r21, 0x3F	; 63
    2e2e:	fc 01       	movw	r30, r24
    2e30:	60 81       	ld	r22, Z
    2e32:	71 81       	ldd	r23, Z+1	; 0x01
    2e34:	82 81       	ldd	r24, Z+2	; 0x02
    2e36:	93 81       	ldd	r25, Z+3	; 0x03
    2e38:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    2e3c:	88 23       	and	r24, r24
    2e3e:	4c f4       	brge	.+18     	; 0x2e52 <__stack+0x1d53>
		__ticks = 1;
    2e40:	ce 01       	movw	r24, r28
    2e42:	85 5c       	subi	r24, 0xC5	; 197
    2e44:	9e 4f       	sbci	r25, 0xFE	; 254
    2e46:	21 e0       	ldi	r18, 0x01	; 1
    2e48:	30 e0       	ldi	r19, 0x00	; 0
    2e4a:	fc 01       	movw	r30, r24
    2e4c:	31 83       	std	Z+1, r19	; 0x01
    2e4e:	20 83       	st	Z, r18
    2e50:	6d c0       	rjmp	.+218    	; 0x2f2c <__stack+0x1e2d>
	else if (__tmp > 65535)
    2e52:	ce 01       	movw	r24, r28
    2e54:	89 5c       	subi	r24, 0xC9	; 201
    2e56:	9e 4f       	sbci	r25, 0xFE	; 254
    2e58:	20 e0       	ldi	r18, 0x00	; 0
    2e5a:	3f ef       	ldi	r19, 0xFF	; 255
    2e5c:	4f e7       	ldi	r20, 0x7F	; 127
    2e5e:	57 e4       	ldi	r21, 0x47	; 71
    2e60:	fc 01       	movw	r30, r24
    2e62:	60 81       	ld	r22, Z
    2e64:	71 81       	ldd	r23, Z+1	; 0x01
    2e66:	82 81       	ldd	r24, Z+2	; 0x02
    2e68:	93 81       	ldd	r25, Z+3	; 0x03
    2e6a:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    2e6e:	18 16       	cp	r1, r24
    2e70:	0c f0       	brlt	.+2      	; 0x2e74 <__stack+0x1d75>
    2e72:	4a c0       	rjmp	.+148    	; 0x2f08 <__stack+0x1e09>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e74:	ce 01       	movw	r24, r28
    2e76:	8f 59       	subi	r24, 0x9F	; 159
    2e78:	9f 4f       	sbci	r25, 0xFF	; 255
    2e7a:	20 e0       	ldi	r18, 0x00	; 0
    2e7c:	30 e0       	ldi	r19, 0x00	; 0
    2e7e:	40 e2       	ldi	r20, 0x20	; 32
    2e80:	51 e4       	ldi	r21, 0x41	; 65
    2e82:	fc 01       	movw	r30, r24
    2e84:	60 81       	ld	r22, Z
    2e86:	71 81       	ldd	r23, Z+1	; 0x01
    2e88:	82 81       	ldd	r24, Z+2	; 0x02
    2e8a:	93 81       	ldd	r25, Z+3	; 0x03
    2e8c:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    2e90:	dc 01       	movw	r26, r24
    2e92:	cb 01       	movw	r24, r22
    2e94:	8e 01       	movw	r16, r28
    2e96:	05 5c       	subi	r16, 0xC5	; 197
    2e98:	1e 4f       	sbci	r17, 0xFE	; 254
    2e9a:	bc 01       	movw	r22, r24
    2e9c:	cd 01       	movw	r24, r26
    2e9e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    2ea2:	dc 01       	movw	r26, r24
    2ea4:	cb 01       	movw	r24, r22
    2ea6:	f8 01       	movw	r30, r16
    2ea8:	91 83       	std	Z+1, r25	; 0x01
    2eaa:	80 83       	st	Z, r24
    2eac:	24 c0       	rjmp	.+72     	; 0x2ef6 <__stack+0x1df7>
    2eae:	ce 01       	movw	r24, r28
    2eb0:	83 5c       	subi	r24, 0xC3	; 195
    2eb2:	9e 4f       	sbci	r25, 0xFE	; 254
    2eb4:	20 e9       	ldi	r18, 0x90	; 144
    2eb6:	31 e0       	ldi	r19, 0x01	; 1
    2eb8:	fc 01       	movw	r30, r24
    2eba:	31 83       	std	Z+1, r19	; 0x01
    2ebc:	20 83       	st	Z, r18
    2ebe:	ce 01       	movw	r24, r28
    2ec0:	83 5c       	subi	r24, 0xC3	; 195
    2ec2:	9e 4f       	sbci	r25, 0xFE	; 254
    2ec4:	fc 01       	movw	r30, r24
    2ec6:	80 81       	ld	r24, Z
    2ec8:	91 81       	ldd	r25, Z+1	; 0x01
    2eca:	01 97       	sbiw	r24, 0x01	; 1
    2ecc:	f1 f7       	brne	.-4      	; 0x2eca <__stack+0x1dcb>
    2ece:	9e 01       	movw	r18, r28
    2ed0:	23 5c       	subi	r18, 0xC3	; 195
    2ed2:	3e 4f       	sbci	r19, 0xFE	; 254
    2ed4:	f9 01       	movw	r30, r18
    2ed6:	91 83       	std	Z+1, r25	; 0x01
    2ed8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2eda:	ce 01       	movw	r24, r28
    2edc:	85 5c       	subi	r24, 0xC5	; 197
    2ede:	9e 4f       	sbci	r25, 0xFE	; 254
    2ee0:	9e 01       	movw	r18, r28
    2ee2:	25 5c       	subi	r18, 0xC5	; 197
    2ee4:	3e 4f       	sbci	r19, 0xFE	; 254
    2ee6:	f9 01       	movw	r30, r18
    2ee8:	20 81       	ld	r18, Z
    2eea:	31 81       	ldd	r19, Z+1	; 0x01
    2eec:	21 50       	subi	r18, 0x01	; 1
    2eee:	31 09       	sbc	r19, r1
    2ef0:	fc 01       	movw	r30, r24
    2ef2:	31 83       	std	Z+1, r19	; 0x01
    2ef4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ef6:	ce 01       	movw	r24, r28
    2ef8:	85 5c       	subi	r24, 0xC5	; 197
    2efa:	9e 4f       	sbci	r25, 0xFE	; 254
    2efc:	fc 01       	movw	r30, r24
    2efe:	80 81       	ld	r24, Z
    2f00:	91 81       	ldd	r25, Z+1	; 0x01
    2f02:	89 2b       	or	r24, r25
    2f04:	a1 f6       	brne	.-88     	; 0x2eae <__stack+0x1daf>
    2f06:	2c c0       	rjmp	.+88     	; 0x2f60 <__stack+0x1e61>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f08:	8e 01       	movw	r16, r28
    2f0a:	05 5c       	subi	r16, 0xC5	; 197
    2f0c:	1e 4f       	sbci	r17, 0xFE	; 254
    2f0e:	ce 01       	movw	r24, r28
    2f10:	89 5c       	subi	r24, 0xC9	; 201
    2f12:	9e 4f       	sbci	r25, 0xFE	; 254
    2f14:	fc 01       	movw	r30, r24
    2f16:	60 81       	ld	r22, Z
    2f18:	71 81       	ldd	r23, Z+1	; 0x01
    2f1a:	82 81       	ldd	r24, Z+2	; 0x02
    2f1c:	93 81       	ldd	r25, Z+3	; 0x03
    2f1e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    2f22:	dc 01       	movw	r26, r24
    2f24:	cb 01       	movw	r24, r22
    2f26:	f8 01       	movw	r30, r16
    2f28:	91 83       	std	Z+1, r25	; 0x01
    2f2a:	80 83       	st	Z, r24
    2f2c:	ce 01       	movw	r24, r28
    2f2e:	81 5c       	subi	r24, 0xC1	; 193
    2f30:	9e 4f       	sbci	r25, 0xFE	; 254
    2f32:	9e 01       	movw	r18, r28
    2f34:	25 5c       	subi	r18, 0xC5	; 197
    2f36:	3e 4f       	sbci	r19, 0xFE	; 254
    2f38:	f9 01       	movw	r30, r18
    2f3a:	20 81       	ld	r18, Z
    2f3c:	31 81       	ldd	r19, Z+1	; 0x01
    2f3e:	fc 01       	movw	r30, r24
    2f40:	31 83       	std	Z+1, r19	; 0x01
    2f42:	20 83       	st	Z, r18
    2f44:	ce 01       	movw	r24, r28
    2f46:	81 5c       	subi	r24, 0xC1	; 193
    2f48:	9e 4f       	sbci	r25, 0xFE	; 254
    2f4a:	fc 01       	movw	r30, r24
    2f4c:	80 81       	ld	r24, Z
    2f4e:	91 81       	ldd	r25, Z+1	; 0x01
    2f50:	01 97       	sbiw	r24, 0x01	; 1
    2f52:	f1 f7       	brne	.-4      	; 0x2f50 <__stack+0x1e51>
    2f54:	9e 01       	movw	r18, r28
    2f56:	21 5c       	subi	r18, 0xC1	; 193
    2f58:	3e 4f       	sbci	r19, 0xFE	; 254
    2f5a:	f9 01       	movw	r30, r18
    2f5c:	91 83       	std	Z+1, r25	; 0x01
    2f5e:	80 83       	st	Z, r24
	_delay_ms(450);
	to_uARM("M2210 F380 T100\n");
    2f60:	8a ef       	ldi	r24, 0xFA	; 250
    2f62:	91 e0       	ldi	r25, 0x01	; 1
    2f64:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    2f68:	9e 01       	movw	r18, r28
    2f6a:	2b 59       	subi	r18, 0x9B	; 155
    2f6c:	3f 4f       	sbci	r19, 0xFF	; 255
    2f6e:	80 e0       	ldi	r24, 0x00	; 0
    2f70:	90 e0       	ldi	r25, 0x00	; 0
    2f72:	a8 ec       	ldi	r26, 0xC8	; 200
    2f74:	b3 e4       	ldi	r27, 0x43	; 67
    2f76:	f9 01       	movw	r30, r18
    2f78:	80 83       	st	Z, r24
    2f7a:	91 83       	std	Z+1, r25	; 0x01
    2f7c:	a2 83       	std	Z+2, r26	; 0x02
    2f7e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2f80:	8e 01       	movw	r16, r28
    2f82:	03 5d       	subi	r16, 0xD3	; 211
    2f84:	1e 4f       	sbci	r17, 0xFE	; 254
    2f86:	ce 01       	movw	r24, r28
    2f88:	8b 59       	subi	r24, 0x9B	; 155
    2f8a:	9f 4f       	sbci	r25, 0xFF	; 255
    2f8c:	20 e0       	ldi	r18, 0x00	; 0
    2f8e:	30 e0       	ldi	r19, 0x00	; 0
    2f90:	4a e7       	ldi	r20, 0x7A	; 122
    2f92:	55 e4       	ldi	r21, 0x45	; 69
    2f94:	fc 01       	movw	r30, r24
    2f96:	60 81       	ld	r22, Z
    2f98:	71 81       	ldd	r23, Z+1	; 0x01
    2f9a:	82 81       	ldd	r24, Z+2	; 0x02
    2f9c:	93 81       	ldd	r25, Z+3	; 0x03
    2f9e:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    2fa2:	dc 01       	movw	r26, r24
    2fa4:	cb 01       	movw	r24, r22
    2fa6:	f8 01       	movw	r30, r16
    2fa8:	80 83       	st	Z, r24
    2faa:	91 83       	std	Z+1, r25	; 0x01
    2fac:	a2 83       	std	Z+2, r26	; 0x02
    2fae:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2fb0:	ce 01       	movw	r24, r28
    2fb2:	83 5d       	subi	r24, 0xD3	; 211
    2fb4:	9e 4f       	sbci	r25, 0xFE	; 254
    2fb6:	20 e0       	ldi	r18, 0x00	; 0
    2fb8:	30 e0       	ldi	r19, 0x00	; 0
    2fba:	40 e8       	ldi	r20, 0x80	; 128
    2fbc:	5f e3       	ldi	r21, 0x3F	; 63
    2fbe:	fc 01       	movw	r30, r24
    2fc0:	60 81       	ld	r22, Z
    2fc2:	71 81       	ldd	r23, Z+1	; 0x01
    2fc4:	82 81       	ldd	r24, Z+2	; 0x02
    2fc6:	93 81       	ldd	r25, Z+3	; 0x03
    2fc8:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    2fcc:	88 23       	and	r24, r24
    2fce:	4c f4       	brge	.+18     	; 0x2fe2 <__stack+0x1ee3>
		__ticks = 1;
    2fd0:	ce 01       	movw	r24, r28
    2fd2:	8f 5c       	subi	r24, 0xCF	; 207
    2fd4:	9e 4f       	sbci	r25, 0xFE	; 254
    2fd6:	21 e0       	ldi	r18, 0x01	; 1
    2fd8:	30 e0       	ldi	r19, 0x00	; 0
    2fda:	fc 01       	movw	r30, r24
    2fdc:	31 83       	std	Z+1, r19	; 0x01
    2fde:	20 83       	st	Z, r18
    2fe0:	6d c0       	rjmp	.+218    	; 0x30bc <__stack+0x1fbd>
	else if (__tmp > 65535)
    2fe2:	ce 01       	movw	r24, r28
    2fe4:	83 5d       	subi	r24, 0xD3	; 211
    2fe6:	9e 4f       	sbci	r25, 0xFE	; 254
    2fe8:	20 e0       	ldi	r18, 0x00	; 0
    2fea:	3f ef       	ldi	r19, 0xFF	; 255
    2fec:	4f e7       	ldi	r20, 0x7F	; 127
    2fee:	57 e4       	ldi	r21, 0x47	; 71
    2ff0:	fc 01       	movw	r30, r24
    2ff2:	60 81       	ld	r22, Z
    2ff4:	71 81       	ldd	r23, Z+1	; 0x01
    2ff6:	82 81       	ldd	r24, Z+2	; 0x02
    2ff8:	93 81       	ldd	r25, Z+3	; 0x03
    2ffa:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    2ffe:	18 16       	cp	r1, r24
    3000:	0c f0       	brlt	.+2      	; 0x3004 <__stack+0x1f05>
    3002:	4a c0       	rjmp	.+148    	; 0x3098 <__stack+0x1f99>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3004:	ce 01       	movw	r24, r28
    3006:	8b 59       	subi	r24, 0x9B	; 155
    3008:	9f 4f       	sbci	r25, 0xFF	; 255
    300a:	20 e0       	ldi	r18, 0x00	; 0
    300c:	30 e0       	ldi	r19, 0x00	; 0
    300e:	40 e2       	ldi	r20, 0x20	; 32
    3010:	51 e4       	ldi	r21, 0x41	; 65
    3012:	fc 01       	movw	r30, r24
    3014:	60 81       	ld	r22, Z
    3016:	71 81       	ldd	r23, Z+1	; 0x01
    3018:	82 81       	ldd	r24, Z+2	; 0x02
    301a:	93 81       	ldd	r25, Z+3	; 0x03
    301c:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    3020:	dc 01       	movw	r26, r24
    3022:	cb 01       	movw	r24, r22
    3024:	8e 01       	movw	r16, r28
    3026:	0f 5c       	subi	r16, 0xCF	; 207
    3028:	1e 4f       	sbci	r17, 0xFE	; 254
    302a:	bc 01       	movw	r22, r24
    302c:	cd 01       	movw	r24, r26
    302e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    3032:	dc 01       	movw	r26, r24
    3034:	cb 01       	movw	r24, r22
    3036:	f8 01       	movw	r30, r16
    3038:	91 83       	std	Z+1, r25	; 0x01
    303a:	80 83       	st	Z, r24
    303c:	24 c0       	rjmp	.+72     	; 0x3086 <__stack+0x1f87>
    303e:	ce 01       	movw	r24, r28
    3040:	8d 5c       	subi	r24, 0xCD	; 205
    3042:	9e 4f       	sbci	r25, 0xFE	; 254
    3044:	20 e9       	ldi	r18, 0x90	; 144
    3046:	31 e0       	ldi	r19, 0x01	; 1
    3048:	fc 01       	movw	r30, r24
    304a:	31 83       	std	Z+1, r19	; 0x01
    304c:	20 83       	st	Z, r18
    304e:	ce 01       	movw	r24, r28
    3050:	8d 5c       	subi	r24, 0xCD	; 205
    3052:	9e 4f       	sbci	r25, 0xFE	; 254
    3054:	fc 01       	movw	r30, r24
    3056:	80 81       	ld	r24, Z
    3058:	91 81       	ldd	r25, Z+1	; 0x01
    305a:	01 97       	sbiw	r24, 0x01	; 1
    305c:	f1 f7       	brne	.-4      	; 0x305a <__stack+0x1f5b>
    305e:	9e 01       	movw	r18, r28
    3060:	2d 5c       	subi	r18, 0xCD	; 205
    3062:	3e 4f       	sbci	r19, 0xFE	; 254
    3064:	f9 01       	movw	r30, r18
    3066:	91 83       	std	Z+1, r25	; 0x01
    3068:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    306a:	ce 01       	movw	r24, r28
    306c:	8f 5c       	subi	r24, 0xCF	; 207
    306e:	9e 4f       	sbci	r25, 0xFE	; 254
    3070:	9e 01       	movw	r18, r28
    3072:	2f 5c       	subi	r18, 0xCF	; 207
    3074:	3e 4f       	sbci	r19, 0xFE	; 254
    3076:	f9 01       	movw	r30, r18
    3078:	20 81       	ld	r18, Z
    307a:	31 81       	ldd	r19, Z+1	; 0x01
    307c:	21 50       	subi	r18, 0x01	; 1
    307e:	31 09       	sbc	r19, r1
    3080:	fc 01       	movw	r30, r24
    3082:	31 83       	std	Z+1, r19	; 0x01
    3084:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3086:	ce 01       	movw	r24, r28
    3088:	8f 5c       	subi	r24, 0xCF	; 207
    308a:	9e 4f       	sbci	r25, 0xFE	; 254
    308c:	fc 01       	movw	r30, r24
    308e:	80 81       	ld	r24, Z
    3090:	91 81       	ldd	r25, Z+1	; 0x01
    3092:	89 2b       	or	r24, r25
    3094:	a1 f6       	brne	.-88     	; 0x303e <__stack+0x1f3f>
    3096:	2c c0       	rjmp	.+88     	; 0x30f0 <__stack+0x1ff1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3098:	8e 01       	movw	r16, r28
    309a:	0f 5c       	subi	r16, 0xCF	; 207
    309c:	1e 4f       	sbci	r17, 0xFE	; 254
    309e:	ce 01       	movw	r24, r28
    30a0:	83 5d       	subi	r24, 0xD3	; 211
    30a2:	9e 4f       	sbci	r25, 0xFE	; 254
    30a4:	fc 01       	movw	r30, r24
    30a6:	60 81       	ld	r22, Z
    30a8:	71 81       	ldd	r23, Z+1	; 0x01
    30aa:	82 81       	ldd	r24, Z+2	; 0x02
    30ac:	93 81       	ldd	r25, Z+3	; 0x03
    30ae:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    30b2:	dc 01       	movw	r26, r24
    30b4:	cb 01       	movw	r24, r22
    30b6:	f8 01       	movw	r30, r16
    30b8:	91 83       	std	Z+1, r25	; 0x01
    30ba:	80 83       	st	Z, r24
    30bc:	ce 01       	movw	r24, r28
    30be:	8b 5c       	subi	r24, 0xCB	; 203
    30c0:	9e 4f       	sbci	r25, 0xFE	; 254
    30c2:	9e 01       	movw	r18, r28
    30c4:	2f 5c       	subi	r18, 0xCF	; 207
    30c6:	3e 4f       	sbci	r19, 0xFE	; 254
    30c8:	f9 01       	movw	r30, r18
    30ca:	20 81       	ld	r18, Z
    30cc:	31 81       	ldd	r19, Z+1	; 0x01
    30ce:	fc 01       	movw	r30, r24
    30d0:	31 83       	std	Z+1, r19	; 0x01
    30d2:	20 83       	st	Z, r18
    30d4:	ce 01       	movw	r24, r28
    30d6:	8b 5c       	subi	r24, 0xCB	; 203
    30d8:	9e 4f       	sbci	r25, 0xFE	; 254
    30da:	fc 01       	movw	r30, r24
    30dc:	80 81       	ld	r24, Z
    30de:	91 81       	ldd	r25, Z+1	; 0x01
    30e0:	01 97       	sbiw	r24, 0x01	; 1
    30e2:	f1 f7       	brne	.-4      	; 0x30e0 <__stack+0x1fe1>
    30e4:	9e 01       	movw	r18, r28
    30e6:	2b 5c       	subi	r18, 0xCB	; 203
    30e8:	3e 4f       	sbci	r19, 0xFE	; 254
    30ea:	f9 01       	movw	r30, r18
    30ec:	91 83       	std	Z+1, r25	; 0x01
    30ee:	80 83       	st	Z, r24
	_delay_ms(400);
	to_uARM("M2210 F320 T100\n");
    30f0:	8b e0       	ldi	r24, 0x0B	; 11
    30f2:	92 e0       	ldi	r25, 0x02	; 2
    30f4:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    30f8:	9e 01       	movw	r18, r28
    30fa:	27 59       	subi	r18, 0x97	; 151
    30fc:	3f 4f       	sbci	r19, 0xFF	; 255
    30fe:	80 e0       	ldi	r24, 0x00	; 0
    3100:	90 e0       	ldi	r25, 0x00	; 0
    3102:	aa ef       	ldi	r26, 0xFA	; 250
    3104:	b3 e4       	ldi	r27, 0x43	; 67
    3106:	f9 01       	movw	r30, r18
    3108:	80 83       	st	Z, r24
    310a:	91 83       	std	Z+1, r25	; 0x01
    310c:	a2 83       	std	Z+2, r26	; 0x02
    310e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3110:	8e 01       	movw	r16, r28
    3112:	0d 5d       	subi	r16, 0xDD	; 221
    3114:	1e 4f       	sbci	r17, 0xFE	; 254
    3116:	ce 01       	movw	r24, r28
    3118:	87 59       	subi	r24, 0x97	; 151
    311a:	9f 4f       	sbci	r25, 0xFF	; 255
    311c:	20 e0       	ldi	r18, 0x00	; 0
    311e:	30 e0       	ldi	r19, 0x00	; 0
    3120:	4a e7       	ldi	r20, 0x7A	; 122
    3122:	55 e4       	ldi	r21, 0x45	; 69
    3124:	fc 01       	movw	r30, r24
    3126:	60 81       	ld	r22, Z
    3128:	71 81       	ldd	r23, Z+1	; 0x01
    312a:	82 81       	ldd	r24, Z+2	; 0x02
    312c:	93 81       	ldd	r25, Z+3	; 0x03
    312e:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    3132:	dc 01       	movw	r26, r24
    3134:	cb 01       	movw	r24, r22
    3136:	f8 01       	movw	r30, r16
    3138:	80 83       	st	Z, r24
    313a:	91 83       	std	Z+1, r25	; 0x01
    313c:	a2 83       	std	Z+2, r26	; 0x02
    313e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3140:	ce 01       	movw	r24, r28
    3142:	8d 5d       	subi	r24, 0xDD	; 221
    3144:	9e 4f       	sbci	r25, 0xFE	; 254
    3146:	20 e0       	ldi	r18, 0x00	; 0
    3148:	30 e0       	ldi	r19, 0x00	; 0
    314a:	40 e8       	ldi	r20, 0x80	; 128
    314c:	5f e3       	ldi	r21, 0x3F	; 63
    314e:	fc 01       	movw	r30, r24
    3150:	60 81       	ld	r22, Z
    3152:	71 81       	ldd	r23, Z+1	; 0x01
    3154:	82 81       	ldd	r24, Z+2	; 0x02
    3156:	93 81       	ldd	r25, Z+3	; 0x03
    3158:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    315c:	88 23       	and	r24, r24
    315e:	4c f4       	brge	.+18     	; 0x3172 <__stack+0x2073>
		__ticks = 1;
    3160:	ce 01       	movw	r24, r28
    3162:	89 5d       	subi	r24, 0xD9	; 217
    3164:	9e 4f       	sbci	r25, 0xFE	; 254
    3166:	21 e0       	ldi	r18, 0x01	; 1
    3168:	30 e0       	ldi	r19, 0x00	; 0
    316a:	fc 01       	movw	r30, r24
    316c:	31 83       	std	Z+1, r19	; 0x01
    316e:	20 83       	st	Z, r18
    3170:	6d c0       	rjmp	.+218    	; 0x324c <__stack+0x214d>
	else if (__tmp > 65535)
    3172:	ce 01       	movw	r24, r28
    3174:	8d 5d       	subi	r24, 0xDD	; 221
    3176:	9e 4f       	sbci	r25, 0xFE	; 254
    3178:	20 e0       	ldi	r18, 0x00	; 0
    317a:	3f ef       	ldi	r19, 0xFF	; 255
    317c:	4f e7       	ldi	r20, 0x7F	; 127
    317e:	57 e4       	ldi	r21, 0x47	; 71
    3180:	fc 01       	movw	r30, r24
    3182:	60 81       	ld	r22, Z
    3184:	71 81       	ldd	r23, Z+1	; 0x01
    3186:	82 81       	ldd	r24, Z+2	; 0x02
    3188:	93 81       	ldd	r25, Z+3	; 0x03
    318a:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    318e:	18 16       	cp	r1, r24
    3190:	0c f0       	brlt	.+2      	; 0x3194 <__stack+0x2095>
    3192:	4a c0       	rjmp	.+148    	; 0x3228 <__stack+0x2129>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3194:	ce 01       	movw	r24, r28
    3196:	87 59       	subi	r24, 0x97	; 151
    3198:	9f 4f       	sbci	r25, 0xFF	; 255
    319a:	20 e0       	ldi	r18, 0x00	; 0
    319c:	30 e0       	ldi	r19, 0x00	; 0
    319e:	40 e2       	ldi	r20, 0x20	; 32
    31a0:	51 e4       	ldi	r21, 0x41	; 65
    31a2:	fc 01       	movw	r30, r24
    31a4:	60 81       	ld	r22, Z
    31a6:	71 81       	ldd	r23, Z+1	; 0x01
    31a8:	82 81       	ldd	r24, Z+2	; 0x02
    31aa:	93 81       	ldd	r25, Z+3	; 0x03
    31ac:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    31b0:	dc 01       	movw	r26, r24
    31b2:	cb 01       	movw	r24, r22
    31b4:	8e 01       	movw	r16, r28
    31b6:	09 5d       	subi	r16, 0xD9	; 217
    31b8:	1e 4f       	sbci	r17, 0xFE	; 254
    31ba:	bc 01       	movw	r22, r24
    31bc:	cd 01       	movw	r24, r26
    31be:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    31c2:	dc 01       	movw	r26, r24
    31c4:	cb 01       	movw	r24, r22
    31c6:	f8 01       	movw	r30, r16
    31c8:	91 83       	std	Z+1, r25	; 0x01
    31ca:	80 83       	st	Z, r24
    31cc:	24 c0       	rjmp	.+72     	; 0x3216 <__stack+0x2117>
    31ce:	ce 01       	movw	r24, r28
    31d0:	87 5d       	subi	r24, 0xD7	; 215
    31d2:	9e 4f       	sbci	r25, 0xFE	; 254
    31d4:	20 e9       	ldi	r18, 0x90	; 144
    31d6:	31 e0       	ldi	r19, 0x01	; 1
    31d8:	fc 01       	movw	r30, r24
    31da:	31 83       	std	Z+1, r19	; 0x01
    31dc:	20 83       	st	Z, r18
    31de:	ce 01       	movw	r24, r28
    31e0:	87 5d       	subi	r24, 0xD7	; 215
    31e2:	9e 4f       	sbci	r25, 0xFE	; 254
    31e4:	fc 01       	movw	r30, r24
    31e6:	80 81       	ld	r24, Z
    31e8:	91 81       	ldd	r25, Z+1	; 0x01
    31ea:	01 97       	sbiw	r24, 0x01	; 1
    31ec:	f1 f7       	brne	.-4      	; 0x31ea <__stack+0x20eb>
    31ee:	9e 01       	movw	r18, r28
    31f0:	27 5d       	subi	r18, 0xD7	; 215
    31f2:	3e 4f       	sbci	r19, 0xFE	; 254
    31f4:	f9 01       	movw	r30, r18
    31f6:	91 83       	std	Z+1, r25	; 0x01
    31f8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31fa:	ce 01       	movw	r24, r28
    31fc:	89 5d       	subi	r24, 0xD9	; 217
    31fe:	9e 4f       	sbci	r25, 0xFE	; 254
    3200:	9e 01       	movw	r18, r28
    3202:	29 5d       	subi	r18, 0xD9	; 217
    3204:	3e 4f       	sbci	r19, 0xFE	; 254
    3206:	f9 01       	movw	r30, r18
    3208:	20 81       	ld	r18, Z
    320a:	31 81       	ldd	r19, Z+1	; 0x01
    320c:	21 50       	subi	r18, 0x01	; 1
    320e:	31 09       	sbc	r19, r1
    3210:	fc 01       	movw	r30, r24
    3212:	31 83       	std	Z+1, r19	; 0x01
    3214:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3216:	ce 01       	movw	r24, r28
    3218:	89 5d       	subi	r24, 0xD9	; 217
    321a:	9e 4f       	sbci	r25, 0xFE	; 254
    321c:	fc 01       	movw	r30, r24
    321e:	80 81       	ld	r24, Z
    3220:	91 81       	ldd	r25, Z+1	; 0x01
    3222:	89 2b       	or	r24, r25
    3224:	a1 f6       	brne	.-88     	; 0x31ce <__stack+0x20cf>
    3226:	2c c0       	rjmp	.+88     	; 0x3280 <__stack+0x2181>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3228:	8e 01       	movw	r16, r28
    322a:	09 5d       	subi	r16, 0xD9	; 217
    322c:	1e 4f       	sbci	r17, 0xFE	; 254
    322e:	ce 01       	movw	r24, r28
    3230:	8d 5d       	subi	r24, 0xDD	; 221
    3232:	9e 4f       	sbci	r25, 0xFE	; 254
    3234:	fc 01       	movw	r30, r24
    3236:	60 81       	ld	r22, Z
    3238:	71 81       	ldd	r23, Z+1	; 0x01
    323a:	82 81       	ldd	r24, Z+2	; 0x02
    323c:	93 81       	ldd	r25, Z+3	; 0x03
    323e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    3242:	dc 01       	movw	r26, r24
    3244:	cb 01       	movw	r24, r22
    3246:	f8 01       	movw	r30, r16
    3248:	91 83       	std	Z+1, r25	; 0x01
    324a:	80 83       	st	Z, r24
    324c:	ce 01       	movw	r24, r28
    324e:	85 5d       	subi	r24, 0xD5	; 213
    3250:	9e 4f       	sbci	r25, 0xFE	; 254
    3252:	9e 01       	movw	r18, r28
    3254:	29 5d       	subi	r18, 0xD9	; 217
    3256:	3e 4f       	sbci	r19, 0xFE	; 254
    3258:	f9 01       	movw	r30, r18
    325a:	20 81       	ld	r18, Z
    325c:	31 81       	ldd	r19, Z+1	; 0x01
    325e:	fc 01       	movw	r30, r24
    3260:	31 83       	std	Z+1, r19	; 0x01
    3262:	20 83       	st	Z, r18
    3264:	ce 01       	movw	r24, r28
    3266:	85 5d       	subi	r24, 0xD5	; 213
    3268:	9e 4f       	sbci	r25, 0xFE	; 254
    326a:	fc 01       	movw	r30, r24
    326c:	80 81       	ld	r24, Z
    326e:	91 81       	ldd	r25, Z+1	; 0x01
    3270:	01 97       	sbiw	r24, 0x01	; 1
    3272:	f1 f7       	brne	.-4      	; 0x3270 <__stack+0x2171>
    3274:	9e 01       	movw	r18, r28
    3276:	25 5d       	subi	r18, 0xD5	; 213
    3278:	3e 4f       	sbci	r19, 0xFE	; 254
    327a:	f9 01       	movw	r30, r18
    327c:	91 83       	std	Z+1, r25	; 0x01
    327e:	80 83       	st	Z, r24
	_delay_ms(500);
	to_uARM("M2210 F440 T100\n");
    3280:	8c e1       	ldi	r24, 0x1C	; 28
    3282:	92 e0       	ldi	r25, 0x02	; 2
    3284:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    3288:	9e 01       	movw	r18, r28
    328a:	23 59       	subi	r18, 0x93	; 147
    328c:	3f 4f       	sbci	r19, 0xFF	; 255
    328e:	80 e0       	ldi	r24, 0x00	; 0
    3290:	90 e0       	ldi	r25, 0x00	; 0
    3292:	a6 e9       	ldi	r26, 0x96	; 150
    3294:	b3 e4       	ldi	r27, 0x43	; 67
    3296:	f9 01       	movw	r30, r18
    3298:	80 83       	st	Z, r24
    329a:	91 83       	std	Z+1, r25	; 0x01
    329c:	a2 83       	std	Z+2, r26	; 0x02
    329e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    32a0:	8e 01       	movw	r16, r28
    32a2:	07 5e       	subi	r16, 0xE7	; 231
    32a4:	1e 4f       	sbci	r17, 0xFE	; 254
    32a6:	ce 01       	movw	r24, r28
    32a8:	83 59       	subi	r24, 0x93	; 147
    32aa:	9f 4f       	sbci	r25, 0xFF	; 255
    32ac:	20 e0       	ldi	r18, 0x00	; 0
    32ae:	30 e0       	ldi	r19, 0x00	; 0
    32b0:	4a e7       	ldi	r20, 0x7A	; 122
    32b2:	55 e4       	ldi	r21, 0x45	; 69
    32b4:	fc 01       	movw	r30, r24
    32b6:	60 81       	ld	r22, Z
    32b8:	71 81       	ldd	r23, Z+1	; 0x01
    32ba:	82 81       	ldd	r24, Z+2	; 0x02
    32bc:	93 81       	ldd	r25, Z+3	; 0x03
    32be:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    32c2:	dc 01       	movw	r26, r24
    32c4:	cb 01       	movw	r24, r22
    32c6:	f8 01       	movw	r30, r16
    32c8:	80 83       	st	Z, r24
    32ca:	91 83       	std	Z+1, r25	; 0x01
    32cc:	a2 83       	std	Z+2, r26	; 0x02
    32ce:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    32d0:	ce 01       	movw	r24, r28
    32d2:	87 5e       	subi	r24, 0xE7	; 231
    32d4:	9e 4f       	sbci	r25, 0xFE	; 254
    32d6:	20 e0       	ldi	r18, 0x00	; 0
    32d8:	30 e0       	ldi	r19, 0x00	; 0
    32da:	40 e8       	ldi	r20, 0x80	; 128
    32dc:	5f e3       	ldi	r21, 0x3F	; 63
    32de:	fc 01       	movw	r30, r24
    32e0:	60 81       	ld	r22, Z
    32e2:	71 81       	ldd	r23, Z+1	; 0x01
    32e4:	82 81       	ldd	r24, Z+2	; 0x02
    32e6:	93 81       	ldd	r25, Z+3	; 0x03
    32e8:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    32ec:	88 23       	and	r24, r24
    32ee:	4c f4       	brge	.+18     	; 0x3302 <__stack+0x2203>
		__ticks = 1;
    32f0:	ce 01       	movw	r24, r28
    32f2:	83 5e       	subi	r24, 0xE3	; 227
    32f4:	9e 4f       	sbci	r25, 0xFE	; 254
    32f6:	21 e0       	ldi	r18, 0x01	; 1
    32f8:	30 e0       	ldi	r19, 0x00	; 0
    32fa:	fc 01       	movw	r30, r24
    32fc:	31 83       	std	Z+1, r19	; 0x01
    32fe:	20 83       	st	Z, r18
    3300:	6d c0       	rjmp	.+218    	; 0x33dc <__stack+0x22dd>
	else if (__tmp > 65535)
    3302:	ce 01       	movw	r24, r28
    3304:	87 5e       	subi	r24, 0xE7	; 231
    3306:	9e 4f       	sbci	r25, 0xFE	; 254
    3308:	20 e0       	ldi	r18, 0x00	; 0
    330a:	3f ef       	ldi	r19, 0xFF	; 255
    330c:	4f e7       	ldi	r20, 0x7F	; 127
    330e:	57 e4       	ldi	r21, 0x47	; 71
    3310:	fc 01       	movw	r30, r24
    3312:	60 81       	ld	r22, Z
    3314:	71 81       	ldd	r23, Z+1	; 0x01
    3316:	82 81       	ldd	r24, Z+2	; 0x02
    3318:	93 81       	ldd	r25, Z+3	; 0x03
    331a:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    331e:	18 16       	cp	r1, r24
    3320:	0c f0       	brlt	.+2      	; 0x3324 <__stack+0x2225>
    3322:	4a c0       	rjmp	.+148    	; 0x33b8 <__stack+0x22b9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3324:	ce 01       	movw	r24, r28
    3326:	83 59       	subi	r24, 0x93	; 147
    3328:	9f 4f       	sbci	r25, 0xFF	; 255
    332a:	20 e0       	ldi	r18, 0x00	; 0
    332c:	30 e0       	ldi	r19, 0x00	; 0
    332e:	40 e2       	ldi	r20, 0x20	; 32
    3330:	51 e4       	ldi	r21, 0x41	; 65
    3332:	fc 01       	movw	r30, r24
    3334:	60 81       	ld	r22, Z
    3336:	71 81       	ldd	r23, Z+1	; 0x01
    3338:	82 81       	ldd	r24, Z+2	; 0x02
    333a:	93 81       	ldd	r25, Z+3	; 0x03
    333c:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    3340:	dc 01       	movw	r26, r24
    3342:	cb 01       	movw	r24, r22
    3344:	8e 01       	movw	r16, r28
    3346:	03 5e       	subi	r16, 0xE3	; 227
    3348:	1e 4f       	sbci	r17, 0xFE	; 254
    334a:	bc 01       	movw	r22, r24
    334c:	cd 01       	movw	r24, r26
    334e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    3352:	dc 01       	movw	r26, r24
    3354:	cb 01       	movw	r24, r22
    3356:	f8 01       	movw	r30, r16
    3358:	91 83       	std	Z+1, r25	; 0x01
    335a:	80 83       	st	Z, r24
    335c:	24 c0       	rjmp	.+72     	; 0x33a6 <__stack+0x22a7>
    335e:	ce 01       	movw	r24, r28
    3360:	81 5e       	subi	r24, 0xE1	; 225
    3362:	9e 4f       	sbci	r25, 0xFE	; 254
    3364:	20 e9       	ldi	r18, 0x90	; 144
    3366:	31 e0       	ldi	r19, 0x01	; 1
    3368:	fc 01       	movw	r30, r24
    336a:	31 83       	std	Z+1, r19	; 0x01
    336c:	20 83       	st	Z, r18
    336e:	ce 01       	movw	r24, r28
    3370:	81 5e       	subi	r24, 0xE1	; 225
    3372:	9e 4f       	sbci	r25, 0xFE	; 254
    3374:	fc 01       	movw	r30, r24
    3376:	80 81       	ld	r24, Z
    3378:	91 81       	ldd	r25, Z+1	; 0x01
    337a:	01 97       	sbiw	r24, 0x01	; 1
    337c:	f1 f7       	brne	.-4      	; 0x337a <__stack+0x227b>
    337e:	9e 01       	movw	r18, r28
    3380:	21 5e       	subi	r18, 0xE1	; 225
    3382:	3e 4f       	sbci	r19, 0xFE	; 254
    3384:	f9 01       	movw	r30, r18
    3386:	91 83       	std	Z+1, r25	; 0x01
    3388:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    338a:	ce 01       	movw	r24, r28
    338c:	83 5e       	subi	r24, 0xE3	; 227
    338e:	9e 4f       	sbci	r25, 0xFE	; 254
    3390:	9e 01       	movw	r18, r28
    3392:	23 5e       	subi	r18, 0xE3	; 227
    3394:	3e 4f       	sbci	r19, 0xFE	; 254
    3396:	f9 01       	movw	r30, r18
    3398:	20 81       	ld	r18, Z
    339a:	31 81       	ldd	r19, Z+1	; 0x01
    339c:	21 50       	subi	r18, 0x01	; 1
    339e:	31 09       	sbc	r19, r1
    33a0:	fc 01       	movw	r30, r24
    33a2:	31 83       	std	Z+1, r19	; 0x01
    33a4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    33a6:	ce 01       	movw	r24, r28
    33a8:	83 5e       	subi	r24, 0xE3	; 227
    33aa:	9e 4f       	sbci	r25, 0xFE	; 254
    33ac:	fc 01       	movw	r30, r24
    33ae:	80 81       	ld	r24, Z
    33b0:	91 81       	ldd	r25, Z+1	; 0x01
    33b2:	89 2b       	or	r24, r25
    33b4:	a1 f6       	brne	.-88     	; 0x335e <__stack+0x225f>
    33b6:	2c c0       	rjmp	.+88     	; 0x3410 <__stack+0x2311>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    33b8:	8e 01       	movw	r16, r28
    33ba:	03 5e       	subi	r16, 0xE3	; 227
    33bc:	1e 4f       	sbci	r17, 0xFE	; 254
    33be:	ce 01       	movw	r24, r28
    33c0:	87 5e       	subi	r24, 0xE7	; 231
    33c2:	9e 4f       	sbci	r25, 0xFE	; 254
    33c4:	fc 01       	movw	r30, r24
    33c6:	60 81       	ld	r22, Z
    33c8:	71 81       	ldd	r23, Z+1	; 0x01
    33ca:	82 81       	ldd	r24, Z+2	; 0x02
    33cc:	93 81       	ldd	r25, Z+3	; 0x03
    33ce:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    33d2:	dc 01       	movw	r26, r24
    33d4:	cb 01       	movw	r24, r22
    33d6:	f8 01       	movw	r30, r16
    33d8:	91 83       	std	Z+1, r25	; 0x01
    33da:	80 83       	st	Z, r24
    33dc:	ce 01       	movw	r24, r28
    33de:	8f 5d       	subi	r24, 0xDF	; 223
    33e0:	9e 4f       	sbci	r25, 0xFE	; 254
    33e2:	9e 01       	movw	r18, r28
    33e4:	23 5e       	subi	r18, 0xE3	; 227
    33e6:	3e 4f       	sbci	r19, 0xFE	; 254
    33e8:	f9 01       	movw	r30, r18
    33ea:	20 81       	ld	r18, Z
    33ec:	31 81       	ldd	r19, Z+1	; 0x01
    33ee:	fc 01       	movw	r30, r24
    33f0:	31 83       	std	Z+1, r19	; 0x01
    33f2:	20 83       	st	Z, r18
    33f4:	ce 01       	movw	r24, r28
    33f6:	8f 5d       	subi	r24, 0xDF	; 223
    33f8:	9e 4f       	sbci	r25, 0xFE	; 254
    33fa:	fc 01       	movw	r30, r24
    33fc:	80 81       	ld	r24, Z
    33fe:	91 81       	ldd	r25, Z+1	; 0x01
    3400:	01 97       	sbiw	r24, 0x01	; 1
    3402:	f1 f7       	brne	.-4      	; 0x3400 <__stack+0x2301>
    3404:	9e 01       	movw	r18, r28
    3406:	2f 5d       	subi	r18, 0xDF	; 223
    3408:	3e 4f       	sbci	r19, 0xFE	; 254
    340a:	f9 01       	movw	r30, r18
    340c:	91 83       	std	Z+1, r25	; 0x01
    340e:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F480 T80\n");
    3410:	8d e2       	ldi	r24, 0x2D	; 45
    3412:	92 e0       	ldi	r25, 0x02	; 2
    3414:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    3418:	9e 01       	movw	r18, r28
    341a:	2f 58       	subi	r18, 0x8F	; 143
    341c:	3f 4f       	sbci	r19, 0xFF	; 255
    341e:	80 e0       	ldi	r24, 0x00	; 0
    3420:	90 e0       	ldi	r25, 0x00	; 0
    3422:	a5 ea       	ldi	r26, 0xA5	; 165
    3424:	b3 e4       	ldi	r27, 0x43	; 67
    3426:	f9 01       	movw	r30, r18
    3428:	80 83       	st	Z, r24
    342a:	91 83       	std	Z+1, r25	; 0x01
    342c:	a2 83       	std	Z+2, r26	; 0x02
    342e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3430:	8e 01       	movw	r16, r28
    3432:	01 5f       	subi	r16, 0xF1	; 241
    3434:	1e 4f       	sbci	r17, 0xFE	; 254
    3436:	ce 01       	movw	r24, r28
    3438:	8f 58       	subi	r24, 0x8F	; 143
    343a:	9f 4f       	sbci	r25, 0xFF	; 255
    343c:	20 e0       	ldi	r18, 0x00	; 0
    343e:	30 e0       	ldi	r19, 0x00	; 0
    3440:	4a e7       	ldi	r20, 0x7A	; 122
    3442:	55 e4       	ldi	r21, 0x45	; 69
    3444:	fc 01       	movw	r30, r24
    3446:	60 81       	ld	r22, Z
    3448:	71 81       	ldd	r23, Z+1	; 0x01
    344a:	82 81       	ldd	r24, Z+2	; 0x02
    344c:	93 81       	ldd	r25, Z+3	; 0x03
    344e:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    3452:	dc 01       	movw	r26, r24
    3454:	cb 01       	movw	r24, r22
    3456:	f8 01       	movw	r30, r16
    3458:	80 83       	st	Z, r24
    345a:	91 83       	std	Z+1, r25	; 0x01
    345c:	a2 83       	std	Z+2, r26	; 0x02
    345e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3460:	ce 01       	movw	r24, r28
    3462:	81 5f       	subi	r24, 0xF1	; 241
    3464:	9e 4f       	sbci	r25, 0xFE	; 254
    3466:	20 e0       	ldi	r18, 0x00	; 0
    3468:	30 e0       	ldi	r19, 0x00	; 0
    346a:	40 e8       	ldi	r20, 0x80	; 128
    346c:	5f e3       	ldi	r21, 0x3F	; 63
    346e:	fc 01       	movw	r30, r24
    3470:	60 81       	ld	r22, Z
    3472:	71 81       	ldd	r23, Z+1	; 0x01
    3474:	82 81       	ldd	r24, Z+2	; 0x02
    3476:	93 81       	ldd	r25, Z+3	; 0x03
    3478:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    347c:	88 23       	and	r24, r24
    347e:	4c f4       	brge	.+18     	; 0x3492 <__stack+0x2393>
		__ticks = 1;
    3480:	ce 01       	movw	r24, r28
    3482:	8d 5e       	subi	r24, 0xED	; 237
    3484:	9e 4f       	sbci	r25, 0xFE	; 254
    3486:	21 e0       	ldi	r18, 0x01	; 1
    3488:	30 e0       	ldi	r19, 0x00	; 0
    348a:	fc 01       	movw	r30, r24
    348c:	31 83       	std	Z+1, r19	; 0x01
    348e:	20 83       	st	Z, r18
    3490:	6d c0       	rjmp	.+218    	; 0x356c <__stack+0x246d>
	else if (__tmp > 65535)
    3492:	ce 01       	movw	r24, r28
    3494:	81 5f       	subi	r24, 0xF1	; 241
    3496:	9e 4f       	sbci	r25, 0xFE	; 254
    3498:	20 e0       	ldi	r18, 0x00	; 0
    349a:	3f ef       	ldi	r19, 0xFF	; 255
    349c:	4f e7       	ldi	r20, 0x7F	; 127
    349e:	57 e4       	ldi	r21, 0x47	; 71
    34a0:	fc 01       	movw	r30, r24
    34a2:	60 81       	ld	r22, Z
    34a4:	71 81       	ldd	r23, Z+1	; 0x01
    34a6:	82 81       	ldd	r24, Z+2	; 0x02
    34a8:	93 81       	ldd	r25, Z+3	; 0x03
    34aa:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    34ae:	18 16       	cp	r1, r24
    34b0:	0c f0       	brlt	.+2      	; 0x34b4 <__stack+0x23b5>
    34b2:	4a c0       	rjmp	.+148    	; 0x3548 <__stack+0x2449>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34b4:	ce 01       	movw	r24, r28
    34b6:	8f 58       	subi	r24, 0x8F	; 143
    34b8:	9f 4f       	sbci	r25, 0xFF	; 255
    34ba:	20 e0       	ldi	r18, 0x00	; 0
    34bc:	30 e0       	ldi	r19, 0x00	; 0
    34be:	40 e2       	ldi	r20, 0x20	; 32
    34c0:	51 e4       	ldi	r21, 0x41	; 65
    34c2:	fc 01       	movw	r30, r24
    34c4:	60 81       	ld	r22, Z
    34c6:	71 81       	ldd	r23, Z+1	; 0x01
    34c8:	82 81       	ldd	r24, Z+2	; 0x02
    34ca:	93 81       	ldd	r25, Z+3	; 0x03
    34cc:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    34d0:	dc 01       	movw	r26, r24
    34d2:	cb 01       	movw	r24, r22
    34d4:	8e 01       	movw	r16, r28
    34d6:	0d 5e       	subi	r16, 0xED	; 237
    34d8:	1e 4f       	sbci	r17, 0xFE	; 254
    34da:	bc 01       	movw	r22, r24
    34dc:	cd 01       	movw	r24, r26
    34de:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    34e2:	dc 01       	movw	r26, r24
    34e4:	cb 01       	movw	r24, r22
    34e6:	f8 01       	movw	r30, r16
    34e8:	91 83       	std	Z+1, r25	; 0x01
    34ea:	80 83       	st	Z, r24
    34ec:	24 c0       	rjmp	.+72     	; 0x3536 <__stack+0x2437>
    34ee:	ce 01       	movw	r24, r28
    34f0:	8b 5e       	subi	r24, 0xEB	; 235
    34f2:	9e 4f       	sbci	r25, 0xFE	; 254
    34f4:	20 e9       	ldi	r18, 0x90	; 144
    34f6:	31 e0       	ldi	r19, 0x01	; 1
    34f8:	fc 01       	movw	r30, r24
    34fa:	31 83       	std	Z+1, r19	; 0x01
    34fc:	20 83       	st	Z, r18
    34fe:	ce 01       	movw	r24, r28
    3500:	8b 5e       	subi	r24, 0xEB	; 235
    3502:	9e 4f       	sbci	r25, 0xFE	; 254
    3504:	fc 01       	movw	r30, r24
    3506:	80 81       	ld	r24, Z
    3508:	91 81       	ldd	r25, Z+1	; 0x01
    350a:	01 97       	sbiw	r24, 0x01	; 1
    350c:	f1 f7       	brne	.-4      	; 0x350a <__stack+0x240b>
    350e:	9e 01       	movw	r18, r28
    3510:	2b 5e       	subi	r18, 0xEB	; 235
    3512:	3e 4f       	sbci	r19, 0xFE	; 254
    3514:	f9 01       	movw	r30, r18
    3516:	91 83       	std	Z+1, r25	; 0x01
    3518:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    351a:	ce 01       	movw	r24, r28
    351c:	8d 5e       	subi	r24, 0xED	; 237
    351e:	9e 4f       	sbci	r25, 0xFE	; 254
    3520:	9e 01       	movw	r18, r28
    3522:	2d 5e       	subi	r18, 0xED	; 237
    3524:	3e 4f       	sbci	r19, 0xFE	; 254
    3526:	f9 01       	movw	r30, r18
    3528:	20 81       	ld	r18, Z
    352a:	31 81       	ldd	r19, Z+1	; 0x01
    352c:	21 50       	subi	r18, 0x01	; 1
    352e:	31 09       	sbc	r19, r1
    3530:	fc 01       	movw	r30, r24
    3532:	31 83       	std	Z+1, r19	; 0x01
    3534:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3536:	ce 01       	movw	r24, r28
    3538:	8d 5e       	subi	r24, 0xED	; 237
    353a:	9e 4f       	sbci	r25, 0xFE	; 254
    353c:	fc 01       	movw	r30, r24
    353e:	80 81       	ld	r24, Z
    3540:	91 81       	ldd	r25, Z+1	; 0x01
    3542:	89 2b       	or	r24, r25
    3544:	a1 f6       	brne	.-88     	; 0x34ee <__stack+0x23ef>
    3546:	2c c0       	rjmp	.+88     	; 0x35a0 <__stack+0x24a1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3548:	8e 01       	movw	r16, r28
    354a:	0d 5e       	subi	r16, 0xED	; 237
    354c:	1e 4f       	sbci	r17, 0xFE	; 254
    354e:	ce 01       	movw	r24, r28
    3550:	81 5f       	subi	r24, 0xF1	; 241
    3552:	9e 4f       	sbci	r25, 0xFE	; 254
    3554:	fc 01       	movw	r30, r24
    3556:	60 81       	ld	r22, Z
    3558:	71 81       	ldd	r23, Z+1	; 0x01
    355a:	82 81       	ldd	r24, Z+2	; 0x02
    355c:	93 81       	ldd	r25, Z+3	; 0x03
    355e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    3562:	dc 01       	movw	r26, r24
    3564:	cb 01       	movw	r24, r22
    3566:	f8 01       	movw	r30, r16
    3568:	91 83       	std	Z+1, r25	; 0x01
    356a:	80 83       	st	Z, r24
    356c:	ce 01       	movw	r24, r28
    356e:	89 5e       	subi	r24, 0xE9	; 233
    3570:	9e 4f       	sbci	r25, 0xFE	; 254
    3572:	9e 01       	movw	r18, r28
    3574:	2d 5e       	subi	r18, 0xED	; 237
    3576:	3e 4f       	sbci	r19, 0xFE	; 254
    3578:	f9 01       	movw	r30, r18
    357a:	20 81       	ld	r18, Z
    357c:	31 81       	ldd	r19, Z+1	; 0x01
    357e:	fc 01       	movw	r30, r24
    3580:	31 83       	std	Z+1, r19	; 0x01
    3582:	20 83       	st	Z, r18
    3584:	ce 01       	movw	r24, r28
    3586:	89 5e       	subi	r24, 0xE9	; 233
    3588:	9e 4f       	sbci	r25, 0xFE	; 254
    358a:	fc 01       	movw	r30, r24
    358c:	80 81       	ld	r24, Z
    358e:	91 81       	ldd	r25, Z+1	; 0x01
    3590:	01 97       	sbiw	r24, 0x01	; 1
    3592:	f1 f7       	brne	.-4      	; 0x3590 <__stack+0x2491>
    3594:	9e 01       	movw	r18, r28
    3596:	29 5e       	subi	r18, 0xE9	; 233
    3598:	3e 4f       	sbci	r19, 0xFE	; 254
    359a:	f9 01       	movw	r30, r18
    359c:	91 83       	std	Z+1, r25	; 0x01
    359e:	80 83       	st	Z, r24
	_delay_ms(330);
	to_uARM("M2210 F450 T100\n");
    35a0:	8d e3       	ldi	r24, 0x3D	; 61
    35a2:	92 e0       	ldi	r25, 0x02	; 2
    35a4:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    35a8:	9e 01       	movw	r18, r28
    35aa:	2b 58       	subi	r18, 0x8B	; 139
    35ac:	3f 4f       	sbci	r19, 0xFF	; 255
    35ae:	80 e0       	ldi	r24, 0x00	; 0
    35b0:	90 e0       	ldi	r25, 0x00	; 0
    35b2:	a6 e1       	ldi	r26, 0x16	; 22
    35b4:	b3 e4       	ldi	r27, 0x43	; 67
    35b6:	f9 01       	movw	r30, r18
    35b8:	80 83       	st	Z, r24
    35ba:	91 83       	std	Z+1, r25	; 0x01
    35bc:	a2 83       	std	Z+2, r26	; 0x02
    35be:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    35c0:	8e 01       	movw	r16, r28
    35c2:	0b 5f       	subi	r16, 0xFB	; 251
    35c4:	1e 4f       	sbci	r17, 0xFE	; 254
    35c6:	ce 01       	movw	r24, r28
    35c8:	8b 58       	subi	r24, 0x8B	; 139
    35ca:	9f 4f       	sbci	r25, 0xFF	; 255
    35cc:	20 e0       	ldi	r18, 0x00	; 0
    35ce:	30 e0       	ldi	r19, 0x00	; 0
    35d0:	4a e7       	ldi	r20, 0x7A	; 122
    35d2:	55 e4       	ldi	r21, 0x45	; 69
    35d4:	fc 01       	movw	r30, r24
    35d6:	60 81       	ld	r22, Z
    35d8:	71 81       	ldd	r23, Z+1	; 0x01
    35da:	82 81       	ldd	r24, Z+2	; 0x02
    35dc:	93 81       	ldd	r25, Z+3	; 0x03
    35de:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    35e2:	dc 01       	movw	r26, r24
    35e4:	cb 01       	movw	r24, r22
    35e6:	f8 01       	movw	r30, r16
    35e8:	80 83       	st	Z, r24
    35ea:	91 83       	std	Z+1, r25	; 0x01
    35ec:	a2 83       	std	Z+2, r26	; 0x02
    35ee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    35f0:	ce 01       	movw	r24, r28
    35f2:	8b 5f       	subi	r24, 0xFB	; 251
    35f4:	9e 4f       	sbci	r25, 0xFE	; 254
    35f6:	20 e0       	ldi	r18, 0x00	; 0
    35f8:	30 e0       	ldi	r19, 0x00	; 0
    35fa:	40 e8       	ldi	r20, 0x80	; 128
    35fc:	5f e3       	ldi	r21, 0x3F	; 63
    35fe:	fc 01       	movw	r30, r24
    3600:	60 81       	ld	r22, Z
    3602:	71 81       	ldd	r23, Z+1	; 0x01
    3604:	82 81       	ldd	r24, Z+2	; 0x02
    3606:	93 81       	ldd	r25, Z+3	; 0x03
    3608:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    360c:	88 23       	and	r24, r24
    360e:	4c f4       	brge	.+18     	; 0x3622 <__stack+0x2523>
		__ticks = 1;
    3610:	ce 01       	movw	r24, r28
    3612:	87 5f       	subi	r24, 0xF7	; 247
    3614:	9e 4f       	sbci	r25, 0xFE	; 254
    3616:	21 e0       	ldi	r18, 0x01	; 1
    3618:	30 e0       	ldi	r19, 0x00	; 0
    361a:	fc 01       	movw	r30, r24
    361c:	31 83       	std	Z+1, r19	; 0x01
    361e:	20 83       	st	Z, r18
    3620:	6d c0       	rjmp	.+218    	; 0x36fc <__stack+0x25fd>
	else if (__tmp > 65535)
    3622:	ce 01       	movw	r24, r28
    3624:	8b 5f       	subi	r24, 0xFB	; 251
    3626:	9e 4f       	sbci	r25, 0xFE	; 254
    3628:	20 e0       	ldi	r18, 0x00	; 0
    362a:	3f ef       	ldi	r19, 0xFF	; 255
    362c:	4f e7       	ldi	r20, 0x7F	; 127
    362e:	57 e4       	ldi	r21, 0x47	; 71
    3630:	fc 01       	movw	r30, r24
    3632:	60 81       	ld	r22, Z
    3634:	71 81       	ldd	r23, Z+1	; 0x01
    3636:	82 81       	ldd	r24, Z+2	; 0x02
    3638:	93 81       	ldd	r25, Z+3	; 0x03
    363a:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    363e:	18 16       	cp	r1, r24
    3640:	0c f0       	brlt	.+2      	; 0x3644 <__stack+0x2545>
    3642:	4a c0       	rjmp	.+148    	; 0x36d8 <__stack+0x25d9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3644:	ce 01       	movw	r24, r28
    3646:	8b 58       	subi	r24, 0x8B	; 139
    3648:	9f 4f       	sbci	r25, 0xFF	; 255
    364a:	20 e0       	ldi	r18, 0x00	; 0
    364c:	30 e0       	ldi	r19, 0x00	; 0
    364e:	40 e2       	ldi	r20, 0x20	; 32
    3650:	51 e4       	ldi	r21, 0x41	; 65
    3652:	fc 01       	movw	r30, r24
    3654:	60 81       	ld	r22, Z
    3656:	71 81       	ldd	r23, Z+1	; 0x01
    3658:	82 81       	ldd	r24, Z+2	; 0x02
    365a:	93 81       	ldd	r25, Z+3	; 0x03
    365c:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    3660:	dc 01       	movw	r26, r24
    3662:	cb 01       	movw	r24, r22
    3664:	8e 01       	movw	r16, r28
    3666:	07 5f       	subi	r16, 0xF7	; 247
    3668:	1e 4f       	sbci	r17, 0xFE	; 254
    366a:	bc 01       	movw	r22, r24
    366c:	cd 01       	movw	r24, r26
    366e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    3672:	dc 01       	movw	r26, r24
    3674:	cb 01       	movw	r24, r22
    3676:	f8 01       	movw	r30, r16
    3678:	91 83       	std	Z+1, r25	; 0x01
    367a:	80 83       	st	Z, r24
    367c:	24 c0       	rjmp	.+72     	; 0x36c6 <__stack+0x25c7>
    367e:	ce 01       	movw	r24, r28
    3680:	85 5f       	subi	r24, 0xF5	; 245
    3682:	9e 4f       	sbci	r25, 0xFE	; 254
    3684:	20 e9       	ldi	r18, 0x90	; 144
    3686:	31 e0       	ldi	r19, 0x01	; 1
    3688:	fc 01       	movw	r30, r24
    368a:	31 83       	std	Z+1, r19	; 0x01
    368c:	20 83       	st	Z, r18
    368e:	ce 01       	movw	r24, r28
    3690:	85 5f       	subi	r24, 0xF5	; 245
    3692:	9e 4f       	sbci	r25, 0xFE	; 254
    3694:	fc 01       	movw	r30, r24
    3696:	80 81       	ld	r24, Z
    3698:	91 81       	ldd	r25, Z+1	; 0x01
    369a:	01 97       	sbiw	r24, 0x01	; 1
    369c:	f1 f7       	brne	.-4      	; 0x369a <__stack+0x259b>
    369e:	9e 01       	movw	r18, r28
    36a0:	25 5f       	subi	r18, 0xF5	; 245
    36a2:	3e 4f       	sbci	r19, 0xFE	; 254
    36a4:	f9 01       	movw	r30, r18
    36a6:	91 83       	std	Z+1, r25	; 0x01
    36a8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    36aa:	ce 01       	movw	r24, r28
    36ac:	87 5f       	subi	r24, 0xF7	; 247
    36ae:	9e 4f       	sbci	r25, 0xFE	; 254
    36b0:	9e 01       	movw	r18, r28
    36b2:	27 5f       	subi	r18, 0xF7	; 247
    36b4:	3e 4f       	sbci	r19, 0xFE	; 254
    36b6:	f9 01       	movw	r30, r18
    36b8:	20 81       	ld	r18, Z
    36ba:	31 81       	ldd	r19, Z+1	; 0x01
    36bc:	21 50       	subi	r18, 0x01	; 1
    36be:	31 09       	sbc	r19, r1
    36c0:	fc 01       	movw	r30, r24
    36c2:	31 83       	std	Z+1, r19	; 0x01
    36c4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    36c6:	ce 01       	movw	r24, r28
    36c8:	87 5f       	subi	r24, 0xF7	; 247
    36ca:	9e 4f       	sbci	r25, 0xFE	; 254
    36cc:	fc 01       	movw	r30, r24
    36ce:	80 81       	ld	r24, Z
    36d0:	91 81       	ldd	r25, Z+1	; 0x01
    36d2:	89 2b       	or	r24, r25
    36d4:	a1 f6       	brne	.-88     	; 0x367e <__stack+0x257f>
    36d6:	2c c0       	rjmp	.+88     	; 0x3730 <__stack+0x2631>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    36d8:	8e 01       	movw	r16, r28
    36da:	07 5f       	subi	r16, 0xF7	; 247
    36dc:	1e 4f       	sbci	r17, 0xFE	; 254
    36de:	ce 01       	movw	r24, r28
    36e0:	8b 5f       	subi	r24, 0xFB	; 251
    36e2:	9e 4f       	sbci	r25, 0xFE	; 254
    36e4:	fc 01       	movw	r30, r24
    36e6:	60 81       	ld	r22, Z
    36e8:	71 81       	ldd	r23, Z+1	; 0x01
    36ea:	82 81       	ldd	r24, Z+2	; 0x02
    36ec:	93 81       	ldd	r25, Z+3	; 0x03
    36ee:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    36f2:	dc 01       	movw	r26, r24
    36f4:	cb 01       	movw	r24, r22
    36f6:	f8 01       	movw	r30, r16
    36f8:	91 83       	std	Z+1, r25	; 0x01
    36fa:	80 83       	st	Z, r24
    36fc:	ce 01       	movw	r24, r28
    36fe:	83 5f       	subi	r24, 0xF3	; 243
    3700:	9e 4f       	sbci	r25, 0xFE	; 254
    3702:	9e 01       	movw	r18, r28
    3704:	27 5f       	subi	r18, 0xF7	; 247
    3706:	3e 4f       	sbci	r19, 0xFE	; 254
    3708:	f9 01       	movw	r30, r18
    370a:	20 81       	ld	r18, Z
    370c:	31 81       	ldd	r19, Z+1	; 0x01
    370e:	fc 01       	movw	r30, r24
    3710:	31 83       	std	Z+1, r19	; 0x01
    3712:	20 83       	st	Z, r18
    3714:	ce 01       	movw	r24, r28
    3716:	83 5f       	subi	r24, 0xF3	; 243
    3718:	9e 4f       	sbci	r25, 0xFE	; 254
    371a:	fc 01       	movw	r30, r24
    371c:	80 81       	ld	r24, Z
    371e:	91 81       	ldd	r25, Z+1	; 0x01
    3720:	01 97       	sbiw	r24, 0x01	; 1
    3722:	f1 f7       	brne	.-4      	; 0x3720 <__stack+0x2621>
    3724:	9e 01       	movw	r18, r28
    3726:	23 5f       	subi	r18, 0xF3	; 243
    3728:	3e 4f       	sbci	r19, 0xFE	; 254
    372a:	f9 01       	movw	r30, r18
    372c:	91 83       	std	Z+1, r25	; 0x01
    372e:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F430 T100\n");
    3730:	8e e4       	ldi	r24, 0x4E	; 78
    3732:	92 e0       	ldi	r25, 0x02	; 2
    3734:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    3738:	9e 01       	movw	r18, r28
    373a:	27 58       	subi	r18, 0x87	; 135
    373c:	3f 4f       	sbci	r19, 0xFF	; 255
    373e:	80 e0       	ldi	r24, 0x00	; 0
    3740:	90 e0       	ldi	r25, 0x00	; 0
    3742:	a6 e9       	ldi	r26, 0x96	; 150
    3744:	b3 e4       	ldi	r27, 0x43	; 67
    3746:	f9 01       	movw	r30, r18
    3748:	80 83       	st	Z, r24
    374a:	91 83       	std	Z+1, r25	; 0x01
    374c:	a2 83       	std	Z+2, r26	; 0x02
    374e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3750:	8e 01       	movw	r16, r28
    3752:	05 50       	subi	r16, 0x05	; 5
    3754:	1f 4f       	sbci	r17, 0xFF	; 255
    3756:	ce 01       	movw	r24, r28
    3758:	87 58       	subi	r24, 0x87	; 135
    375a:	9f 4f       	sbci	r25, 0xFF	; 255
    375c:	20 e0       	ldi	r18, 0x00	; 0
    375e:	30 e0       	ldi	r19, 0x00	; 0
    3760:	4a e7       	ldi	r20, 0x7A	; 122
    3762:	55 e4       	ldi	r21, 0x45	; 69
    3764:	fc 01       	movw	r30, r24
    3766:	60 81       	ld	r22, Z
    3768:	71 81       	ldd	r23, Z+1	; 0x01
    376a:	82 81       	ldd	r24, Z+2	; 0x02
    376c:	93 81       	ldd	r25, Z+3	; 0x03
    376e:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    3772:	dc 01       	movw	r26, r24
    3774:	cb 01       	movw	r24, r22
    3776:	f8 01       	movw	r30, r16
    3778:	80 83       	st	Z, r24
    377a:	91 83       	std	Z+1, r25	; 0x01
    377c:	a2 83       	std	Z+2, r26	; 0x02
    377e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3780:	ce 01       	movw	r24, r28
    3782:	85 50       	subi	r24, 0x05	; 5
    3784:	9f 4f       	sbci	r25, 0xFF	; 255
    3786:	20 e0       	ldi	r18, 0x00	; 0
    3788:	30 e0       	ldi	r19, 0x00	; 0
    378a:	40 e8       	ldi	r20, 0x80	; 128
    378c:	5f e3       	ldi	r21, 0x3F	; 63
    378e:	fc 01       	movw	r30, r24
    3790:	60 81       	ld	r22, Z
    3792:	71 81       	ldd	r23, Z+1	; 0x01
    3794:	82 81       	ldd	r24, Z+2	; 0x02
    3796:	93 81       	ldd	r25, Z+3	; 0x03
    3798:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    379c:	88 23       	and	r24, r24
    379e:	4c f4       	brge	.+18     	; 0x37b2 <__stack+0x26b3>
		__ticks = 1;
    37a0:	ce 01       	movw	r24, r28
    37a2:	81 50       	subi	r24, 0x01	; 1
    37a4:	9f 4f       	sbci	r25, 0xFF	; 255
    37a6:	21 e0       	ldi	r18, 0x01	; 1
    37a8:	30 e0       	ldi	r19, 0x00	; 0
    37aa:	fc 01       	movw	r30, r24
    37ac:	31 83       	std	Z+1, r19	; 0x01
    37ae:	20 83       	st	Z, r18
    37b0:	6d c0       	rjmp	.+218    	; 0x388c <__stack+0x278d>
	else if (__tmp > 65535)
    37b2:	ce 01       	movw	r24, r28
    37b4:	85 50       	subi	r24, 0x05	; 5
    37b6:	9f 4f       	sbci	r25, 0xFF	; 255
    37b8:	20 e0       	ldi	r18, 0x00	; 0
    37ba:	3f ef       	ldi	r19, 0xFF	; 255
    37bc:	4f e7       	ldi	r20, 0x7F	; 127
    37be:	57 e4       	ldi	r21, 0x47	; 71
    37c0:	fc 01       	movw	r30, r24
    37c2:	60 81       	ld	r22, Z
    37c4:	71 81       	ldd	r23, Z+1	; 0x01
    37c6:	82 81       	ldd	r24, Z+2	; 0x02
    37c8:	93 81       	ldd	r25, Z+3	; 0x03
    37ca:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    37ce:	18 16       	cp	r1, r24
    37d0:	0c f0       	brlt	.+2      	; 0x37d4 <__stack+0x26d5>
    37d2:	4a c0       	rjmp	.+148    	; 0x3868 <__stack+0x2769>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    37d4:	ce 01       	movw	r24, r28
    37d6:	87 58       	subi	r24, 0x87	; 135
    37d8:	9f 4f       	sbci	r25, 0xFF	; 255
    37da:	20 e0       	ldi	r18, 0x00	; 0
    37dc:	30 e0       	ldi	r19, 0x00	; 0
    37de:	40 e2       	ldi	r20, 0x20	; 32
    37e0:	51 e4       	ldi	r21, 0x41	; 65
    37e2:	fc 01       	movw	r30, r24
    37e4:	60 81       	ld	r22, Z
    37e6:	71 81       	ldd	r23, Z+1	; 0x01
    37e8:	82 81       	ldd	r24, Z+2	; 0x02
    37ea:	93 81       	ldd	r25, Z+3	; 0x03
    37ec:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    37f0:	dc 01       	movw	r26, r24
    37f2:	cb 01       	movw	r24, r22
    37f4:	8e 01       	movw	r16, r28
    37f6:	01 50       	subi	r16, 0x01	; 1
    37f8:	1f 4f       	sbci	r17, 0xFF	; 255
    37fa:	bc 01       	movw	r22, r24
    37fc:	cd 01       	movw	r24, r26
    37fe:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    3802:	dc 01       	movw	r26, r24
    3804:	cb 01       	movw	r24, r22
    3806:	f8 01       	movw	r30, r16
    3808:	91 83       	std	Z+1, r25	; 0x01
    380a:	80 83       	st	Z, r24
    380c:	24 c0       	rjmp	.+72     	; 0x3856 <__stack+0x2757>
    380e:	ce 01       	movw	r24, r28
    3810:	8f 5f       	subi	r24, 0xFF	; 255
    3812:	9e 4f       	sbci	r25, 0xFE	; 254
    3814:	20 e9       	ldi	r18, 0x90	; 144
    3816:	31 e0       	ldi	r19, 0x01	; 1
    3818:	fc 01       	movw	r30, r24
    381a:	31 83       	std	Z+1, r19	; 0x01
    381c:	20 83       	st	Z, r18
    381e:	ce 01       	movw	r24, r28
    3820:	8f 5f       	subi	r24, 0xFF	; 255
    3822:	9e 4f       	sbci	r25, 0xFE	; 254
    3824:	fc 01       	movw	r30, r24
    3826:	80 81       	ld	r24, Z
    3828:	91 81       	ldd	r25, Z+1	; 0x01
    382a:	01 97       	sbiw	r24, 0x01	; 1
    382c:	f1 f7       	brne	.-4      	; 0x382a <__stack+0x272b>
    382e:	9e 01       	movw	r18, r28
    3830:	2f 5f       	subi	r18, 0xFF	; 255
    3832:	3e 4f       	sbci	r19, 0xFE	; 254
    3834:	f9 01       	movw	r30, r18
    3836:	91 83       	std	Z+1, r25	; 0x01
    3838:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    383a:	ce 01       	movw	r24, r28
    383c:	81 50       	subi	r24, 0x01	; 1
    383e:	9f 4f       	sbci	r25, 0xFF	; 255
    3840:	9e 01       	movw	r18, r28
    3842:	21 50       	subi	r18, 0x01	; 1
    3844:	3f 4f       	sbci	r19, 0xFF	; 255
    3846:	f9 01       	movw	r30, r18
    3848:	20 81       	ld	r18, Z
    384a:	31 81       	ldd	r19, Z+1	; 0x01
    384c:	21 50       	subi	r18, 0x01	; 1
    384e:	31 09       	sbc	r19, r1
    3850:	fc 01       	movw	r30, r24
    3852:	31 83       	std	Z+1, r19	; 0x01
    3854:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3856:	ce 01       	movw	r24, r28
    3858:	81 50       	subi	r24, 0x01	; 1
    385a:	9f 4f       	sbci	r25, 0xFF	; 255
    385c:	fc 01       	movw	r30, r24
    385e:	80 81       	ld	r24, Z
    3860:	91 81       	ldd	r25, Z+1	; 0x01
    3862:	89 2b       	or	r24, r25
    3864:	a1 f6       	brne	.-88     	; 0x380e <__stack+0x270f>
    3866:	2c c0       	rjmp	.+88     	; 0x38c0 <__stack+0x27c1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3868:	8e 01       	movw	r16, r28
    386a:	01 50       	subi	r16, 0x01	; 1
    386c:	1f 4f       	sbci	r17, 0xFF	; 255
    386e:	ce 01       	movw	r24, r28
    3870:	85 50       	subi	r24, 0x05	; 5
    3872:	9f 4f       	sbci	r25, 0xFF	; 255
    3874:	fc 01       	movw	r30, r24
    3876:	60 81       	ld	r22, Z
    3878:	71 81       	ldd	r23, Z+1	; 0x01
    387a:	82 81       	ldd	r24, Z+2	; 0x02
    387c:	93 81       	ldd	r25, Z+3	; 0x03
    387e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    3882:	dc 01       	movw	r26, r24
    3884:	cb 01       	movw	r24, r22
    3886:	f8 01       	movw	r30, r16
    3888:	91 83       	std	Z+1, r25	; 0x01
    388a:	80 83       	st	Z, r24
    388c:	ce 01       	movw	r24, r28
    388e:	8d 5f       	subi	r24, 0xFD	; 253
    3890:	9e 4f       	sbci	r25, 0xFE	; 254
    3892:	9e 01       	movw	r18, r28
    3894:	21 50       	subi	r18, 0x01	; 1
    3896:	3f 4f       	sbci	r19, 0xFF	; 255
    3898:	f9 01       	movw	r30, r18
    389a:	20 81       	ld	r18, Z
    389c:	31 81       	ldd	r19, Z+1	; 0x01
    389e:	fc 01       	movw	r30, r24
    38a0:	31 83       	std	Z+1, r19	; 0x01
    38a2:	20 83       	st	Z, r18
    38a4:	ce 01       	movw	r24, r28
    38a6:	8d 5f       	subi	r24, 0xFD	; 253
    38a8:	9e 4f       	sbci	r25, 0xFE	; 254
    38aa:	fc 01       	movw	r30, r24
    38ac:	80 81       	ld	r24, Z
    38ae:	91 81       	ldd	r25, Z+1	; 0x01
    38b0:	01 97       	sbiw	r24, 0x01	; 1
    38b2:	f1 f7       	brne	.-4      	; 0x38b0 <__stack+0x27b1>
    38b4:	9e 01       	movw	r18, r28
    38b6:	2d 5f       	subi	r18, 0xFD	; 253
    38b8:	3e 4f       	sbci	r19, 0xFE	; 254
    38ba:	f9 01       	movw	r30, r18
    38bc:	91 83       	std	Z+1, r25	; 0x01
    38be:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F380 T100\n");
    38c0:	8a ef       	ldi	r24, 0xFA	; 250
    38c2:	91 e0       	ldi	r25, 0x01	; 1
    38c4:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    38c8:	9e 01       	movw	r18, r28
    38ca:	23 58       	subi	r18, 0x83	; 131
    38cc:	3f 4f       	sbci	r19, 0xFF	; 255
    38ce:	80 e0       	ldi	r24, 0x00	; 0
    38d0:	90 e0       	ldi	r25, 0x00	; 0
    38d2:	a8 e4       	ldi	r26, 0x48	; 72
    38d4:	b3 e4       	ldi	r27, 0x43	; 67
    38d6:	f9 01       	movw	r30, r18
    38d8:	80 83       	st	Z, r24
    38da:	91 83       	std	Z+1, r25	; 0x01
    38dc:	a2 83       	std	Z+2, r26	; 0x02
    38de:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    38e0:	8e 01       	movw	r16, r28
    38e2:	0f 50       	subi	r16, 0x0F	; 15
    38e4:	1f 4f       	sbci	r17, 0xFF	; 255
    38e6:	ce 01       	movw	r24, r28
    38e8:	83 58       	subi	r24, 0x83	; 131
    38ea:	9f 4f       	sbci	r25, 0xFF	; 255
    38ec:	20 e0       	ldi	r18, 0x00	; 0
    38ee:	30 e0       	ldi	r19, 0x00	; 0
    38f0:	4a e7       	ldi	r20, 0x7A	; 122
    38f2:	55 e4       	ldi	r21, 0x45	; 69
    38f4:	fc 01       	movw	r30, r24
    38f6:	60 81       	ld	r22, Z
    38f8:	71 81       	ldd	r23, Z+1	; 0x01
    38fa:	82 81       	ldd	r24, Z+2	; 0x02
    38fc:	93 81       	ldd	r25, Z+3	; 0x03
    38fe:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    3902:	dc 01       	movw	r26, r24
    3904:	cb 01       	movw	r24, r22
    3906:	f8 01       	movw	r30, r16
    3908:	80 83       	st	Z, r24
    390a:	91 83       	std	Z+1, r25	; 0x01
    390c:	a2 83       	std	Z+2, r26	; 0x02
    390e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3910:	ce 01       	movw	r24, r28
    3912:	8f 50       	subi	r24, 0x0F	; 15
    3914:	9f 4f       	sbci	r25, 0xFF	; 255
    3916:	20 e0       	ldi	r18, 0x00	; 0
    3918:	30 e0       	ldi	r19, 0x00	; 0
    391a:	40 e8       	ldi	r20, 0x80	; 128
    391c:	5f e3       	ldi	r21, 0x3F	; 63
    391e:	fc 01       	movw	r30, r24
    3920:	60 81       	ld	r22, Z
    3922:	71 81       	ldd	r23, Z+1	; 0x01
    3924:	82 81       	ldd	r24, Z+2	; 0x02
    3926:	93 81       	ldd	r25, Z+3	; 0x03
    3928:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    392c:	88 23       	and	r24, r24
    392e:	4c f4       	brge	.+18     	; 0x3942 <__stack+0x2843>
		__ticks = 1;
    3930:	ce 01       	movw	r24, r28
    3932:	8b 50       	subi	r24, 0x0B	; 11
    3934:	9f 4f       	sbci	r25, 0xFF	; 255
    3936:	21 e0       	ldi	r18, 0x01	; 1
    3938:	30 e0       	ldi	r19, 0x00	; 0
    393a:	fc 01       	movw	r30, r24
    393c:	31 83       	std	Z+1, r19	; 0x01
    393e:	20 83       	st	Z, r18
    3940:	6d c0       	rjmp	.+218    	; 0x3a1c <__stack+0x291d>
	else if (__tmp > 65535)
    3942:	ce 01       	movw	r24, r28
    3944:	8f 50       	subi	r24, 0x0F	; 15
    3946:	9f 4f       	sbci	r25, 0xFF	; 255
    3948:	20 e0       	ldi	r18, 0x00	; 0
    394a:	3f ef       	ldi	r19, 0xFF	; 255
    394c:	4f e7       	ldi	r20, 0x7F	; 127
    394e:	57 e4       	ldi	r21, 0x47	; 71
    3950:	fc 01       	movw	r30, r24
    3952:	60 81       	ld	r22, Z
    3954:	71 81       	ldd	r23, Z+1	; 0x01
    3956:	82 81       	ldd	r24, Z+2	; 0x02
    3958:	93 81       	ldd	r25, Z+3	; 0x03
    395a:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    395e:	18 16       	cp	r1, r24
    3960:	0c f0       	brlt	.+2      	; 0x3964 <__stack+0x2865>
    3962:	4a c0       	rjmp	.+148    	; 0x39f8 <__stack+0x28f9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3964:	ce 01       	movw	r24, r28
    3966:	83 58       	subi	r24, 0x83	; 131
    3968:	9f 4f       	sbci	r25, 0xFF	; 255
    396a:	20 e0       	ldi	r18, 0x00	; 0
    396c:	30 e0       	ldi	r19, 0x00	; 0
    396e:	40 e2       	ldi	r20, 0x20	; 32
    3970:	51 e4       	ldi	r21, 0x41	; 65
    3972:	fc 01       	movw	r30, r24
    3974:	60 81       	ld	r22, Z
    3976:	71 81       	ldd	r23, Z+1	; 0x01
    3978:	82 81       	ldd	r24, Z+2	; 0x02
    397a:	93 81       	ldd	r25, Z+3	; 0x03
    397c:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    3980:	dc 01       	movw	r26, r24
    3982:	cb 01       	movw	r24, r22
    3984:	8e 01       	movw	r16, r28
    3986:	0b 50       	subi	r16, 0x0B	; 11
    3988:	1f 4f       	sbci	r17, 0xFF	; 255
    398a:	bc 01       	movw	r22, r24
    398c:	cd 01       	movw	r24, r26
    398e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    3992:	dc 01       	movw	r26, r24
    3994:	cb 01       	movw	r24, r22
    3996:	f8 01       	movw	r30, r16
    3998:	91 83       	std	Z+1, r25	; 0x01
    399a:	80 83       	st	Z, r24
    399c:	24 c0       	rjmp	.+72     	; 0x39e6 <__stack+0x28e7>
    399e:	ce 01       	movw	r24, r28
    39a0:	89 50       	subi	r24, 0x09	; 9
    39a2:	9f 4f       	sbci	r25, 0xFF	; 255
    39a4:	20 e9       	ldi	r18, 0x90	; 144
    39a6:	31 e0       	ldi	r19, 0x01	; 1
    39a8:	fc 01       	movw	r30, r24
    39aa:	31 83       	std	Z+1, r19	; 0x01
    39ac:	20 83       	st	Z, r18
    39ae:	ce 01       	movw	r24, r28
    39b0:	89 50       	subi	r24, 0x09	; 9
    39b2:	9f 4f       	sbci	r25, 0xFF	; 255
    39b4:	fc 01       	movw	r30, r24
    39b6:	80 81       	ld	r24, Z
    39b8:	91 81       	ldd	r25, Z+1	; 0x01
    39ba:	01 97       	sbiw	r24, 0x01	; 1
    39bc:	f1 f7       	brne	.-4      	; 0x39ba <__stack+0x28bb>
    39be:	9e 01       	movw	r18, r28
    39c0:	29 50       	subi	r18, 0x09	; 9
    39c2:	3f 4f       	sbci	r19, 0xFF	; 255
    39c4:	f9 01       	movw	r30, r18
    39c6:	91 83       	std	Z+1, r25	; 0x01
    39c8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    39ca:	ce 01       	movw	r24, r28
    39cc:	8b 50       	subi	r24, 0x0B	; 11
    39ce:	9f 4f       	sbci	r25, 0xFF	; 255
    39d0:	9e 01       	movw	r18, r28
    39d2:	2b 50       	subi	r18, 0x0B	; 11
    39d4:	3f 4f       	sbci	r19, 0xFF	; 255
    39d6:	f9 01       	movw	r30, r18
    39d8:	20 81       	ld	r18, Z
    39da:	31 81       	ldd	r19, Z+1	; 0x01
    39dc:	21 50       	subi	r18, 0x01	; 1
    39de:	31 09       	sbc	r19, r1
    39e0:	fc 01       	movw	r30, r24
    39e2:	31 83       	std	Z+1, r19	; 0x01
    39e4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39e6:	ce 01       	movw	r24, r28
    39e8:	8b 50       	subi	r24, 0x0B	; 11
    39ea:	9f 4f       	sbci	r25, 0xFF	; 255
    39ec:	fc 01       	movw	r30, r24
    39ee:	80 81       	ld	r24, Z
    39f0:	91 81       	ldd	r25, Z+1	; 0x01
    39f2:	89 2b       	or	r24, r25
    39f4:	a1 f6       	brne	.-88     	; 0x399e <__stack+0x289f>
    39f6:	2c c0       	rjmp	.+88     	; 0x3a50 <__stack+0x2951>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39f8:	8e 01       	movw	r16, r28
    39fa:	0b 50       	subi	r16, 0x0B	; 11
    39fc:	1f 4f       	sbci	r17, 0xFF	; 255
    39fe:	ce 01       	movw	r24, r28
    3a00:	8f 50       	subi	r24, 0x0F	; 15
    3a02:	9f 4f       	sbci	r25, 0xFF	; 255
    3a04:	fc 01       	movw	r30, r24
    3a06:	60 81       	ld	r22, Z
    3a08:	71 81       	ldd	r23, Z+1	; 0x01
    3a0a:	82 81       	ldd	r24, Z+2	; 0x02
    3a0c:	93 81       	ldd	r25, Z+3	; 0x03
    3a0e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    3a12:	dc 01       	movw	r26, r24
    3a14:	cb 01       	movw	r24, r22
    3a16:	f8 01       	movw	r30, r16
    3a18:	91 83       	std	Z+1, r25	; 0x01
    3a1a:	80 83       	st	Z, r24
    3a1c:	ce 01       	movw	r24, r28
    3a1e:	87 50       	subi	r24, 0x07	; 7
    3a20:	9f 4f       	sbci	r25, 0xFF	; 255
    3a22:	9e 01       	movw	r18, r28
    3a24:	2b 50       	subi	r18, 0x0B	; 11
    3a26:	3f 4f       	sbci	r19, 0xFF	; 255
    3a28:	f9 01       	movw	r30, r18
    3a2a:	20 81       	ld	r18, Z
    3a2c:	31 81       	ldd	r19, Z+1	; 0x01
    3a2e:	fc 01       	movw	r30, r24
    3a30:	31 83       	std	Z+1, r19	; 0x01
    3a32:	20 83       	st	Z, r18
    3a34:	ce 01       	movw	r24, r28
    3a36:	87 50       	subi	r24, 0x07	; 7
    3a38:	9f 4f       	sbci	r25, 0xFF	; 255
    3a3a:	fc 01       	movw	r30, r24
    3a3c:	80 81       	ld	r24, Z
    3a3e:	91 81       	ldd	r25, Z+1	; 0x01
    3a40:	01 97       	sbiw	r24, 0x01	; 1
    3a42:	f1 f7       	brne	.-4      	; 0x3a40 <__stack+0x2941>
    3a44:	9e 01       	movw	r18, r28
    3a46:	27 50       	subi	r18, 0x07	; 7
    3a48:	3f 4f       	sbci	r19, 0xFF	; 255
    3a4a:	f9 01       	movw	r30, r18
    3a4c:	91 83       	std	Z+1, r25	; 0x01
    3a4e:	80 83       	st	Z, r24
	_delay_ms(200);
	to_uARM("M2210 F660 T80\n");
    3a50:	8f e5       	ldi	r24, 0x5F	; 95
    3a52:	92 e0       	ldi	r25, 0x02	; 2
    3a54:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    3a58:	9e 01       	movw	r18, r28
    3a5a:	2f 57       	subi	r18, 0x7F	; 127
    3a5c:	3f 4f       	sbci	r19, 0xFF	; 255
    3a5e:	80 e0       	ldi	r24, 0x00	; 0
    3a60:	90 e0       	ldi	r25, 0x00	; 0
    3a62:	a8 e4       	ldi	r26, 0x48	; 72
    3a64:	b3 e4       	ldi	r27, 0x43	; 67
    3a66:	f9 01       	movw	r30, r18
    3a68:	80 83       	st	Z, r24
    3a6a:	91 83       	std	Z+1, r25	; 0x01
    3a6c:	a2 83       	std	Z+2, r26	; 0x02
    3a6e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3a70:	8e 01       	movw	r16, r28
    3a72:	09 51       	subi	r16, 0x19	; 25
    3a74:	1f 4f       	sbci	r17, 0xFF	; 255
    3a76:	ce 01       	movw	r24, r28
    3a78:	8f 57       	subi	r24, 0x7F	; 127
    3a7a:	9f 4f       	sbci	r25, 0xFF	; 255
    3a7c:	20 e0       	ldi	r18, 0x00	; 0
    3a7e:	30 e0       	ldi	r19, 0x00	; 0
    3a80:	4a e7       	ldi	r20, 0x7A	; 122
    3a82:	55 e4       	ldi	r21, 0x45	; 69
    3a84:	fc 01       	movw	r30, r24
    3a86:	60 81       	ld	r22, Z
    3a88:	71 81       	ldd	r23, Z+1	; 0x01
    3a8a:	82 81       	ldd	r24, Z+2	; 0x02
    3a8c:	93 81       	ldd	r25, Z+3	; 0x03
    3a8e:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    3a92:	dc 01       	movw	r26, r24
    3a94:	cb 01       	movw	r24, r22
    3a96:	f8 01       	movw	r30, r16
    3a98:	80 83       	st	Z, r24
    3a9a:	91 83       	std	Z+1, r25	; 0x01
    3a9c:	a2 83       	std	Z+2, r26	; 0x02
    3a9e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3aa0:	ce 01       	movw	r24, r28
    3aa2:	89 51       	subi	r24, 0x19	; 25
    3aa4:	9f 4f       	sbci	r25, 0xFF	; 255
    3aa6:	20 e0       	ldi	r18, 0x00	; 0
    3aa8:	30 e0       	ldi	r19, 0x00	; 0
    3aaa:	40 e8       	ldi	r20, 0x80	; 128
    3aac:	5f e3       	ldi	r21, 0x3F	; 63
    3aae:	fc 01       	movw	r30, r24
    3ab0:	60 81       	ld	r22, Z
    3ab2:	71 81       	ldd	r23, Z+1	; 0x01
    3ab4:	82 81       	ldd	r24, Z+2	; 0x02
    3ab6:	93 81       	ldd	r25, Z+3	; 0x03
    3ab8:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    3abc:	88 23       	and	r24, r24
    3abe:	4c f4       	brge	.+18     	; 0x3ad2 <__stack+0x29d3>
		__ticks = 1;
    3ac0:	ce 01       	movw	r24, r28
    3ac2:	85 51       	subi	r24, 0x15	; 21
    3ac4:	9f 4f       	sbci	r25, 0xFF	; 255
    3ac6:	21 e0       	ldi	r18, 0x01	; 1
    3ac8:	30 e0       	ldi	r19, 0x00	; 0
    3aca:	fc 01       	movw	r30, r24
    3acc:	31 83       	std	Z+1, r19	; 0x01
    3ace:	20 83       	st	Z, r18
    3ad0:	6d c0       	rjmp	.+218    	; 0x3bac <__stack+0x2aad>
	else if (__tmp > 65535)
    3ad2:	ce 01       	movw	r24, r28
    3ad4:	89 51       	subi	r24, 0x19	; 25
    3ad6:	9f 4f       	sbci	r25, 0xFF	; 255
    3ad8:	20 e0       	ldi	r18, 0x00	; 0
    3ada:	3f ef       	ldi	r19, 0xFF	; 255
    3adc:	4f e7       	ldi	r20, 0x7F	; 127
    3ade:	57 e4       	ldi	r21, 0x47	; 71
    3ae0:	fc 01       	movw	r30, r24
    3ae2:	60 81       	ld	r22, Z
    3ae4:	71 81       	ldd	r23, Z+1	; 0x01
    3ae6:	82 81       	ldd	r24, Z+2	; 0x02
    3ae8:	93 81       	ldd	r25, Z+3	; 0x03
    3aea:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    3aee:	18 16       	cp	r1, r24
    3af0:	0c f0       	brlt	.+2      	; 0x3af4 <__stack+0x29f5>
    3af2:	4a c0       	rjmp	.+148    	; 0x3b88 <__stack+0x2a89>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3af4:	ce 01       	movw	r24, r28
    3af6:	8f 57       	subi	r24, 0x7F	; 127
    3af8:	9f 4f       	sbci	r25, 0xFF	; 255
    3afa:	20 e0       	ldi	r18, 0x00	; 0
    3afc:	30 e0       	ldi	r19, 0x00	; 0
    3afe:	40 e2       	ldi	r20, 0x20	; 32
    3b00:	51 e4       	ldi	r21, 0x41	; 65
    3b02:	fc 01       	movw	r30, r24
    3b04:	60 81       	ld	r22, Z
    3b06:	71 81       	ldd	r23, Z+1	; 0x01
    3b08:	82 81       	ldd	r24, Z+2	; 0x02
    3b0a:	93 81       	ldd	r25, Z+3	; 0x03
    3b0c:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    3b10:	dc 01       	movw	r26, r24
    3b12:	cb 01       	movw	r24, r22
    3b14:	8e 01       	movw	r16, r28
    3b16:	05 51       	subi	r16, 0x15	; 21
    3b18:	1f 4f       	sbci	r17, 0xFF	; 255
    3b1a:	bc 01       	movw	r22, r24
    3b1c:	cd 01       	movw	r24, r26
    3b1e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    3b22:	dc 01       	movw	r26, r24
    3b24:	cb 01       	movw	r24, r22
    3b26:	f8 01       	movw	r30, r16
    3b28:	91 83       	std	Z+1, r25	; 0x01
    3b2a:	80 83       	st	Z, r24
    3b2c:	24 c0       	rjmp	.+72     	; 0x3b76 <__stack+0x2a77>
    3b2e:	ce 01       	movw	r24, r28
    3b30:	83 51       	subi	r24, 0x13	; 19
    3b32:	9f 4f       	sbci	r25, 0xFF	; 255
    3b34:	20 e9       	ldi	r18, 0x90	; 144
    3b36:	31 e0       	ldi	r19, 0x01	; 1
    3b38:	fc 01       	movw	r30, r24
    3b3a:	31 83       	std	Z+1, r19	; 0x01
    3b3c:	20 83       	st	Z, r18
    3b3e:	ce 01       	movw	r24, r28
    3b40:	83 51       	subi	r24, 0x13	; 19
    3b42:	9f 4f       	sbci	r25, 0xFF	; 255
    3b44:	fc 01       	movw	r30, r24
    3b46:	80 81       	ld	r24, Z
    3b48:	91 81       	ldd	r25, Z+1	; 0x01
    3b4a:	01 97       	sbiw	r24, 0x01	; 1
    3b4c:	f1 f7       	brne	.-4      	; 0x3b4a <__stack+0x2a4b>
    3b4e:	9e 01       	movw	r18, r28
    3b50:	23 51       	subi	r18, 0x13	; 19
    3b52:	3f 4f       	sbci	r19, 0xFF	; 255
    3b54:	f9 01       	movw	r30, r18
    3b56:	91 83       	std	Z+1, r25	; 0x01
    3b58:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b5a:	ce 01       	movw	r24, r28
    3b5c:	85 51       	subi	r24, 0x15	; 21
    3b5e:	9f 4f       	sbci	r25, 0xFF	; 255
    3b60:	9e 01       	movw	r18, r28
    3b62:	25 51       	subi	r18, 0x15	; 21
    3b64:	3f 4f       	sbci	r19, 0xFF	; 255
    3b66:	f9 01       	movw	r30, r18
    3b68:	20 81       	ld	r18, Z
    3b6a:	31 81       	ldd	r19, Z+1	; 0x01
    3b6c:	21 50       	subi	r18, 0x01	; 1
    3b6e:	31 09       	sbc	r19, r1
    3b70:	fc 01       	movw	r30, r24
    3b72:	31 83       	std	Z+1, r19	; 0x01
    3b74:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b76:	ce 01       	movw	r24, r28
    3b78:	85 51       	subi	r24, 0x15	; 21
    3b7a:	9f 4f       	sbci	r25, 0xFF	; 255
    3b7c:	fc 01       	movw	r30, r24
    3b7e:	80 81       	ld	r24, Z
    3b80:	91 81       	ldd	r25, Z+1	; 0x01
    3b82:	89 2b       	or	r24, r25
    3b84:	a1 f6       	brne	.-88     	; 0x3b2e <__stack+0x2a2f>
    3b86:	2c c0       	rjmp	.+88     	; 0x3be0 <__stack+0x2ae1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b88:	8e 01       	movw	r16, r28
    3b8a:	05 51       	subi	r16, 0x15	; 21
    3b8c:	1f 4f       	sbci	r17, 0xFF	; 255
    3b8e:	ce 01       	movw	r24, r28
    3b90:	89 51       	subi	r24, 0x19	; 25
    3b92:	9f 4f       	sbci	r25, 0xFF	; 255
    3b94:	fc 01       	movw	r30, r24
    3b96:	60 81       	ld	r22, Z
    3b98:	71 81       	ldd	r23, Z+1	; 0x01
    3b9a:	82 81       	ldd	r24, Z+2	; 0x02
    3b9c:	93 81       	ldd	r25, Z+3	; 0x03
    3b9e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    3ba2:	dc 01       	movw	r26, r24
    3ba4:	cb 01       	movw	r24, r22
    3ba6:	f8 01       	movw	r30, r16
    3ba8:	91 83       	std	Z+1, r25	; 0x01
    3baa:	80 83       	st	Z, r24
    3bac:	ce 01       	movw	r24, r28
    3bae:	81 51       	subi	r24, 0x11	; 17
    3bb0:	9f 4f       	sbci	r25, 0xFF	; 255
    3bb2:	9e 01       	movw	r18, r28
    3bb4:	25 51       	subi	r18, 0x15	; 21
    3bb6:	3f 4f       	sbci	r19, 0xFF	; 255
    3bb8:	f9 01       	movw	r30, r18
    3bba:	20 81       	ld	r18, Z
    3bbc:	31 81       	ldd	r19, Z+1	; 0x01
    3bbe:	fc 01       	movw	r30, r24
    3bc0:	31 83       	std	Z+1, r19	; 0x01
    3bc2:	20 83       	st	Z, r18
    3bc4:	ce 01       	movw	r24, r28
    3bc6:	81 51       	subi	r24, 0x11	; 17
    3bc8:	9f 4f       	sbci	r25, 0xFF	; 255
    3bca:	fc 01       	movw	r30, r24
    3bcc:	80 81       	ld	r24, Z
    3bce:	91 81       	ldd	r25, Z+1	; 0x01
    3bd0:	01 97       	sbiw	r24, 0x01	; 1
    3bd2:	f1 f7       	brne	.-4      	; 0x3bd0 <__stack+0x2ad1>
    3bd4:	9e 01       	movw	r18, r28
    3bd6:	21 51       	subi	r18, 0x11	; 17
    3bd8:	3f 4f       	sbci	r19, 0xFF	; 255
    3bda:	f9 01       	movw	r30, r18
    3bdc:	91 83       	std	Z+1, r25	; 0x01
    3bde:	80 83       	st	Z, r24
	_delay_ms(200);
	to_uARM("M2210 F760 T50\n");
    3be0:	8f e6       	ldi	r24, 0x6F	; 111
    3be2:	92 e0       	ldi	r25, 0x02	; 2
    3be4:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    3be8:	9e 01       	movw	r18, r28
    3bea:	2b 57       	subi	r18, 0x7B	; 123
    3bec:	3f 4f       	sbci	r19, 0xFF	; 255
    3bee:	80 e0       	ldi	r24, 0x00	; 0
    3bf0:	90 e0       	ldi	r25, 0x00	; 0
    3bf2:	a6 e1       	ldi	r26, 0x16	; 22
    3bf4:	b3 e4       	ldi	r27, 0x43	; 67
    3bf6:	f9 01       	movw	r30, r18
    3bf8:	80 83       	st	Z, r24
    3bfa:	91 83       	std	Z+1, r25	; 0x01
    3bfc:	a2 83       	std	Z+2, r26	; 0x02
    3bfe:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3c00:	8e 01       	movw	r16, r28
    3c02:	03 52       	subi	r16, 0x23	; 35
    3c04:	1f 4f       	sbci	r17, 0xFF	; 255
    3c06:	ce 01       	movw	r24, r28
    3c08:	8b 57       	subi	r24, 0x7B	; 123
    3c0a:	9f 4f       	sbci	r25, 0xFF	; 255
    3c0c:	20 e0       	ldi	r18, 0x00	; 0
    3c0e:	30 e0       	ldi	r19, 0x00	; 0
    3c10:	4a e7       	ldi	r20, 0x7A	; 122
    3c12:	55 e4       	ldi	r21, 0x45	; 69
    3c14:	fc 01       	movw	r30, r24
    3c16:	60 81       	ld	r22, Z
    3c18:	71 81       	ldd	r23, Z+1	; 0x01
    3c1a:	82 81       	ldd	r24, Z+2	; 0x02
    3c1c:	93 81       	ldd	r25, Z+3	; 0x03
    3c1e:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    3c22:	dc 01       	movw	r26, r24
    3c24:	cb 01       	movw	r24, r22
    3c26:	f8 01       	movw	r30, r16
    3c28:	80 83       	st	Z, r24
    3c2a:	91 83       	std	Z+1, r25	; 0x01
    3c2c:	a2 83       	std	Z+2, r26	; 0x02
    3c2e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3c30:	ce 01       	movw	r24, r28
    3c32:	83 52       	subi	r24, 0x23	; 35
    3c34:	9f 4f       	sbci	r25, 0xFF	; 255
    3c36:	20 e0       	ldi	r18, 0x00	; 0
    3c38:	30 e0       	ldi	r19, 0x00	; 0
    3c3a:	40 e8       	ldi	r20, 0x80	; 128
    3c3c:	5f e3       	ldi	r21, 0x3F	; 63
    3c3e:	fc 01       	movw	r30, r24
    3c40:	60 81       	ld	r22, Z
    3c42:	71 81       	ldd	r23, Z+1	; 0x01
    3c44:	82 81       	ldd	r24, Z+2	; 0x02
    3c46:	93 81       	ldd	r25, Z+3	; 0x03
    3c48:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    3c4c:	88 23       	and	r24, r24
    3c4e:	4c f4       	brge	.+18     	; 0x3c62 <__stack+0x2b63>
		__ticks = 1;
    3c50:	ce 01       	movw	r24, r28
    3c52:	8f 51       	subi	r24, 0x1F	; 31
    3c54:	9f 4f       	sbci	r25, 0xFF	; 255
    3c56:	21 e0       	ldi	r18, 0x01	; 1
    3c58:	30 e0       	ldi	r19, 0x00	; 0
    3c5a:	fc 01       	movw	r30, r24
    3c5c:	31 83       	std	Z+1, r19	; 0x01
    3c5e:	20 83       	st	Z, r18
    3c60:	6d c0       	rjmp	.+218    	; 0x3d3c <__stack+0x2c3d>
	else if (__tmp > 65535)
    3c62:	ce 01       	movw	r24, r28
    3c64:	83 52       	subi	r24, 0x23	; 35
    3c66:	9f 4f       	sbci	r25, 0xFF	; 255
    3c68:	20 e0       	ldi	r18, 0x00	; 0
    3c6a:	3f ef       	ldi	r19, 0xFF	; 255
    3c6c:	4f e7       	ldi	r20, 0x7F	; 127
    3c6e:	57 e4       	ldi	r21, 0x47	; 71
    3c70:	fc 01       	movw	r30, r24
    3c72:	60 81       	ld	r22, Z
    3c74:	71 81       	ldd	r23, Z+1	; 0x01
    3c76:	82 81       	ldd	r24, Z+2	; 0x02
    3c78:	93 81       	ldd	r25, Z+3	; 0x03
    3c7a:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    3c7e:	18 16       	cp	r1, r24
    3c80:	0c f0       	brlt	.+2      	; 0x3c84 <__stack+0x2b85>
    3c82:	4a c0       	rjmp	.+148    	; 0x3d18 <__stack+0x2c19>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c84:	ce 01       	movw	r24, r28
    3c86:	8b 57       	subi	r24, 0x7B	; 123
    3c88:	9f 4f       	sbci	r25, 0xFF	; 255
    3c8a:	20 e0       	ldi	r18, 0x00	; 0
    3c8c:	30 e0       	ldi	r19, 0x00	; 0
    3c8e:	40 e2       	ldi	r20, 0x20	; 32
    3c90:	51 e4       	ldi	r21, 0x41	; 65
    3c92:	fc 01       	movw	r30, r24
    3c94:	60 81       	ld	r22, Z
    3c96:	71 81       	ldd	r23, Z+1	; 0x01
    3c98:	82 81       	ldd	r24, Z+2	; 0x02
    3c9a:	93 81       	ldd	r25, Z+3	; 0x03
    3c9c:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    3ca0:	dc 01       	movw	r26, r24
    3ca2:	cb 01       	movw	r24, r22
    3ca4:	8e 01       	movw	r16, r28
    3ca6:	0f 51       	subi	r16, 0x1F	; 31
    3ca8:	1f 4f       	sbci	r17, 0xFF	; 255
    3caa:	bc 01       	movw	r22, r24
    3cac:	cd 01       	movw	r24, r26
    3cae:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    3cb2:	dc 01       	movw	r26, r24
    3cb4:	cb 01       	movw	r24, r22
    3cb6:	f8 01       	movw	r30, r16
    3cb8:	91 83       	std	Z+1, r25	; 0x01
    3cba:	80 83       	st	Z, r24
    3cbc:	24 c0       	rjmp	.+72     	; 0x3d06 <__stack+0x2c07>
    3cbe:	ce 01       	movw	r24, r28
    3cc0:	8d 51       	subi	r24, 0x1D	; 29
    3cc2:	9f 4f       	sbci	r25, 0xFF	; 255
    3cc4:	20 e9       	ldi	r18, 0x90	; 144
    3cc6:	31 e0       	ldi	r19, 0x01	; 1
    3cc8:	fc 01       	movw	r30, r24
    3cca:	31 83       	std	Z+1, r19	; 0x01
    3ccc:	20 83       	st	Z, r18
    3cce:	ce 01       	movw	r24, r28
    3cd0:	8d 51       	subi	r24, 0x1D	; 29
    3cd2:	9f 4f       	sbci	r25, 0xFF	; 255
    3cd4:	fc 01       	movw	r30, r24
    3cd6:	80 81       	ld	r24, Z
    3cd8:	91 81       	ldd	r25, Z+1	; 0x01
    3cda:	01 97       	sbiw	r24, 0x01	; 1
    3cdc:	f1 f7       	brne	.-4      	; 0x3cda <__stack+0x2bdb>
    3cde:	9e 01       	movw	r18, r28
    3ce0:	2d 51       	subi	r18, 0x1D	; 29
    3ce2:	3f 4f       	sbci	r19, 0xFF	; 255
    3ce4:	f9 01       	movw	r30, r18
    3ce6:	91 83       	std	Z+1, r25	; 0x01
    3ce8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3cea:	ce 01       	movw	r24, r28
    3cec:	8f 51       	subi	r24, 0x1F	; 31
    3cee:	9f 4f       	sbci	r25, 0xFF	; 255
    3cf0:	9e 01       	movw	r18, r28
    3cf2:	2f 51       	subi	r18, 0x1F	; 31
    3cf4:	3f 4f       	sbci	r19, 0xFF	; 255
    3cf6:	f9 01       	movw	r30, r18
    3cf8:	20 81       	ld	r18, Z
    3cfa:	31 81       	ldd	r19, Z+1	; 0x01
    3cfc:	21 50       	subi	r18, 0x01	; 1
    3cfe:	31 09       	sbc	r19, r1
    3d00:	fc 01       	movw	r30, r24
    3d02:	31 83       	std	Z+1, r19	; 0x01
    3d04:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d06:	ce 01       	movw	r24, r28
    3d08:	8f 51       	subi	r24, 0x1F	; 31
    3d0a:	9f 4f       	sbci	r25, 0xFF	; 255
    3d0c:	fc 01       	movw	r30, r24
    3d0e:	80 81       	ld	r24, Z
    3d10:	91 81       	ldd	r25, Z+1	; 0x01
    3d12:	89 2b       	or	r24, r25
    3d14:	a1 f6       	brne	.-88     	; 0x3cbe <__stack+0x2bbf>
    3d16:	2c c0       	rjmp	.+88     	; 0x3d70 <__stack+0x2c71>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d18:	8e 01       	movw	r16, r28
    3d1a:	0f 51       	subi	r16, 0x1F	; 31
    3d1c:	1f 4f       	sbci	r17, 0xFF	; 255
    3d1e:	ce 01       	movw	r24, r28
    3d20:	83 52       	subi	r24, 0x23	; 35
    3d22:	9f 4f       	sbci	r25, 0xFF	; 255
    3d24:	fc 01       	movw	r30, r24
    3d26:	60 81       	ld	r22, Z
    3d28:	71 81       	ldd	r23, Z+1	; 0x01
    3d2a:	82 81       	ldd	r24, Z+2	; 0x02
    3d2c:	93 81       	ldd	r25, Z+3	; 0x03
    3d2e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    3d32:	dc 01       	movw	r26, r24
    3d34:	cb 01       	movw	r24, r22
    3d36:	f8 01       	movw	r30, r16
    3d38:	91 83       	std	Z+1, r25	; 0x01
    3d3a:	80 83       	st	Z, r24
    3d3c:	ce 01       	movw	r24, r28
    3d3e:	8b 51       	subi	r24, 0x1B	; 27
    3d40:	9f 4f       	sbci	r25, 0xFF	; 255
    3d42:	9e 01       	movw	r18, r28
    3d44:	2f 51       	subi	r18, 0x1F	; 31
    3d46:	3f 4f       	sbci	r19, 0xFF	; 255
    3d48:	f9 01       	movw	r30, r18
    3d4a:	20 81       	ld	r18, Z
    3d4c:	31 81       	ldd	r19, Z+1	; 0x01
    3d4e:	fc 01       	movw	r30, r24
    3d50:	31 83       	std	Z+1, r19	; 0x01
    3d52:	20 83       	st	Z, r18
    3d54:	ce 01       	movw	r24, r28
    3d56:	8b 51       	subi	r24, 0x1B	; 27
    3d58:	9f 4f       	sbci	r25, 0xFF	; 255
    3d5a:	fc 01       	movw	r30, r24
    3d5c:	80 81       	ld	r24, Z
    3d5e:	91 81       	ldd	r25, Z+1	; 0x01
    3d60:	01 97       	sbiw	r24, 0x01	; 1
    3d62:	f1 f7       	brne	.-4      	; 0x3d60 <__stack+0x2c61>
    3d64:	9e 01       	movw	r18, r28
    3d66:	2b 51       	subi	r18, 0x1B	; 27
    3d68:	3f 4f       	sbci	r19, 0xFF	; 255
    3d6a:	f9 01       	movw	r30, r18
    3d6c:	91 83       	std	Z+1, r25	; 0x01
    3d6e:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F860 T100\n");
    3d70:	8f e7       	ldi	r24, 0x7F	; 127
    3d72:	92 e0       	ldi	r25, 0x02	; 2
    3d74:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    3d78:	9e 01       	movw	r18, r28
    3d7a:	27 57       	subi	r18, 0x77	; 119
    3d7c:	3f 4f       	sbci	r19, 0xFF	; 255
    3d7e:	80 e0       	ldi	r24, 0x00	; 0
    3d80:	90 e0       	ldi	r25, 0x00	; 0
    3d82:	a6 e9       	ldi	r26, 0x96	; 150
    3d84:	b3 e4       	ldi	r27, 0x43	; 67
    3d86:	f9 01       	movw	r30, r18
    3d88:	80 83       	st	Z, r24
    3d8a:	91 83       	std	Z+1, r25	; 0x01
    3d8c:	a2 83       	std	Z+2, r26	; 0x02
    3d8e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3d90:	8e 01       	movw	r16, r28
    3d92:	0d 52       	subi	r16, 0x2D	; 45
    3d94:	1f 4f       	sbci	r17, 0xFF	; 255
    3d96:	ce 01       	movw	r24, r28
    3d98:	87 57       	subi	r24, 0x77	; 119
    3d9a:	9f 4f       	sbci	r25, 0xFF	; 255
    3d9c:	20 e0       	ldi	r18, 0x00	; 0
    3d9e:	30 e0       	ldi	r19, 0x00	; 0
    3da0:	4a e7       	ldi	r20, 0x7A	; 122
    3da2:	55 e4       	ldi	r21, 0x45	; 69
    3da4:	fc 01       	movw	r30, r24
    3da6:	60 81       	ld	r22, Z
    3da8:	71 81       	ldd	r23, Z+1	; 0x01
    3daa:	82 81       	ldd	r24, Z+2	; 0x02
    3dac:	93 81       	ldd	r25, Z+3	; 0x03
    3dae:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    3db2:	dc 01       	movw	r26, r24
    3db4:	cb 01       	movw	r24, r22
    3db6:	f8 01       	movw	r30, r16
    3db8:	80 83       	st	Z, r24
    3dba:	91 83       	std	Z+1, r25	; 0x01
    3dbc:	a2 83       	std	Z+2, r26	; 0x02
    3dbe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3dc0:	ce 01       	movw	r24, r28
    3dc2:	8d 52       	subi	r24, 0x2D	; 45
    3dc4:	9f 4f       	sbci	r25, 0xFF	; 255
    3dc6:	20 e0       	ldi	r18, 0x00	; 0
    3dc8:	30 e0       	ldi	r19, 0x00	; 0
    3dca:	40 e8       	ldi	r20, 0x80	; 128
    3dcc:	5f e3       	ldi	r21, 0x3F	; 63
    3dce:	fc 01       	movw	r30, r24
    3dd0:	60 81       	ld	r22, Z
    3dd2:	71 81       	ldd	r23, Z+1	; 0x01
    3dd4:	82 81       	ldd	r24, Z+2	; 0x02
    3dd6:	93 81       	ldd	r25, Z+3	; 0x03
    3dd8:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    3ddc:	88 23       	and	r24, r24
    3dde:	4c f4       	brge	.+18     	; 0x3df2 <__stack+0x2cf3>
		__ticks = 1;
    3de0:	ce 01       	movw	r24, r28
    3de2:	89 52       	subi	r24, 0x29	; 41
    3de4:	9f 4f       	sbci	r25, 0xFF	; 255
    3de6:	21 e0       	ldi	r18, 0x01	; 1
    3de8:	30 e0       	ldi	r19, 0x00	; 0
    3dea:	fc 01       	movw	r30, r24
    3dec:	31 83       	std	Z+1, r19	; 0x01
    3dee:	20 83       	st	Z, r18
    3df0:	6d c0       	rjmp	.+218    	; 0x3ecc <__stack+0x2dcd>
	else if (__tmp > 65535)
    3df2:	ce 01       	movw	r24, r28
    3df4:	8d 52       	subi	r24, 0x2D	; 45
    3df6:	9f 4f       	sbci	r25, 0xFF	; 255
    3df8:	20 e0       	ldi	r18, 0x00	; 0
    3dfa:	3f ef       	ldi	r19, 0xFF	; 255
    3dfc:	4f e7       	ldi	r20, 0x7F	; 127
    3dfe:	57 e4       	ldi	r21, 0x47	; 71
    3e00:	fc 01       	movw	r30, r24
    3e02:	60 81       	ld	r22, Z
    3e04:	71 81       	ldd	r23, Z+1	; 0x01
    3e06:	82 81       	ldd	r24, Z+2	; 0x02
    3e08:	93 81       	ldd	r25, Z+3	; 0x03
    3e0a:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    3e0e:	18 16       	cp	r1, r24
    3e10:	0c f0       	brlt	.+2      	; 0x3e14 <__stack+0x2d15>
    3e12:	4a c0       	rjmp	.+148    	; 0x3ea8 <__stack+0x2da9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e14:	ce 01       	movw	r24, r28
    3e16:	87 57       	subi	r24, 0x77	; 119
    3e18:	9f 4f       	sbci	r25, 0xFF	; 255
    3e1a:	20 e0       	ldi	r18, 0x00	; 0
    3e1c:	30 e0       	ldi	r19, 0x00	; 0
    3e1e:	40 e2       	ldi	r20, 0x20	; 32
    3e20:	51 e4       	ldi	r21, 0x41	; 65
    3e22:	fc 01       	movw	r30, r24
    3e24:	60 81       	ld	r22, Z
    3e26:	71 81       	ldd	r23, Z+1	; 0x01
    3e28:	82 81       	ldd	r24, Z+2	; 0x02
    3e2a:	93 81       	ldd	r25, Z+3	; 0x03
    3e2c:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    3e30:	dc 01       	movw	r26, r24
    3e32:	cb 01       	movw	r24, r22
    3e34:	8e 01       	movw	r16, r28
    3e36:	09 52       	subi	r16, 0x29	; 41
    3e38:	1f 4f       	sbci	r17, 0xFF	; 255
    3e3a:	bc 01       	movw	r22, r24
    3e3c:	cd 01       	movw	r24, r26
    3e3e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    3e42:	dc 01       	movw	r26, r24
    3e44:	cb 01       	movw	r24, r22
    3e46:	f8 01       	movw	r30, r16
    3e48:	91 83       	std	Z+1, r25	; 0x01
    3e4a:	80 83       	st	Z, r24
    3e4c:	24 c0       	rjmp	.+72     	; 0x3e96 <__stack+0x2d97>
    3e4e:	ce 01       	movw	r24, r28
    3e50:	87 52       	subi	r24, 0x27	; 39
    3e52:	9f 4f       	sbci	r25, 0xFF	; 255
    3e54:	20 e9       	ldi	r18, 0x90	; 144
    3e56:	31 e0       	ldi	r19, 0x01	; 1
    3e58:	fc 01       	movw	r30, r24
    3e5a:	31 83       	std	Z+1, r19	; 0x01
    3e5c:	20 83       	st	Z, r18
    3e5e:	ce 01       	movw	r24, r28
    3e60:	87 52       	subi	r24, 0x27	; 39
    3e62:	9f 4f       	sbci	r25, 0xFF	; 255
    3e64:	fc 01       	movw	r30, r24
    3e66:	80 81       	ld	r24, Z
    3e68:	91 81       	ldd	r25, Z+1	; 0x01
    3e6a:	01 97       	sbiw	r24, 0x01	; 1
    3e6c:	f1 f7       	brne	.-4      	; 0x3e6a <__stack+0x2d6b>
    3e6e:	9e 01       	movw	r18, r28
    3e70:	27 52       	subi	r18, 0x27	; 39
    3e72:	3f 4f       	sbci	r19, 0xFF	; 255
    3e74:	f9 01       	movw	r30, r18
    3e76:	91 83       	std	Z+1, r25	; 0x01
    3e78:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e7a:	ce 01       	movw	r24, r28
    3e7c:	89 52       	subi	r24, 0x29	; 41
    3e7e:	9f 4f       	sbci	r25, 0xFF	; 255
    3e80:	9e 01       	movw	r18, r28
    3e82:	29 52       	subi	r18, 0x29	; 41
    3e84:	3f 4f       	sbci	r19, 0xFF	; 255
    3e86:	f9 01       	movw	r30, r18
    3e88:	20 81       	ld	r18, Z
    3e8a:	31 81       	ldd	r19, Z+1	; 0x01
    3e8c:	21 50       	subi	r18, 0x01	; 1
    3e8e:	31 09       	sbc	r19, r1
    3e90:	fc 01       	movw	r30, r24
    3e92:	31 83       	std	Z+1, r19	; 0x01
    3e94:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e96:	ce 01       	movw	r24, r28
    3e98:	89 52       	subi	r24, 0x29	; 41
    3e9a:	9f 4f       	sbci	r25, 0xFF	; 255
    3e9c:	fc 01       	movw	r30, r24
    3e9e:	80 81       	ld	r24, Z
    3ea0:	91 81       	ldd	r25, Z+1	; 0x01
    3ea2:	89 2b       	or	r24, r25
    3ea4:	a1 f6       	brne	.-88     	; 0x3e4e <__stack+0x2d4f>
    3ea6:	2c c0       	rjmp	.+88     	; 0x3f00 <__stack+0x2e01>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ea8:	8e 01       	movw	r16, r28
    3eaa:	09 52       	subi	r16, 0x29	; 41
    3eac:	1f 4f       	sbci	r17, 0xFF	; 255
    3eae:	ce 01       	movw	r24, r28
    3eb0:	8d 52       	subi	r24, 0x2D	; 45
    3eb2:	9f 4f       	sbci	r25, 0xFF	; 255
    3eb4:	fc 01       	movw	r30, r24
    3eb6:	60 81       	ld	r22, Z
    3eb8:	71 81       	ldd	r23, Z+1	; 0x01
    3eba:	82 81       	ldd	r24, Z+2	; 0x02
    3ebc:	93 81       	ldd	r25, Z+3	; 0x03
    3ebe:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    3ec2:	dc 01       	movw	r26, r24
    3ec4:	cb 01       	movw	r24, r22
    3ec6:	f8 01       	movw	r30, r16
    3ec8:	91 83       	std	Z+1, r25	; 0x01
    3eca:	80 83       	st	Z, r24
    3ecc:	ce 01       	movw	r24, r28
    3ece:	85 52       	subi	r24, 0x25	; 37
    3ed0:	9f 4f       	sbci	r25, 0xFF	; 255
    3ed2:	9e 01       	movw	r18, r28
    3ed4:	29 52       	subi	r18, 0x29	; 41
    3ed6:	3f 4f       	sbci	r19, 0xFF	; 255
    3ed8:	f9 01       	movw	r30, r18
    3eda:	20 81       	ld	r18, Z
    3edc:	31 81       	ldd	r19, Z+1	; 0x01
    3ede:	fc 01       	movw	r30, r24
    3ee0:	31 83       	std	Z+1, r19	; 0x01
    3ee2:	20 83       	st	Z, r18
    3ee4:	ce 01       	movw	r24, r28
    3ee6:	85 52       	subi	r24, 0x25	; 37
    3ee8:	9f 4f       	sbci	r25, 0xFF	; 255
    3eea:	fc 01       	movw	r30, r24
    3eec:	80 81       	ld	r24, Z
    3eee:	91 81       	ldd	r25, Z+1	; 0x01
    3ef0:	01 97       	sbiw	r24, 0x01	; 1
    3ef2:	f1 f7       	brne	.-4      	; 0x3ef0 <__stack+0x2df1>
    3ef4:	9e 01       	movw	r18, r28
    3ef6:	25 52       	subi	r18, 0x25	; 37
    3ef8:	3f 4f       	sbci	r19, 0xFF	; 255
    3efa:	f9 01       	movw	r30, r18
    3efc:	91 83       	std	Z+1, r25	; 0x01
    3efe:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F700 T80\n");
    3f00:	8f eb       	ldi	r24, 0xBF	; 191
    3f02:	92 e0       	ldi	r25, 0x02	; 2
    3f04:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    3f08:	9e 01       	movw	r18, r28
    3f0a:	23 57       	subi	r18, 0x73	; 115
    3f0c:	3f 4f       	sbci	r19, 0xFF	; 255
    3f0e:	80 e0       	ldi	r24, 0x00	; 0
    3f10:	90 e0       	ldi	r25, 0x00	; 0
    3f12:	a6 e1       	ldi	r26, 0x16	; 22
    3f14:	b3 e4       	ldi	r27, 0x43	; 67
    3f16:	f9 01       	movw	r30, r18
    3f18:	80 83       	st	Z, r24
    3f1a:	91 83       	std	Z+1, r25	; 0x01
    3f1c:	a2 83       	std	Z+2, r26	; 0x02
    3f1e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3f20:	8e 01       	movw	r16, r28
    3f22:	07 53       	subi	r16, 0x37	; 55
    3f24:	1f 4f       	sbci	r17, 0xFF	; 255
    3f26:	ce 01       	movw	r24, r28
    3f28:	83 57       	subi	r24, 0x73	; 115
    3f2a:	9f 4f       	sbci	r25, 0xFF	; 255
    3f2c:	20 e0       	ldi	r18, 0x00	; 0
    3f2e:	30 e0       	ldi	r19, 0x00	; 0
    3f30:	4a e7       	ldi	r20, 0x7A	; 122
    3f32:	55 e4       	ldi	r21, 0x45	; 69
    3f34:	fc 01       	movw	r30, r24
    3f36:	60 81       	ld	r22, Z
    3f38:	71 81       	ldd	r23, Z+1	; 0x01
    3f3a:	82 81       	ldd	r24, Z+2	; 0x02
    3f3c:	93 81       	ldd	r25, Z+3	; 0x03
    3f3e:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    3f42:	dc 01       	movw	r26, r24
    3f44:	cb 01       	movw	r24, r22
    3f46:	f8 01       	movw	r30, r16
    3f48:	80 83       	st	Z, r24
    3f4a:	91 83       	std	Z+1, r25	; 0x01
    3f4c:	a2 83       	std	Z+2, r26	; 0x02
    3f4e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3f50:	ce 01       	movw	r24, r28
    3f52:	87 53       	subi	r24, 0x37	; 55
    3f54:	9f 4f       	sbci	r25, 0xFF	; 255
    3f56:	20 e0       	ldi	r18, 0x00	; 0
    3f58:	30 e0       	ldi	r19, 0x00	; 0
    3f5a:	40 e8       	ldi	r20, 0x80	; 128
    3f5c:	5f e3       	ldi	r21, 0x3F	; 63
    3f5e:	fc 01       	movw	r30, r24
    3f60:	60 81       	ld	r22, Z
    3f62:	71 81       	ldd	r23, Z+1	; 0x01
    3f64:	82 81       	ldd	r24, Z+2	; 0x02
    3f66:	93 81       	ldd	r25, Z+3	; 0x03
    3f68:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    3f6c:	88 23       	and	r24, r24
    3f6e:	4c f4       	brge	.+18     	; 0x3f82 <__stack+0x2e83>
		__ticks = 1;
    3f70:	ce 01       	movw	r24, r28
    3f72:	83 53       	subi	r24, 0x33	; 51
    3f74:	9f 4f       	sbci	r25, 0xFF	; 255
    3f76:	21 e0       	ldi	r18, 0x01	; 1
    3f78:	30 e0       	ldi	r19, 0x00	; 0
    3f7a:	fc 01       	movw	r30, r24
    3f7c:	31 83       	std	Z+1, r19	; 0x01
    3f7e:	20 83       	st	Z, r18
    3f80:	6d c0       	rjmp	.+218    	; 0x405c <__stack+0x2f5d>
	else if (__tmp > 65535)
    3f82:	ce 01       	movw	r24, r28
    3f84:	87 53       	subi	r24, 0x37	; 55
    3f86:	9f 4f       	sbci	r25, 0xFF	; 255
    3f88:	20 e0       	ldi	r18, 0x00	; 0
    3f8a:	3f ef       	ldi	r19, 0xFF	; 255
    3f8c:	4f e7       	ldi	r20, 0x7F	; 127
    3f8e:	57 e4       	ldi	r21, 0x47	; 71
    3f90:	fc 01       	movw	r30, r24
    3f92:	60 81       	ld	r22, Z
    3f94:	71 81       	ldd	r23, Z+1	; 0x01
    3f96:	82 81       	ldd	r24, Z+2	; 0x02
    3f98:	93 81       	ldd	r25, Z+3	; 0x03
    3f9a:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    3f9e:	18 16       	cp	r1, r24
    3fa0:	0c f0       	brlt	.+2      	; 0x3fa4 <__stack+0x2ea5>
    3fa2:	4a c0       	rjmp	.+148    	; 0x4038 <__stack+0x2f39>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3fa4:	ce 01       	movw	r24, r28
    3fa6:	83 57       	subi	r24, 0x73	; 115
    3fa8:	9f 4f       	sbci	r25, 0xFF	; 255
    3faa:	20 e0       	ldi	r18, 0x00	; 0
    3fac:	30 e0       	ldi	r19, 0x00	; 0
    3fae:	40 e2       	ldi	r20, 0x20	; 32
    3fb0:	51 e4       	ldi	r21, 0x41	; 65
    3fb2:	fc 01       	movw	r30, r24
    3fb4:	60 81       	ld	r22, Z
    3fb6:	71 81       	ldd	r23, Z+1	; 0x01
    3fb8:	82 81       	ldd	r24, Z+2	; 0x02
    3fba:	93 81       	ldd	r25, Z+3	; 0x03
    3fbc:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    3fc0:	dc 01       	movw	r26, r24
    3fc2:	cb 01       	movw	r24, r22
    3fc4:	8e 01       	movw	r16, r28
    3fc6:	03 53       	subi	r16, 0x33	; 51
    3fc8:	1f 4f       	sbci	r17, 0xFF	; 255
    3fca:	bc 01       	movw	r22, r24
    3fcc:	cd 01       	movw	r24, r26
    3fce:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    3fd2:	dc 01       	movw	r26, r24
    3fd4:	cb 01       	movw	r24, r22
    3fd6:	f8 01       	movw	r30, r16
    3fd8:	91 83       	std	Z+1, r25	; 0x01
    3fda:	80 83       	st	Z, r24
    3fdc:	24 c0       	rjmp	.+72     	; 0x4026 <__stack+0x2f27>
    3fde:	ce 01       	movw	r24, r28
    3fe0:	81 53       	subi	r24, 0x31	; 49
    3fe2:	9f 4f       	sbci	r25, 0xFF	; 255
    3fe4:	20 e9       	ldi	r18, 0x90	; 144
    3fe6:	31 e0       	ldi	r19, 0x01	; 1
    3fe8:	fc 01       	movw	r30, r24
    3fea:	31 83       	std	Z+1, r19	; 0x01
    3fec:	20 83       	st	Z, r18
    3fee:	ce 01       	movw	r24, r28
    3ff0:	81 53       	subi	r24, 0x31	; 49
    3ff2:	9f 4f       	sbci	r25, 0xFF	; 255
    3ff4:	fc 01       	movw	r30, r24
    3ff6:	80 81       	ld	r24, Z
    3ff8:	91 81       	ldd	r25, Z+1	; 0x01
    3ffa:	01 97       	sbiw	r24, 0x01	; 1
    3ffc:	f1 f7       	brne	.-4      	; 0x3ffa <__stack+0x2efb>
    3ffe:	9e 01       	movw	r18, r28
    4000:	21 53       	subi	r18, 0x31	; 49
    4002:	3f 4f       	sbci	r19, 0xFF	; 255
    4004:	f9 01       	movw	r30, r18
    4006:	91 83       	std	Z+1, r25	; 0x01
    4008:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    400a:	ce 01       	movw	r24, r28
    400c:	83 53       	subi	r24, 0x33	; 51
    400e:	9f 4f       	sbci	r25, 0xFF	; 255
    4010:	9e 01       	movw	r18, r28
    4012:	23 53       	subi	r18, 0x33	; 51
    4014:	3f 4f       	sbci	r19, 0xFF	; 255
    4016:	f9 01       	movw	r30, r18
    4018:	20 81       	ld	r18, Z
    401a:	31 81       	ldd	r19, Z+1	; 0x01
    401c:	21 50       	subi	r18, 0x01	; 1
    401e:	31 09       	sbc	r19, r1
    4020:	fc 01       	movw	r30, r24
    4022:	31 83       	std	Z+1, r19	; 0x01
    4024:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4026:	ce 01       	movw	r24, r28
    4028:	83 53       	subi	r24, 0x33	; 51
    402a:	9f 4f       	sbci	r25, 0xFF	; 255
    402c:	fc 01       	movw	r30, r24
    402e:	80 81       	ld	r24, Z
    4030:	91 81       	ldd	r25, Z+1	; 0x01
    4032:	89 2b       	or	r24, r25
    4034:	a1 f6       	brne	.-88     	; 0x3fde <__stack+0x2edf>
    4036:	2c c0       	rjmp	.+88     	; 0x4090 <__stack+0x2f91>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4038:	8e 01       	movw	r16, r28
    403a:	03 53       	subi	r16, 0x33	; 51
    403c:	1f 4f       	sbci	r17, 0xFF	; 255
    403e:	ce 01       	movw	r24, r28
    4040:	87 53       	subi	r24, 0x37	; 55
    4042:	9f 4f       	sbci	r25, 0xFF	; 255
    4044:	fc 01       	movw	r30, r24
    4046:	60 81       	ld	r22, Z
    4048:	71 81       	ldd	r23, Z+1	; 0x01
    404a:	82 81       	ldd	r24, Z+2	; 0x02
    404c:	93 81       	ldd	r25, Z+3	; 0x03
    404e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    4052:	dc 01       	movw	r26, r24
    4054:	cb 01       	movw	r24, r22
    4056:	f8 01       	movw	r30, r16
    4058:	91 83       	std	Z+1, r25	; 0x01
    405a:	80 83       	st	Z, r24
    405c:	ce 01       	movw	r24, r28
    405e:	8f 52       	subi	r24, 0x2F	; 47
    4060:	9f 4f       	sbci	r25, 0xFF	; 255
    4062:	9e 01       	movw	r18, r28
    4064:	23 53       	subi	r18, 0x33	; 51
    4066:	3f 4f       	sbci	r19, 0xFF	; 255
    4068:	f9 01       	movw	r30, r18
    406a:	20 81       	ld	r18, Z
    406c:	31 81       	ldd	r19, Z+1	; 0x01
    406e:	fc 01       	movw	r30, r24
    4070:	31 83       	std	Z+1, r19	; 0x01
    4072:	20 83       	st	Z, r18
    4074:	ce 01       	movw	r24, r28
    4076:	8f 52       	subi	r24, 0x2F	; 47
    4078:	9f 4f       	sbci	r25, 0xFF	; 255
    407a:	fc 01       	movw	r30, r24
    407c:	80 81       	ld	r24, Z
    407e:	91 81       	ldd	r25, Z+1	; 0x01
    4080:	01 97       	sbiw	r24, 0x01	; 1
    4082:	f1 f7       	brne	.-4      	; 0x4080 <__stack+0x2f81>
    4084:	9e 01       	movw	r18, r28
    4086:	2f 52       	subi	r18, 0x2F	; 47
    4088:	3f 4f       	sbci	r19, 0xFF	; 255
    408a:	f9 01       	movw	r30, r18
    408c:	91 83       	std	Z+1, r25	; 0x01
    408e:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F760 T50\n");
    4090:	8f e6       	ldi	r24, 0x6F	; 111
    4092:	92 e0       	ldi	r25, 0x02	; 2
    4094:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    4098:	9e 01       	movw	r18, r28
    409a:	2f 56       	subi	r18, 0x6F	; 111
    409c:	3f 4f       	sbci	r19, 0xFF	; 255
    409e:	80 e0       	ldi	r24, 0x00	; 0
    40a0:	90 e0       	ldi	r25, 0x00	; 0
    40a2:	af ea       	ldi	r26, 0xAF	; 175
    40a4:	b3 e4       	ldi	r27, 0x43	; 67
    40a6:	f9 01       	movw	r30, r18
    40a8:	80 83       	st	Z, r24
    40aa:	91 83       	std	Z+1, r25	; 0x01
    40ac:	a2 83       	std	Z+2, r26	; 0x02
    40ae:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    40b0:	8e 01       	movw	r16, r28
    40b2:	01 54       	subi	r16, 0x41	; 65
    40b4:	1f 4f       	sbci	r17, 0xFF	; 255
    40b6:	ce 01       	movw	r24, r28
    40b8:	8f 56       	subi	r24, 0x6F	; 111
    40ba:	9f 4f       	sbci	r25, 0xFF	; 255
    40bc:	20 e0       	ldi	r18, 0x00	; 0
    40be:	30 e0       	ldi	r19, 0x00	; 0
    40c0:	4a e7       	ldi	r20, 0x7A	; 122
    40c2:	55 e4       	ldi	r21, 0x45	; 69
    40c4:	fc 01       	movw	r30, r24
    40c6:	60 81       	ld	r22, Z
    40c8:	71 81       	ldd	r23, Z+1	; 0x01
    40ca:	82 81       	ldd	r24, Z+2	; 0x02
    40cc:	93 81       	ldd	r25, Z+3	; 0x03
    40ce:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    40d2:	dc 01       	movw	r26, r24
    40d4:	cb 01       	movw	r24, r22
    40d6:	f8 01       	movw	r30, r16
    40d8:	80 83       	st	Z, r24
    40da:	91 83       	std	Z+1, r25	; 0x01
    40dc:	a2 83       	std	Z+2, r26	; 0x02
    40de:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    40e0:	ce 01       	movw	r24, r28
    40e2:	81 54       	subi	r24, 0x41	; 65
    40e4:	9f 4f       	sbci	r25, 0xFF	; 255
    40e6:	20 e0       	ldi	r18, 0x00	; 0
    40e8:	30 e0       	ldi	r19, 0x00	; 0
    40ea:	40 e8       	ldi	r20, 0x80	; 128
    40ec:	5f e3       	ldi	r21, 0x3F	; 63
    40ee:	fc 01       	movw	r30, r24
    40f0:	60 81       	ld	r22, Z
    40f2:	71 81       	ldd	r23, Z+1	; 0x01
    40f4:	82 81       	ldd	r24, Z+2	; 0x02
    40f6:	93 81       	ldd	r25, Z+3	; 0x03
    40f8:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    40fc:	88 23       	and	r24, r24
    40fe:	4c f4       	brge	.+18     	; 0x4112 <__stack+0x3013>
		__ticks = 1;
    4100:	ce 01       	movw	r24, r28
    4102:	8d 53       	subi	r24, 0x3D	; 61
    4104:	9f 4f       	sbci	r25, 0xFF	; 255
    4106:	21 e0       	ldi	r18, 0x01	; 1
    4108:	30 e0       	ldi	r19, 0x00	; 0
    410a:	fc 01       	movw	r30, r24
    410c:	31 83       	std	Z+1, r19	; 0x01
    410e:	20 83       	st	Z, r18
    4110:	6d c0       	rjmp	.+218    	; 0x41ec <__stack+0x30ed>
	else if (__tmp > 65535)
    4112:	ce 01       	movw	r24, r28
    4114:	81 54       	subi	r24, 0x41	; 65
    4116:	9f 4f       	sbci	r25, 0xFF	; 255
    4118:	20 e0       	ldi	r18, 0x00	; 0
    411a:	3f ef       	ldi	r19, 0xFF	; 255
    411c:	4f e7       	ldi	r20, 0x7F	; 127
    411e:	57 e4       	ldi	r21, 0x47	; 71
    4120:	fc 01       	movw	r30, r24
    4122:	60 81       	ld	r22, Z
    4124:	71 81       	ldd	r23, Z+1	; 0x01
    4126:	82 81       	ldd	r24, Z+2	; 0x02
    4128:	93 81       	ldd	r25, Z+3	; 0x03
    412a:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    412e:	18 16       	cp	r1, r24
    4130:	0c f0       	brlt	.+2      	; 0x4134 <__stack+0x3035>
    4132:	4a c0       	rjmp	.+148    	; 0x41c8 <__stack+0x30c9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4134:	ce 01       	movw	r24, r28
    4136:	8f 56       	subi	r24, 0x6F	; 111
    4138:	9f 4f       	sbci	r25, 0xFF	; 255
    413a:	20 e0       	ldi	r18, 0x00	; 0
    413c:	30 e0       	ldi	r19, 0x00	; 0
    413e:	40 e2       	ldi	r20, 0x20	; 32
    4140:	51 e4       	ldi	r21, 0x41	; 65
    4142:	fc 01       	movw	r30, r24
    4144:	60 81       	ld	r22, Z
    4146:	71 81       	ldd	r23, Z+1	; 0x01
    4148:	82 81       	ldd	r24, Z+2	; 0x02
    414a:	93 81       	ldd	r25, Z+3	; 0x03
    414c:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    4150:	dc 01       	movw	r26, r24
    4152:	cb 01       	movw	r24, r22
    4154:	8e 01       	movw	r16, r28
    4156:	0d 53       	subi	r16, 0x3D	; 61
    4158:	1f 4f       	sbci	r17, 0xFF	; 255
    415a:	bc 01       	movw	r22, r24
    415c:	cd 01       	movw	r24, r26
    415e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    4162:	dc 01       	movw	r26, r24
    4164:	cb 01       	movw	r24, r22
    4166:	f8 01       	movw	r30, r16
    4168:	91 83       	std	Z+1, r25	; 0x01
    416a:	80 83       	st	Z, r24
    416c:	24 c0       	rjmp	.+72     	; 0x41b6 <__stack+0x30b7>
    416e:	ce 01       	movw	r24, r28
    4170:	8b 53       	subi	r24, 0x3B	; 59
    4172:	9f 4f       	sbci	r25, 0xFF	; 255
    4174:	20 e9       	ldi	r18, 0x90	; 144
    4176:	31 e0       	ldi	r19, 0x01	; 1
    4178:	fc 01       	movw	r30, r24
    417a:	31 83       	std	Z+1, r19	; 0x01
    417c:	20 83       	st	Z, r18
    417e:	ce 01       	movw	r24, r28
    4180:	8b 53       	subi	r24, 0x3B	; 59
    4182:	9f 4f       	sbci	r25, 0xFF	; 255
    4184:	fc 01       	movw	r30, r24
    4186:	80 81       	ld	r24, Z
    4188:	91 81       	ldd	r25, Z+1	; 0x01
    418a:	01 97       	sbiw	r24, 0x01	; 1
    418c:	f1 f7       	brne	.-4      	; 0x418a <__stack+0x308b>
    418e:	9e 01       	movw	r18, r28
    4190:	2b 53       	subi	r18, 0x3B	; 59
    4192:	3f 4f       	sbci	r19, 0xFF	; 255
    4194:	f9 01       	movw	r30, r18
    4196:	91 83       	std	Z+1, r25	; 0x01
    4198:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    419a:	ce 01       	movw	r24, r28
    419c:	8d 53       	subi	r24, 0x3D	; 61
    419e:	9f 4f       	sbci	r25, 0xFF	; 255
    41a0:	9e 01       	movw	r18, r28
    41a2:	2d 53       	subi	r18, 0x3D	; 61
    41a4:	3f 4f       	sbci	r19, 0xFF	; 255
    41a6:	f9 01       	movw	r30, r18
    41a8:	20 81       	ld	r18, Z
    41aa:	31 81       	ldd	r19, Z+1	; 0x01
    41ac:	21 50       	subi	r18, 0x01	; 1
    41ae:	31 09       	sbc	r19, r1
    41b0:	fc 01       	movw	r30, r24
    41b2:	31 83       	std	Z+1, r19	; 0x01
    41b4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    41b6:	ce 01       	movw	r24, r28
    41b8:	8d 53       	subi	r24, 0x3D	; 61
    41ba:	9f 4f       	sbci	r25, 0xFF	; 255
    41bc:	fc 01       	movw	r30, r24
    41be:	80 81       	ld	r24, Z
    41c0:	91 81       	ldd	r25, Z+1	; 0x01
    41c2:	89 2b       	or	r24, r25
    41c4:	a1 f6       	brne	.-88     	; 0x416e <__stack+0x306f>
    41c6:	2c c0       	rjmp	.+88     	; 0x4220 <__stack+0x3121>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    41c8:	8e 01       	movw	r16, r28
    41ca:	0d 53       	subi	r16, 0x3D	; 61
    41cc:	1f 4f       	sbci	r17, 0xFF	; 255
    41ce:	ce 01       	movw	r24, r28
    41d0:	81 54       	subi	r24, 0x41	; 65
    41d2:	9f 4f       	sbci	r25, 0xFF	; 255
    41d4:	fc 01       	movw	r30, r24
    41d6:	60 81       	ld	r22, Z
    41d8:	71 81       	ldd	r23, Z+1	; 0x01
    41da:	82 81       	ldd	r24, Z+2	; 0x02
    41dc:	93 81       	ldd	r25, Z+3	; 0x03
    41de:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    41e2:	dc 01       	movw	r26, r24
    41e4:	cb 01       	movw	r24, r22
    41e6:	f8 01       	movw	r30, r16
    41e8:	91 83       	std	Z+1, r25	; 0x01
    41ea:	80 83       	st	Z, r24
    41ec:	ce 01       	movw	r24, r28
    41ee:	89 53       	subi	r24, 0x39	; 57
    41f0:	9f 4f       	sbci	r25, 0xFF	; 255
    41f2:	9e 01       	movw	r18, r28
    41f4:	2d 53       	subi	r18, 0x3D	; 61
    41f6:	3f 4f       	sbci	r19, 0xFF	; 255
    41f8:	f9 01       	movw	r30, r18
    41fa:	20 81       	ld	r18, Z
    41fc:	31 81       	ldd	r19, Z+1	; 0x01
    41fe:	fc 01       	movw	r30, r24
    4200:	31 83       	std	Z+1, r19	; 0x01
    4202:	20 83       	st	Z, r18
    4204:	ce 01       	movw	r24, r28
    4206:	89 53       	subi	r24, 0x39	; 57
    4208:	9f 4f       	sbci	r25, 0xFF	; 255
    420a:	fc 01       	movw	r30, r24
    420c:	80 81       	ld	r24, Z
    420e:	91 81       	ldd	r25, Z+1	; 0x01
    4210:	01 97       	sbiw	r24, 0x01	; 1
    4212:	f1 f7       	brne	.-4      	; 0x4210 <__stack+0x3111>
    4214:	9e 01       	movw	r18, r28
    4216:	29 53       	subi	r18, 0x39	; 57
    4218:	3f 4f       	sbci	r19, 0xFF	; 255
    421a:	f9 01       	movw	r30, r18
    421c:	91 83       	std	Z+1, r25	; 0x01
    421e:	80 83       	st	Z, r24
	_delay_ms(350);
	to_uARM("M2210 F660 T80\n");
    4220:	8f e5       	ldi	r24, 0x5F	; 95
    4222:	92 e0       	ldi	r25, 0x02	; 2
    4224:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    4228:	9e 01       	movw	r18, r28
    422a:	2b 56       	subi	r18, 0x6B	; 107
    422c:	3f 4f       	sbci	r19, 0xFF	; 255
    422e:	80 e0       	ldi	r24, 0x00	; 0
    4230:	90 e0       	ldi	r25, 0x00	; 0
    4232:	a6 e9       	ldi	r26, 0x96	; 150
    4234:	b3 e4       	ldi	r27, 0x43	; 67
    4236:	f9 01       	movw	r30, r18
    4238:	80 83       	st	Z, r24
    423a:	91 83       	std	Z+1, r25	; 0x01
    423c:	a2 83       	std	Z+2, r26	; 0x02
    423e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4240:	8e 01       	movw	r16, r28
    4242:	0b 54       	subi	r16, 0x4B	; 75
    4244:	1f 4f       	sbci	r17, 0xFF	; 255
    4246:	ce 01       	movw	r24, r28
    4248:	8b 56       	subi	r24, 0x6B	; 107
    424a:	9f 4f       	sbci	r25, 0xFF	; 255
    424c:	20 e0       	ldi	r18, 0x00	; 0
    424e:	30 e0       	ldi	r19, 0x00	; 0
    4250:	4a e7       	ldi	r20, 0x7A	; 122
    4252:	55 e4       	ldi	r21, 0x45	; 69
    4254:	fc 01       	movw	r30, r24
    4256:	60 81       	ld	r22, Z
    4258:	71 81       	ldd	r23, Z+1	; 0x01
    425a:	82 81       	ldd	r24, Z+2	; 0x02
    425c:	93 81       	ldd	r25, Z+3	; 0x03
    425e:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    4262:	dc 01       	movw	r26, r24
    4264:	cb 01       	movw	r24, r22
    4266:	f8 01       	movw	r30, r16
    4268:	80 83       	st	Z, r24
    426a:	91 83       	std	Z+1, r25	; 0x01
    426c:	a2 83       	std	Z+2, r26	; 0x02
    426e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4270:	ce 01       	movw	r24, r28
    4272:	8b 54       	subi	r24, 0x4B	; 75
    4274:	9f 4f       	sbci	r25, 0xFF	; 255
    4276:	20 e0       	ldi	r18, 0x00	; 0
    4278:	30 e0       	ldi	r19, 0x00	; 0
    427a:	40 e8       	ldi	r20, 0x80	; 128
    427c:	5f e3       	ldi	r21, 0x3F	; 63
    427e:	fc 01       	movw	r30, r24
    4280:	60 81       	ld	r22, Z
    4282:	71 81       	ldd	r23, Z+1	; 0x01
    4284:	82 81       	ldd	r24, Z+2	; 0x02
    4286:	93 81       	ldd	r25, Z+3	; 0x03
    4288:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    428c:	88 23       	and	r24, r24
    428e:	4c f4       	brge	.+18     	; 0x42a2 <__stack+0x31a3>
		__ticks = 1;
    4290:	ce 01       	movw	r24, r28
    4292:	87 54       	subi	r24, 0x47	; 71
    4294:	9f 4f       	sbci	r25, 0xFF	; 255
    4296:	21 e0       	ldi	r18, 0x01	; 1
    4298:	30 e0       	ldi	r19, 0x00	; 0
    429a:	fc 01       	movw	r30, r24
    429c:	31 83       	std	Z+1, r19	; 0x01
    429e:	20 83       	st	Z, r18
    42a0:	6d c0       	rjmp	.+218    	; 0x437c <__stack+0x327d>
	else if (__tmp > 65535)
    42a2:	ce 01       	movw	r24, r28
    42a4:	8b 54       	subi	r24, 0x4B	; 75
    42a6:	9f 4f       	sbci	r25, 0xFF	; 255
    42a8:	20 e0       	ldi	r18, 0x00	; 0
    42aa:	3f ef       	ldi	r19, 0xFF	; 255
    42ac:	4f e7       	ldi	r20, 0x7F	; 127
    42ae:	57 e4       	ldi	r21, 0x47	; 71
    42b0:	fc 01       	movw	r30, r24
    42b2:	60 81       	ld	r22, Z
    42b4:	71 81       	ldd	r23, Z+1	; 0x01
    42b6:	82 81       	ldd	r24, Z+2	; 0x02
    42b8:	93 81       	ldd	r25, Z+3	; 0x03
    42ba:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    42be:	18 16       	cp	r1, r24
    42c0:	0c f0       	brlt	.+2      	; 0x42c4 <__stack+0x31c5>
    42c2:	4a c0       	rjmp	.+148    	; 0x4358 <__stack+0x3259>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    42c4:	ce 01       	movw	r24, r28
    42c6:	8b 56       	subi	r24, 0x6B	; 107
    42c8:	9f 4f       	sbci	r25, 0xFF	; 255
    42ca:	20 e0       	ldi	r18, 0x00	; 0
    42cc:	30 e0       	ldi	r19, 0x00	; 0
    42ce:	40 e2       	ldi	r20, 0x20	; 32
    42d0:	51 e4       	ldi	r21, 0x41	; 65
    42d2:	fc 01       	movw	r30, r24
    42d4:	60 81       	ld	r22, Z
    42d6:	71 81       	ldd	r23, Z+1	; 0x01
    42d8:	82 81       	ldd	r24, Z+2	; 0x02
    42da:	93 81       	ldd	r25, Z+3	; 0x03
    42dc:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    42e0:	dc 01       	movw	r26, r24
    42e2:	cb 01       	movw	r24, r22
    42e4:	8e 01       	movw	r16, r28
    42e6:	07 54       	subi	r16, 0x47	; 71
    42e8:	1f 4f       	sbci	r17, 0xFF	; 255
    42ea:	bc 01       	movw	r22, r24
    42ec:	cd 01       	movw	r24, r26
    42ee:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    42f2:	dc 01       	movw	r26, r24
    42f4:	cb 01       	movw	r24, r22
    42f6:	f8 01       	movw	r30, r16
    42f8:	91 83       	std	Z+1, r25	; 0x01
    42fa:	80 83       	st	Z, r24
    42fc:	24 c0       	rjmp	.+72     	; 0x4346 <__stack+0x3247>
    42fe:	ce 01       	movw	r24, r28
    4300:	85 54       	subi	r24, 0x45	; 69
    4302:	9f 4f       	sbci	r25, 0xFF	; 255
    4304:	20 e9       	ldi	r18, 0x90	; 144
    4306:	31 e0       	ldi	r19, 0x01	; 1
    4308:	fc 01       	movw	r30, r24
    430a:	31 83       	std	Z+1, r19	; 0x01
    430c:	20 83       	st	Z, r18
    430e:	ce 01       	movw	r24, r28
    4310:	85 54       	subi	r24, 0x45	; 69
    4312:	9f 4f       	sbci	r25, 0xFF	; 255
    4314:	fc 01       	movw	r30, r24
    4316:	80 81       	ld	r24, Z
    4318:	91 81       	ldd	r25, Z+1	; 0x01
    431a:	01 97       	sbiw	r24, 0x01	; 1
    431c:	f1 f7       	brne	.-4      	; 0x431a <__stack+0x321b>
    431e:	9e 01       	movw	r18, r28
    4320:	25 54       	subi	r18, 0x45	; 69
    4322:	3f 4f       	sbci	r19, 0xFF	; 255
    4324:	f9 01       	movw	r30, r18
    4326:	91 83       	std	Z+1, r25	; 0x01
    4328:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    432a:	ce 01       	movw	r24, r28
    432c:	87 54       	subi	r24, 0x47	; 71
    432e:	9f 4f       	sbci	r25, 0xFF	; 255
    4330:	9e 01       	movw	r18, r28
    4332:	27 54       	subi	r18, 0x47	; 71
    4334:	3f 4f       	sbci	r19, 0xFF	; 255
    4336:	f9 01       	movw	r30, r18
    4338:	20 81       	ld	r18, Z
    433a:	31 81       	ldd	r19, Z+1	; 0x01
    433c:	21 50       	subi	r18, 0x01	; 1
    433e:	31 09       	sbc	r19, r1
    4340:	fc 01       	movw	r30, r24
    4342:	31 83       	std	Z+1, r19	; 0x01
    4344:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4346:	ce 01       	movw	r24, r28
    4348:	87 54       	subi	r24, 0x47	; 71
    434a:	9f 4f       	sbci	r25, 0xFF	; 255
    434c:	fc 01       	movw	r30, r24
    434e:	80 81       	ld	r24, Z
    4350:	91 81       	ldd	r25, Z+1	; 0x01
    4352:	89 2b       	or	r24, r25
    4354:	a1 f6       	brne	.-88     	; 0x42fe <__stack+0x31ff>
    4356:	2c c0       	rjmp	.+88     	; 0x43b0 <__stack+0x32b1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4358:	8e 01       	movw	r16, r28
    435a:	07 54       	subi	r16, 0x47	; 71
    435c:	1f 4f       	sbci	r17, 0xFF	; 255
    435e:	ce 01       	movw	r24, r28
    4360:	8b 54       	subi	r24, 0x4B	; 75
    4362:	9f 4f       	sbci	r25, 0xFF	; 255
    4364:	fc 01       	movw	r30, r24
    4366:	60 81       	ld	r22, Z
    4368:	71 81       	ldd	r23, Z+1	; 0x01
    436a:	82 81       	ldd	r24, Z+2	; 0x02
    436c:	93 81       	ldd	r25, Z+3	; 0x03
    436e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    4372:	dc 01       	movw	r26, r24
    4374:	cb 01       	movw	r24, r22
    4376:	f8 01       	movw	r30, r16
    4378:	91 83       	std	Z+1, r25	; 0x01
    437a:	80 83       	st	Z, r24
    437c:	ce 01       	movw	r24, r28
    437e:	83 54       	subi	r24, 0x43	; 67
    4380:	9f 4f       	sbci	r25, 0xFF	; 255
    4382:	9e 01       	movw	r18, r28
    4384:	27 54       	subi	r18, 0x47	; 71
    4386:	3f 4f       	sbci	r19, 0xFF	; 255
    4388:	f9 01       	movw	r30, r18
    438a:	20 81       	ld	r18, Z
    438c:	31 81       	ldd	r19, Z+1	; 0x01
    438e:	fc 01       	movw	r30, r24
    4390:	31 83       	std	Z+1, r19	; 0x01
    4392:	20 83       	st	Z, r18
    4394:	ce 01       	movw	r24, r28
    4396:	83 54       	subi	r24, 0x43	; 67
    4398:	9f 4f       	sbci	r25, 0xFF	; 255
    439a:	fc 01       	movw	r30, r24
    439c:	80 81       	ld	r24, Z
    439e:	91 81       	ldd	r25, Z+1	; 0x01
    43a0:	01 97       	sbiw	r24, 0x01	; 1
    43a2:	f1 f7       	brne	.-4      	; 0x43a0 <__stack+0x32a1>
    43a4:	9e 01       	movw	r18, r28
    43a6:	23 54       	subi	r18, 0x43	; 67
    43a8:	3f 4f       	sbci	r19, 0xFF	; 255
    43aa:	f9 01       	movw	r30, r18
    43ac:	91 83       	std	Z+1, r25	; 0x01
    43ae:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F520 T80\n");
    43b0:	8f e9       	ldi	r24, 0x9F	; 159
    43b2:	92 e0       	ldi	r25, 0x02	; 2
    43b4:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    43b8:	9e 01       	movw	r18, r28
    43ba:	27 56       	subi	r18, 0x67	; 103
    43bc:	3f 4f       	sbci	r19, 0xFF	; 255
    43be:	80 e0       	ldi	r24, 0x00	; 0
    43c0:	90 e0       	ldi	r25, 0x00	; 0
    43c2:	a6 e1       	ldi	r26, 0x16	; 22
    43c4:	b3 e4       	ldi	r27, 0x43	; 67
    43c6:	f9 01       	movw	r30, r18
    43c8:	80 83       	st	Z, r24
    43ca:	91 83       	std	Z+1, r25	; 0x01
    43cc:	a2 83       	std	Z+2, r26	; 0x02
    43ce:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    43d0:	8e 01       	movw	r16, r28
    43d2:	05 55       	subi	r16, 0x55	; 85
    43d4:	1f 4f       	sbci	r17, 0xFF	; 255
    43d6:	ce 01       	movw	r24, r28
    43d8:	87 56       	subi	r24, 0x67	; 103
    43da:	9f 4f       	sbci	r25, 0xFF	; 255
    43dc:	20 e0       	ldi	r18, 0x00	; 0
    43de:	30 e0       	ldi	r19, 0x00	; 0
    43e0:	4a e7       	ldi	r20, 0x7A	; 122
    43e2:	55 e4       	ldi	r21, 0x45	; 69
    43e4:	fc 01       	movw	r30, r24
    43e6:	60 81       	ld	r22, Z
    43e8:	71 81       	ldd	r23, Z+1	; 0x01
    43ea:	82 81       	ldd	r24, Z+2	; 0x02
    43ec:	93 81       	ldd	r25, Z+3	; 0x03
    43ee:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    43f2:	dc 01       	movw	r26, r24
    43f4:	cb 01       	movw	r24, r22
    43f6:	f8 01       	movw	r30, r16
    43f8:	80 83       	st	Z, r24
    43fa:	91 83       	std	Z+1, r25	; 0x01
    43fc:	a2 83       	std	Z+2, r26	; 0x02
    43fe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4400:	ce 01       	movw	r24, r28
    4402:	85 55       	subi	r24, 0x55	; 85
    4404:	9f 4f       	sbci	r25, 0xFF	; 255
    4406:	20 e0       	ldi	r18, 0x00	; 0
    4408:	30 e0       	ldi	r19, 0x00	; 0
    440a:	40 e8       	ldi	r20, 0x80	; 128
    440c:	5f e3       	ldi	r21, 0x3F	; 63
    440e:	fc 01       	movw	r30, r24
    4410:	60 81       	ld	r22, Z
    4412:	71 81       	ldd	r23, Z+1	; 0x01
    4414:	82 81       	ldd	r24, Z+2	; 0x02
    4416:	93 81       	ldd	r25, Z+3	; 0x03
    4418:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    441c:	88 23       	and	r24, r24
    441e:	4c f4       	brge	.+18     	; 0x4432 <__stack+0x3333>
		__ticks = 1;
    4420:	ce 01       	movw	r24, r28
    4422:	81 55       	subi	r24, 0x51	; 81
    4424:	9f 4f       	sbci	r25, 0xFF	; 255
    4426:	21 e0       	ldi	r18, 0x01	; 1
    4428:	30 e0       	ldi	r19, 0x00	; 0
    442a:	fc 01       	movw	r30, r24
    442c:	31 83       	std	Z+1, r19	; 0x01
    442e:	20 83       	st	Z, r18
    4430:	6d c0       	rjmp	.+218    	; 0x450c <__stack+0x340d>
	else if (__tmp > 65535)
    4432:	ce 01       	movw	r24, r28
    4434:	85 55       	subi	r24, 0x55	; 85
    4436:	9f 4f       	sbci	r25, 0xFF	; 255
    4438:	20 e0       	ldi	r18, 0x00	; 0
    443a:	3f ef       	ldi	r19, 0xFF	; 255
    443c:	4f e7       	ldi	r20, 0x7F	; 127
    443e:	57 e4       	ldi	r21, 0x47	; 71
    4440:	fc 01       	movw	r30, r24
    4442:	60 81       	ld	r22, Z
    4444:	71 81       	ldd	r23, Z+1	; 0x01
    4446:	82 81       	ldd	r24, Z+2	; 0x02
    4448:	93 81       	ldd	r25, Z+3	; 0x03
    444a:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    444e:	18 16       	cp	r1, r24
    4450:	0c f0       	brlt	.+2      	; 0x4454 <__stack+0x3355>
    4452:	4a c0       	rjmp	.+148    	; 0x44e8 <__stack+0x33e9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4454:	ce 01       	movw	r24, r28
    4456:	87 56       	subi	r24, 0x67	; 103
    4458:	9f 4f       	sbci	r25, 0xFF	; 255
    445a:	20 e0       	ldi	r18, 0x00	; 0
    445c:	30 e0       	ldi	r19, 0x00	; 0
    445e:	40 e2       	ldi	r20, 0x20	; 32
    4460:	51 e4       	ldi	r21, 0x41	; 65
    4462:	fc 01       	movw	r30, r24
    4464:	60 81       	ld	r22, Z
    4466:	71 81       	ldd	r23, Z+1	; 0x01
    4468:	82 81       	ldd	r24, Z+2	; 0x02
    446a:	93 81       	ldd	r25, Z+3	; 0x03
    446c:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    4470:	dc 01       	movw	r26, r24
    4472:	cb 01       	movw	r24, r22
    4474:	8e 01       	movw	r16, r28
    4476:	01 55       	subi	r16, 0x51	; 81
    4478:	1f 4f       	sbci	r17, 0xFF	; 255
    447a:	bc 01       	movw	r22, r24
    447c:	cd 01       	movw	r24, r26
    447e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    4482:	dc 01       	movw	r26, r24
    4484:	cb 01       	movw	r24, r22
    4486:	f8 01       	movw	r30, r16
    4488:	91 83       	std	Z+1, r25	; 0x01
    448a:	80 83       	st	Z, r24
    448c:	24 c0       	rjmp	.+72     	; 0x44d6 <__stack+0x33d7>
    448e:	ce 01       	movw	r24, r28
    4490:	8f 54       	subi	r24, 0x4F	; 79
    4492:	9f 4f       	sbci	r25, 0xFF	; 255
    4494:	20 e9       	ldi	r18, 0x90	; 144
    4496:	31 e0       	ldi	r19, 0x01	; 1
    4498:	fc 01       	movw	r30, r24
    449a:	31 83       	std	Z+1, r19	; 0x01
    449c:	20 83       	st	Z, r18
    449e:	ce 01       	movw	r24, r28
    44a0:	8f 54       	subi	r24, 0x4F	; 79
    44a2:	9f 4f       	sbci	r25, 0xFF	; 255
    44a4:	fc 01       	movw	r30, r24
    44a6:	80 81       	ld	r24, Z
    44a8:	91 81       	ldd	r25, Z+1	; 0x01
    44aa:	01 97       	sbiw	r24, 0x01	; 1
    44ac:	f1 f7       	brne	.-4      	; 0x44aa <__stack+0x33ab>
    44ae:	9e 01       	movw	r18, r28
    44b0:	2f 54       	subi	r18, 0x4F	; 79
    44b2:	3f 4f       	sbci	r19, 0xFF	; 255
    44b4:	f9 01       	movw	r30, r18
    44b6:	91 83       	std	Z+1, r25	; 0x01
    44b8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    44ba:	ce 01       	movw	r24, r28
    44bc:	81 55       	subi	r24, 0x51	; 81
    44be:	9f 4f       	sbci	r25, 0xFF	; 255
    44c0:	9e 01       	movw	r18, r28
    44c2:	21 55       	subi	r18, 0x51	; 81
    44c4:	3f 4f       	sbci	r19, 0xFF	; 255
    44c6:	f9 01       	movw	r30, r18
    44c8:	20 81       	ld	r18, Z
    44ca:	31 81       	ldd	r19, Z+1	; 0x01
    44cc:	21 50       	subi	r18, 0x01	; 1
    44ce:	31 09       	sbc	r19, r1
    44d0:	fc 01       	movw	r30, r24
    44d2:	31 83       	std	Z+1, r19	; 0x01
    44d4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    44d6:	ce 01       	movw	r24, r28
    44d8:	81 55       	subi	r24, 0x51	; 81
    44da:	9f 4f       	sbci	r25, 0xFF	; 255
    44dc:	fc 01       	movw	r30, r24
    44de:	80 81       	ld	r24, Z
    44e0:	91 81       	ldd	r25, Z+1	; 0x01
    44e2:	89 2b       	or	r24, r25
    44e4:	a1 f6       	brne	.-88     	; 0x448e <__stack+0x338f>
    44e6:	2c c0       	rjmp	.+88     	; 0x4540 <__stack+0x3441>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    44e8:	8e 01       	movw	r16, r28
    44ea:	01 55       	subi	r16, 0x51	; 81
    44ec:	1f 4f       	sbci	r17, 0xFF	; 255
    44ee:	ce 01       	movw	r24, r28
    44f0:	85 55       	subi	r24, 0x55	; 85
    44f2:	9f 4f       	sbci	r25, 0xFF	; 255
    44f4:	fc 01       	movw	r30, r24
    44f6:	60 81       	ld	r22, Z
    44f8:	71 81       	ldd	r23, Z+1	; 0x01
    44fa:	82 81       	ldd	r24, Z+2	; 0x02
    44fc:	93 81       	ldd	r25, Z+3	; 0x03
    44fe:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    4502:	dc 01       	movw	r26, r24
    4504:	cb 01       	movw	r24, r22
    4506:	f8 01       	movw	r30, r16
    4508:	91 83       	std	Z+1, r25	; 0x01
    450a:	80 83       	st	Z, r24
    450c:	ce 01       	movw	r24, r28
    450e:	8d 54       	subi	r24, 0x4D	; 77
    4510:	9f 4f       	sbci	r25, 0xFF	; 255
    4512:	9e 01       	movw	r18, r28
    4514:	21 55       	subi	r18, 0x51	; 81
    4516:	3f 4f       	sbci	r19, 0xFF	; 255
    4518:	f9 01       	movw	r30, r18
    451a:	20 81       	ld	r18, Z
    451c:	31 81       	ldd	r19, Z+1	; 0x01
    451e:	fc 01       	movw	r30, r24
    4520:	31 83       	std	Z+1, r19	; 0x01
    4522:	20 83       	st	Z, r18
    4524:	ce 01       	movw	r24, r28
    4526:	8d 54       	subi	r24, 0x4D	; 77
    4528:	9f 4f       	sbci	r25, 0xFF	; 255
    452a:	fc 01       	movw	r30, r24
    452c:	80 81       	ld	r24, Z
    452e:	91 81       	ldd	r25, Z+1	; 0x01
    4530:	01 97       	sbiw	r24, 0x01	; 1
    4532:	f1 f7       	brne	.-4      	; 0x4530 <__stack+0x3431>
    4534:	9e 01       	movw	r18, r28
    4536:	2d 54       	subi	r18, 0x4D	; 77
    4538:	3f 4f       	sbci	r19, 0xFF	; 255
    453a:	f9 01       	movw	r30, r18
    453c:	91 83       	std	Z+1, r25	; 0x01
    453e:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F580 T80\n");
    4540:	8f ea       	ldi	r24, 0xAF	; 175
    4542:	92 e0       	ldi	r25, 0x02	; 2
    4544:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    4548:	9e 01       	movw	r18, r28
    454a:	23 56       	subi	r18, 0x63	; 99
    454c:	3f 4f       	sbci	r19, 0xFF	; 255
    454e:	80 e0       	ldi	r24, 0x00	; 0
    4550:	90 e0       	ldi	r25, 0x00	; 0
    4552:	a6 e1       	ldi	r26, 0x16	; 22
    4554:	b3 e4       	ldi	r27, 0x43	; 67
    4556:	f9 01       	movw	r30, r18
    4558:	80 83       	st	Z, r24
    455a:	91 83       	std	Z+1, r25	; 0x01
    455c:	a2 83       	std	Z+2, r26	; 0x02
    455e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4560:	8e 01       	movw	r16, r28
    4562:	0f 55       	subi	r16, 0x5F	; 95
    4564:	1f 4f       	sbci	r17, 0xFF	; 255
    4566:	ce 01       	movw	r24, r28
    4568:	83 56       	subi	r24, 0x63	; 99
    456a:	9f 4f       	sbci	r25, 0xFF	; 255
    456c:	20 e0       	ldi	r18, 0x00	; 0
    456e:	30 e0       	ldi	r19, 0x00	; 0
    4570:	4a e7       	ldi	r20, 0x7A	; 122
    4572:	55 e4       	ldi	r21, 0x45	; 69
    4574:	fc 01       	movw	r30, r24
    4576:	60 81       	ld	r22, Z
    4578:	71 81       	ldd	r23, Z+1	; 0x01
    457a:	82 81       	ldd	r24, Z+2	; 0x02
    457c:	93 81       	ldd	r25, Z+3	; 0x03
    457e:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    4582:	dc 01       	movw	r26, r24
    4584:	cb 01       	movw	r24, r22
    4586:	f8 01       	movw	r30, r16
    4588:	80 83       	st	Z, r24
    458a:	91 83       	std	Z+1, r25	; 0x01
    458c:	a2 83       	std	Z+2, r26	; 0x02
    458e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4590:	ce 01       	movw	r24, r28
    4592:	8f 55       	subi	r24, 0x5F	; 95
    4594:	9f 4f       	sbci	r25, 0xFF	; 255
    4596:	20 e0       	ldi	r18, 0x00	; 0
    4598:	30 e0       	ldi	r19, 0x00	; 0
    459a:	40 e8       	ldi	r20, 0x80	; 128
    459c:	5f e3       	ldi	r21, 0x3F	; 63
    459e:	fc 01       	movw	r30, r24
    45a0:	60 81       	ld	r22, Z
    45a2:	71 81       	ldd	r23, Z+1	; 0x01
    45a4:	82 81       	ldd	r24, Z+2	; 0x02
    45a6:	93 81       	ldd	r25, Z+3	; 0x03
    45a8:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    45ac:	88 23       	and	r24, r24
    45ae:	4c f4       	brge	.+18     	; 0x45c2 <__stack+0x34c3>
		__ticks = 1;
    45b0:	ce 01       	movw	r24, r28
    45b2:	8b 55       	subi	r24, 0x5B	; 91
    45b4:	9f 4f       	sbci	r25, 0xFF	; 255
    45b6:	21 e0       	ldi	r18, 0x01	; 1
    45b8:	30 e0       	ldi	r19, 0x00	; 0
    45ba:	fc 01       	movw	r30, r24
    45bc:	31 83       	std	Z+1, r19	; 0x01
    45be:	20 83       	st	Z, r18
    45c0:	6d c0       	rjmp	.+218    	; 0x469c <__stack+0x359d>
	else if (__tmp > 65535)
    45c2:	ce 01       	movw	r24, r28
    45c4:	8f 55       	subi	r24, 0x5F	; 95
    45c6:	9f 4f       	sbci	r25, 0xFF	; 255
    45c8:	20 e0       	ldi	r18, 0x00	; 0
    45ca:	3f ef       	ldi	r19, 0xFF	; 255
    45cc:	4f e7       	ldi	r20, 0x7F	; 127
    45ce:	57 e4       	ldi	r21, 0x47	; 71
    45d0:	fc 01       	movw	r30, r24
    45d2:	60 81       	ld	r22, Z
    45d4:	71 81       	ldd	r23, Z+1	; 0x01
    45d6:	82 81       	ldd	r24, Z+2	; 0x02
    45d8:	93 81       	ldd	r25, Z+3	; 0x03
    45da:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    45de:	18 16       	cp	r1, r24
    45e0:	0c f0       	brlt	.+2      	; 0x45e4 <__stack+0x34e5>
    45e2:	4a c0       	rjmp	.+148    	; 0x4678 <__stack+0x3579>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    45e4:	ce 01       	movw	r24, r28
    45e6:	83 56       	subi	r24, 0x63	; 99
    45e8:	9f 4f       	sbci	r25, 0xFF	; 255
    45ea:	20 e0       	ldi	r18, 0x00	; 0
    45ec:	30 e0       	ldi	r19, 0x00	; 0
    45ee:	40 e2       	ldi	r20, 0x20	; 32
    45f0:	51 e4       	ldi	r21, 0x41	; 65
    45f2:	fc 01       	movw	r30, r24
    45f4:	60 81       	ld	r22, Z
    45f6:	71 81       	ldd	r23, Z+1	; 0x01
    45f8:	82 81       	ldd	r24, Z+2	; 0x02
    45fa:	93 81       	ldd	r25, Z+3	; 0x03
    45fc:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    4600:	dc 01       	movw	r26, r24
    4602:	cb 01       	movw	r24, r22
    4604:	8e 01       	movw	r16, r28
    4606:	0b 55       	subi	r16, 0x5B	; 91
    4608:	1f 4f       	sbci	r17, 0xFF	; 255
    460a:	bc 01       	movw	r22, r24
    460c:	cd 01       	movw	r24, r26
    460e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    4612:	dc 01       	movw	r26, r24
    4614:	cb 01       	movw	r24, r22
    4616:	f8 01       	movw	r30, r16
    4618:	91 83       	std	Z+1, r25	; 0x01
    461a:	80 83       	st	Z, r24
    461c:	24 c0       	rjmp	.+72     	; 0x4666 <__stack+0x3567>
    461e:	ce 01       	movw	r24, r28
    4620:	89 55       	subi	r24, 0x59	; 89
    4622:	9f 4f       	sbci	r25, 0xFF	; 255
    4624:	20 e9       	ldi	r18, 0x90	; 144
    4626:	31 e0       	ldi	r19, 0x01	; 1
    4628:	fc 01       	movw	r30, r24
    462a:	31 83       	std	Z+1, r19	; 0x01
    462c:	20 83       	st	Z, r18
    462e:	ce 01       	movw	r24, r28
    4630:	89 55       	subi	r24, 0x59	; 89
    4632:	9f 4f       	sbci	r25, 0xFF	; 255
    4634:	fc 01       	movw	r30, r24
    4636:	80 81       	ld	r24, Z
    4638:	91 81       	ldd	r25, Z+1	; 0x01
    463a:	01 97       	sbiw	r24, 0x01	; 1
    463c:	f1 f7       	brne	.-4      	; 0x463a <__stack+0x353b>
    463e:	9e 01       	movw	r18, r28
    4640:	29 55       	subi	r18, 0x59	; 89
    4642:	3f 4f       	sbci	r19, 0xFF	; 255
    4644:	f9 01       	movw	r30, r18
    4646:	91 83       	std	Z+1, r25	; 0x01
    4648:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    464a:	ce 01       	movw	r24, r28
    464c:	8b 55       	subi	r24, 0x5B	; 91
    464e:	9f 4f       	sbci	r25, 0xFF	; 255
    4650:	9e 01       	movw	r18, r28
    4652:	2b 55       	subi	r18, 0x5B	; 91
    4654:	3f 4f       	sbci	r19, 0xFF	; 255
    4656:	f9 01       	movw	r30, r18
    4658:	20 81       	ld	r18, Z
    465a:	31 81       	ldd	r19, Z+1	; 0x01
    465c:	21 50       	subi	r18, 0x01	; 1
    465e:	31 09       	sbc	r19, r1
    4660:	fc 01       	movw	r30, r24
    4662:	31 83       	std	Z+1, r19	; 0x01
    4664:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4666:	ce 01       	movw	r24, r28
    4668:	8b 55       	subi	r24, 0x5B	; 91
    466a:	9f 4f       	sbci	r25, 0xFF	; 255
    466c:	fc 01       	movw	r30, r24
    466e:	80 81       	ld	r24, Z
    4670:	91 81       	ldd	r25, Z+1	; 0x01
    4672:	89 2b       	or	r24, r25
    4674:	a1 f6       	brne	.-88     	; 0x461e <__stack+0x351f>
    4676:	2c c0       	rjmp	.+88     	; 0x46d0 <__stack+0x35d1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4678:	8e 01       	movw	r16, r28
    467a:	0b 55       	subi	r16, 0x5B	; 91
    467c:	1f 4f       	sbci	r17, 0xFF	; 255
    467e:	ce 01       	movw	r24, r28
    4680:	8f 55       	subi	r24, 0x5F	; 95
    4682:	9f 4f       	sbci	r25, 0xFF	; 255
    4684:	fc 01       	movw	r30, r24
    4686:	60 81       	ld	r22, Z
    4688:	71 81       	ldd	r23, Z+1	; 0x01
    468a:	82 81       	ldd	r24, Z+2	; 0x02
    468c:	93 81       	ldd	r25, Z+3	; 0x03
    468e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    4692:	dc 01       	movw	r26, r24
    4694:	cb 01       	movw	r24, r22
    4696:	f8 01       	movw	r30, r16
    4698:	91 83       	std	Z+1, r25	; 0x01
    469a:	80 83       	st	Z, r24
    469c:	ce 01       	movw	r24, r28
    469e:	87 55       	subi	r24, 0x57	; 87
    46a0:	9f 4f       	sbci	r25, 0xFF	; 255
    46a2:	9e 01       	movw	r18, r28
    46a4:	2b 55       	subi	r18, 0x5B	; 91
    46a6:	3f 4f       	sbci	r19, 0xFF	; 255
    46a8:	f9 01       	movw	r30, r18
    46aa:	20 81       	ld	r18, Z
    46ac:	31 81       	ldd	r19, Z+1	; 0x01
    46ae:	fc 01       	movw	r30, r24
    46b0:	31 83       	std	Z+1, r19	; 0x01
    46b2:	20 83       	st	Z, r18
    46b4:	ce 01       	movw	r24, r28
    46b6:	87 55       	subi	r24, 0x57	; 87
    46b8:	9f 4f       	sbci	r25, 0xFF	; 255
    46ba:	fc 01       	movw	r30, r24
    46bc:	80 81       	ld	r24, Z
    46be:	91 81       	ldd	r25, Z+1	; 0x01
    46c0:	01 97       	sbiw	r24, 0x01	; 1
    46c2:	f1 f7       	brne	.-4      	; 0x46c0 <__stack+0x35c1>
    46c4:	9e 01       	movw	r18, r28
    46c6:	27 55       	subi	r18, 0x57	; 87
    46c8:	3f 4f       	sbci	r19, 0xFF	; 255
    46ca:	f9 01       	movw	r30, r18
    46cc:	91 83       	std	Z+1, r25	; 0x01
    46ce:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F480 T80\n");
    46d0:	8d e2       	ldi	r24, 0x2D	; 45
    46d2:	92 e0       	ldi	r25, 0x02	; 2
    46d4:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
	//_delay_ms(500);
}
    46d8:	00 00       	nop
    46da:	c0 5d       	subi	r28, 0xD0	; 208
    46dc:	dd 4f       	sbci	r29, 0xFD	; 253
    46de:	0f b6       	in	r0, 0x3f	; 63
    46e0:	f8 94       	cli
    46e2:	de bf       	out	0x3e, r29	; 62
    46e4:	0f be       	out	0x3f, r0	; 63
    46e6:	cd bf       	out	0x3d, r28	; 61
    46e8:	df 91       	pop	r29
    46ea:	cf 91       	pop	r28
    46ec:	1f 91       	pop	r17
    46ee:	0f 91       	pop	r16
    46f0:	08 95       	ret

000046f2 <play_short>:
void play_short()
{
    46f2:	0f 93       	push	r16
    46f4:	1f 93       	push	r17
    46f6:	cf 93       	push	r28
    46f8:	df 93       	push	r29
    46fa:	cd b7       	in	r28, 0x3d	; 61
    46fc:	de b7       	in	r29, 0x3e	; 62
    46fe:	c2 56       	subi	r28, 0x62	; 98
    4700:	d1 09       	sbc	r29, r1
    4702:	0f b6       	in	r0, 0x3f	; 63
    4704:	f8 94       	cli
    4706:	de bf       	out	0x3e, r29	; 62
    4708:	0f be       	out	0x3f, r0	; 63
    470a:	cd bf       	out	0x3d, r28	; 61
	to_uARM("M2210 F660 T100\n");
    470c:	87 ec       	ldi	r24, 0xC7	; 199
    470e:	91 e0       	ldi	r25, 0x01	; 1
    4710:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    4714:	80 e0       	ldi	r24, 0x00	; 0
    4716:	90 e0       	ldi	r25, 0x00	; 0
    4718:	a6 e1       	ldi	r26, 0x16	; 22
    471a:	b3 e4       	ldi	r27, 0x43	; 67
    471c:	89 83       	std	Y+1, r24	; 0x01
    471e:	9a 83       	std	Y+2, r25	; 0x02
    4720:	ab 83       	std	Y+3, r26	; 0x03
    4722:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4724:	8e 01       	movw	r16, r28
    4726:	07 5a       	subi	r16, 0xA7	; 167
    4728:	1f 4f       	sbci	r17, 0xFF	; 255
    472a:	20 e0       	ldi	r18, 0x00	; 0
    472c:	30 e0       	ldi	r19, 0x00	; 0
    472e:	4a e7       	ldi	r20, 0x7A	; 122
    4730:	55 e4       	ldi	r21, 0x45	; 69
    4732:	69 81       	ldd	r22, Y+1	; 0x01
    4734:	7a 81       	ldd	r23, Y+2	; 0x02
    4736:	8b 81       	ldd	r24, Y+3	; 0x03
    4738:	9c 81       	ldd	r25, Y+4	; 0x04
    473a:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    473e:	dc 01       	movw	r26, r24
    4740:	cb 01       	movw	r24, r22
    4742:	f8 01       	movw	r30, r16
    4744:	80 83       	st	Z, r24
    4746:	91 83       	std	Z+1, r25	; 0x01
    4748:	a2 83       	std	Z+2, r26	; 0x02
    474a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    474c:	ce 01       	movw	r24, r28
    474e:	87 5a       	subi	r24, 0xA7	; 167
    4750:	9f 4f       	sbci	r25, 0xFF	; 255
    4752:	20 e0       	ldi	r18, 0x00	; 0
    4754:	30 e0       	ldi	r19, 0x00	; 0
    4756:	40 e8       	ldi	r20, 0x80	; 128
    4758:	5f e3       	ldi	r21, 0x3F	; 63
    475a:	fc 01       	movw	r30, r24
    475c:	60 81       	ld	r22, Z
    475e:	71 81       	ldd	r23, Z+1	; 0x01
    4760:	82 81       	ldd	r24, Z+2	; 0x02
    4762:	93 81       	ldd	r25, Z+3	; 0x03
    4764:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    4768:	88 23       	and	r24, r24
    476a:	4c f4       	brge	.+18     	; 0x477e <play_short+0x8c>
		__ticks = 1;
    476c:	ce 01       	movw	r24, r28
    476e:	83 5a       	subi	r24, 0xA3	; 163
    4770:	9f 4f       	sbci	r25, 0xFF	; 255
    4772:	21 e0       	ldi	r18, 0x01	; 1
    4774:	30 e0       	ldi	r19, 0x00	; 0
    4776:	fc 01       	movw	r30, r24
    4778:	31 83       	std	Z+1, r19	; 0x01
    477a:	20 83       	st	Z, r18
    477c:	69 c0       	rjmp	.+210    	; 0x4850 <play_short+0x15e>
	else if (__tmp > 65535)
    477e:	ce 01       	movw	r24, r28
    4780:	87 5a       	subi	r24, 0xA7	; 167
    4782:	9f 4f       	sbci	r25, 0xFF	; 255
    4784:	20 e0       	ldi	r18, 0x00	; 0
    4786:	3f ef       	ldi	r19, 0xFF	; 255
    4788:	4f e7       	ldi	r20, 0x7F	; 127
    478a:	57 e4       	ldi	r21, 0x47	; 71
    478c:	fc 01       	movw	r30, r24
    478e:	60 81       	ld	r22, Z
    4790:	71 81       	ldd	r23, Z+1	; 0x01
    4792:	82 81       	ldd	r24, Z+2	; 0x02
    4794:	93 81       	ldd	r25, Z+3	; 0x03
    4796:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    479a:	18 16       	cp	r1, r24
    479c:	0c f0       	brlt	.+2      	; 0x47a0 <play_short+0xae>
    479e:	46 c0       	rjmp	.+140    	; 0x482c <play_short+0x13a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    47a0:	20 e0       	ldi	r18, 0x00	; 0
    47a2:	30 e0       	ldi	r19, 0x00	; 0
    47a4:	40 e2       	ldi	r20, 0x20	; 32
    47a6:	51 e4       	ldi	r21, 0x41	; 65
    47a8:	69 81       	ldd	r22, Y+1	; 0x01
    47aa:	7a 81       	ldd	r23, Y+2	; 0x02
    47ac:	8b 81       	ldd	r24, Y+3	; 0x03
    47ae:	9c 81       	ldd	r25, Y+4	; 0x04
    47b0:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    47b4:	dc 01       	movw	r26, r24
    47b6:	cb 01       	movw	r24, r22
    47b8:	8e 01       	movw	r16, r28
    47ba:	03 5a       	subi	r16, 0xA3	; 163
    47bc:	1f 4f       	sbci	r17, 0xFF	; 255
    47be:	bc 01       	movw	r22, r24
    47c0:	cd 01       	movw	r24, r26
    47c2:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    47c6:	dc 01       	movw	r26, r24
    47c8:	cb 01       	movw	r24, r22
    47ca:	f8 01       	movw	r30, r16
    47cc:	91 83       	std	Z+1, r25	; 0x01
    47ce:	80 83       	st	Z, r24
    47d0:	24 c0       	rjmp	.+72     	; 0x481a <play_short+0x128>
    47d2:	ce 01       	movw	r24, r28
    47d4:	81 5a       	subi	r24, 0xA1	; 161
    47d6:	9f 4f       	sbci	r25, 0xFF	; 255
    47d8:	20 e9       	ldi	r18, 0x90	; 144
    47da:	31 e0       	ldi	r19, 0x01	; 1
    47dc:	fc 01       	movw	r30, r24
    47de:	31 83       	std	Z+1, r19	; 0x01
    47e0:	20 83       	st	Z, r18
    47e2:	ce 01       	movw	r24, r28
    47e4:	81 5a       	subi	r24, 0xA1	; 161
    47e6:	9f 4f       	sbci	r25, 0xFF	; 255
    47e8:	fc 01       	movw	r30, r24
    47ea:	80 81       	ld	r24, Z
    47ec:	91 81       	ldd	r25, Z+1	; 0x01
    47ee:	01 97       	sbiw	r24, 0x01	; 1
    47f0:	f1 f7       	brne	.-4      	; 0x47ee <play_short+0xfc>
    47f2:	9e 01       	movw	r18, r28
    47f4:	21 5a       	subi	r18, 0xA1	; 161
    47f6:	3f 4f       	sbci	r19, 0xFF	; 255
    47f8:	f9 01       	movw	r30, r18
    47fa:	91 83       	std	Z+1, r25	; 0x01
    47fc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    47fe:	ce 01       	movw	r24, r28
    4800:	83 5a       	subi	r24, 0xA3	; 163
    4802:	9f 4f       	sbci	r25, 0xFF	; 255
    4804:	9e 01       	movw	r18, r28
    4806:	23 5a       	subi	r18, 0xA3	; 163
    4808:	3f 4f       	sbci	r19, 0xFF	; 255
    480a:	f9 01       	movw	r30, r18
    480c:	20 81       	ld	r18, Z
    480e:	31 81       	ldd	r19, Z+1	; 0x01
    4810:	21 50       	subi	r18, 0x01	; 1
    4812:	31 09       	sbc	r19, r1
    4814:	fc 01       	movw	r30, r24
    4816:	31 83       	std	Z+1, r19	; 0x01
    4818:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    481a:	ce 01       	movw	r24, r28
    481c:	83 5a       	subi	r24, 0xA3	; 163
    481e:	9f 4f       	sbci	r25, 0xFF	; 255
    4820:	fc 01       	movw	r30, r24
    4822:	80 81       	ld	r24, Z
    4824:	91 81       	ldd	r25, Z+1	; 0x01
    4826:	89 2b       	or	r24, r25
    4828:	a1 f6       	brne	.-88     	; 0x47d2 <play_short+0xe0>
    482a:	2c c0       	rjmp	.+88     	; 0x4884 <play_short+0x192>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    482c:	8e 01       	movw	r16, r28
    482e:	03 5a       	subi	r16, 0xA3	; 163
    4830:	1f 4f       	sbci	r17, 0xFF	; 255
    4832:	ce 01       	movw	r24, r28
    4834:	87 5a       	subi	r24, 0xA7	; 167
    4836:	9f 4f       	sbci	r25, 0xFF	; 255
    4838:	fc 01       	movw	r30, r24
    483a:	60 81       	ld	r22, Z
    483c:	71 81       	ldd	r23, Z+1	; 0x01
    483e:	82 81       	ldd	r24, Z+2	; 0x02
    4840:	93 81       	ldd	r25, Z+3	; 0x03
    4842:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    4846:	dc 01       	movw	r26, r24
    4848:	cb 01       	movw	r24, r22
    484a:	f8 01       	movw	r30, r16
    484c:	91 83       	std	Z+1, r25	; 0x01
    484e:	80 83       	st	Z, r24
    4850:	ce 01       	movw	r24, r28
    4852:	8f 59       	subi	r24, 0x9F	; 159
    4854:	9f 4f       	sbci	r25, 0xFF	; 255
    4856:	9e 01       	movw	r18, r28
    4858:	23 5a       	subi	r18, 0xA3	; 163
    485a:	3f 4f       	sbci	r19, 0xFF	; 255
    485c:	f9 01       	movw	r30, r18
    485e:	20 81       	ld	r18, Z
    4860:	31 81       	ldd	r19, Z+1	; 0x01
    4862:	fc 01       	movw	r30, r24
    4864:	31 83       	std	Z+1, r19	; 0x01
    4866:	20 83       	st	Z, r18
    4868:	ce 01       	movw	r24, r28
    486a:	8f 59       	subi	r24, 0x9F	; 159
    486c:	9f 4f       	sbci	r25, 0xFF	; 255
    486e:	fc 01       	movw	r30, r24
    4870:	80 81       	ld	r24, Z
    4872:	91 81       	ldd	r25, Z+1	; 0x01
    4874:	01 97       	sbiw	r24, 0x01	; 1
    4876:	f1 f7       	brne	.-4      	; 0x4874 <play_short+0x182>
    4878:	9e 01       	movw	r18, r28
    487a:	2f 59       	subi	r18, 0x9F	; 159
    487c:	3f 4f       	sbci	r19, 0xFF	; 255
    487e:	f9 01       	movw	r30, r18
    4880:	91 83       	std	Z+1, r25	; 0x01
    4882:	80 83       	st	Z, r24
	_delay_ms(150);
	to_uARM("M2210 F660 T100\n");
    4884:	87 ec       	ldi	r24, 0xC7	; 199
    4886:	91 e0       	ldi	r25, 0x01	; 1
    4888:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    488c:	80 e0       	ldi	r24, 0x00	; 0
    488e:	90 e0       	ldi	r25, 0x00	; 0
    4890:	a6 e9       	ldi	r26, 0x96	; 150
    4892:	b3 e4       	ldi	r27, 0x43	; 67
    4894:	8d 83       	std	Y+5, r24	; 0x05
    4896:	9e 83       	std	Y+6, r25	; 0x06
    4898:	af 83       	std	Y+7, r26	; 0x07
    489a:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    489c:	8e 01       	movw	r16, r28
    489e:	01 5b       	subi	r16, 0xB1	; 177
    48a0:	1f 4f       	sbci	r17, 0xFF	; 255
    48a2:	20 e0       	ldi	r18, 0x00	; 0
    48a4:	30 e0       	ldi	r19, 0x00	; 0
    48a6:	4a e7       	ldi	r20, 0x7A	; 122
    48a8:	55 e4       	ldi	r21, 0x45	; 69
    48aa:	6d 81       	ldd	r22, Y+5	; 0x05
    48ac:	7e 81       	ldd	r23, Y+6	; 0x06
    48ae:	8f 81       	ldd	r24, Y+7	; 0x07
    48b0:	98 85       	ldd	r25, Y+8	; 0x08
    48b2:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    48b6:	dc 01       	movw	r26, r24
    48b8:	cb 01       	movw	r24, r22
    48ba:	f8 01       	movw	r30, r16
    48bc:	80 83       	st	Z, r24
    48be:	91 83       	std	Z+1, r25	; 0x01
    48c0:	a2 83       	std	Z+2, r26	; 0x02
    48c2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    48c4:	ce 01       	movw	r24, r28
    48c6:	81 5b       	subi	r24, 0xB1	; 177
    48c8:	9f 4f       	sbci	r25, 0xFF	; 255
    48ca:	20 e0       	ldi	r18, 0x00	; 0
    48cc:	30 e0       	ldi	r19, 0x00	; 0
    48ce:	40 e8       	ldi	r20, 0x80	; 128
    48d0:	5f e3       	ldi	r21, 0x3F	; 63
    48d2:	fc 01       	movw	r30, r24
    48d4:	60 81       	ld	r22, Z
    48d6:	71 81       	ldd	r23, Z+1	; 0x01
    48d8:	82 81       	ldd	r24, Z+2	; 0x02
    48da:	93 81       	ldd	r25, Z+3	; 0x03
    48dc:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    48e0:	88 23       	and	r24, r24
    48e2:	4c f4       	brge	.+18     	; 0x48f6 <play_short+0x204>
		__ticks = 1;
    48e4:	ce 01       	movw	r24, r28
    48e6:	8d 5a       	subi	r24, 0xAD	; 173
    48e8:	9f 4f       	sbci	r25, 0xFF	; 255
    48ea:	21 e0       	ldi	r18, 0x01	; 1
    48ec:	30 e0       	ldi	r19, 0x00	; 0
    48ee:	fc 01       	movw	r30, r24
    48f0:	31 83       	std	Z+1, r19	; 0x01
    48f2:	20 83       	st	Z, r18
    48f4:	69 c0       	rjmp	.+210    	; 0x49c8 <play_short+0x2d6>
	else if (__tmp > 65535)
    48f6:	ce 01       	movw	r24, r28
    48f8:	81 5b       	subi	r24, 0xB1	; 177
    48fa:	9f 4f       	sbci	r25, 0xFF	; 255
    48fc:	20 e0       	ldi	r18, 0x00	; 0
    48fe:	3f ef       	ldi	r19, 0xFF	; 255
    4900:	4f e7       	ldi	r20, 0x7F	; 127
    4902:	57 e4       	ldi	r21, 0x47	; 71
    4904:	fc 01       	movw	r30, r24
    4906:	60 81       	ld	r22, Z
    4908:	71 81       	ldd	r23, Z+1	; 0x01
    490a:	82 81       	ldd	r24, Z+2	; 0x02
    490c:	93 81       	ldd	r25, Z+3	; 0x03
    490e:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    4912:	18 16       	cp	r1, r24
    4914:	0c f0       	brlt	.+2      	; 0x4918 <play_short+0x226>
    4916:	46 c0       	rjmp	.+140    	; 0x49a4 <play_short+0x2b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4918:	20 e0       	ldi	r18, 0x00	; 0
    491a:	30 e0       	ldi	r19, 0x00	; 0
    491c:	40 e2       	ldi	r20, 0x20	; 32
    491e:	51 e4       	ldi	r21, 0x41	; 65
    4920:	6d 81       	ldd	r22, Y+5	; 0x05
    4922:	7e 81       	ldd	r23, Y+6	; 0x06
    4924:	8f 81       	ldd	r24, Y+7	; 0x07
    4926:	98 85       	ldd	r25, Y+8	; 0x08
    4928:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    492c:	dc 01       	movw	r26, r24
    492e:	cb 01       	movw	r24, r22
    4930:	8e 01       	movw	r16, r28
    4932:	0d 5a       	subi	r16, 0xAD	; 173
    4934:	1f 4f       	sbci	r17, 0xFF	; 255
    4936:	bc 01       	movw	r22, r24
    4938:	cd 01       	movw	r24, r26
    493a:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    493e:	dc 01       	movw	r26, r24
    4940:	cb 01       	movw	r24, r22
    4942:	f8 01       	movw	r30, r16
    4944:	91 83       	std	Z+1, r25	; 0x01
    4946:	80 83       	st	Z, r24
    4948:	24 c0       	rjmp	.+72     	; 0x4992 <play_short+0x2a0>
    494a:	ce 01       	movw	r24, r28
    494c:	8b 5a       	subi	r24, 0xAB	; 171
    494e:	9f 4f       	sbci	r25, 0xFF	; 255
    4950:	20 e9       	ldi	r18, 0x90	; 144
    4952:	31 e0       	ldi	r19, 0x01	; 1
    4954:	fc 01       	movw	r30, r24
    4956:	31 83       	std	Z+1, r19	; 0x01
    4958:	20 83       	st	Z, r18
    495a:	ce 01       	movw	r24, r28
    495c:	8b 5a       	subi	r24, 0xAB	; 171
    495e:	9f 4f       	sbci	r25, 0xFF	; 255
    4960:	fc 01       	movw	r30, r24
    4962:	80 81       	ld	r24, Z
    4964:	91 81       	ldd	r25, Z+1	; 0x01
    4966:	01 97       	sbiw	r24, 0x01	; 1
    4968:	f1 f7       	brne	.-4      	; 0x4966 <play_short+0x274>
    496a:	9e 01       	movw	r18, r28
    496c:	2b 5a       	subi	r18, 0xAB	; 171
    496e:	3f 4f       	sbci	r19, 0xFF	; 255
    4970:	f9 01       	movw	r30, r18
    4972:	91 83       	std	Z+1, r25	; 0x01
    4974:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4976:	ce 01       	movw	r24, r28
    4978:	8d 5a       	subi	r24, 0xAD	; 173
    497a:	9f 4f       	sbci	r25, 0xFF	; 255
    497c:	9e 01       	movw	r18, r28
    497e:	2d 5a       	subi	r18, 0xAD	; 173
    4980:	3f 4f       	sbci	r19, 0xFF	; 255
    4982:	f9 01       	movw	r30, r18
    4984:	20 81       	ld	r18, Z
    4986:	31 81       	ldd	r19, Z+1	; 0x01
    4988:	21 50       	subi	r18, 0x01	; 1
    498a:	31 09       	sbc	r19, r1
    498c:	fc 01       	movw	r30, r24
    498e:	31 83       	std	Z+1, r19	; 0x01
    4990:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4992:	ce 01       	movw	r24, r28
    4994:	8d 5a       	subi	r24, 0xAD	; 173
    4996:	9f 4f       	sbci	r25, 0xFF	; 255
    4998:	fc 01       	movw	r30, r24
    499a:	80 81       	ld	r24, Z
    499c:	91 81       	ldd	r25, Z+1	; 0x01
    499e:	89 2b       	or	r24, r25
    49a0:	a1 f6       	brne	.-88     	; 0x494a <play_short+0x258>
    49a2:	2c c0       	rjmp	.+88     	; 0x49fc <play_short+0x30a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    49a4:	8e 01       	movw	r16, r28
    49a6:	0d 5a       	subi	r16, 0xAD	; 173
    49a8:	1f 4f       	sbci	r17, 0xFF	; 255
    49aa:	ce 01       	movw	r24, r28
    49ac:	81 5b       	subi	r24, 0xB1	; 177
    49ae:	9f 4f       	sbci	r25, 0xFF	; 255
    49b0:	fc 01       	movw	r30, r24
    49b2:	60 81       	ld	r22, Z
    49b4:	71 81       	ldd	r23, Z+1	; 0x01
    49b6:	82 81       	ldd	r24, Z+2	; 0x02
    49b8:	93 81       	ldd	r25, Z+3	; 0x03
    49ba:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    49be:	dc 01       	movw	r26, r24
    49c0:	cb 01       	movw	r24, r22
    49c2:	f8 01       	movw	r30, r16
    49c4:	91 83       	std	Z+1, r25	; 0x01
    49c6:	80 83       	st	Z, r24
    49c8:	ce 01       	movw	r24, r28
    49ca:	89 5a       	subi	r24, 0xA9	; 169
    49cc:	9f 4f       	sbci	r25, 0xFF	; 255
    49ce:	9e 01       	movw	r18, r28
    49d0:	2d 5a       	subi	r18, 0xAD	; 173
    49d2:	3f 4f       	sbci	r19, 0xFF	; 255
    49d4:	f9 01       	movw	r30, r18
    49d6:	20 81       	ld	r18, Z
    49d8:	31 81       	ldd	r19, Z+1	; 0x01
    49da:	fc 01       	movw	r30, r24
    49dc:	31 83       	std	Z+1, r19	; 0x01
    49de:	20 83       	st	Z, r18
    49e0:	ce 01       	movw	r24, r28
    49e2:	89 5a       	subi	r24, 0xA9	; 169
    49e4:	9f 4f       	sbci	r25, 0xFF	; 255
    49e6:	fc 01       	movw	r30, r24
    49e8:	80 81       	ld	r24, Z
    49ea:	91 81       	ldd	r25, Z+1	; 0x01
    49ec:	01 97       	sbiw	r24, 0x01	; 1
    49ee:	f1 f7       	brne	.-4      	; 0x49ec <play_short+0x2fa>
    49f0:	9e 01       	movw	r18, r28
    49f2:	29 5a       	subi	r18, 0xA9	; 169
    49f4:	3f 4f       	sbci	r19, 0xFF	; 255
    49f6:	f9 01       	movw	r30, r18
    49f8:	91 83       	std	Z+1, r25	; 0x01
    49fa:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F660 T100\n");
    49fc:	87 ec       	ldi	r24, 0xC7	; 199
    49fe:	91 e0       	ldi	r25, 0x01	; 1
    4a00:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    4a04:	80 e0       	ldi	r24, 0x00	; 0
    4a06:	90 e0       	ldi	r25, 0x00	; 0
    4a08:	a6 e9       	ldi	r26, 0x96	; 150
    4a0a:	b3 e4       	ldi	r27, 0x43	; 67
    4a0c:	89 87       	std	Y+9, r24	; 0x09
    4a0e:	9a 87       	std	Y+10, r25	; 0x0a
    4a10:	ab 87       	std	Y+11, r26	; 0x0b
    4a12:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4a14:	8e 01       	movw	r16, r28
    4a16:	0b 5b       	subi	r16, 0xBB	; 187
    4a18:	1f 4f       	sbci	r17, 0xFF	; 255
    4a1a:	20 e0       	ldi	r18, 0x00	; 0
    4a1c:	30 e0       	ldi	r19, 0x00	; 0
    4a1e:	4a e7       	ldi	r20, 0x7A	; 122
    4a20:	55 e4       	ldi	r21, 0x45	; 69
    4a22:	69 85       	ldd	r22, Y+9	; 0x09
    4a24:	7a 85       	ldd	r23, Y+10	; 0x0a
    4a26:	8b 85       	ldd	r24, Y+11	; 0x0b
    4a28:	9c 85       	ldd	r25, Y+12	; 0x0c
    4a2a:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    4a2e:	dc 01       	movw	r26, r24
    4a30:	cb 01       	movw	r24, r22
    4a32:	f8 01       	movw	r30, r16
    4a34:	80 83       	st	Z, r24
    4a36:	91 83       	std	Z+1, r25	; 0x01
    4a38:	a2 83       	std	Z+2, r26	; 0x02
    4a3a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4a3c:	ce 01       	movw	r24, r28
    4a3e:	8b 5b       	subi	r24, 0xBB	; 187
    4a40:	9f 4f       	sbci	r25, 0xFF	; 255
    4a42:	20 e0       	ldi	r18, 0x00	; 0
    4a44:	30 e0       	ldi	r19, 0x00	; 0
    4a46:	40 e8       	ldi	r20, 0x80	; 128
    4a48:	5f e3       	ldi	r21, 0x3F	; 63
    4a4a:	fc 01       	movw	r30, r24
    4a4c:	60 81       	ld	r22, Z
    4a4e:	71 81       	ldd	r23, Z+1	; 0x01
    4a50:	82 81       	ldd	r24, Z+2	; 0x02
    4a52:	93 81       	ldd	r25, Z+3	; 0x03
    4a54:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    4a58:	88 23       	and	r24, r24
    4a5a:	4c f4       	brge	.+18     	; 0x4a6e <play_short+0x37c>
		__ticks = 1;
    4a5c:	ce 01       	movw	r24, r28
    4a5e:	87 5b       	subi	r24, 0xB7	; 183
    4a60:	9f 4f       	sbci	r25, 0xFF	; 255
    4a62:	21 e0       	ldi	r18, 0x01	; 1
    4a64:	30 e0       	ldi	r19, 0x00	; 0
    4a66:	fc 01       	movw	r30, r24
    4a68:	31 83       	std	Z+1, r19	; 0x01
    4a6a:	20 83       	st	Z, r18
    4a6c:	69 c0       	rjmp	.+210    	; 0x4b40 <play_short+0x44e>
	else if (__tmp > 65535)
    4a6e:	ce 01       	movw	r24, r28
    4a70:	8b 5b       	subi	r24, 0xBB	; 187
    4a72:	9f 4f       	sbci	r25, 0xFF	; 255
    4a74:	20 e0       	ldi	r18, 0x00	; 0
    4a76:	3f ef       	ldi	r19, 0xFF	; 255
    4a78:	4f e7       	ldi	r20, 0x7F	; 127
    4a7a:	57 e4       	ldi	r21, 0x47	; 71
    4a7c:	fc 01       	movw	r30, r24
    4a7e:	60 81       	ld	r22, Z
    4a80:	71 81       	ldd	r23, Z+1	; 0x01
    4a82:	82 81       	ldd	r24, Z+2	; 0x02
    4a84:	93 81       	ldd	r25, Z+3	; 0x03
    4a86:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    4a8a:	18 16       	cp	r1, r24
    4a8c:	0c f0       	brlt	.+2      	; 0x4a90 <play_short+0x39e>
    4a8e:	46 c0       	rjmp	.+140    	; 0x4b1c <play_short+0x42a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4a90:	20 e0       	ldi	r18, 0x00	; 0
    4a92:	30 e0       	ldi	r19, 0x00	; 0
    4a94:	40 e2       	ldi	r20, 0x20	; 32
    4a96:	51 e4       	ldi	r21, 0x41	; 65
    4a98:	69 85       	ldd	r22, Y+9	; 0x09
    4a9a:	7a 85       	ldd	r23, Y+10	; 0x0a
    4a9c:	8b 85       	ldd	r24, Y+11	; 0x0b
    4a9e:	9c 85       	ldd	r25, Y+12	; 0x0c
    4aa0:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    4aa4:	dc 01       	movw	r26, r24
    4aa6:	cb 01       	movw	r24, r22
    4aa8:	8e 01       	movw	r16, r28
    4aaa:	07 5b       	subi	r16, 0xB7	; 183
    4aac:	1f 4f       	sbci	r17, 0xFF	; 255
    4aae:	bc 01       	movw	r22, r24
    4ab0:	cd 01       	movw	r24, r26
    4ab2:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    4ab6:	dc 01       	movw	r26, r24
    4ab8:	cb 01       	movw	r24, r22
    4aba:	f8 01       	movw	r30, r16
    4abc:	91 83       	std	Z+1, r25	; 0x01
    4abe:	80 83       	st	Z, r24
    4ac0:	24 c0       	rjmp	.+72     	; 0x4b0a <play_short+0x418>
    4ac2:	ce 01       	movw	r24, r28
    4ac4:	85 5b       	subi	r24, 0xB5	; 181
    4ac6:	9f 4f       	sbci	r25, 0xFF	; 255
    4ac8:	20 e9       	ldi	r18, 0x90	; 144
    4aca:	31 e0       	ldi	r19, 0x01	; 1
    4acc:	fc 01       	movw	r30, r24
    4ace:	31 83       	std	Z+1, r19	; 0x01
    4ad0:	20 83       	st	Z, r18
    4ad2:	ce 01       	movw	r24, r28
    4ad4:	85 5b       	subi	r24, 0xB5	; 181
    4ad6:	9f 4f       	sbci	r25, 0xFF	; 255
    4ad8:	fc 01       	movw	r30, r24
    4ada:	80 81       	ld	r24, Z
    4adc:	91 81       	ldd	r25, Z+1	; 0x01
    4ade:	01 97       	sbiw	r24, 0x01	; 1
    4ae0:	f1 f7       	brne	.-4      	; 0x4ade <play_short+0x3ec>
    4ae2:	9e 01       	movw	r18, r28
    4ae4:	25 5b       	subi	r18, 0xB5	; 181
    4ae6:	3f 4f       	sbci	r19, 0xFF	; 255
    4ae8:	f9 01       	movw	r30, r18
    4aea:	91 83       	std	Z+1, r25	; 0x01
    4aec:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4aee:	ce 01       	movw	r24, r28
    4af0:	87 5b       	subi	r24, 0xB7	; 183
    4af2:	9f 4f       	sbci	r25, 0xFF	; 255
    4af4:	9e 01       	movw	r18, r28
    4af6:	27 5b       	subi	r18, 0xB7	; 183
    4af8:	3f 4f       	sbci	r19, 0xFF	; 255
    4afa:	f9 01       	movw	r30, r18
    4afc:	20 81       	ld	r18, Z
    4afe:	31 81       	ldd	r19, Z+1	; 0x01
    4b00:	21 50       	subi	r18, 0x01	; 1
    4b02:	31 09       	sbc	r19, r1
    4b04:	fc 01       	movw	r30, r24
    4b06:	31 83       	std	Z+1, r19	; 0x01
    4b08:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4b0a:	ce 01       	movw	r24, r28
    4b0c:	87 5b       	subi	r24, 0xB7	; 183
    4b0e:	9f 4f       	sbci	r25, 0xFF	; 255
    4b10:	fc 01       	movw	r30, r24
    4b12:	80 81       	ld	r24, Z
    4b14:	91 81       	ldd	r25, Z+1	; 0x01
    4b16:	89 2b       	or	r24, r25
    4b18:	a1 f6       	brne	.-88     	; 0x4ac2 <play_short+0x3d0>
    4b1a:	2c c0       	rjmp	.+88     	; 0x4b74 <play_short+0x482>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4b1c:	8e 01       	movw	r16, r28
    4b1e:	07 5b       	subi	r16, 0xB7	; 183
    4b20:	1f 4f       	sbci	r17, 0xFF	; 255
    4b22:	ce 01       	movw	r24, r28
    4b24:	8b 5b       	subi	r24, 0xBB	; 187
    4b26:	9f 4f       	sbci	r25, 0xFF	; 255
    4b28:	fc 01       	movw	r30, r24
    4b2a:	60 81       	ld	r22, Z
    4b2c:	71 81       	ldd	r23, Z+1	; 0x01
    4b2e:	82 81       	ldd	r24, Z+2	; 0x02
    4b30:	93 81       	ldd	r25, Z+3	; 0x03
    4b32:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    4b36:	dc 01       	movw	r26, r24
    4b38:	cb 01       	movw	r24, r22
    4b3a:	f8 01       	movw	r30, r16
    4b3c:	91 83       	std	Z+1, r25	; 0x01
    4b3e:	80 83       	st	Z, r24
    4b40:	ce 01       	movw	r24, r28
    4b42:	83 5b       	subi	r24, 0xB3	; 179
    4b44:	9f 4f       	sbci	r25, 0xFF	; 255
    4b46:	9e 01       	movw	r18, r28
    4b48:	27 5b       	subi	r18, 0xB7	; 183
    4b4a:	3f 4f       	sbci	r19, 0xFF	; 255
    4b4c:	f9 01       	movw	r30, r18
    4b4e:	20 81       	ld	r18, Z
    4b50:	31 81       	ldd	r19, Z+1	; 0x01
    4b52:	fc 01       	movw	r30, r24
    4b54:	31 83       	std	Z+1, r19	; 0x01
    4b56:	20 83       	st	Z, r18
    4b58:	ce 01       	movw	r24, r28
    4b5a:	83 5b       	subi	r24, 0xB3	; 179
    4b5c:	9f 4f       	sbci	r25, 0xFF	; 255
    4b5e:	fc 01       	movw	r30, r24
    4b60:	80 81       	ld	r24, Z
    4b62:	91 81       	ldd	r25, Z+1	; 0x01
    4b64:	01 97       	sbiw	r24, 0x01	; 1
    4b66:	f1 f7       	brne	.-4      	; 0x4b64 <play_short+0x472>
    4b68:	9e 01       	movw	r18, r28
    4b6a:	23 5b       	subi	r18, 0xB3	; 179
    4b6c:	3f 4f       	sbci	r19, 0xFF	; 255
    4b6e:	f9 01       	movw	r30, r18
    4b70:	91 83       	std	Z+1, r25	; 0x01
    4b72:	80 83       	st	Z, r24
	_delay_ms(300);
	to_uARM("M2210 F510 T100\n");
    4b74:	88 ed       	ldi	r24, 0xD8	; 216
    4b76:	91 e0       	ldi	r25, 0x01	; 1
    4b78:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    4b7c:	80 e0       	ldi	r24, 0x00	; 0
    4b7e:	90 e0       	ldi	r25, 0x00	; 0
    4b80:	a8 ec       	ldi	r26, 0xC8	; 200
    4b82:	b2 e4       	ldi	r27, 0x42	; 66
    4b84:	8d 87       	std	Y+13, r24	; 0x0d
    4b86:	9e 87       	std	Y+14, r25	; 0x0e
    4b88:	af 87       	std	Y+15, r26	; 0x0f
    4b8a:	b8 8b       	std	Y+16, r27	; 0x10

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4b8c:	20 e0       	ldi	r18, 0x00	; 0
    4b8e:	30 e0       	ldi	r19, 0x00	; 0
    4b90:	4a e7       	ldi	r20, 0x7A	; 122
    4b92:	55 e4       	ldi	r21, 0x45	; 69
    4b94:	6d 85       	ldd	r22, Y+13	; 0x0d
    4b96:	7e 85       	ldd	r23, Y+14	; 0x0e
    4b98:	8f 85       	ldd	r24, Y+15	; 0x0f
    4b9a:	98 89       	ldd	r25, Y+16	; 0x10
    4b9c:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    4ba0:	dc 01       	movw	r26, r24
    4ba2:	cb 01       	movw	r24, r22
    4ba4:	8b af       	std	Y+59, r24	; 0x3b
    4ba6:	9c af       	std	Y+60, r25	; 0x3c
    4ba8:	ad af       	std	Y+61, r26	; 0x3d
    4baa:	be af       	std	Y+62, r27	; 0x3e
	if (__tmp < 1.0)
    4bac:	20 e0       	ldi	r18, 0x00	; 0
    4bae:	30 e0       	ldi	r19, 0x00	; 0
    4bb0:	40 e8       	ldi	r20, 0x80	; 128
    4bb2:	5f e3       	ldi	r21, 0x3F	; 63
    4bb4:	6b ad       	ldd	r22, Y+59	; 0x3b
    4bb6:	7c ad       	ldd	r23, Y+60	; 0x3c
    4bb8:	8d ad       	ldd	r24, Y+61	; 0x3d
    4bba:	9e ad       	ldd	r25, Y+62	; 0x3e
    4bbc:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    4bc0:	88 23       	and	r24, r24
    4bc2:	44 f4       	brge	.+16     	; 0x4bd4 <play_short+0x4e2>
		__ticks = 1;
    4bc4:	21 e0       	ldi	r18, 0x01	; 1
    4bc6:	30 e0       	ldi	r19, 0x00	; 0
    4bc8:	ce 01       	movw	r24, r28
    4bca:	cf 96       	adiw	r24, 0x3f	; 63
    4bcc:	fc 01       	movw	r30, r24
    4bce:	31 83       	std	Z+1, r19	; 0x01
    4bd0:	20 83       	st	Z, r18
    4bd2:	5f c0       	rjmp	.+190    	; 0x4c92 <play_short+0x5a0>
	else if (__tmp > 65535)
    4bd4:	20 e0       	ldi	r18, 0x00	; 0
    4bd6:	3f ef       	ldi	r19, 0xFF	; 255
    4bd8:	4f e7       	ldi	r20, 0x7F	; 127
    4bda:	57 e4       	ldi	r21, 0x47	; 71
    4bdc:	6b ad       	ldd	r22, Y+59	; 0x3b
    4bde:	7c ad       	ldd	r23, Y+60	; 0x3c
    4be0:	8d ad       	ldd	r24, Y+61	; 0x3d
    4be2:	9e ad       	ldd	r25, Y+62	; 0x3e
    4be4:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    4be8:	18 16       	cp	r1, r24
    4bea:	0c f0       	brlt	.+2      	; 0x4bee <play_short+0x4fc>
    4bec:	44 c0       	rjmp	.+136    	; 0x4c76 <play_short+0x584>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4bee:	20 e0       	ldi	r18, 0x00	; 0
    4bf0:	30 e0       	ldi	r19, 0x00	; 0
    4bf2:	40 e2       	ldi	r20, 0x20	; 32
    4bf4:	51 e4       	ldi	r21, 0x41	; 65
    4bf6:	6d 85       	ldd	r22, Y+13	; 0x0d
    4bf8:	7e 85       	ldd	r23, Y+14	; 0x0e
    4bfa:	8f 85       	ldd	r24, Y+15	; 0x0f
    4bfc:	98 89       	ldd	r25, Y+16	; 0x10
    4bfe:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    4c02:	dc 01       	movw	r26, r24
    4c04:	cb 01       	movw	r24, r22
    4c06:	bc 01       	movw	r22, r24
    4c08:	cd 01       	movw	r24, r26
    4c0a:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    4c0e:	dc 01       	movw	r26, r24
    4c10:	cb 01       	movw	r24, r22
    4c12:	9e 01       	movw	r18, r28
    4c14:	21 5c       	subi	r18, 0xC1	; 193
    4c16:	3f 4f       	sbci	r19, 0xFF	; 255
    4c18:	f9 01       	movw	r30, r18
    4c1a:	91 83       	std	Z+1, r25	; 0x01
    4c1c:	80 83       	st	Z, r24
    4c1e:	23 c0       	rjmp	.+70     	; 0x4c66 <play_short+0x574>
    4c20:	ce 01       	movw	r24, r28
    4c22:	8f 5b       	subi	r24, 0xBF	; 191
    4c24:	9f 4f       	sbci	r25, 0xFF	; 255
    4c26:	20 e9       	ldi	r18, 0x90	; 144
    4c28:	31 e0       	ldi	r19, 0x01	; 1
    4c2a:	fc 01       	movw	r30, r24
    4c2c:	31 83       	std	Z+1, r19	; 0x01
    4c2e:	20 83       	st	Z, r18
    4c30:	ce 01       	movw	r24, r28
    4c32:	8f 5b       	subi	r24, 0xBF	; 191
    4c34:	9f 4f       	sbci	r25, 0xFF	; 255
    4c36:	fc 01       	movw	r30, r24
    4c38:	80 81       	ld	r24, Z
    4c3a:	91 81       	ldd	r25, Z+1	; 0x01
    4c3c:	01 97       	sbiw	r24, 0x01	; 1
    4c3e:	f1 f7       	brne	.-4      	; 0x4c3c <play_short+0x54a>
    4c40:	9e 01       	movw	r18, r28
    4c42:	2f 5b       	subi	r18, 0xBF	; 191
    4c44:	3f 4f       	sbci	r19, 0xFF	; 255
    4c46:	f9 01       	movw	r30, r18
    4c48:	91 83       	std	Z+1, r25	; 0x01
    4c4a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4c4c:	ce 01       	movw	r24, r28
    4c4e:	cf 96       	adiw	r24, 0x3f	; 63
    4c50:	fc 01       	movw	r30, r24
    4c52:	80 81       	ld	r24, Z
    4c54:	91 81       	ldd	r25, Z+1	; 0x01
    4c56:	9c 01       	movw	r18, r24
    4c58:	21 50       	subi	r18, 0x01	; 1
    4c5a:	31 09       	sbc	r19, r1
    4c5c:	ce 01       	movw	r24, r28
    4c5e:	cf 96       	adiw	r24, 0x3f	; 63
    4c60:	fc 01       	movw	r30, r24
    4c62:	31 83       	std	Z+1, r19	; 0x01
    4c64:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4c66:	ce 01       	movw	r24, r28
    4c68:	cf 96       	adiw	r24, 0x3f	; 63
    4c6a:	fc 01       	movw	r30, r24
    4c6c:	80 81       	ld	r24, Z
    4c6e:	91 81       	ldd	r25, Z+1	; 0x01
    4c70:	89 2b       	or	r24, r25
    4c72:	b1 f6       	brne	.-84     	; 0x4c20 <play_short+0x52e>
    4c74:	28 c0       	rjmp	.+80     	; 0x4cc6 <play_short+0x5d4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4c76:	6b ad       	ldd	r22, Y+59	; 0x3b
    4c78:	7c ad       	ldd	r23, Y+60	; 0x3c
    4c7a:	8d ad       	ldd	r24, Y+61	; 0x3d
    4c7c:	9e ad       	ldd	r25, Y+62	; 0x3e
    4c7e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    4c82:	dc 01       	movw	r26, r24
    4c84:	cb 01       	movw	r24, r22
    4c86:	9e 01       	movw	r18, r28
    4c88:	21 5c       	subi	r18, 0xC1	; 193
    4c8a:	3f 4f       	sbci	r19, 0xFF	; 255
    4c8c:	f9 01       	movw	r30, r18
    4c8e:	91 83       	std	Z+1, r25	; 0x01
    4c90:	80 83       	st	Z, r24
    4c92:	ce 01       	movw	r24, r28
    4c94:	8d 5b       	subi	r24, 0xBD	; 189
    4c96:	9f 4f       	sbci	r25, 0xFF	; 255
    4c98:	9e 01       	movw	r18, r28
    4c9a:	21 5c       	subi	r18, 0xC1	; 193
    4c9c:	3f 4f       	sbci	r19, 0xFF	; 255
    4c9e:	f9 01       	movw	r30, r18
    4ca0:	20 81       	ld	r18, Z
    4ca2:	31 81       	ldd	r19, Z+1	; 0x01
    4ca4:	fc 01       	movw	r30, r24
    4ca6:	31 83       	std	Z+1, r19	; 0x01
    4ca8:	20 83       	st	Z, r18
    4caa:	ce 01       	movw	r24, r28
    4cac:	8d 5b       	subi	r24, 0xBD	; 189
    4cae:	9f 4f       	sbci	r25, 0xFF	; 255
    4cb0:	fc 01       	movw	r30, r24
    4cb2:	80 81       	ld	r24, Z
    4cb4:	91 81       	ldd	r25, Z+1	; 0x01
    4cb6:	01 97       	sbiw	r24, 0x01	; 1
    4cb8:	f1 f7       	brne	.-4      	; 0x4cb6 <play_short+0x5c4>
    4cba:	9e 01       	movw	r18, r28
    4cbc:	2d 5b       	subi	r18, 0xBD	; 189
    4cbe:	3f 4f       	sbci	r19, 0xFF	; 255
    4cc0:	f9 01       	movw	r30, r18
    4cc2:	91 83       	std	Z+1, r25	; 0x01
    4cc4:	80 83       	st	Z, r24
	_delay_ms(100);
	to_uARM("M2210 F660 T100\n");
    4cc6:	87 ec       	ldi	r24, 0xC7	; 199
    4cc8:	91 e0       	ldi	r25, 0x01	; 1
    4cca:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    4cce:	80 e0       	ldi	r24, 0x00	; 0
    4cd0:	90 e0       	ldi	r25, 0x00	; 0
    4cd2:	a6 e9       	ldi	r26, 0x96	; 150
    4cd4:	b3 e4       	ldi	r27, 0x43	; 67
    4cd6:	89 8b       	std	Y+17, r24	; 0x11
    4cd8:	9a 8b       	std	Y+18, r25	; 0x12
    4cda:	ab 8b       	std	Y+19, r26	; 0x13
    4cdc:	bc 8b       	std	Y+20, r27	; 0x14

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4cde:	20 e0       	ldi	r18, 0x00	; 0
    4ce0:	30 e0       	ldi	r19, 0x00	; 0
    4ce2:	4a e7       	ldi	r20, 0x7A	; 122
    4ce4:	55 e4       	ldi	r21, 0x45	; 69
    4ce6:	69 89       	ldd	r22, Y+17	; 0x11
    4ce8:	7a 89       	ldd	r23, Y+18	; 0x12
    4cea:	8b 89       	ldd	r24, Y+19	; 0x13
    4cec:	9c 89       	ldd	r25, Y+20	; 0x14
    4cee:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    4cf2:	dc 01       	movw	r26, r24
    4cf4:	cb 01       	movw	r24, r22
    4cf6:	89 ab       	std	Y+49, r24	; 0x31
    4cf8:	9a ab       	std	Y+50, r25	; 0x32
    4cfa:	ab ab       	std	Y+51, r26	; 0x33
    4cfc:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4cfe:	20 e0       	ldi	r18, 0x00	; 0
    4d00:	30 e0       	ldi	r19, 0x00	; 0
    4d02:	40 e8       	ldi	r20, 0x80	; 128
    4d04:	5f e3       	ldi	r21, 0x3F	; 63
    4d06:	69 a9       	ldd	r22, Y+49	; 0x31
    4d08:	7a a9       	ldd	r23, Y+50	; 0x32
    4d0a:	8b a9       	ldd	r24, Y+51	; 0x33
    4d0c:	9c a9       	ldd	r25, Y+52	; 0x34
    4d0e:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    4d12:	88 23       	and	r24, r24
    4d14:	2c f4       	brge	.+10     	; 0x4d20 <play_short+0x62e>
		__ticks = 1;
    4d16:	81 e0       	ldi	r24, 0x01	; 1
    4d18:	90 e0       	ldi	r25, 0x00	; 0
    4d1a:	9e ab       	std	Y+54, r25	; 0x36
    4d1c:	8d ab       	std	Y+53, r24	; 0x35
    4d1e:	3f c0       	rjmp	.+126    	; 0x4d9e <play_short+0x6ac>
	else if (__tmp > 65535)
    4d20:	20 e0       	ldi	r18, 0x00	; 0
    4d22:	3f ef       	ldi	r19, 0xFF	; 255
    4d24:	4f e7       	ldi	r20, 0x7F	; 127
    4d26:	57 e4       	ldi	r21, 0x47	; 71
    4d28:	69 a9       	ldd	r22, Y+49	; 0x31
    4d2a:	7a a9       	ldd	r23, Y+50	; 0x32
    4d2c:	8b a9       	ldd	r24, Y+51	; 0x33
    4d2e:	9c a9       	ldd	r25, Y+52	; 0x34
    4d30:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    4d34:	18 16       	cp	r1, r24
    4d36:	4c f5       	brge	.+82     	; 0x4d8a <play_short+0x698>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4d38:	20 e0       	ldi	r18, 0x00	; 0
    4d3a:	30 e0       	ldi	r19, 0x00	; 0
    4d3c:	40 e2       	ldi	r20, 0x20	; 32
    4d3e:	51 e4       	ldi	r21, 0x41	; 65
    4d40:	69 89       	ldd	r22, Y+17	; 0x11
    4d42:	7a 89       	ldd	r23, Y+18	; 0x12
    4d44:	8b 89       	ldd	r24, Y+19	; 0x13
    4d46:	9c 89       	ldd	r25, Y+20	; 0x14
    4d48:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    4d4c:	dc 01       	movw	r26, r24
    4d4e:	cb 01       	movw	r24, r22
    4d50:	bc 01       	movw	r22, r24
    4d52:	cd 01       	movw	r24, r26
    4d54:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    4d58:	dc 01       	movw	r26, r24
    4d5a:	cb 01       	movw	r24, r22
    4d5c:	9e ab       	std	Y+54, r25	; 0x36
    4d5e:	8d ab       	std	Y+53, r24	; 0x35
    4d60:	0f c0       	rjmp	.+30     	; 0x4d80 <play_short+0x68e>
    4d62:	80 e9       	ldi	r24, 0x90	; 144
    4d64:	91 e0       	ldi	r25, 0x01	; 1
    4d66:	98 af       	std	Y+56, r25	; 0x38
    4d68:	8f ab       	std	Y+55, r24	; 0x37
    4d6a:	8f a9       	ldd	r24, Y+55	; 0x37
    4d6c:	98 ad       	ldd	r25, Y+56	; 0x38
    4d6e:	01 97       	sbiw	r24, 0x01	; 1
    4d70:	f1 f7       	brne	.-4      	; 0x4d6e <play_short+0x67c>
    4d72:	98 af       	std	Y+56, r25	; 0x38
    4d74:	8f ab       	std	Y+55, r24	; 0x37
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4d76:	8d a9       	ldd	r24, Y+53	; 0x35
    4d78:	9e a9       	ldd	r25, Y+54	; 0x36
    4d7a:	01 97       	sbiw	r24, 0x01	; 1
    4d7c:	9e ab       	std	Y+54, r25	; 0x36
    4d7e:	8d ab       	std	Y+53, r24	; 0x35
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4d80:	8d a9       	ldd	r24, Y+53	; 0x35
    4d82:	9e a9       	ldd	r25, Y+54	; 0x36
    4d84:	89 2b       	or	r24, r25
    4d86:	69 f7       	brne	.-38     	; 0x4d62 <play_short+0x670>
    4d88:	14 c0       	rjmp	.+40     	; 0x4db2 <play_short+0x6c0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4d8a:	69 a9       	ldd	r22, Y+49	; 0x31
    4d8c:	7a a9       	ldd	r23, Y+50	; 0x32
    4d8e:	8b a9       	ldd	r24, Y+51	; 0x33
    4d90:	9c a9       	ldd	r25, Y+52	; 0x34
    4d92:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    4d96:	dc 01       	movw	r26, r24
    4d98:	cb 01       	movw	r24, r22
    4d9a:	9e ab       	std	Y+54, r25	; 0x36
    4d9c:	8d ab       	std	Y+53, r24	; 0x35
    4d9e:	8d a9       	ldd	r24, Y+53	; 0x35
    4da0:	9e a9       	ldd	r25, Y+54	; 0x36
    4da2:	9a af       	std	Y+58, r25	; 0x3a
    4da4:	89 af       	std	Y+57, r24	; 0x39
    4da6:	89 ad       	ldd	r24, Y+57	; 0x39
    4da8:	9a ad       	ldd	r25, Y+58	; 0x3a
    4daa:	01 97       	sbiw	r24, 0x01	; 1
    4dac:	f1 f7       	brne	.-4      	; 0x4daa <play_short+0x6b8>
    4dae:	9a af       	std	Y+58, r25	; 0x3a
    4db0:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(300);
	to_uARM("M2210 F770 T100\n");
    4db2:	89 ee       	ldi	r24, 0xE9	; 233
    4db4:	91 e0       	ldi	r25, 0x01	; 1
    4db6:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    4dba:	80 e0       	ldi	r24, 0x00	; 0
    4dbc:	90 e8       	ldi	r25, 0x80	; 128
    4dbe:	a9 e0       	ldi	r26, 0x09	; 9
    4dc0:	b4 e4       	ldi	r27, 0x44	; 68
    4dc2:	8d 8b       	std	Y+21, r24	; 0x15
    4dc4:	9e 8b       	std	Y+22, r25	; 0x16
    4dc6:	af 8b       	std	Y+23, r26	; 0x17
    4dc8:	b8 8f       	std	Y+24, r27	; 0x18

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4dca:	20 e0       	ldi	r18, 0x00	; 0
    4dcc:	30 e0       	ldi	r19, 0x00	; 0
    4dce:	4a e7       	ldi	r20, 0x7A	; 122
    4dd0:	55 e4       	ldi	r21, 0x45	; 69
    4dd2:	6d 89       	ldd	r22, Y+21	; 0x15
    4dd4:	7e 89       	ldd	r23, Y+22	; 0x16
    4dd6:	8f 89       	ldd	r24, Y+23	; 0x17
    4dd8:	98 8d       	ldd	r25, Y+24	; 0x18
    4dda:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    4dde:	dc 01       	movw	r26, r24
    4de0:	cb 01       	movw	r24, r22
    4de2:	8f a3       	std	Y+39, r24	; 0x27
    4de4:	98 a7       	std	Y+40, r25	; 0x28
    4de6:	a9 a7       	std	Y+41, r26	; 0x29
    4de8:	ba a7       	std	Y+42, r27	; 0x2a
	if (__tmp < 1.0)
    4dea:	20 e0       	ldi	r18, 0x00	; 0
    4dec:	30 e0       	ldi	r19, 0x00	; 0
    4dee:	40 e8       	ldi	r20, 0x80	; 128
    4df0:	5f e3       	ldi	r21, 0x3F	; 63
    4df2:	6f a1       	ldd	r22, Y+39	; 0x27
    4df4:	78 a5       	ldd	r23, Y+40	; 0x28
    4df6:	89 a5       	ldd	r24, Y+41	; 0x29
    4df8:	9a a5       	ldd	r25, Y+42	; 0x2a
    4dfa:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    4dfe:	88 23       	and	r24, r24
    4e00:	2c f4       	brge	.+10     	; 0x4e0c <play_short+0x71a>
		__ticks = 1;
    4e02:	81 e0       	ldi	r24, 0x01	; 1
    4e04:	90 e0       	ldi	r25, 0x00	; 0
    4e06:	9c a7       	std	Y+44, r25	; 0x2c
    4e08:	8b a7       	std	Y+43, r24	; 0x2b
    4e0a:	3f c0       	rjmp	.+126    	; 0x4e8a <play_short+0x798>
	else if (__tmp > 65535)
    4e0c:	20 e0       	ldi	r18, 0x00	; 0
    4e0e:	3f ef       	ldi	r19, 0xFF	; 255
    4e10:	4f e7       	ldi	r20, 0x7F	; 127
    4e12:	57 e4       	ldi	r21, 0x47	; 71
    4e14:	6f a1       	ldd	r22, Y+39	; 0x27
    4e16:	78 a5       	ldd	r23, Y+40	; 0x28
    4e18:	89 a5       	ldd	r24, Y+41	; 0x29
    4e1a:	9a a5       	ldd	r25, Y+42	; 0x2a
    4e1c:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    4e20:	18 16       	cp	r1, r24
    4e22:	4c f5       	brge	.+82     	; 0x4e76 <play_short+0x784>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4e24:	20 e0       	ldi	r18, 0x00	; 0
    4e26:	30 e0       	ldi	r19, 0x00	; 0
    4e28:	40 e2       	ldi	r20, 0x20	; 32
    4e2a:	51 e4       	ldi	r21, 0x41	; 65
    4e2c:	6d 89       	ldd	r22, Y+21	; 0x15
    4e2e:	7e 89       	ldd	r23, Y+22	; 0x16
    4e30:	8f 89       	ldd	r24, Y+23	; 0x17
    4e32:	98 8d       	ldd	r25, Y+24	; 0x18
    4e34:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    4e38:	dc 01       	movw	r26, r24
    4e3a:	cb 01       	movw	r24, r22
    4e3c:	bc 01       	movw	r22, r24
    4e3e:	cd 01       	movw	r24, r26
    4e40:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    4e44:	dc 01       	movw	r26, r24
    4e46:	cb 01       	movw	r24, r22
    4e48:	9c a7       	std	Y+44, r25	; 0x2c
    4e4a:	8b a7       	std	Y+43, r24	; 0x2b
    4e4c:	0f c0       	rjmp	.+30     	; 0x4e6c <play_short+0x77a>
    4e4e:	80 e9       	ldi	r24, 0x90	; 144
    4e50:	91 e0       	ldi	r25, 0x01	; 1
    4e52:	9e a7       	std	Y+46, r25	; 0x2e
    4e54:	8d a7       	std	Y+45, r24	; 0x2d
    4e56:	8d a5       	ldd	r24, Y+45	; 0x2d
    4e58:	9e a5       	ldd	r25, Y+46	; 0x2e
    4e5a:	01 97       	sbiw	r24, 0x01	; 1
    4e5c:	f1 f7       	brne	.-4      	; 0x4e5a <play_short+0x768>
    4e5e:	9e a7       	std	Y+46, r25	; 0x2e
    4e60:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4e62:	8b a5       	ldd	r24, Y+43	; 0x2b
    4e64:	9c a5       	ldd	r25, Y+44	; 0x2c
    4e66:	01 97       	sbiw	r24, 0x01	; 1
    4e68:	9c a7       	std	Y+44, r25	; 0x2c
    4e6a:	8b a7       	std	Y+43, r24	; 0x2b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4e6c:	8b a5       	ldd	r24, Y+43	; 0x2b
    4e6e:	9c a5       	ldd	r25, Y+44	; 0x2c
    4e70:	89 2b       	or	r24, r25
    4e72:	69 f7       	brne	.-38     	; 0x4e4e <play_short+0x75c>
    4e74:	14 c0       	rjmp	.+40     	; 0x4e9e <play_short+0x7ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4e76:	6f a1       	ldd	r22, Y+39	; 0x27
    4e78:	78 a5       	ldd	r23, Y+40	; 0x28
    4e7a:	89 a5       	ldd	r24, Y+41	; 0x29
    4e7c:	9a a5       	ldd	r25, Y+42	; 0x2a
    4e7e:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    4e82:	dc 01       	movw	r26, r24
    4e84:	cb 01       	movw	r24, r22
    4e86:	9c a7       	std	Y+44, r25	; 0x2c
    4e88:	8b a7       	std	Y+43, r24	; 0x2b
    4e8a:	8b a5       	ldd	r24, Y+43	; 0x2b
    4e8c:	9c a5       	ldd	r25, Y+44	; 0x2c
    4e8e:	98 ab       	std	Y+48, r25	; 0x30
    4e90:	8f a7       	std	Y+47, r24	; 0x2f
    4e92:	8f a5       	ldd	r24, Y+47	; 0x2f
    4e94:	98 a9       	ldd	r25, Y+48	; 0x30
    4e96:	01 97       	sbiw	r24, 0x01	; 1
    4e98:	f1 f7       	brne	.-4      	; 0x4e96 <play_short+0x7a4>
    4e9a:	98 ab       	std	Y+48, r25	; 0x30
    4e9c:	8f a7       	std	Y+47, r24	; 0x2f
	_delay_ms(550);
	to_uARM("M2210 F380 T100\n");
    4e9e:	8a ef       	ldi	r24, 0xFA	; 250
    4ea0:	91 e0       	ldi	r25, 0x01	; 1
    4ea2:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
    4ea6:	80 e0       	ldi	r24, 0x00	; 0
    4ea8:	90 ec       	ldi	r25, 0xC0	; 192
    4eaa:	af e0       	ldi	r26, 0x0F	; 15
    4eac:	b4 e4       	ldi	r27, 0x44	; 68
    4eae:	89 8f       	std	Y+25, r24	; 0x19
    4eb0:	9a 8f       	std	Y+26, r25	; 0x1a
    4eb2:	ab 8f       	std	Y+27, r26	; 0x1b
    4eb4:	bc 8f       	std	Y+28, r27	; 0x1c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    4eb6:	20 e0       	ldi	r18, 0x00	; 0
    4eb8:	30 e0       	ldi	r19, 0x00	; 0
    4eba:	4a e7       	ldi	r20, 0x7A	; 122
    4ebc:	55 e4       	ldi	r21, 0x45	; 69
    4ebe:	69 8d       	ldd	r22, Y+25	; 0x19
    4ec0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4ec2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4ec4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4ec6:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    4eca:	dc 01       	movw	r26, r24
    4ecc:	cb 01       	movw	r24, r22
    4ece:	8d 8f       	std	Y+29, r24	; 0x1d
    4ed0:	9e 8f       	std	Y+30, r25	; 0x1e
    4ed2:	af 8f       	std	Y+31, r26	; 0x1f
    4ed4:	b8 a3       	std	Y+32, r27	; 0x20
	if (__tmp < 1.0)
    4ed6:	20 e0       	ldi	r18, 0x00	; 0
    4ed8:	30 e0       	ldi	r19, 0x00	; 0
    4eda:	40 e8       	ldi	r20, 0x80	; 128
    4edc:	5f e3       	ldi	r21, 0x3F	; 63
    4ede:	6d 8d       	ldd	r22, Y+29	; 0x1d
    4ee0:	7e 8d       	ldd	r23, Y+30	; 0x1e
    4ee2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4ee4:	98 a1       	ldd	r25, Y+32	; 0x20
    4ee6:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    4eea:	88 23       	and	r24, r24
    4eec:	2c f4       	brge	.+10     	; 0x4ef8 <play_short+0x806>
		__ticks = 1;
    4eee:	81 e0       	ldi	r24, 0x01	; 1
    4ef0:	90 e0       	ldi	r25, 0x00	; 0
    4ef2:	9a a3       	std	Y+34, r25	; 0x22
    4ef4:	89 a3       	std	Y+33, r24	; 0x21
    4ef6:	3f c0       	rjmp	.+126    	; 0x4f76 <play_short+0x884>
	else if (__tmp > 65535)
    4ef8:	20 e0       	ldi	r18, 0x00	; 0
    4efa:	3f ef       	ldi	r19, 0xFF	; 255
    4efc:	4f e7       	ldi	r20, 0x7F	; 127
    4efe:	57 e4       	ldi	r21, 0x47	; 71
    4f00:	6d 8d       	ldd	r22, Y+29	; 0x1d
    4f02:	7e 8d       	ldd	r23, Y+30	; 0x1e
    4f04:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4f06:	98 a1       	ldd	r25, Y+32	; 0x20
    4f08:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    4f0c:	18 16       	cp	r1, r24
    4f0e:	4c f5       	brge	.+82     	; 0x4f62 <play_short+0x870>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4f10:	20 e0       	ldi	r18, 0x00	; 0
    4f12:	30 e0       	ldi	r19, 0x00	; 0
    4f14:	40 e2       	ldi	r20, 0x20	; 32
    4f16:	51 e4       	ldi	r21, 0x41	; 65
    4f18:	69 8d       	ldd	r22, Y+25	; 0x19
    4f1a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4f1c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4f1e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4f20:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    4f24:	dc 01       	movw	r26, r24
    4f26:	cb 01       	movw	r24, r22
    4f28:	bc 01       	movw	r22, r24
    4f2a:	cd 01       	movw	r24, r26
    4f2c:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    4f30:	dc 01       	movw	r26, r24
    4f32:	cb 01       	movw	r24, r22
    4f34:	9a a3       	std	Y+34, r25	; 0x22
    4f36:	89 a3       	std	Y+33, r24	; 0x21
    4f38:	0f c0       	rjmp	.+30     	; 0x4f58 <play_short+0x866>
    4f3a:	80 e9       	ldi	r24, 0x90	; 144
    4f3c:	91 e0       	ldi	r25, 0x01	; 1
    4f3e:	9c a3       	std	Y+36, r25	; 0x24
    4f40:	8b a3       	std	Y+35, r24	; 0x23
    4f42:	8b a1       	ldd	r24, Y+35	; 0x23
    4f44:	9c a1       	ldd	r25, Y+36	; 0x24
    4f46:	01 97       	sbiw	r24, 0x01	; 1
    4f48:	f1 f7       	brne	.-4      	; 0x4f46 <play_short+0x854>
    4f4a:	9c a3       	std	Y+36, r25	; 0x24
    4f4c:	8b a3       	std	Y+35, r24	; 0x23
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4f4e:	89 a1       	ldd	r24, Y+33	; 0x21
    4f50:	9a a1       	ldd	r25, Y+34	; 0x22
    4f52:	01 97       	sbiw	r24, 0x01	; 1
    4f54:	9a a3       	std	Y+34, r25	; 0x22
    4f56:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4f58:	89 a1       	ldd	r24, Y+33	; 0x21
    4f5a:	9a a1       	ldd	r25, Y+34	; 0x22
    4f5c:	89 2b       	or	r24, r25
    4f5e:	69 f7       	brne	.-38     	; 0x4f3a <play_short+0x848>
	_delay_ms(575);
}
    4f60:	14 c0       	rjmp	.+40     	; 0x4f8a <play_short+0x898>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4f62:	6d 8d       	ldd	r22, Y+29	; 0x1d
    4f64:	7e 8d       	ldd	r23, Y+30	; 0x1e
    4f66:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4f68:	98 a1       	ldd	r25, Y+32	; 0x20
    4f6a:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    4f6e:	dc 01       	movw	r26, r24
    4f70:	cb 01       	movw	r24, r22
    4f72:	9a a3       	std	Y+34, r25	; 0x22
    4f74:	89 a3       	std	Y+33, r24	; 0x21
    4f76:	89 a1       	ldd	r24, Y+33	; 0x21
    4f78:	9a a1       	ldd	r25, Y+34	; 0x22
    4f7a:	9e a3       	std	Y+38, r25	; 0x26
    4f7c:	8d a3       	std	Y+37, r24	; 0x25
    4f7e:	8d a1       	ldd	r24, Y+37	; 0x25
    4f80:	9e a1       	ldd	r25, Y+38	; 0x26
    4f82:	01 97       	sbiw	r24, 0x01	; 1
    4f84:	f1 f7       	brne	.-4      	; 0x4f82 <play_short+0x890>
    4f86:	9e a3       	std	Y+38, r25	; 0x26
    4f88:	8d a3       	std	Y+37, r24	; 0x25
    4f8a:	00 00       	nop
    4f8c:	ce 59       	subi	r28, 0x9E	; 158
    4f8e:	df 4f       	sbci	r29, 0xFF	; 255
    4f90:	0f b6       	in	r0, 0x3f	; 63
    4f92:	f8 94       	cli
    4f94:	de bf       	out	0x3e, r29	; 62
    4f96:	0f be       	out	0x3f, r0	; 63
    4f98:	cd bf       	out	0x3d, r28	; 61
    4f9a:	df 91       	pop	r29
    4f9c:	cf 91       	pop	r28
    4f9e:	1f 91       	pop	r17
    4fa0:	0f 91       	pop	r16
    4fa2:	08 95       	ret

00004fa4 <main>:



int main (void)
{
    4fa4:	cf 92       	push	r12
    4fa6:	ef 92       	push	r14
    4fa8:	0f 93       	push	r16
    4faa:	cf 93       	push	r28
    4fac:	df 93       	push	r29
    4fae:	cd b7       	in	r28, 0x3d	; 61
    4fb0:	de b7       	in	r29, 0x3e	; 62
    4fb2:	ce 55       	subi	r28, 0x5E	; 94
    4fb4:	d1 09       	sbc	r29, r1
    4fb6:	0f b6       	in	r0, 0x3f	; 63
    4fb8:	f8 94       	cli
    4fba:	de bf       	out	0x3e, r29	; 62
    4fbc:	0f be       	out	0x3f, r0	; 63
    4fbe:	cd bf       	out	0x3d, r28	; 61
	unsigned char taster,direction,counter,go_through,neu;
	int recieved_X,recieved_Y;
	unsigned char buffer [30];
	unsigned char return_buffer[30];
	start_up_routine();
    4fc0:	0e 94 a3 04 	call	0x946	; 0x946 <start_up_routine>
			//
	//} letter;
	*/

	//Note	Frequency (Hz)	
	goto_start();
    4fc4:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <goto_start>
	to_uARM("M2210 F500 T20\n");
    4fc8:	8f ec       	ldi	r24, 0xCF	; 207
    4fca:	92 e0       	ldi	r25, 0x02	; 2
    4fcc:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
	clear_lcd();
    4fd0:	0e 94 4a 2d 	call	0x5a94	; 0x5a94 <clear_lcd>
	wait_1ms(10);
    4fd4:	6a e0       	ldi	r22, 0x0A	; 10
    4fd6:	70 e0       	ldi	r23, 0x00	; 0
    4fd8:	80 e0       	ldi	r24, 0x00	; 0
    4fda:	90 e0       	ldi	r25, 0x00	; 0
    4fdc:	0e 94 23 2b 	call	0x5646	; 0x5646 <wait_1ms>
	write_text(0,0,PSTR("        OKE         "));
    4fe0:	80 e1       	ldi	r24, 0x10	; 16
    4fe2:	91 e0       	ldi	r25, 0x01	; 1
    4fe4:	ac 01       	movw	r20, r24
    4fe6:	60 e0       	ldi	r22, 0x00	; 0
    4fe8:	80 e0       	ldi	r24, 0x00	; 0
    4fea:	0e 94 cd 2b 	call	0x579a	; 0x579a <write_text>
	write_text(1,0,PSTR("        BY          "));
    4fee:	85 e2       	ldi	r24, 0x25	; 37
    4ff0:	91 e0       	ldi	r25, 0x01	; 1
    4ff2:	ac 01       	movw	r20, r24
    4ff4:	60 e0       	ldi	r22, 0x00	; 0
    4ff6:	81 e0       	ldi	r24, 0x01	; 1
    4ff8:	0e 94 cd 2b 	call	0x579a	; 0x579a <write_text>
	write_text(2,0,PSTR("        JAN         "));
    4ffc:	8a e3       	ldi	r24, 0x3A	; 58
    4ffe:	91 e0       	ldi	r25, 0x01	; 1
    5000:	ac 01       	movw	r20, r24
    5002:	60 e0       	ldi	r22, 0x00	; 0
    5004:	82 e0       	ldi	r24, 0x02	; 2
    5006:	0e 94 cd 2b 	call	0x579a	; 0x579a <write_text>
	write_text(3,0,PSTR("       TENDAI       "));
    500a:	8f e4       	ldi	r24, 0x4F	; 79
    500c:	91 e0       	ldi	r25, 0x01	; 1
    500e:	ac 01       	movw	r20, r24
    5010:	60 e0       	ldi	r22, 0x00	; 0
    5012:	83 e0       	ldi	r24, 0x03	; 3
    5014:	0e 94 cd 2b 	call	0x579a	; 0x579a <write_text>

	//set_led_mode(IDLE);
	clear_lcd();
    5018:	0e 94 4a 2d 	call	0x5a94	; 0x5a94 <clear_lcd>
	goto_start();
    501c:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <goto_start>
	while(1)
	{
	//	direction=get_direction();
		
		DIP_Switch=get_DIP_Switch();
    5020:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <get_DIP_Switch>
    5024:	80 93 fc 02 	sts	0x02FC, r24	; 0x8002fc <__data_end>
		taster=get_LCD_Taster();
    5028:	0e 94 33 01 	call	0x266	; 0x266 <get_LCD_Taster>
    502c:	89 83       	std	Y+1, r24	; 0x01
		write_zahl(3,0,lol,4,0,0);
    502e:	80 91 34 03 	lds	r24, 0x0334	; 0x800334 <lol>
    5032:	90 91 35 03 	lds	r25, 0x0335	; 0x800335 <lol+0x1>
    5036:	cc 01       	movw	r24, r24
    5038:	a0 e0       	ldi	r26, 0x00	; 0
    503a:	b0 e0       	ldi	r27, 0x00	; 0
    503c:	c1 2c       	mov	r12, r1
    503e:	e1 2c       	mov	r14, r1
    5040:	04 e0       	ldi	r16, 0x04	; 4
    5042:	9c 01       	movw	r18, r24
    5044:	ad 01       	movw	r20, r26
    5046:	60 e0       	ldi	r22, 0x00	; 0
    5048:	83 e0       	ldi	r24, 0x03	; 3
    504a:	0e 94 0d 2c 	call	0x581a	; 0x581a <write_zahl>
		if (taster&0x08)
    504e:	89 81       	ldd	r24, Y+1	; 0x01
    5050:	88 2f       	mov	r24, r24
    5052:	90 e0       	ldi	r25, 0x00	; 0
    5054:	88 70       	andi	r24, 0x08	; 8
    5056:	99 27       	eor	r25, r25
    5058:	89 2b       	or	r24, r25
    505a:	21 f0       	breq	.+8      	; 0x5064 <main+0xc0>
		{
			goto_start();
    505c:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <goto_start>
			make_sound();
    5060:	0e 94 68 03 	call	0x6d0	; 0x6d0 <make_sound>
		}		
		if (taster&0x02)
    5064:	89 81       	ldd	r24, Y+1	; 0x01
    5066:	88 2f       	mov	r24, r24
    5068:	90 e0       	ldi	r25, 0x00	; 0
    506a:	82 70       	andi	r24, 0x02	; 2
    506c:	99 27       	eor	r25, r25
    506e:	89 2b       	or	r24, r25
    5070:	11 f0       	breq	.+4      	; 0x5076 <main+0xd2>
		{
			play_somthin_booy();
    5072:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <play_somthin_booy>
		}
		if (play_sound!=0)
    5076:	80 91 45 03 	lds	r24, 0x0345	; 0x800345 <play_sound>
    507a:	88 23       	and	r24, r24
    507c:	21 f0       	breq	.+8      	; 0x5086 <main+0xe2>
		{
			play_somthin_booy();
    507e:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <play_somthin_booy>
			play_sound=0;
    5082:	10 92 45 03 	sts	0x0345, r1	; 0x800345 <play_sound>
		}
		if (routine_done>=1) //if routine done
    5086:	80 91 44 03 	lds	r24, 0x0344	; 0x800344 <routine_done>
    508a:	88 23       	and	r24, r24
    508c:	61 f0       	breq	.+24     	; 0x50a6 <main+0x102>
		{
			make_sound();
    508e:	0e 94 68 03 	call	0x6d0	; 0x6d0 <make_sound>
			wait_1ms(50);
    5092:	62 e3       	ldi	r22, 0x32	; 50
    5094:	70 e0       	ldi	r23, 0x00	; 0
    5096:	80 e0       	ldi	r24, 0x00	; 0
    5098:	90 e0       	ldi	r25, 0x00	; 0
    509a:	0e 94 23 2b 	call	0x5646	; 0x5646 <wait_1ms>
			play_short();
    509e:	0e 94 79 23 	call	0x46f2	; 0x46f2 <play_short>
			routine_done=0;
    50a2:	10 92 44 03 	sts	0x0344, r1	; 0x800344 <routine_done>
		}
		if (uart_str_complete!=0)
    50a6:	80 91 43 03 	lds	r24, 0x0343	; 0x800343 <uart_str_complete>
    50aa:	88 23       	and	r24, r24
    50ac:	09 f4       	brne	.+2      	; 0x50b0 <main+0x10c>
    50ae:	b8 cf       	rjmp	.-144    	; 0x5020 <main+0x7c>
		{
			uart_str_complete=0;
    50b0:	10 92 43 03 	sts	0x0343, r1	; 0x800343 <uart_str_complete>
			send_Byte_0('1');
    50b4:	81 e3       	ldi	r24, 0x31	; 49
    50b6:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <send_Byte_0>
			recieved_Y=(data[1]-48)*1000+(data[2]-48)*100+(data[3]-48)*10+data[4]-48;
    50ba:	80 91 4e 03 	lds	r24, 0x034E	; 0x80034e <data+0x1>
    50be:	88 2f       	mov	r24, r24
    50c0:	90 e0       	ldi	r25, 0x00	; 0
    50c2:	ac 01       	movw	r20, r24
    50c4:	40 53       	subi	r20, 0x30	; 48
    50c6:	51 09       	sbc	r21, r1
    50c8:	88 ee       	ldi	r24, 0xE8	; 232
    50ca:	93 e0       	ldi	r25, 0x03	; 3
    50cc:	48 9f       	mul	r20, r24
    50ce:	90 01       	movw	r18, r0
    50d0:	49 9f       	mul	r20, r25
    50d2:	30 0d       	add	r19, r0
    50d4:	58 9f       	mul	r21, r24
    50d6:	30 0d       	add	r19, r0
    50d8:	11 24       	eor	r1, r1
    50da:	80 91 4f 03 	lds	r24, 0x034F	; 0x80034f <data+0x2>
    50de:	88 2f       	mov	r24, r24
    50e0:	90 e0       	ldi	r25, 0x00	; 0
    50e2:	ac 01       	movw	r20, r24
    50e4:	40 53       	subi	r20, 0x30	; 48
    50e6:	51 09       	sbc	r21, r1
    50e8:	64 e6       	ldi	r22, 0x64	; 100
    50ea:	64 9f       	mul	r22, r20
    50ec:	c0 01       	movw	r24, r0
    50ee:	65 9f       	mul	r22, r21
    50f0:	90 0d       	add	r25, r0
    50f2:	11 24       	eor	r1, r1
    50f4:	28 0f       	add	r18, r24
    50f6:	39 1f       	adc	r19, r25
    50f8:	80 91 50 03 	lds	r24, 0x0350	; 0x800350 <data+0x3>
    50fc:	88 2f       	mov	r24, r24
    50fe:	90 e0       	ldi	r25, 0x00	; 0
    5100:	c0 97       	sbiw	r24, 0x30	; 48
    5102:	88 0f       	add	r24, r24
    5104:	99 1f       	adc	r25, r25
    5106:	ac 01       	movw	r20, r24
    5108:	44 0f       	add	r20, r20
    510a:	55 1f       	adc	r21, r21
    510c:	44 0f       	add	r20, r20
    510e:	55 1f       	adc	r21, r21
    5110:	84 0f       	add	r24, r20
    5112:	95 1f       	adc	r25, r21
    5114:	28 0f       	add	r18, r24
    5116:	39 1f       	adc	r19, r25
    5118:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <data+0x4>
    511c:	88 2f       	mov	r24, r24
    511e:	90 e0       	ldi	r25, 0x00	; 0
    5120:	82 0f       	add	r24, r18
    5122:	93 1f       	adc	r25, r19
    5124:	c0 97       	sbiw	r24, 0x30	; 48
    5126:	9b 83       	std	Y+3, r25	; 0x03
    5128:	8a 83       	std	Y+2, r24	; 0x02
			recieved_X=(data[6]-48)*1000+(data[7]-48)*100+(data[8]-48)*10+data[9]-48;
    512a:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <data+0x6>
    512e:	88 2f       	mov	r24, r24
    5130:	90 e0       	ldi	r25, 0x00	; 0
    5132:	ac 01       	movw	r20, r24
    5134:	40 53       	subi	r20, 0x30	; 48
    5136:	51 09       	sbc	r21, r1
    5138:	88 ee       	ldi	r24, 0xE8	; 232
    513a:	93 e0       	ldi	r25, 0x03	; 3
    513c:	48 9f       	mul	r20, r24
    513e:	90 01       	movw	r18, r0
    5140:	49 9f       	mul	r20, r25
    5142:	30 0d       	add	r19, r0
    5144:	58 9f       	mul	r21, r24
    5146:	30 0d       	add	r19, r0
    5148:	11 24       	eor	r1, r1
    514a:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <data+0x7>
    514e:	88 2f       	mov	r24, r24
    5150:	90 e0       	ldi	r25, 0x00	; 0
    5152:	ac 01       	movw	r20, r24
    5154:	40 53       	subi	r20, 0x30	; 48
    5156:	51 09       	sbc	r21, r1
    5158:	64 e6       	ldi	r22, 0x64	; 100
    515a:	64 9f       	mul	r22, r20
    515c:	c0 01       	movw	r24, r0
    515e:	65 9f       	mul	r22, r21
    5160:	90 0d       	add	r25, r0
    5162:	11 24       	eor	r1, r1
    5164:	28 0f       	add	r18, r24
    5166:	39 1f       	adc	r19, r25
    5168:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <data+0x8>
    516c:	88 2f       	mov	r24, r24
    516e:	90 e0       	ldi	r25, 0x00	; 0
    5170:	c0 97       	sbiw	r24, 0x30	; 48
    5172:	88 0f       	add	r24, r24
    5174:	99 1f       	adc	r25, r25
    5176:	ac 01       	movw	r20, r24
    5178:	44 0f       	add	r20, r20
    517a:	55 1f       	adc	r21, r21
    517c:	44 0f       	add	r20, r20
    517e:	55 1f       	adc	r21, r21
    5180:	84 0f       	add	r24, r20
    5182:	95 1f       	adc	r25, r21
    5184:	28 0f       	add	r18, r24
    5186:	39 1f       	adc	r19, r25
    5188:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <data+0x9>
    518c:	88 2f       	mov	r24, r24
    518e:	90 e0       	ldi	r25, 0x00	; 0
    5190:	82 0f       	add	r24, r18
    5192:	93 1f       	adc	r25, r19
    5194:	c0 97       	sbiw	r24, 0x30	; 48
    5196:	9d 83       	std	Y+5, r25	; 0x05
    5198:	8c 83       	std	Y+4, r24	; 0x04
			write_zahl(0,0,recieved_X,5,0,0);
    519a:	8c 81       	ldd	r24, Y+4	; 0x04
    519c:	9d 81       	ldd	r25, Y+5	; 0x05
    519e:	09 2e       	mov	r0, r25
    51a0:	00 0c       	add	r0, r0
    51a2:	aa 0b       	sbc	r26, r26
    51a4:	bb 0b       	sbc	r27, r27
    51a6:	c1 2c       	mov	r12, r1
    51a8:	e1 2c       	mov	r14, r1
    51aa:	05 e0       	ldi	r16, 0x05	; 5
    51ac:	9c 01       	movw	r18, r24
    51ae:	ad 01       	movw	r20, r26
    51b0:	60 e0       	ldi	r22, 0x00	; 0
    51b2:	80 e0       	ldi	r24, 0x00	; 0
    51b4:	0e 94 0d 2c 	call	0x581a	; 0x581a <write_zahl>
			write_zahl(1,0,recieved_Y,5,0,0);
    51b8:	8a 81       	ldd	r24, Y+2	; 0x02
    51ba:	9b 81       	ldd	r25, Y+3	; 0x03
    51bc:	09 2e       	mov	r0, r25
    51be:	00 0c       	add	r0, r0
    51c0:	aa 0b       	sbc	r26, r26
    51c2:	bb 0b       	sbc	r27, r27
    51c4:	c1 2c       	mov	r12, r1
    51c6:	e1 2c       	mov	r14, r1
    51c8:	05 e0       	ldi	r16, 0x05	; 5
    51ca:	9c 01       	movw	r18, r24
    51cc:	ad 01       	movw	r20, r26
    51ce:	60 e0       	ldi	r22, 0x00	; 0
    51d0:	81 e0       	ldi	r24, 0x01	; 1
    51d2:	0e 94 0d 2c 	call	0x581a	; 0x581a <write_zahl>
    51d6:	80 e0       	ldi	r24, 0x00	; 0
    51d8:	90 e0       	ldi	r25, 0x00	; 0
    51da:	a0 e0       	ldi	r26, 0x00	; 0
    51dc:	b0 e4       	ldi	r27, 0x40	; 64
    51de:	8b 87       	std	Y+11, r24	; 0x0b
    51e0:	9c 87       	std	Y+12, r25	; 0x0c
    51e2:	ad 87       	std	Y+13, r26	; 0x0d
    51e4:	be 87       	std	Y+14, r27	; 0x0e

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    51e6:	20 e0       	ldi	r18, 0x00	; 0
    51e8:	30 e0       	ldi	r19, 0x00	; 0
    51ea:	4a e7       	ldi	r20, 0x7A	; 122
    51ec:	55 e4       	ldi	r21, 0x45	; 69
    51ee:	6b 85       	ldd	r22, Y+11	; 0x0b
    51f0:	7c 85       	ldd	r23, Y+12	; 0x0c
    51f2:	8d 85       	ldd	r24, Y+13	; 0x0d
    51f4:	9e 85       	ldd	r25, Y+14	; 0x0e
    51f6:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    51fa:	dc 01       	movw	r26, r24
    51fc:	cb 01       	movw	r24, r22
    51fe:	8f 87       	std	Y+15, r24	; 0x0f
    5200:	98 8b       	std	Y+16, r25	; 0x10
    5202:	a9 8b       	std	Y+17, r26	; 0x11
    5204:	ba 8b       	std	Y+18, r27	; 0x12
	if (__tmp < 1.0)
    5206:	20 e0       	ldi	r18, 0x00	; 0
    5208:	30 e0       	ldi	r19, 0x00	; 0
    520a:	40 e8       	ldi	r20, 0x80	; 128
    520c:	5f e3       	ldi	r21, 0x3F	; 63
    520e:	6f 85       	ldd	r22, Y+15	; 0x0f
    5210:	78 89       	ldd	r23, Y+16	; 0x10
    5212:	89 89       	ldd	r24, Y+17	; 0x11
    5214:	9a 89       	ldd	r25, Y+18	; 0x12
    5216:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    521a:	88 23       	and	r24, r24
    521c:	2c f4       	brge	.+10     	; 0x5228 <main+0x284>
		__ticks = 1;
    521e:	81 e0       	ldi	r24, 0x01	; 1
    5220:	90 e0       	ldi	r25, 0x00	; 0
    5222:	9c 8b       	std	Y+20, r25	; 0x14
    5224:	8b 8b       	std	Y+19, r24	; 0x13
    5226:	3f c0       	rjmp	.+126    	; 0x52a6 <main+0x302>
	else if (__tmp > 65535)
    5228:	20 e0       	ldi	r18, 0x00	; 0
    522a:	3f ef       	ldi	r19, 0xFF	; 255
    522c:	4f e7       	ldi	r20, 0x7F	; 127
    522e:	57 e4       	ldi	r21, 0x47	; 71
    5230:	6f 85       	ldd	r22, Y+15	; 0x0f
    5232:	78 89       	ldd	r23, Y+16	; 0x10
    5234:	89 89       	ldd	r24, Y+17	; 0x11
    5236:	9a 89       	ldd	r25, Y+18	; 0x12
    5238:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    523c:	18 16       	cp	r1, r24
    523e:	4c f5       	brge	.+82     	; 0x5292 <main+0x2ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5240:	20 e0       	ldi	r18, 0x00	; 0
    5242:	30 e0       	ldi	r19, 0x00	; 0
    5244:	40 e2       	ldi	r20, 0x20	; 32
    5246:	51 e4       	ldi	r21, 0x41	; 65
    5248:	6b 85       	ldd	r22, Y+11	; 0x0b
    524a:	7c 85       	ldd	r23, Y+12	; 0x0c
    524c:	8d 85       	ldd	r24, Y+13	; 0x0d
    524e:	9e 85       	ldd	r25, Y+14	; 0x0e
    5250:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    5254:	dc 01       	movw	r26, r24
    5256:	cb 01       	movw	r24, r22
    5258:	bc 01       	movw	r22, r24
    525a:	cd 01       	movw	r24, r26
    525c:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    5260:	dc 01       	movw	r26, r24
    5262:	cb 01       	movw	r24, r22
    5264:	9c 8b       	std	Y+20, r25	; 0x14
    5266:	8b 8b       	std	Y+19, r24	; 0x13
    5268:	0f c0       	rjmp	.+30     	; 0x5288 <main+0x2e4>
    526a:	80 e9       	ldi	r24, 0x90	; 144
    526c:	91 e0       	ldi	r25, 0x01	; 1
    526e:	9e 8b       	std	Y+22, r25	; 0x16
    5270:	8d 8b       	std	Y+21, r24	; 0x15
    5272:	8d 89       	ldd	r24, Y+21	; 0x15
    5274:	9e 89       	ldd	r25, Y+22	; 0x16
    5276:	01 97       	sbiw	r24, 0x01	; 1
    5278:	f1 f7       	brne	.-4      	; 0x5276 <main+0x2d2>
    527a:	9e 8b       	std	Y+22, r25	; 0x16
    527c:	8d 8b       	std	Y+21, r24	; 0x15
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    527e:	8b 89       	ldd	r24, Y+19	; 0x13
    5280:	9c 89       	ldd	r25, Y+20	; 0x14
    5282:	01 97       	sbiw	r24, 0x01	; 1
    5284:	9c 8b       	std	Y+20, r25	; 0x14
    5286:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5288:	8b 89       	ldd	r24, Y+19	; 0x13
    528a:	9c 89       	ldd	r25, Y+20	; 0x14
    528c:	89 2b       	or	r24, r25
    528e:	69 f7       	brne	.-38     	; 0x526a <main+0x2c6>
    5290:	14 c0       	rjmp	.+40     	; 0x52ba <main+0x316>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5292:	6f 85       	ldd	r22, Y+15	; 0x0f
    5294:	78 89       	ldd	r23, Y+16	; 0x10
    5296:	89 89       	ldd	r24, Y+17	; 0x11
    5298:	9a 89       	ldd	r25, Y+18	; 0x12
    529a:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    529e:	dc 01       	movw	r26, r24
    52a0:	cb 01       	movw	r24, r22
    52a2:	9c 8b       	std	Y+20, r25	; 0x14
    52a4:	8b 8b       	std	Y+19, r24	; 0x13
    52a6:	8b 89       	ldd	r24, Y+19	; 0x13
    52a8:	9c 89       	ldd	r25, Y+20	; 0x14
    52aa:	98 8f       	std	Y+24, r25	; 0x18
    52ac:	8f 8b       	std	Y+23, r24	; 0x17
    52ae:	8f 89       	ldd	r24, Y+23	; 0x17
    52b0:	98 8d       	ldd	r25, Y+24	; 0x18
    52b2:	01 97       	sbiw	r24, 0x01	; 1
    52b4:	f1 f7       	brne	.-4      	; 0x52b2 <main+0x30e>
    52b6:	98 8f       	std	Y+24, r25	; 0x18
    52b8:	8f 8b       	std	Y+23, r24	; 0x17
			_delay_ms(2);
			snprintf(return_buffer,30,"%d %d",recieved_X,recieved_Y);
    52ba:	8b 81       	ldd	r24, Y+3	; 0x03
    52bc:	8f 93       	push	r24
    52be:	8a 81       	ldd	r24, Y+2	; 0x02
    52c0:	8f 93       	push	r24
    52c2:	8d 81       	ldd	r24, Y+5	; 0x05
    52c4:	8f 93       	push	r24
    52c6:	8c 81       	ldd	r24, Y+4	; 0x04
    52c8:	8f 93       	push	r24
    52ca:	8f ed       	ldi	r24, 0xDF	; 223
    52cc:	92 e0       	ldi	r25, 0x02	; 2
    52ce:	89 2f       	mov	r24, r25
    52d0:	8f 93       	push	r24
    52d2:	8f ed       	ldi	r24, 0xDF	; 223
    52d4:	92 e0       	ldi	r25, 0x02	; 2
    52d6:	8f 93       	push	r24
    52d8:	1f 92       	push	r1
    52da:	8e e1       	ldi	r24, 0x1E	; 30
    52dc:	8f 93       	push	r24
    52de:	ce 01       	movw	r24, r28
    52e0:	8f 5b       	subi	r24, 0xBF	; 191
    52e2:	9f 4f       	sbci	r25, 0xFF	; 255
    52e4:	29 2f       	mov	r18, r25
    52e6:	2f 93       	push	r18
    52e8:	8f 93       	push	r24
    52ea:	0e 94 36 2f 	call	0x5e6c	; 0x5e6c <snprintf>
    52ee:	8d b7       	in	r24, 0x3d	; 61
    52f0:	9e b7       	in	r25, 0x3e	; 62
    52f2:	0a 96       	adiw	r24, 0x0a	; 10
    52f4:	0f b6       	in	r0, 0x3f	; 63
    52f6:	f8 94       	cli
    52f8:	de bf       	out	0x3e, r29	; 62
    52fa:	0f be       	out	0x3f, r0	; 63
    52fc:	cd bf       	out	0x3d, r28	; 61
			to_pc(return_buffer);
    52fe:	ce 01       	movw	r24, r28
    5300:	8f 5b       	subi	r24, 0xBF	; 191
    5302:	9f 4f       	sbci	r25, 0xFF	; 255
    5304:	0e 94 06 02 	call	0x40c	; 0x40c <to_pc>
			while(((false_state==0)&&(good==0))||((taster&0x01)!=0))
    5308:	03 c0       	rjmp	.+6      	; 0x5310 <main+0x36c>
			{
				taster = get_LCD_Taster();
    530a:	0e 94 33 01 	call	0x266	; 0x266 <get_LCD_Taster>
    530e:	89 83       	std	Y+1, r24	; 0x01
			write_zahl(0,0,recieved_X,5,0,0);
			write_zahl(1,0,recieved_Y,5,0,0);
			_delay_ms(2);
			snprintf(return_buffer,30,"%d %d",recieved_X,recieved_Y);
			to_pc(return_buffer);
			while(((false_state==0)&&(good==0))||((taster&0x01)!=0))
    5310:	80 91 32 03 	lds	r24, 0x0332	; 0x800332 <false_state>
    5314:	88 23       	and	r24, r24
    5316:	21 f4       	brne	.+8      	; 0x5320 <main+0x37c>
    5318:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <good>
    531c:	88 23       	and	r24, r24
    531e:	a9 f3       	breq	.-22     	; 0x530a <main+0x366>
    5320:	89 81       	ldd	r24, Y+1	; 0x01
    5322:	88 2f       	mov	r24, r24
    5324:	90 e0       	ldi	r25, 0x00	; 0
    5326:	81 70       	andi	r24, 0x01	; 1
    5328:	99 27       	eor	r25, r25
    532a:	89 2b       	or	r24, r25
    532c:	71 f7       	brne	.-36     	; 0x530a <main+0x366>
			{
				taster = get_LCD_Taster();
			}
			if (good!=0)
    532e:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <good>
    5332:	88 23       	and	r24, r24
    5334:	09 f4       	brne	.+2      	; 0x5338 <main+0x394>
    5336:	d1 c0       	rjmp	.+418    	; 0x54da <main+0x536>
			{
				//Grid anpassung
				recieved_X-=384;
    5338:	8c 81       	ldd	r24, Y+4	; 0x04
    533a:	9d 81       	ldd	r25, Y+5	; 0x05
    533c:	80 58       	subi	r24, 0x80	; 128
    533e:	91 40       	sbci	r25, 0x01	; 1
    5340:	9d 83       	std	Y+5, r25	; 0x05
    5342:	8c 83       	std	Y+4, r24	; 0x04
				recieved_Y-=512;
    5344:	8a 81       	ldd	r24, Y+2	; 0x02
    5346:	9b 81       	ldd	r25, Y+3	; 0x03
    5348:	92 50       	subi	r25, 0x02	; 2
    534a:	9b 83       	std	Y+3, r25	; 0x03
    534c:	8a 83       	std	Y+2, r24	; 0x02
				recieved_X=((recieved_X/5)*-1)+200;
    534e:	8c 81       	ldd	r24, Y+4	; 0x04
    5350:	9d 81       	ldd	r25, Y+5	; 0x05
    5352:	25 e0       	ldi	r18, 0x05	; 5
    5354:	30 e0       	ldi	r19, 0x00	; 0
    5356:	b9 01       	movw	r22, r18
    5358:	0e 94 e6 2e 	call	0x5dcc	; 0x5dcc <__divmodhi4>
    535c:	cb 01       	movw	r24, r22
    535e:	9c 01       	movw	r18, r24
    5360:	88 ec       	ldi	r24, 0xC8	; 200
    5362:	90 e0       	ldi	r25, 0x00	; 0
    5364:	82 1b       	sub	r24, r18
    5366:	93 0b       	sbc	r25, r19
    5368:	9d 83       	std	Y+5, r25	; 0x05
    536a:	8c 83       	std	Y+4, r24	; 0x04
				recieved_Y=(recieved_Y/5)*-1;
    536c:	8a 81       	ldd	r24, Y+2	; 0x02
    536e:	9b 81       	ldd	r25, Y+3	; 0x03
    5370:	25 e0       	ldi	r18, 0x05	; 5
    5372:	30 e0       	ldi	r19, 0x00	; 0
    5374:	b9 01       	movw	r22, r18
    5376:	0e 94 e6 2e 	call	0x5dcc	; 0x5dcc <__divmodhi4>
    537a:	cb 01       	movw	r24, r22
    537c:	91 95       	neg	r25
    537e:	81 95       	neg	r24
    5380:	91 09       	sbc	r25, r1
    5382:	9b 83       	std	Y+3, r25	; 0x03
    5384:	8a 83       	std	Y+2, r24	; 0x02
				snprintf(buffer,30,"G0 X%d Y%d Z-20 F6000\n",recieved_X,recieved_Y);//////////////////form new string
    5386:	8b 81       	ldd	r24, Y+3	; 0x03
    5388:	8f 93       	push	r24
    538a:	8a 81       	ldd	r24, Y+2	; 0x02
    538c:	8f 93       	push	r24
    538e:	8d 81       	ldd	r24, Y+5	; 0x05
    5390:	8f 93       	push	r24
    5392:	8c 81       	ldd	r24, Y+4	; 0x04
    5394:	8f 93       	push	r24
    5396:	85 ee       	ldi	r24, 0xE5	; 229
    5398:	92 e0       	ldi	r25, 0x02	; 2
    539a:	89 2f       	mov	r24, r25
    539c:	8f 93       	push	r24
    539e:	85 ee       	ldi	r24, 0xE5	; 229
    53a0:	92 e0       	ldi	r25, 0x02	; 2
    53a2:	8f 93       	push	r24
    53a4:	1f 92       	push	r1
    53a6:	8e e1       	ldi	r24, 0x1E	; 30
    53a8:	8f 93       	push	r24
    53aa:	ce 01       	movw	r24, r28
    53ac:	83 96       	adiw	r24, 0x23	; 35
    53ae:	29 2f       	mov	r18, r25
    53b0:	2f 93       	push	r18
    53b2:	8f 93       	push	r24
    53b4:	0e 94 36 2f 	call	0x5e6c	; 0x5e6c <snprintf>
    53b8:	8d b7       	in	r24, 0x3d	; 61
    53ba:	9e b7       	in	r25, 0x3e	; 62
    53bc:	0a 96       	adiw	r24, 0x0a	; 10
    53be:	0f b6       	in	r0, 0x3f	; 63
    53c0:	f8 94       	cli
    53c2:	de bf       	out	0x3e, r29	; 62
    53c4:	0f be       	out	0x3f, r0	; 63
    53c6:	cd bf       	out	0x3d, r28	; 61
				send_to_uArm(buffer);		//send new string
    53c8:	ce 01       	movw	r24, r28
    53ca:	83 96       	adiw	r24, 0x23	; 35
    53cc:	0e 94 48 02 	call	0x490	; 0x490 <send_to_uArm>
    53d0:	80 e0       	ldi	r24, 0x00	; 0
    53d2:	90 e0       	ldi	r25, 0x00	; 0
    53d4:	a0 e0       	ldi	r26, 0x00	; 0
    53d6:	b0 e4       	ldi	r27, 0x40	; 64
    53d8:	8e 83       	std	Y+6, r24	; 0x06
    53da:	9f 83       	std	Y+7, r25	; 0x07
    53dc:	a8 87       	std	Y+8, r26	; 0x08
    53de:	b9 87       	std	Y+9, r27	; 0x09

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    53e0:	20 e0       	ldi	r18, 0x00	; 0
    53e2:	30 e0       	ldi	r19, 0x00	; 0
    53e4:	4a e7       	ldi	r20, 0x7A	; 122
    53e6:	55 e4       	ldi	r21, 0x45	; 69
    53e8:	6e 81       	ldd	r22, Y+6	; 0x06
    53ea:	7f 81       	ldd	r23, Y+7	; 0x07
    53ec:	88 85       	ldd	r24, Y+8	; 0x08
    53ee:	99 85       	ldd	r25, Y+9	; 0x09
    53f0:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    53f4:	dc 01       	movw	r26, r24
    53f6:	cb 01       	movw	r24, r22
    53f8:	89 8f       	std	Y+25, r24	; 0x19
    53fa:	9a 8f       	std	Y+26, r25	; 0x1a
    53fc:	ab 8f       	std	Y+27, r26	; 0x1b
    53fe:	bc 8f       	std	Y+28, r27	; 0x1c
	if (__tmp < 1.0)
    5400:	20 e0       	ldi	r18, 0x00	; 0
    5402:	30 e0       	ldi	r19, 0x00	; 0
    5404:	40 e8       	ldi	r20, 0x80	; 128
    5406:	5f e3       	ldi	r21, 0x3F	; 63
    5408:	69 8d       	ldd	r22, Y+25	; 0x19
    540a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    540c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    540e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5410:	0e 94 cb 2d 	call	0x5b96	; 0x5b96 <__cmpsf2>
    5414:	88 23       	and	r24, r24
    5416:	2c f4       	brge	.+10     	; 0x5422 <main+0x47e>
		__ticks = 1;
    5418:	81 e0       	ldi	r24, 0x01	; 1
    541a:	90 e0       	ldi	r25, 0x00	; 0
    541c:	9e 8f       	std	Y+30, r25	; 0x1e
    541e:	8d 8f       	std	Y+29, r24	; 0x1d
    5420:	3f c0       	rjmp	.+126    	; 0x54a0 <main+0x4fc>
	else if (__tmp > 65535)
    5422:	20 e0       	ldi	r18, 0x00	; 0
    5424:	3f ef       	ldi	r19, 0xFF	; 255
    5426:	4f e7       	ldi	r20, 0x7F	; 127
    5428:	57 e4       	ldi	r21, 0x47	; 71
    542a:	69 8d       	ldd	r22, Y+25	; 0x19
    542c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    542e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5430:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5432:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__gesf2>
    5436:	18 16       	cp	r1, r24
    5438:	4c f5       	brge	.+82     	; 0x548c <main+0x4e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    543a:	20 e0       	ldi	r18, 0x00	; 0
    543c:	30 e0       	ldi	r19, 0x00	; 0
    543e:	40 e2       	ldi	r20, 0x20	; 32
    5440:	51 e4       	ldi	r21, 0x41	; 65
    5442:	6e 81       	ldd	r22, Y+6	; 0x06
    5444:	7f 81       	ldd	r23, Y+7	; 0x07
    5446:	88 85       	ldd	r24, Y+8	; 0x08
    5448:	99 85       	ldd	r25, Y+9	; 0x09
    544a:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <__mulsf3>
    544e:	dc 01       	movw	r26, r24
    5450:	cb 01       	movw	r24, r22
    5452:	bc 01       	movw	r22, r24
    5454:	cd 01       	movw	r24, r26
    5456:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    545a:	dc 01       	movw	r26, r24
    545c:	cb 01       	movw	r24, r22
    545e:	9e 8f       	std	Y+30, r25	; 0x1e
    5460:	8d 8f       	std	Y+29, r24	; 0x1d
    5462:	0f c0       	rjmp	.+30     	; 0x5482 <main+0x4de>
    5464:	80 e9       	ldi	r24, 0x90	; 144
    5466:	91 e0       	ldi	r25, 0x01	; 1
    5468:	98 a3       	std	Y+32, r25	; 0x20
    546a:	8f 8f       	std	Y+31, r24	; 0x1f
    546c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    546e:	98 a1       	ldd	r25, Y+32	; 0x20
    5470:	01 97       	sbiw	r24, 0x01	; 1
    5472:	f1 f7       	brne	.-4      	; 0x5470 <main+0x4cc>
    5474:	98 a3       	std	Y+32, r25	; 0x20
    5476:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5478:	8d 8d       	ldd	r24, Y+29	; 0x1d
    547a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    547c:	01 97       	sbiw	r24, 0x01	; 1
    547e:	9e 8f       	std	Y+30, r25	; 0x1e
    5480:	8d 8f       	std	Y+29, r24	; 0x1d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5482:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5484:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5486:	89 2b       	or	r24, r25
    5488:	69 f7       	brne	.-38     	; 0x5464 <main+0x4c0>
    548a:	14 c0       	rjmp	.+40     	; 0x54b4 <main+0x510>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    548c:	69 8d       	ldd	r22, Y+25	; 0x19
    548e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5490:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5492:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5494:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__fixunssfsi>
    5498:	dc 01       	movw	r26, r24
    549a:	cb 01       	movw	r24, r22
    549c:	9e 8f       	std	Y+30, r25	; 0x1e
    549e:	8d 8f       	std	Y+29, r24	; 0x1d
    54a0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    54a2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    54a4:	9a a3       	std	Y+34, r25	; 0x22
    54a6:	89 a3       	std	Y+33, r24	; 0x21
    54a8:	89 a1       	ldd	r24, Y+33	; 0x21
    54aa:	9a a1       	ldd	r25, Y+34	; 0x22
    54ac:	01 97       	sbiw	r24, 0x01	; 1
    54ae:	f1 f7       	brne	.-4      	; 0x54ac <main+0x508>
    54b0:	9a a3       	std	Y+34, r25	; 0x22
    54b2:	89 a3       	std	Y+33, r24	; 0x21
				_delay_ms(2);
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    54b4:	04 c0       	rjmp	.+8      	; 0x54be <main+0x51a>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
    54b6:	80 e0       	ldi	r24, 0x00	; 0
    54b8:	91 e0       	ldi	r25, 0x01	; 1
    54ba:	0e 94 27 02 	call	0x44e	; 0x44e <to_uARM>
				recieved_X=((recieved_X/5)*-1)+200;
				recieved_Y=(recieved_Y/5)*-1;
				snprintf(buffer,30,"G0 X%d Y%d Z-20 F6000\n",recieved_X,recieved_Y);//////////////////form new string
				send_to_uArm(buffer);		//send new string
				_delay_ms(2);
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    54be:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <uart_string1+0x4>
    54c2:	81 33       	cpi	r24, 0x31	; 49
    54c4:	c1 f3       	breq	.-16     	; 0x54b6 <main+0x512>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
				}
				beep(DIP_Switch);
    54c6:	80 91 fc 02 	lds	r24, 0x02FC	; 0x8002fc <__data_end>
    54ca:	0e 94 81 04 	call	0x902	; 0x902 <beep>
				send_Byte_0('1');		//return that action done
    54ce:	81 e3       	ldi	r24, 0x31	; 49
    54d0:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <send_Byte_0>
				good=0;
    54d4:	10 92 48 03 	sts	0x0348, r1	; 0x800348 <good>
    54d8:	05 c0       	rjmp	.+10     	; 0x54e4 <main+0x540>
			}
			else
			{
				set_led_mode(IDLE);
    54da:	80 e4       	ldi	r24, 0x40	; 64
    54dc:	0e 94 51 03 	call	0x6a2	; 0x6a2 <set_led_mode>
				false_state=0;
    54e0:	10 92 32 03 	sts	0x0332, r1	; 0x800332 <false_state>
			}
			neu=taster;
    54e4:	89 81       	ldd	r24, Y+1	; 0x01
    54e6:	8a 87       	std	Y+10, r24	; 0x0a
		}		
	} //end while(1)
    54e8:	9b cd       	rjmp	.-1226   	; 0x5020 <main+0x7c>

000054ea <init_Timer0_1ms_int>:
    54ea:	cf 93       	push	r28
    54ec:	df 93       	push	r29
    54ee:	cd b7       	in	r28, 0x3d	; 61
    54f0:	de b7       	in	r29, 0x3e	; 62
    54f2:	84 e4       	ldi	r24, 0x44	; 68
    54f4:	90 e0       	ldi	r25, 0x00	; 0
    54f6:	24 e4       	ldi	r18, 0x44	; 68
    54f8:	30 e0       	ldi	r19, 0x00	; 0
    54fa:	f9 01       	movw	r30, r18
    54fc:	20 81       	ld	r18, Z
    54fe:	22 60       	ori	r18, 0x02	; 2
    5500:	fc 01       	movw	r30, r24
    5502:	20 83       	st	Z, r18
    5504:	85 e4       	ldi	r24, 0x45	; 69
    5506:	90 e0       	ldi	r25, 0x00	; 0
    5508:	25 e4       	ldi	r18, 0x45	; 69
    550a:	30 e0       	ldi	r19, 0x00	; 0
    550c:	f9 01       	movw	r30, r18
    550e:	20 81       	ld	r18, Z
    5510:	23 60       	ori	r18, 0x03	; 3
    5512:	fc 01       	movw	r30, r24
    5514:	20 83       	st	Z, r18
    5516:	87 e4       	ldi	r24, 0x47	; 71
    5518:	90 e0       	ldi	r25, 0x00	; 0
    551a:	29 ef       	ldi	r18, 0xF9	; 249
    551c:	fc 01       	movw	r30, r24
    551e:	20 83       	st	Z, r18
    5520:	8e e6       	ldi	r24, 0x6E	; 110
    5522:	90 e0       	ldi	r25, 0x00	; 0
    5524:	2e e6       	ldi	r18, 0x6E	; 110
    5526:	30 e0       	ldi	r19, 0x00	; 0
    5528:	f9 01       	movw	r30, r18
    552a:	20 81       	ld	r18, Z
    552c:	22 60       	ori	r18, 0x02	; 2
    552e:	fc 01       	movw	r30, r24
    5530:	20 83       	st	Z, r18
    5532:	00 00       	nop
    5534:	df 91       	pop	r29
    5536:	cf 91       	pop	r28
    5538:	08 95       	ret

0000553a <__vector_16>:
    553a:	1f 92       	push	r1
    553c:	0f 92       	push	r0
    553e:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    5542:	0f 92       	push	r0
    5544:	11 24       	eor	r1, r1
    5546:	2f 93       	push	r18
    5548:	3f 93       	push	r19
    554a:	4f 93       	push	r20
    554c:	5f 93       	push	r21
    554e:	6f 93       	push	r22
    5550:	7f 93       	push	r23
    5552:	8f 93       	push	r24
    5554:	9f 93       	push	r25
    5556:	af 93       	push	r26
    5558:	bf 93       	push	r27
    555a:	ef 93       	push	r30
    555c:	ff 93       	push	r31
    555e:	cf 93       	push	r28
    5560:	df 93       	push	r29
    5562:	cd b7       	in	r28, 0x3d	; 61
    5564:	de b7       	in	r29, 0x3e	; 62
    5566:	80 91 3a 03 	lds	r24, 0x033A	; 0x80033a <tick_1ms>
    556a:	90 91 3b 03 	lds	r25, 0x033B	; 0x80033b <tick_1ms+0x1>
    556e:	a0 91 3c 03 	lds	r26, 0x033C	; 0x80033c <tick_1ms+0x2>
    5572:	b0 91 3d 03 	lds	r27, 0x033D	; 0x80033d <tick_1ms+0x3>
    5576:	01 96       	adiw	r24, 0x01	; 1
    5578:	a1 1d       	adc	r26, r1
    557a:	b1 1d       	adc	r27, r1
    557c:	80 93 3a 03 	sts	0x033A, r24	; 0x80033a <tick_1ms>
    5580:	90 93 3b 03 	sts	0x033B, r25	; 0x80033b <tick_1ms+0x1>
    5584:	a0 93 3c 03 	sts	0x033C, r26	; 0x80033c <tick_1ms+0x2>
    5588:	b0 93 3d 03 	sts	0x033D, r27	; 0x80033d <tick_1ms+0x3>
    558c:	80 91 3a 03 	lds	r24, 0x033A	; 0x80033a <tick_1ms>
    5590:	90 91 3b 03 	lds	r25, 0x033B	; 0x80033b <tick_1ms+0x1>
    5594:	a0 91 3c 03 	lds	r26, 0x033C	; 0x80033c <tick_1ms+0x2>
    5598:	b0 91 3d 03 	lds	r27, 0x033D	; 0x80033d <tick_1ms+0x3>
    559c:	28 ee       	ldi	r18, 0xE8	; 232
    559e:	33 e0       	ldi	r19, 0x03	; 3
    55a0:	40 e0       	ldi	r20, 0x00	; 0
    55a2:	50 e0       	ldi	r21, 0x00	; 0
    55a4:	bc 01       	movw	r22, r24
    55a6:	cd 01       	movw	r24, r26
    55a8:	0e 94 fa 2e 	call	0x5df4	; 0x5df4 <__udivmodsi4>
    55ac:	dc 01       	movw	r26, r24
    55ae:	cb 01       	movw	r24, r22
    55b0:	89 2b       	or	r24, r25
    55b2:	8a 2b       	or	r24, r26
    55b4:	8b 2b       	or	r24, r27
    55b6:	99 f4       	brne	.+38     	; 0x55de <__vector_16+0xa4>
    55b8:	80 91 3e 03 	lds	r24, 0x033E	; 0x80033e <tick_1s>
    55bc:	90 91 3f 03 	lds	r25, 0x033F	; 0x80033f <tick_1s+0x1>
    55c0:	a0 91 40 03 	lds	r26, 0x0340	; 0x800340 <tick_1s+0x2>
    55c4:	b0 91 41 03 	lds	r27, 0x0341	; 0x800341 <tick_1s+0x3>
    55c8:	01 96       	adiw	r24, 0x01	; 1
    55ca:	a1 1d       	adc	r26, r1
    55cc:	b1 1d       	adc	r27, r1
    55ce:	80 93 3e 03 	sts	0x033E, r24	; 0x80033e <tick_1s>
    55d2:	90 93 3f 03 	sts	0x033F, r25	; 0x80033f <tick_1s+0x1>
    55d6:	a0 93 40 03 	sts	0x0340, r26	; 0x800340 <tick_1s+0x2>
    55da:	b0 93 41 03 	sts	0x0341, r27	; 0x800341 <tick_1s+0x3>
    55de:	80 91 36 03 	lds	r24, 0x0336	; 0x800336 <tick_1ms_cnt>
    55e2:	90 91 37 03 	lds	r25, 0x0337	; 0x800337 <tick_1ms_cnt+0x1>
    55e6:	a0 91 38 03 	lds	r26, 0x0338	; 0x800338 <tick_1ms_cnt+0x2>
    55ea:	b0 91 39 03 	lds	r27, 0x0339	; 0x800339 <tick_1ms_cnt+0x3>
    55ee:	89 2b       	or	r24, r25
    55f0:	8a 2b       	or	r24, r26
    55f2:	8b 2b       	or	r24, r27
    55f4:	99 f0       	breq	.+38     	; 0x561c <__vector_16+0xe2>
    55f6:	80 91 36 03 	lds	r24, 0x0336	; 0x800336 <tick_1ms_cnt>
    55fa:	90 91 37 03 	lds	r25, 0x0337	; 0x800337 <tick_1ms_cnt+0x1>
    55fe:	a0 91 38 03 	lds	r26, 0x0338	; 0x800338 <tick_1ms_cnt+0x2>
    5602:	b0 91 39 03 	lds	r27, 0x0339	; 0x800339 <tick_1ms_cnt+0x3>
    5606:	01 97       	sbiw	r24, 0x01	; 1
    5608:	a1 09       	sbc	r26, r1
    560a:	b1 09       	sbc	r27, r1
    560c:	80 93 36 03 	sts	0x0336, r24	; 0x800336 <tick_1ms_cnt>
    5610:	90 93 37 03 	sts	0x0337, r25	; 0x800337 <tick_1ms_cnt+0x1>
    5614:	a0 93 38 03 	sts	0x0338, r26	; 0x800338 <tick_1ms_cnt+0x2>
    5618:	b0 93 39 03 	sts	0x0339, r27	; 0x800339 <tick_1ms_cnt+0x3>
    561c:	00 00       	nop
    561e:	df 91       	pop	r29
    5620:	cf 91       	pop	r28
    5622:	ff 91       	pop	r31
    5624:	ef 91       	pop	r30
    5626:	bf 91       	pop	r27
    5628:	af 91       	pop	r26
    562a:	9f 91       	pop	r25
    562c:	8f 91       	pop	r24
    562e:	7f 91       	pop	r23
    5630:	6f 91       	pop	r22
    5632:	5f 91       	pop	r21
    5634:	4f 91       	pop	r20
    5636:	3f 91       	pop	r19
    5638:	2f 91       	pop	r18
    563a:	0f 90       	pop	r0
    563c:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    5640:	0f 90       	pop	r0
    5642:	1f 90       	pop	r1
    5644:	18 95       	reti

00005646 <wait_1ms>:
    5646:	cf 93       	push	r28
    5648:	df 93       	push	r29
    564a:	00 d0       	rcall	.+0      	; 0x564c <wait_1ms+0x6>
    564c:	00 d0       	rcall	.+0      	; 0x564e <wait_1ms+0x8>
    564e:	cd b7       	in	r28, 0x3d	; 61
    5650:	de b7       	in	r29, 0x3e	; 62
    5652:	69 83       	std	Y+1, r22	; 0x01
    5654:	7a 83       	std	Y+2, r23	; 0x02
    5656:	8b 83       	std	Y+3, r24	; 0x03
    5658:	9c 83       	std	Y+4, r25	; 0x04
    565a:	89 81       	ldd	r24, Y+1	; 0x01
    565c:	9a 81       	ldd	r25, Y+2	; 0x02
    565e:	ab 81       	ldd	r26, Y+3	; 0x03
    5660:	bc 81       	ldd	r27, Y+4	; 0x04
    5662:	89 2b       	or	r24, r25
    5664:	8a 2b       	or	r24, r26
    5666:	8b 2b       	or	r24, r27
    5668:	69 f0       	breq	.+26     	; 0x5684 <wait_1ms+0x3e>
    566a:	89 81       	ldd	r24, Y+1	; 0x01
    566c:	9a 81       	ldd	r25, Y+2	; 0x02
    566e:	ab 81       	ldd	r26, Y+3	; 0x03
    5670:	bc 81       	ldd	r27, Y+4	; 0x04
    5672:	80 93 36 03 	sts	0x0336, r24	; 0x800336 <tick_1ms_cnt>
    5676:	90 93 37 03 	sts	0x0337, r25	; 0x800337 <tick_1ms_cnt+0x1>
    567a:	a0 93 38 03 	sts	0x0338, r26	; 0x800338 <tick_1ms_cnt+0x2>
    567e:	b0 93 39 03 	sts	0x0339, r27	; 0x800339 <tick_1ms_cnt+0x3>
    5682:	0c c0       	rjmp	.+24     	; 0x569c <wait_1ms+0x56>
    5684:	81 e0       	ldi	r24, 0x01	; 1
    5686:	90 e0       	ldi	r25, 0x00	; 0
    5688:	a0 e0       	ldi	r26, 0x00	; 0
    568a:	b0 e0       	ldi	r27, 0x00	; 0
    568c:	80 93 36 03 	sts	0x0336, r24	; 0x800336 <tick_1ms_cnt>
    5690:	90 93 37 03 	sts	0x0337, r25	; 0x800337 <tick_1ms_cnt+0x1>
    5694:	a0 93 38 03 	sts	0x0338, r26	; 0x800338 <tick_1ms_cnt+0x2>
    5698:	b0 93 39 03 	sts	0x0339, r27	; 0x800339 <tick_1ms_cnt+0x3>
    569c:	00 00       	nop
    569e:	80 91 36 03 	lds	r24, 0x0336	; 0x800336 <tick_1ms_cnt>
    56a2:	90 91 37 03 	lds	r25, 0x0337	; 0x800337 <tick_1ms_cnt+0x1>
    56a6:	a0 91 38 03 	lds	r26, 0x0338	; 0x800338 <tick_1ms_cnt+0x2>
    56aa:	b0 91 39 03 	lds	r27, 0x0339	; 0x800339 <tick_1ms_cnt+0x3>
    56ae:	89 2b       	or	r24, r25
    56b0:	8a 2b       	or	r24, r26
    56b2:	8b 2b       	or	r24, r27
    56b4:	a1 f7       	brne	.-24     	; 0x569e <wait_1ms+0x58>
    56b6:	00 00       	nop
    56b8:	0f 90       	pop	r0
    56ba:	0f 90       	pop	r0
    56bc:	0f 90       	pop	r0
    56be:	0f 90       	pop	r0
    56c0:	df 91       	pop	r29
    56c2:	cf 91       	pop	r28
    56c4:	08 95       	ret

000056c6 <delay_nop>:
    56c6:	cf 93       	push	r28
    56c8:	df 93       	push	r29
    56ca:	00 d0       	rcall	.+0      	; 0x56cc <delay_nop+0x6>
    56cc:	cd b7       	in	r28, 0x3d	; 61
    56ce:	de b7       	in	r29, 0x3e	; 62
    56d0:	8a 83       	std	Y+2, r24	; 0x02
    56d2:	19 82       	std	Y+1, r1	; 0x01
    56d4:	04 c0       	rjmp	.+8      	; 0x56de <delay_nop+0x18>
    56d6:	00 00       	nop
    56d8:	89 81       	ldd	r24, Y+1	; 0x01
    56da:	8f 5f       	subi	r24, 0xFF	; 255
    56dc:	89 83       	std	Y+1, r24	; 0x01
    56de:	99 81       	ldd	r25, Y+1	; 0x01
    56e0:	8a 81       	ldd	r24, Y+2	; 0x02
    56e2:	98 17       	cp	r25, r24
    56e4:	c0 f3       	brcs	.-16     	; 0x56d6 <delay_nop+0x10>
    56e6:	00 00       	nop
    56e8:	0f 90       	pop	r0
    56ea:	0f 90       	pop	r0
    56ec:	df 91       	pop	r29
    56ee:	cf 91       	pop	r28
    56f0:	08 95       	ret

000056f2 <write_lcd_f>:
    56f2:	91 e0       	ldi	r25, 0x01	; 1
    56f4:	90 93 42 03 	sts	0x0342, r25	; 0x800342 <write_RGB_LCD_activ>
    56f8:	40 9a       	sbi	0x08, 0	; 8
    56fa:	41 98       	cbi	0x08, 1	; 8
    56fc:	41 98       	cbi	0x08, 1	; 8
    56fe:	41 9a       	sbi	0x08, 1	; 8
    5700:	41 9a       	sbi	0x08, 1	; 8
    5702:	41 98       	cbi	0x08, 1	; 8
    5704:	41 98       	cbi	0x08, 1	; 8
    5706:	41 9a       	sbi	0x08, 1	; 8
    5708:	41 9a       	sbi	0x08, 1	; 8
    570a:	41 98       	cbi	0x08, 1	; 8
    570c:	41 98       	cbi	0x08, 1	; 8
    570e:	41 9a       	sbi	0x08, 1	; 8
    5710:	41 9a       	sbi	0x08, 1	; 8
    5712:	41 98       	cbi	0x08, 1	; 8
    5714:	41 98       	cbi	0x08, 1	; 8
    5716:	41 9a       	sbi	0x08, 1	; 8
    5718:	41 9a       	sbi	0x08, 1	; 8
    571a:	41 98       	cbi	0x08, 1	; 8
    571c:	41 98       	cbi	0x08, 1	; 8
    571e:	41 9a       	sbi	0x08, 1	; 8
    5720:	40 98       	cbi	0x08, 0	; 8
    5722:	41 98       	cbi	0x08, 1	; 8
    5724:	41 98       	cbi	0x08, 1	; 8
    5726:	41 9a       	sbi	0x08, 1	; 8
    5728:	83 34       	cpi	r24, 0x43	; 67
    572a:	a9 f1       	breq	.+106    	; 0x5796 <write_lcd_f+0xa4>
    572c:	40 9a       	sbi	0x08, 0	; 8
    572e:	41 98       	cbi	0x08, 1	; 8
    5730:	41 98       	cbi	0x08, 1	; 8
    5732:	41 9a       	sbi	0x08, 1	; 8
    5734:	40 98       	cbi	0x08, 0	; 8
    5736:	41 98       	cbi	0x08, 1	; 8
    5738:	41 98       	cbi	0x08, 1	; 8
    573a:	41 9a       	sbi	0x08, 1	; 8
    573c:	84 e0       	ldi	r24, 0x04	; 4
    573e:	41 98       	cbi	0x08, 1	; 8
    5740:	60 ff       	sbrs	r22, 0
    5742:	27 c0       	rjmp	.+78     	; 0x5792 <write_lcd_f+0xa0>
    5744:	40 9a       	sbi	0x08, 0	; 8
    5746:	66 95       	lsr	r22
    5748:	41 98       	cbi	0x08, 1	; 8
    574a:	41 9a       	sbi	0x08, 1	; 8
    574c:	81 50       	subi	r24, 0x01	; 1
    574e:	b9 f7       	brne	.-18     	; 0x573e <write_lcd_f+0x4c>
    5750:	40 98       	cbi	0x08, 0	; 8
    5752:	84 e0       	ldi	r24, 0x04	; 4
    5754:	41 98       	cbi	0x08, 1	; 8
    5756:	41 98       	cbi	0x08, 1	; 8
    5758:	41 9a       	sbi	0x08, 1	; 8
    575a:	81 50       	subi	r24, 0x01	; 1
    575c:	d9 f7       	brne	.-10     	; 0x5754 <write_lcd_f+0x62>
    575e:	84 e0       	ldi	r24, 0x04	; 4
    5760:	41 98       	cbi	0x08, 1	; 8
    5762:	60 ff       	sbrs	r22, 0
    5764:	14 c0       	rjmp	.+40     	; 0x578e <write_lcd_f+0x9c>
    5766:	40 9a       	sbi	0x08, 0	; 8
    5768:	66 95       	lsr	r22
    576a:	41 98       	cbi	0x08, 1	; 8
    576c:	41 9a       	sbi	0x08, 1	; 8
    576e:	81 50       	subi	r24, 0x01	; 1
    5770:	b9 f7       	brne	.-18     	; 0x5760 <write_lcd_f+0x6e>
    5772:	40 98       	cbi	0x08, 0	; 8
    5774:	84 e0       	ldi	r24, 0x04	; 4
    5776:	41 98       	cbi	0x08, 1	; 8
    5778:	41 98       	cbi	0x08, 1	; 8
    577a:	41 9a       	sbi	0x08, 1	; 8
    577c:	81 50       	subi	r24, 0x01	; 1
    577e:	d9 f7       	brne	.-10     	; 0x5776 <write_lcd_f+0x84>
    5780:	84 e1       	ldi	r24, 0x14	; 20
    5782:	40 9a       	sbi	0x08, 0	; 8
    5784:	81 50       	subi	r24, 0x01	; 1
    5786:	e9 f7       	brne	.-6      	; 0x5782 <write_lcd_f+0x90>
    5788:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <write_RGB_LCD_activ>
    578c:	08 95       	ret
    578e:	40 98       	cbi	0x08, 0	; 8
    5790:	eb cf       	rjmp	.-42     	; 0x5768 <write_lcd_f+0x76>
    5792:	40 98       	cbi	0x08, 0	; 8
    5794:	d8 cf       	rjmp	.-80     	; 0x5746 <write_lcd_f+0x54>
    5796:	40 98       	cbi	0x08, 0	; 8
    5798:	ca cf       	rjmp	.-108    	; 0x572e <write_lcd_f+0x3c>

0000579a <write_text>:
    579a:	0f 93       	push	r16
    579c:	1f 93       	push	r17
    579e:	df 93       	push	r29
    57a0:	8a 01       	movw	r16, r20
    57a2:	90 e2       	ldi	r25, 0x20	; 32
    57a4:	89 9f       	mul	r24, r25
    57a6:	60 0d       	add	r22, r0
    57a8:	11 24       	eor	r1, r1
    57aa:	60 68       	ori	r22, 0x80	; 128
    57ac:	83 e4       	ldi	r24, 0x43	; 67
    57ae:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <write_lcd_f>
    57b2:	f8 01       	movw	r30, r16
    57b4:	64 91       	lpm	r22, Z
    57b6:	66 23       	and	r22, r22
    57b8:	69 f0       	breq	.+26     	; 0x57d4 <write_text+0x3a>
    57ba:	d1 e0       	ldi	r29, 0x01	; 1
    57bc:	84 e4       	ldi	r24, 0x44	; 68
    57be:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <write_lcd_f>
    57c2:	81 e0       	ldi	r24, 0x01	; 1
    57c4:	8d 0f       	add	r24, r29
    57c6:	f8 01       	movw	r30, r16
    57c8:	ed 0f       	add	r30, r29
    57ca:	f1 1d       	adc	r31, r1
    57cc:	64 91       	lpm	r22, Z
    57ce:	d8 2f       	mov	r29, r24
    57d0:	61 11       	cpse	r22, r1
    57d2:	f4 cf       	rjmp	.-24     	; 0x57bc <write_text+0x22>
    57d4:	df 91       	pop	r29
    57d6:	1f 91       	pop	r17
    57d8:	0f 91       	pop	r16
    57da:	08 95       	ret

000057dc <write_text_ram>:
    57dc:	0f 93       	push	r16
    57de:	1f 93       	push	r17
    57e0:	df 93       	push	r29
    57e2:	8a 01       	movw	r16, r20
    57e4:	90 e2       	ldi	r25, 0x20	; 32
    57e6:	89 9f       	mul	r24, r25
    57e8:	60 0d       	add	r22, r0
    57ea:	11 24       	eor	r1, r1
    57ec:	60 68       	ori	r22, 0x80	; 128
    57ee:	83 e4       	ldi	r24, 0x43	; 67
    57f0:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <write_lcd_f>
    57f4:	f8 01       	movw	r30, r16
    57f6:	60 81       	ld	r22, Z
    57f8:	66 23       	and	r22, r22
    57fa:	59 f0       	breq	.+22     	; 0x5812 <write_text_ram+0x36>
    57fc:	d0 e0       	ldi	r29, 0x00	; 0
    57fe:	df 5f       	subi	r29, 0xFF	; 255
    5800:	84 e4       	ldi	r24, 0x44	; 68
    5802:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <write_lcd_f>
    5806:	f8 01       	movw	r30, r16
    5808:	ed 0f       	add	r30, r29
    580a:	f1 1d       	adc	r31, r1
    580c:	60 81       	ld	r22, Z
    580e:	61 11       	cpse	r22, r1
    5810:	f6 cf       	rjmp	.-20     	; 0x57fe <write_text_ram+0x22>
    5812:	df 91       	pop	r29
    5814:	1f 91       	pop	r17
    5816:	0f 91       	pop	r16
    5818:	08 95       	ret

0000581a <write_zahl>:
    581a:	2f 92       	push	r2
    581c:	3f 92       	push	r3
    581e:	4f 92       	push	r4
    5820:	5f 92       	push	r5
    5822:	6f 92       	push	r6
    5824:	7f 92       	push	r7
    5826:	8f 92       	push	r8
    5828:	9f 92       	push	r9
    582a:	af 92       	push	r10
    582c:	bf 92       	push	r11
    582e:	cf 92       	push	r12
    5830:	df 92       	push	r13
    5832:	ef 92       	push	r14
    5834:	ff 92       	push	r15
    5836:	0f 93       	push	r16
    5838:	1f 93       	push	r17
    583a:	cf 93       	push	r28
    583c:	df 93       	push	r29
    583e:	cd b7       	in	r28, 0x3d	; 61
    5840:	de b7       	in	r29, 0x3e	; 62
    5842:	63 97       	sbiw	r28, 0x13	; 19
    5844:	0f b6       	in	r0, 0x3f	; 63
    5846:	f8 94       	cli
    5848:	de bf       	out	0x3e, r29	; 62
    584a:	0f be       	out	0x3f, r0	; 63
    584c:	cd bf       	out	0x3d, r28	; 61
    584e:	8a 8b       	std	Y+18, r24	; 0x12
    5850:	6b 8b       	std	Y+19, r22	; 0x13
    5852:	29 01       	movw	r4, r18
    5854:	3a 01       	movw	r6, r20
    5856:	c8 8a       	std	Y+16, r12	; 0x10
    5858:	04 36       	cpi	r16, 0x64	; 100
    585a:	08 f4       	brcc	.+2      	; 0x585e <write_zahl+0x44>
    585c:	bd c0       	rjmp	.+378    	; 0x59d8 <write_zahl+0x1be>
    585e:	04 56       	subi	r16, 0x64	; 100
    5860:	19 8a       	std	Y+17, r1	; 0x11
    5862:	0b 30       	cpi	r16, 0x0B	; 11
    5864:	08 f0       	brcs	.+2      	; 0x5868 <write_zahl+0x4e>
    5866:	0a e0       	ldi	r16, 0x0A	; 10
    5868:	ef 86       	std	Y+15, r14	; 0x0f
    586a:	88 89       	ldd	r24, Y+16	; 0x10
    586c:	8e 15       	cp	r24, r14
    586e:	08 f4       	brcc	.+2      	; 0x5872 <write_zahl+0x58>
    5870:	8f 87       	std	Y+15, r24	; 0x0f
    5872:	20 2e       	mov	r2, r16
    5874:	31 2c       	mov	r3, r1
    5876:	c1 01       	movw	r24, r2
    5878:	ef 85       	ldd	r30, Y+15	; 0x0f
    587a:	8e 0f       	add	r24, r30
    587c:	91 1d       	adc	r25, r1
    587e:	0b 97       	sbiw	r24, 0x0b	; 11
    5880:	1c f0       	brlt	.+6      	; 0x5888 <write_zahl+0x6e>
    5882:	8a e0       	ldi	r24, 0x0A	; 10
    5884:	80 1b       	sub	r24, r16
    5886:	8f 87       	std	Y+15, r24	; 0x0f
    5888:	c3 01       	movw	r24, r6
    588a:	b2 01       	movw	r22, r4
    588c:	2a e0       	ldi	r18, 0x0A	; 10
    588e:	30 e0       	ldi	r19, 0x00	; 0
    5890:	40 e0       	ldi	r20, 0x00	; 0
    5892:	50 e0       	ldi	r21, 0x00	; 0
    5894:	0e 94 fa 2e 	call	0x5df4	; 0x5df4 <__udivmodsi4>
    5898:	60 5d       	subi	r22, 0xD0	; 208
    589a:	6c 87       	std	Y+12, r22	; 0x0c
    589c:	1a e0       	ldi	r17, 0x0A	; 10
    589e:	3a e0       	ldi	r19, 0x0A	; 10
    58a0:	c3 2e       	mov	r12, r19
    58a2:	d1 2c       	mov	r13, r1
    58a4:	e1 2c       	mov	r14, r1
    58a6:	f1 2c       	mov	r15, r1
    58a8:	4a e0       	ldi	r20, 0x0A	; 10
    58aa:	84 2e       	mov	r8, r20
    58ac:	91 2c       	mov	r9, r1
    58ae:	a1 2c       	mov	r10, r1
    58b0:	b1 2c       	mov	r11, r1
    58b2:	81 e0       	ldi	r24, 0x01	; 1
    58b4:	90 e0       	ldi	r25, 0x00	; 0
    58b6:	8c 0f       	add	r24, r28
    58b8:	9d 1f       	adc	r25, r29
    58ba:	81 0f       	add	r24, r17
    58bc:	91 1d       	adc	r25, r1
    58be:	9e 87       	std	Y+14, r25	; 0x0e
    58c0:	8d 87       	std	Y+13, r24	; 0x0d
    58c2:	c3 01       	movw	r24, r6
    58c4:	b2 01       	movw	r22, r4
    58c6:	a7 01       	movw	r20, r14
    58c8:	96 01       	movw	r18, r12
    58ca:	0e 94 fa 2e 	call	0x5df4	; 0x5df4 <__udivmodsi4>
    58ce:	ca 01       	movw	r24, r20
    58d0:	b9 01       	movw	r22, r18
    58d2:	a5 01       	movw	r20, r10
    58d4:	94 01       	movw	r18, r8
    58d6:	0e 94 fa 2e 	call	0x5df4	; 0x5df4 <__udivmodsi4>
    58da:	60 5d       	subi	r22, 0xD0	; 208
    58dc:	ed 85       	ldd	r30, Y+13	; 0x0d
    58de:	fe 85       	ldd	r31, Y+14	; 0x0e
    58e0:	60 83       	st	Z, r22
    58e2:	cc 0c       	add	r12, r12
    58e4:	dd 1c       	adc	r13, r13
    58e6:	ee 1c       	adc	r14, r14
    58e8:	ff 1c       	adc	r15, r15
    58ea:	d7 01       	movw	r26, r14
    58ec:	c6 01       	movw	r24, r12
    58ee:	88 0f       	add	r24, r24
    58f0:	99 1f       	adc	r25, r25
    58f2:	aa 1f       	adc	r26, r26
    58f4:	bb 1f       	adc	r27, r27
    58f6:	88 0f       	add	r24, r24
    58f8:	99 1f       	adc	r25, r25
    58fa:	aa 1f       	adc	r26, r26
    58fc:	bb 1f       	adc	r27, r27
    58fe:	c8 0e       	add	r12, r24
    5900:	d9 1e       	adc	r13, r25
    5902:	ea 1e       	adc	r14, r26
    5904:	fb 1e       	adc	r15, r27
    5906:	11 50       	subi	r17, 0x01	; 1
    5908:	a0 f6       	brcc	.-88     	; 0x58b2 <write_zahl+0x98>
    590a:	2c e0       	ldi	r18, 0x0C	; 12
    590c:	f8 89       	ldd	r31, Y+16	; 0x10
    590e:	2f 1b       	sub	r18, r31
    5910:	82 2f       	mov	r24, r18
    5912:	80 1b       	sub	r24, r16
    5914:	00 23       	and	r16, r16
    5916:	09 f4       	brne	.+2      	; 0x591a <write_zahl+0x100>
    5918:	85 c0       	rjmp	.+266    	; 0x5a24 <write_zahl+0x20a>
    591a:	fe 01       	movw	r30, r28
    591c:	31 96       	adiw	r30, 0x01	; 1
    591e:	a1 e0       	ldi	r26, 0x01	; 1
    5920:	b0 e0       	ldi	r27, 0x00	; 0
    5922:	ac 0f       	add	r26, r28
    5924:	bd 1f       	adc	r27, r29
    5926:	a8 0f       	add	r26, r24
    5928:	b1 1d       	adc	r27, r1
    592a:	9c 91       	ld	r25, X
    592c:	91 93       	st	Z+, r25
    592e:	8f 5f       	subi	r24, 0xFF	; 255
    5930:	28 13       	cpse	r18, r24
    5932:	f5 cf       	rjmp	.-22     	; 0x591e <write_zahl+0x104>
    5934:	8f 85       	ldd	r24, Y+15	; 0x0f
    5936:	81 11       	cpse	r24, r1
    5938:	52 c0       	rjmp	.+164    	; 0x59de <write_zahl+0x1c4>
    593a:	f1 01       	movw	r30, r2
    593c:	81 e0       	ldi	r24, 0x01	; 1
    593e:	90 e0       	ldi	r25, 0x00	; 0
    5940:	8c 0f       	add	r24, r28
    5942:	9d 1f       	adc	r25, r29
    5944:	e8 0f       	add	r30, r24
    5946:	f9 1f       	adc	r31, r25
    5948:	10 82       	st	Z, r1
    594a:	99 89       	ldd	r25, Y+17	; 0x11
    594c:	99 23       	and	r25, r25
    594e:	21 f1       	breq	.+72     	; 0x5998 <write_zahl+0x17e>
    5950:	89 81       	ldd	r24, Y+1	; 0x01
    5952:	80 33       	cpi	r24, 0x30	; 48
    5954:	09 f5       	brne	.+66     	; 0x5998 <write_zahl+0x17e>
    5956:	a1 01       	movw	r20, r2
    5958:	41 50       	subi	r20, 0x01	; 1
    595a:	51 09       	sbc	r21, r1
    595c:	14 16       	cp	r1, r20
    595e:	15 06       	cpc	r1, r21
    5960:	dc f4       	brge	.+54     	; 0x5998 <write_zahl+0x17e>
    5962:	80 e0       	ldi	r24, 0x00	; 0
    5964:	90 e0       	ldi	r25, 0x00	; 0
    5966:	20 e0       	ldi	r18, 0x00	; 0
    5968:	60 e2       	ldi	r22, 0x20	; 32
    596a:	03 c0       	rjmp	.+6      	; 0x5972 <write_zahl+0x158>
    596c:	84 17       	cp	r24, r20
    596e:	95 07       	cpc	r25, r21
    5970:	9c f4       	brge	.+38     	; 0x5998 <write_zahl+0x17e>
    5972:	2f 5f       	subi	r18, 0xFF	; 255
    5974:	e1 e0       	ldi	r30, 0x01	; 1
    5976:	f0 e0       	ldi	r31, 0x00	; 0
    5978:	ec 0f       	add	r30, r28
    597a:	fd 1f       	adc	r31, r29
    597c:	e8 0f       	add	r30, r24
    597e:	f9 1f       	adc	r31, r25
    5980:	60 83       	st	Z, r22
    5982:	82 2f       	mov	r24, r18
    5984:	90 e0       	ldi	r25, 0x00	; 0
    5986:	e1 e0       	ldi	r30, 0x01	; 1
    5988:	f0 e0       	ldi	r31, 0x00	; 0
    598a:	ec 0f       	add	r30, r28
    598c:	fd 1f       	adc	r31, r29
    598e:	e8 0f       	add	r30, r24
    5990:	f9 1f       	adc	r31, r25
    5992:	30 81       	ld	r19, Z
    5994:	30 33       	cpi	r19, 0x30	; 48
    5996:	51 f3       	breq	.-44     	; 0x596c <write_zahl+0x152>
    5998:	ae 01       	movw	r20, r28
    599a:	4f 5f       	subi	r20, 0xFF	; 255
    599c:	5f 4f       	sbci	r21, 0xFF	; 255
    599e:	6b 89       	ldd	r22, Y+19	; 0x13
    59a0:	8a 89       	ldd	r24, Y+18	; 0x12
    59a2:	0e 94 ee 2b 	call	0x57dc	; 0x57dc <write_text_ram>
    59a6:	63 96       	adiw	r28, 0x13	; 19
    59a8:	0f b6       	in	r0, 0x3f	; 63
    59aa:	f8 94       	cli
    59ac:	de bf       	out	0x3e, r29	; 62
    59ae:	0f be       	out	0x3f, r0	; 63
    59b0:	cd bf       	out	0x3d, r28	; 61
    59b2:	df 91       	pop	r29
    59b4:	cf 91       	pop	r28
    59b6:	1f 91       	pop	r17
    59b8:	0f 91       	pop	r16
    59ba:	ff 90       	pop	r15
    59bc:	ef 90       	pop	r14
    59be:	df 90       	pop	r13
    59c0:	cf 90       	pop	r12
    59c2:	bf 90       	pop	r11
    59c4:	af 90       	pop	r10
    59c6:	9f 90       	pop	r9
    59c8:	8f 90       	pop	r8
    59ca:	7f 90       	pop	r7
    59cc:	6f 90       	pop	r6
    59ce:	5f 90       	pop	r5
    59d0:	4f 90       	pop	r4
    59d2:	3f 90       	pop	r3
    59d4:	2f 90       	pop	r2
    59d6:	08 95       	ret
    59d8:	21 e0       	ldi	r18, 0x01	; 1
    59da:	29 8b       	std	Y+17, r18	; 0x11
    59dc:	42 cf       	rjmp	.-380    	; 0x5862 <write_zahl+0x48>
    59de:	0f 5f       	subi	r16, 0xFF	; 255
    59e0:	8e e2       	ldi	r24, 0x2E	; 46
    59e2:	e1 e0       	ldi	r30, 0x01	; 1
    59e4:	f0 e0       	ldi	r31, 0x00	; 0
    59e6:	ec 0f       	add	r30, r28
    59e8:	fd 1f       	adc	r31, r29
    59ea:	e2 0d       	add	r30, r2
    59ec:	f3 1d       	adc	r31, r3
    59ee:	80 83       	st	Z, r24
    59f0:	e0 2f       	mov	r30, r16
    59f2:	20 1b       	sub	r18, r16
    59f4:	82 2f       	mov	r24, r18
    59f6:	8e 0f       	add	r24, r30
    59f8:	a1 e0       	ldi	r26, 0x01	; 1
    59fa:	b0 e0       	ldi	r27, 0x00	; 0
    59fc:	ac 0f       	add	r26, r28
    59fe:	bd 1f       	adc	r27, r29
    5a00:	a8 0f       	add	r26, r24
    5a02:	b1 1d       	adc	r27, r1
    5a04:	8c 91       	ld	r24, X
    5a06:	a1 e0       	ldi	r26, 0x01	; 1
    5a08:	b0 e0       	ldi	r27, 0x00	; 0
    5a0a:	ac 0f       	add	r26, r28
    5a0c:	bd 1f       	adc	r27, r29
    5a0e:	ae 0f       	add	r26, r30
    5a10:	b1 1d       	adc	r27, r1
    5a12:	8c 93       	st	X, r24
    5a14:	ef 5f       	subi	r30, 0xFF	; 255
    5a16:	8e 2f       	mov	r24, r30
    5a18:	80 1b       	sub	r24, r16
    5a1a:	9f 85       	ldd	r25, Y+15	; 0x0f
    5a1c:	89 17       	cp	r24, r25
    5a1e:	50 f3       	brcs	.-44     	; 0x59f4 <write_zahl+0x1da>
    5a20:	f0 e0       	ldi	r31, 0x00	; 0
    5a22:	8c cf       	rjmp	.-232    	; 0x593c <write_zahl+0x122>
    5a24:	ef 85       	ldd	r30, Y+15	; 0x0f
    5a26:	ee 23       	and	r30, r30
    5a28:	21 f0       	breq	.+8      	; 0x5a32 <write_zahl+0x218>
    5a2a:	8e e2       	ldi	r24, 0x2E	; 46
    5a2c:	89 83       	std	Y+1, r24	; 0x01
    5a2e:	01 e0       	ldi	r16, 0x01	; 1
    5a30:	df cf       	rjmp	.-66     	; 0x59f0 <write_zahl+0x1d6>
    5a32:	e0 e0       	ldi	r30, 0x00	; 0
    5a34:	f0 e0       	ldi	r31, 0x00	; 0
    5a36:	82 cf       	rjmp	.-252    	; 0x593c <write_zahl+0x122>

00005a38 <lcd_init>:
    5a38:	df 93       	push	r29
    5a3a:	38 9a       	sbi	0x07, 0	; 7
    5a3c:	39 9a       	sbi	0x07, 1	; 7
    5a3e:	d2 e3       	ldi	r29, 0x32	; 50
    5a40:	88 e7       	ldi	r24, 0x78	; 120
    5a42:	0e 94 63 2b 	call	0x56c6	; 0x56c6 <delay_nop>
    5a46:	d1 50       	subi	r29, 0x01	; 1
    5a48:	d9 f7       	brne	.-10     	; 0x5a40 <lcd_init+0x8>
    5a4a:	64 e3       	ldi	r22, 0x34	; 52
    5a4c:	83 e4       	ldi	r24, 0x43	; 67
    5a4e:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <write_lcd_f>
    5a52:	64 e3       	ldi	r22, 0x34	; 52
    5a54:	83 e4       	ldi	r24, 0x43	; 67
    5a56:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <write_lcd_f>
    5a5a:	69 e0       	ldi	r22, 0x09	; 9
    5a5c:	83 e4       	ldi	r24, 0x43	; 67
    5a5e:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <write_lcd_f>
    5a62:	60 e3       	ldi	r22, 0x30	; 48
    5a64:	83 e4       	ldi	r24, 0x43	; 67
    5a66:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <write_lcd_f>
    5a6a:	6c e0       	ldi	r22, 0x0C	; 12
    5a6c:	83 e4       	ldi	r24, 0x43	; 67
    5a6e:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <write_lcd_f>
    5a72:	61 e0       	ldi	r22, 0x01	; 1
    5a74:	83 e4       	ldi	r24, 0x43	; 67
    5a76:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <write_lcd_f>
    5a7a:	d8 e0       	ldi	r29, 0x08	; 8
    5a7c:	88 e7       	ldi	r24, 0x78	; 120
    5a7e:	0e 94 63 2b 	call	0x56c6	; 0x56c6 <delay_nop>
    5a82:	d1 50       	subi	r29, 0x01	; 1
    5a84:	d9 f7       	brne	.-10     	; 0x5a7c <lcd_init+0x44>
    5a86:	67 e0       	ldi	r22, 0x07	; 7
    5a88:	83 e4       	ldi	r24, 0x43	; 67
    5a8a:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <write_lcd_f>
    5a8e:	df 91       	pop	r29
    5a90:	0c 94 75 2a 	jmp	0x54ea	; 0x54ea <init_Timer0_1ms_int>

00005a94 <clear_lcd>:
    5a94:	df 93       	push	r29
    5a96:	61 e0       	ldi	r22, 0x01	; 1
    5a98:	83 e4       	ldi	r24, 0x43	; 67
    5a9a:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <write_lcd_f>
    5a9e:	d8 e0       	ldi	r29, 0x08	; 8
    5aa0:	88 e7       	ldi	r24, 0x78	; 120
    5aa2:	0e 94 63 2b 	call	0x56c6	; 0x56c6 <delay_nop>
    5aa6:	d1 50       	subi	r29, 0x01	; 1
    5aa8:	d9 f7       	brne	.-10     	; 0x5aa0 <clear_lcd+0xc>
    5aaa:	df 91       	pop	r29
    5aac:	08 95       	ret

00005aae <LED_Show>:
    5aae:	cf 93       	push	r28
    5ab0:	df 93       	push	r29
    5ab2:	1f 92       	push	r1
    5ab4:	cd b7       	in	r28, 0x3d	; 61
    5ab6:	de b7       	in	r29, 0x3e	; 62
    5ab8:	85 e2       	ldi	r24, 0x25	; 37
    5aba:	90 e0       	ldi	r25, 0x00	; 0
    5abc:	21 e0       	ldi	r18, 0x01	; 1
    5abe:	fc 01       	movw	r30, r24
    5ac0:	20 83       	st	Z, r18
    5ac2:	19 82       	std	Y+1, r1	; 0x01
    5ac4:	17 c0       	rjmp	.+46     	; 0x5af4 <LED_Show+0x46>
    5ac6:	62 e3       	ldi	r22, 0x32	; 50
    5ac8:	70 e0       	ldi	r23, 0x00	; 0
    5aca:	80 e0       	ldi	r24, 0x00	; 0
    5acc:	90 e0       	ldi	r25, 0x00	; 0
    5ace:	0e 94 23 2b 	call	0x5646	; 0x5646 <wait_1ms>
    5ad2:	85 e2       	ldi	r24, 0x25	; 37
    5ad4:	90 e0       	ldi	r25, 0x00	; 0
    5ad6:	29 81       	ldd	r18, Y+1	; 0x01
    5ad8:	42 2f       	mov	r20, r18
    5ada:	50 e0       	ldi	r21, 0x00	; 0
    5adc:	21 e0       	ldi	r18, 0x01	; 1
    5ade:	30 e0       	ldi	r19, 0x00	; 0
    5ae0:	02 c0       	rjmp	.+4      	; 0x5ae6 <LED_Show+0x38>
    5ae2:	22 0f       	add	r18, r18
    5ae4:	33 1f       	adc	r19, r19
    5ae6:	4a 95       	dec	r20
    5ae8:	e2 f7       	brpl	.-8      	; 0x5ae2 <LED_Show+0x34>
    5aea:	fc 01       	movw	r30, r24
    5aec:	20 83       	st	Z, r18
    5aee:	89 81       	ldd	r24, Y+1	; 0x01
    5af0:	8f 5f       	subi	r24, 0xFF	; 255
    5af2:	89 83       	std	Y+1, r24	; 0x01
    5af4:	89 81       	ldd	r24, Y+1	; 0x01
    5af6:	88 30       	cpi	r24, 0x08	; 8
    5af8:	30 f3       	brcs	.-52     	; 0x5ac6 <LED_Show+0x18>
    5afa:	85 e2       	ldi	r24, 0x25	; 37
    5afc:	90 e0       	ldi	r25, 0x00	; 0
    5afe:	20 e8       	ldi	r18, 0x80	; 128
    5b00:	fc 01       	movw	r30, r24
    5b02:	20 83       	st	Z, r18
    5b04:	19 82       	std	Y+1, r1	; 0x01
    5b06:	17 c0       	rjmp	.+46     	; 0x5b36 <LED_Show+0x88>
    5b08:	62 e3       	ldi	r22, 0x32	; 50
    5b0a:	70 e0       	ldi	r23, 0x00	; 0
    5b0c:	80 e0       	ldi	r24, 0x00	; 0
    5b0e:	90 e0       	ldi	r25, 0x00	; 0
    5b10:	0e 94 23 2b 	call	0x5646	; 0x5646 <wait_1ms>
    5b14:	85 e2       	ldi	r24, 0x25	; 37
    5b16:	90 e0       	ldi	r25, 0x00	; 0
    5b18:	29 81       	ldd	r18, Y+1	; 0x01
    5b1a:	42 2f       	mov	r20, r18
    5b1c:	50 e0       	ldi	r21, 0x00	; 0
    5b1e:	20 e8       	ldi	r18, 0x80	; 128
    5b20:	30 e0       	ldi	r19, 0x00	; 0
    5b22:	02 c0       	rjmp	.+4      	; 0x5b28 <LED_Show+0x7a>
    5b24:	35 95       	asr	r19
    5b26:	27 95       	ror	r18
    5b28:	4a 95       	dec	r20
    5b2a:	e2 f7       	brpl	.-8      	; 0x5b24 <LED_Show+0x76>
    5b2c:	fc 01       	movw	r30, r24
    5b2e:	20 83       	st	Z, r18
    5b30:	89 81       	ldd	r24, Y+1	; 0x01
    5b32:	8f 5f       	subi	r24, 0xFF	; 255
    5b34:	89 83       	std	Y+1, r24	; 0x01
    5b36:	89 81       	ldd	r24, Y+1	; 0x01
    5b38:	88 30       	cpi	r24, 0x08	; 8
    5b3a:	30 f3       	brcs	.-52     	; 0x5b08 <LED_Show+0x5a>
    5b3c:	64 e6       	ldi	r22, 0x64	; 100
    5b3e:	70 e0       	ldi	r23, 0x00	; 0
    5b40:	80 e0       	ldi	r24, 0x00	; 0
    5b42:	90 e0       	ldi	r25, 0x00	; 0
    5b44:	0e 94 23 2b 	call	0x5646	; 0x5646 <wait_1ms>
    5b48:	85 e2       	ldi	r24, 0x25	; 37
    5b4a:	90 e0       	ldi	r25, 0x00	; 0
    5b4c:	fc 01       	movw	r30, r24
    5b4e:	10 82       	st	Z, r1
    5b50:	00 00       	nop
    5b52:	0f 90       	pop	r0
    5b54:	df 91       	pop	r29
    5b56:	cf 91       	pop	r28
    5b58:	08 95       	ret

00005b5a <init_BT_CAR_V2_0>:
    5b5a:	cf 93       	push	r28
    5b5c:	df 93       	push	r29
    5b5e:	cd b7       	in	r28, 0x3d	; 61
    5b60:	de b7       	in	r29, 0x3e	; 62
    5b62:	81 e2       	ldi	r24, 0x21	; 33
    5b64:	90 e0       	ldi	r25, 0x00	; 0
    5b66:	20 e6       	ldi	r18, 0x60	; 96
    5b68:	fc 01       	movw	r30, r24
    5b6a:	20 83       	st	Z, r18
    5b6c:	84 e2       	ldi	r24, 0x24	; 36
    5b6e:	90 e0       	ldi	r25, 0x00	; 0
    5b70:	2f ef       	ldi	r18, 0xFF	; 255
    5b72:	fc 01       	movw	r30, r24
    5b74:	20 83       	st	Z, r18
    5b76:	8a e2       	ldi	r24, 0x2A	; 42
    5b78:	90 e0       	ldi	r25, 0x00	; 0
    5b7a:	2c ef       	ldi	r18, 0xFC	; 252
    5b7c:	fc 01       	movw	r30, r24
    5b7e:	20 83       	st	Z, r18
    5b80:	78 94       	sei
    5b82:	0e 94 1c 2d 	call	0x5a38	; 0x5a38 <lcd_init>
    5b86:	0e 94 4a 2d 	call	0x5a94	; 0x5a94 <clear_lcd>
    5b8a:	0e 94 57 2d 	call	0x5aae	; 0x5aae <LED_Show>
    5b8e:	00 00       	nop
    5b90:	df 91       	pop	r29
    5b92:	cf 91       	pop	r28
    5b94:	08 95       	ret

00005b96 <__cmpsf2>:
    5b96:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__fp_cmp>
    5b9a:	08 f4       	brcc	.+2      	; 0x5b9e <__cmpsf2+0x8>
    5b9c:	81 e0       	ldi	r24, 0x01	; 1
    5b9e:	08 95       	ret

00005ba0 <__fixunssfsi>:
    5ba0:	0e 94 2b 2e 	call	0x5c56	; 0x5c56 <__fp_splitA>
    5ba4:	88 f0       	brcs	.+34     	; 0x5bc8 <__fixunssfsi+0x28>
    5ba6:	9f 57       	subi	r25, 0x7F	; 127
    5ba8:	98 f0       	brcs	.+38     	; 0x5bd0 <__fixunssfsi+0x30>
    5baa:	b9 2f       	mov	r27, r25
    5bac:	99 27       	eor	r25, r25
    5bae:	b7 51       	subi	r27, 0x17	; 23
    5bb0:	b0 f0       	brcs	.+44     	; 0x5bde <__fixunssfsi+0x3e>
    5bb2:	e1 f0       	breq	.+56     	; 0x5bec <__fixunssfsi+0x4c>
    5bb4:	66 0f       	add	r22, r22
    5bb6:	77 1f       	adc	r23, r23
    5bb8:	88 1f       	adc	r24, r24
    5bba:	99 1f       	adc	r25, r25
    5bbc:	1a f0       	brmi	.+6      	; 0x5bc4 <__fixunssfsi+0x24>
    5bbe:	ba 95       	dec	r27
    5bc0:	c9 f7       	brne	.-14     	; 0x5bb4 <__fixunssfsi+0x14>
    5bc2:	14 c0       	rjmp	.+40     	; 0x5bec <__fixunssfsi+0x4c>
    5bc4:	b1 30       	cpi	r27, 0x01	; 1
    5bc6:	91 f0       	breq	.+36     	; 0x5bec <__fixunssfsi+0x4c>
    5bc8:	0e 94 45 2e 	call	0x5c8a	; 0x5c8a <__fp_zero>
    5bcc:	b1 e0       	ldi	r27, 0x01	; 1
    5bce:	08 95       	ret
    5bd0:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__fp_zero>
    5bd4:	67 2f       	mov	r22, r23
    5bd6:	78 2f       	mov	r23, r24
    5bd8:	88 27       	eor	r24, r24
    5bda:	b8 5f       	subi	r27, 0xF8	; 248
    5bdc:	39 f0       	breq	.+14     	; 0x5bec <__fixunssfsi+0x4c>
    5bde:	b9 3f       	cpi	r27, 0xF9	; 249
    5be0:	cc f3       	brlt	.-14     	; 0x5bd4 <__fixunssfsi+0x34>
    5be2:	86 95       	lsr	r24
    5be4:	77 95       	ror	r23
    5be6:	67 95       	ror	r22
    5be8:	b3 95       	inc	r27
    5bea:	d9 f7       	brne	.-10     	; 0x5be2 <__fixunssfsi+0x42>
    5bec:	3e f4       	brtc	.+14     	; 0x5bfc <__fixunssfsi+0x5c>
    5bee:	90 95       	com	r25
    5bf0:	80 95       	com	r24
    5bf2:	70 95       	com	r23
    5bf4:	61 95       	neg	r22
    5bf6:	7f 4f       	sbci	r23, 0xFF	; 255
    5bf8:	8f 4f       	sbci	r24, 0xFF	; 255
    5bfa:	9f 4f       	sbci	r25, 0xFF	; 255
    5bfc:	08 95       	ret

00005bfe <__fp_cmp>:
    5bfe:	99 0f       	add	r25, r25
    5c00:	00 08       	sbc	r0, r0
    5c02:	55 0f       	add	r21, r21
    5c04:	aa 0b       	sbc	r26, r26
    5c06:	e0 e8       	ldi	r30, 0x80	; 128
    5c08:	fe ef       	ldi	r31, 0xFE	; 254
    5c0a:	16 16       	cp	r1, r22
    5c0c:	17 06       	cpc	r1, r23
    5c0e:	e8 07       	cpc	r30, r24
    5c10:	f9 07       	cpc	r31, r25
    5c12:	c0 f0       	brcs	.+48     	; 0x5c44 <__fp_cmp+0x46>
    5c14:	12 16       	cp	r1, r18
    5c16:	13 06       	cpc	r1, r19
    5c18:	e4 07       	cpc	r30, r20
    5c1a:	f5 07       	cpc	r31, r21
    5c1c:	98 f0       	brcs	.+38     	; 0x5c44 <__fp_cmp+0x46>
    5c1e:	62 1b       	sub	r22, r18
    5c20:	73 0b       	sbc	r23, r19
    5c22:	84 0b       	sbc	r24, r20
    5c24:	95 0b       	sbc	r25, r21
    5c26:	39 f4       	brne	.+14     	; 0x5c36 <__fp_cmp+0x38>
    5c28:	0a 26       	eor	r0, r26
    5c2a:	61 f0       	breq	.+24     	; 0x5c44 <__fp_cmp+0x46>
    5c2c:	23 2b       	or	r18, r19
    5c2e:	24 2b       	or	r18, r20
    5c30:	25 2b       	or	r18, r21
    5c32:	21 f4       	brne	.+8      	; 0x5c3c <__fp_cmp+0x3e>
    5c34:	08 95       	ret
    5c36:	0a 26       	eor	r0, r26
    5c38:	09 f4       	brne	.+2      	; 0x5c3c <__fp_cmp+0x3e>
    5c3a:	a1 40       	sbci	r26, 0x01	; 1
    5c3c:	a6 95       	lsr	r26
    5c3e:	8f ef       	ldi	r24, 0xFF	; 255
    5c40:	81 1d       	adc	r24, r1
    5c42:	81 1d       	adc	r24, r1
    5c44:	08 95       	ret

00005c46 <__fp_split3>:
    5c46:	57 fd       	sbrc	r21, 7
    5c48:	90 58       	subi	r25, 0x80	; 128
    5c4a:	44 0f       	add	r20, r20
    5c4c:	55 1f       	adc	r21, r21
    5c4e:	59 f0       	breq	.+22     	; 0x5c66 <__fp_splitA+0x10>
    5c50:	5f 3f       	cpi	r21, 0xFF	; 255
    5c52:	71 f0       	breq	.+28     	; 0x5c70 <__fp_splitA+0x1a>
    5c54:	47 95       	ror	r20

00005c56 <__fp_splitA>:
    5c56:	88 0f       	add	r24, r24
    5c58:	97 fb       	bst	r25, 7
    5c5a:	99 1f       	adc	r25, r25
    5c5c:	61 f0       	breq	.+24     	; 0x5c76 <__fp_splitA+0x20>
    5c5e:	9f 3f       	cpi	r25, 0xFF	; 255
    5c60:	79 f0       	breq	.+30     	; 0x5c80 <__fp_splitA+0x2a>
    5c62:	87 95       	ror	r24
    5c64:	08 95       	ret
    5c66:	12 16       	cp	r1, r18
    5c68:	13 06       	cpc	r1, r19
    5c6a:	14 06       	cpc	r1, r20
    5c6c:	55 1f       	adc	r21, r21
    5c6e:	f2 cf       	rjmp	.-28     	; 0x5c54 <__fp_split3+0xe>
    5c70:	46 95       	lsr	r20
    5c72:	f1 df       	rcall	.-30     	; 0x5c56 <__fp_splitA>
    5c74:	08 c0       	rjmp	.+16     	; 0x5c86 <__fp_splitA+0x30>
    5c76:	16 16       	cp	r1, r22
    5c78:	17 06       	cpc	r1, r23
    5c7a:	18 06       	cpc	r1, r24
    5c7c:	99 1f       	adc	r25, r25
    5c7e:	f1 cf       	rjmp	.-30     	; 0x5c62 <__fp_splitA+0xc>
    5c80:	86 95       	lsr	r24
    5c82:	71 05       	cpc	r23, r1
    5c84:	61 05       	cpc	r22, r1
    5c86:	08 94       	sec
    5c88:	08 95       	ret

00005c8a <__fp_zero>:
    5c8a:	e8 94       	clt

00005c8c <__fp_szero>:
    5c8c:	bb 27       	eor	r27, r27
    5c8e:	66 27       	eor	r22, r22
    5c90:	77 27       	eor	r23, r23
    5c92:	cb 01       	movw	r24, r22
    5c94:	97 f9       	bld	r25, 7
    5c96:	08 95       	ret

00005c98 <__gesf2>:
    5c98:	0e 94 ff 2d 	call	0x5bfe	; 0x5bfe <__fp_cmp>
    5c9c:	08 f4       	brcc	.+2      	; 0x5ca0 <__gesf2+0x8>
    5c9e:	8f ef       	ldi	r24, 0xFF	; 255
    5ca0:	08 95       	ret

00005ca2 <__mulsf3>:
    5ca2:	0e 94 64 2e 	call	0x5cc8	; 0x5cc8 <__mulsf3x>
    5ca6:	0c 94 d5 2e 	jmp	0x5daa	; 0x5daa <__fp_round>
    5caa:	0e 94 c7 2e 	call	0x5d8e	; 0x5d8e <__fp_pscA>
    5cae:	38 f0       	brcs	.+14     	; 0x5cbe <__mulsf3+0x1c>
    5cb0:	0e 94 ce 2e 	call	0x5d9c	; 0x5d9c <__fp_pscB>
    5cb4:	20 f0       	brcs	.+8      	; 0x5cbe <__mulsf3+0x1c>
    5cb6:	95 23       	and	r25, r21
    5cb8:	11 f0       	breq	.+4      	; 0x5cbe <__mulsf3+0x1c>
    5cba:	0c 94 be 2e 	jmp	0x5d7c	; 0x5d7c <__fp_inf>
    5cbe:	0c 94 c4 2e 	jmp	0x5d88	; 0x5d88 <__fp_nan>
    5cc2:	11 24       	eor	r1, r1
    5cc4:	0c 94 46 2e 	jmp	0x5c8c	; 0x5c8c <__fp_szero>

00005cc8 <__mulsf3x>:
    5cc8:	0e 94 23 2e 	call	0x5c46	; 0x5c46 <__fp_split3>
    5ccc:	70 f3       	brcs	.-36     	; 0x5caa <__mulsf3+0x8>

00005cce <__mulsf3_pse>:
    5cce:	95 9f       	mul	r25, r21
    5cd0:	c1 f3       	breq	.-16     	; 0x5cc2 <__mulsf3+0x20>
    5cd2:	95 0f       	add	r25, r21
    5cd4:	50 e0       	ldi	r21, 0x00	; 0
    5cd6:	55 1f       	adc	r21, r21
    5cd8:	62 9f       	mul	r22, r18
    5cda:	f0 01       	movw	r30, r0
    5cdc:	72 9f       	mul	r23, r18
    5cde:	bb 27       	eor	r27, r27
    5ce0:	f0 0d       	add	r31, r0
    5ce2:	b1 1d       	adc	r27, r1
    5ce4:	63 9f       	mul	r22, r19
    5ce6:	aa 27       	eor	r26, r26
    5ce8:	f0 0d       	add	r31, r0
    5cea:	b1 1d       	adc	r27, r1
    5cec:	aa 1f       	adc	r26, r26
    5cee:	64 9f       	mul	r22, r20
    5cf0:	66 27       	eor	r22, r22
    5cf2:	b0 0d       	add	r27, r0
    5cf4:	a1 1d       	adc	r26, r1
    5cf6:	66 1f       	adc	r22, r22
    5cf8:	82 9f       	mul	r24, r18
    5cfa:	22 27       	eor	r18, r18
    5cfc:	b0 0d       	add	r27, r0
    5cfe:	a1 1d       	adc	r26, r1
    5d00:	62 1f       	adc	r22, r18
    5d02:	73 9f       	mul	r23, r19
    5d04:	b0 0d       	add	r27, r0
    5d06:	a1 1d       	adc	r26, r1
    5d08:	62 1f       	adc	r22, r18
    5d0a:	83 9f       	mul	r24, r19
    5d0c:	a0 0d       	add	r26, r0
    5d0e:	61 1d       	adc	r22, r1
    5d10:	22 1f       	adc	r18, r18
    5d12:	74 9f       	mul	r23, r20
    5d14:	33 27       	eor	r19, r19
    5d16:	a0 0d       	add	r26, r0
    5d18:	61 1d       	adc	r22, r1
    5d1a:	23 1f       	adc	r18, r19
    5d1c:	84 9f       	mul	r24, r20
    5d1e:	60 0d       	add	r22, r0
    5d20:	21 1d       	adc	r18, r1
    5d22:	82 2f       	mov	r24, r18
    5d24:	76 2f       	mov	r23, r22
    5d26:	6a 2f       	mov	r22, r26
    5d28:	11 24       	eor	r1, r1
    5d2a:	9f 57       	subi	r25, 0x7F	; 127
    5d2c:	50 40       	sbci	r21, 0x00	; 0
    5d2e:	9a f0       	brmi	.+38     	; 0x5d56 <__mulsf3_pse+0x88>
    5d30:	f1 f0       	breq	.+60     	; 0x5d6e <__mulsf3_pse+0xa0>
    5d32:	88 23       	and	r24, r24
    5d34:	4a f0       	brmi	.+18     	; 0x5d48 <__mulsf3_pse+0x7a>
    5d36:	ee 0f       	add	r30, r30
    5d38:	ff 1f       	adc	r31, r31
    5d3a:	bb 1f       	adc	r27, r27
    5d3c:	66 1f       	adc	r22, r22
    5d3e:	77 1f       	adc	r23, r23
    5d40:	88 1f       	adc	r24, r24
    5d42:	91 50       	subi	r25, 0x01	; 1
    5d44:	50 40       	sbci	r21, 0x00	; 0
    5d46:	a9 f7       	brne	.-22     	; 0x5d32 <__mulsf3_pse+0x64>
    5d48:	9e 3f       	cpi	r25, 0xFE	; 254
    5d4a:	51 05       	cpc	r21, r1
    5d4c:	80 f0       	brcs	.+32     	; 0x5d6e <__mulsf3_pse+0xa0>
    5d4e:	0c 94 be 2e 	jmp	0x5d7c	; 0x5d7c <__fp_inf>
    5d52:	0c 94 46 2e 	jmp	0x5c8c	; 0x5c8c <__fp_szero>
    5d56:	5f 3f       	cpi	r21, 0xFF	; 255
    5d58:	e4 f3       	brlt	.-8      	; 0x5d52 <__mulsf3_pse+0x84>
    5d5a:	98 3e       	cpi	r25, 0xE8	; 232
    5d5c:	d4 f3       	brlt	.-12     	; 0x5d52 <__mulsf3_pse+0x84>
    5d5e:	86 95       	lsr	r24
    5d60:	77 95       	ror	r23
    5d62:	67 95       	ror	r22
    5d64:	b7 95       	ror	r27
    5d66:	f7 95       	ror	r31
    5d68:	e7 95       	ror	r30
    5d6a:	9f 5f       	subi	r25, 0xFF	; 255
    5d6c:	c1 f7       	brne	.-16     	; 0x5d5e <__mulsf3_pse+0x90>
    5d6e:	fe 2b       	or	r31, r30
    5d70:	88 0f       	add	r24, r24
    5d72:	91 1d       	adc	r25, r1
    5d74:	96 95       	lsr	r25
    5d76:	87 95       	ror	r24
    5d78:	97 f9       	bld	r25, 7
    5d7a:	08 95       	ret

00005d7c <__fp_inf>:
    5d7c:	97 f9       	bld	r25, 7
    5d7e:	9f 67       	ori	r25, 0x7F	; 127
    5d80:	80 e8       	ldi	r24, 0x80	; 128
    5d82:	70 e0       	ldi	r23, 0x00	; 0
    5d84:	60 e0       	ldi	r22, 0x00	; 0
    5d86:	08 95       	ret

00005d88 <__fp_nan>:
    5d88:	9f ef       	ldi	r25, 0xFF	; 255
    5d8a:	80 ec       	ldi	r24, 0xC0	; 192
    5d8c:	08 95       	ret

00005d8e <__fp_pscA>:
    5d8e:	00 24       	eor	r0, r0
    5d90:	0a 94       	dec	r0
    5d92:	16 16       	cp	r1, r22
    5d94:	17 06       	cpc	r1, r23
    5d96:	18 06       	cpc	r1, r24
    5d98:	09 06       	cpc	r0, r25
    5d9a:	08 95       	ret

00005d9c <__fp_pscB>:
    5d9c:	00 24       	eor	r0, r0
    5d9e:	0a 94       	dec	r0
    5da0:	12 16       	cp	r1, r18
    5da2:	13 06       	cpc	r1, r19
    5da4:	14 06       	cpc	r1, r20
    5da6:	05 06       	cpc	r0, r21
    5da8:	08 95       	ret

00005daa <__fp_round>:
    5daa:	09 2e       	mov	r0, r25
    5dac:	03 94       	inc	r0
    5dae:	00 0c       	add	r0, r0
    5db0:	11 f4       	brne	.+4      	; 0x5db6 <__fp_round+0xc>
    5db2:	88 23       	and	r24, r24
    5db4:	52 f0       	brmi	.+20     	; 0x5dca <__fp_round+0x20>
    5db6:	bb 0f       	add	r27, r27
    5db8:	40 f4       	brcc	.+16     	; 0x5dca <__fp_round+0x20>
    5dba:	bf 2b       	or	r27, r31
    5dbc:	11 f4       	brne	.+4      	; 0x5dc2 <__fp_round+0x18>
    5dbe:	60 ff       	sbrs	r22, 0
    5dc0:	04 c0       	rjmp	.+8      	; 0x5dca <__fp_round+0x20>
    5dc2:	6f 5f       	subi	r22, 0xFF	; 255
    5dc4:	7f 4f       	sbci	r23, 0xFF	; 255
    5dc6:	8f 4f       	sbci	r24, 0xFF	; 255
    5dc8:	9f 4f       	sbci	r25, 0xFF	; 255
    5dca:	08 95       	ret

00005dcc <__divmodhi4>:
    5dcc:	97 fb       	bst	r25, 7
    5dce:	07 2e       	mov	r0, r23
    5dd0:	16 f4       	brtc	.+4      	; 0x5dd6 <__divmodhi4+0xa>
    5dd2:	00 94       	com	r0
    5dd4:	07 d0       	rcall	.+14     	; 0x5de4 <__divmodhi4_neg1>
    5dd6:	77 fd       	sbrc	r23, 7
    5dd8:	09 d0       	rcall	.+18     	; 0x5dec <__divmodhi4_neg2>
    5dda:	0e 94 22 2f 	call	0x5e44	; 0x5e44 <__udivmodhi4>
    5dde:	07 fc       	sbrc	r0, 7
    5de0:	05 d0       	rcall	.+10     	; 0x5dec <__divmodhi4_neg2>
    5de2:	3e f4       	brtc	.+14     	; 0x5df2 <__divmodhi4_exit>

00005de4 <__divmodhi4_neg1>:
    5de4:	90 95       	com	r25
    5de6:	81 95       	neg	r24
    5de8:	9f 4f       	sbci	r25, 0xFF	; 255
    5dea:	08 95       	ret

00005dec <__divmodhi4_neg2>:
    5dec:	70 95       	com	r23
    5dee:	61 95       	neg	r22
    5df0:	7f 4f       	sbci	r23, 0xFF	; 255

00005df2 <__divmodhi4_exit>:
    5df2:	08 95       	ret

00005df4 <__udivmodsi4>:
    5df4:	a1 e2       	ldi	r26, 0x21	; 33
    5df6:	1a 2e       	mov	r1, r26
    5df8:	aa 1b       	sub	r26, r26
    5dfa:	bb 1b       	sub	r27, r27
    5dfc:	fd 01       	movw	r30, r26
    5dfe:	0d c0       	rjmp	.+26     	; 0x5e1a <__udivmodsi4_ep>

00005e00 <__udivmodsi4_loop>:
    5e00:	aa 1f       	adc	r26, r26
    5e02:	bb 1f       	adc	r27, r27
    5e04:	ee 1f       	adc	r30, r30
    5e06:	ff 1f       	adc	r31, r31
    5e08:	a2 17       	cp	r26, r18
    5e0a:	b3 07       	cpc	r27, r19
    5e0c:	e4 07       	cpc	r30, r20
    5e0e:	f5 07       	cpc	r31, r21
    5e10:	20 f0       	brcs	.+8      	; 0x5e1a <__udivmodsi4_ep>
    5e12:	a2 1b       	sub	r26, r18
    5e14:	b3 0b       	sbc	r27, r19
    5e16:	e4 0b       	sbc	r30, r20
    5e18:	f5 0b       	sbc	r31, r21

00005e1a <__udivmodsi4_ep>:
    5e1a:	66 1f       	adc	r22, r22
    5e1c:	77 1f       	adc	r23, r23
    5e1e:	88 1f       	adc	r24, r24
    5e20:	99 1f       	adc	r25, r25
    5e22:	1a 94       	dec	r1
    5e24:	69 f7       	brne	.-38     	; 0x5e00 <__udivmodsi4_loop>
    5e26:	60 95       	com	r22
    5e28:	70 95       	com	r23
    5e2a:	80 95       	com	r24
    5e2c:	90 95       	com	r25
    5e2e:	9b 01       	movw	r18, r22
    5e30:	ac 01       	movw	r20, r24
    5e32:	bd 01       	movw	r22, r26
    5e34:	cf 01       	movw	r24, r30
    5e36:	08 95       	ret

00005e38 <__tablejump2__>:
    5e38:	ee 0f       	add	r30, r30
    5e3a:	ff 1f       	adc	r31, r31
    5e3c:	05 90       	lpm	r0, Z+
    5e3e:	f4 91       	lpm	r31, Z
    5e40:	e0 2d       	mov	r30, r0
    5e42:	09 94       	ijmp

00005e44 <__udivmodhi4>:
    5e44:	aa 1b       	sub	r26, r26
    5e46:	bb 1b       	sub	r27, r27
    5e48:	51 e1       	ldi	r21, 0x11	; 17
    5e4a:	07 c0       	rjmp	.+14     	; 0x5e5a <__udivmodhi4_ep>

00005e4c <__udivmodhi4_loop>:
    5e4c:	aa 1f       	adc	r26, r26
    5e4e:	bb 1f       	adc	r27, r27
    5e50:	a6 17       	cp	r26, r22
    5e52:	b7 07       	cpc	r27, r23
    5e54:	10 f0       	brcs	.+4      	; 0x5e5a <__udivmodhi4_ep>
    5e56:	a6 1b       	sub	r26, r22
    5e58:	b7 0b       	sbc	r27, r23

00005e5a <__udivmodhi4_ep>:
    5e5a:	88 1f       	adc	r24, r24
    5e5c:	99 1f       	adc	r25, r25
    5e5e:	5a 95       	dec	r21
    5e60:	a9 f7       	brne	.-22     	; 0x5e4c <__udivmodhi4_loop>
    5e62:	80 95       	com	r24
    5e64:	90 95       	com	r25
    5e66:	bc 01       	movw	r22, r24
    5e68:	cd 01       	movw	r24, r26
    5e6a:	08 95       	ret

00005e6c <snprintf>:
    5e6c:	ae e0       	ldi	r26, 0x0E	; 14
    5e6e:	b0 e0       	ldi	r27, 0x00	; 0
    5e70:	ec e3       	ldi	r30, 0x3C	; 60
    5e72:	ff e2       	ldi	r31, 0x2F	; 47
    5e74:	0c 94 05 32 	jmp	0x640a	; 0x640a <__prologue_saves__+0x1c>
    5e78:	0d 89       	ldd	r16, Y+21	; 0x15
    5e7a:	1e 89       	ldd	r17, Y+22	; 0x16
    5e7c:	8f 89       	ldd	r24, Y+23	; 0x17
    5e7e:	98 8d       	ldd	r25, Y+24	; 0x18
    5e80:	26 e0       	ldi	r18, 0x06	; 6
    5e82:	2c 83       	std	Y+4, r18	; 0x04
    5e84:	1a 83       	std	Y+2, r17	; 0x02
    5e86:	09 83       	std	Y+1, r16	; 0x01
    5e88:	97 ff       	sbrs	r25, 7
    5e8a:	02 c0       	rjmp	.+4      	; 0x5e90 <snprintf+0x24>
    5e8c:	80 e0       	ldi	r24, 0x00	; 0
    5e8e:	90 e8       	ldi	r25, 0x80	; 128
    5e90:	01 97       	sbiw	r24, 0x01	; 1
    5e92:	9e 83       	std	Y+6, r25	; 0x06
    5e94:	8d 83       	std	Y+5, r24	; 0x05
    5e96:	ae 01       	movw	r20, r28
    5e98:	45 5e       	subi	r20, 0xE5	; 229
    5e9a:	5f 4f       	sbci	r21, 0xFF	; 255
    5e9c:	69 8d       	ldd	r22, Y+25	; 0x19
    5e9e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5ea0:	ce 01       	movw	r24, r28
    5ea2:	01 96       	adiw	r24, 0x01	; 1
    5ea4:	0e 94 66 2f 	call	0x5ecc	; 0x5ecc <vfprintf>
    5ea8:	4d 81       	ldd	r20, Y+5	; 0x05
    5eaa:	5e 81       	ldd	r21, Y+6	; 0x06
    5eac:	57 fd       	sbrc	r21, 7
    5eae:	0a c0       	rjmp	.+20     	; 0x5ec4 <snprintf+0x58>
    5eb0:	2f 81       	ldd	r18, Y+7	; 0x07
    5eb2:	38 85       	ldd	r19, Y+8	; 0x08
    5eb4:	42 17       	cp	r20, r18
    5eb6:	53 07       	cpc	r21, r19
    5eb8:	0c f4       	brge	.+2      	; 0x5ebc <snprintf+0x50>
    5eba:	9a 01       	movw	r18, r20
    5ebc:	f8 01       	movw	r30, r16
    5ebe:	e2 0f       	add	r30, r18
    5ec0:	f3 1f       	adc	r31, r19
    5ec2:	10 82       	st	Z, r1
    5ec4:	2e 96       	adiw	r28, 0x0e	; 14
    5ec6:	e4 e0       	ldi	r30, 0x04	; 4
    5ec8:	0c 94 21 32 	jmp	0x6442	; 0x6442 <__epilogue_restores__+0x1c>

00005ecc <vfprintf>:
    5ecc:	ab e0       	ldi	r26, 0x0B	; 11
    5ece:	b0 e0       	ldi	r27, 0x00	; 0
    5ed0:	ec e6       	ldi	r30, 0x6C	; 108
    5ed2:	ff e2       	ldi	r31, 0x2F	; 47
    5ed4:	0c 94 f7 31 	jmp	0x63ee	; 0x63ee <__prologue_saves__>
    5ed8:	6c 01       	movw	r12, r24
    5eda:	7b 01       	movw	r14, r22
    5edc:	8a 01       	movw	r16, r20
    5ede:	fc 01       	movw	r30, r24
    5ee0:	17 82       	std	Z+7, r1	; 0x07
    5ee2:	16 82       	std	Z+6, r1	; 0x06
    5ee4:	83 81       	ldd	r24, Z+3	; 0x03
    5ee6:	81 ff       	sbrs	r24, 1
    5ee8:	cc c1       	rjmp	.+920    	; 0x6282 <vfprintf+0x3b6>
    5eea:	ce 01       	movw	r24, r28
    5eec:	01 96       	adiw	r24, 0x01	; 1
    5eee:	3c 01       	movw	r6, r24
    5ef0:	f6 01       	movw	r30, r12
    5ef2:	93 81       	ldd	r25, Z+3	; 0x03
    5ef4:	f7 01       	movw	r30, r14
    5ef6:	93 fd       	sbrc	r25, 3
    5ef8:	85 91       	lpm	r24, Z+
    5efa:	93 ff       	sbrs	r25, 3
    5efc:	81 91       	ld	r24, Z+
    5efe:	7f 01       	movw	r14, r30
    5f00:	88 23       	and	r24, r24
    5f02:	09 f4       	brne	.+2      	; 0x5f06 <vfprintf+0x3a>
    5f04:	ba c1       	rjmp	.+884    	; 0x627a <vfprintf+0x3ae>
    5f06:	85 32       	cpi	r24, 0x25	; 37
    5f08:	39 f4       	brne	.+14     	; 0x5f18 <vfprintf+0x4c>
    5f0a:	93 fd       	sbrc	r25, 3
    5f0c:	85 91       	lpm	r24, Z+
    5f0e:	93 ff       	sbrs	r25, 3
    5f10:	81 91       	ld	r24, Z+
    5f12:	7f 01       	movw	r14, r30
    5f14:	85 32       	cpi	r24, 0x25	; 37
    5f16:	29 f4       	brne	.+10     	; 0x5f22 <vfprintf+0x56>
    5f18:	b6 01       	movw	r22, r12
    5f1a:	90 e0       	ldi	r25, 0x00	; 0
    5f1c:	0e 94 5d 31 	call	0x62ba	; 0x62ba <fputc>
    5f20:	e7 cf       	rjmp	.-50     	; 0x5ef0 <vfprintf+0x24>
    5f22:	91 2c       	mov	r9, r1
    5f24:	21 2c       	mov	r2, r1
    5f26:	31 2c       	mov	r3, r1
    5f28:	ff e1       	ldi	r31, 0x1F	; 31
    5f2a:	f3 15       	cp	r31, r3
    5f2c:	d8 f0       	brcs	.+54     	; 0x5f64 <vfprintf+0x98>
    5f2e:	8b 32       	cpi	r24, 0x2B	; 43
    5f30:	79 f0       	breq	.+30     	; 0x5f50 <vfprintf+0x84>
    5f32:	38 f4       	brcc	.+14     	; 0x5f42 <vfprintf+0x76>
    5f34:	80 32       	cpi	r24, 0x20	; 32
    5f36:	79 f0       	breq	.+30     	; 0x5f56 <vfprintf+0x8a>
    5f38:	83 32       	cpi	r24, 0x23	; 35
    5f3a:	a1 f4       	brne	.+40     	; 0x5f64 <vfprintf+0x98>
    5f3c:	23 2d       	mov	r18, r3
    5f3e:	20 61       	ori	r18, 0x10	; 16
    5f40:	1d c0       	rjmp	.+58     	; 0x5f7c <vfprintf+0xb0>
    5f42:	8d 32       	cpi	r24, 0x2D	; 45
    5f44:	61 f0       	breq	.+24     	; 0x5f5e <vfprintf+0x92>
    5f46:	80 33       	cpi	r24, 0x30	; 48
    5f48:	69 f4       	brne	.+26     	; 0x5f64 <vfprintf+0x98>
    5f4a:	23 2d       	mov	r18, r3
    5f4c:	21 60       	ori	r18, 0x01	; 1
    5f4e:	16 c0       	rjmp	.+44     	; 0x5f7c <vfprintf+0xb0>
    5f50:	83 2d       	mov	r24, r3
    5f52:	82 60       	ori	r24, 0x02	; 2
    5f54:	38 2e       	mov	r3, r24
    5f56:	e3 2d       	mov	r30, r3
    5f58:	e4 60       	ori	r30, 0x04	; 4
    5f5a:	3e 2e       	mov	r3, r30
    5f5c:	2a c0       	rjmp	.+84     	; 0x5fb2 <vfprintf+0xe6>
    5f5e:	f3 2d       	mov	r31, r3
    5f60:	f8 60       	ori	r31, 0x08	; 8
    5f62:	1d c0       	rjmp	.+58     	; 0x5f9e <vfprintf+0xd2>
    5f64:	37 fc       	sbrc	r3, 7
    5f66:	2d c0       	rjmp	.+90     	; 0x5fc2 <vfprintf+0xf6>
    5f68:	20 ed       	ldi	r18, 0xD0	; 208
    5f6a:	28 0f       	add	r18, r24
    5f6c:	2a 30       	cpi	r18, 0x0A	; 10
    5f6e:	40 f0       	brcs	.+16     	; 0x5f80 <vfprintf+0xb4>
    5f70:	8e 32       	cpi	r24, 0x2E	; 46
    5f72:	b9 f4       	brne	.+46     	; 0x5fa2 <vfprintf+0xd6>
    5f74:	36 fc       	sbrc	r3, 6
    5f76:	81 c1       	rjmp	.+770    	; 0x627a <vfprintf+0x3ae>
    5f78:	23 2d       	mov	r18, r3
    5f7a:	20 64       	ori	r18, 0x40	; 64
    5f7c:	32 2e       	mov	r3, r18
    5f7e:	19 c0       	rjmp	.+50     	; 0x5fb2 <vfprintf+0xe6>
    5f80:	36 fe       	sbrs	r3, 6
    5f82:	06 c0       	rjmp	.+12     	; 0x5f90 <vfprintf+0xc4>
    5f84:	8a e0       	ldi	r24, 0x0A	; 10
    5f86:	98 9e       	mul	r9, r24
    5f88:	20 0d       	add	r18, r0
    5f8a:	11 24       	eor	r1, r1
    5f8c:	92 2e       	mov	r9, r18
    5f8e:	11 c0       	rjmp	.+34     	; 0x5fb2 <vfprintf+0xe6>
    5f90:	ea e0       	ldi	r30, 0x0A	; 10
    5f92:	2e 9e       	mul	r2, r30
    5f94:	20 0d       	add	r18, r0
    5f96:	11 24       	eor	r1, r1
    5f98:	22 2e       	mov	r2, r18
    5f9a:	f3 2d       	mov	r31, r3
    5f9c:	f0 62       	ori	r31, 0x20	; 32
    5f9e:	3f 2e       	mov	r3, r31
    5fa0:	08 c0       	rjmp	.+16     	; 0x5fb2 <vfprintf+0xe6>
    5fa2:	8c 36       	cpi	r24, 0x6C	; 108
    5fa4:	21 f4       	brne	.+8      	; 0x5fae <vfprintf+0xe2>
    5fa6:	83 2d       	mov	r24, r3
    5fa8:	80 68       	ori	r24, 0x80	; 128
    5faa:	38 2e       	mov	r3, r24
    5fac:	02 c0       	rjmp	.+4      	; 0x5fb2 <vfprintf+0xe6>
    5fae:	88 36       	cpi	r24, 0x68	; 104
    5fb0:	41 f4       	brne	.+16     	; 0x5fc2 <vfprintf+0xf6>
    5fb2:	f7 01       	movw	r30, r14
    5fb4:	93 fd       	sbrc	r25, 3
    5fb6:	85 91       	lpm	r24, Z+
    5fb8:	93 ff       	sbrs	r25, 3
    5fba:	81 91       	ld	r24, Z+
    5fbc:	7f 01       	movw	r14, r30
    5fbe:	81 11       	cpse	r24, r1
    5fc0:	b3 cf       	rjmp	.-154    	; 0x5f28 <vfprintf+0x5c>
    5fc2:	98 2f       	mov	r25, r24
    5fc4:	9f 7d       	andi	r25, 0xDF	; 223
    5fc6:	95 54       	subi	r25, 0x45	; 69
    5fc8:	93 30       	cpi	r25, 0x03	; 3
    5fca:	28 f4       	brcc	.+10     	; 0x5fd6 <vfprintf+0x10a>
    5fcc:	0c 5f       	subi	r16, 0xFC	; 252
    5fce:	1f 4f       	sbci	r17, 0xFF	; 255
    5fd0:	9f e3       	ldi	r25, 0x3F	; 63
    5fd2:	99 83       	std	Y+1, r25	; 0x01
    5fd4:	0d c0       	rjmp	.+26     	; 0x5ff0 <vfprintf+0x124>
    5fd6:	83 36       	cpi	r24, 0x63	; 99
    5fd8:	31 f0       	breq	.+12     	; 0x5fe6 <vfprintf+0x11a>
    5fda:	83 37       	cpi	r24, 0x73	; 115
    5fdc:	71 f0       	breq	.+28     	; 0x5ffa <vfprintf+0x12e>
    5fde:	83 35       	cpi	r24, 0x53	; 83
    5fe0:	09 f0       	breq	.+2      	; 0x5fe4 <vfprintf+0x118>
    5fe2:	59 c0       	rjmp	.+178    	; 0x6096 <vfprintf+0x1ca>
    5fe4:	21 c0       	rjmp	.+66     	; 0x6028 <vfprintf+0x15c>
    5fe6:	f8 01       	movw	r30, r16
    5fe8:	80 81       	ld	r24, Z
    5fea:	89 83       	std	Y+1, r24	; 0x01
    5fec:	0e 5f       	subi	r16, 0xFE	; 254
    5fee:	1f 4f       	sbci	r17, 0xFF	; 255
    5ff0:	88 24       	eor	r8, r8
    5ff2:	83 94       	inc	r8
    5ff4:	91 2c       	mov	r9, r1
    5ff6:	53 01       	movw	r10, r6
    5ff8:	13 c0       	rjmp	.+38     	; 0x6020 <vfprintf+0x154>
    5ffa:	28 01       	movw	r4, r16
    5ffc:	f2 e0       	ldi	r31, 0x02	; 2
    5ffe:	4f 0e       	add	r4, r31
    6000:	51 1c       	adc	r5, r1
    6002:	f8 01       	movw	r30, r16
    6004:	a0 80       	ld	r10, Z
    6006:	b1 80       	ldd	r11, Z+1	; 0x01
    6008:	36 fe       	sbrs	r3, 6
    600a:	03 c0       	rjmp	.+6      	; 0x6012 <vfprintf+0x146>
    600c:	69 2d       	mov	r22, r9
    600e:	70 e0       	ldi	r23, 0x00	; 0
    6010:	02 c0       	rjmp	.+4      	; 0x6016 <vfprintf+0x14a>
    6012:	6f ef       	ldi	r22, 0xFF	; 255
    6014:	7f ef       	ldi	r23, 0xFF	; 255
    6016:	c5 01       	movw	r24, r10
    6018:	0e 94 52 31 	call	0x62a4	; 0x62a4 <strnlen>
    601c:	4c 01       	movw	r8, r24
    601e:	82 01       	movw	r16, r4
    6020:	f3 2d       	mov	r31, r3
    6022:	ff 77       	andi	r31, 0x7F	; 127
    6024:	3f 2e       	mov	r3, r31
    6026:	16 c0       	rjmp	.+44     	; 0x6054 <vfprintf+0x188>
    6028:	28 01       	movw	r4, r16
    602a:	22 e0       	ldi	r18, 0x02	; 2
    602c:	42 0e       	add	r4, r18
    602e:	51 1c       	adc	r5, r1
    6030:	f8 01       	movw	r30, r16
    6032:	a0 80       	ld	r10, Z
    6034:	b1 80       	ldd	r11, Z+1	; 0x01
    6036:	36 fe       	sbrs	r3, 6
    6038:	03 c0       	rjmp	.+6      	; 0x6040 <vfprintf+0x174>
    603a:	69 2d       	mov	r22, r9
    603c:	70 e0       	ldi	r23, 0x00	; 0
    603e:	02 c0       	rjmp	.+4      	; 0x6044 <vfprintf+0x178>
    6040:	6f ef       	ldi	r22, 0xFF	; 255
    6042:	7f ef       	ldi	r23, 0xFF	; 255
    6044:	c5 01       	movw	r24, r10
    6046:	0e 94 47 31 	call	0x628e	; 0x628e <strnlen_P>
    604a:	4c 01       	movw	r8, r24
    604c:	f3 2d       	mov	r31, r3
    604e:	f0 68       	ori	r31, 0x80	; 128
    6050:	3f 2e       	mov	r3, r31
    6052:	82 01       	movw	r16, r4
    6054:	33 fc       	sbrc	r3, 3
    6056:	1b c0       	rjmp	.+54     	; 0x608e <vfprintf+0x1c2>
    6058:	82 2d       	mov	r24, r2
    605a:	90 e0       	ldi	r25, 0x00	; 0
    605c:	88 16       	cp	r8, r24
    605e:	99 06       	cpc	r9, r25
    6060:	b0 f4       	brcc	.+44     	; 0x608e <vfprintf+0x1c2>
    6062:	b6 01       	movw	r22, r12
    6064:	80 e2       	ldi	r24, 0x20	; 32
    6066:	90 e0       	ldi	r25, 0x00	; 0
    6068:	0e 94 5d 31 	call	0x62ba	; 0x62ba <fputc>
    606c:	2a 94       	dec	r2
    606e:	f4 cf       	rjmp	.-24     	; 0x6058 <vfprintf+0x18c>
    6070:	f5 01       	movw	r30, r10
    6072:	37 fc       	sbrc	r3, 7
    6074:	85 91       	lpm	r24, Z+
    6076:	37 fe       	sbrs	r3, 7
    6078:	81 91       	ld	r24, Z+
    607a:	5f 01       	movw	r10, r30
    607c:	b6 01       	movw	r22, r12
    607e:	90 e0       	ldi	r25, 0x00	; 0
    6080:	0e 94 5d 31 	call	0x62ba	; 0x62ba <fputc>
    6084:	21 10       	cpse	r2, r1
    6086:	2a 94       	dec	r2
    6088:	21 e0       	ldi	r18, 0x01	; 1
    608a:	82 1a       	sub	r8, r18
    608c:	91 08       	sbc	r9, r1
    608e:	81 14       	cp	r8, r1
    6090:	91 04       	cpc	r9, r1
    6092:	71 f7       	brne	.-36     	; 0x6070 <vfprintf+0x1a4>
    6094:	e8 c0       	rjmp	.+464    	; 0x6266 <vfprintf+0x39a>
    6096:	84 36       	cpi	r24, 0x64	; 100
    6098:	11 f0       	breq	.+4      	; 0x609e <vfprintf+0x1d2>
    609a:	89 36       	cpi	r24, 0x69	; 105
    609c:	41 f5       	brne	.+80     	; 0x60ee <vfprintf+0x222>
    609e:	f8 01       	movw	r30, r16
    60a0:	37 fe       	sbrs	r3, 7
    60a2:	07 c0       	rjmp	.+14     	; 0x60b2 <vfprintf+0x1e6>
    60a4:	60 81       	ld	r22, Z
    60a6:	71 81       	ldd	r23, Z+1	; 0x01
    60a8:	82 81       	ldd	r24, Z+2	; 0x02
    60aa:	93 81       	ldd	r25, Z+3	; 0x03
    60ac:	0c 5f       	subi	r16, 0xFC	; 252
    60ae:	1f 4f       	sbci	r17, 0xFF	; 255
    60b0:	08 c0       	rjmp	.+16     	; 0x60c2 <vfprintf+0x1f6>
    60b2:	60 81       	ld	r22, Z
    60b4:	71 81       	ldd	r23, Z+1	; 0x01
    60b6:	07 2e       	mov	r0, r23
    60b8:	00 0c       	add	r0, r0
    60ba:	88 0b       	sbc	r24, r24
    60bc:	99 0b       	sbc	r25, r25
    60be:	0e 5f       	subi	r16, 0xFE	; 254
    60c0:	1f 4f       	sbci	r17, 0xFF	; 255
    60c2:	f3 2d       	mov	r31, r3
    60c4:	ff 76       	andi	r31, 0x6F	; 111
    60c6:	3f 2e       	mov	r3, r31
    60c8:	97 ff       	sbrs	r25, 7
    60ca:	09 c0       	rjmp	.+18     	; 0x60de <vfprintf+0x212>
    60cc:	90 95       	com	r25
    60ce:	80 95       	com	r24
    60d0:	70 95       	com	r23
    60d2:	61 95       	neg	r22
    60d4:	7f 4f       	sbci	r23, 0xFF	; 255
    60d6:	8f 4f       	sbci	r24, 0xFF	; 255
    60d8:	9f 4f       	sbci	r25, 0xFF	; 255
    60da:	f0 68       	ori	r31, 0x80	; 128
    60dc:	3f 2e       	mov	r3, r31
    60de:	2a e0       	ldi	r18, 0x0A	; 10
    60e0:	30 e0       	ldi	r19, 0x00	; 0
    60e2:	a3 01       	movw	r20, r6
    60e4:	0e 94 99 31 	call	0x6332	; 0x6332 <__ultoa_invert>
    60e8:	88 2e       	mov	r8, r24
    60ea:	86 18       	sub	r8, r6
    60ec:	45 c0       	rjmp	.+138    	; 0x6178 <vfprintf+0x2ac>
    60ee:	85 37       	cpi	r24, 0x75	; 117
    60f0:	31 f4       	brne	.+12     	; 0x60fe <vfprintf+0x232>
    60f2:	23 2d       	mov	r18, r3
    60f4:	2f 7e       	andi	r18, 0xEF	; 239
    60f6:	b2 2e       	mov	r11, r18
    60f8:	2a e0       	ldi	r18, 0x0A	; 10
    60fa:	30 e0       	ldi	r19, 0x00	; 0
    60fc:	25 c0       	rjmp	.+74     	; 0x6148 <vfprintf+0x27c>
    60fe:	93 2d       	mov	r25, r3
    6100:	99 7f       	andi	r25, 0xF9	; 249
    6102:	b9 2e       	mov	r11, r25
    6104:	8f 36       	cpi	r24, 0x6F	; 111
    6106:	c1 f0       	breq	.+48     	; 0x6138 <vfprintf+0x26c>
    6108:	18 f4       	brcc	.+6      	; 0x6110 <vfprintf+0x244>
    610a:	88 35       	cpi	r24, 0x58	; 88
    610c:	79 f0       	breq	.+30     	; 0x612c <vfprintf+0x260>
    610e:	b5 c0       	rjmp	.+362    	; 0x627a <vfprintf+0x3ae>
    6110:	80 37       	cpi	r24, 0x70	; 112
    6112:	19 f0       	breq	.+6      	; 0x611a <vfprintf+0x24e>
    6114:	88 37       	cpi	r24, 0x78	; 120
    6116:	21 f0       	breq	.+8      	; 0x6120 <vfprintf+0x254>
    6118:	b0 c0       	rjmp	.+352    	; 0x627a <vfprintf+0x3ae>
    611a:	e9 2f       	mov	r30, r25
    611c:	e0 61       	ori	r30, 0x10	; 16
    611e:	be 2e       	mov	r11, r30
    6120:	b4 fe       	sbrs	r11, 4
    6122:	0d c0       	rjmp	.+26     	; 0x613e <vfprintf+0x272>
    6124:	fb 2d       	mov	r31, r11
    6126:	f4 60       	ori	r31, 0x04	; 4
    6128:	bf 2e       	mov	r11, r31
    612a:	09 c0       	rjmp	.+18     	; 0x613e <vfprintf+0x272>
    612c:	34 fe       	sbrs	r3, 4
    612e:	0a c0       	rjmp	.+20     	; 0x6144 <vfprintf+0x278>
    6130:	29 2f       	mov	r18, r25
    6132:	26 60       	ori	r18, 0x06	; 6
    6134:	b2 2e       	mov	r11, r18
    6136:	06 c0       	rjmp	.+12     	; 0x6144 <vfprintf+0x278>
    6138:	28 e0       	ldi	r18, 0x08	; 8
    613a:	30 e0       	ldi	r19, 0x00	; 0
    613c:	05 c0       	rjmp	.+10     	; 0x6148 <vfprintf+0x27c>
    613e:	20 e1       	ldi	r18, 0x10	; 16
    6140:	30 e0       	ldi	r19, 0x00	; 0
    6142:	02 c0       	rjmp	.+4      	; 0x6148 <vfprintf+0x27c>
    6144:	20 e1       	ldi	r18, 0x10	; 16
    6146:	32 e0       	ldi	r19, 0x02	; 2
    6148:	f8 01       	movw	r30, r16
    614a:	b7 fe       	sbrs	r11, 7
    614c:	07 c0       	rjmp	.+14     	; 0x615c <vfprintf+0x290>
    614e:	60 81       	ld	r22, Z
    6150:	71 81       	ldd	r23, Z+1	; 0x01
    6152:	82 81       	ldd	r24, Z+2	; 0x02
    6154:	93 81       	ldd	r25, Z+3	; 0x03
    6156:	0c 5f       	subi	r16, 0xFC	; 252
    6158:	1f 4f       	sbci	r17, 0xFF	; 255
    615a:	06 c0       	rjmp	.+12     	; 0x6168 <vfprintf+0x29c>
    615c:	60 81       	ld	r22, Z
    615e:	71 81       	ldd	r23, Z+1	; 0x01
    6160:	80 e0       	ldi	r24, 0x00	; 0
    6162:	90 e0       	ldi	r25, 0x00	; 0
    6164:	0e 5f       	subi	r16, 0xFE	; 254
    6166:	1f 4f       	sbci	r17, 0xFF	; 255
    6168:	a3 01       	movw	r20, r6
    616a:	0e 94 99 31 	call	0x6332	; 0x6332 <__ultoa_invert>
    616e:	88 2e       	mov	r8, r24
    6170:	86 18       	sub	r8, r6
    6172:	fb 2d       	mov	r31, r11
    6174:	ff 77       	andi	r31, 0x7F	; 127
    6176:	3f 2e       	mov	r3, r31
    6178:	36 fe       	sbrs	r3, 6
    617a:	0d c0       	rjmp	.+26     	; 0x6196 <vfprintf+0x2ca>
    617c:	23 2d       	mov	r18, r3
    617e:	2e 7f       	andi	r18, 0xFE	; 254
    6180:	a2 2e       	mov	r10, r18
    6182:	89 14       	cp	r8, r9
    6184:	58 f4       	brcc	.+22     	; 0x619c <vfprintf+0x2d0>
    6186:	34 fe       	sbrs	r3, 4
    6188:	0b c0       	rjmp	.+22     	; 0x61a0 <vfprintf+0x2d4>
    618a:	32 fc       	sbrc	r3, 2
    618c:	09 c0       	rjmp	.+18     	; 0x61a0 <vfprintf+0x2d4>
    618e:	83 2d       	mov	r24, r3
    6190:	8e 7e       	andi	r24, 0xEE	; 238
    6192:	a8 2e       	mov	r10, r24
    6194:	05 c0       	rjmp	.+10     	; 0x61a0 <vfprintf+0x2d4>
    6196:	b8 2c       	mov	r11, r8
    6198:	a3 2c       	mov	r10, r3
    619a:	03 c0       	rjmp	.+6      	; 0x61a2 <vfprintf+0x2d6>
    619c:	b8 2c       	mov	r11, r8
    619e:	01 c0       	rjmp	.+2      	; 0x61a2 <vfprintf+0x2d6>
    61a0:	b9 2c       	mov	r11, r9
    61a2:	a4 fe       	sbrs	r10, 4
    61a4:	0f c0       	rjmp	.+30     	; 0x61c4 <vfprintf+0x2f8>
    61a6:	fe 01       	movw	r30, r28
    61a8:	e8 0d       	add	r30, r8
    61aa:	f1 1d       	adc	r31, r1
    61ac:	80 81       	ld	r24, Z
    61ae:	80 33       	cpi	r24, 0x30	; 48
    61b0:	21 f4       	brne	.+8      	; 0x61ba <vfprintf+0x2ee>
    61b2:	9a 2d       	mov	r25, r10
    61b4:	99 7e       	andi	r25, 0xE9	; 233
    61b6:	a9 2e       	mov	r10, r25
    61b8:	09 c0       	rjmp	.+18     	; 0x61cc <vfprintf+0x300>
    61ba:	a2 fe       	sbrs	r10, 2
    61bc:	06 c0       	rjmp	.+12     	; 0x61ca <vfprintf+0x2fe>
    61be:	b3 94       	inc	r11
    61c0:	b3 94       	inc	r11
    61c2:	04 c0       	rjmp	.+8      	; 0x61cc <vfprintf+0x300>
    61c4:	8a 2d       	mov	r24, r10
    61c6:	86 78       	andi	r24, 0x86	; 134
    61c8:	09 f0       	breq	.+2      	; 0x61cc <vfprintf+0x300>
    61ca:	b3 94       	inc	r11
    61cc:	a3 fc       	sbrc	r10, 3
    61ce:	11 c0       	rjmp	.+34     	; 0x61f2 <vfprintf+0x326>
    61d0:	a0 fe       	sbrs	r10, 0
    61d2:	06 c0       	rjmp	.+12     	; 0x61e0 <vfprintf+0x314>
    61d4:	b2 14       	cp	r11, r2
    61d6:	88 f4       	brcc	.+34     	; 0x61fa <vfprintf+0x32e>
    61d8:	28 0c       	add	r2, r8
    61da:	92 2c       	mov	r9, r2
    61dc:	9b 18       	sub	r9, r11
    61de:	0e c0       	rjmp	.+28     	; 0x61fc <vfprintf+0x330>
    61e0:	b2 14       	cp	r11, r2
    61e2:	60 f4       	brcc	.+24     	; 0x61fc <vfprintf+0x330>
    61e4:	b6 01       	movw	r22, r12
    61e6:	80 e2       	ldi	r24, 0x20	; 32
    61e8:	90 e0       	ldi	r25, 0x00	; 0
    61ea:	0e 94 5d 31 	call	0x62ba	; 0x62ba <fputc>
    61ee:	b3 94       	inc	r11
    61f0:	f7 cf       	rjmp	.-18     	; 0x61e0 <vfprintf+0x314>
    61f2:	b2 14       	cp	r11, r2
    61f4:	18 f4       	brcc	.+6      	; 0x61fc <vfprintf+0x330>
    61f6:	2b 18       	sub	r2, r11
    61f8:	02 c0       	rjmp	.+4      	; 0x61fe <vfprintf+0x332>
    61fa:	98 2c       	mov	r9, r8
    61fc:	21 2c       	mov	r2, r1
    61fe:	a4 fe       	sbrs	r10, 4
    6200:	10 c0       	rjmp	.+32     	; 0x6222 <vfprintf+0x356>
    6202:	b6 01       	movw	r22, r12
    6204:	80 e3       	ldi	r24, 0x30	; 48
    6206:	90 e0       	ldi	r25, 0x00	; 0
    6208:	0e 94 5d 31 	call	0x62ba	; 0x62ba <fputc>
    620c:	a2 fe       	sbrs	r10, 2
    620e:	17 c0       	rjmp	.+46     	; 0x623e <vfprintf+0x372>
    6210:	a1 fc       	sbrc	r10, 1
    6212:	03 c0       	rjmp	.+6      	; 0x621a <vfprintf+0x34e>
    6214:	88 e7       	ldi	r24, 0x78	; 120
    6216:	90 e0       	ldi	r25, 0x00	; 0
    6218:	02 c0       	rjmp	.+4      	; 0x621e <vfprintf+0x352>
    621a:	88 e5       	ldi	r24, 0x58	; 88
    621c:	90 e0       	ldi	r25, 0x00	; 0
    621e:	b6 01       	movw	r22, r12
    6220:	0c c0       	rjmp	.+24     	; 0x623a <vfprintf+0x36e>
    6222:	8a 2d       	mov	r24, r10
    6224:	86 78       	andi	r24, 0x86	; 134
    6226:	59 f0       	breq	.+22     	; 0x623e <vfprintf+0x372>
    6228:	a1 fe       	sbrs	r10, 1
    622a:	02 c0       	rjmp	.+4      	; 0x6230 <vfprintf+0x364>
    622c:	8b e2       	ldi	r24, 0x2B	; 43
    622e:	01 c0       	rjmp	.+2      	; 0x6232 <vfprintf+0x366>
    6230:	80 e2       	ldi	r24, 0x20	; 32
    6232:	a7 fc       	sbrc	r10, 7
    6234:	8d e2       	ldi	r24, 0x2D	; 45
    6236:	b6 01       	movw	r22, r12
    6238:	90 e0       	ldi	r25, 0x00	; 0
    623a:	0e 94 5d 31 	call	0x62ba	; 0x62ba <fputc>
    623e:	89 14       	cp	r8, r9
    6240:	38 f4       	brcc	.+14     	; 0x6250 <vfprintf+0x384>
    6242:	b6 01       	movw	r22, r12
    6244:	80 e3       	ldi	r24, 0x30	; 48
    6246:	90 e0       	ldi	r25, 0x00	; 0
    6248:	0e 94 5d 31 	call	0x62ba	; 0x62ba <fputc>
    624c:	9a 94       	dec	r9
    624e:	f7 cf       	rjmp	.-18     	; 0x623e <vfprintf+0x372>
    6250:	8a 94       	dec	r8
    6252:	f3 01       	movw	r30, r6
    6254:	e8 0d       	add	r30, r8
    6256:	f1 1d       	adc	r31, r1
    6258:	80 81       	ld	r24, Z
    625a:	b6 01       	movw	r22, r12
    625c:	90 e0       	ldi	r25, 0x00	; 0
    625e:	0e 94 5d 31 	call	0x62ba	; 0x62ba <fputc>
    6262:	81 10       	cpse	r8, r1
    6264:	f5 cf       	rjmp	.-22     	; 0x6250 <vfprintf+0x384>
    6266:	22 20       	and	r2, r2
    6268:	09 f4       	brne	.+2      	; 0x626c <vfprintf+0x3a0>
    626a:	42 ce       	rjmp	.-892    	; 0x5ef0 <vfprintf+0x24>
    626c:	b6 01       	movw	r22, r12
    626e:	80 e2       	ldi	r24, 0x20	; 32
    6270:	90 e0       	ldi	r25, 0x00	; 0
    6272:	0e 94 5d 31 	call	0x62ba	; 0x62ba <fputc>
    6276:	2a 94       	dec	r2
    6278:	f6 cf       	rjmp	.-20     	; 0x6266 <vfprintf+0x39a>
    627a:	f6 01       	movw	r30, r12
    627c:	86 81       	ldd	r24, Z+6	; 0x06
    627e:	97 81       	ldd	r25, Z+7	; 0x07
    6280:	02 c0       	rjmp	.+4      	; 0x6286 <vfprintf+0x3ba>
    6282:	8f ef       	ldi	r24, 0xFF	; 255
    6284:	9f ef       	ldi	r25, 0xFF	; 255
    6286:	2b 96       	adiw	r28, 0x0b	; 11
    6288:	e2 e1       	ldi	r30, 0x12	; 18
    628a:	0c 94 13 32 	jmp	0x6426	; 0x6426 <__epilogue_restores__>

0000628e <strnlen_P>:
    628e:	fc 01       	movw	r30, r24
    6290:	05 90       	lpm	r0, Z+
    6292:	61 50       	subi	r22, 0x01	; 1
    6294:	70 40       	sbci	r23, 0x00	; 0
    6296:	01 10       	cpse	r0, r1
    6298:	d8 f7       	brcc	.-10     	; 0x6290 <strnlen_P+0x2>
    629a:	80 95       	com	r24
    629c:	90 95       	com	r25
    629e:	8e 0f       	add	r24, r30
    62a0:	9f 1f       	adc	r25, r31
    62a2:	08 95       	ret

000062a4 <strnlen>:
    62a4:	fc 01       	movw	r30, r24
    62a6:	61 50       	subi	r22, 0x01	; 1
    62a8:	70 40       	sbci	r23, 0x00	; 0
    62aa:	01 90       	ld	r0, Z+
    62ac:	01 10       	cpse	r0, r1
    62ae:	d8 f7       	brcc	.-10     	; 0x62a6 <strnlen+0x2>
    62b0:	80 95       	com	r24
    62b2:	90 95       	com	r25
    62b4:	8e 0f       	add	r24, r30
    62b6:	9f 1f       	adc	r25, r31
    62b8:	08 95       	ret

000062ba <fputc>:
    62ba:	0f 93       	push	r16
    62bc:	1f 93       	push	r17
    62be:	cf 93       	push	r28
    62c0:	df 93       	push	r29
    62c2:	fb 01       	movw	r30, r22
    62c4:	23 81       	ldd	r18, Z+3	; 0x03
    62c6:	21 fd       	sbrc	r18, 1
    62c8:	03 c0       	rjmp	.+6      	; 0x62d0 <fputc+0x16>
    62ca:	8f ef       	ldi	r24, 0xFF	; 255
    62cc:	9f ef       	ldi	r25, 0xFF	; 255
    62ce:	2c c0       	rjmp	.+88     	; 0x6328 <fputc+0x6e>
    62d0:	22 ff       	sbrs	r18, 2
    62d2:	16 c0       	rjmp	.+44     	; 0x6300 <fputc+0x46>
    62d4:	46 81       	ldd	r20, Z+6	; 0x06
    62d6:	57 81       	ldd	r21, Z+7	; 0x07
    62d8:	24 81       	ldd	r18, Z+4	; 0x04
    62da:	35 81       	ldd	r19, Z+5	; 0x05
    62dc:	42 17       	cp	r20, r18
    62de:	53 07       	cpc	r21, r19
    62e0:	44 f4       	brge	.+16     	; 0x62f2 <fputc+0x38>
    62e2:	a0 81       	ld	r26, Z
    62e4:	b1 81       	ldd	r27, Z+1	; 0x01
    62e6:	9d 01       	movw	r18, r26
    62e8:	2f 5f       	subi	r18, 0xFF	; 255
    62ea:	3f 4f       	sbci	r19, 0xFF	; 255
    62ec:	31 83       	std	Z+1, r19	; 0x01
    62ee:	20 83       	st	Z, r18
    62f0:	8c 93       	st	X, r24
    62f2:	26 81       	ldd	r18, Z+6	; 0x06
    62f4:	37 81       	ldd	r19, Z+7	; 0x07
    62f6:	2f 5f       	subi	r18, 0xFF	; 255
    62f8:	3f 4f       	sbci	r19, 0xFF	; 255
    62fa:	37 83       	std	Z+7, r19	; 0x07
    62fc:	26 83       	std	Z+6, r18	; 0x06
    62fe:	14 c0       	rjmp	.+40     	; 0x6328 <fputc+0x6e>
    6300:	8b 01       	movw	r16, r22
    6302:	ec 01       	movw	r28, r24
    6304:	fb 01       	movw	r30, r22
    6306:	00 84       	ldd	r0, Z+8	; 0x08
    6308:	f1 85       	ldd	r31, Z+9	; 0x09
    630a:	e0 2d       	mov	r30, r0
    630c:	09 95       	icall
    630e:	89 2b       	or	r24, r25
    6310:	e1 f6       	brne	.-72     	; 0x62ca <fputc+0x10>
    6312:	d8 01       	movw	r26, r16
    6314:	16 96       	adiw	r26, 0x06	; 6
    6316:	8d 91       	ld	r24, X+
    6318:	9c 91       	ld	r25, X
    631a:	17 97       	sbiw	r26, 0x07	; 7
    631c:	01 96       	adiw	r24, 0x01	; 1
    631e:	17 96       	adiw	r26, 0x07	; 7
    6320:	9c 93       	st	X, r25
    6322:	8e 93       	st	-X, r24
    6324:	16 97       	sbiw	r26, 0x06	; 6
    6326:	ce 01       	movw	r24, r28
    6328:	df 91       	pop	r29
    632a:	cf 91       	pop	r28
    632c:	1f 91       	pop	r17
    632e:	0f 91       	pop	r16
    6330:	08 95       	ret

00006332 <__ultoa_invert>:
    6332:	fa 01       	movw	r30, r20
    6334:	aa 27       	eor	r26, r26
    6336:	28 30       	cpi	r18, 0x08	; 8
    6338:	51 f1       	breq	.+84     	; 0x638e <__ultoa_invert+0x5c>
    633a:	20 31       	cpi	r18, 0x10	; 16
    633c:	81 f1       	breq	.+96     	; 0x639e <__ultoa_invert+0x6c>
    633e:	e8 94       	clt
    6340:	6f 93       	push	r22
    6342:	6e 7f       	andi	r22, 0xFE	; 254
    6344:	6e 5f       	subi	r22, 0xFE	; 254
    6346:	7f 4f       	sbci	r23, 0xFF	; 255
    6348:	8f 4f       	sbci	r24, 0xFF	; 255
    634a:	9f 4f       	sbci	r25, 0xFF	; 255
    634c:	af 4f       	sbci	r26, 0xFF	; 255
    634e:	b1 e0       	ldi	r27, 0x01	; 1
    6350:	3e d0       	rcall	.+124    	; 0x63ce <__ultoa_invert+0x9c>
    6352:	b4 e0       	ldi	r27, 0x04	; 4
    6354:	3c d0       	rcall	.+120    	; 0x63ce <__ultoa_invert+0x9c>
    6356:	67 0f       	add	r22, r23
    6358:	78 1f       	adc	r23, r24
    635a:	89 1f       	adc	r24, r25
    635c:	9a 1f       	adc	r25, r26
    635e:	a1 1d       	adc	r26, r1
    6360:	68 0f       	add	r22, r24
    6362:	79 1f       	adc	r23, r25
    6364:	8a 1f       	adc	r24, r26
    6366:	91 1d       	adc	r25, r1
    6368:	a1 1d       	adc	r26, r1
    636a:	6a 0f       	add	r22, r26
    636c:	71 1d       	adc	r23, r1
    636e:	81 1d       	adc	r24, r1
    6370:	91 1d       	adc	r25, r1
    6372:	a1 1d       	adc	r26, r1
    6374:	20 d0       	rcall	.+64     	; 0x63b6 <__ultoa_invert+0x84>
    6376:	09 f4       	brne	.+2      	; 0x637a <__ultoa_invert+0x48>
    6378:	68 94       	set
    637a:	3f 91       	pop	r19
    637c:	2a e0       	ldi	r18, 0x0A	; 10
    637e:	26 9f       	mul	r18, r22
    6380:	11 24       	eor	r1, r1
    6382:	30 19       	sub	r19, r0
    6384:	30 5d       	subi	r19, 0xD0	; 208
    6386:	31 93       	st	Z+, r19
    6388:	de f6       	brtc	.-74     	; 0x6340 <__ultoa_invert+0xe>
    638a:	cf 01       	movw	r24, r30
    638c:	08 95       	ret
    638e:	46 2f       	mov	r20, r22
    6390:	47 70       	andi	r20, 0x07	; 7
    6392:	40 5d       	subi	r20, 0xD0	; 208
    6394:	41 93       	st	Z+, r20
    6396:	b3 e0       	ldi	r27, 0x03	; 3
    6398:	0f d0       	rcall	.+30     	; 0x63b8 <__ultoa_invert+0x86>
    639a:	c9 f7       	brne	.-14     	; 0x638e <__ultoa_invert+0x5c>
    639c:	f6 cf       	rjmp	.-20     	; 0x638a <__ultoa_invert+0x58>
    639e:	46 2f       	mov	r20, r22
    63a0:	4f 70       	andi	r20, 0x0F	; 15
    63a2:	40 5d       	subi	r20, 0xD0	; 208
    63a4:	4a 33       	cpi	r20, 0x3A	; 58
    63a6:	18 f0       	brcs	.+6      	; 0x63ae <__ultoa_invert+0x7c>
    63a8:	49 5d       	subi	r20, 0xD9	; 217
    63aa:	31 fd       	sbrc	r19, 1
    63ac:	40 52       	subi	r20, 0x20	; 32
    63ae:	41 93       	st	Z+, r20
    63b0:	02 d0       	rcall	.+4      	; 0x63b6 <__ultoa_invert+0x84>
    63b2:	a9 f7       	brne	.-22     	; 0x639e <__ultoa_invert+0x6c>
    63b4:	ea cf       	rjmp	.-44     	; 0x638a <__ultoa_invert+0x58>
    63b6:	b4 e0       	ldi	r27, 0x04	; 4
    63b8:	a6 95       	lsr	r26
    63ba:	97 95       	ror	r25
    63bc:	87 95       	ror	r24
    63be:	77 95       	ror	r23
    63c0:	67 95       	ror	r22
    63c2:	ba 95       	dec	r27
    63c4:	c9 f7       	brne	.-14     	; 0x63b8 <__ultoa_invert+0x86>
    63c6:	00 97       	sbiw	r24, 0x00	; 0
    63c8:	61 05       	cpc	r22, r1
    63ca:	71 05       	cpc	r23, r1
    63cc:	08 95       	ret
    63ce:	9b 01       	movw	r18, r22
    63d0:	ac 01       	movw	r20, r24
    63d2:	0a 2e       	mov	r0, r26
    63d4:	06 94       	lsr	r0
    63d6:	57 95       	ror	r21
    63d8:	47 95       	ror	r20
    63da:	37 95       	ror	r19
    63dc:	27 95       	ror	r18
    63de:	ba 95       	dec	r27
    63e0:	c9 f7       	brne	.-14     	; 0x63d4 <__ultoa_invert+0xa2>
    63e2:	62 0f       	add	r22, r18
    63e4:	73 1f       	adc	r23, r19
    63e6:	84 1f       	adc	r24, r20
    63e8:	95 1f       	adc	r25, r21
    63ea:	a0 1d       	adc	r26, r0
    63ec:	08 95       	ret

000063ee <__prologue_saves__>:
    63ee:	2f 92       	push	r2
    63f0:	3f 92       	push	r3
    63f2:	4f 92       	push	r4
    63f4:	5f 92       	push	r5
    63f6:	6f 92       	push	r6
    63f8:	7f 92       	push	r7
    63fa:	8f 92       	push	r8
    63fc:	9f 92       	push	r9
    63fe:	af 92       	push	r10
    6400:	bf 92       	push	r11
    6402:	cf 92       	push	r12
    6404:	df 92       	push	r13
    6406:	ef 92       	push	r14
    6408:	ff 92       	push	r15
    640a:	0f 93       	push	r16
    640c:	1f 93       	push	r17
    640e:	cf 93       	push	r28
    6410:	df 93       	push	r29
    6412:	cd b7       	in	r28, 0x3d	; 61
    6414:	de b7       	in	r29, 0x3e	; 62
    6416:	ca 1b       	sub	r28, r26
    6418:	db 0b       	sbc	r29, r27
    641a:	0f b6       	in	r0, 0x3f	; 63
    641c:	f8 94       	cli
    641e:	de bf       	out	0x3e, r29	; 62
    6420:	0f be       	out	0x3f, r0	; 63
    6422:	cd bf       	out	0x3d, r28	; 61
    6424:	09 94       	ijmp

00006426 <__epilogue_restores__>:
    6426:	2a 88       	ldd	r2, Y+18	; 0x12
    6428:	39 88       	ldd	r3, Y+17	; 0x11
    642a:	48 88       	ldd	r4, Y+16	; 0x10
    642c:	5f 84       	ldd	r5, Y+15	; 0x0f
    642e:	6e 84       	ldd	r6, Y+14	; 0x0e
    6430:	7d 84       	ldd	r7, Y+13	; 0x0d
    6432:	8c 84       	ldd	r8, Y+12	; 0x0c
    6434:	9b 84       	ldd	r9, Y+11	; 0x0b
    6436:	aa 84       	ldd	r10, Y+10	; 0x0a
    6438:	b9 84       	ldd	r11, Y+9	; 0x09
    643a:	c8 84       	ldd	r12, Y+8	; 0x08
    643c:	df 80       	ldd	r13, Y+7	; 0x07
    643e:	ee 80       	ldd	r14, Y+6	; 0x06
    6440:	fd 80       	ldd	r15, Y+5	; 0x05
    6442:	0c 81       	ldd	r16, Y+4	; 0x04
    6444:	1b 81       	ldd	r17, Y+3	; 0x03
    6446:	aa 81       	ldd	r26, Y+2	; 0x02
    6448:	b9 81       	ldd	r27, Y+1	; 0x01
    644a:	ce 0f       	add	r28, r30
    644c:	d1 1d       	adc	r29, r1
    644e:	0f b6       	in	r0, 0x3f	; 63
    6450:	f8 94       	cli
    6452:	de bf       	out	0x3e, r29	; 62
    6454:	0f be       	out	0x3f, r0	; 63
    6456:	cd bf       	out	0x3d, r28	; 61
    6458:	ed 01       	movw	r28, r26
    645a:	08 95       	ret

0000645c <_exit>:
    645c:	f8 94       	cli

0000645e <__stop_program>:
    645e:	ff cf       	rjmp	.-2      	; 0x645e <__stop_program>
