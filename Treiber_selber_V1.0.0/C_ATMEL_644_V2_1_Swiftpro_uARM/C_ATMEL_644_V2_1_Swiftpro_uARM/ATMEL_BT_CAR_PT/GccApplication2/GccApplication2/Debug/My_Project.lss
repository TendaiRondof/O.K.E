
My_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000218  00800100  000049f2  00004a86  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000049f2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000a4  00800318  00800318  00004c9e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00004c9e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004cfc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  00004d3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000021a0  00000000  00000000  00004e84  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b08  00000000  00000000  00007024  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001b47  00000000  00000000  00007b2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000514  00000000  00000000  00009674  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000094c  00000000  00000000  00009b88  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a7f  00000000  00000000  0000a4d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  0000af53  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 8d 1d 	jmp	0x3b1a	; 0x3b1a <__vector_16>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 cb 01 	jmp	0x396	; 0x396 <__vector_20>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      70:	0c 94 26 02 	jmp	0x44c	; 0x44c <__vector_28>
      74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d0 e1       	ldi	r29, 0x10	; 16
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	13 e0       	ldi	r17, 0x03	; 3
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	e2 ef       	ldi	r30, 0xF2	; 242
      90:	f9 e4       	ldi	r31, 0x49	; 73
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	a8 31       	cpi	r26, 0x18	; 24
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	23 e0       	ldi	r18, 0x03	; 3
      a0:	a8 e1       	ldi	r26, 0x18	; 24
      a2:	b3 e0       	ldi	r27, 0x03	; 3
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	ac 3b       	cpi	r26, 0xBC	; 188
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 8e 03 	call	0x71c	; 0x71c <main>
      b2:	0c 94 f7 24 	jmp	0x49ee	; 0x49ee <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <get_DIP_Switch>:
	}
	if ((x>300)&&(x<700)&&(y<700)&&(y>300))
	{
		return 0;
	}
}
      ba:	cf 93       	push	r28
      bc:	df 93       	push	r29
      be:	00 d0       	rcall	.+0      	; 0xc0 <get_DIP_Switch+0x6>
      c0:	1f 92       	push	r1
      c2:	cd b7       	in	r28, 0x3d	; 61
      c4:	de b7       	in	r29, 0x3e	; 62
      c6:	19 82       	std	Y+1, r1	; 0x01
      c8:	82 e2       	ldi	r24, 0x22	; 34
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	22 e2       	ldi	r18, 0x22	; 34
      ce:	30 e0       	ldi	r19, 0x00	; 0
      d0:	f9 01       	movw	r30, r18
      d2:	20 81       	ld	r18, Z
      d4:	20 62       	ori	r18, 0x20	; 32
      d6:	fc 01       	movw	r30, r24
      d8:	20 83       	st	Z, r18
      da:	82 e2       	ldi	r24, 0x22	; 34
      dc:	90 e0       	ldi	r25, 0x00	; 0
      de:	22 e2       	ldi	r18, 0x22	; 34
      e0:	30 e0       	ldi	r19, 0x00	; 0
      e2:	f9 01       	movw	r30, r18
      e4:	20 81       	ld	r18, Z
      e6:	2f 7d       	andi	r18, 0xDF	; 223
      e8:	fc 01       	movw	r30, r24
      ea:	20 83       	st	Z, r18
      ec:	82 e2       	ldi	r24, 0x22	; 34
      ee:	90 e0       	ldi	r25, 0x00	; 0
      f0:	22 e2       	ldi	r18, 0x22	; 34
      f2:	30 e0       	ldi	r19, 0x00	; 0
      f4:	f9 01       	movw	r30, r18
      f6:	20 81       	ld	r18, Z
      f8:	20 62       	ori	r18, 0x20	; 32
      fa:	fc 01       	movw	r30, r24
      fc:	20 83       	st	Z, r18
      fe:	87 e0       	ldi	r24, 0x07	; 7
     100:	90 e0       	ldi	r25, 0x00	; 0
     102:	9b 83       	std	Y+3, r25	; 0x03
     104:	8a 83       	std	Y+2, r24	; 0x02
     106:	30 c0       	rjmp	.+96     	; 0x168 <get_DIP_Switch+0xae>
     108:	80 e2       	ldi	r24, 0x20	; 32
     10a:	90 e0       	ldi	r25, 0x00	; 0
     10c:	fc 01       	movw	r30, r24
     10e:	80 81       	ld	r24, Z
     110:	88 2f       	mov	r24, r24
     112:	90 e0       	ldi	r25, 0x00	; 0
     114:	80 78       	andi	r24, 0x80	; 128
     116:	99 27       	eor	r25, r25
     118:	47 e0       	ldi	r20, 0x07	; 7
     11a:	50 e0       	ldi	r21, 0x00	; 0
     11c:	2a 81       	ldd	r18, Y+2	; 0x02
     11e:	3b 81       	ldd	r19, Y+3	; 0x03
     120:	ba 01       	movw	r22, r20
     122:	62 1b       	sub	r22, r18
     124:	73 0b       	sbc	r23, r19
     126:	9b 01       	movw	r18, r22
     128:	02 c0       	rjmp	.+4      	; 0x12e <get_DIP_Switch+0x74>
     12a:	95 95       	asr	r25
     12c:	87 95       	ror	r24
     12e:	2a 95       	dec	r18
     130:	e2 f7       	brpl	.-8      	; 0x12a <get_DIP_Switch+0x70>
     132:	98 2f       	mov	r25, r24
     134:	89 81       	ldd	r24, Y+1	; 0x01
     136:	89 2b       	or	r24, r25
     138:	89 83       	std	Y+1, r24	; 0x01
     13a:	82 e2       	ldi	r24, 0x22	; 34
     13c:	90 e0       	ldi	r25, 0x00	; 0
     13e:	22 e2       	ldi	r18, 0x22	; 34
     140:	30 e0       	ldi	r19, 0x00	; 0
     142:	f9 01       	movw	r30, r18
     144:	20 81       	ld	r18, Z
     146:	2f 7b       	andi	r18, 0xBF	; 191
     148:	fc 01       	movw	r30, r24
     14a:	20 83       	st	Z, r18
     14c:	82 e2       	ldi	r24, 0x22	; 34
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	22 e2       	ldi	r18, 0x22	; 34
     152:	30 e0       	ldi	r19, 0x00	; 0
     154:	f9 01       	movw	r30, r18
     156:	20 81       	ld	r18, Z
     158:	20 64       	ori	r18, 0x40	; 64
     15a:	fc 01       	movw	r30, r24
     15c:	20 83       	st	Z, r18
     15e:	8a 81       	ldd	r24, Y+2	; 0x02
     160:	9b 81       	ldd	r25, Y+3	; 0x03
     162:	01 97       	sbiw	r24, 0x01	; 1
     164:	9b 83       	std	Y+3, r25	; 0x03
     166:	8a 83       	std	Y+2, r24	; 0x02
     168:	8a 81       	ldd	r24, Y+2	; 0x02
     16a:	9b 81       	ldd	r25, Y+3	; 0x03
     16c:	99 23       	and	r25, r25
     16e:	64 f6       	brge	.-104    	; 0x108 <get_DIP_Switch+0x4e>
     170:	89 81       	ldd	r24, Y+1	; 0x01
     172:	0f 90       	pop	r0
     174:	0f 90       	pop	r0
     176:	0f 90       	pop	r0
     178:	df 91       	pop	r29
     17a:	cf 91       	pop	r28
     17c:	08 95       	ret

0000017e <get_LCD_Taster>:
     17e:	cf 93       	push	r28
     180:	df 93       	push	r29
     182:	1f 92       	push	r1
     184:	cd b7       	in	r28, 0x3d	; 61
     186:	de b7       	in	r29, 0x3e	; 62
     188:	85 e2       	ldi	r24, 0x25	; 37
     18a:	90 e0       	ldi	r25, 0x00	; 0
     18c:	25 e2       	ldi	r18, 0x25	; 37
     18e:	30 e0       	ldi	r19, 0x00	; 0
     190:	f9 01       	movw	r30, r18
     192:	20 81       	ld	r18, Z
     194:	20 7f       	andi	r18, 0xF0	; 240
     196:	fc 01       	movw	r30, r24
     198:	20 83       	st	Z, r18
     19a:	84 e2       	ldi	r24, 0x24	; 36
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	20 ef       	ldi	r18, 0xF0	; 240
     1a0:	fc 01       	movw	r30, r24
     1a2:	20 83       	st	Z, r18
	...
     1b8:	83 e2       	ldi	r24, 0x23	; 35
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	fc 01       	movw	r30, r24
     1be:	80 81       	ld	r24, Z
     1c0:	8f 70       	andi	r24, 0x0F	; 15
     1c2:	89 83       	std	Y+1, r24	; 0x01
     1c4:	84 e2       	ldi	r24, 0x24	; 36
     1c6:	90 e0       	ldi	r25, 0x00	; 0
     1c8:	2f ef       	ldi	r18, 0xFF	; 255
     1ca:	fc 01       	movw	r30, r24
     1cc:	20 83       	st	Z, r18
     1ce:	89 81       	ldd	r24, Y+1	; 0x01
     1d0:	0f 90       	pop	r0
     1d2:	df 91       	pop	r29
     1d4:	cf 91       	pop	r28
     1d6:	08 95       	ret

000001d8 <init_ADC>:
     1d8:	cf 93       	push	r28
     1da:	df 93       	push	r29
     1dc:	cd b7       	in	r28, 0x3d	; 61
     1de:	de b7       	in	r29, 0x3e	; 62
     1e0:	8a e7       	ldi	r24, 0x7A	; 122
     1e2:	90 e0       	ldi	r25, 0x00	; 0
     1e4:	2a e7       	ldi	r18, 0x7A	; 122
     1e6:	30 e0       	ldi	r19, 0x00	; 0
     1e8:	f9 01       	movw	r30, r18
     1ea:	20 81       	ld	r18, Z
     1ec:	20 68       	ori	r18, 0x80	; 128
     1ee:	fc 01       	movw	r30, r24
     1f0:	20 83       	st	Z, r18
     1f2:	8c e7       	ldi	r24, 0x7C	; 124
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	2c e7       	ldi	r18, 0x7C	; 124
     1f8:	30 e0       	ldi	r19, 0x00	; 0
     1fa:	f9 01       	movw	r30, r18
     1fc:	20 81       	ld	r18, Z
     1fe:	20 64       	ori	r18, 0x40	; 64
     200:	fc 01       	movw	r30, r24
     202:	20 83       	st	Z, r18
     204:	8a e7       	ldi	r24, 0x7A	; 122
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	2a e7       	ldi	r18, 0x7A	; 122
     20a:	30 e0       	ldi	r19, 0x00	; 0
     20c:	f9 01       	movw	r30, r18
     20e:	20 81       	ld	r18, Z
     210:	27 60       	ori	r18, 0x07	; 7
     212:	fc 01       	movw	r30, r24
     214:	20 83       	st	Z, r18
     216:	00 00       	nop
     218:	df 91       	pop	r29
     21a:	cf 91       	pop	r28
     21c:	08 95       	ret

0000021e <init_UART0>:
     21e:	cf 93       	push	r28
     220:	df 93       	push	r29
     222:	cd b7       	in	r28, 0x3d	; 61
     224:	de b7       	in	r29, 0x3e	; 62
     226:	84 ec       	ldi	r24, 0xC4	; 196
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	20 e1       	ldi	r18, 0x10	; 16
     22c:	30 e0       	ldi	r19, 0x00	; 0
     22e:	fc 01       	movw	r30, r24
     230:	31 83       	std	Z+1, r19	; 0x01
     232:	20 83       	st	Z, r18
     234:	80 ec       	ldi	r24, 0xC0	; 192
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	20 ec       	ldi	r18, 0xC0	; 192
     23a:	30 e0       	ldi	r19, 0x00	; 0
     23c:	f9 01       	movw	r30, r18
     23e:	20 81       	ld	r18, Z
     240:	22 60       	ori	r18, 0x02	; 2
     242:	fc 01       	movw	r30, r24
     244:	20 83       	st	Z, r18
     246:	81 ec       	ldi	r24, 0xC1	; 193
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	21 ec       	ldi	r18, 0xC1	; 193
     24c:	30 e0       	ldi	r19, 0x00	; 0
     24e:	f9 01       	movw	r30, r18
     250:	20 81       	ld	r18, Z
     252:	28 69       	ori	r18, 0x98	; 152
     254:	fc 01       	movw	r30, r24
     256:	20 83       	st	Z, r18
     258:	00 00       	nop
     25a:	df 91       	pop	r29
     25c:	cf 91       	pop	r28
     25e:	08 95       	ret

00000260 <init_UART1>:
     260:	cf 93       	push	r28
     262:	df 93       	push	r29
     264:	cd b7       	in	r28, 0x3d	; 61
     266:	de b7       	in	r29, 0x3e	; 62
     268:	8c ec       	ldi	r24, 0xCC	; 204
     26a:	90 e0       	ldi	r25, 0x00	; 0
     26c:	20 e1       	ldi	r18, 0x10	; 16
     26e:	30 e0       	ldi	r19, 0x00	; 0
     270:	fc 01       	movw	r30, r24
     272:	31 83       	std	Z+1, r19	; 0x01
     274:	20 83       	st	Z, r18
     276:	88 ec       	ldi	r24, 0xC8	; 200
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	28 ec       	ldi	r18, 0xC8	; 200
     27c:	30 e0       	ldi	r19, 0x00	; 0
     27e:	f9 01       	movw	r30, r18
     280:	20 81       	ld	r18, Z
     282:	22 60       	ori	r18, 0x02	; 2
     284:	fc 01       	movw	r30, r24
     286:	20 83       	st	Z, r18
     288:	89 ec       	ldi	r24, 0xC9	; 201
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	29 ec       	ldi	r18, 0xC9	; 201
     28e:	30 e0       	ldi	r19, 0x00	; 0
     290:	f9 01       	movw	r30, r18
     292:	20 81       	ld	r18, Z
     294:	28 69       	ori	r18, 0x98	; 152
     296:	fc 01       	movw	r30, r24
     298:	20 83       	st	Z, r18
     29a:	00 00       	nop
     29c:	df 91       	pop	r29
     29e:	cf 91       	pop	r28
     2a0:	08 95       	ret

000002a2 <send_Byte_0>:
     2a2:	cf 93       	push	r28
     2a4:	df 93       	push	r29
     2a6:	1f 92       	push	r1
     2a8:	cd b7       	in	r28, 0x3d	; 61
     2aa:	de b7       	in	r29, 0x3e	; 62
     2ac:	89 83       	std	Y+1, r24	; 0x01
     2ae:	00 00       	nop
     2b0:	80 ec       	ldi	r24, 0xC0	; 192
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	fc 01       	movw	r30, r24
     2b6:	80 81       	ld	r24, Z
     2b8:	88 2f       	mov	r24, r24
     2ba:	90 e0       	ldi	r25, 0x00	; 0
     2bc:	80 72       	andi	r24, 0x20	; 32
     2be:	99 27       	eor	r25, r25
     2c0:	89 2b       	or	r24, r25
     2c2:	b1 f3       	breq	.-20     	; 0x2b0 <send_Byte_0+0xe>
     2c4:	86 ec       	ldi	r24, 0xC6	; 198
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	29 81       	ldd	r18, Y+1	; 0x01
     2ca:	fc 01       	movw	r30, r24
     2cc:	20 83       	st	Z, r18
     2ce:	00 00       	nop
     2d0:	0f 90       	pop	r0
     2d2:	df 91       	pop	r29
     2d4:	cf 91       	pop	r28
     2d6:	08 95       	ret

000002d8 <send_Byte_1>:
     2d8:	cf 93       	push	r28
     2da:	df 93       	push	r29
     2dc:	1f 92       	push	r1
     2de:	cd b7       	in	r28, 0x3d	; 61
     2e0:	de b7       	in	r29, 0x3e	; 62
     2e2:	89 83       	std	Y+1, r24	; 0x01
     2e4:	00 00       	nop
     2e6:	88 ec       	ldi	r24, 0xC8	; 200
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	fc 01       	movw	r30, r24
     2ec:	80 81       	ld	r24, Z
     2ee:	88 2f       	mov	r24, r24
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	80 72       	andi	r24, 0x20	; 32
     2f4:	99 27       	eor	r25, r25
     2f6:	89 2b       	or	r24, r25
     2f8:	b1 f3       	breq	.-20     	; 0x2e6 <send_Byte_1+0xe>
     2fa:	8e ec       	ldi	r24, 0xCE	; 206
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	29 81       	ldd	r18, Y+1	; 0x01
     300:	fc 01       	movw	r30, r24
     302:	20 83       	st	Z, r18
     304:	00 00       	nop
     306:	0f 90       	pop	r0
     308:	df 91       	pop	r29
     30a:	cf 91       	pop	r28
     30c:	08 95       	ret

0000030e <to_uARM>:
     30e:	cf 93       	push	r28
     310:	df 93       	push	r29
     312:	00 d0       	rcall	.+0      	; 0x314 <to_uARM+0x6>
     314:	cd b7       	in	r28, 0x3d	; 61
     316:	de b7       	in	r29, 0x3e	; 62
     318:	9a 83       	std	Y+2, r25	; 0x02
     31a:	89 83       	std	Y+1, r24	; 0x01
     31c:	0b c0       	rjmp	.+22     	; 0x334 <to_uARM+0x26>
     31e:	89 81       	ldd	r24, Y+1	; 0x01
     320:	9a 81       	ldd	r25, Y+2	; 0x02
     322:	fc 01       	movw	r30, r24
     324:	80 81       	ld	r24, Z
     326:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <send_Byte_1>
     32a:	89 81       	ldd	r24, Y+1	; 0x01
     32c:	9a 81       	ldd	r25, Y+2	; 0x02
     32e:	01 96       	adiw	r24, 0x01	; 1
     330:	9a 83       	std	Y+2, r25	; 0x02
     332:	89 83       	std	Y+1, r24	; 0x01
     334:	89 81       	ldd	r24, Y+1	; 0x01
     336:	9a 81       	ldd	r25, Y+2	; 0x02
     338:	fc 01       	movw	r30, r24
     33a:	80 81       	ld	r24, Z
     33c:	88 23       	and	r24, r24
     33e:	79 f7       	brne	.-34     	; 0x31e <to_uARM+0x10>
     340:	10 92 1a 03 	sts	0x031A, r1	; 0x80031a <uart_str_complete1>
     344:	00 00       	nop
     346:	80 91 1a 03 	lds	r24, 0x031A	; 0x80031a <uart_str_complete1>
     34a:	88 23       	and	r24, r24
     34c:	e1 f3       	breq	.-8      	; 0x346 <to_uARM+0x38>
     34e:	00 00       	nop
     350:	0f 90       	pop	r0
     352:	0f 90       	pop	r0
     354:	df 91       	pop	r29
     356:	cf 91       	pop	r28
     358:	08 95       	ret

0000035a <send_to_uArm>:
     35a:	cf 93       	push	r28
     35c:	df 93       	push	r29
     35e:	00 d0       	rcall	.+0      	; 0x360 <send_to_uArm+0x6>
     360:	cd b7       	in	r28, 0x3d	; 61
     362:	de b7       	in	r29, 0x3e	; 62
     364:	9a 83       	std	Y+2, r25	; 0x02
     366:	89 83       	std	Y+1, r24	; 0x01
     368:	89 81       	ldd	r24, Y+1	; 0x01
     36a:	9a 81       	ldd	r25, Y+2	; 0x02
     36c:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     370:	80 e0       	ldi	r24, 0x00	; 0
     372:	91 e0       	ldi	r25, 0x01	; 1
     374:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     378:	04 c0       	rjmp	.+8      	; 0x382 <send_to_uArm+0x28>
     37a:	80 e0       	ldi	r24, 0x00	; 0
     37c:	91 e0       	ldi	r25, 0x01	; 1
     37e:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     382:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <uart_string1+0x4>
     386:	81 33       	cpi	r24, 0x31	; 49
     388:	c1 f3       	breq	.-16     	; 0x37a <send_to_uArm+0x20>
     38a:	00 00       	nop
     38c:	0f 90       	pop	r0
     38e:	0f 90       	pop	r0
     390:	df 91       	pop	r29
     392:	cf 91       	pop	r28
     394:	08 95       	ret

00000396 <__vector_20>:
     396:	1f 92       	push	r1
     398:	0f 92       	push	r0
     39a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     39e:	0f 92       	push	r0
     3a0:	11 24       	eor	r1, r1
     3a2:	2f 93       	push	r18
     3a4:	3f 93       	push	r19
     3a6:	8f 93       	push	r24
     3a8:	9f 93       	push	r25
     3aa:	ef 93       	push	r30
     3ac:	ff 93       	push	r31
     3ae:	cf 93       	push	r28
     3b0:	df 93       	push	r29
     3b2:	00 d0       	rcall	.+0      	; 0x3b4 <__vector_20+0x1e>
     3b4:	1f 92       	push	r1
     3b6:	cd b7       	in	r28, 0x3d	; 61
     3b8:	de b7       	in	r29, 0x3e	; 62
     3ba:	1a 82       	std	Y+2, r1	; 0x02
     3bc:	86 ec       	ldi	r24, 0xC6	; 198
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	fc 01       	movw	r30, r24
     3c2:	80 81       	ld	r24, Z
     3c4:	8b 83       	std	Y+3, r24	; 0x03
     3c6:	8b 81       	ldd	r24, Y+3	; 0x03
     3c8:	8a 30       	cpi	r24, 0x0A	; 10
     3ca:	99 f0       	breq	.+38     	; 0x3f2 <__vector_20+0x5c>
     3cc:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <uart_str_count1>
     3d0:	82 33       	cpi	r24, 0x32	; 50
     3d2:	78 f4       	brcc	.+30     	; 0x3f2 <__vector_20+0x5c>
     3d4:	80 91 1b 03 	lds	r24, 0x031B	; 0x80031b <data_bytes_recieved>
     3d8:	88 2f       	mov	r24, r24
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	80 56       	subi	r24, 0x60	; 96
     3de:	9c 4f       	sbci	r25, 0xFC	; 252
     3e0:	2b 81       	ldd	r18, Y+3	; 0x03
     3e2:	fc 01       	movw	r30, r24
     3e4:	20 83       	st	Z, r18
     3e6:	80 91 1b 03 	lds	r24, 0x031B	; 0x80031b <data_bytes_recieved>
     3ea:	8f 5f       	subi	r24, 0xFF	; 255
     3ec:	80 93 1b 03 	sts	0x031B, r24	; 0x80031b <data_bytes_recieved>
     3f0:	1b c0       	rjmp	.+54     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     3f2:	19 82       	std	Y+1, r1	; 0x01
     3f4:	11 c0       	rjmp	.+34     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     3f6:	89 81       	ldd	r24, Y+1	; 0x01
     3f8:	88 2f       	mov	r24, r24
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	29 81       	ldd	r18, Y+1	; 0x01
     3fe:	22 2f       	mov	r18, r18
     400:	30 e0       	ldi	r19, 0x00	; 0
     402:	20 56       	subi	r18, 0x60	; 96
     404:	3c 4f       	sbci	r19, 0xFC	; 252
     406:	f9 01       	movw	r30, r18
     408:	20 81       	ld	r18, Z
     40a:	82 55       	subi	r24, 0x52	; 82
     40c:	9c 4f       	sbci	r25, 0xFC	; 252
     40e:	fc 01       	movw	r30, r24
     410:	20 83       	st	Z, r18
     412:	89 81       	ldd	r24, Y+1	; 0x01
     414:	8f 5f       	subi	r24, 0xFF	; 255
     416:	89 83       	std	Y+1, r24	; 0x01
     418:	80 91 1b 03 	lds	r24, 0x031B	; 0x80031b <data_bytes_recieved>
     41c:	99 81       	ldd	r25, Y+1	; 0x01
     41e:	89 17       	cp	r24, r25
     420:	50 f7       	brcc	.-44     	; 0x3f6 <__vector_20+0x60>
     422:	81 e0       	ldi	r24, 0x01	; 1
     424:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <uart_str_complete>
     428:	00 00       	nop
     42a:	0f 90       	pop	r0
     42c:	0f 90       	pop	r0
     42e:	0f 90       	pop	r0
     430:	df 91       	pop	r29
     432:	cf 91       	pop	r28
     434:	ff 91       	pop	r31
     436:	ef 91       	pop	r30
     438:	9f 91       	pop	r25
     43a:	8f 91       	pop	r24
     43c:	3f 91       	pop	r19
     43e:	2f 91       	pop	r18
     440:	0f 90       	pop	r0
     442:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     446:	0f 90       	pop	r0
     448:	1f 90       	pop	r1
     44a:	18 95       	reti

0000044c <__vector_28>:
     44c:	1f 92       	push	r1
     44e:	0f 92       	push	r0
     450:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     454:	0f 92       	push	r0
     456:	11 24       	eor	r1, r1
     458:	2f 93       	push	r18
     45a:	8f 93       	push	r24
     45c:	9f 93       	push	r25
     45e:	ef 93       	push	r30
     460:	ff 93       	push	r31
     462:	cf 93       	push	r28
     464:	df 93       	push	r29
     466:	1f 92       	push	r1
     468:	cd b7       	in	r28, 0x3d	; 61
     46a:	de b7       	in	r29, 0x3e	; 62
     46c:	8e ec       	ldi	r24, 0xCE	; 206
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	fc 01       	movw	r30, r24
     472:	80 81       	ld	r24, Z
     474:	89 83       	std	Y+1, r24	; 0x01
     476:	80 91 1a 03 	lds	r24, 0x031A	; 0x80031a <uart_str_complete1>
     47a:	88 23       	and	r24, r24
     47c:	31 f5       	brne	.+76     	; 0x4ca <__vector_28+0x7e>
     47e:	89 81       	ldd	r24, Y+1	; 0x01
     480:	8a 30       	cpi	r24, 0x0A	; 10
     482:	b1 f0       	breq	.+44     	; 0x4b0 <__vector_28+0x64>
     484:	89 81       	ldd	r24, Y+1	; 0x01
     486:	8d 30       	cpi	r24, 0x0D	; 13
     488:	99 f0       	breq	.+38     	; 0x4b0 <__vector_28+0x64>
     48a:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <uart_str_count1>
     48e:	82 33       	cpi	r24, 0x32	; 50
     490:	78 f4       	brcc	.+30     	; 0x4b0 <__vector_28+0x64>
     492:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <uart_str_count1>
     496:	88 2f       	mov	r24, r24
     498:	90 e0       	ldi	r25, 0x00	; 0
     49a:	80 5b       	subi	r24, 0xB0	; 176
     49c:	9c 4f       	sbci	r25, 0xFC	; 252
     49e:	29 81       	ldd	r18, Y+1	; 0x01
     4a0:	fc 01       	movw	r30, r24
     4a2:	20 83       	st	Z, r18
     4a4:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <uart_str_count1>
     4a8:	8f 5f       	subi	r24, 0xFF	; 255
     4aa:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <uart_str_count1>
     4ae:	0d c0       	rjmp	.+26     	; 0x4ca <__vector_28+0x7e>
     4b0:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <uart_str_count1>
     4b4:	88 2f       	mov	r24, r24
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	80 5b       	subi	r24, 0xB0	; 176
     4ba:	9c 4f       	sbci	r25, 0xFC	; 252
     4bc:	fc 01       	movw	r30, r24
     4be:	10 82       	st	Z, r1
     4c0:	10 92 1c 03 	sts	0x031C, r1	; 0x80031c <uart_str_count1>
     4c4:	81 e0       	ldi	r24, 0x01	; 1
     4c6:	80 93 1a 03 	sts	0x031A, r24	; 0x80031a <uart_str_complete1>
     4ca:	00 00       	nop
     4cc:	0f 90       	pop	r0
     4ce:	df 91       	pop	r29
     4d0:	cf 91       	pop	r28
     4d2:	ff 91       	pop	r31
     4d4:	ef 91       	pop	r30
     4d6:	9f 91       	pop	r25
     4d8:	8f 91       	pop	r24
     4da:	2f 91       	pop	r18
     4dc:	0f 90       	pop	r0
     4de:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     4e2:	0f 90       	pop	r0
     4e4:	1f 90       	pop	r1
     4e6:	18 95       	reti

000004e8 <start_up_routine>:

void start_up_routine ()
{
     4e8:	cf 93       	push	r28
     4ea:	df 93       	push	r29
     4ec:	cd b7       	in	r28, 0x3d	; 61
     4ee:	de b7       	in	r29, 0x3e	; 62
     4f0:	6c 97       	sbiw	r28, 0x1c	; 28
     4f2:	0f b6       	in	r0, 0x3f	; 63
     4f4:	f8 94       	cli
     4f6:	de bf       	out	0x3e, r29	; 62
     4f8:	0f be       	out	0x3f, r0	; 63
     4fa:	cd bf       	out	0x3d, r28	; 61
	init_BT_CAR_V2_0();			// Das Board wird hier initialisiert
     4fc:	0e 94 7c 20 	call	0x40f8	; 0x40f8 <init_BT_CAR_V2_0>
	wait_1ms(1000);
     500:	68 ee       	ldi	r22, 0xE8	; 232
     502:	73 e0       	ldi	r23, 0x03	; 3
     504:	80 e0       	ldi	r24, 0x00	; 0
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	0e 94 13 1e 	call	0x3c26	; 0x3c26 <wait_1ms>
	init_ADC();
     50c:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <init_ADC>
	init_UART0();
     510:	0e 94 0f 01 	call	0x21e	; 0x21e <init_UART0>
	init_UART1();
     514:	0e 94 30 01 	call	0x260	; 0x260 <init_UART1>
	wait_1ms(1000);
     518:	68 ee       	ldi	r22, 0xE8	; 232
     51a:	73 e0       	ldi	r23, 0x03	; 3
     51c:	80 e0       	ldi	r24, 0x00	; 0
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	0e 94 13 1e 	call	0x3c26	; 0x3c26 <wait_1ms>
	//while (final_data[0]!='D')
	//{
	//	to_pc('R');
	//}
	
	to_uARM("M2210 F500 T200\n");
     524:	8e e5       	ldi	r24, 0x5E	; 94
     526:	91 e0       	ldi	r25, 0x01	; 1
     528:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     52c:	80 e0       	ldi	r24, 0x00	; 0
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	a8 e4       	ldi	r26, 0x48	; 72
     532:	b3 e4       	ldi	r27, 0x43	; 67
     534:	89 83       	std	Y+1, r24	; 0x01
     536:	9a 83       	std	Y+2, r25	; 0x02
     538:	ab 83       	std	Y+3, r26	; 0x03
     53a:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     53c:	20 e0       	ldi	r18, 0x00	; 0
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	4a e7       	ldi	r20, 0x7A	; 122
     542:	55 e4       	ldi	r21, 0x45	; 69
     544:	69 81       	ldd	r22, Y+1	; 0x01
     546:	7a 81       	ldd	r23, Y+2	; 0x02
     548:	8b 81       	ldd	r24, Y+3	; 0x03
     54a:	9c 81       	ldd	r25, Y+4	; 0x04
     54c:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
     550:	dc 01       	movw	r26, r24
     552:	cb 01       	movw	r24, r22
     554:	8b 8b       	std	Y+19, r24	; 0x13
     556:	9c 8b       	std	Y+20, r25	; 0x14
     558:	ad 8b       	std	Y+21, r26	; 0x15
     55a:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     55c:	20 e0       	ldi	r18, 0x00	; 0
     55e:	30 e0       	ldi	r19, 0x00	; 0
     560:	40 e8       	ldi	r20, 0x80	; 128
     562:	5f e3       	ldi	r21, 0x3F	; 63
     564:	6b 89       	ldd	r22, Y+19	; 0x13
     566:	7c 89       	ldd	r23, Y+20	; 0x14
     568:	8d 89       	ldd	r24, Y+21	; 0x15
     56a:	9e 89       	ldd	r25, Y+22	; 0x16
     56c:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
     570:	88 23       	and	r24, r24
     572:	2c f4       	brge	.+10     	; 0x57e <start_up_routine+0x96>
		__ticks = 1;
     574:	81 e0       	ldi	r24, 0x01	; 1
     576:	90 e0       	ldi	r25, 0x00	; 0
     578:	98 8f       	std	Y+24, r25	; 0x18
     57a:	8f 8b       	std	Y+23, r24	; 0x17
     57c:	3f c0       	rjmp	.+126    	; 0x5fc <start_up_routine+0x114>
	else if (__tmp > 65535)
     57e:	20 e0       	ldi	r18, 0x00	; 0
     580:	3f ef       	ldi	r19, 0xFF	; 255
     582:	4f e7       	ldi	r20, 0x7F	; 127
     584:	57 e4       	ldi	r21, 0x47	; 71
     586:	6b 89       	ldd	r22, Y+19	; 0x13
     588:	7c 89       	ldd	r23, Y+20	; 0x14
     58a:	8d 89       	ldd	r24, Y+21	; 0x15
     58c:	9e 89       	ldd	r25, Y+22	; 0x16
     58e:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
     592:	18 16       	cp	r1, r24
     594:	4c f5       	brge	.+82     	; 0x5e8 <start_up_routine+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     596:	20 e0       	ldi	r18, 0x00	; 0
     598:	30 e0       	ldi	r19, 0x00	; 0
     59a:	40 e2       	ldi	r20, 0x20	; 32
     59c:	51 e4       	ldi	r21, 0x41	; 65
     59e:	69 81       	ldd	r22, Y+1	; 0x01
     5a0:	7a 81       	ldd	r23, Y+2	; 0x02
     5a2:	8b 81       	ldd	r24, Y+3	; 0x03
     5a4:	9c 81       	ldd	r25, Y+4	; 0x04
     5a6:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
     5aa:	dc 01       	movw	r26, r24
     5ac:	cb 01       	movw	r24, r22
     5ae:	bc 01       	movw	r22, r24
     5b0:	cd 01       	movw	r24, r26
     5b2:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
     5b6:	dc 01       	movw	r26, r24
     5b8:	cb 01       	movw	r24, r22
     5ba:	98 8f       	std	Y+24, r25	; 0x18
     5bc:	8f 8b       	std	Y+23, r24	; 0x17
     5be:	0f c0       	rjmp	.+30     	; 0x5de <start_up_routine+0xf6>
     5c0:	80 e9       	ldi	r24, 0x90	; 144
     5c2:	91 e0       	ldi	r25, 0x01	; 1
     5c4:	9a 8f       	std	Y+26, r25	; 0x1a
     5c6:	89 8f       	std	Y+25, r24	; 0x19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     5c8:	89 8d       	ldd	r24, Y+25	; 0x19
     5ca:	9a 8d       	ldd	r25, Y+26	; 0x1a
     5cc:	01 97       	sbiw	r24, 0x01	; 1
     5ce:	f1 f7       	brne	.-4      	; 0x5cc <start_up_routine+0xe4>
     5d0:	9a 8f       	std	Y+26, r25	; 0x1a
     5d2:	89 8f       	std	Y+25, r24	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     5d4:	8f 89       	ldd	r24, Y+23	; 0x17
     5d6:	98 8d       	ldd	r25, Y+24	; 0x18
     5d8:	01 97       	sbiw	r24, 0x01	; 1
     5da:	98 8f       	std	Y+24, r25	; 0x18
     5dc:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     5de:	8f 89       	ldd	r24, Y+23	; 0x17
     5e0:	98 8d       	ldd	r25, Y+24	; 0x18
     5e2:	89 2b       	or	r24, r25
     5e4:	69 f7       	brne	.-38     	; 0x5c0 <start_up_routine+0xd8>
     5e6:	14 c0       	rjmp	.+40     	; 0x610 <start_up_routine+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     5e8:	6b 89       	ldd	r22, Y+19	; 0x13
     5ea:	7c 89       	ldd	r23, Y+20	; 0x14
     5ec:	8d 89       	ldd	r24, Y+21	; 0x15
     5ee:	9e 89       	ldd	r25, Y+22	; 0x16
     5f0:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
     5f4:	dc 01       	movw	r26, r24
     5f6:	cb 01       	movw	r24, r22
     5f8:	98 8f       	std	Y+24, r25	; 0x18
     5fa:	8f 8b       	std	Y+23, r24	; 0x17
     5fc:	8f 89       	ldd	r24, Y+23	; 0x17
     5fe:	98 8d       	ldd	r25, Y+24	; 0x18
     600:	9c 8f       	std	Y+28, r25	; 0x1c
     602:	8b 8f       	std	Y+27, r24	; 0x1b
     604:	8b 8d       	ldd	r24, Y+27	; 0x1b
     606:	9c 8d       	ldd	r25, Y+28	; 0x1c
     608:	01 97       	sbiw	r24, 0x01	; 1
     60a:	f1 f7       	brne	.-4      	; 0x608 <start_up_routine+0x120>
     60c:	9c 8f       	std	Y+28, r25	; 0x1c
     60e:	8b 8f       	std	Y+27, r24	; 0x1b
	_delay_ms(200);
	to_uARM("M2210 F1000 T500\n");
     610:	8f e6       	ldi	r24, 0x6F	; 111
     612:	91 e0       	ldi	r25, 0x01	; 1
     614:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     618:	80 e0       	ldi	r24, 0x00	; 0
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	aa ef       	ldi	r26, 0xFA	; 250
     61e:	b3 e4       	ldi	r27, 0x43	; 67
     620:	8d 83       	std	Y+5, r24	; 0x05
     622:	9e 83       	std	Y+6, r25	; 0x06
     624:	af 83       	std	Y+7, r26	; 0x07
     626:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     628:	20 e0       	ldi	r18, 0x00	; 0
     62a:	30 e0       	ldi	r19, 0x00	; 0
     62c:	4a e7       	ldi	r20, 0x7A	; 122
     62e:	55 e4       	ldi	r21, 0x45	; 69
     630:	6d 81       	ldd	r22, Y+5	; 0x05
     632:	7e 81       	ldd	r23, Y+6	; 0x06
     634:	8f 81       	ldd	r24, Y+7	; 0x07
     636:	98 85       	ldd	r25, Y+8	; 0x08
     638:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
     63c:	dc 01       	movw	r26, r24
     63e:	cb 01       	movw	r24, r22
     640:	89 87       	std	Y+9, r24	; 0x09
     642:	9a 87       	std	Y+10, r25	; 0x0a
     644:	ab 87       	std	Y+11, r26	; 0x0b
     646:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     648:	20 e0       	ldi	r18, 0x00	; 0
     64a:	30 e0       	ldi	r19, 0x00	; 0
     64c:	40 e8       	ldi	r20, 0x80	; 128
     64e:	5f e3       	ldi	r21, 0x3F	; 63
     650:	69 85       	ldd	r22, Y+9	; 0x09
     652:	7a 85       	ldd	r23, Y+10	; 0x0a
     654:	8b 85       	ldd	r24, Y+11	; 0x0b
     656:	9c 85       	ldd	r25, Y+12	; 0x0c
     658:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
     65c:	88 23       	and	r24, r24
     65e:	2c f4       	brge	.+10     	; 0x66a <start_up_routine+0x182>
		__ticks = 1;
     660:	81 e0       	ldi	r24, 0x01	; 1
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	9e 87       	std	Y+14, r25	; 0x0e
     666:	8d 87       	std	Y+13, r24	; 0x0d
     668:	3f c0       	rjmp	.+126    	; 0x6e8 <start_up_routine+0x200>
	else if (__tmp > 65535)
     66a:	20 e0       	ldi	r18, 0x00	; 0
     66c:	3f ef       	ldi	r19, 0xFF	; 255
     66e:	4f e7       	ldi	r20, 0x7F	; 127
     670:	57 e4       	ldi	r21, 0x47	; 71
     672:	69 85       	ldd	r22, Y+9	; 0x09
     674:	7a 85       	ldd	r23, Y+10	; 0x0a
     676:	8b 85       	ldd	r24, Y+11	; 0x0b
     678:	9c 85       	ldd	r25, Y+12	; 0x0c
     67a:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
     67e:	18 16       	cp	r1, r24
     680:	4c f5       	brge	.+82     	; 0x6d4 <start_up_routine+0x1ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     682:	20 e0       	ldi	r18, 0x00	; 0
     684:	30 e0       	ldi	r19, 0x00	; 0
     686:	40 e2       	ldi	r20, 0x20	; 32
     688:	51 e4       	ldi	r21, 0x41	; 65
     68a:	6d 81       	ldd	r22, Y+5	; 0x05
     68c:	7e 81       	ldd	r23, Y+6	; 0x06
     68e:	8f 81       	ldd	r24, Y+7	; 0x07
     690:	98 85       	ldd	r25, Y+8	; 0x08
     692:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
     696:	dc 01       	movw	r26, r24
     698:	cb 01       	movw	r24, r22
     69a:	bc 01       	movw	r22, r24
     69c:	cd 01       	movw	r24, r26
     69e:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
     6a2:	dc 01       	movw	r26, r24
     6a4:	cb 01       	movw	r24, r22
     6a6:	9e 87       	std	Y+14, r25	; 0x0e
     6a8:	8d 87       	std	Y+13, r24	; 0x0d
     6aa:	0f c0       	rjmp	.+30     	; 0x6ca <start_up_routine+0x1e2>
     6ac:	80 e9       	ldi	r24, 0x90	; 144
     6ae:	91 e0       	ldi	r25, 0x01	; 1
     6b0:	98 8b       	std	Y+16, r25	; 0x10
     6b2:	8f 87       	std	Y+15, r24	; 0x0f
     6b4:	8f 85       	ldd	r24, Y+15	; 0x0f
     6b6:	98 89       	ldd	r25, Y+16	; 0x10
     6b8:	01 97       	sbiw	r24, 0x01	; 1
     6ba:	f1 f7       	brne	.-4      	; 0x6b8 <start_up_routine+0x1d0>
     6bc:	98 8b       	std	Y+16, r25	; 0x10
     6be:	8f 87       	std	Y+15, r24	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6c0:	8d 85       	ldd	r24, Y+13	; 0x0d
     6c2:	9e 85       	ldd	r25, Y+14	; 0x0e
     6c4:	01 97       	sbiw	r24, 0x01	; 1
     6c6:	9e 87       	std	Y+14, r25	; 0x0e
     6c8:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6ca:	8d 85       	ldd	r24, Y+13	; 0x0d
     6cc:	9e 85       	ldd	r25, Y+14	; 0x0e
     6ce:	89 2b       	or	r24, r25
     6d0:	69 f7       	brne	.-38     	; 0x6ac <start_up_routine+0x1c4>
     6d2:	14 c0       	rjmp	.+40     	; 0x6fc <start_up_routine+0x214>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     6d4:	69 85       	ldd	r22, Y+9	; 0x09
     6d6:	7a 85       	ldd	r23, Y+10	; 0x0a
     6d8:	8b 85       	ldd	r24, Y+11	; 0x0b
     6da:	9c 85       	ldd	r25, Y+12	; 0x0c
     6dc:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
     6e0:	dc 01       	movw	r26, r24
     6e2:	cb 01       	movw	r24, r22
     6e4:	9e 87       	std	Y+14, r25	; 0x0e
     6e6:	8d 87       	std	Y+13, r24	; 0x0d
     6e8:	8d 85       	ldd	r24, Y+13	; 0x0d
     6ea:	9e 85       	ldd	r25, Y+14	; 0x0e
     6ec:	9a 8b       	std	Y+18, r25	; 0x12
     6ee:	89 8b       	std	Y+17, r24	; 0x11
     6f0:	89 89       	ldd	r24, Y+17	; 0x11
     6f2:	9a 89       	ldd	r25, Y+18	; 0x12
     6f4:	01 97       	sbiw	r24, 0x01	; 1
     6f6:	f1 f7       	brne	.-4      	; 0x6f4 <start_up_routine+0x20c>
     6f8:	9a 8b       	std	Y+18, r25	; 0x12
     6fa:	89 8b       	std	Y+17, r24	; 0x11
	_delay_ms(500);
	to_uARM("M2210 F2000 T500\n");
     6fc:	81 e8       	ldi	r24, 0x81	; 129
     6fe:	91 e0       	ldi	r25, 0x01	; 1
     700:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
	clear_lcd();
     704:	0e 94 19 20 	call	0x4032	; 0x4032 <clear_lcd>
}
     708:	00 00       	nop
     70a:	6c 96       	adiw	r28, 0x1c	; 28
     70c:	0f b6       	in	r0, 0x3f	; 63
     70e:	f8 94       	cli
     710:	de bf       	out	0x3e, r29	; 62
     712:	0f be       	out	0x3f, r0	; 63
     714:	cd bf       	out	0x3d, r28	; 61
     716:	df 91       	pop	r29
     718:	cf 91       	pop	r28
     71a:	08 95       	ret

0000071c <main>:

int main (void)
{
     71c:	cf 92       	push	r12
     71e:	ef 92       	push	r14
     720:	0f 93       	push	r16
     722:	1f 93       	push	r17
     724:	cf 93       	push	r28
     726:	df 93       	push	r29
     728:	cd b7       	in	r28, 0x3d	; 61
     72a:	de b7       	in	r29, 0x3e	; 62
     72c:	ca 53       	subi	r28, 0x3A	; 58
     72e:	d2 40       	sbci	r29, 0x02	; 2
     730:	0f b6       	in	r0, 0x3f	; 63
     732:	f8 94       	cli
     734:	de bf       	out	0x3e, r29	; 62
     736:	0f be       	out	0x3f, r0	; 63
     738:	cd bf       	out	0x3d, r28	; 61
	start_up_routine();
     73a:	0e 94 74 02 	call	0x4e8	; 0x4e8 <start_up_routine>
	unsigned char taster;
	//unsigned char direction;
	int recieved_X; 
	int recieved_Y;
	unsigned char buffer [30];
	unsigned char check=0;
     73e:	1d 82       	std	Y+5, r1	; 0x05
	unsigned char counter=0;
     740:	1e 82       	std	Y+6, r1	; 0x06
	unsigned char routine_done=0;
     742:	1f 82       	std	Y+7, r1	; 0x07
	unsigned int sound[14]={262,277,294,311,330,349,370,392,415,440,466,494,523,0};
     744:	ce 01       	movw	r24, r28
     746:	87 52       	subi	r24, 0x27	; 39
     748:	9e 4f       	sbci	r25, 0xFE	; 254
     74a:	2c e1       	ldi	r18, 0x1C	; 28
     74c:	ea ec       	ldi	r30, 0xCA	; 202
     74e:	f2 e0       	ldi	r31, 0x02	; 2
     750:	dc 01       	movw	r26, r24
     752:	01 90       	ld	r0, Z+
     754:	0d 92       	st	X+, r0
     756:	2a 95       	dec	r18
     758:	e1 f7       	brne	.-8      	; 0x752 <main+0x36>
	unsigned char music[50]={0,0,2,2,0,0,5,5,4,4,4,4,0,0,2,2,0,0,7,7,5,5,5,5,0,0,12,12,9,9,5,5,4,4,2,2,10,10,9,9,5,5,7,7,5,5,5,5,5,5};
     75a:	ce 01       	movw	r24, r28
     75c:	8b 50       	subi	r24, 0x0B	; 11
     75e:	9e 4f       	sbci	r25, 0xFE	; 254
     760:	22 e3       	ldi	r18, 0x32	; 50
     762:	e6 ee       	ldi	r30, 0xE6	; 230
     764:	f2 e0       	ldi	r31, 0x02	; 2
     766:	dc 01       	movw	r26, r24
     768:	01 90       	ld	r0, Z+
     76a:	0d 92       	st	X+, r0
     76c:	2a 95       	dec	r18
     76e:	e1 f7       	brne	.-8      	; 0x768 <main+0x4c>
	unsigned int tone;
	
	while(1)
	{
	//	direction=get_direction();
		taster = get_LCD_Taster();
     770:	0e 94 bf 00 	call	0x17e	; 0x17e <get_LCD_Taster>
     774:	88 87       	std	Y+8, r24	; 0x08
		DIP_Switch=get_DIP_Switch();
     776:	0e 94 5d 00 	call	0xba	; 0xba <get_DIP_Switch>
     77a:	80 93 18 03 	sts	0x0318, r24	; 0x800318 <__data_end>
		if ((DIP_Switch&0x01)&&(taster&0x01))
     77e:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <__data_end>
     782:	88 2f       	mov	r24, r24
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	81 70       	andi	r24, 0x01	; 1
     788:	99 27       	eor	r25, r25
     78a:	89 2b       	or	r24, r25
     78c:	11 f4       	brne	.+4      	; 0x792 <main+0x76>
     78e:	0c 94 00 16 	jmp	0x2c00	; 0x2c00 <__stack+0x1b01>
     792:	88 85       	ldd	r24, Y+8	; 0x08
     794:	88 2f       	mov	r24, r24
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	81 70       	andi	r24, 0x01	; 1
     79a:	99 27       	eor	r25, r25
     79c:	89 2b       	or	r24, r25
     79e:	11 f4       	brne	.+4      	; 0x7a4 <main+0x88>
     7a0:	0c 94 00 16 	jmp	0x2c00	; 0x2c00 <__stack+0x1b01>
				//tone=sound[music[i]];
				//snprintf(sound_buffer,30,"M2210 F%d T250\n",tone);
				//to_uARM(sound_buffer);
				//_delay_ms(249);
			//}
			to_uARM("M2210 F660 T100\n");
     7a4:	83 e9       	ldi	r24, 0x93	; 147
     7a6:	91 e0       	ldi	r25, 0x01	; 1
     7a8:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     7ac:	80 e0       	ldi	r24, 0x00	; 0
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	aa e7       	ldi	r26, 0x7A	; 122
     7b2:	b3 e4       	ldi	r27, 0x43	; 67
     7b4:	8d 87       	std	Y+13, r24	; 0x0d
     7b6:	9e 87       	std	Y+14, r25	; 0x0e
     7b8:	af 87       	std	Y+15, r26	; 0x0f
     7ba:	b8 8b       	std	Y+16, r27	; 0x10

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     7bc:	8e 01       	movw	r16, r28
     7be:	05 59       	subi	r16, 0x95	; 149
     7c0:	1e 4f       	sbci	r17, 0xFE	; 254
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	4a e7       	ldi	r20, 0x7A	; 122
     7c8:	55 e4       	ldi	r21, 0x45	; 69
     7ca:	6d 85       	ldd	r22, Y+13	; 0x0d
     7cc:	7e 85       	ldd	r23, Y+14	; 0x0e
     7ce:	8f 85       	ldd	r24, Y+15	; 0x0f
     7d0:	98 89       	ldd	r25, Y+16	; 0x10
     7d2:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
     7d6:	dc 01       	movw	r26, r24
     7d8:	cb 01       	movw	r24, r22
     7da:	f8 01       	movw	r30, r16
     7dc:	80 83       	st	Z, r24
     7de:	91 83       	std	Z+1, r25	; 0x01
     7e0:	a2 83       	std	Z+2, r26	; 0x02
     7e2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     7e4:	ce 01       	movw	r24, r28
     7e6:	85 59       	subi	r24, 0x95	; 149
     7e8:	9e 4f       	sbci	r25, 0xFE	; 254
     7ea:	20 e0       	ldi	r18, 0x00	; 0
     7ec:	30 e0       	ldi	r19, 0x00	; 0
     7ee:	40 e8       	ldi	r20, 0x80	; 128
     7f0:	5f e3       	ldi	r21, 0x3F	; 63
     7f2:	fc 01       	movw	r30, r24
     7f4:	60 81       	ld	r22, Z
     7f6:	71 81       	ldd	r23, Z+1	; 0x01
     7f8:	82 81       	ldd	r24, Z+2	; 0x02
     7fa:	93 81       	ldd	r25, Z+3	; 0x03
     7fc:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
     800:	88 23       	and	r24, r24
     802:	4c f4       	brge	.+18     	; 0x816 <main+0xfa>
		__ticks = 1;
     804:	ce 01       	movw	r24, r28
     806:	81 59       	subi	r24, 0x91	; 145
     808:	9e 4f       	sbci	r25, 0xFE	; 254
     80a:	21 e0       	ldi	r18, 0x01	; 1
     80c:	30 e0       	ldi	r19, 0x00	; 0
     80e:	fc 01       	movw	r30, r24
     810:	31 83       	std	Z+1, r19	; 0x01
     812:	20 83       	st	Z, r18
     814:	69 c0       	rjmp	.+210    	; 0x8e8 <main+0x1cc>
	else if (__tmp > 65535)
     816:	ce 01       	movw	r24, r28
     818:	85 59       	subi	r24, 0x95	; 149
     81a:	9e 4f       	sbci	r25, 0xFE	; 254
     81c:	20 e0       	ldi	r18, 0x00	; 0
     81e:	3f ef       	ldi	r19, 0xFF	; 255
     820:	4f e7       	ldi	r20, 0x7F	; 127
     822:	57 e4       	ldi	r21, 0x47	; 71
     824:	fc 01       	movw	r30, r24
     826:	60 81       	ld	r22, Z
     828:	71 81       	ldd	r23, Z+1	; 0x01
     82a:	82 81       	ldd	r24, Z+2	; 0x02
     82c:	93 81       	ldd	r25, Z+3	; 0x03
     82e:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
     832:	18 16       	cp	r1, r24
     834:	0c f0       	brlt	.+2      	; 0x838 <main+0x11c>
     836:	46 c0       	rjmp	.+140    	; 0x8c4 <main+0x1a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     838:	20 e0       	ldi	r18, 0x00	; 0
     83a:	30 e0       	ldi	r19, 0x00	; 0
     83c:	40 e2       	ldi	r20, 0x20	; 32
     83e:	51 e4       	ldi	r21, 0x41	; 65
     840:	6d 85       	ldd	r22, Y+13	; 0x0d
     842:	7e 85       	ldd	r23, Y+14	; 0x0e
     844:	8f 85       	ldd	r24, Y+15	; 0x0f
     846:	98 89       	ldd	r25, Y+16	; 0x10
     848:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
     84c:	dc 01       	movw	r26, r24
     84e:	cb 01       	movw	r24, r22
     850:	8e 01       	movw	r16, r28
     852:	01 59       	subi	r16, 0x91	; 145
     854:	1e 4f       	sbci	r17, 0xFE	; 254
     856:	bc 01       	movw	r22, r24
     858:	cd 01       	movw	r24, r26
     85a:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
     85e:	dc 01       	movw	r26, r24
     860:	cb 01       	movw	r24, r22
     862:	f8 01       	movw	r30, r16
     864:	91 83       	std	Z+1, r25	; 0x01
     866:	80 83       	st	Z, r24
     868:	24 c0       	rjmp	.+72     	; 0x8b2 <main+0x196>
     86a:	ce 01       	movw	r24, r28
     86c:	8f 58       	subi	r24, 0x8F	; 143
     86e:	9e 4f       	sbci	r25, 0xFE	; 254
     870:	20 e9       	ldi	r18, 0x90	; 144
     872:	31 e0       	ldi	r19, 0x01	; 1
     874:	fc 01       	movw	r30, r24
     876:	31 83       	std	Z+1, r19	; 0x01
     878:	20 83       	st	Z, r18
     87a:	ce 01       	movw	r24, r28
     87c:	8f 58       	subi	r24, 0x8F	; 143
     87e:	9e 4f       	sbci	r25, 0xFE	; 254
     880:	fc 01       	movw	r30, r24
     882:	80 81       	ld	r24, Z
     884:	91 81       	ldd	r25, Z+1	; 0x01
     886:	01 97       	sbiw	r24, 0x01	; 1
     888:	f1 f7       	brne	.-4      	; 0x886 <main+0x16a>
     88a:	9e 01       	movw	r18, r28
     88c:	2f 58       	subi	r18, 0x8F	; 143
     88e:	3e 4f       	sbci	r19, 0xFE	; 254
     890:	f9 01       	movw	r30, r18
     892:	91 83       	std	Z+1, r25	; 0x01
     894:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     896:	ce 01       	movw	r24, r28
     898:	81 59       	subi	r24, 0x91	; 145
     89a:	9e 4f       	sbci	r25, 0xFE	; 254
     89c:	9e 01       	movw	r18, r28
     89e:	21 59       	subi	r18, 0x91	; 145
     8a0:	3e 4f       	sbci	r19, 0xFE	; 254
     8a2:	f9 01       	movw	r30, r18
     8a4:	20 81       	ld	r18, Z
     8a6:	31 81       	ldd	r19, Z+1	; 0x01
     8a8:	21 50       	subi	r18, 0x01	; 1
     8aa:	31 09       	sbc	r19, r1
     8ac:	fc 01       	movw	r30, r24
     8ae:	31 83       	std	Z+1, r19	; 0x01
     8b0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8b2:	ce 01       	movw	r24, r28
     8b4:	81 59       	subi	r24, 0x91	; 145
     8b6:	9e 4f       	sbci	r25, 0xFE	; 254
     8b8:	fc 01       	movw	r30, r24
     8ba:	80 81       	ld	r24, Z
     8bc:	91 81       	ldd	r25, Z+1	; 0x01
     8be:	89 2b       	or	r24, r25
     8c0:	a1 f6       	brne	.-88     	; 0x86a <main+0x14e>
     8c2:	2c c0       	rjmp	.+88     	; 0x91c <main+0x200>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     8c4:	8e 01       	movw	r16, r28
     8c6:	01 59       	subi	r16, 0x91	; 145
     8c8:	1e 4f       	sbci	r17, 0xFE	; 254
     8ca:	ce 01       	movw	r24, r28
     8cc:	85 59       	subi	r24, 0x95	; 149
     8ce:	9e 4f       	sbci	r25, 0xFE	; 254
     8d0:	fc 01       	movw	r30, r24
     8d2:	60 81       	ld	r22, Z
     8d4:	71 81       	ldd	r23, Z+1	; 0x01
     8d6:	82 81       	ldd	r24, Z+2	; 0x02
     8d8:	93 81       	ldd	r25, Z+3	; 0x03
     8da:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
     8de:	dc 01       	movw	r26, r24
     8e0:	cb 01       	movw	r24, r22
     8e2:	f8 01       	movw	r30, r16
     8e4:	91 83       	std	Z+1, r25	; 0x01
     8e6:	80 83       	st	Z, r24
     8e8:	ce 01       	movw	r24, r28
     8ea:	8d 58       	subi	r24, 0x8D	; 141
     8ec:	9e 4f       	sbci	r25, 0xFE	; 254
     8ee:	9e 01       	movw	r18, r28
     8f0:	21 59       	subi	r18, 0x91	; 145
     8f2:	3e 4f       	sbci	r19, 0xFE	; 254
     8f4:	f9 01       	movw	r30, r18
     8f6:	20 81       	ld	r18, Z
     8f8:	31 81       	ldd	r19, Z+1	; 0x01
     8fa:	fc 01       	movw	r30, r24
     8fc:	31 83       	std	Z+1, r19	; 0x01
     8fe:	20 83       	st	Z, r18
     900:	ce 01       	movw	r24, r28
     902:	8d 58       	subi	r24, 0x8D	; 141
     904:	9e 4f       	sbci	r25, 0xFE	; 254
     906:	fc 01       	movw	r30, r24
     908:	80 81       	ld	r24, Z
     90a:	91 81       	ldd	r25, Z+1	; 0x01
     90c:	01 97       	sbiw	r24, 0x01	; 1
     90e:	f1 f7       	brne	.-4      	; 0x90c <main+0x1f0>
     910:	9e 01       	movw	r18, r28
     912:	2d 58       	subi	r18, 0x8D	; 141
     914:	3e 4f       	sbci	r19, 0xFE	; 254
     916:	f9 01       	movw	r30, r18
     918:	91 83       	std	Z+1, r25	; 0x01
     91a:	80 83       	st	Z, r24
			_delay_ms(250);
			to_uARM("M2210 F660 T100\n");
     91c:	83 e9       	ldi	r24, 0x93	; 147
     91e:	91 e0       	ldi	r25, 0x01	; 1
     920:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     924:	80 e0       	ldi	r24, 0x00	; 0
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a8 ec       	ldi	r26, 0xC8	; 200
     92a:	b3 e4       	ldi	r27, 0x43	; 67
     92c:	89 8b       	std	Y+17, r24	; 0x11
     92e:	9a 8b       	std	Y+18, r25	; 0x12
     930:	ab 8b       	std	Y+19, r26	; 0x13
     932:	bc 8b       	std	Y+20, r27	; 0x14

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     934:	8e 01       	movw	r16, r28
     936:	0f 59       	subi	r16, 0x9F	; 159
     938:	1e 4f       	sbci	r17, 0xFE	; 254
     93a:	20 e0       	ldi	r18, 0x00	; 0
     93c:	30 e0       	ldi	r19, 0x00	; 0
     93e:	4a e7       	ldi	r20, 0x7A	; 122
     940:	55 e4       	ldi	r21, 0x45	; 69
     942:	69 89       	ldd	r22, Y+17	; 0x11
     944:	7a 89       	ldd	r23, Y+18	; 0x12
     946:	8b 89       	ldd	r24, Y+19	; 0x13
     948:	9c 89       	ldd	r25, Y+20	; 0x14
     94a:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
     94e:	dc 01       	movw	r26, r24
     950:	cb 01       	movw	r24, r22
     952:	f8 01       	movw	r30, r16
     954:	80 83       	st	Z, r24
     956:	91 83       	std	Z+1, r25	; 0x01
     958:	a2 83       	std	Z+2, r26	; 0x02
     95a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     95c:	ce 01       	movw	r24, r28
     95e:	8f 59       	subi	r24, 0x9F	; 159
     960:	9e 4f       	sbci	r25, 0xFE	; 254
     962:	20 e0       	ldi	r18, 0x00	; 0
     964:	30 e0       	ldi	r19, 0x00	; 0
     966:	40 e8       	ldi	r20, 0x80	; 128
     968:	5f e3       	ldi	r21, 0x3F	; 63
     96a:	fc 01       	movw	r30, r24
     96c:	60 81       	ld	r22, Z
     96e:	71 81       	ldd	r23, Z+1	; 0x01
     970:	82 81       	ldd	r24, Z+2	; 0x02
     972:	93 81       	ldd	r25, Z+3	; 0x03
     974:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
     978:	88 23       	and	r24, r24
     97a:	4c f4       	brge	.+18     	; 0x98e <main+0x272>
		__ticks = 1;
     97c:	ce 01       	movw	r24, r28
     97e:	8b 59       	subi	r24, 0x9B	; 155
     980:	9e 4f       	sbci	r25, 0xFE	; 254
     982:	21 e0       	ldi	r18, 0x01	; 1
     984:	30 e0       	ldi	r19, 0x00	; 0
     986:	fc 01       	movw	r30, r24
     988:	31 83       	std	Z+1, r19	; 0x01
     98a:	20 83       	st	Z, r18
     98c:	69 c0       	rjmp	.+210    	; 0xa60 <main+0x344>
	else if (__tmp > 65535)
     98e:	ce 01       	movw	r24, r28
     990:	8f 59       	subi	r24, 0x9F	; 159
     992:	9e 4f       	sbci	r25, 0xFE	; 254
     994:	20 e0       	ldi	r18, 0x00	; 0
     996:	3f ef       	ldi	r19, 0xFF	; 255
     998:	4f e7       	ldi	r20, 0x7F	; 127
     99a:	57 e4       	ldi	r21, 0x47	; 71
     99c:	fc 01       	movw	r30, r24
     99e:	60 81       	ld	r22, Z
     9a0:	71 81       	ldd	r23, Z+1	; 0x01
     9a2:	82 81       	ldd	r24, Z+2	; 0x02
     9a4:	93 81       	ldd	r25, Z+3	; 0x03
     9a6:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
     9aa:	18 16       	cp	r1, r24
     9ac:	0c f0       	brlt	.+2      	; 0x9b0 <main+0x294>
     9ae:	46 c0       	rjmp	.+140    	; 0xa3c <main+0x320>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     9b0:	20 e0       	ldi	r18, 0x00	; 0
     9b2:	30 e0       	ldi	r19, 0x00	; 0
     9b4:	40 e2       	ldi	r20, 0x20	; 32
     9b6:	51 e4       	ldi	r21, 0x41	; 65
     9b8:	69 89       	ldd	r22, Y+17	; 0x11
     9ba:	7a 89       	ldd	r23, Y+18	; 0x12
     9bc:	8b 89       	ldd	r24, Y+19	; 0x13
     9be:	9c 89       	ldd	r25, Y+20	; 0x14
     9c0:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
     9c4:	dc 01       	movw	r26, r24
     9c6:	cb 01       	movw	r24, r22
     9c8:	8e 01       	movw	r16, r28
     9ca:	0b 59       	subi	r16, 0x9B	; 155
     9cc:	1e 4f       	sbci	r17, 0xFE	; 254
     9ce:	bc 01       	movw	r22, r24
     9d0:	cd 01       	movw	r24, r26
     9d2:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
     9d6:	dc 01       	movw	r26, r24
     9d8:	cb 01       	movw	r24, r22
     9da:	f8 01       	movw	r30, r16
     9dc:	91 83       	std	Z+1, r25	; 0x01
     9de:	80 83       	st	Z, r24
     9e0:	24 c0       	rjmp	.+72     	; 0xa2a <main+0x30e>
     9e2:	ce 01       	movw	r24, r28
     9e4:	89 59       	subi	r24, 0x99	; 153
     9e6:	9e 4f       	sbci	r25, 0xFE	; 254
     9e8:	20 e9       	ldi	r18, 0x90	; 144
     9ea:	31 e0       	ldi	r19, 0x01	; 1
     9ec:	fc 01       	movw	r30, r24
     9ee:	31 83       	std	Z+1, r19	; 0x01
     9f0:	20 83       	st	Z, r18
     9f2:	ce 01       	movw	r24, r28
     9f4:	89 59       	subi	r24, 0x99	; 153
     9f6:	9e 4f       	sbci	r25, 0xFE	; 254
     9f8:	fc 01       	movw	r30, r24
     9fa:	80 81       	ld	r24, Z
     9fc:	91 81       	ldd	r25, Z+1	; 0x01
     9fe:	01 97       	sbiw	r24, 0x01	; 1
     a00:	f1 f7       	brne	.-4      	; 0x9fe <main+0x2e2>
     a02:	9e 01       	movw	r18, r28
     a04:	29 59       	subi	r18, 0x99	; 153
     a06:	3e 4f       	sbci	r19, 0xFE	; 254
     a08:	f9 01       	movw	r30, r18
     a0a:	91 83       	std	Z+1, r25	; 0x01
     a0c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a0e:	ce 01       	movw	r24, r28
     a10:	8b 59       	subi	r24, 0x9B	; 155
     a12:	9e 4f       	sbci	r25, 0xFE	; 254
     a14:	9e 01       	movw	r18, r28
     a16:	2b 59       	subi	r18, 0x9B	; 155
     a18:	3e 4f       	sbci	r19, 0xFE	; 254
     a1a:	f9 01       	movw	r30, r18
     a1c:	20 81       	ld	r18, Z
     a1e:	31 81       	ldd	r19, Z+1	; 0x01
     a20:	21 50       	subi	r18, 0x01	; 1
     a22:	31 09       	sbc	r19, r1
     a24:	fc 01       	movw	r30, r24
     a26:	31 83       	std	Z+1, r19	; 0x01
     a28:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a2a:	ce 01       	movw	r24, r28
     a2c:	8b 59       	subi	r24, 0x9B	; 155
     a2e:	9e 4f       	sbci	r25, 0xFE	; 254
     a30:	fc 01       	movw	r30, r24
     a32:	80 81       	ld	r24, Z
     a34:	91 81       	ldd	r25, Z+1	; 0x01
     a36:	89 2b       	or	r24, r25
     a38:	a1 f6       	brne	.-88     	; 0x9e2 <main+0x2c6>
     a3a:	2c c0       	rjmp	.+88     	; 0xa94 <main+0x378>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a3c:	8e 01       	movw	r16, r28
     a3e:	0b 59       	subi	r16, 0x9B	; 155
     a40:	1e 4f       	sbci	r17, 0xFE	; 254
     a42:	ce 01       	movw	r24, r28
     a44:	8f 59       	subi	r24, 0x9F	; 159
     a46:	9e 4f       	sbci	r25, 0xFE	; 254
     a48:	fc 01       	movw	r30, r24
     a4a:	60 81       	ld	r22, Z
     a4c:	71 81       	ldd	r23, Z+1	; 0x01
     a4e:	82 81       	ldd	r24, Z+2	; 0x02
     a50:	93 81       	ldd	r25, Z+3	; 0x03
     a52:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
     a56:	dc 01       	movw	r26, r24
     a58:	cb 01       	movw	r24, r22
     a5a:	f8 01       	movw	r30, r16
     a5c:	91 83       	std	Z+1, r25	; 0x01
     a5e:	80 83       	st	Z, r24
     a60:	ce 01       	movw	r24, r28
     a62:	87 59       	subi	r24, 0x97	; 151
     a64:	9e 4f       	sbci	r25, 0xFE	; 254
     a66:	9e 01       	movw	r18, r28
     a68:	2b 59       	subi	r18, 0x9B	; 155
     a6a:	3e 4f       	sbci	r19, 0xFE	; 254
     a6c:	f9 01       	movw	r30, r18
     a6e:	20 81       	ld	r18, Z
     a70:	31 81       	ldd	r19, Z+1	; 0x01
     a72:	fc 01       	movw	r30, r24
     a74:	31 83       	std	Z+1, r19	; 0x01
     a76:	20 83       	st	Z, r18
     a78:	ce 01       	movw	r24, r28
     a7a:	87 59       	subi	r24, 0x97	; 151
     a7c:	9e 4f       	sbci	r25, 0xFE	; 254
     a7e:	fc 01       	movw	r30, r24
     a80:	80 81       	ld	r24, Z
     a82:	91 81       	ldd	r25, Z+1	; 0x01
     a84:	01 97       	sbiw	r24, 0x01	; 1
     a86:	f1 f7       	brne	.-4      	; 0xa84 <main+0x368>
     a88:	9e 01       	movw	r18, r28
     a8a:	27 59       	subi	r18, 0x97	; 151
     a8c:	3e 4f       	sbci	r19, 0xFE	; 254
     a8e:	f9 01       	movw	r30, r18
     a90:	91 83       	std	Z+1, r25	; 0x01
     a92:	80 83       	st	Z, r24
			_delay_ms(400);
			to_uARM("M2210 F660 T100\n");
     a94:	83 e9       	ldi	r24, 0x93	; 147
     a96:	91 e0       	ldi	r25, 0x01	; 1
     a98:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     a9c:	80 e0       	ldi	r24, 0x00	; 0
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	a8 ec       	ldi	r26, 0xC8	; 200
     aa2:	b3 e4       	ldi	r27, 0x43	; 67
     aa4:	8d 8b       	std	Y+21, r24	; 0x15
     aa6:	9e 8b       	std	Y+22, r25	; 0x16
     aa8:	af 8b       	std	Y+23, r26	; 0x17
     aaa:	b8 8f       	std	Y+24, r27	; 0x18

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     aac:	8e 01       	movw	r16, r28
     aae:	09 5a       	subi	r16, 0xA9	; 169
     ab0:	1e 4f       	sbci	r17, 0xFE	; 254
     ab2:	20 e0       	ldi	r18, 0x00	; 0
     ab4:	30 e0       	ldi	r19, 0x00	; 0
     ab6:	4a e7       	ldi	r20, 0x7A	; 122
     ab8:	55 e4       	ldi	r21, 0x45	; 69
     aba:	6d 89       	ldd	r22, Y+21	; 0x15
     abc:	7e 89       	ldd	r23, Y+22	; 0x16
     abe:	8f 89       	ldd	r24, Y+23	; 0x17
     ac0:	98 8d       	ldd	r25, Y+24	; 0x18
     ac2:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
     ac6:	dc 01       	movw	r26, r24
     ac8:	cb 01       	movw	r24, r22
     aca:	f8 01       	movw	r30, r16
     acc:	80 83       	st	Z, r24
     ace:	91 83       	std	Z+1, r25	; 0x01
     ad0:	a2 83       	std	Z+2, r26	; 0x02
     ad2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     ad4:	ce 01       	movw	r24, r28
     ad6:	89 5a       	subi	r24, 0xA9	; 169
     ad8:	9e 4f       	sbci	r25, 0xFE	; 254
     ada:	20 e0       	ldi	r18, 0x00	; 0
     adc:	30 e0       	ldi	r19, 0x00	; 0
     ade:	40 e8       	ldi	r20, 0x80	; 128
     ae0:	5f e3       	ldi	r21, 0x3F	; 63
     ae2:	fc 01       	movw	r30, r24
     ae4:	60 81       	ld	r22, Z
     ae6:	71 81       	ldd	r23, Z+1	; 0x01
     ae8:	82 81       	ldd	r24, Z+2	; 0x02
     aea:	93 81       	ldd	r25, Z+3	; 0x03
     aec:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
     af0:	88 23       	and	r24, r24
     af2:	4c f4       	brge	.+18     	; 0xb06 <main+0x3ea>
		__ticks = 1;
     af4:	ce 01       	movw	r24, r28
     af6:	85 5a       	subi	r24, 0xA5	; 165
     af8:	9e 4f       	sbci	r25, 0xFE	; 254
     afa:	21 e0       	ldi	r18, 0x01	; 1
     afc:	30 e0       	ldi	r19, 0x00	; 0
     afe:	fc 01       	movw	r30, r24
     b00:	31 83       	std	Z+1, r19	; 0x01
     b02:	20 83       	st	Z, r18
     b04:	69 c0       	rjmp	.+210    	; 0xbd8 <main+0x4bc>
	else if (__tmp > 65535)
     b06:	ce 01       	movw	r24, r28
     b08:	89 5a       	subi	r24, 0xA9	; 169
     b0a:	9e 4f       	sbci	r25, 0xFE	; 254
     b0c:	20 e0       	ldi	r18, 0x00	; 0
     b0e:	3f ef       	ldi	r19, 0xFF	; 255
     b10:	4f e7       	ldi	r20, 0x7F	; 127
     b12:	57 e4       	ldi	r21, 0x47	; 71
     b14:	fc 01       	movw	r30, r24
     b16:	60 81       	ld	r22, Z
     b18:	71 81       	ldd	r23, Z+1	; 0x01
     b1a:	82 81       	ldd	r24, Z+2	; 0x02
     b1c:	93 81       	ldd	r25, Z+3	; 0x03
     b1e:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
     b22:	18 16       	cp	r1, r24
     b24:	0c f0       	brlt	.+2      	; 0xb28 <main+0x40c>
     b26:	46 c0       	rjmp	.+140    	; 0xbb4 <main+0x498>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b28:	20 e0       	ldi	r18, 0x00	; 0
     b2a:	30 e0       	ldi	r19, 0x00	; 0
     b2c:	40 e2       	ldi	r20, 0x20	; 32
     b2e:	51 e4       	ldi	r21, 0x41	; 65
     b30:	6d 89       	ldd	r22, Y+21	; 0x15
     b32:	7e 89       	ldd	r23, Y+22	; 0x16
     b34:	8f 89       	ldd	r24, Y+23	; 0x17
     b36:	98 8d       	ldd	r25, Y+24	; 0x18
     b38:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
     b3c:	dc 01       	movw	r26, r24
     b3e:	cb 01       	movw	r24, r22
     b40:	8e 01       	movw	r16, r28
     b42:	05 5a       	subi	r16, 0xA5	; 165
     b44:	1e 4f       	sbci	r17, 0xFE	; 254
     b46:	bc 01       	movw	r22, r24
     b48:	cd 01       	movw	r24, r26
     b4a:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
     b4e:	dc 01       	movw	r26, r24
     b50:	cb 01       	movw	r24, r22
     b52:	f8 01       	movw	r30, r16
     b54:	91 83       	std	Z+1, r25	; 0x01
     b56:	80 83       	st	Z, r24
     b58:	24 c0       	rjmp	.+72     	; 0xba2 <main+0x486>
     b5a:	ce 01       	movw	r24, r28
     b5c:	83 5a       	subi	r24, 0xA3	; 163
     b5e:	9e 4f       	sbci	r25, 0xFE	; 254
     b60:	20 e9       	ldi	r18, 0x90	; 144
     b62:	31 e0       	ldi	r19, 0x01	; 1
     b64:	fc 01       	movw	r30, r24
     b66:	31 83       	std	Z+1, r19	; 0x01
     b68:	20 83       	st	Z, r18
     b6a:	ce 01       	movw	r24, r28
     b6c:	83 5a       	subi	r24, 0xA3	; 163
     b6e:	9e 4f       	sbci	r25, 0xFE	; 254
     b70:	fc 01       	movw	r30, r24
     b72:	80 81       	ld	r24, Z
     b74:	91 81       	ldd	r25, Z+1	; 0x01
     b76:	01 97       	sbiw	r24, 0x01	; 1
     b78:	f1 f7       	brne	.-4      	; 0xb76 <main+0x45a>
     b7a:	9e 01       	movw	r18, r28
     b7c:	23 5a       	subi	r18, 0xA3	; 163
     b7e:	3e 4f       	sbci	r19, 0xFE	; 254
     b80:	f9 01       	movw	r30, r18
     b82:	91 83       	std	Z+1, r25	; 0x01
     b84:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b86:	ce 01       	movw	r24, r28
     b88:	85 5a       	subi	r24, 0xA5	; 165
     b8a:	9e 4f       	sbci	r25, 0xFE	; 254
     b8c:	9e 01       	movw	r18, r28
     b8e:	25 5a       	subi	r18, 0xA5	; 165
     b90:	3e 4f       	sbci	r19, 0xFE	; 254
     b92:	f9 01       	movw	r30, r18
     b94:	20 81       	ld	r18, Z
     b96:	31 81       	ldd	r19, Z+1	; 0x01
     b98:	21 50       	subi	r18, 0x01	; 1
     b9a:	31 09       	sbc	r19, r1
     b9c:	fc 01       	movw	r30, r24
     b9e:	31 83       	std	Z+1, r19	; 0x01
     ba0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ba2:	ce 01       	movw	r24, r28
     ba4:	85 5a       	subi	r24, 0xA5	; 165
     ba6:	9e 4f       	sbci	r25, 0xFE	; 254
     ba8:	fc 01       	movw	r30, r24
     baa:	80 81       	ld	r24, Z
     bac:	91 81       	ldd	r25, Z+1	; 0x01
     bae:	89 2b       	or	r24, r25
     bb0:	a1 f6       	brne	.-88     	; 0xb5a <main+0x43e>
     bb2:	2c c0       	rjmp	.+88     	; 0xc0c <main+0x4f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     bb4:	8e 01       	movw	r16, r28
     bb6:	05 5a       	subi	r16, 0xA5	; 165
     bb8:	1e 4f       	sbci	r17, 0xFE	; 254
     bba:	ce 01       	movw	r24, r28
     bbc:	89 5a       	subi	r24, 0xA9	; 169
     bbe:	9e 4f       	sbci	r25, 0xFE	; 254
     bc0:	fc 01       	movw	r30, r24
     bc2:	60 81       	ld	r22, Z
     bc4:	71 81       	ldd	r23, Z+1	; 0x01
     bc6:	82 81       	ldd	r24, Z+2	; 0x02
     bc8:	93 81       	ldd	r25, Z+3	; 0x03
     bca:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
     bce:	dc 01       	movw	r26, r24
     bd0:	cb 01       	movw	r24, r22
     bd2:	f8 01       	movw	r30, r16
     bd4:	91 83       	std	Z+1, r25	; 0x01
     bd6:	80 83       	st	Z, r24
     bd8:	ce 01       	movw	r24, r28
     bda:	81 5a       	subi	r24, 0xA1	; 161
     bdc:	9e 4f       	sbci	r25, 0xFE	; 254
     bde:	9e 01       	movw	r18, r28
     be0:	25 5a       	subi	r18, 0xA5	; 165
     be2:	3e 4f       	sbci	r19, 0xFE	; 254
     be4:	f9 01       	movw	r30, r18
     be6:	20 81       	ld	r18, Z
     be8:	31 81       	ldd	r19, Z+1	; 0x01
     bea:	fc 01       	movw	r30, r24
     bec:	31 83       	std	Z+1, r19	; 0x01
     bee:	20 83       	st	Z, r18
     bf0:	ce 01       	movw	r24, r28
     bf2:	81 5a       	subi	r24, 0xA1	; 161
     bf4:	9e 4f       	sbci	r25, 0xFE	; 254
     bf6:	fc 01       	movw	r30, r24
     bf8:	80 81       	ld	r24, Z
     bfa:	91 81       	ldd	r25, Z+1	; 0x01
     bfc:	01 97       	sbiw	r24, 0x01	; 1
     bfe:	f1 f7       	brne	.-4      	; 0xbfc <main+0x4e0>
     c00:	9e 01       	movw	r18, r28
     c02:	21 5a       	subi	r18, 0xA1	; 161
     c04:	3e 4f       	sbci	r19, 0xFE	; 254
     c06:	f9 01       	movw	r30, r18
     c08:	91 83       	std	Z+1, r25	; 0x01
     c0a:	80 83       	st	Z, r24
			_delay_ms(400);
			to_uARM("M2210 F510 T100\n");
     c0c:	84 ea       	ldi	r24, 0xA4	; 164
     c0e:	91 e0       	ldi	r25, 0x01	; 1
     c10:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     c14:	80 e0       	ldi	r24, 0x00	; 0
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	a8 e4       	ldi	r26, 0x48	; 72
     c1a:	b3 e4       	ldi	r27, 0x43	; 67
     c1c:	89 8f       	std	Y+25, r24	; 0x19
     c1e:	9a 8f       	std	Y+26, r25	; 0x1a
     c20:	ab 8f       	std	Y+27, r26	; 0x1b
     c22:	bc 8f       	std	Y+28, r27	; 0x1c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     c24:	8e 01       	movw	r16, r28
     c26:	03 5b       	subi	r16, 0xB3	; 179
     c28:	1e 4f       	sbci	r17, 0xFE	; 254
     c2a:	20 e0       	ldi	r18, 0x00	; 0
     c2c:	30 e0       	ldi	r19, 0x00	; 0
     c2e:	4a e7       	ldi	r20, 0x7A	; 122
     c30:	55 e4       	ldi	r21, 0x45	; 69
     c32:	69 8d       	ldd	r22, Y+25	; 0x19
     c34:	7a 8d       	ldd	r23, Y+26	; 0x1a
     c36:	8b 8d       	ldd	r24, Y+27	; 0x1b
     c38:	9c 8d       	ldd	r25, Y+28	; 0x1c
     c3a:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
     c3e:	dc 01       	movw	r26, r24
     c40:	cb 01       	movw	r24, r22
     c42:	f8 01       	movw	r30, r16
     c44:	80 83       	st	Z, r24
     c46:	91 83       	std	Z+1, r25	; 0x01
     c48:	a2 83       	std	Z+2, r26	; 0x02
     c4a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     c4c:	ce 01       	movw	r24, r28
     c4e:	83 5b       	subi	r24, 0xB3	; 179
     c50:	9e 4f       	sbci	r25, 0xFE	; 254
     c52:	20 e0       	ldi	r18, 0x00	; 0
     c54:	30 e0       	ldi	r19, 0x00	; 0
     c56:	40 e8       	ldi	r20, 0x80	; 128
     c58:	5f e3       	ldi	r21, 0x3F	; 63
     c5a:	fc 01       	movw	r30, r24
     c5c:	60 81       	ld	r22, Z
     c5e:	71 81       	ldd	r23, Z+1	; 0x01
     c60:	82 81       	ldd	r24, Z+2	; 0x02
     c62:	93 81       	ldd	r25, Z+3	; 0x03
     c64:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
     c68:	88 23       	and	r24, r24
     c6a:	4c f4       	brge	.+18     	; 0xc7e <main+0x562>
		__ticks = 1;
     c6c:	ce 01       	movw	r24, r28
     c6e:	8f 5a       	subi	r24, 0xAF	; 175
     c70:	9e 4f       	sbci	r25, 0xFE	; 254
     c72:	21 e0       	ldi	r18, 0x01	; 1
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	fc 01       	movw	r30, r24
     c78:	31 83       	std	Z+1, r19	; 0x01
     c7a:	20 83       	st	Z, r18
     c7c:	69 c0       	rjmp	.+210    	; 0xd50 <main+0x634>
	else if (__tmp > 65535)
     c7e:	ce 01       	movw	r24, r28
     c80:	83 5b       	subi	r24, 0xB3	; 179
     c82:	9e 4f       	sbci	r25, 0xFE	; 254
     c84:	20 e0       	ldi	r18, 0x00	; 0
     c86:	3f ef       	ldi	r19, 0xFF	; 255
     c88:	4f e7       	ldi	r20, 0x7F	; 127
     c8a:	57 e4       	ldi	r21, 0x47	; 71
     c8c:	fc 01       	movw	r30, r24
     c8e:	60 81       	ld	r22, Z
     c90:	71 81       	ldd	r23, Z+1	; 0x01
     c92:	82 81       	ldd	r24, Z+2	; 0x02
     c94:	93 81       	ldd	r25, Z+3	; 0x03
     c96:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
     c9a:	18 16       	cp	r1, r24
     c9c:	0c f0       	brlt	.+2      	; 0xca0 <main+0x584>
     c9e:	46 c0       	rjmp	.+140    	; 0xd2c <main+0x610>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ca0:	20 e0       	ldi	r18, 0x00	; 0
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	40 e2       	ldi	r20, 0x20	; 32
     ca6:	51 e4       	ldi	r21, 0x41	; 65
     ca8:	69 8d       	ldd	r22, Y+25	; 0x19
     caa:	7a 8d       	ldd	r23, Y+26	; 0x1a
     cac:	8b 8d       	ldd	r24, Y+27	; 0x1b
     cae:	9c 8d       	ldd	r25, Y+28	; 0x1c
     cb0:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
     cb4:	dc 01       	movw	r26, r24
     cb6:	cb 01       	movw	r24, r22
     cb8:	8e 01       	movw	r16, r28
     cba:	0f 5a       	subi	r16, 0xAF	; 175
     cbc:	1e 4f       	sbci	r17, 0xFE	; 254
     cbe:	bc 01       	movw	r22, r24
     cc0:	cd 01       	movw	r24, r26
     cc2:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
     cc6:	dc 01       	movw	r26, r24
     cc8:	cb 01       	movw	r24, r22
     cca:	f8 01       	movw	r30, r16
     ccc:	91 83       	std	Z+1, r25	; 0x01
     cce:	80 83       	st	Z, r24
     cd0:	24 c0       	rjmp	.+72     	; 0xd1a <main+0x5fe>
     cd2:	ce 01       	movw	r24, r28
     cd4:	8d 5a       	subi	r24, 0xAD	; 173
     cd6:	9e 4f       	sbci	r25, 0xFE	; 254
     cd8:	20 e9       	ldi	r18, 0x90	; 144
     cda:	31 e0       	ldi	r19, 0x01	; 1
     cdc:	fc 01       	movw	r30, r24
     cde:	31 83       	std	Z+1, r19	; 0x01
     ce0:	20 83       	st	Z, r18
     ce2:	ce 01       	movw	r24, r28
     ce4:	8d 5a       	subi	r24, 0xAD	; 173
     ce6:	9e 4f       	sbci	r25, 0xFE	; 254
     ce8:	fc 01       	movw	r30, r24
     cea:	80 81       	ld	r24, Z
     cec:	91 81       	ldd	r25, Z+1	; 0x01
     cee:	01 97       	sbiw	r24, 0x01	; 1
     cf0:	f1 f7       	brne	.-4      	; 0xcee <main+0x5d2>
     cf2:	9e 01       	movw	r18, r28
     cf4:	2d 5a       	subi	r18, 0xAD	; 173
     cf6:	3e 4f       	sbci	r19, 0xFE	; 254
     cf8:	f9 01       	movw	r30, r18
     cfa:	91 83       	std	Z+1, r25	; 0x01
     cfc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     cfe:	ce 01       	movw	r24, r28
     d00:	8f 5a       	subi	r24, 0xAF	; 175
     d02:	9e 4f       	sbci	r25, 0xFE	; 254
     d04:	9e 01       	movw	r18, r28
     d06:	2f 5a       	subi	r18, 0xAF	; 175
     d08:	3e 4f       	sbci	r19, 0xFE	; 254
     d0a:	f9 01       	movw	r30, r18
     d0c:	20 81       	ld	r18, Z
     d0e:	31 81       	ldd	r19, Z+1	; 0x01
     d10:	21 50       	subi	r18, 0x01	; 1
     d12:	31 09       	sbc	r19, r1
     d14:	fc 01       	movw	r30, r24
     d16:	31 83       	std	Z+1, r19	; 0x01
     d18:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d1a:	ce 01       	movw	r24, r28
     d1c:	8f 5a       	subi	r24, 0xAF	; 175
     d1e:	9e 4f       	sbci	r25, 0xFE	; 254
     d20:	fc 01       	movw	r30, r24
     d22:	80 81       	ld	r24, Z
     d24:	91 81       	ldd	r25, Z+1	; 0x01
     d26:	89 2b       	or	r24, r25
     d28:	a1 f6       	brne	.-88     	; 0xcd2 <main+0x5b6>
     d2a:	2c c0       	rjmp	.+88     	; 0xd84 <main+0x668>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d2c:	8e 01       	movw	r16, r28
     d2e:	0f 5a       	subi	r16, 0xAF	; 175
     d30:	1e 4f       	sbci	r17, 0xFE	; 254
     d32:	ce 01       	movw	r24, r28
     d34:	83 5b       	subi	r24, 0xB3	; 179
     d36:	9e 4f       	sbci	r25, 0xFE	; 254
     d38:	fc 01       	movw	r30, r24
     d3a:	60 81       	ld	r22, Z
     d3c:	71 81       	ldd	r23, Z+1	; 0x01
     d3e:	82 81       	ldd	r24, Z+2	; 0x02
     d40:	93 81       	ldd	r25, Z+3	; 0x03
     d42:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
     d46:	dc 01       	movw	r26, r24
     d48:	cb 01       	movw	r24, r22
     d4a:	f8 01       	movw	r30, r16
     d4c:	91 83       	std	Z+1, r25	; 0x01
     d4e:	80 83       	st	Z, r24
     d50:	ce 01       	movw	r24, r28
     d52:	8b 5a       	subi	r24, 0xAB	; 171
     d54:	9e 4f       	sbci	r25, 0xFE	; 254
     d56:	9e 01       	movw	r18, r28
     d58:	2f 5a       	subi	r18, 0xAF	; 175
     d5a:	3e 4f       	sbci	r19, 0xFE	; 254
     d5c:	f9 01       	movw	r30, r18
     d5e:	20 81       	ld	r18, Z
     d60:	31 81       	ldd	r19, Z+1	; 0x01
     d62:	fc 01       	movw	r30, r24
     d64:	31 83       	std	Z+1, r19	; 0x01
     d66:	20 83       	st	Z, r18
     d68:	ce 01       	movw	r24, r28
     d6a:	8b 5a       	subi	r24, 0xAB	; 171
     d6c:	9e 4f       	sbci	r25, 0xFE	; 254
     d6e:	fc 01       	movw	r30, r24
     d70:	80 81       	ld	r24, Z
     d72:	91 81       	ldd	r25, Z+1	; 0x01
     d74:	01 97       	sbiw	r24, 0x01	; 1
     d76:	f1 f7       	brne	.-4      	; 0xd74 <main+0x658>
     d78:	9e 01       	movw	r18, r28
     d7a:	2b 5a       	subi	r18, 0xAB	; 171
     d7c:	3e 4f       	sbci	r19, 0xFE	; 254
     d7e:	f9 01       	movw	r30, r18
     d80:	91 83       	std	Z+1, r25	; 0x01
     d82:	80 83       	st	Z, r24
			_delay_ms(200);
			to_uARM("M2210 F660 T100\n");
     d84:	83 e9       	ldi	r24, 0x93	; 147
     d86:	91 e0       	ldi	r25, 0x01	; 1
     d88:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     d8c:	80 e0       	ldi	r24, 0x00	; 0
     d8e:	90 e0       	ldi	r25, 0x00	; 0
     d90:	a8 ec       	ldi	r26, 0xC8	; 200
     d92:	b3 e4       	ldi	r27, 0x43	; 67
     d94:	8d 8f       	std	Y+29, r24	; 0x1d
     d96:	9e 8f       	std	Y+30, r25	; 0x1e
     d98:	af 8f       	std	Y+31, r26	; 0x1f
     d9a:	b8 a3       	std	Y+32, r27	; 0x20

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     d9c:	8e 01       	movw	r16, r28
     d9e:	0d 5b       	subi	r16, 0xBD	; 189
     da0:	1e 4f       	sbci	r17, 0xFE	; 254
     da2:	20 e0       	ldi	r18, 0x00	; 0
     da4:	30 e0       	ldi	r19, 0x00	; 0
     da6:	4a e7       	ldi	r20, 0x7A	; 122
     da8:	55 e4       	ldi	r21, 0x45	; 69
     daa:	6d 8d       	ldd	r22, Y+29	; 0x1d
     dac:	7e 8d       	ldd	r23, Y+30	; 0x1e
     dae:	8f 8d       	ldd	r24, Y+31	; 0x1f
     db0:	98 a1       	ldd	r25, Y+32	; 0x20
     db2:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
     db6:	dc 01       	movw	r26, r24
     db8:	cb 01       	movw	r24, r22
     dba:	f8 01       	movw	r30, r16
     dbc:	80 83       	st	Z, r24
     dbe:	91 83       	std	Z+1, r25	; 0x01
     dc0:	a2 83       	std	Z+2, r26	; 0x02
     dc2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     dc4:	ce 01       	movw	r24, r28
     dc6:	8d 5b       	subi	r24, 0xBD	; 189
     dc8:	9e 4f       	sbci	r25, 0xFE	; 254
     dca:	20 e0       	ldi	r18, 0x00	; 0
     dcc:	30 e0       	ldi	r19, 0x00	; 0
     dce:	40 e8       	ldi	r20, 0x80	; 128
     dd0:	5f e3       	ldi	r21, 0x3F	; 63
     dd2:	fc 01       	movw	r30, r24
     dd4:	60 81       	ld	r22, Z
     dd6:	71 81       	ldd	r23, Z+1	; 0x01
     dd8:	82 81       	ldd	r24, Z+2	; 0x02
     dda:	93 81       	ldd	r25, Z+3	; 0x03
     ddc:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
     de0:	88 23       	and	r24, r24
     de2:	4c f4       	brge	.+18     	; 0xdf6 <main+0x6da>
		__ticks = 1;
     de4:	ce 01       	movw	r24, r28
     de6:	89 5b       	subi	r24, 0xB9	; 185
     de8:	9e 4f       	sbci	r25, 0xFE	; 254
     dea:	21 e0       	ldi	r18, 0x01	; 1
     dec:	30 e0       	ldi	r19, 0x00	; 0
     dee:	fc 01       	movw	r30, r24
     df0:	31 83       	std	Z+1, r19	; 0x01
     df2:	20 83       	st	Z, r18
     df4:	69 c0       	rjmp	.+210    	; 0xec8 <main+0x7ac>
	else if (__tmp > 65535)
     df6:	ce 01       	movw	r24, r28
     df8:	8d 5b       	subi	r24, 0xBD	; 189
     dfa:	9e 4f       	sbci	r25, 0xFE	; 254
     dfc:	20 e0       	ldi	r18, 0x00	; 0
     dfe:	3f ef       	ldi	r19, 0xFF	; 255
     e00:	4f e7       	ldi	r20, 0x7F	; 127
     e02:	57 e4       	ldi	r21, 0x47	; 71
     e04:	fc 01       	movw	r30, r24
     e06:	60 81       	ld	r22, Z
     e08:	71 81       	ldd	r23, Z+1	; 0x01
     e0a:	82 81       	ldd	r24, Z+2	; 0x02
     e0c:	93 81       	ldd	r25, Z+3	; 0x03
     e0e:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
     e12:	18 16       	cp	r1, r24
     e14:	0c f0       	brlt	.+2      	; 0xe18 <main+0x6fc>
     e16:	46 c0       	rjmp	.+140    	; 0xea4 <main+0x788>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e18:	20 e0       	ldi	r18, 0x00	; 0
     e1a:	30 e0       	ldi	r19, 0x00	; 0
     e1c:	40 e2       	ldi	r20, 0x20	; 32
     e1e:	51 e4       	ldi	r21, 0x41	; 65
     e20:	6d 8d       	ldd	r22, Y+29	; 0x1d
     e22:	7e 8d       	ldd	r23, Y+30	; 0x1e
     e24:	8f 8d       	ldd	r24, Y+31	; 0x1f
     e26:	98 a1       	ldd	r25, Y+32	; 0x20
     e28:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
     e2c:	dc 01       	movw	r26, r24
     e2e:	cb 01       	movw	r24, r22
     e30:	8e 01       	movw	r16, r28
     e32:	09 5b       	subi	r16, 0xB9	; 185
     e34:	1e 4f       	sbci	r17, 0xFE	; 254
     e36:	bc 01       	movw	r22, r24
     e38:	cd 01       	movw	r24, r26
     e3a:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
     e3e:	dc 01       	movw	r26, r24
     e40:	cb 01       	movw	r24, r22
     e42:	f8 01       	movw	r30, r16
     e44:	91 83       	std	Z+1, r25	; 0x01
     e46:	80 83       	st	Z, r24
     e48:	24 c0       	rjmp	.+72     	; 0xe92 <main+0x776>
     e4a:	ce 01       	movw	r24, r28
     e4c:	87 5b       	subi	r24, 0xB7	; 183
     e4e:	9e 4f       	sbci	r25, 0xFE	; 254
     e50:	20 e9       	ldi	r18, 0x90	; 144
     e52:	31 e0       	ldi	r19, 0x01	; 1
     e54:	fc 01       	movw	r30, r24
     e56:	31 83       	std	Z+1, r19	; 0x01
     e58:	20 83       	st	Z, r18
     e5a:	ce 01       	movw	r24, r28
     e5c:	87 5b       	subi	r24, 0xB7	; 183
     e5e:	9e 4f       	sbci	r25, 0xFE	; 254
     e60:	fc 01       	movw	r30, r24
     e62:	80 81       	ld	r24, Z
     e64:	91 81       	ldd	r25, Z+1	; 0x01
     e66:	01 97       	sbiw	r24, 0x01	; 1
     e68:	f1 f7       	brne	.-4      	; 0xe66 <main+0x74a>
     e6a:	9e 01       	movw	r18, r28
     e6c:	27 5b       	subi	r18, 0xB7	; 183
     e6e:	3e 4f       	sbci	r19, 0xFE	; 254
     e70:	f9 01       	movw	r30, r18
     e72:	91 83       	std	Z+1, r25	; 0x01
     e74:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e76:	ce 01       	movw	r24, r28
     e78:	89 5b       	subi	r24, 0xB9	; 185
     e7a:	9e 4f       	sbci	r25, 0xFE	; 254
     e7c:	9e 01       	movw	r18, r28
     e7e:	29 5b       	subi	r18, 0xB9	; 185
     e80:	3e 4f       	sbci	r19, 0xFE	; 254
     e82:	f9 01       	movw	r30, r18
     e84:	20 81       	ld	r18, Z
     e86:	31 81       	ldd	r19, Z+1	; 0x01
     e88:	21 50       	subi	r18, 0x01	; 1
     e8a:	31 09       	sbc	r19, r1
     e8c:	fc 01       	movw	r30, r24
     e8e:	31 83       	std	Z+1, r19	; 0x01
     e90:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e92:	ce 01       	movw	r24, r28
     e94:	89 5b       	subi	r24, 0xB9	; 185
     e96:	9e 4f       	sbci	r25, 0xFE	; 254
     e98:	fc 01       	movw	r30, r24
     e9a:	80 81       	ld	r24, Z
     e9c:	91 81       	ldd	r25, Z+1	; 0x01
     e9e:	89 2b       	or	r24, r25
     ea0:	a1 f6       	brne	.-88     	; 0xe4a <main+0x72e>
     ea2:	2c c0       	rjmp	.+88     	; 0xefc <main+0x7e0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ea4:	8e 01       	movw	r16, r28
     ea6:	09 5b       	subi	r16, 0xB9	; 185
     ea8:	1e 4f       	sbci	r17, 0xFE	; 254
     eaa:	ce 01       	movw	r24, r28
     eac:	8d 5b       	subi	r24, 0xBD	; 189
     eae:	9e 4f       	sbci	r25, 0xFE	; 254
     eb0:	fc 01       	movw	r30, r24
     eb2:	60 81       	ld	r22, Z
     eb4:	71 81       	ldd	r23, Z+1	; 0x01
     eb6:	82 81       	ldd	r24, Z+2	; 0x02
     eb8:	93 81       	ldd	r25, Z+3	; 0x03
     eba:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
     ebe:	dc 01       	movw	r26, r24
     ec0:	cb 01       	movw	r24, r22
     ec2:	f8 01       	movw	r30, r16
     ec4:	91 83       	std	Z+1, r25	; 0x01
     ec6:	80 83       	st	Z, r24
     ec8:	ce 01       	movw	r24, r28
     eca:	85 5b       	subi	r24, 0xB5	; 181
     ecc:	9e 4f       	sbci	r25, 0xFE	; 254
     ece:	9e 01       	movw	r18, r28
     ed0:	29 5b       	subi	r18, 0xB9	; 185
     ed2:	3e 4f       	sbci	r19, 0xFE	; 254
     ed4:	f9 01       	movw	r30, r18
     ed6:	20 81       	ld	r18, Z
     ed8:	31 81       	ldd	r19, Z+1	; 0x01
     eda:	fc 01       	movw	r30, r24
     edc:	31 83       	std	Z+1, r19	; 0x01
     ede:	20 83       	st	Z, r18
     ee0:	ce 01       	movw	r24, r28
     ee2:	85 5b       	subi	r24, 0xB5	; 181
     ee4:	9e 4f       	sbci	r25, 0xFE	; 254
     ee6:	fc 01       	movw	r30, r24
     ee8:	80 81       	ld	r24, Z
     eea:	91 81       	ldd	r25, Z+1	; 0x01
     eec:	01 97       	sbiw	r24, 0x01	; 1
     eee:	f1 f7       	brne	.-4      	; 0xeec <main+0x7d0>
     ef0:	9e 01       	movw	r18, r28
     ef2:	25 5b       	subi	r18, 0xB5	; 181
     ef4:	3e 4f       	sbci	r19, 0xFE	; 254
     ef6:	f9 01       	movw	r30, r18
     ef8:	91 83       	std	Z+1, r25	; 0x01
     efa:	80 83       	st	Z, r24
			_delay_ms(400);
			to_uARM("M2210 F770 T100\n");
     efc:	85 eb       	ldi	r24, 0xB5	; 181
     efe:	91 e0       	ldi	r25, 0x01	; 1
     f00:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
     f04:	80 e0       	ldi	r24, 0x00	; 0
     f06:	90 e8       	ldi	r25, 0x80	; 128
     f08:	a2 e2       	ldi	r26, 0x22	; 34
     f0a:	b4 e4       	ldi	r27, 0x44	; 68
     f0c:	89 a3       	std	Y+33, r24	; 0x21
     f0e:	9a a3       	std	Y+34, r25	; 0x22
     f10:	ab a3       	std	Y+35, r26	; 0x23
     f12:	bc a3       	std	Y+36, r27	; 0x24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     f14:	8e 01       	movw	r16, r28
     f16:	07 5c       	subi	r16, 0xC7	; 199
     f18:	1e 4f       	sbci	r17, 0xFE	; 254
     f1a:	20 e0       	ldi	r18, 0x00	; 0
     f1c:	30 e0       	ldi	r19, 0x00	; 0
     f1e:	4a e7       	ldi	r20, 0x7A	; 122
     f20:	55 e4       	ldi	r21, 0x45	; 69
     f22:	69 a1       	ldd	r22, Y+33	; 0x21
     f24:	7a a1       	ldd	r23, Y+34	; 0x22
     f26:	8b a1       	ldd	r24, Y+35	; 0x23
     f28:	9c a1       	ldd	r25, Y+36	; 0x24
     f2a:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
     f2e:	dc 01       	movw	r26, r24
     f30:	cb 01       	movw	r24, r22
     f32:	f8 01       	movw	r30, r16
     f34:	80 83       	st	Z, r24
     f36:	91 83       	std	Z+1, r25	; 0x01
     f38:	a2 83       	std	Z+2, r26	; 0x02
     f3a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     f3c:	ce 01       	movw	r24, r28
     f3e:	87 5c       	subi	r24, 0xC7	; 199
     f40:	9e 4f       	sbci	r25, 0xFE	; 254
     f42:	20 e0       	ldi	r18, 0x00	; 0
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	40 e8       	ldi	r20, 0x80	; 128
     f48:	5f e3       	ldi	r21, 0x3F	; 63
     f4a:	fc 01       	movw	r30, r24
     f4c:	60 81       	ld	r22, Z
     f4e:	71 81       	ldd	r23, Z+1	; 0x01
     f50:	82 81       	ldd	r24, Z+2	; 0x02
     f52:	93 81       	ldd	r25, Z+3	; 0x03
     f54:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
     f58:	88 23       	and	r24, r24
     f5a:	4c f4       	brge	.+18     	; 0xf6e <main+0x852>
		__ticks = 1;
     f5c:	ce 01       	movw	r24, r28
     f5e:	83 5c       	subi	r24, 0xC3	; 195
     f60:	9e 4f       	sbci	r25, 0xFE	; 254
     f62:	21 e0       	ldi	r18, 0x01	; 1
     f64:	30 e0       	ldi	r19, 0x00	; 0
     f66:	fc 01       	movw	r30, r24
     f68:	31 83       	std	Z+1, r19	; 0x01
     f6a:	20 83       	st	Z, r18
     f6c:	69 c0       	rjmp	.+210    	; 0x1040 <main+0x924>
	else if (__tmp > 65535)
     f6e:	ce 01       	movw	r24, r28
     f70:	87 5c       	subi	r24, 0xC7	; 199
     f72:	9e 4f       	sbci	r25, 0xFE	; 254
     f74:	20 e0       	ldi	r18, 0x00	; 0
     f76:	3f ef       	ldi	r19, 0xFF	; 255
     f78:	4f e7       	ldi	r20, 0x7F	; 127
     f7a:	57 e4       	ldi	r21, 0x47	; 71
     f7c:	fc 01       	movw	r30, r24
     f7e:	60 81       	ld	r22, Z
     f80:	71 81       	ldd	r23, Z+1	; 0x01
     f82:	82 81       	ldd	r24, Z+2	; 0x02
     f84:	93 81       	ldd	r25, Z+3	; 0x03
     f86:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
     f8a:	18 16       	cp	r1, r24
     f8c:	0c f0       	brlt	.+2      	; 0xf90 <main+0x874>
     f8e:	46 c0       	rjmp	.+140    	; 0x101c <main+0x900>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f90:	20 e0       	ldi	r18, 0x00	; 0
     f92:	30 e0       	ldi	r19, 0x00	; 0
     f94:	40 e2       	ldi	r20, 0x20	; 32
     f96:	51 e4       	ldi	r21, 0x41	; 65
     f98:	69 a1       	ldd	r22, Y+33	; 0x21
     f9a:	7a a1       	ldd	r23, Y+34	; 0x22
     f9c:	8b a1       	ldd	r24, Y+35	; 0x23
     f9e:	9c a1       	ldd	r25, Y+36	; 0x24
     fa0:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
     fa4:	dc 01       	movw	r26, r24
     fa6:	cb 01       	movw	r24, r22
     fa8:	8e 01       	movw	r16, r28
     faa:	03 5c       	subi	r16, 0xC3	; 195
     fac:	1e 4f       	sbci	r17, 0xFE	; 254
     fae:	bc 01       	movw	r22, r24
     fb0:	cd 01       	movw	r24, r26
     fb2:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
     fb6:	dc 01       	movw	r26, r24
     fb8:	cb 01       	movw	r24, r22
     fba:	f8 01       	movw	r30, r16
     fbc:	91 83       	std	Z+1, r25	; 0x01
     fbe:	80 83       	st	Z, r24
     fc0:	24 c0       	rjmp	.+72     	; 0x100a <main+0x8ee>
     fc2:	ce 01       	movw	r24, r28
     fc4:	81 5c       	subi	r24, 0xC1	; 193
     fc6:	9e 4f       	sbci	r25, 0xFE	; 254
     fc8:	20 e9       	ldi	r18, 0x90	; 144
     fca:	31 e0       	ldi	r19, 0x01	; 1
     fcc:	fc 01       	movw	r30, r24
     fce:	31 83       	std	Z+1, r19	; 0x01
     fd0:	20 83       	st	Z, r18
     fd2:	ce 01       	movw	r24, r28
     fd4:	81 5c       	subi	r24, 0xC1	; 193
     fd6:	9e 4f       	sbci	r25, 0xFE	; 254
     fd8:	fc 01       	movw	r30, r24
     fda:	80 81       	ld	r24, Z
     fdc:	91 81       	ldd	r25, Z+1	; 0x01
     fde:	01 97       	sbiw	r24, 0x01	; 1
     fe0:	f1 f7       	brne	.-4      	; 0xfde <main+0x8c2>
     fe2:	9e 01       	movw	r18, r28
     fe4:	21 5c       	subi	r18, 0xC1	; 193
     fe6:	3e 4f       	sbci	r19, 0xFE	; 254
     fe8:	f9 01       	movw	r30, r18
     fea:	91 83       	std	Z+1, r25	; 0x01
     fec:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fee:	ce 01       	movw	r24, r28
     ff0:	83 5c       	subi	r24, 0xC3	; 195
     ff2:	9e 4f       	sbci	r25, 0xFE	; 254
     ff4:	9e 01       	movw	r18, r28
     ff6:	23 5c       	subi	r18, 0xC3	; 195
     ff8:	3e 4f       	sbci	r19, 0xFE	; 254
     ffa:	f9 01       	movw	r30, r18
     ffc:	20 81       	ld	r18, Z
     ffe:	31 81       	ldd	r19, Z+1	; 0x01
    1000:	21 50       	subi	r18, 0x01	; 1
    1002:	31 09       	sbc	r19, r1
    1004:	fc 01       	movw	r30, r24
    1006:	31 83       	std	Z+1, r19	; 0x01
    1008:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    100a:	ce 01       	movw	r24, r28
    100c:	83 5c       	subi	r24, 0xC3	; 195
    100e:	9e 4f       	sbci	r25, 0xFE	; 254
    1010:	fc 01       	movw	r30, r24
    1012:	80 81       	ld	r24, Z
    1014:	91 81       	ldd	r25, Z+1	; 0x01
    1016:	89 2b       	or	r24, r25
    1018:	a1 f6       	brne	.-88     	; 0xfc2 <main+0x8a6>
    101a:	2c c0       	rjmp	.+88     	; 0x1074 <main+0x958>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    101c:	8e 01       	movw	r16, r28
    101e:	03 5c       	subi	r16, 0xC3	; 195
    1020:	1e 4f       	sbci	r17, 0xFE	; 254
    1022:	ce 01       	movw	r24, r28
    1024:	87 5c       	subi	r24, 0xC7	; 199
    1026:	9e 4f       	sbci	r25, 0xFE	; 254
    1028:	fc 01       	movw	r30, r24
    102a:	60 81       	ld	r22, Z
    102c:	71 81       	ldd	r23, Z+1	; 0x01
    102e:	82 81       	ldd	r24, Z+2	; 0x02
    1030:	93 81       	ldd	r25, Z+3	; 0x03
    1032:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    1036:	dc 01       	movw	r26, r24
    1038:	cb 01       	movw	r24, r22
    103a:	f8 01       	movw	r30, r16
    103c:	91 83       	std	Z+1, r25	; 0x01
    103e:	80 83       	st	Z, r24
    1040:	ce 01       	movw	r24, r28
    1042:	8f 5b       	subi	r24, 0xBF	; 191
    1044:	9e 4f       	sbci	r25, 0xFE	; 254
    1046:	9e 01       	movw	r18, r28
    1048:	23 5c       	subi	r18, 0xC3	; 195
    104a:	3e 4f       	sbci	r19, 0xFE	; 254
    104c:	f9 01       	movw	r30, r18
    104e:	20 81       	ld	r18, Z
    1050:	31 81       	ldd	r19, Z+1	; 0x01
    1052:	fc 01       	movw	r30, r24
    1054:	31 83       	std	Z+1, r19	; 0x01
    1056:	20 83       	st	Z, r18
    1058:	ce 01       	movw	r24, r28
    105a:	8f 5b       	subi	r24, 0xBF	; 191
    105c:	9e 4f       	sbci	r25, 0xFE	; 254
    105e:	fc 01       	movw	r30, r24
    1060:	80 81       	ld	r24, Z
    1062:	91 81       	ldd	r25, Z+1	; 0x01
    1064:	01 97       	sbiw	r24, 0x01	; 1
    1066:	f1 f7       	brne	.-4      	; 0x1064 <main+0x948>
    1068:	9e 01       	movw	r18, r28
    106a:	2f 5b       	subi	r18, 0xBF	; 191
    106c:	3e 4f       	sbci	r19, 0xFE	; 254
    106e:	f9 01       	movw	r30, r18
    1070:	91 83       	std	Z+1, r25	; 0x01
    1072:	80 83       	st	Z, r24
			_delay_ms(650);
			to_uARM("M2210 F380 T100\n");
    1074:	86 ec       	ldi	r24, 0xC6	; 198
    1076:	91 e0       	ldi	r25, 0x01	; 1
    1078:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    107c:	80 e0       	ldi	r24, 0x00	; 0
    107e:	90 ec       	ldi	r25, 0xC0	; 192
    1080:	a8 e2       	ldi	r26, 0x28	; 40
    1082:	b4 e4       	ldi	r27, 0x44	; 68
    1084:	8d a3       	std	Y+37, r24	; 0x25
    1086:	9e a3       	std	Y+38, r25	; 0x26
    1088:	af a3       	std	Y+39, r26	; 0x27
    108a:	b8 a7       	std	Y+40, r27	; 0x28

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    108c:	8e 01       	movw	r16, r28
    108e:	01 5d       	subi	r16, 0xD1	; 209
    1090:	1e 4f       	sbci	r17, 0xFE	; 254
    1092:	20 e0       	ldi	r18, 0x00	; 0
    1094:	30 e0       	ldi	r19, 0x00	; 0
    1096:	4a e7       	ldi	r20, 0x7A	; 122
    1098:	55 e4       	ldi	r21, 0x45	; 69
    109a:	6d a1       	ldd	r22, Y+37	; 0x25
    109c:	7e a1       	ldd	r23, Y+38	; 0x26
    109e:	8f a1       	ldd	r24, Y+39	; 0x27
    10a0:	98 a5       	ldd	r25, Y+40	; 0x28
    10a2:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    10a6:	dc 01       	movw	r26, r24
    10a8:	cb 01       	movw	r24, r22
    10aa:	f8 01       	movw	r30, r16
    10ac:	80 83       	st	Z, r24
    10ae:	91 83       	std	Z+1, r25	; 0x01
    10b0:	a2 83       	std	Z+2, r26	; 0x02
    10b2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    10b4:	ce 01       	movw	r24, r28
    10b6:	81 5d       	subi	r24, 0xD1	; 209
    10b8:	9e 4f       	sbci	r25, 0xFE	; 254
    10ba:	20 e0       	ldi	r18, 0x00	; 0
    10bc:	30 e0       	ldi	r19, 0x00	; 0
    10be:	40 e8       	ldi	r20, 0x80	; 128
    10c0:	5f e3       	ldi	r21, 0x3F	; 63
    10c2:	fc 01       	movw	r30, r24
    10c4:	60 81       	ld	r22, Z
    10c6:	71 81       	ldd	r23, Z+1	; 0x01
    10c8:	82 81       	ldd	r24, Z+2	; 0x02
    10ca:	93 81       	ldd	r25, Z+3	; 0x03
    10cc:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    10d0:	88 23       	and	r24, r24
    10d2:	4c f4       	brge	.+18     	; 0x10e6 <main+0x9ca>
		__ticks = 1;
    10d4:	ce 01       	movw	r24, r28
    10d6:	8d 5c       	subi	r24, 0xCD	; 205
    10d8:	9e 4f       	sbci	r25, 0xFE	; 254
    10da:	21 e0       	ldi	r18, 0x01	; 1
    10dc:	30 e0       	ldi	r19, 0x00	; 0
    10de:	fc 01       	movw	r30, r24
    10e0:	31 83       	std	Z+1, r19	; 0x01
    10e2:	20 83       	st	Z, r18
    10e4:	69 c0       	rjmp	.+210    	; 0x11b8 <__stack+0xb9>
	else if (__tmp > 65535)
    10e6:	ce 01       	movw	r24, r28
    10e8:	81 5d       	subi	r24, 0xD1	; 209
    10ea:	9e 4f       	sbci	r25, 0xFE	; 254
    10ec:	20 e0       	ldi	r18, 0x00	; 0
    10ee:	3f ef       	ldi	r19, 0xFF	; 255
    10f0:	4f e7       	ldi	r20, 0x7F	; 127
    10f2:	57 e4       	ldi	r21, 0x47	; 71
    10f4:	fc 01       	movw	r30, r24
    10f6:	60 81       	ld	r22, Z
    10f8:	71 81       	ldd	r23, Z+1	; 0x01
    10fa:	82 81       	ldd	r24, Z+2	; 0x02
    10fc:	93 81       	ldd	r25, Z+3	; 0x03
    10fe:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    1102:	18 16       	cp	r1, r24
    1104:	0c f0       	brlt	.+2      	; 0x1108 <__stack+0x9>
    1106:	46 c0       	rjmp	.+140    	; 0x1194 <__stack+0x95>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1108:	20 e0       	ldi	r18, 0x00	; 0
    110a:	30 e0       	ldi	r19, 0x00	; 0
    110c:	40 e2       	ldi	r20, 0x20	; 32
    110e:	51 e4       	ldi	r21, 0x41	; 65
    1110:	6d a1       	ldd	r22, Y+37	; 0x25
    1112:	7e a1       	ldd	r23, Y+38	; 0x26
    1114:	8f a1       	ldd	r24, Y+39	; 0x27
    1116:	98 a5       	ldd	r25, Y+40	; 0x28
    1118:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    111c:	dc 01       	movw	r26, r24
    111e:	cb 01       	movw	r24, r22
    1120:	8e 01       	movw	r16, r28
    1122:	0d 5c       	subi	r16, 0xCD	; 205
    1124:	1e 4f       	sbci	r17, 0xFE	; 254
    1126:	bc 01       	movw	r22, r24
    1128:	cd 01       	movw	r24, r26
    112a:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    112e:	dc 01       	movw	r26, r24
    1130:	cb 01       	movw	r24, r22
    1132:	f8 01       	movw	r30, r16
    1134:	91 83       	std	Z+1, r25	; 0x01
    1136:	80 83       	st	Z, r24
    1138:	24 c0       	rjmp	.+72     	; 0x1182 <__stack+0x83>
    113a:	ce 01       	movw	r24, r28
    113c:	8b 5c       	subi	r24, 0xCB	; 203
    113e:	9e 4f       	sbci	r25, 0xFE	; 254
    1140:	20 e9       	ldi	r18, 0x90	; 144
    1142:	31 e0       	ldi	r19, 0x01	; 1
    1144:	fc 01       	movw	r30, r24
    1146:	31 83       	std	Z+1, r19	; 0x01
    1148:	20 83       	st	Z, r18
    114a:	ce 01       	movw	r24, r28
    114c:	8b 5c       	subi	r24, 0xCB	; 203
    114e:	9e 4f       	sbci	r25, 0xFE	; 254
    1150:	fc 01       	movw	r30, r24
    1152:	80 81       	ld	r24, Z
    1154:	91 81       	ldd	r25, Z+1	; 0x01
    1156:	01 97       	sbiw	r24, 0x01	; 1
    1158:	f1 f7       	brne	.-4      	; 0x1156 <__stack+0x57>
    115a:	9e 01       	movw	r18, r28
    115c:	2b 5c       	subi	r18, 0xCB	; 203
    115e:	3e 4f       	sbci	r19, 0xFE	; 254
    1160:	f9 01       	movw	r30, r18
    1162:	91 83       	std	Z+1, r25	; 0x01
    1164:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1166:	ce 01       	movw	r24, r28
    1168:	8d 5c       	subi	r24, 0xCD	; 205
    116a:	9e 4f       	sbci	r25, 0xFE	; 254
    116c:	9e 01       	movw	r18, r28
    116e:	2d 5c       	subi	r18, 0xCD	; 205
    1170:	3e 4f       	sbci	r19, 0xFE	; 254
    1172:	f9 01       	movw	r30, r18
    1174:	20 81       	ld	r18, Z
    1176:	31 81       	ldd	r19, Z+1	; 0x01
    1178:	21 50       	subi	r18, 0x01	; 1
    117a:	31 09       	sbc	r19, r1
    117c:	fc 01       	movw	r30, r24
    117e:	31 83       	std	Z+1, r19	; 0x01
    1180:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1182:	ce 01       	movw	r24, r28
    1184:	8d 5c       	subi	r24, 0xCD	; 205
    1186:	9e 4f       	sbci	r25, 0xFE	; 254
    1188:	fc 01       	movw	r30, r24
    118a:	80 81       	ld	r24, Z
    118c:	91 81       	ldd	r25, Z+1	; 0x01
    118e:	89 2b       	or	r24, r25
    1190:	a1 f6       	brne	.-88     	; 0x113a <__stack+0x3b>
    1192:	2c c0       	rjmp	.+88     	; 0x11ec <__stack+0xed>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1194:	8e 01       	movw	r16, r28
    1196:	0d 5c       	subi	r16, 0xCD	; 205
    1198:	1e 4f       	sbci	r17, 0xFE	; 254
    119a:	ce 01       	movw	r24, r28
    119c:	81 5d       	subi	r24, 0xD1	; 209
    119e:	9e 4f       	sbci	r25, 0xFE	; 254
    11a0:	fc 01       	movw	r30, r24
    11a2:	60 81       	ld	r22, Z
    11a4:	71 81       	ldd	r23, Z+1	; 0x01
    11a6:	82 81       	ldd	r24, Z+2	; 0x02
    11a8:	93 81       	ldd	r25, Z+3	; 0x03
    11aa:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    11ae:	dc 01       	movw	r26, r24
    11b0:	cb 01       	movw	r24, r22
    11b2:	f8 01       	movw	r30, r16
    11b4:	91 83       	std	Z+1, r25	; 0x01
    11b6:	80 83       	st	Z, r24
    11b8:	ce 01       	movw	r24, r28
    11ba:	89 5c       	subi	r24, 0xC9	; 201
    11bc:	9e 4f       	sbci	r25, 0xFE	; 254
    11be:	9e 01       	movw	r18, r28
    11c0:	2d 5c       	subi	r18, 0xCD	; 205
    11c2:	3e 4f       	sbci	r19, 0xFE	; 254
    11c4:	f9 01       	movw	r30, r18
    11c6:	20 81       	ld	r18, Z
    11c8:	31 81       	ldd	r19, Z+1	; 0x01
    11ca:	fc 01       	movw	r30, r24
    11cc:	31 83       	std	Z+1, r19	; 0x01
    11ce:	20 83       	st	Z, r18
    11d0:	ce 01       	movw	r24, r28
    11d2:	89 5c       	subi	r24, 0xC9	; 201
    11d4:	9e 4f       	sbci	r25, 0xFE	; 254
    11d6:	fc 01       	movw	r30, r24
    11d8:	80 81       	ld	r24, Z
    11da:	91 81       	ldd	r25, Z+1	; 0x01
    11dc:	01 97       	sbiw	r24, 0x01	; 1
    11de:	f1 f7       	brne	.-4      	; 0x11dc <__stack+0xdd>
    11e0:	9e 01       	movw	r18, r28
    11e2:	29 5c       	subi	r18, 0xC9	; 201
    11e4:	3e 4f       	sbci	r19, 0xFE	; 254
    11e6:	f9 01       	movw	r30, r18
    11e8:	91 83       	std	Z+1, r25	; 0x01
    11ea:	80 83       	st	Z, r24
			_delay_ms(675);
			
			
			to_uARM("M2210 F510 T100\n");
    11ec:	84 ea       	ldi	r24, 0xA4	; 164
    11ee:	91 e0       	ldi	r25, 0x01	; 1
    11f0:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    11f4:	80 e0       	ldi	r24, 0x00	; 0
    11f6:	90 e8       	ldi	r25, 0x80	; 128
    11f8:	a9 e0       	ldi	r26, 0x09	; 9
    11fa:	b4 e4       	ldi	r27, 0x44	; 68
    11fc:	89 a7       	std	Y+41, r24	; 0x29
    11fe:	9a a7       	std	Y+42, r25	; 0x2a
    1200:	ab a7       	std	Y+43, r26	; 0x2b
    1202:	bc a7       	std	Y+44, r27	; 0x2c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1204:	8e 01       	movw	r16, r28
    1206:	0b 5d       	subi	r16, 0xDB	; 219
    1208:	1e 4f       	sbci	r17, 0xFE	; 254
    120a:	20 e0       	ldi	r18, 0x00	; 0
    120c:	30 e0       	ldi	r19, 0x00	; 0
    120e:	4a e7       	ldi	r20, 0x7A	; 122
    1210:	55 e4       	ldi	r21, 0x45	; 69
    1212:	69 a5       	ldd	r22, Y+41	; 0x29
    1214:	7a a5       	ldd	r23, Y+42	; 0x2a
    1216:	8b a5       	ldd	r24, Y+43	; 0x2b
    1218:	9c a5       	ldd	r25, Y+44	; 0x2c
    121a:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    121e:	dc 01       	movw	r26, r24
    1220:	cb 01       	movw	r24, r22
    1222:	f8 01       	movw	r30, r16
    1224:	80 83       	st	Z, r24
    1226:	91 83       	std	Z+1, r25	; 0x01
    1228:	a2 83       	std	Z+2, r26	; 0x02
    122a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    122c:	ce 01       	movw	r24, r28
    122e:	8b 5d       	subi	r24, 0xDB	; 219
    1230:	9e 4f       	sbci	r25, 0xFE	; 254
    1232:	20 e0       	ldi	r18, 0x00	; 0
    1234:	30 e0       	ldi	r19, 0x00	; 0
    1236:	40 e8       	ldi	r20, 0x80	; 128
    1238:	5f e3       	ldi	r21, 0x3F	; 63
    123a:	fc 01       	movw	r30, r24
    123c:	60 81       	ld	r22, Z
    123e:	71 81       	ldd	r23, Z+1	; 0x01
    1240:	82 81       	ldd	r24, Z+2	; 0x02
    1242:	93 81       	ldd	r25, Z+3	; 0x03
    1244:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    1248:	88 23       	and	r24, r24
    124a:	4c f4       	brge	.+18     	; 0x125e <__stack+0x15f>
		__ticks = 1;
    124c:	ce 01       	movw	r24, r28
    124e:	87 5d       	subi	r24, 0xD7	; 215
    1250:	9e 4f       	sbci	r25, 0xFE	; 254
    1252:	21 e0       	ldi	r18, 0x01	; 1
    1254:	30 e0       	ldi	r19, 0x00	; 0
    1256:	fc 01       	movw	r30, r24
    1258:	31 83       	std	Z+1, r19	; 0x01
    125a:	20 83       	st	Z, r18
    125c:	69 c0       	rjmp	.+210    	; 0x1330 <__stack+0x231>
	else if (__tmp > 65535)
    125e:	ce 01       	movw	r24, r28
    1260:	8b 5d       	subi	r24, 0xDB	; 219
    1262:	9e 4f       	sbci	r25, 0xFE	; 254
    1264:	20 e0       	ldi	r18, 0x00	; 0
    1266:	3f ef       	ldi	r19, 0xFF	; 255
    1268:	4f e7       	ldi	r20, 0x7F	; 127
    126a:	57 e4       	ldi	r21, 0x47	; 71
    126c:	fc 01       	movw	r30, r24
    126e:	60 81       	ld	r22, Z
    1270:	71 81       	ldd	r23, Z+1	; 0x01
    1272:	82 81       	ldd	r24, Z+2	; 0x02
    1274:	93 81       	ldd	r25, Z+3	; 0x03
    1276:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    127a:	18 16       	cp	r1, r24
    127c:	0c f0       	brlt	.+2      	; 0x1280 <__stack+0x181>
    127e:	46 c0       	rjmp	.+140    	; 0x130c <__stack+0x20d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1280:	20 e0       	ldi	r18, 0x00	; 0
    1282:	30 e0       	ldi	r19, 0x00	; 0
    1284:	40 e2       	ldi	r20, 0x20	; 32
    1286:	51 e4       	ldi	r21, 0x41	; 65
    1288:	69 a5       	ldd	r22, Y+41	; 0x29
    128a:	7a a5       	ldd	r23, Y+42	; 0x2a
    128c:	8b a5       	ldd	r24, Y+43	; 0x2b
    128e:	9c a5       	ldd	r25, Y+44	; 0x2c
    1290:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    1294:	dc 01       	movw	r26, r24
    1296:	cb 01       	movw	r24, r22
    1298:	8e 01       	movw	r16, r28
    129a:	07 5d       	subi	r16, 0xD7	; 215
    129c:	1e 4f       	sbci	r17, 0xFE	; 254
    129e:	bc 01       	movw	r22, r24
    12a0:	cd 01       	movw	r24, r26
    12a2:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    12a6:	dc 01       	movw	r26, r24
    12a8:	cb 01       	movw	r24, r22
    12aa:	f8 01       	movw	r30, r16
    12ac:	91 83       	std	Z+1, r25	; 0x01
    12ae:	80 83       	st	Z, r24
    12b0:	24 c0       	rjmp	.+72     	; 0x12fa <__stack+0x1fb>
    12b2:	ce 01       	movw	r24, r28
    12b4:	85 5d       	subi	r24, 0xD5	; 213
    12b6:	9e 4f       	sbci	r25, 0xFE	; 254
    12b8:	20 e9       	ldi	r18, 0x90	; 144
    12ba:	31 e0       	ldi	r19, 0x01	; 1
    12bc:	fc 01       	movw	r30, r24
    12be:	31 83       	std	Z+1, r19	; 0x01
    12c0:	20 83       	st	Z, r18
    12c2:	ce 01       	movw	r24, r28
    12c4:	85 5d       	subi	r24, 0xD5	; 213
    12c6:	9e 4f       	sbci	r25, 0xFE	; 254
    12c8:	fc 01       	movw	r30, r24
    12ca:	80 81       	ld	r24, Z
    12cc:	91 81       	ldd	r25, Z+1	; 0x01
    12ce:	01 97       	sbiw	r24, 0x01	; 1
    12d0:	f1 f7       	brne	.-4      	; 0x12ce <__stack+0x1cf>
    12d2:	9e 01       	movw	r18, r28
    12d4:	25 5d       	subi	r18, 0xD5	; 213
    12d6:	3e 4f       	sbci	r19, 0xFE	; 254
    12d8:	f9 01       	movw	r30, r18
    12da:	91 83       	std	Z+1, r25	; 0x01
    12dc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12de:	ce 01       	movw	r24, r28
    12e0:	87 5d       	subi	r24, 0xD7	; 215
    12e2:	9e 4f       	sbci	r25, 0xFE	; 254
    12e4:	9e 01       	movw	r18, r28
    12e6:	27 5d       	subi	r18, 0xD7	; 215
    12e8:	3e 4f       	sbci	r19, 0xFE	; 254
    12ea:	f9 01       	movw	r30, r18
    12ec:	20 81       	ld	r18, Z
    12ee:	31 81       	ldd	r19, Z+1	; 0x01
    12f0:	21 50       	subi	r18, 0x01	; 1
    12f2:	31 09       	sbc	r19, r1
    12f4:	fc 01       	movw	r30, r24
    12f6:	31 83       	std	Z+1, r19	; 0x01
    12f8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12fa:	ce 01       	movw	r24, r28
    12fc:	87 5d       	subi	r24, 0xD7	; 215
    12fe:	9e 4f       	sbci	r25, 0xFE	; 254
    1300:	fc 01       	movw	r30, r24
    1302:	80 81       	ld	r24, Z
    1304:	91 81       	ldd	r25, Z+1	; 0x01
    1306:	89 2b       	or	r24, r25
    1308:	a1 f6       	brne	.-88     	; 0x12b2 <__stack+0x1b3>
    130a:	2c c0       	rjmp	.+88     	; 0x1364 <__stack+0x265>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    130c:	8e 01       	movw	r16, r28
    130e:	07 5d       	subi	r16, 0xD7	; 215
    1310:	1e 4f       	sbci	r17, 0xFE	; 254
    1312:	ce 01       	movw	r24, r28
    1314:	8b 5d       	subi	r24, 0xDB	; 219
    1316:	9e 4f       	sbci	r25, 0xFE	; 254
    1318:	fc 01       	movw	r30, r24
    131a:	60 81       	ld	r22, Z
    131c:	71 81       	ldd	r23, Z+1	; 0x01
    131e:	82 81       	ldd	r24, Z+2	; 0x02
    1320:	93 81       	ldd	r25, Z+3	; 0x03
    1322:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    1326:	dc 01       	movw	r26, r24
    1328:	cb 01       	movw	r24, r22
    132a:	f8 01       	movw	r30, r16
    132c:	91 83       	std	Z+1, r25	; 0x01
    132e:	80 83       	st	Z, r24
    1330:	ce 01       	movw	r24, r28
    1332:	83 5d       	subi	r24, 0xD3	; 211
    1334:	9e 4f       	sbci	r25, 0xFE	; 254
    1336:	9e 01       	movw	r18, r28
    1338:	27 5d       	subi	r18, 0xD7	; 215
    133a:	3e 4f       	sbci	r19, 0xFE	; 254
    133c:	f9 01       	movw	r30, r18
    133e:	20 81       	ld	r18, Z
    1340:	31 81       	ldd	r19, Z+1	; 0x01
    1342:	fc 01       	movw	r30, r24
    1344:	31 83       	std	Z+1, r19	; 0x01
    1346:	20 83       	st	Z, r18
    1348:	ce 01       	movw	r24, r28
    134a:	83 5d       	subi	r24, 0xD3	; 211
    134c:	9e 4f       	sbci	r25, 0xFE	; 254
    134e:	fc 01       	movw	r30, r24
    1350:	80 81       	ld	r24, Z
    1352:	91 81       	ldd	r25, Z+1	; 0x01
    1354:	01 97       	sbiw	r24, 0x01	; 1
    1356:	f1 f7       	brne	.-4      	; 0x1354 <__stack+0x255>
    1358:	9e 01       	movw	r18, r28
    135a:	23 5d       	subi	r18, 0xD3	; 211
    135c:	3e 4f       	sbci	r19, 0xFE	; 254
    135e:	f9 01       	movw	r30, r18
    1360:	91 83       	std	Z+1, r25	; 0x01
    1362:	80 83       	st	Z, r24
			_delay_ms(550);
			to_uARM("M2210 F380 T100\n");
    1364:	86 ec       	ldi	r24, 0xC6	; 198
    1366:	91 e0       	ldi	r25, 0x01	; 1
    1368:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    136c:	80 e0       	ldi	r24, 0x00	; 0
    136e:	90 e0       	ldi	r25, 0x00	; 0
    1370:	aa ef       	ldi	r26, 0xFA	; 250
    1372:	b3 e4       	ldi	r27, 0x43	; 67
    1374:	8d a7       	std	Y+45, r24	; 0x2d
    1376:	9e a7       	std	Y+46, r25	; 0x2e
    1378:	af a7       	std	Y+47, r26	; 0x2f
    137a:	b8 ab       	std	Y+48, r27	; 0x30

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    137c:	8e 01       	movw	r16, r28
    137e:	05 5e       	subi	r16, 0xE5	; 229
    1380:	1e 4f       	sbci	r17, 0xFE	; 254
    1382:	20 e0       	ldi	r18, 0x00	; 0
    1384:	30 e0       	ldi	r19, 0x00	; 0
    1386:	4a e7       	ldi	r20, 0x7A	; 122
    1388:	55 e4       	ldi	r21, 0x45	; 69
    138a:	6d a5       	ldd	r22, Y+45	; 0x2d
    138c:	7e a5       	ldd	r23, Y+46	; 0x2e
    138e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1390:	98 a9       	ldd	r25, Y+48	; 0x30
    1392:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    1396:	dc 01       	movw	r26, r24
    1398:	cb 01       	movw	r24, r22
    139a:	f8 01       	movw	r30, r16
    139c:	80 83       	st	Z, r24
    139e:	91 83       	std	Z+1, r25	; 0x01
    13a0:	a2 83       	std	Z+2, r26	; 0x02
    13a2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    13a4:	ce 01       	movw	r24, r28
    13a6:	85 5e       	subi	r24, 0xE5	; 229
    13a8:	9e 4f       	sbci	r25, 0xFE	; 254
    13aa:	20 e0       	ldi	r18, 0x00	; 0
    13ac:	30 e0       	ldi	r19, 0x00	; 0
    13ae:	40 e8       	ldi	r20, 0x80	; 128
    13b0:	5f e3       	ldi	r21, 0x3F	; 63
    13b2:	fc 01       	movw	r30, r24
    13b4:	60 81       	ld	r22, Z
    13b6:	71 81       	ldd	r23, Z+1	; 0x01
    13b8:	82 81       	ldd	r24, Z+2	; 0x02
    13ba:	93 81       	ldd	r25, Z+3	; 0x03
    13bc:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    13c0:	88 23       	and	r24, r24
    13c2:	4c f4       	brge	.+18     	; 0x13d6 <__stack+0x2d7>
		__ticks = 1;
    13c4:	ce 01       	movw	r24, r28
    13c6:	81 5e       	subi	r24, 0xE1	; 225
    13c8:	9e 4f       	sbci	r25, 0xFE	; 254
    13ca:	21 e0       	ldi	r18, 0x01	; 1
    13cc:	30 e0       	ldi	r19, 0x00	; 0
    13ce:	fc 01       	movw	r30, r24
    13d0:	31 83       	std	Z+1, r19	; 0x01
    13d2:	20 83       	st	Z, r18
    13d4:	69 c0       	rjmp	.+210    	; 0x14a8 <__stack+0x3a9>
	else if (__tmp > 65535)
    13d6:	ce 01       	movw	r24, r28
    13d8:	85 5e       	subi	r24, 0xE5	; 229
    13da:	9e 4f       	sbci	r25, 0xFE	; 254
    13dc:	20 e0       	ldi	r18, 0x00	; 0
    13de:	3f ef       	ldi	r19, 0xFF	; 255
    13e0:	4f e7       	ldi	r20, 0x7F	; 127
    13e2:	57 e4       	ldi	r21, 0x47	; 71
    13e4:	fc 01       	movw	r30, r24
    13e6:	60 81       	ld	r22, Z
    13e8:	71 81       	ldd	r23, Z+1	; 0x01
    13ea:	82 81       	ldd	r24, Z+2	; 0x02
    13ec:	93 81       	ldd	r25, Z+3	; 0x03
    13ee:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    13f2:	18 16       	cp	r1, r24
    13f4:	0c f0       	brlt	.+2      	; 0x13f8 <__stack+0x2f9>
    13f6:	46 c0       	rjmp	.+140    	; 0x1484 <__stack+0x385>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13f8:	20 e0       	ldi	r18, 0x00	; 0
    13fa:	30 e0       	ldi	r19, 0x00	; 0
    13fc:	40 e2       	ldi	r20, 0x20	; 32
    13fe:	51 e4       	ldi	r21, 0x41	; 65
    1400:	6d a5       	ldd	r22, Y+45	; 0x2d
    1402:	7e a5       	ldd	r23, Y+46	; 0x2e
    1404:	8f a5       	ldd	r24, Y+47	; 0x2f
    1406:	98 a9       	ldd	r25, Y+48	; 0x30
    1408:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    140c:	dc 01       	movw	r26, r24
    140e:	cb 01       	movw	r24, r22
    1410:	8e 01       	movw	r16, r28
    1412:	01 5e       	subi	r16, 0xE1	; 225
    1414:	1e 4f       	sbci	r17, 0xFE	; 254
    1416:	bc 01       	movw	r22, r24
    1418:	cd 01       	movw	r24, r26
    141a:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    141e:	dc 01       	movw	r26, r24
    1420:	cb 01       	movw	r24, r22
    1422:	f8 01       	movw	r30, r16
    1424:	91 83       	std	Z+1, r25	; 0x01
    1426:	80 83       	st	Z, r24
    1428:	24 c0       	rjmp	.+72     	; 0x1472 <__stack+0x373>
    142a:	ce 01       	movw	r24, r28
    142c:	8f 5d       	subi	r24, 0xDF	; 223
    142e:	9e 4f       	sbci	r25, 0xFE	; 254
    1430:	20 e9       	ldi	r18, 0x90	; 144
    1432:	31 e0       	ldi	r19, 0x01	; 1
    1434:	fc 01       	movw	r30, r24
    1436:	31 83       	std	Z+1, r19	; 0x01
    1438:	20 83       	st	Z, r18
    143a:	ce 01       	movw	r24, r28
    143c:	8f 5d       	subi	r24, 0xDF	; 223
    143e:	9e 4f       	sbci	r25, 0xFE	; 254
    1440:	fc 01       	movw	r30, r24
    1442:	80 81       	ld	r24, Z
    1444:	91 81       	ldd	r25, Z+1	; 0x01
    1446:	01 97       	sbiw	r24, 0x01	; 1
    1448:	f1 f7       	brne	.-4      	; 0x1446 <__stack+0x347>
    144a:	9e 01       	movw	r18, r28
    144c:	2f 5d       	subi	r18, 0xDF	; 223
    144e:	3e 4f       	sbci	r19, 0xFE	; 254
    1450:	f9 01       	movw	r30, r18
    1452:	91 83       	std	Z+1, r25	; 0x01
    1454:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1456:	ce 01       	movw	r24, r28
    1458:	81 5e       	subi	r24, 0xE1	; 225
    145a:	9e 4f       	sbci	r25, 0xFE	; 254
    145c:	9e 01       	movw	r18, r28
    145e:	21 5e       	subi	r18, 0xE1	; 225
    1460:	3e 4f       	sbci	r19, 0xFE	; 254
    1462:	f9 01       	movw	r30, r18
    1464:	20 81       	ld	r18, Z
    1466:	31 81       	ldd	r19, Z+1	; 0x01
    1468:	21 50       	subi	r18, 0x01	; 1
    146a:	31 09       	sbc	r19, r1
    146c:	fc 01       	movw	r30, r24
    146e:	31 83       	std	Z+1, r19	; 0x01
    1470:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1472:	ce 01       	movw	r24, r28
    1474:	81 5e       	subi	r24, 0xE1	; 225
    1476:	9e 4f       	sbci	r25, 0xFE	; 254
    1478:	fc 01       	movw	r30, r24
    147a:	80 81       	ld	r24, Z
    147c:	91 81       	ldd	r25, Z+1	; 0x01
    147e:	89 2b       	or	r24, r25
    1480:	a1 f6       	brne	.-88     	; 0x142a <__stack+0x32b>
    1482:	2c c0       	rjmp	.+88     	; 0x14dc <__stack+0x3dd>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1484:	8e 01       	movw	r16, r28
    1486:	01 5e       	subi	r16, 0xE1	; 225
    1488:	1e 4f       	sbci	r17, 0xFE	; 254
    148a:	ce 01       	movw	r24, r28
    148c:	85 5e       	subi	r24, 0xE5	; 229
    148e:	9e 4f       	sbci	r25, 0xFE	; 254
    1490:	fc 01       	movw	r30, r24
    1492:	60 81       	ld	r22, Z
    1494:	71 81       	ldd	r23, Z+1	; 0x01
    1496:	82 81       	ldd	r24, Z+2	; 0x02
    1498:	93 81       	ldd	r25, Z+3	; 0x03
    149a:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    149e:	dc 01       	movw	r26, r24
    14a0:	cb 01       	movw	r24, r22
    14a2:	f8 01       	movw	r30, r16
    14a4:	91 83       	std	Z+1, r25	; 0x01
    14a6:	80 83       	st	Z, r24
    14a8:	ce 01       	movw	r24, r28
    14aa:	8d 5d       	subi	r24, 0xDD	; 221
    14ac:	9e 4f       	sbci	r25, 0xFE	; 254
    14ae:	9e 01       	movw	r18, r28
    14b0:	21 5e       	subi	r18, 0xE1	; 225
    14b2:	3e 4f       	sbci	r19, 0xFE	; 254
    14b4:	f9 01       	movw	r30, r18
    14b6:	20 81       	ld	r18, Z
    14b8:	31 81       	ldd	r19, Z+1	; 0x01
    14ba:	fc 01       	movw	r30, r24
    14bc:	31 83       	std	Z+1, r19	; 0x01
    14be:	20 83       	st	Z, r18
    14c0:	ce 01       	movw	r24, r28
    14c2:	8d 5d       	subi	r24, 0xDD	; 221
    14c4:	9e 4f       	sbci	r25, 0xFE	; 254
    14c6:	fc 01       	movw	r30, r24
    14c8:	80 81       	ld	r24, Z
    14ca:	91 81       	ldd	r25, Z+1	; 0x01
    14cc:	01 97       	sbiw	r24, 0x01	; 1
    14ce:	f1 f7       	brne	.-4      	; 0x14cc <__stack+0x3cd>
    14d0:	9e 01       	movw	r18, r28
    14d2:	2d 5d       	subi	r18, 0xDD	; 221
    14d4:	3e 4f       	sbci	r19, 0xFE	; 254
    14d6:	f9 01       	movw	r30, r18
    14d8:	91 83       	std	Z+1, r25	; 0x01
    14da:	80 83       	st	Z, r24
			_delay_ms(500);
			to_uARM("M2210 F320 T100\n");
    14dc:	87 ed       	ldi	r24, 0xD7	; 215
    14de:	91 e0       	ldi	r25, 0x01	; 1
    14e0:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    14e4:	80 e0       	ldi	r24, 0x00	; 0
    14e6:	90 e0       	ldi	r25, 0x00	; 0
    14e8:	a6 e1       	ldi	r26, 0x16	; 22
    14ea:	b4 e4       	ldi	r27, 0x44	; 68
    14ec:	89 ab       	std	Y+49, r24	; 0x31
    14ee:	9a ab       	std	Y+50, r25	; 0x32
    14f0:	ab ab       	std	Y+51, r26	; 0x33
    14f2:	bc ab       	std	Y+52, r27	; 0x34

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    14f4:	8e 01       	movw	r16, r28
    14f6:	0f 5e       	subi	r16, 0xEF	; 239
    14f8:	1e 4f       	sbci	r17, 0xFE	; 254
    14fa:	20 e0       	ldi	r18, 0x00	; 0
    14fc:	30 e0       	ldi	r19, 0x00	; 0
    14fe:	4a e7       	ldi	r20, 0x7A	; 122
    1500:	55 e4       	ldi	r21, 0x45	; 69
    1502:	69 a9       	ldd	r22, Y+49	; 0x31
    1504:	7a a9       	ldd	r23, Y+50	; 0x32
    1506:	8b a9       	ldd	r24, Y+51	; 0x33
    1508:	9c a9       	ldd	r25, Y+52	; 0x34
    150a:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    150e:	dc 01       	movw	r26, r24
    1510:	cb 01       	movw	r24, r22
    1512:	f8 01       	movw	r30, r16
    1514:	80 83       	st	Z, r24
    1516:	91 83       	std	Z+1, r25	; 0x01
    1518:	a2 83       	std	Z+2, r26	; 0x02
    151a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    151c:	ce 01       	movw	r24, r28
    151e:	8f 5e       	subi	r24, 0xEF	; 239
    1520:	9e 4f       	sbci	r25, 0xFE	; 254
    1522:	20 e0       	ldi	r18, 0x00	; 0
    1524:	30 e0       	ldi	r19, 0x00	; 0
    1526:	40 e8       	ldi	r20, 0x80	; 128
    1528:	5f e3       	ldi	r21, 0x3F	; 63
    152a:	fc 01       	movw	r30, r24
    152c:	60 81       	ld	r22, Z
    152e:	71 81       	ldd	r23, Z+1	; 0x01
    1530:	82 81       	ldd	r24, Z+2	; 0x02
    1532:	93 81       	ldd	r25, Z+3	; 0x03
    1534:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    1538:	88 23       	and	r24, r24
    153a:	4c f4       	brge	.+18     	; 0x154e <__stack+0x44f>
		__ticks = 1;
    153c:	ce 01       	movw	r24, r28
    153e:	8b 5e       	subi	r24, 0xEB	; 235
    1540:	9e 4f       	sbci	r25, 0xFE	; 254
    1542:	21 e0       	ldi	r18, 0x01	; 1
    1544:	30 e0       	ldi	r19, 0x00	; 0
    1546:	fc 01       	movw	r30, r24
    1548:	31 83       	std	Z+1, r19	; 0x01
    154a:	20 83       	st	Z, r18
    154c:	69 c0       	rjmp	.+210    	; 0x1620 <__stack+0x521>
	else if (__tmp > 65535)
    154e:	ce 01       	movw	r24, r28
    1550:	8f 5e       	subi	r24, 0xEF	; 239
    1552:	9e 4f       	sbci	r25, 0xFE	; 254
    1554:	20 e0       	ldi	r18, 0x00	; 0
    1556:	3f ef       	ldi	r19, 0xFF	; 255
    1558:	4f e7       	ldi	r20, 0x7F	; 127
    155a:	57 e4       	ldi	r21, 0x47	; 71
    155c:	fc 01       	movw	r30, r24
    155e:	60 81       	ld	r22, Z
    1560:	71 81       	ldd	r23, Z+1	; 0x01
    1562:	82 81       	ldd	r24, Z+2	; 0x02
    1564:	93 81       	ldd	r25, Z+3	; 0x03
    1566:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    156a:	18 16       	cp	r1, r24
    156c:	0c f0       	brlt	.+2      	; 0x1570 <__stack+0x471>
    156e:	46 c0       	rjmp	.+140    	; 0x15fc <__stack+0x4fd>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1570:	20 e0       	ldi	r18, 0x00	; 0
    1572:	30 e0       	ldi	r19, 0x00	; 0
    1574:	40 e2       	ldi	r20, 0x20	; 32
    1576:	51 e4       	ldi	r21, 0x41	; 65
    1578:	69 a9       	ldd	r22, Y+49	; 0x31
    157a:	7a a9       	ldd	r23, Y+50	; 0x32
    157c:	8b a9       	ldd	r24, Y+51	; 0x33
    157e:	9c a9       	ldd	r25, Y+52	; 0x34
    1580:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    1584:	dc 01       	movw	r26, r24
    1586:	cb 01       	movw	r24, r22
    1588:	8e 01       	movw	r16, r28
    158a:	0b 5e       	subi	r16, 0xEB	; 235
    158c:	1e 4f       	sbci	r17, 0xFE	; 254
    158e:	bc 01       	movw	r22, r24
    1590:	cd 01       	movw	r24, r26
    1592:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    1596:	dc 01       	movw	r26, r24
    1598:	cb 01       	movw	r24, r22
    159a:	f8 01       	movw	r30, r16
    159c:	91 83       	std	Z+1, r25	; 0x01
    159e:	80 83       	st	Z, r24
    15a0:	24 c0       	rjmp	.+72     	; 0x15ea <__stack+0x4eb>
    15a2:	ce 01       	movw	r24, r28
    15a4:	89 5e       	subi	r24, 0xE9	; 233
    15a6:	9e 4f       	sbci	r25, 0xFE	; 254
    15a8:	20 e9       	ldi	r18, 0x90	; 144
    15aa:	31 e0       	ldi	r19, 0x01	; 1
    15ac:	fc 01       	movw	r30, r24
    15ae:	31 83       	std	Z+1, r19	; 0x01
    15b0:	20 83       	st	Z, r18
    15b2:	ce 01       	movw	r24, r28
    15b4:	89 5e       	subi	r24, 0xE9	; 233
    15b6:	9e 4f       	sbci	r25, 0xFE	; 254
    15b8:	fc 01       	movw	r30, r24
    15ba:	80 81       	ld	r24, Z
    15bc:	91 81       	ldd	r25, Z+1	; 0x01
    15be:	01 97       	sbiw	r24, 0x01	; 1
    15c0:	f1 f7       	brne	.-4      	; 0x15be <__stack+0x4bf>
    15c2:	9e 01       	movw	r18, r28
    15c4:	29 5e       	subi	r18, 0xE9	; 233
    15c6:	3e 4f       	sbci	r19, 0xFE	; 254
    15c8:	f9 01       	movw	r30, r18
    15ca:	91 83       	std	Z+1, r25	; 0x01
    15cc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15ce:	ce 01       	movw	r24, r28
    15d0:	8b 5e       	subi	r24, 0xEB	; 235
    15d2:	9e 4f       	sbci	r25, 0xFE	; 254
    15d4:	9e 01       	movw	r18, r28
    15d6:	2b 5e       	subi	r18, 0xEB	; 235
    15d8:	3e 4f       	sbci	r19, 0xFE	; 254
    15da:	f9 01       	movw	r30, r18
    15dc:	20 81       	ld	r18, Z
    15de:	31 81       	ldd	r19, Z+1	; 0x01
    15e0:	21 50       	subi	r18, 0x01	; 1
    15e2:	31 09       	sbc	r19, r1
    15e4:	fc 01       	movw	r30, r24
    15e6:	31 83       	std	Z+1, r19	; 0x01
    15e8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15ea:	ce 01       	movw	r24, r28
    15ec:	8b 5e       	subi	r24, 0xEB	; 235
    15ee:	9e 4f       	sbci	r25, 0xFE	; 254
    15f0:	fc 01       	movw	r30, r24
    15f2:	80 81       	ld	r24, Z
    15f4:	91 81       	ldd	r25, Z+1	; 0x01
    15f6:	89 2b       	or	r24, r25
    15f8:	a1 f6       	brne	.-88     	; 0x15a2 <__stack+0x4a3>
    15fa:	2c c0       	rjmp	.+88     	; 0x1654 <__stack+0x555>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15fc:	8e 01       	movw	r16, r28
    15fe:	0b 5e       	subi	r16, 0xEB	; 235
    1600:	1e 4f       	sbci	r17, 0xFE	; 254
    1602:	ce 01       	movw	r24, r28
    1604:	8f 5e       	subi	r24, 0xEF	; 239
    1606:	9e 4f       	sbci	r25, 0xFE	; 254
    1608:	fc 01       	movw	r30, r24
    160a:	60 81       	ld	r22, Z
    160c:	71 81       	ldd	r23, Z+1	; 0x01
    160e:	82 81       	ldd	r24, Z+2	; 0x02
    1610:	93 81       	ldd	r25, Z+3	; 0x03
    1612:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    1616:	dc 01       	movw	r26, r24
    1618:	cb 01       	movw	r24, r22
    161a:	f8 01       	movw	r30, r16
    161c:	91 83       	std	Z+1, r25	; 0x01
    161e:	80 83       	st	Z, r24
    1620:	ce 01       	movw	r24, r28
    1622:	87 5e       	subi	r24, 0xE7	; 231
    1624:	9e 4f       	sbci	r25, 0xFE	; 254
    1626:	9e 01       	movw	r18, r28
    1628:	2b 5e       	subi	r18, 0xEB	; 235
    162a:	3e 4f       	sbci	r19, 0xFE	; 254
    162c:	f9 01       	movw	r30, r18
    162e:	20 81       	ld	r18, Z
    1630:	31 81       	ldd	r19, Z+1	; 0x01
    1632:	fc 01       	movw	r30, r24
    1634:	31 83       	std	Z+1, r19	; 0x01
    1636:	20 83       	st	Z, r18
    1638:	ce 01       	movw	r24, r28
    163a:	87 5e       	subi	r24, 0xE7	; 231
    163c:	9e 4f       	sbci	r25, 0xFE	; 254
    163e:	fc 01       	movw	r30, r24
    1640:	80 81       	ld	r24, Z
    1642:	91 81       	ldd	r25, Z+1	; 0x01
    1644:	01 97       	sbiw	r24, 0x01	; 1
    1646:	f1 f7       	brne	.-4      	; 0x1644 <__stack+0x545>
    1648:	9e 01       	movw	r18, r28
    164a:	27 5e       	subi	r18, 0xE7	; 231
    164c:	3e 4f       	sbci	r19, 0xFE	; 254
    164e:	f9 01       	movw	r30, r18
    1650:	91 83       	std	Z+1, r25	; 0x01
    1652:	80 83       	st	Z, r24
			_delay_ms(600);
			to_uARM("M2210 F440 T100\n");
    1654:	88 ee       	ldi	r24, 0xE8	; 232
    1656:	91 e0       	ldi	r25, 0x01	; 1
    1658:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    165c:	80 e0       	ldi	r24, 0x00	; 0
    165e:	90 e0       	ldi	r25, 0x00	; 0
    1660:	a8 ec       	ldi	r26, 0xC8	; 200
    1662:	b3 e4       	ldi	r27, 0x43	; 67
    1664:	8d ab       	std	Y+53, r24	; 0x35
    1666:	9e ab       	std	Y+54, r25	; 0x36
    1668:	af ab       	std	Y+55, r26	; 0x37
    166a:	b8 af       	std	Y+56, r27	; 0x38

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    166c:	8e 01       	movw	r16, r28
    166e:	09 5f       	subi	r16, 0xF9	; 249
    1670:	1e 4f       	sbci	r17, 0xFE	; 254
    1672:	20 e0       	ldi	r18, 0x00	; 0
    1674:	30 e0       	ldi	r19, 0x00	; 0
    1676:	4a e7       	ldi	r20, 0x7A	; 122
    1678:	55 e4       	ldi	r21, 0x45	; 69
    167a:	6d a9       	ldd	r22, Y+53	; 0x35
    167c:	7e a9       	ldd	r23, Y+54	; 0x36
    167e:	8f a9       	ldd	r24, Y+55	; 0x37
    1680:	98 ad       	ldd	r25, Y+56	; 0x38
    1682:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    1686:	dc 01       	movw	r26, r24
    1688:	cb 01       	movw	r24, r22
    168a:	f8 01       	movw	r30, r16
    168c:	80 83       	st	Z, r24
    168e:	91 83       	std	Z+1, r25	; 0x01
    1690:	a2 83       	std	Z+2, r26	; 0x02
    1692:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1694:	ce 01       	movw	r24, r28
    1696:	89 5f       	subi	r24, 0xF9	; 249
    1698:	9e 4f       	sbci	r25, 0xFE	; 254
    169a:	20 e0       	ldi	r18, 0x00	; 0
    169c:	30 e0       	ldi	r19, 0x00	; 0
    169e:	40 e8       	ldi	r20, 0x80	; 128
    16a0:	5f e3       	ldi	r21, 0x3F	; 63
    16a2:	fc 01       	movw	r30, r24
    16a4:	60 81       	ld	r22, Z
    16a6:	71 81       	ldd	r23, Z+1	; 0x01
    16a8:	82 81       	ldd	r24, Z+2	; 0x02
    16aa:	93 81       	ldd	r25, Z+3	; 0x03
    16ac:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    16b0:	88 23       	and	r24, r24
    16b2:	4c f4       	brge	.+18     	; 0x16c6 <__stack+0x5c7>
		__ticks = 1;
    16b4:	ce 01       	movw	r24, r28
    16b6:	85 5f       	subi	r24, 0xF5	; 245
    16b8:	9e 4f       	sbci	r25, 0xFE	; 254
    16ba:	21 e0       	ldi	r18, 0x01	; 1
    16bc:	30 e0       	ldi	r19, 0x00	; 0
    16be:	fc 01       	movw	r30, r24
    16c0:	31 83       	std	Z+1, r19	; 0x01
    16c2:	20 83       	st	Z, r18
    16c4:	69 c0       	rjmp	.+210    	; 0x1798 <__stack+0x699>
	else if (__tmp > 65535)
    16c6:	ce 01       	movw	r24, r28
    16c8:	89 5f       	subi	r24, 0xF9	; 249
    16ca:	9e 4f       	sbci	r25, 0xFE	; 254
    16cc:	20 e0       	ldi	r18, 0x00	; 0
    16ce:	3f ef       	ldi	r19, 0xFF	; 255
    16d0:	4f e7       	ldi	r20, 0x7F	; 127
    16d2:	57 e4       	ldi	r21, 0x47	; 71
    16d4:	fc 01       	movw	r30, r24
    16d6:	60 81       	ld	r22, Z
    16d8:	71 81       	ldd	r23, Z+1	; 0x01
    16da:	82 81       	ldd	r24, Z+2	; 0x02
    16dc:	93 81       	ldd	r25, Z+3	; 0x03
    16de:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    16e2:	18 16       	cp	r1, r24
    16e4:	0c f0       	brlt	.+2      	; 0x16e8 <__stack+0x5e9>
    16e6:	46 c0       	rjmp	.+140    	; 0x1774 <__stack+0x675>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16e8:	20 e0       	ldi	r18, 0x00	; 0
    16ea:	30 e0       	ldi	r19, 0x00	; 0
    16ec:	40 e2       	ldi	r20, 0x20	; 32
    16ee:	51 e4       	ldi	r21, 0x41	; 65
    16f0:	6d a9       	ldd	r22, Y+53	; 0x35
    16f2:	7e a9       	ldd	r23, Y+54	; 0x36
    16f4:	8f a9       	ldd	r24, Y+55	; 0x37
    16f6:	98 ad       	ldd	r25, Y+56	; 0x38
    16f8:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    16fc:	dc 01       	movw	r26, r24
    16fe:	cb 01       	movw	r24, r22
    1700:	8e 01       	movw	r16, r28
    1702:	05 5f       	subi	r16, 0xF5	; 245
    1704:	1e 4f       	sbci	r17, 0xFE	; 254
    1706:	bc 01       	movw	r22, r24
    1708:	cd 01       	movw	r24, r26
    170a:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    170e:	dc 01       	movw	r26, r24
    1710:	cb 01       	movw	r24, r22
    1712:	f8 01       	movw	r30, r16
    1714:	91 83       	std	Z+1, r25	; 0x01
    1716:	80 83       	st	Z, r24
    1718:	24 c0       	rjmp	.+72     	; 0x1762 <__stack+0x663>
    171a:	ce 01       	movw	r24, r28
    171c:	83 5f       	subi	r24, 0xF3	; 243
    171e:	9e 4f       	sbci	r25, 0xFE	; 254
    1720:	20 e9       	ldi	r18, 0x90	; 144
    1722:	31 e0       	ldi	r19, 0x01	; 1
    1724:	fc 01       	movw	r30, r24
    1726:	31 83       	std	Z+1, r19	; 0x01
    1728:	20 83       	st	Z, r18
    172a:	ce 01       	movw	r24, r28
    172c:	83 5f       	subi	r24, 0xF3	; 243
    172e:	9e 4f       	sbci	r25, 0xFE	; 254
    1730:	fc 01       	movw	r30, r24
    1732:	80 81       	ld	r24, Z
    1734:	91 81       	ldd	r25, Z+1	; 0x01
    1736:	01 97       	sbiw	r24, 0x01	; 1
    1738:	f1 f7       	brne	.-4      	; 0x1736 <__stack+0x637>
    173a:	9e 01       	movw	r18, r28
    173c:	23 5f       	subi	r18, 0xF3	; 243
    173e:	3e 4f       	sbci	r19, 0xFE	; 254
    1740:	f9 01       	movw	r30, r18
    1742:	91 83       	std	Z+1, r25	; 0x01
    1744:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1746:	ce 01       	movw	r24, r28
    1748:	85 5f       	subi	r24, 0xF5	; 245
    174a:	9e 4f       	sbci	r25, 0xFE	; 254
    174c:	9e 01       	movw	r18, r28
    174e:	25 5f       	subi	r18, 0xF5	; 245
    1750:	3e 4f       	sbci	r19, 0xFE	; 254
    1752:	f9 01       	movw	r30, r18
    1754:	20 81       	ld	r18, Z
    1756:	31 81       	ldd	r19, Z+1	; 0x01
    1758:	21 50       	subi	r18, 0x01	; 1
    175a:	31 09       	sbc	r19, r1
    175c:	fc 01       	movw	r30, r24
    175e:	31 83       	std	Z+1, r19	; 0x01
    1760:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1762:	ce 01       	movw	r24, r28
    1764:	85 5f       	subi	r24, 0xF5	; 245
    1766:	9e 4f       	sbci	r25, 0xFE	; 254
    1768:	fc 01       	movw	r30, r24
    176a:	80 81       	ld	r24, Z
    176c:	91 81       	ldd	r25, Z+1	; 0x01
    176e:	89 2b       	or	r24, r25
    1770:	a1 f6       	brne	.-88     	; 0x171a <__stack+0x61b>
    1772:	2c c0       	rjmp	.+88     	; 0x17cc <__stack+0x6cd>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1774:	8e 01       	movw	r16, r28
    1776:	05 5f       	subi	r16, 0xF5	; 245
    1778:	1e 4f       	sbci	r17, 0xFE	; 254
    177a:	ce 01       	movw	r24, r28
    177c:	89 5f       	subi	r24, 0xF9	; 249
    177e:	9e 4f       	sbci	r25, 0xFE	; 254
    1780:	fc 01       	movw	r30, r24
    1782:	60 81       	ld	r22, Z
    1784:	71 81       	ldd	r23, Z+1	; 0x01
    1786:	82 81       	ldd	r24, Z+2	; 0x02
    1788:	93 81       	ldd	r25, Z+3	; 0x03
    178a:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    178e:	dc 01       	movw	r26, r24
    1790:	cb 01       	movw	r24, r22
    1792:	f8 01       	movw	r30, r16
    1794:	91 83       	std	Z+1, r25	; 0x01
    1796:	80 83       	st	Z, r24
    1798:	ce 01       	movw	r24, r28
    179a:	81 5f       	subi	r24, 0xF1	; 241
    179c:	9e 4f       	sbci	r25, 0xFE	; 254
    179e:	9e 01       	movw	r18, r28
    17a0:	25 5f       	subi	r18, 0xF5	; 245
    17a2:	3e 4f       	sbci	r19, 0xFE	; 254
    17a4:	f9 01       	movw	r30, r18
    17a6:	20 81       	ld	r18, Z
    17a8:	31 81       	ldd	r19, Z+1	; 0x01
    17aa:	fc 01       	movw	r30, r24
    17ac:	31 83       	std	Z+1, r19	; 0x01
    17ae:	20 83       	st	Z, r18
    17b0:	ce 01       	movw	r24, r28
    17b2:	81 5f       	subi	r24, 0xF1	; 241
    17b4:	9e 4f       	sbci	r25, 0xFE	; 254
    17b6:	fc 01       	movw	r30, r24
    17b8:	80 81       	ld	r24, Z
    17ba:	91 81       	ldd	r25, Z+1	; 0x01
    17bc:	01 97       	sbiw	r24, 0x01	; 1
    17be:	f1 f7       	brne	.-4      	; 0x17bc <__stack+0x6bd>
    17c0:	9e 01       	movw	r18, r28
    17c2:	21 5f       	subi	r18, 0xF1	; 241
    17c4:	3e 4f       	sbci	r19, 0xFE	; 254
    17c6:	f9 01       	movw	r30, r18
    17c8:	91 83       	std	Z+1, r25	; 0x01
    17ca:	80 83       	st	Z, r24
			_delay_ms(400);
			to_uARM("M2210 F480 T80\n");
    17cc:	89 ef       	ldi	r24, 0xF9	; 249
    17ce:	91 e0       	ldi	r25, 0x01	; 1
    17d0:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    17d4:	80 e0       	ldi	r24, 0x00	; 0
    17d6:	90 e0       	ldi	r25, 0x00	; 0
    17d8:	ad ec       	ldi	r26, 0xCD	; 205
    17da:	b3 e4       	ldi	r27, 0x43	; 67
    17dc:	89 af       	std	Y+57, r24	; 0x39
    17de:	9a af       	std	Y+58, r25	; 0x3a
    17e0:	ab af       	std	Y+59, r26	; 0x3b
    17e2:	bc af       	std	Y+60, r27	; 0x3c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    17e4:	8e 01       	movw	r16, r28
    17e6:	03 50       	subi	r16, 0x03	; 3
    17e8:	1f 4f       	sbci	r17, 0xFF	; 255
    17ea:	20 e0       	ldi	r18, 0x00	; 0
    17ec:	30 e0       	ldi	r19, 0x00	; 0
    17ee:	4a e7       	ldi	r20, 0x7A	; 122
    17f0:	55 e4       	ldi	r21, 0x45	; 69
    17f2:	69 ad       	ldd	r22, Y+57	; 0x39
    17f4:	7a ad       	ldd	r23, Y+58	; 0x3a
    17f6:	8b ad       	ldd	r24, Y+59	; 0x3b
    17f8:	9c ad       	ldd	r25, Y+60	; 0x3c
    17fa:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    17fe:	dc 01       	movw	r26, r24
    1800:	cb 01       	movw	r24, r22
    1802:	f8 01       	movw	r30, r16
    1804:	80 83       	st	Z, r24
    1806:	91 83       	std	Z+1, r25	; 0x01
    1808:	a2 83       	std	Z+2, r26	; 0x02
    180a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    180c:	ce 01       	movw	r24, r28
    180e:	83 50       	subi	r24, 0x03	; 3
    1810:	9f 4f       	sbci	r25, 0xFF	; 255
    1812:	20 e0       	ldi	r18, 0x00	; 0
    1814:	30 e0       	ldi	r19, 0x00	; 0
    1816:	40 e8       	ldi	r20, 0x80	; 128
    1818:	5f e3       	ldi	r21, 0x3F	; 63
    181a:	fc 01       	movw	r30, r24
    181c:	60 81       	ld	r22, Z
    181e:	71 81       	ldd	r23, Z+1	; 0x01
    1820:	82 81       	ldd	r24, Z+2	; 0x02
    1822:	93 81       	ldd	r25, Z+3	; 0x03
    1824:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    1828:	88 23       	and	r24, r24
    182a:	4c f4       	brge	.+18     	; 0x183e <__stack+0x73f>
		__ticks = 1;
    182c:	ce 01       	movw	r24, r28
    182e:	8f 5f       	subi	r24, 0xFF	; 255
    1830:	9e 4f       	sbci	r25, 0xFE	; 254
    1832:	21 e0       	ldi	r18, 0x01	; 1
    1834:	30 e0       	ldi	r19, 0x00	; 0
    1836:	fc 01       	movw	r30, r24
    1838:	31 83       	std	Z+1, r19	; 0x01
    183a:	20 83       	st	Z, r18
    183c:	69 c0       	rjmp	.+210    	; 0x1910 <__stack+0x811>
	else if (__tmp > 65535)
    183e:	ce 01       	movw	r24, r28
    1840:	83 50       	subi	r24, 0x03	; 3
    1842:	9f 4f       	sbci	r25, 0xFF	; 255
    1844:	20 e0       	ldi	r18, 0x00	; 0
    1846:	3f ef       	ldi	r19, 0xFF	; 255
    1848:	4f e7       	ldi	r20, 0x7F	; 127
    184a:	57 e4       	ldi	r21, 0x47	; 71
    184c:	fc 01       	movw	r30, r24
    184e:	60 81       	ld	r22, Z
    1850:	71 81       	ldd	r23, Z+1	; 0x01
    1852:	82 81       	ldd	r24, Z+2	; 0x02
    1854:	93 81       	ldd	r25, Z+3	; 0x03
    1856:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    185a:	18 16       	cp	r1, r24
    185c:	0c f0       	brlt	.+2      	; 0x1860 <__stack+0x761>
    185e:	46 c0       	rjmp	.+140    	; 0x18ec <__stack+0x7ed>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1860:	20 e0       	ldi	r18, 0x00	; 0
    1862:	30 e0       	ldi	r19, 0x00	; 0
    1864:	40 e2       	ldi	r20, 0x20	; 32
    1866:	51 e4       	ldi	r21, 0x41	; 65
    1868:	69 ad       	ldd	r22, Y+57	; 0x39
    186a:	7a ad       	ldd	r23, Y+58	; 0x3a
    186c:	8b ad       	ldd	r24, Y+59	; 0x3b
    186e:	9c ad       	ldd	r25, Y+60	; 0x3c
    1870:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    1874:	dc 01       	movw	r26, r24
    1876:	cb 01       	movw	r24, r22
    1878:	8e 01       	movw	r16, r28
    187a:	0f 5f       	subi	r16, 0xFF	; 255
    187c:	1e 4f       	sbci	r17, 0xFE	; 254
    187e:	bc 01       	movw	r22, r24
    1880:	cd 01       	movw	r24, r26
    1882:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    1886:	dc 01       	movw	r26, r24
    1888:	cb 01       	movw	r24, r22
    188a:	f8 01       	movw	r30, r16
    188c:	91 83       	std	Z+1, r25	; 0x01
    188e:	80 83       	st	Z, r24
    1890:	24 c0       	rjmp	.+72     	; 0x18da <__stack+0x7db>
    1892:	ce 01       	movw	r24, r28
    1894:	8d 5f       	subi	r24, 0xFD	; 253
    1896:	9e 4f       	sbci	r25, 0xFE	; 254
    1898:	20 e9       	ldi	r18, 0x90	; 144
    189a:	31 e0       	ldi	r19, 0x01	; 1
    189c:	fc 01       	movw	r30, r24
    189e:	31 83       	std	Z+1, r19	; 0x01
    18a0:	20 83       	st	Z, r18
    18a2:	ce 01       	movw	r24, r28
    18a4:	8d 5f       	subi	r24, 0xFD	; 253
    18a6:	9e 4f       	sbci	r25, 0xFE	; 254
    18a8:	fc 01       	movw	r30, r24
    18aa:	80 81       	ld	r24, Z
    18ac:	91 81       	ldd	r25, Z+1	; 0x01
    18ae:	01 97       	sbiw	r24, 0x01	; 1
    18b0:	f1 f7       	brne	.-4      	; 0x18ae <__stack+0x7af>
    18b2:	9e 01       	movw	r18, r28
    18b4:	2d 5f       	subi	r18, 0xFD	; 253
    18b6:	3e 4f       	sbci	r19, 0xFE	; 254
    18b8:	f9 01       	movw	r30, r18
    18ba:	91 83       	std	Z+1, r25	; 0x01
    18bc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18be:	ce 01       	movw	r24, r28
    18c0:	8f 5f       	subi	r24, 0xFF	; 255
    18c2:	9e 4f       	sbci	r25, 0xFE	; 254
    18c4:	9e 01       	movw	r18, r28
    18c6:	2f 5f       	subi	r18, 0xFF	; 255
    18c8:	3e 4f       	sbci	r19, 0xFE	; 254
    18ca:	f9 01       	movw	r30, r18
    18cc:	20 81       	ld	r18, Z
    18ce:	31 81       	ldd	r19, Z+1	; 0x01
    18d0:	21 50       	subi	r18, 0x01	; 1
    18d2:	31 09       	sbc	r19, r1
    18d4:	fc 01       	movw	r30, r24
    18d6:	31 83       	std	Z+1, r19	; 0x01
    18d8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18da:	ce 01       	movw	r24, r28
    18dc:	8f 5f       	subi	r24, 0xFF	; 255
    18de:	9e 4f       	sbci	r25, 0xFE	; 254
    18e0:	fc 01       	movw	r30, r24
    18e2:	80 81       	ld	r24, Z
    18e4:	91 81       	ldd	r25, Z+1	; 0x01
    18e6:	89 2b       	or	r24, r25
    18e8:	a1 f6       	brne	.-88     	; 0x1892 <__stack+0x793>
    18ea:	2c c0       	rjmp	.+88     	; 0x1944 <__stack+0x845>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18ec:	8e 01       	movw	r16, r28
    18ee:	0f 5f       	subi	r16, 0xFF	; 255
    18f0:	1e 4f       	sbci	r17, 0xFE	; 254
    18f2:	ce 01       	movw	r24, r28
    18f4:	83 50       	subi	r24, 0x03	; 3
    18f6:	9f 4f       	sbci	r25, 0xFF	; 255
    18f8:	fc 01       	movw	r30, r24
    18fa:	60 81       	ld	r22, Z
    18fc:	71 81       	ldd	r23, Z+1	; 0x01
    18fe:	82 81       	ldd	r24, Z+2	; 0x02
    1900:	93 81       	ldd	r25, Z+3	; 0x03
    1902:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    1906:	dc 01       	movw	r26, r24
    1908:	cb 01       	movw	r24, r22
    190a:	f8 01       	movw	r30, r16
    190c:	91 83       	std	Z+1, r25	; 0x01
    190e:	80 83       	st	Z, r24
    1910:	ce 01       	movw	r24, r28
    1912:	8b 5f       	subi	r24, 0xFB	; 251
    1914:	9e 4f       	sbci	r25, 0xFE	; 254
    1916:	9e 01       	movw	r18, r28
    1918:	2f 5f       	subi	r18, 0xFF	; 255
    191a:	3e 4f       	sbci	r19, 0xFE	; 254
    191c:	f9 01       	movw	r30, r18
    191e:	20 81       	ld	r18, Z
    1920:	31 81       	ldd	r19, Z+1	; 0x01
    1922:	fc 01       	movw	r30, r24
    1924:	31 83       	std	Z+1, r19	; 0x01
    1926:	20 83       	st	Z, r18
    1928:	ce 01       	movw	r24, r28
    192a:	8b 5f       	subi	r24, 0xFB	; 251
    192c:	9e 4f       	sbci	r25, 0xFE	; 254
    192e:	fc 01       	movw	r30, r24
    1930:	80 81       	ld	r24, Z
    1932:	91 81       	ldd	r25, Z+1	; 0x01
    1934:	01 97       	sbiw	r24, 0x01	; 1
    1936:	f1 f7       	brne	.-4      	; 0x1934 <__stack+0x835>
    1938:	9e 01       	movw	r18, r28
    193a:	2b 5f       	subi	r18, 0xFB	; 251
    193c:	3e 4f       	sbci	r19, 0xFE	; 254
    193e:	f9 01       	movw	r30, r18
    1940:	91 83       	std	Z+1, r25	; 0x01
    1942:	80 83       	st	Z, r24
			_delay_ms(410);
			to_uARM("M2210 F450 T100\n");
    1944:	89 e0       	ldi	r24, 0x09	; 9
    1946:	92 e0       	ldi	r25, 0x02	; 2
    1948:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    194c:	80 e0       	ldi	r24, 0x00	; 0
    194e:	90 e0       	ldi	r25, 0x00	; 0
    1950:	aa e7       	ldi	r26, 0x7A	; 122
    1952:	b3 e4       	ldi	r27, 0x43	; 67
    1954:	9e 01       	movw	r18, r28
    1956:	23 5c       	subi	r18, 0xC3	; 195
    1958:	3f 4f       	sbci	r19, 0xFF	; 255
    195a:	f9 01       	movw	r30, r18
    195c:	80 83       	st	Z, r24
    195e:	91 83       	std	Z+1, r25	; 0x01
    1960:	a2 83       	std	Z+2, r26	; 0x02
    1962:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1964:	8e 01       	movw	r16, r28
    1966:	0d 50       	subi	r16, 0x0D	; 13
    1968:	1f 4f       	sbci	r17, 0xFF	; 255
    196a:	20 e0       	ldi	r18, 0x00	; 0
    196c:	30 e0       	ldi	r19, 0x00	; 0
    196e:	4a e7       	ldi	r20, 0x7A	; 122
    1970:	55 e4       	ldi	r21, 0x45	; 69
    1972:	ce 01       	movw	r24, r28
    1974:	cd 96       	adiw	r24, 0x3d	; 61
    1976:	fc 01       	movw	r30, r24
    1978:	60 81       	ld	r22, Z
    197a:	71 81       	ldd	r23, Z+1	; 0x01
    197c:	82 81       	ldd	r24, Z+2	; 0x02
    197e:	93 81       	ldd	r25, Z+3	; 0x03
    1980:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    1984:	dc 01       	movw	r26, r24
    1986:	cb 01       	movw	r24, r22
    1988:	f8 01       	movw	r30, r16
    198a:	80 83       	st	Z, r24
    198c:	91 83       	std	Z+1, r25	; 0x01
    198e:	a2 83       	std	Z+2, r26	; 0x02
    1990:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1992:	ce 01       	movw	r24, r28
    1994:	8d 50       	subi	r24, 0x0D	; 13
    1996:	9f 4f       	sbci	r25, 0xFF	; 255
    1998:	20 e0       	ldi	r18, 0x00	; 0
    199a:	30 e0       	ldi	r19, 0x00	; 0
    199c:	40 e8       	ldi	r20, 0x80	; 128
    199e:	5f e3       	ldi	r21, 0x3F	; 63
    19a0:	fc 01       	movw	r30, r24
    19a2:	60 81       	ld	r22, Z
    19a4:	71 81       	ldd	r23, Z+1	; 0x01
    19a6:	82 81       	ldd	r24, Z+2	; 0x02
    19a8:	93 81       	ldd	r25, Z+3	; 0x03
    19aa:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    19ae:	88 23       	and	r24, r24
    19b0:	4c f4       	brge	.+18     	; 0x19c4 <__stack+0x8c5>
		__ticks = 1;
    19b2:	ce 01       	movw	r24, r28
    19b4:	89 50       	subi	r24, 0x09	; 9
    19b6:	9f 4f       	sbci	r25, 0xFF	; 255
    19b8:	21 e0       	ldi	r18, 0x01	; 1
    19ba:	30 e0       	ldi	r19, 0x00	; 0
    19bc:	fc 01       	movw	r30, r24
    19be:	31 83       	std	Z+1, r19	; 0x01
    19c0:	20 83       	st	Z, r18
    19c2:	6c c0       	rjmp	.+216    	; 0x1a9c <__stack+0x99d>
	else if (__tmp > 65535)
    19c4:	ce 01       	movw	r24, r28
    19c6:	8d 50       	subi	r24, 0x0D	; 13
    19c8:	9f 4f       	sbci	r25, 0xFF	; 255
    19ca:	20 e0       	ldi	r18, 0x00	; 0
    19cc:	3f ef       	ldi	r19, 0xFF	; 255
    19ce:	4f e7       	ldi	r20, 0x7F	; 127
    19d0:	57 e4       	ldi	r21, 0x47	; 71
    19d2:	fc 01       	movw	r30, r24
    19d4:	60 81       	ld	r22, Z
    19d6:	71 81       	ldd	r23, Z+1	; 0x01
    19d8:	82 81       	ldd	r24, Z+2	; 0x02
    19da:	93 81       	ldd	r25, Z+3	; 0x03
    19dc:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    19e0:	18 16       	cp	r1, r24
    19e2:	0c f0       	brlt	.+2      	; 0x19e6 <__stack+0x8e7>
    19e4:	49 c0       	rjmp	.+146    	; 0x1a78 <__stack+0x979>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19e6:	20 e0       	ldi	r18, 0x00	; 0
    19e8:	30 e0       	ldi	r19, 0x00	; 0
    19ea:	40 e2       	ldi	r20, 0x20	; 32
    19ec:	51 e4       	ldi	r21, 0x41	; 65
    19ee:	ce 01       	movw	r24, r28
    19f0:	cd 96       	adiw	r24, 0x3d	; 61
    19f2:	fc 01       	movw	r30, r24
    19f4:	60 81       	ld	r22, Z
    19f6:	71 81       	ldd	r23, Z+1	; 0x01
    19f8:	82 81       	ldd	r24, Z+2	; 0x02
    19fa:	93 81       	ldd	r25, Z+3	; 0x03
    19fc:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    1a00:	dc 01       	movw	r26, r24
    1a02:	cb 01       	movw	r24, r22
    1a04:	8e 01       	movw	r16, r28
    1a06:	09 50       	subi	r16, 0x09	; 9
    1a08:	1f 4f       	sbci	r17, 0xFF	; 255
    1a0a:	bc 01       	movw	r22, r24
    1a0c:	cd 01       	movw	r24, r26
    1a0e:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    1a12:	dc 01       	movw	r26, r24
    1a14:	cb 01       	movw	r24, r22
    1a16:	f8 01       	movw	r30, r16
    1a18:	91 83       	std	Z+1, r25	; 0x01
    1a1a:	80 83       	st	Z, r24
    1a1c:	24 c0       	rjmp	.+72     	; 0x1a66 <__stack+0x967>
    1a1e:	ce 01       	movw	r24, r28
    1a20:	87 50       	subi	r24, 0x07	; 7
    1a22:	9f 4f       	sbci	r25, 0xFF	; 255
    1a24:	20 e9       	ldi	r18, 0x90	; 144
    1a26:	31 e0       	ldi	r19, 0x01	; 1
    1a28:	fc 01       	movw	r30, r24
    1a2a:	31 83       	std	Z+1, r19	; 0x01
    1a2c:	20 83       	st	Z, r18
    1a2e:	ce 01       	movw	r24, r28
    1a30:	87 50       	subi	r24, 0x07	; 7
    1a32:	9f 4f       	sbci	r25, 0xFF	; 255
    1a34:	fc 01       	movw	r30, r24
    1a36:	80 81       	ld	r24, Z
    1a38:	91 81       	ldd	r25, Z+1	; 0x01
    1a3a:	01 97       	sbiw	r24, 0x01	; 1
    1a3c:	f1 f7       	brne	.-4      	; 0x1a3a <__stack+0x93b>
    1a3e:	9e 01       	movw	r18, r28
    1a40:	27 50       	subi	r18, 0x07	; 7
    1a42:	3f 4f       	sbci	r19, 0xFF	; 255
    1a44:	f9 01       	movw	r30, r18
    1a46:	91 83       	std	Z+1, r25	; 0x01
    1a48:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a4a:	ce 01       	movw	r24, r28
    1a4c:	89 50       	subi	r24, 0x09	; 9
    1a4e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a50:	9e 01       	movw	r18, r28
    1a52:	29 50       	subi	r18, 0x09	; 9
    1a54:	3f 4f       	sbci	r19, 0xFF	; 255
    1a56:	f9 01       	movw	r30, r18
    1a58:	20 81       	ld	r18, Z
    1a5a:	31 81       	ldd	r19, Z+1	; 0x01
    1a5c:	21 50       	subi	r18, 0x01	; 1
    1a5e:	31 09       	sbc	r19, r1
    1a60:	fc 01       	movw	r30, r24
    1a62:	31 83       	std	Z+1, r19	; 0x01
    1a64:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a66:	ce 01       	movw	r24, r28
    1a68:	89 50       	subi	r24, 0x09	; 9
    1a6a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a6c:	fc 01       	movw	r30, r24
    1a6e:	80 81       	ld	r24, Z
    1a70:	91 81       	ldd	r25, Z+1	; 0x01
    1a72:	89 2b       	or	r24, r25
    1a74:	a1 f6       	brne	.-88     	; 0x1a1e <__stack+0x91f>
    1a76:	2c c0       	rjmp	.+88     	; 0x1ad0 <__stack+0x9d1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a78:	8e 01       	movw	r16, r28
    1a7a:	09 50       	subi	r16, 0x09	; 9
    1a7c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a7e:	ce 01       	movw	r24, r28
    1a80:	8d 50       	subi	r24, 0x0D	; 13
    1a82:	9f 4f       	sbci	r25, 0xFF	; 255
    1a84:	fc 01       	movw	r30, r24
    1a86:	60 81       	ld	r22, Z
    1a88:	71 81       	ldd	r23, Z+1	; 0x01
    1a8a:	82 81       	ldd	r24, Z+2	; 0x02
    1a8c:	93 81       	ldd	r25, Z+3	; 0x03
    1a8e:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    1a92:	dc 01       	movw	r26, r24
    1a94:	cb 01       	movw	r24, r22
    1a96:	f8 01       	movw	r30, r16
    1a98:	91 83       	std	Z+1, r25	; 0x01
    1a9a:	80 83       	st	Z, r24
    1a9c:	ce 01       	movw	r24, r28
    1a9e:	85 50       	subi	r24, 0x05	; 5
    1aa0:	9f 4f       	sbci	r25, 0xFF	; 255
    1aa2:	9e 01       	movw	r18, r28
    1aa4:	29 50       	subi	r18, 0x09	; 9
    1aa6:	3f 4f       	sbci	r19, 0xFF	; 255
    1aa8:	f9 01       	movw	r30, r18
    1aaa:	20 81       	ld	r18, Z
    1aac:	31 81       	ldd	r19, Z+1	; 0x01
    1aae:	fc 01       	movw	r30, r24
    1ab0:	31 83       	std	Z+1, r19	; 0x01
    1ab2:	20 83       	st	Z, r18
    1ab4:	ce 01       	movw	r24, r28
    1ab6:	85 50       	subi	r24, 0x05	; 5
    1ab8:	9f 4f       	sbci	r25, 0xFF	; 255
    1aba:	fc 01       	movw	r30, r24
    1abc:	80 81       	ld	r24, Z
    1abe:	91 81       	ldd	r25, Z+1	; 0x01
    1ac0:	01 97       	sbiw	r24, 0x01	; 1
    1ac2:	f1 f7       	brne	.-4      	; 0x1ac0 <__stack+0x9c1>
    1ac4:	9e 01       	movw	r18, r28
    1ac6:	25 50       	subi	r18, 0x05	; 5
    1ac8:	3f 4f       	sbci	r19, 0xFF	; 255
    1aca:	f9 01       	movw	r30, r18
    1acc:	91 83       	std	Z+1, r25	; 0x01
    1ace:	80 83       	st	Z, r24
			_delay_ms(250);
			to_uARM("M2210 F430 T100\n");
    1ad0:	8a e1       	ldi	r24, 0x1A	; 26
    1ad2:	92 e0       	ldi	r25, 0x02	; 2
    1ad4:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    1ad8:	9e 01       	movw	r18, r28
    1ada:	2f 5b       	subi	r18, 0xBF	; 191
    1adc:	3f 4f       	sbci	r19, 0xFF	; 255
    1ade:	80 e0       	ldi	r24, 0x00	; 0
    1ae0:	90 e0       	ldi	r25, 0x00	; 0
    1ae2:	a8 ec       	ldi	r26, 0xC8	; 200
    1ae4:	b3 e4       	ldi	r27, 0x43	; 67
    1ae6:	f9 01       	movw	r30, r18
    1ae8:	80 83       	st	Z, r24
    1aea:	91 83       	std	Z+1, r25	; 0x01
    1aec:	a2 83       	std	Z+2, r26	; 0x02
    1aee:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1af0:	8e 01       	movw	r16, r28
    1af2:	07 51       	subi	r16, 0x17	; 23
    1af4:	1f 4f       	sbci	r17, 0xFF	; 255
    1af6:	ce 01       	movw	r24, r28
    1af8:	8f 5b       	subi	r24, 0xBF	; 191
    1afa:	9f 4f       	sbci	r25, 0xFF	; 255
    1afc:	20 e0       	ldi	r18, 0x00	; 0
    1afe:	30 e0       	ldi	r19, 0x00	; 0
    1b00:	4a e7       	ldi	r20, 0x7A	; 122
    1b02:	55 e4       	ldi	r21, 0x45	; 69
    1b04:	fc 01       	movw	r30, r24
    1b06:	60 81       	ld	r22, Z
    1b08:	71 81       	ldd	r23, Z+1	; 0x01
    1b0a:	82 81       	ldd	r24, Z+2	; 0x02
    1b0c:	93 81       	ldd	r25, Z+3	; 0x03
    1b0e:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    1b12:	dc 01       	movw	r26, r24
    1b14:	cb 01       	movw	r24, r22
    1b16:	f8 01       	movw	r30, r16
    1b18:	80 83       	st	Z, r24
    1b1a:	91 83       	std	Z+1, r25	; 0x01
    1b1c:	a2 83       	std	Z+2, r26	; 0x02
    1b1e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b20:	ce 01       	movw	r24, r28
    1b22:	87 51       	subi	r24, 0x17	; 23
    1b24:	9f 4f       	sbci	r25, 0xFF	; 255
    1b26:	20 e0       	ldi	r18, 0x00	; 0
    1b28:	30 e0       	ldi	r19, 0x00	; 0
    1b2a:	40 e8       	ldi	r20, 0x80	; 128
    1b2c:	5f e3       	ldi	r21, 0x3F	; 63
    1b2e:	fc 01       	movw	r30, r24
    1b30:	60 81       	ld	r22, Z
    1b32:	71 81       	ldd	r23, Z+1	; 0x01
    1b34:	82 81       	ldd	r24, Z+2	; 0x02
    1b36:	93 81       	ldd	r25, Z+3	; 0x03
    1b38:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    1b3c:	88 23       	and	r24, r24
    1b3e:	4c f4       	brge	.+18     	; 0x1b52 <__stack+0xa53>
		__ticks = 1;
    1b40:	ce 01       	movw	r24, r28
    1b42:	83 51       	subi	r24, 0x13	; 19
    1b44:	9f 4f       	sbci	r25, 0xFF	; 255
    1b46:	21 e0       	ldi	r18, 0x01	; 1
    1b48:	30 e0       	ldi	r19, 0x00	; 0
    1b4a:	fc 01       	movw	r30, r24
    1b4c:	31 83       	std	Z+1, r19	; 0x01
    1b4e:	20 83       	st	Z, r18
    1b50:	6d c0       	rjmp	.+218    	; 0x1c2c <__stack+0xb2d>
	else if (__tmp > 65535)
    1b52:	ce 01       	movw	r24, r28
    1b54:	87 51       	subi	r24, 0x17	; 23
    1b56:	9f 4f       	sbci	r25, 0xFF	; 255
    1b58:	20 e0       	ldi	r18, 0x00	; 0
    1b5a:	3f ef       	ldi	r19, 0xFF	; 255
    1b5c:	4f e7       	ldi	r20, 0x7F	; 127
    1b5e:	57 e4       	ldi	r21, 0x47	; 71
    1b60:	fc 01       	movw	r30, r24
    1b62:	60 81       	ld	r22, Z
    1b64:	71 81       	ldd	r23, Z+1	; 0x01
    1b66:	82 81       	ldd	r24, Z+2	; 0x02
    1b68:	93 81       	ldd	r25, Z+3	; 0x03
    1b6a:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    1b6e:	18 16       	cp	r1, r24
    1b70:	0c f0       	brlt	.+2      	; 0x1b74 <__stack+0xa75>
    1b72:	4a c0       	rjmp	.+148    	; 0x1c08 <__stack+0xb09>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b74:	ce 01       	movw	r24, r28
    1b76:	8f 5b       	subi	r24, 0xBF	; 191
    1b78:	9f 4f       	sbci	r25, 0xFF	; 255
    1b7a:	20 e0       	ldi	r18, 0x00	; 0
    1b7c:	30 e0       	ldi	r19, 0x00	; 0
    1b7e:	40 e2       	ldi	r20, 0x20	; 32
    1b80:	51 e4       	ldi	r21, 0x41	; 65
    1b82:	fc 01       	movw	r30, r24
    1b84:	60 81       	ld	r22, Z
    1b86:	71 81       	ldd	r23, Z+1	; 0x01
    1b88:	82 81       	ldd	r24, Z+2	; 0x02
    1b8a:	93 81       	ldd	r25, Z+3	; 0x03
    1b8c:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    1b90:	dc 01       	movw	r26, r24
    1b92:	cb 01       	movw	r24, r22
    1b94:	8e 01       	movw	r16, r28
    1b96:	03 51       	subi	r16, 0x13	; 19
    1b98:	1f 4f       	sbci	r17, 0xFF	; 255
    1b9a:	bc 01       	movw	r22, r24
    1b9c:	cd 01       	movw	r24, r26
    1b9e:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    1ba2:	dc 01       	movw	r26, r24
    1ba4:	cb 01       	movw	r24, r22
    1ba6:	f8 01       	movw	r30, r16
    1ba8:	91 83       	std	Z+1, r25	; 0x01
    1baa:	80 83       	st	Z, r24
    1bac:	24 c0       	rjmp	.+72     	; 0x1bf6 <__stack+0xaf7>
    1bae:	ce 01       	movw	r24, r28
    1bb0:	81 51       	subi	r24, 0x11	; 17
    1bb2:	9f 4f       	sbci	r25, 0xFF	; 255
    1bb4:	20 e9       	ldi	r18, 0x90	; 144
    1bb6:	31 e0       	ldi	r19, 0x01	; 1
    1bb8:	fc 01       	movw	r30, r24
    1bba:	31 83       	std	Z+1, r19	; 0x01
    1bbc:	20 83       	st	Z, r18
    1bbe:	ce 01       	movw	r24, r28
    1bc0:	81 51       	subi	r24, 0x11	; 17
    1bc2:	9f 4f       	sbci	r25, 0xFF	; 255
    1bc4:	fc 01       	movw	r30, r24
    1bc6:	80 81       	ld	r24, Z
    1bc8:	91 81       	ldd	r25, Z+1	; 0x01
    1bca:	01 97       	sbiw	r24, 0x01	; 1
    1bcc:	f1 f7       	brne	.-4      	; 0x1bca <__stack+0xacb>
    1bce:	9e 01       	movw	r18, r28
    1bd0:	21 51       	subi	r18, 0x11	; 17
    1bd2:	3f 4f       	sbci	r19, 0xFF	; 255
    1bd4:	f9 01       	movw	r30, r18
    1bd6:	91 83       	std	Z+1, r25	; 0x01
    1bd8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bda:	ce 01       	movw	r24, r28
    1bdc:	83 51       	subi	r24, 0x13	; 19
    1bde:	9f 4f       	sbci	r25, 0xFF	; 255
    1be0:	9e 01       	movw	r18, r28
    1be2:	23 51       	subi	r18, 0x13	; 19
    1be4:	3f 4f       	sbci	r19, 0xFF	; 255
    1be6:	f9 01       	movw	r30, r18
    1be8:	20 81       	ld	r18, Z
    1bea:	31 81       	ldd	r19, Z+1	; 0x01
    1bec:	21 50       	subi	r18, 0x01	; 1
    1bee:	31 09       	sbc	r19, r1
    1bf0:	fc 01       	movw	r30, r24
    1bf2:	31 83       	std	Z+1, r19	; 0x01
    1bf4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bf6:	ce 01       	movw	r24, r28
    1bf8:	83 51       	subi	r24, 0x13	; 19
    1bfa:	9f 4f       	sbci	r25, 0xFF	; 255
    1bfc:	fc 01       	movw	r30, r24
    1bfe:	80 81       	ld	r24, Z
    1c00:	91 81       	ldd	r25, Z+1	; 0x01
    1c02:	89 2b       	or	r24, r25
    1c04:	a1 f6       	brne	.-88     	; 0x1bae <__stack+0xaaf>
    1c06:	2c c0       	rjmp	.+88     	; 0x1c60 <__stack+0xb61>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c08:	8e 01       	movw	r16, r28
    1c0a:	03 51       	subi	r16, 0x13	; 19
    1c0c:	1f 4f       	sbci	r17, 0xFF	; 255
    1c0e:	ce 01       	movw	r24, r28
    1c10:	87 51       	subi	r24, 0x17	; 23
    1c12:	9f 4f       	sbci	r25, 0xFF	; 255
    1c14:	fc 01       	movw	r30, r24
    1c16:	60 81       	ld	r22, Z
    1c18:	71 81       	ldd	r23, Z+1	; 0x01
    1c1a:	82 81       	ldd	r24, Z+2	; 0x02
    1c1c:	93 81       	ldd	r25, Z+3	; 0x03
    1c1e:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    1c22:	dc 01       	movw	r26, r24
    1c24:	cb 01       	movw	r24, r22
    1c26:	f8 01       	movw	r30, r16
    1c28:	91 83       	std	Z+1, r25	; 0x01
    1c2a:	80 83       	st	Z, r24
    1c2c:	ce 01       	movw	r24, r28
    1c2e:	8f 50       	subi	r24, 0x0F	; 15
    1c30:	9f 4f       	sbci	r25, 0xFF	; 255
    1c32:	9e 01       	movw	r18, r28
    1c34:	23 51       	subi	r18, 0x13	; 19
    1c36:	3f 4f       	sbci	r19, 0xFF	; 255
    1c38:	f9 01       	movw	r30, r18
    1c3a:	20 81       	ld	r18, Z
    1c3c:	31 81       	ldd	r19, Z+1	; 0x01
    1c3e:	fc 01       	movw	r30, r24
    1c40:	31 83       	std	Z+1, r19	; 0x01
    1c42:	20 83       	st	Z, r18
    1c44:	ce 01       	movw	r24, r28
    1c46:	8f 50       	subi	r24, 0x0F	; 15
    1c48:	9f 4f       	sbci	r25, 0xFF	; 255
    1c4a:	fc 01       	movw	r30, r24
    1c4c:	80 81       	ld	r24, Z
    1c4e:	91 81       	ldd	r25, Z+1	; 0x01
    1c50:	01 97       	sbiw	r24, 0x01	; 1
    1c52:	f1 f7       	brne	.-4      	; 0x1c50 <__stack+0xb51>
    1c54:	9e 01       	movw	r18, r28
    1c56:	2f 50       	subi	r18, 0x0F	; 15
    1c58:	3f 4f       	sbci	r19, 0xFF	; 255
    1c5a:	f9 01       	movw	r30, r18
    1c5c:	91 83       	std	Z+1, r25	; 0x01
    1c5e:	80 83       	st	Z, r24
			_delay_ms(400);
			to_uARM("M2210 F380 T100\n");
    1c60:	86 ec       	ldi	r24, 0xC6	; 198
    1c62:	91 e0       	ldi	r25, 0x01	; 1
    1c64:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    1c68:	9e 01       	movw	r18, r28
    1c6a:	2b 5b       	subi	r18, 0xBB	; 187
    1c6c:	3f 4f       	sbci	r19, 0xFF	; 255
    1c6e:	80 e0       	ldi	r24, 0x00	; 0
    1c70:	90 e0       	ldi	r25, 0x00	; 0
    1c72:	a6 e9       	ldi	r26, 0x96	; 150
    1c74:	b3 e4       	ldi	r27, 0x43	; 67
    1c76:	f9 01       	movw	r30, r18
    1c78:	80 83       	st	Z, r24
    1c7a:	91 83       	std	Z+1, r25	; 0x01
    1c7c:	a2 83       	std	Z+2, r26	; 0x02
    1c7e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1c80:	8e 01       	movw	r16, r28
    1c82:	01 52       	subi	r16, 0x21	; 33
    1c84:	1f 4f       	sbci	r17, 0xFF	; 255
    1c86:	ce 01       	movw	r24, r28
    1c88:	8b 5b       	subi	r24, 0xBB	; 187
    1c8a:	9f 4f       	sbci	r25, 0xFF	; 255
    1c8c:	20 e0       	ldi	r18, 0x00	; 0
    1c8e:	30 e0       	ldi	r19, 0x00	; 0
    1c90:	4a e7       	ldi	r20, 0x7A	; 122
    1c92:	55 e4       	ldi	r21, 0x45	; 69
    1c94:	fc 01       	movw	r30, r24
    1c96:	60 81       	ld	r22, Z
    1c98:	71 81       	ldd	r23, Z+1	; 0x01
    1c9a:	82 81       	ldd	r24, Z+2	; 0x02
    1c9c:	93 81       	ldd	r25, Z+3	; 0x03
    1c9e:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    1ca2:	dc 01       	movw	r26, r24
    1ca4:	cb 01       	movw	r24, r22
    1ca6:	f8 01       	movw	r30, r16
    1ca8:	80 83       	st	Z, r24
    1caa:	91 83       	std	Z+1, r25	; 0x01
    1cac:	a2 83       	std	Z+2, r26	; 0x02
    1cae:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1cb0:	ce 01       	movw	r24, r28
    1cb2:	81 52       	subi	r24, 0x21	; 33
    1cb4:	9f 4f       	sbci	r25, 0xFF	; 255
    1cb6:	20 e0       	ldi	r18, 0x00	; 0
    1cb8:	30 e0       	ldi	r19, 0x00	; 0
    1cba:	40 e8       	ldi	r20, 0x80	; 128
    1cbc:	5f e3       	ldi	r21, 0x3F	; 63
    1cbe:	fc 01       	movw	r30, r24
    1cc0:	60 81       	ld	r22, Z
    1cc2:	71 81       	ldd	r23, Z+1	; 0x01
    1cc4:	82 81       	ldd	r24, Z+2	; 0x02
    1cc6:	93 81       	ldd	r25, Z+3	; 0x03
    1cc8:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    1ccc:	88 23       	and	r24, r24
    1cce:	4c f4       	brge	.+18     	; 0x1ce2 <__stack+0xbe3>
		__ticks = 1;
    1cd0:	ce 01       	movw	r24, r28
    1cd2:	8d 51       	subi	r24, 0x1D	; 29
    1cd4:	9f 4f       	sbci	r25, 0xFF	; 255
    1cd6:	21 e0       	ldi	r18, 0x01	; 1
    1cd8:	30 e0       	ldi	r19, 0x00	; 0
    1cda:	fc 01       	movw	r30, r24
    1cdc:	31 83       	std	Z+1, r19	; 0x01
    1cde:	20 83       	st	Z, r18
    1ce0:	6d c0       	rjmp	.+218    	; 0x1dbc <__stack+0xcbd>
	else if (__tmp > 65535)
    1ce2:	ce 01       	movw	r24, r28
    1ce4:	81 52       	subi	r24, 0x21	; 33
    1ce6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ce8:	20 e0       	ldi	r18, 0x00	; 0
    1cea:	3f ef       	ldi	r19, 0xFF	; 255
    1cec:	4f e7       	ldi	r20, 0x7F	; 127
    1cee:	57 e4       	ldi	r21, 0x47	; 71
    1cf0:	fc 01       	movw	r30, r24
    1cf2:	60 81       	ld	r22, Z
    1cf4:	71 81       	ldd	r23, Z+1	; 0x01
    1cf6:	82 81       	ldd	r24, Z+2	; 0x02
    1cf8:	93 81       	ldd	r25, Z+3	; 0x03
    1cfa:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    1cfe:	18 16       	cp	r1, r24
    1d00:	0c f0       	brlt	.+2      	; 0x1d04 <__stack+0xc05>
    1d02:	4a c0       	rjmp	.+148    	; 0x1d98 <__stack+0xc99>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d04:	ce 01       	movw	r24, r28
    1d06:	8b 5b       	subi	r24, 0xBB	; 187
    1d08:	9f 4f       	sbci	r25, 0xFF	; 255
    1d0a:	20 e0       	ldi	r18, 0x00	; 0
    1d0c:	30 e0       	ldi	r19, 0x00	; 0
    1d0e:	40 e2       	ldi	r20, 0x20	; 32
    1d10:	51 e4       	ldi	r21, 0x41	; 65
    1d12:	fc 01       	movw	r30, r24
    1d14:	60 81       	ld	r22, Z
    1d16:	71 81       	ldd	r23, Z+1	; 0x01
    1d18:	82 81       	ldd	r24, Z+2	; 0x02
    1d1a:	93 81       	ldd	r25, Z+3	; 0x03
    1d1c:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    1d20:	dc 01       	movw	r26, r24
    1d22:	cb 01       	movw	r24, r22
    1d24:	8e 01       	movw	r16, r28
    1d26:	0d 51       	subi	r16, 0x1D	; 29
    1d28:	1f 4f       	sbci	r17, 0xFF	; 255
    1d2a:	bc 01       	movw	r22, r24
    1d2c:	cd 01       	movw	r24, r26
    1d2e:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    1d32:	dc 01       	movw	r26, r24
    1d34:	cb 01       	movw	r24, r22
    1d36:	f8 01       	movw	r30, r16
    1d38:	91 83       	std	Z+1, r25	; 0x01
    1d3a:	80 83       	st	Z, r24
    1d3c:	24 c0       	rjmp	.+72     	; 0x1d86 <__stack+0xc87>
    1d3e:	ce 01       	movw	r24, r28
    1d40:	8b 51       	subi	r24, 0x1B	; 27
    1d42:	9f 4f       	sbci	r25, 0xFF	; 255
    1d44:	20 e9       	ldi	r18, 0x90	; 144
    1d46:	31 e0       	ldi	r19, 0x01	; 1
    1d48:	fc 01       	movw	r30, r24
    1d4a:	31 83       	std	Z+1, r19	; 0x01
    1d4c:	20 83       	st	Z, r18
    1d4e:	ce 01       	movw	r24, r28
    1d50:	8b 51       	subi	r24, 0x1B	; 27
    1d52:	9f 4f       	sbci	r25, 0xFF	; 255
    1d54:	fc 01       	movw	r30, r24
    1d56:	80 81       	ld	r24, Z
    1d58:	91 81       	ldd	r25, Z+1	; 0x01
    1d5a:	01 97       	sbiw	r24, 0x01	; 1
    1d5c:	f1 f7       	brne	.-4      	; 0x1d5a <__stack+0xc5b>
    1d5e:	9e 01       	movw	r18, r28
    1d60:	2b 51       	subi	r18, 0x1B	; 27
    1d62:	3f 4f       	sbci	r19, 0xFF	; 255
    1d64:	f9 01       	movw	r30, r18
    1d66:	91 83       	std	Z+1, r25	; 0x01
    1d68:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d6a:	ce 01       	movw	r24, r28
    1d6c:	8d 51       	subi	r24, 0x1D	; 29
    1d6e:	9f 4f       	sbci	r25, 0xFF	; 255
    1d70:	9e 01       	movw	r18, r28
    1d72:	2d 51       	subi	r18, 0x1D	; 29
    1d74:	3f 4f       	sbci	r19, 0xFF	; 255
    1d76:	f9 01       	movw	r30, r18
    1d78:	20 81       	ld	r18, Z
    1d7a:	31 81       	ldd	r19, Z+1	; 0x01
    1d7c:	21 50       	subi	r18, 0x01	; 1
    1d7e:	31 09       	sbc	r19, r1
    1d80:	fc 01       	movw	r30, r24
    1d82:	31 83       	std	Z+1, r19	; 0x01
    1d84:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d86:	ce 01       	movw	r24, r28
    1d88:	8d 51       	subi	r24, 0x1D	; 29
    1d8a:	9f 4f       	sbci	r25, 0xFF	; 255
    1d8c:	fc 01       	movw	r30, r24
    1d8e:	80 81       	ld	r24, Z
    1d90:	91 81       	ldd	r25, Z+1	; 0x01
    1d92:	89 2b       	or	r24, r25
    1d94:	a1 f6       	brne	.-88     	; 0x1d3e <__stack+0xc3f>
    1d96:	2c c0       	rjmp	.+88     	; 0x1df0 <__stack+0xcf1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d98:	8e 01       	movw	r16, r28
    1d9a:	0d 51       	subi	r16, 0x1D	; 29
    1d9c:	1f 4f       	sbci	r17, 0xFF	; 255
    1d9e:	ce 01       	movw	r24, r28
    1da0:	81 52       	subi	r24, 0x21	; 33
    1da2:	9f 4f       	sbci	r25, 0xFF	; 255
    1da4:	fc 01       	movw	r30, r24
    1da6:	60 81       	ld	r22, Z
    1da8:	71 81       	ldd	r23, Z+1	; 0x01
    1daa:	82 81       	ldd	r24, Z+2	; 0x02
    1dac:	93 81       	ldd	r25, Z+3	; 0x03
    1dae:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    1db2:	dc 01       	movw	r26, r24
    1db4:	cb 01       	movw	r24, r22
    1db6:	f8 01       	movw	r30, r16
    1db8:	91 83       	std	Z+1, r25	; 0x01
    1dba:	80 83       	st	Z, r24
    1dbc:	ce 01       	movw	r24, r28
    1dbe:	89 51       	subi	r24, 0x19	; 25
    1dc0:	9f 4f       	sbci	r25, 0xFF	; 255
    1dc2:	9e 01       	movw	r18, r28
    1dc4:	2d 51       	subi	r18, 0x1D	; 29
    1dc6:	3f 4f       	sbci	r19, 0xFF	; 255
    1dc8:	f9 01       	movw	r30, r18
    1dca:	20 81       	ld	r18, Z
    1dcc:	31 81       	ldd	r19, Z+1	; 0x01
    1dce:	fc 01       	movw	r30, r24
    1dd0:	31 83       	std	Z+1, r19	; 0x01
    1dd2:	20 83       	st	Z, r18
    1dd4:	ce 01       	movw	r24, r28
    1dd6:	89 51       	subi	r24, 0x19	; 25
    1dd8:	9f 4f       	sbci	r25, 0xFF	; 255
    1dda:	fc 01       	movw	r30, r24
    1ddc:	80 81       	ld	r24, Z
    1dde:	91 81       	ldd	r25, Z+1	; 0x01
    1de0:	01 97       	sbiw	r24, 0x01	; 1
    1de2:	f1 f7       	brne	.-4      	; 0x1de0 <__stack+0xce1>
    1de4:	9e 01       	movw	r18, r28
    1de6:	29 51       	subi	r18, 0x19	; 25
    1de8:	3f 4f       	sbci	r19, 0xFF	; 255
    1dea:	f9 01       	movw	r30, r18
    1dec:	91 83       	std	Z+1, r25	; 0x01
    1dee:	80 83       	st	Z, r24
			_delay_ms(300);
			to_uARM("M2210 F660 T80\n");
    1df0:	8b e2       	ldi	r24, 0x2B	; 43
    1df2:	92 e0       	ldi	r25, 0x02	; 2
    1df4:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    1df8:	9e 01       	movw	r18, r28
    1dfa:	27 5b       	subi	r18, 0xB7	; 183
    1dfc:	3f 4f       	sbci	r19, 0xFF	; 255
    1dfe:	80 e0       	ldi	r24, 0x00	; 0
    1e00:	90 e0       	ldi	r25, 0x00	; 0
    1e02:	a6 e1       	ldi	r26, 0x16	; 22
    1e04:	b3 e4       	ldi	r27, 0x43	; 67
    1e06:	f9 01       	movw	r30, r18
    1e08:	80 83       	st	Z, r24
    1e0a:	91 83       	std	Z+1, r25	; 0x01
    1e0c:	a2 83       	std	Z+2, r26	; 0x02
    1e0e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1e10:	8e 01       	movw	r16, r28
    1e12:	0b 52       	subi	r16, 0x2B	; 43
    1e14:	1f 4f       	sbci	r17, 0xFF	; 255
    1e16:	ce 01       	movw	r24, r28
    1e18:	87 5b       	subi	r24, 0xB7	; 183
    1e1a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e1c:	20 e0       	ldi	r18, 0x00	; 0
    1e1e:	30 e0       	ldi	r19, 0x00	; 0
    1e20:	4a e7       	ldi	r20, 0x7A	; 122
    1e22:	55 e4       	ldi	r21, 0x45	; 69
    1e24:	fc 01       	movw	r30, r24
    1e26:	60 81       	ld	r22, Z
    1e28:	71 81       	ldd	r23, Z+1	; 0x01
    1e2a:	82 81       	ldd	r24, Z+2	; 0x02
    1e2c:	93 81       	ldd	r25, Z+3	; 0x03
    1e2e:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    1e32:	dc 01       	movw	r26, r24
    1e34:	cb 01       	movw	r24, r22
    1e36:	f8 01       	movw	r30, r16
    1e38:	80 83       	st	Z, r24
    1e3a:	91 83       	std	Z+1, r25	; 0x01
    1e3c:	a2 83       	std	Z+2, r26	; 0x02
    1e3e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e40:	ce 01       	movw	r24, r28
    1e42:	8b 52       	subi	r24, 0x2B	; 43
    1e44:	9f 4f       	sbci	r25, 0xFF	; 255
    1e46:	20 e0       	ldi	r18, 0x00	; 0
    1e48:	30 e0       	ldi	r19, 0x00	; 0
    1e4a:	40 e8       	ldi	r20, 0x80	; 128
    1e4c:	5f e3       	ldi	r21, 0x3F	; 63
    1e4e:	fc 01       	movw	r30, r24
    1e50:	60 81       	ld	r22, Z
    1e52:	71 81       	ldd	r23, Z+1	; 0x01
    1e54:	82 81       	ldd	r24, Z+2	; 0x02
    1e56:	93 81       	ldd	r25, Z+3	; 0x03
    1e58:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    1e5c:	88 23       	and	r24, r24
    1e5e:	4c f4       	brge	.+18     	; 0x1e72 <__stack+0xd73>
		__ticks = 1;
    1e60:	ce 01       	movw	r24, r28
    1e62:	87 52       	subi	r24, 0x27	; 39
    1e64:	9f 4f       	sbci	r25, 0xFF	; 255
    1e66:	21 e0       	ldi	r18, 0x01	; 1
    1e68:	30 e0       	ldi	r19, 0x00	; 0
    1e6a:	fc 01       	movw	r30, r24
    1e6c:	31 83       	std	Z+1, r19	; 0x01
    1e6e:	20 83       	st	Z, r18
    1e70:	6d c0       	rjmp	.+218    	; 0x1f4c <__stack+0xe4d>
	else if (__tmp > 65535)
    1e72:	ce 01       	movw	r24, r28
    1e74:	8b 52       	subi	r24, 0x2B	; 43
    1e76:	9f 4f       	sbci	r25, 0xFF	; 255
    1e78:	20 e0       	ldi	r18, 0x00	; 0
    1e7a:	3f ef       	ldi	r19, 0xFF	; 255
    1e7c:	4f e7       	ldi	r20, 0x7F	; 127
    1e7e:	57 e4       	ldi	r21, 0x47	; 71
    1e80:	fc 01       	movw	r30, r24
    1e82:	60 81       	ld	r22, Z
    1e84:	71 81       	ldd	r23, Z+1	; 0x01
    1e86:	82 81       	ldd	r24, Z+2	; 0x02
    1e88:	93 81       	ldd	r25, Z+3	; 0x03
    1e8a:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    1e8e:	18 16       	cp	r1, r24
    1e90:	0c f0       	brlt	.+2      	; 0x1e94 <__stack+0xd95>
    1e92:	4a c0       	rjmp	.+148    	; 0x1f28 <__stack+0xe29>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e94:	ce 01       	movw	r24, r28
    1e96:	87 5b       	subi	r24, 0xB7	; 183
    1e98:	9f 4f       	sbci	r25, 0xFF	; 255
    1e9a:	20 e0       	ldi	r18, 0x00	; 0
    1e9c:	30 e0       	ldi	r19, 0x00	; 0
    1e9e:	40 e2       	ldi	r20, 0x20	; 32
    1ea0:	51 e4       	ldi	r21, 0x41	; 65
    1ea2:	fc 01       	movw	r30, r24
    1ea4:	60 81       	ld	r22, Z
    1ea6:	71 81       	ldd	r23, Z+1	; 0x01
    1ea8:	82 81       	ldd	r24, Z+2	; 0x02
    1eaa:	93 81       	ldd	r25, Z+3	; 0x03
    1eac:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    1eb0:	dc 01       	movw	r26, r24
    1eb2:	cb 01       	movw	r24, r22
    1eb4:	8e 01       	movw	r16, r28
    1eb6:	07 52       	subi	r16, 0x27	; 39
    1eb8:	1f 4f       	sbci	r17, 0xFF	; 255
    1eba:	bc 01       	movw	r22, r24
    1ebc:	cd 01       	movw	r24, r26
    1ebe:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    1ec2:	dc 01       	movw	r26, r24
    1ec4:	cb 01       	movw	r24, r22
    1ec6:	f8 01       	movw	r30, r16
    1ec8:	91 83       	std	Z+1, r25	; 0x01
    1eca:	80 83       	st	Z, r24
    1ecc:	24 c0       	rjmp	.+72     	; 0x1f16 <__stack+0xe17>
    1ece:	ce 01       	movw	r24, r28
    1ed0:	85 52       	subi	r24, 0x25	; 37
    1ed2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ed4:	20 e9       	ldi	r18, 0x90	; 144
    1ed6:	31 e0       	ldi	r19, 0x01	; 1
    1ed8:	fc 01       	movw	r30, r24
    1eda:	31 83       	std	Z+1, r19	; 0x01
    1edc:	20 83       	st	Z, r18
    1ede:	ce 01       	movw	r24, r28
    1ee0:	85 52       	subi	r24, 0x25	; 37
    1ee2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ee4:	fc 01       	movw	r30, r24
    1ee6:	80 81       	ld	r24, Z
    1ee8:	91 81       	ldd	r25, Z+1	; 0x01
    1eea:	01 97       	sbiw	r24, 0x01	; 1
    1eec:	f1 f7       	brne	.-4      	; 0x1eea <__stack+0xdeb>
    1eee:	9e 01       	movw	r18, r28
    1ef0:	25 52       	subi	r18, 0x25	; 37
    1ef2:	3f 4f       	sbci	r19, 0xFF	; 255
    1ef4:	f9 01       	movw	r30, r18
    1ef6:	91 83       	std	Z+1, r25	; 0x01
    1ef8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1efa:	ce 01       	movw	r24, r28
    1efc:	87 52       	subi	r24, 0x27	; 39
    1efe:	9f 4f       	sbci	r25, 0xFF	; 255
    1f00:	9e 01       	movw	r18, r28
    1f02:	27 52       	subi	r18, 0x27	; 39
    1f04:	3f 4f       	sbci	r19, 0xFF	; 255
    1f06:	f9 01       	movw	r30, r18
    1f08:	20 81       	ld	r18, Z
    1f0a:	31 81       	ldd	r19, Z+1	; 0x01
    1f0c:	21 50       	subi	r18, 0x01	; 1
    1f0e:	31 09       	sbc	r19, r1
    1f10:	fc 01       	movw	r30, r24
    1f12:	31 83       	std	Z+1, r19	; 0x01
    1f14:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f16:	ce 01       	movw	r24, r28
    1f18:	87 52       	subi	r24, 0x27	; 39
    1f1a:	9f 4f       	sbci	r25, 0xFF	; 255
    1f1c:	fc 01       	movw	r30, r24
    1f1e:	80 81       	ld	r24, Z
    1f20:	91 81       	ldd	r25, Z+1	; 0x01
    1f22:	89 2b       	or	r24, r25
    1f24:	a1 f6       	brne	.-88     	; 0x1ece <__stack+0xdcf>
    1f26:	2c c0       	rjmp	.+88     	; 0x1f80 <__stack+0xe81>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f28:	8e 01       	movw	r16, r28
    1f2a:	07 52       	subi	r16, 0x27	; 39
    1f2c:	1f 4f       	sbci	r17, 0xFF	; 255
    1f2e:	ce 01       	movw	r24, r28
    1f30:	8b 52       	subi	r24, 0x2B	; 43
    1f32:	9f 4f       	sbci	r25, 0xFF	; 255
    1f34:	fc 01       	movw	r30, r24
    1f36:	60 81       	ld	r22, Z
    1f38:	71 81       	ldd	r23, Z+1	; 0x01
    1f3a:	82 81       	ldd	r24, Z+2	; 0x02
    1f3c:	93 81       	ldd	r25, Z+3	; 0x03
    1f3e:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    1f42:	dc 01       	movw	r26, r24
    1f44:	cb 01       	movw	r24, r22
    1f46:	f8 01       	movw	r30, r16
    1f48:	91 83       	std	Z+1, r25	; 0x01
    1f4a:	80 83       	st	Z, r24
    1f4c:	ce 01       	movw	r24, r28
    1f4e:	83 52       	subi	r24, 0x23	; 35
    1f50:	9f 4f       	sbci	r25, 0xFF	; 255
    1f52:	9e 01       	movw	r18, r28
    1f54:	27 52       	subi	r18, 0x27	; 39
    1f56:	3f 4f       	sbci	r19, 0xFF	; 255
    1f58:	f9 01       	movw	r30, r18
    1f5a:	20 81       	ld	r18, Z
    1f5c:	31 81       	ldd	r19, Z+1	; 0x01
    1f5e:	fc 01       	movw	r30, r24
    1f60:	31 83       	std	Z+1, r19	; 0x01
    1f62:	20 83       	st	Z, r18
    1f64:	ce 01       	movw	r24, r28
    1f66:	83 52       	subi	r24, 0x23	; 35
    1f68:	9f 4f       	sbci	r25, 0xFF	; 255
    1f6a:	fc 01       	movw	r30, r24
    1f6c:	80 81       	ld	r24, Z
    1f6e:	91 81       	ldd	r25, Z+1	; 0x01
    1f70:	01 97       	sbiw	r24, 0x01	; 1
    1f72:	f1 f7       	brne	.-4      	; 0x1f70 <__stack+0xe71>
    1f74:	9e 01       	movw	r18, r28
    1f76:	23 52       	subi	r18, 0x23	; 35
    1f78:	3f 4f       	sbci	r19, 0xFF	; 255
    1f7a:	f9 01       	movw	r30, r18
    1f7c:	91 83       	std	Z+1, r25	; 0x01
    1f7e:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F760 T50\n");
    1f80:	8b e3       	ldi	r24, 0x3B	; 59
    1f82:	92 e0       	ldi	r25, 0x02	; 2
    1f84:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    1f88:	9e 01       	movw	r18, r28
    1f8a:	23 5b       	subi	r18, 0xB3	; 179
    1f8c:	3f 4f       	sbci	r19, 0xFF	; 255
    1f8e:	80 e0       	ldi	r24, 0x00	; 0
    1f90:	90 e0       	ldi	r25, 0x00	; 0
    1f92:	a6 e1       	ldi	r26, 0x16	; 22
    1f94:	b3 e4       	ldi	r27, 0x43	; 67
    1f96:	f9 01       	movw	r30, r18
    1f98:	80 83       	st	Z, r24
    1f9a:	91 83       	std	Z+1, r25	; 0x01
    1f9c:	a2 83       	std	Z+2, r26	; 0x02
    1f9e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1fa0:	8e 01       	movw	r16, r28
    1fa2:	05 53       	subi	r16, 0x35	; 53
    1fa4:	1f 4f       	sbci	r17, 0xFF	; 255
    1fa6:	ce 01       	movw	r24, r28
    1fa8:	83 5b       	subi	r24, 0xB3	; 179
    1faa:	9f 4f       	sbci	r25, 0xFF	; 255
    1fac:	20 e0       	ldi	r18, 0x00	; 0
    1fae:	30 e0       	ldi	r19, 0x00	; 0
    1fb0:	4a e7       	ldi	r20, 0x7A	; 122
    1fb2:	55 e4       	ldi	r21, 0x45	; 69
    1fb4:	fc 01       	movw	r30, r24
    1fb6:	60 81       	ld	r22, Z
    1fb8:	71 81       	ldd	r23, Z+1	; 0x01
    1fba:	82 81       	ldd	r24, Z+2	; 0x02
    1fbc:	93 81       	ldd	r25, Z+3	; 0x03
    1fbe:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    1fc2:	dc 01       	movw	r26, r24
    1fc4:	cb 01       	movw	r24, r22
    1fc6:	f8 01       	movw	r30, r16
    1fc8:	80 83       	st	Z, r24
    1fca:	91 83       	std	Z+1, r25	; 0x01
    1fcc:	a2 83       	std	Z+2, r26	; 0x02
    1fce:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1fd0:	ce 01       	movw	r24, r28
    1fd2:	85 53       	subi	r24, 0x35	; 53
    1fd4:	9f 4f       	sbci	r25, 0xFF	; 255
    1fd6:	20 e0       	ldi	r18, 0x00	; 0
    1fd8:	30 e0       	ldi	r19, 0x00	; 0
    1fda:	40 e8       	ldi	r20, 0x80	; 128
    1fdc:	5f e3       	ldi	r21, 0x3F	; 63
    1fde:	fc 01       	movw	r30, r24
    1fe0:	60 81       	ld	r22, Z
    1fe2:	71 81       	ldd	r23, Z+1	; 0x01
    1fe4:	82 81       	ldd	r24, Z+2	; 0x02
    1fe6:	93 81       	ldd	r25, Z+3	; 0x03
    1fe8:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    1fec:	88 23       	and	r24, r24
    1fee:	4c f4       	brge	.+18     	; 0x2002 <__stack+0xf03>
		__ticks = 1;
    1ff0:	ce 01       	movw	r24, r28
    1ff2:	81 53       	subi	r24, 0x31	; 49
    1ff4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ff6:	21 e0       	ldi	r18, 0x01	; 1
    1ff8:	30 e0       	ldi	r19, 0x00	; 0
    1ffa:	fc 01       	movw	r30, r24
    1ffc:	31 83       	std	Z+1, r19	; 0x01
    1ffe:	20 83       	st	Z, r18
    2000:	6d c0       	rjmp	.+218    	; 0x20dc <__stack+0xfdd>
	else if (__tmp > 65535)
    2002:	ce 01       	movw	r24, r28
    2004:	85 53       	subi	r24, 0x35	; 53
    2006:	9f 4f       	sbci	r25, 0xFF	; 255
    2008:	20 e0       	ldi	r18, 0x00	; 0
    200a:	3f ef       	ldi	r19, 0xFF	; 255
    200c:	4f e7       	ldi	r20, 0x7F	; 127
    200e:	57 e4       	ldi	r21, 0x47	; 71
    2010:	fc 01       	movw	r30, r24
    2012:	60 81       	ld	r22, Z
    2014:	71 81       	ldd	r23, Z+1	; 0x01
    2016:	82 81       	ldd	r24, Z+2	; 0x02
    2018:	93 81       	ldd	r25, Z+3	; 0x03
    201a:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    201e:	18 16       	cp	r1, r24
    2020:	0c f0       	brlt	.+2      	; 0x2024 <__stack+0xf25>
    2022:	4a c0       	rjmp	.+148    	; 0x20b8 <__stack+0xfb9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2024:	ce 01       	movw	r24, r28
    2026:	83 5b       	subi	r24, 0xB3	; 179
    2028:	9f 4f       	sbci	r25, 0xFF	; 255
    202a:	20 e0       	ldi	r18, 0x00	; 0
    202c:	30 e0       	ldi	r19, 0x00	; 0
    202e:	40 e2       	ldi	r20, 0x20	; 32
    2030:	51 e4       	ldi	r21, 0x41	; 65
    2032:	fc 01       	movw	r30, r24
    2034:	60 81       	ld	r22, Z
    2036:	71 81       	ldd	r23, Z+1	; 0x01
    2038:	82 81       	ldd	r24, Z+2	; 0x02
    203a:	93 81       	ldd	r25, Z+3	; 0x03
    203c:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    2040:	dc 01       	movw	r26, r24
    2042:	cb 01       	movw	r24, r22
    2044:	8e 01       	movw	r16, r28
    2046:	01 53       	subi	r16, 0x31	; 49
    2048:	1f 4f       	sbci	r17, 0xFF	; 255
    204a:	bc 01       	movw	r22, r24
    204c:	cd 01       	movw	r24, r26
    204e:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    2052:	dc 01       	movw	r26, r24
    2054:	cb 01       	movw	r24, r22
    2056:	f8 01       	movw	r30, r16
    2058:	91 83       	std	Z+1, r25	; 0x01
    205a:	80 83       	st	Z, r24
    205c:	24 c0       	rjmp	.+72     	; 0x20a6 <__stack+0xfa7>
    205e:	ce 01       	movw	r24, r28
    2060:	8f 52       	subi	r24, 0x2F	; 47
    2062:	9f 4f       	sbci	r25, 0xFF	; 255
    2064:	20 e9       	ldi	r18, 0x90	; 144
    2066:	31 e0       	ldi	r19, 0x01	; 1
    2068:	fc 01       	movw	r30, r24
    206a:	31 83       	std	Z+1, r19	; 0x01
    206c:	20 83       	st	Z, r18
    206e:	ce 01       	movw	r24, r28
    2070:	8f 52       	subi	r24, 0x2F	; 47
    2072:	9f 4f       	sbci	r25, 0xFF	; 255
    2074:	fc 01       	movw	r30, r24
    2076:	80 81       	ld	r24, Z
    2078:	91 81       	ldd	r25, Z+1	; 0x01
    207a:	01 97       	sbiw	r24, 0x01	; 1
    207c:	f1 f7       	brne	.-4      	; 0x207a <__stack+0xf7b>
    207e:	9e 01       	movw	r18, r28
    2080:	2f 52       	subi	r18, 0x2F	; 47
    2082:	3f 4f       	sbci	r19, 0xFF	; 255
    2084:	f9 01       	movw	r30, r18
    2086:	91 83       	std	Z+1, r25	; 0x01
    2088:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    208a:	ce 01       	movw	r24, r28
    208c:	81 53       	subi	r24, 0x31	; 49
    208e:	9f 4f       	sbci	r25, 0xFF	; 255
    2090:	9e 01       	movw	r18, r28
    2092:	21 53       	subi	r18, 0x31	; 49
    2094:	3f 4f       	sbci	r19, 0xFF	; 255
    2096:	f9 01       	movw	r30, r18
    2098:	20 81       	ld	r18, Z
    209a:	31 81       	ldd	r19, Z+1	; 0x01
    209c:	21 50       	subi	r18, 0x01	; 1
    209e:	31 09       	sbc	r19, r1
    20a0:	fc 01       	movw	r30, r24
    20a2:	31 83       	std	Z+1, r19	; 0x01
    20a4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20a6:	ce 01       	movw	r24, r28
    20a8:	81 53       	subi	r24, 0x31	; 49
    20aa:	9f 4f       	sbci	r25, 0xFF	; 255
    20ac:	fc 01       	movw	r30, r24
    20ae:	80 81       	ld	r24, Z
    20b0:	91 81       	ldd	r25, Z+1	; 0x01
    20b2:	89 2b       	or	r24, r25
    20b4:	a1 f6       	brne	.-88     	; 0x205e <__stack+0xf5f>
    20b6:	2c c0       	rjmp	.+88     	; 0x2110 <__stack+0x1011>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20b8:	8e 01       	movw	r16, r28
    20ba:	01 53       	subi	r16, 0x31	; 49
    20bc:	1f 4f       	sbci	r17, 0xFF	; 255
    20be:	ce 01       	movw	r24, r28
    20c0:	85 53       	subi	r24, 0x35	; 53
    20c2:	9f 4f       	sbci	r25, 0xFF	; 255
    20c4:	fc 01       	movw	r30, r24
    20c6:	60 81       	ld	r22, Z
    20c8:	71 81       	ldd	r23, Z+1	; 0x01
    20ca:	82 81       	ldd	r24, Z+2	; 0x02
    20cc:	93 81       	ldd	r25, Z+3	; 0x03
    20ce:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    20d2:	dc 01       	movw	r26, r24
    20d4:	cb 01       	movw	r24, r22
    20d6:	f8 01       	movw	r30, r16
    20d8:	91 83       	std	Z+1, r25	; 0x01
    20da:	80 83       	st	Z, r24
    20dc:	ce 01       	movw	r24, r28
    20de:	8d 52       	subi	r24, 0x2D	; 45
    20e0:	9f 4f       	sbci	r25, 0xFF	; 255
    20e2:	9e 01       	movw	r18, r28
    20e4:	21 53       	subi	r18, 0x31	; 49
    20e6:	3f 4f       	sbci	r19, 0xFF	; 255
    20e8:	f9 01       	movw	r30, r18
    20ea:	20 81       	ld	r18, Z
    20ec:	31 81       	ldd	r19, Z+1	; 0x01
    20ee:	fc 01       	movw	r30, r24
    20f0:	31 83       	std	Z+1, r19	; 0x01
    20f2:	20 83       	st	Z, r18
    20f4:	ce 01       	movw	r24, r28
    20f6:	8d 52       	subi	r24, 0x2D	; 45
    20f8:	9f 4f       	sbci	r25, 0xFF	; 255
    20fa:	fc 01       	movw	r30, r24
    20fc:	80 81       	ld	r24, Z
    20fe:	91 81       	ldd	r25, Z+1	; 0x01
    2100:	01 97       	sbiw	r24, 0x01	; 1
    2102:	f1 f7       	brne	.-4      	; 0x2100 <__stack+0x1001>
    2104:	9e 01       	movw	r18, r28
    2106:	2d 52       	subi	r18, 0x2D	; 45
    2108:	3f 4f       	sbci	r19, 0xFF	; 255
    210a:	f9 01       	movw	r30, r18
    210c:	91 83       	std	Z+1, r25	; 0x01
    210e:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F860 T100\n");
    2110:	8b e4       	ldi	r24, 0x4B	; 75
    2112:	92 e0       	ldi	r25, 0x02	; 2
    2114:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    2118:	9e 01       	movw	r18, r28
    211a:	2f 5a       	subi	r18, 0xAF	; 175
    211c:	3f 4f       	sbci	r19, 0xFF	; 255
    211e:	80 e0       	ldi	r24, 0x00	; 0
    2120:	90 e0       	ldi	r25, 0x00	; 0
    2122:	a6 e1       	ldi	r26, 0x16	; 22
    2124:	b3 e4       	ldi	r27, 0x43	; 67
    2126:	f9 01       	movw	r30, r18
    2128:	80 83       	st	Z, r24
    212a:	91 83       	std	Z+1, r25	; 0x01
    212c:	a2 83       	std	Z+2, r26	; 0x02
    212e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2130:	8e 01       	movw	r16, r28
    2132:	0f 53       	subi	r16, 0x3F	; 63
    2134:	1f 4f       	sbci	r17, 0xFF	; 255
    2136:	ce 01       	movw	r24, r28
    2138:	8f 5a       	subi	r24, 0xAF	; 175
    213a:	9f 4f       	sbci	r25, 0xFF	; 255
    213c:	20 e0       	ldi	r18, 0x00	; 0
    213e:	30 e0       	ldi	r19, 0x00	; 0
    2140:	4a e7       	ldi	r20, 0x7A	; 122
    2142:	55 e4       	ldi	r21, 0x45	; 69
    2144:	fc 01       	movw	r30, r24
    2146:	60 81       	ld	r22, Z
    2148:	71 81       	ldd	r23, Z+1	; 0x01
    214a:	82 81       	ldd	r24, Z+2	; 0x02
    214c:	93 81       	ldd	r25, Z+3	; 0x03
    214e:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    2152:	dc 01       	movw	r26, r24
    2154:	cb 01       	movw	r24, r22
    2156:	f8 01       	movw	r30, r16
    2158:	80 83       	st	Z, r24
    215a:	91 83       	std	Z+1, r25	; 0x01
    215c:	a2 83       	std	Z+2, r26	; 0x02
    215e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2160:	ce 01       	movw	r24, r28
    2162:	8f 53       	subi	r24, 0x3F	; 63
    2164:	9f 4f       	sbci	r25, 0xFF	; 255
    2166:	20 e0       	ldi	r18, 0x00	; 0
    2168:	30 e0       	ldi	r19, 0x00	; 0
    216a:	40 e8       	ldi	r20, 0x80	; 128
    216c:	5f e3       	ldi	r21, 0x3F	; 63
    216e:	fc 01       	movw	r30, r24
    2170:	60 81       	ld	r22, Z
    2172:	71 81       	ldd	r23, Z+1	; 0x01
    2174:	82 81       	ldd	r24, Z+2	; 0x02
    2176:	93 81       	ldd	r25, Z+3	; 0x03
    2178:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    217c:	88 23       	and	r24, r24
    217e:	4c f4       	brge	.+18     	; 0x2192 <__stack+0x1093>
		__ticks = 1;
    2180:	ce 01       	movw	r24, r28
    2182:	8b 53       	subi	r24, 0x3B	; 59
    2184:	9f 4f       	sbci	r25, 0xFF	; 255
    2186:	21 e0       	ldi	r18, 0x01	; 1
    2188:	30 e0       	ldi	r19, 0x00	; 0
    218a:	fc 01       	movw	r30, r24
    218c:	31 83       	std	Z+1, r19	; 0x01
    218e:	20 83       	st	Z, r18
    2190:	6d c0       	rjmp	.+218    	; 0x226c <__stack+0x116d>
	else if (__tmp > 65535)
    2192:	ce 01       	movw	r24, r28
    2194:	8f 53       	subi	r24, 0x3F	; 63
    2196:	9f 4f       	sbci	r25, 0xFF	; 255
    2198:	20 e0       	ldi	r18, 0x00	; 0
    219a:	3f ef       	ldi	r19, 0xFF	; 255
    219c:	4f e7       	ldi	r20, 0x7F	; 127
    219e:	57 e4       	ldi	r21, 0x47	; 71
    21a0:	fc 01       	movw	r30, r24
    21a2:	60 81       	ld	r22, Z
    21a4:	71 81       	ldd	r23, Z+1	; 0x01
    21a6:	82 81       	ldd	r24, Z+2	; 0x02
    21a8:	93 81       	ldd	r25, Z+3	; 0x03
    21aa:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    21ae:	18 16       	cp	r1, r24
    21b0:	0c f0       	brlt	.+2      	; 0x21b4 <__stack+0x10b5>
    21b2:	4a c0       	rjmp	.+148    	; 0x2248 <__stack+0x1149>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21b4:	ce 01       	movw	r24, r28
    21b6:	8f 5a       	subi	r24, 0xAF	; 175
    21b8:	9f 4f       	sbci	r25, 0xFF	; 255
    21ba:	20 e0       	ldi	r18, 0x00	; 0
    21bc:	30 e0       	ldi	r19, 0x00	; 0
    21be:	40 e2       	ldi	r20, 0x20	; 32
    21c0:	51 e4       	ldi	r21, 0x41	; 65
    21c2:	fc 01       	movw	r30, r24
    21c4:	60 81       	ld	r22, Z
    21c6:	71 81       	ldd	r23, Z+1	; 0x01
    21c8:	82 81       	ldd	r24, Z+2	; 0x02
    21ca:	93 81       	ldd	r25, Z+3	; 0x03
    21cc:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    21d0:	dc 01       	movw	r26, r24
    21d2:	cb 01       	movw	r24, r22
    21d4:	8e 01       	movw	r16, r28
    21d6:	0b 53       	subi	r16, 0x3B	; 59
    21d8:	1f 4f       	sbci	r17, 0xFF	; 255
    21da:	bc 01       	movw	r22, r24
    21dc:	cd 01       	movw	r24, r26
    21de:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    21e2:	dc 01       	movw	r26, r24
    21e4:	cb 01       	movw	r24, r22
    21e6:	f8 01       	movw	r30, r16
    21e8:	91 83       	std	Z+1, r25	; 0x01
    21ea:	80 83       	st	Z, r24
    21ec:	24 c0       	rjmp	.+72     	; 0x2236 <__stack+0x1137>
    21ee:	ce 01       	movw	r24, r28
    21f0:	89 53       	subi	r24, 0x39	; 57
    21f2:	9f 4f       	sbci	r25, 0xFF	; 255
    21f4:	20 e9       	ldi	r18, 0x90	; 144
    21f6:	31 e0       	ldi	r19, 0x01	; 1
    21f8:	fc 01       	movw	r30, r24
    21fa:	31 83       	std	Z+1, r19	; 0x01
    21fc:	20 83       	st	Z, r18
    21fe:	ce 01       	movw	r24, r28
    2200:	89 53       	subi	r24, 0x39	; 57
    2202:	9f 4f       	sbci	r25, 0xFF	; 255
    2204:	fc 01       	movw	r30, r24
    2206:	80 81       	ld	r24, Z
    2208:	91 81       	ldd	r25, Z+1	; 0x01
    220a:	01 97       	sbiw	r24, 0x01	; 1
    220c:	f1 f7       	brne	.-4      	; 0x220a <__stack+0x110b>
    220e:	9e 01       	movw	r18, r28
    2210:	29 53       	subi	r18, 0x39	; 57
    2212:	3f 4f       	sbci	r19, 0xFF	; 255
    2214:	f9 01       	movw	r30, r18
    2216:	91 83       	std	Z+1, r25	; 0x01
    2218:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    221a:	ce 01       	movw	r24, r28
    221c:	8b 53       	subi	r24, 0x3B	; 59
    221e:	9f 4f       	sbci	r25, 0xFF	; 255
    2220:	9e 01       	movw	r18, r28
    2222:	2b 53       	subi	r18, 0x3B	; 59
    2224:	3f 4f       	sbci	r19, 0xFF	; 255
    2226:	f9 01       	movw	r30, r18
    2228:	20 81       	ld	r18, Z
    222a:	31 81       	ldd	r19, Z+1	; 0x01
    222c:	21 50       	subi	r18, 0x01	; 1
    222e:	31 09       	sbc	r19, r1
    2230:	fc 01       	movw	r30, r24
    2232:	31 83       	std	Z+1, r19	; 0x01
    2234:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2236:	ce 01       	movw	r24, r28
    2238:	8b 53       	subi	r24, 0x3B	; 59
    223a:	9f 4f       	sbci	r25, 0xFF	; 255
    223c:	fc 01       	movw	r30, r24
    223e:	80 81       	ld	r24, Z
    2240:	91 81       	ldd	r25, Z+1	; 0x01
    2242:	89 2b       	or	r24, r25
    2244:	a1 f6       	brne	.-88     	; 0x21ee <__stack+0x10ef>
    2246:	2c c0       	rjmp	.+88     	; 0x22a0 <__stack+0x11a1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2248:	8e 01       	movw	r16, r28
    224a:	0b 53       	subi	r16, 0x3B	; 59
    224c:	1f 4f       	sbci	r17, 0xFF	; 255
    224e:	ce 01       	movw	r24, r28
    2250:	8f 53       	subi	r24, 0x3F	; 63
    2252:	9f 4f       	sbci	r25, 0xFF	; 255
    2254:	fc 01       	movw	r30, r24
    2256:	60 81       	ld	r22, Z
    2258:	71 81       	ldd	r23, Z+1	; 0x01
    225a:	82 81       	ldd	r24, Z+2	; 0x02
    225c:	93 81       	ldd	r25, Z+3	; 0x03
    225e:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    2262:	dc 01       	movw	r26, r24
    2264:	cb 01       	movw	r24, r22
    2266:	f8 01       	movw	r30, r16
    2268:	91 83       	std	Z+1, r25	; 0x01
    226a:	80 83       	st	Z, r24
    226c:	ce 01       	movw	r24, r28
    226e:	87 53       	subi	r24, 0x37	; 55
    2270:	9f 4f       	sbci	r25, 0xFF	; 255
    2272:	9e 01       	movw	r18, r28
    2274:	2b 53       	subi	r18, 0x3B	; 59
    2276:	3f 4f       	sbci	r19, 0xFF	; 255
    2278:	f9 01       	movw	r30, r18
    227a:	20 81       	ld	r18, Z
    227c:	31 81       	ldd	r19, Z+1	; 0x01
    227e:	fc 01       	movw	r30, r24
    2280:	31 83       	std	Z+1, r19	; 0x01
    2282:	20 83       	st	Z, r18
    2284:	ce 01       	movw	r24, r28
    2286:	87 53       	subi	r24, 0x37	; 55
    2288:	9f 4f       	sbci	r25, 0xFF	; 255
    228a:	fc 01       	movw	r30, r24
    228c:	80 81       	ld	r24, Z
    228e:	91 81       	ldd	r25, Z+1	; 0x01
    2290:	01 97       	sbiw	r24, 0x01	; 1
    2292:	f1 f7       	brne	.-4      	; 0x2290 <__stack+0x1191>
    2294:	9e 01       	movw	r18, r28
    2296:	27 53       	subi	r18, 0x37	; 55
    2298:	3f 4f       	sbci	r19, 0xFF	; 255
    229a:	f9 01       	movw	r30, r18
    229c:	91 83       	std	Z+1, r25	; 0x01
    229e:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F700 T80\n");
    22a0:	8c e5       	ldi	r24, 0x5C	; 92
    22a2:	92 e0       	ldi	r25, 0x02	; 2
    22a4:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    22a8:	9e 01       	movw	r18, r28
    22aa:	2b 5a       	subi	r18, 0xAB	; 171
    22ac:	3f 4f       	sbci	r19, 0xFF	; 255
    22ae:	80 e0       	ldi	r24, 0x00	; 0
    22b0:	90 e0       	ldi	r25, 0x00	; 0
    22b2:	a6 e1       	ldi	r26, 0x16	; 22
    22b4:	b3 e4       	ldi	r27, 0x43	; 67
    22b6:	f9 01       	movw	r30, r18
    22b8:	80 83       	st	Z, r24
    22ba:	91 83       	std	Z+1, r25	; 0x01
    22bc:	a2 83       	std	Z+2, r26	; 0x02
    22be:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    22c0:	8e 01       	movw	r16, r28
    22c2:	09 54       	subi	r16, 0x49	; 73
    22c4:	1f 4f       	sbci	r17, 0xFF	; 255
    22c6:	ce 01       	movw	r24, r28
    22c8:	8b 5a       	subi	r24, 0xAB	; 171
    22ca:	9f 4f       	sbci	r25, 0xFF	; 255
    22cc:	20 e0       	ldi	r18, 0x00	; 0
    22ce:	30 e0       	ldi	r19, 0x00	; 0
    22d0:	4a e7       	ldi	r20, 0x7A	; 122
    22d2:	55 e4       	ldi	r21, 0x45	; 69
    22d4:	fc 01       	movw	r30, r24
    22d6:	60 81       	ld	r22, Z
    22d8:	71 81       	ldd	r23, Z+1	; 0x01
    22da:	82 81       	ldd	r24, Z+2	; 0x02
    22dc:	93 81       	ldd	r25, Z+3	; 0x03
    22de:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    22e2:	dc 01       	movw	r26, r24
    22e4:	cb 01       	movw	r24, r22
    22e6:	f8 01       	movw	r30, r16
    22e8:	80 83       	st	Z, r24
    22ea:	91 83       	std	Z+1, r25	; 0x01
    22ec:	a2 83       	std	Z+2, r26	; 0x02
    22ee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    22f0:	ce 01       	movw	r24, r28
    22f2:	89 54       	subi	r24, 0x49	; 73
    22f4:	9f 4f       	sbci	r25, 0xFF	; 255
    22f6:	20 e0       	ldi	r18, 0x00	; 0
    22f8:	30 e0       	ldi	r19, 0x00	; 0
    22fa:	40 e8       	ldi	r20, 0x80	; 128
    22fc:	5f e3       	ldi	r21, 0x3F	; 63
    22fe:	fc 01       	movw	r30, r24
    2300:	60 81       	ld	r22, Z
    2302:	71 81       	ldd	r23, Z+1	; 0x01
    2304:	82 81       	ldd	r24, Z+2	; 0x02
    2306:	93 81       	ldd	r25, Z+3	; 0x03
    2308:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    230c:	88 23       	and	r24, r24
    230e:	4c f4       	brge	.+18     	; 0x2322 <__stack+0x1223>
		__ticks = 1;
    2310:	ce 01       	movw	r24, r28
    2312:	85 54       	subi	r24, 0x45	; 69
    2314:	9f 4f       	sbci	r25, 0xFF	; 255
    2316:	21 e0       	ldi	r18, 0x01	; 1
    2318:	30 e0       	ldi	r19, 0x00	; 0
    231a:	fc 01       	movw	r30, r24
    231c:	31 83       	std	Z+1, r19	; 0x01
    231e:	20 83       	st	Z, r18
    2320:	6d c0       	rjmp	.+218    	; 0x23fc <__stack+0x12fd>
	else if (__tmp > 65535)
    2322:	ce 01       	movw	r24, r28
    2324:	89 54       	subi	r24, 0x49	; 73
    2326:	9f 4f       	sbci	r25, 0xFF	; 255
    2328:	20 e0       	ldi	r18, 0x00	; 0
    232a:	3f ef       	ldi	r19, 0xFF	; 255
    232c:	4f e7       	ldi	r20, 0x7F	; 127
    232e:	57 e4       	ldi	r21, 0x47	; 71
    2330:	fc 01       	movw	r30, r24
    2332:	60 81       	ld	r22, Z
    2334:	71 81       	ldd	r23, Z+1	; 0x01
    2336:	82 81       	ldd	r24, Z+2	; 0x02
    2338:	93 81       	ldd	r25, Z+3	; 0x03
    233a:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    233e:	18 16       	cp	r1, r24
    2340:	0c f0       	brlt	.+2      	; 0x2344 <__stack+0x1245>
    2342:	4a c0       	rjmp	.+148    	; 0x23d8 <__stack+0x12d9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2344:	ce 01       	movw	r24, r28
    2346:	8b 5a       	subi	r24, 0xAB	; 171
    2348:	9f 4f       	sbci	r25, 0xFF	; 255
    234a:	20 e0       	ldi	r18, 0x00	; 0
    234c:	30 e0       	ldi	r19, 0x00	; 0
    234e:	40 e2       	ldi	r20, 0x20	; 32
    2350:	51 e4       	ldi	r21, 0x41	; 65
    2352:	fc 01       	movw	r30, r24
    2354:	60 81       	ld	r22, Z
    2356:	71 81       	ldd	r23, Z+1	; 0x01
    2358:	82 81       	ldd	r24, Z+2	; 0x02
    235a:	93 81       	ldd	r25, Z+3	; 0x03
    235c:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    2360:	dc 01       	movw	r26, r24
    2362:	cb 01       	movw	r24, r22
    2364:	8e 01       	movw	r16, r28
    2366:	05 54       	subi	r16, 0x45	; 69
    2368:	1f 4f       	sbci	r17, 0xFF	; 255
    236a:	bc 01       	movw	r22, r24
    236c:	cd 01       	movw	r24, r26
    236e:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    2372:	dc 01       	movw	r26, r24
    2374:	cb 01       	movw	r24, r22
    2376:	f8 01       	movw	r30, r16
    2378:	91 83       	std	Z+1, r25	; 0x01
    237a:	80 83       	st	Z, r24
    237c:	24 c0       	rjmp	.+72     	; 0x23c6 <__stack+0x12c7>
    237e:	ce 01       	movw	r24, r28
    2380:	83 54       	subi	r24, 0x43	; 67
    2382:	9f 4f       	sbci	r25, 0xFF	; 255
    2384:	20 e9       	ldi	r18, 0x90	; 144
    2386:	31 e0       	ldi	r19, 0x01	; 1
    2388:	fc 01       	movw	r30, r24
    238a:	31 83       	std	Z+1, r19	; 0x01
    238c:	20 83       	st	Z, r18
    238e:	ce 01       	movw	r24, r28
    2390:	83 54       	subi	r24, 0x43	; 67
    2392:	9f 4f       	sbci	r25, 0xFF	; 255
    2394:	fc 01       	movw	r30, r24
    2396:	80 81       	ld	r24, Z
    2398:	91 81       	ldd	r25, Z+1	; 0x01
    239a:	01 97       	sbiw	r24, 0x01	; 1
    239c:	f1 f7       	brne	.-4      	; 0x239a <__stack+0x129b>
    239e:	9e 01       	movw	r18, r28
    23a0:	23 54       	subi	r18, 0x43	; 67
    23a2:	3f 4f       	sbci	r19, 0xFF	; 255
    23a4:	f9 01       	movw	r30, r18
    23a6:	91 83       	std	Z+1, r25	; 0x01
    23a8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23aa:	ce 01       	movw	r24, r28
    23ac:	85 54       	subi	r24, 0x45	; 69
    23ae:	9f 4f       	sbci	r25, 0xFF	; 255
    23b0:	9e 01       	movw	r18, r28
    23b2:	25 54       	subi	r18, 0x45	; 69
    23b4:	3f 4f       	sbci	r19, 0xFF	; 255
    23b6:	f9 01       	movw	r30, r18
    23b8:	20 81       	ld	r18, Z
    23ba:	31 81       	ldd	r19, Z+1	; 0x01
    23bc:	21 50       	subi	r18, 0x01	; 1
    23be:	31 09       	sbc	r19, r1
    23c0:	fc 01       	movw	r30, r24
    23c2:	31 83       	std	Z+1, r19	; 0x01
    23c4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23c6:	ce 01       	movw	r24, r28
    23c8:	85 54       	subi	r24, 0x45	; 69
    23ca:	9f 4f       	sbci	r25, 0xFF	; 255
    23cc:	fc 01       	movw	r30, r24
    23ce:	80 81       	ld	r24, Z
    23d0:	91 81       	ldd	r25, Z+1	; 0x01
    23d2:	89 2b       	or	r24, r25
    23d4:	a1 f6       	brne	.-88     	; 0x237e <__stack+0x127f>
    23d6:	2c c0       	rjmp	.+88     	; 0x2430 <__stack+0x1331>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23d8:	8e 01       	movw	r16, r28
    23da:	05 54       	subi	r16, 0x45	; 69
    23dc:	1f 4f       	sbci	r17, 0xFF	; 255
    23de:	ce 01       	movw	r24, r28
    23e0:	89 54       	subi	r24, 0x49	; 73
    23e2:	9f 4f       	sbci	r25, 0xFF	; 255
    23e4:	fc 01       	movw	r30, r24
    23e6:	60 81       	ld	r22, Z
    23e8:	71 81       	ldd	r23, Z+1	; 0x01
    23ea:	82 81       	ldd	r24, Z+2	; 0x02
    23ec:	93 81       	ldd	r25, Z+3	; 0x03
    23ee:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    23f2:	dc 01       	movw	r26, r24
    23f4:	cb 01       	movw	r24, r22
    23f6:	f8 01       	movw	r30, r16
    23f8:	91 83       	std	Z+1, r25	; 0x01
    23fa:	80 83       	st	Z, r24
    23fc:	ce 01       	movw	r24, r28
    23fe:	81 54       	subi	r24, 0x41	; 65
    2400:	9f 4f       	sbci	r25, 0xFF	; 255
    2402:	9e 01       	movw	r18, r28
    2404:	25 54       	subi	r18, 0x45	; 69
    2406:	3f 4f       	sbci	r19, 0xFF	; 255
    2408:	f9 01       	movw	r30, r18
    240a:	20 81       	ld	r18, Z
    240c:	31 81       	ldd	r19, Z+1	; 0x01
    240e:	fc 01       	movw	r30, r24
    2410:	31 83       	std	Z+1, r19	; 0x01
    2412:	20 83       	st	Z, r18
    2414:	ce 01       	movw	r24, r28
    2416:	81 54       	subi	r24, 0x41	; 65
    2418:	9f 4f       	sbci	r25, 0xFF	; 255
    241a:	fc 01       	movw	r30, r24
    241c:	80 81       	ld	r24, Z
    241e:	91 81       	ldd	r25, Z+1	; 0x01
    2420:	01 97       	sbiw	r24, 0x01	; 1
    2422:	f1 f7       	brne	.-4      	; 0x2420 <__stack+0x1321>
    2424:	9e 01       	movw	r18, r28
    2426:	21 54       	subi	r18, 0x41	; 65
    2428:	3f 4f       	sbci	r19, 0xFF	; 255
    242a:	f9 01       	movw	r30, r18
    242c:	91 83       	std	Z+1, r25	; 0x01
    242e:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F760 T50\n");
    2430:	8b e3       	ldi	r24, 0x3B	; 59
    2432:	92 e0       	ldi	r25, 0x02	; 2
    2434:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    2438:	9e 01       	movw	r18, r28
    243a:	27 5a       	subi	r18, 0xA7	; 167
    243c:	3f 4f       	sbci	r19, 0xFF	; 255
    243e:	80 e0       	ldi	r24, 0x00	; 0
    2440:	90 e0       	ldi	r25, 0x00	; 0
    2442:	a6 e1       	ldi	r26, 0x16	; 22
    2444:	b3 e4       	ldi	r27, 0x43	; 67
    2446:	f9 01       	movw	r30, r18
    2448:	80 83       	st	Z, r24
    244a:	91 83       	std	Z+1, r25	; 0x01
    244c:	a2 83       	std	Z+2, r26	; 0x02
    244e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2450:	8e 01       	movw	r16, r28
    2452:	03 55       	subi	r16, 0x53	; 83
    2454:	1f 4f       	sbci	r17, 0xFF	; 255
    2456:	ce 01       	movw	r24, r28
    2458:	87 5a       	subi	r24, 0xA7	; 167
    245a:	9f 4f       	sbci	r25, 0xFF	; 255
    245c:	20 e0       	ldi	r18, 0x00	; 0
    245e:	30 e0       	ldi	r19, 0x00	; 0
    2460:	4a e7       	ldi	r20, 0x7A	; 122
    2462:	55 e4       	ldi	r21, 0x45	; 69
    2464:	fc 01       	movw	r30, r24
    2466:	60 81       	ld	r22, Z
    2468:	71 81       	ldd	r23, Z+1	; 0x01
    246a:	82 81       	ldd	r24, Z+2	; 0x02
    246c:	93 81       	ldd	r25, Z+3	; 0x03
    246e:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    2472:	dc 01       	movw	r26, r24
    2474:	cb 01       	movw	r24, r22
    2476:	f8 01       	movw	r30, r16
    2478:	80 83       	st	Z, r24
    247a:	91 83       	std	Z+1, r25	; 0x01
    247c:	a2 83       	std	Z+2, r26	; 0x02
    247e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2480:	ce 01       	movw	r24, r28
    2482:	83 55       	subi	r24, 0x53	; 83
    2484:	9f 4f       	sbci	r25, 0xFF	; 255
    2486:	20 e0       	ldi	r18, 0x00	; 0
    2488:	30 e0       	ldi	r19, 0x00	; 0
    248a:	40 e8       	ldi	r20, 0x80	; 128
    248c:	5f e3       	ldi	r21, 0x3F	; 63
    248e:	fc 01       	movw	r30, r24
    2490:	60 81       	ld	r22, Z
    2492:	71 81       	ldd	r23, Z+1	; 0x01
    2494:	82 81       	ldd	r24, Z+2	; 0x02
    2496:	93 81       	ldd	r25, Z+3	; 0x03
    2498:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    249c:	88 23       	and	r24, r24
    249e:	4c f4       	brge	.+18     	; 0x24b2 <__stack+0x13b3>
		__ticks = 1;
    24a0:	ce 01       	movw	r24, r28
    24a2:	8f 54       	subi	r24, 0x4F	; 79
    24a4:	9f 4f       	sbci	r25, 0xFF	; 255
    24a6:	21 e0       	ldi	r18, 0x01	; 1
    24a8:	30 e0       	ldi	r19, 0x00	; 0
    24aa:	fc 01       	movw	r30, r24
    24ac:	31 83       	std	Z+1, r19	; 0x01
    24ae:	20 83       	st	Z, r18
    24b0:	6d c0       	rjmp	.+218    	; 0x258c <__stack+0x148d>
	else if (__tmp > 65535)
    24b2:	ce 01       	movw	r24, r28
    24b4:	83 55       	subi	r24, 0x53	; 83
    24b6:	9f 4f       	sbci	r25, 0xFF	; 255
    24b8:	20 e0       	ldi	r18, 0x00	; 0
    24ba:	3f ef       	ldi	r19, 0xFF	; 255
    24bc:	4f e7       	ldi	r20, 0x7F	; 127
    24be:	57 e4       	ldi	r21, 0x47	; 71
    24c0:	fc 01       	movw	r30, r24
    24c2:	60 81       	ld	r22, Z
    24c4:	71 81       	ldd	r23, Z+1	; 0x01
    24c6:	82 81       	ldd	r24, Z+2	; 0x02
    24c8:	93 81       	ldd	r25, Z+3	; 0x03
    24ca:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    24ce:	18 16       	cp	r1, r24
    24d0:	0c f0       	brlt	.+2      	; 0x24d4 <__stack+0x13d5>
    24d2:	4a c0       	rjmp	.+148    	; 0x2568 <__stack+0x1469>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24d4:	ce 01       	movw	r24, r28
    24d6:	87 5a       	subi	r24, 0xA7	; 167
    24d8:	9f 4f       	sbci	r25, 0xFF	; 255
    24da:	20 e0       	ldi	r18, 0x00	; 0
    24dc:	30 e0       	ldi	r19, 0x00	; 0
    24de:	40 e2       	ldi	r20, 0x20	; 32
    24e0:	51 e4       	ldi	r21, 0x41	; 65
    24e2:	fc 01       	movw	r30, r24
    24e4:	60 81       	ld	r22, Z
    24e6:	71 81       	ldd	r23, Z+1	; 0x01
    24e8:	82 81       	ldd	r24, Z+2	; 0x02
    24ea:	93 81       	ldd	r25, Z+3	; 0x03
    24ec:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    24f0:	dc 01       	movw	r26, r24
    24f2:	cb 01       	movw	r24, r22
    24f4:	8e 01       	movw	r16, r28
    24f6:	0f 54       	subi	r16, 0x4F	; 79
    24f8:	1f 4f       	sbci	r17, 0xFF	; 255
    24fa:	bc 01       	movw	r22, r24
    24fc:	cd 01       	movw	r24, r26
    24fe:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    2502:	dc 01       	movw	r26, r24
    2504:	cb 01       	movw	r24, r22
    2506:	f8 01       	movw	r30, r16
    2508:	91 83       	std	Z+1, r25	; 0x01
    250a:	80 83       	st	Z, r24
    250c:	24 c0       	rjmp	.+72     	; 0x2556 <__stack+0x1457>
    250e:	ce 01       	movw	r24, r28
    2510:	8d 54       	subi	r24, 0x4D	; 77
    2512:	9f 4f       	sbci	r25, 0xFF	; 255
    2514:	20 e9       	ldi	r18, 0x90	; 144
    2516:	31 e0       	ldi	r19, 0x01	; 1
    2518:	fc 01       	movw	r30, r24
    251a:	31 83       	std	Z+1, r19	; 0x01
    251c:	20 83       	st	Z, r18
    251e:	ce 01       	movw	r24, r28
    2520:	8d 54       	subi	r24, 0x4D	; 77
    2522:	9f 4f       	sbci	r25, 0xFF	; 255
    2524:	fc 01       	movw	r30, r24
    2526:	80 81       	ld	r24, Z
    2528:	91 81       	ldd	r25, Z+1	; 0x01
    252a:	01 97       	sbiw	r24, 0x01	; 1
    252c:	f1 f7       	brne	.-4      	; 0x252a <__stack+0x142b>
    252e:	9e 01       	movw	r18, r28
    2530:	2d 54       	subi	r18, 0x4D	; 77
    2532:	3f 4f       	sbci	r19, 0xFF	; 255
    2534:	f9 01       	movw	r30, r18
    2536:	91 83       	std	Z+1, r25	; 0x01
    2538:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    253a:	ce 01       	movw	r24, r28
    253c:	8f 54       	subi	r24, 0x4F	; 79
    253e:	9f 4f       	sbci	r25, 0xFF	; 255
    2540:	9e 01       	movw	r18, r28
    2542:	2f 54       	subi	r18, 0x4F	; 79
    2544:	3f 4f       	sbci	r19, 0xFF	; 255
    2546:	f9 01       	movw	r30, r18
    2548:	20 81       	ld	r18, Z
    254a:	31 81       	ldd	r19, Z+1	; 0x01
    254c:	21 50       	subi	r18, 0x01	; 1
    254e:	31 09       	sbc	r19, r1
    2550:	fc 01       	movw	r30, r24
    2552:	31 83       	std	Z+1, r19	; 0x01
    2554:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2556:	ce 01       	movw	r24, r28
    2558:	8f 54       	subi	r24, 0x4F	; 79
    255a:	9f 4f       	sbci	r25, 0xFF	; 255
    255c:	fc 01       	movw	r30, r24
    255e:	80 81       	ld	r24, Z
    2560:	91 81       	ldd	r25, Z+1	; 0x01
    2562:	89 2b       	or	r24, r25
    2564:	a1 f6       	brne	.-88     	; 0x250e <__stack+0x140f>
    2566:	2c c0       	rjmp	.+88     	; 0x25c0 <__stack+0x14c1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2568:	8e 01       	movw	r16, r28
    256a:	0f 54       	subi	r16, 0x4F	; 79
    256c:	1f 4f       	sbci	r17, 0xFF	; 255
    256e:	ce 01       	movw	r24, r28
    2570:	83 55       	subi	r24, 0x53	; 83
    2572:	9f 4f       	sbci	r25, 0xFF	; 255
    2574:	fc 01       	movw	r30, r24
    2576:	60 81       	ld	r22, Z
    2578:	71 81       	ldd	r23, Z+1	; 0x01
    257a:	82 81       	ldd	r24, Z+2	; 0x02
    257c:	93 81       	ldd	r25, Z+3	; 0x03
    257e:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    2582:	dc 01       	movw	r26, r24
    2584:	cb 01       	movw	r24, r22
    2586:	f8 01       	movw	r30, r16
    2588:	91 83       	std	Z+1, r25	; 0x01
    258a:	80 83       	st	Z, r24
    258c:	ce 01       	movw	r24, r28
    258e:	8b 54       	subi	r24, 0x4B	; 75
    2590:	9f 4f       	sbci	r25, 0xFF	; 255
    2592:	9e 01       	movw	r18, r28
    2594:	2f 54       	subi	r18, 0x4F	; 79
    2596:	3f 4f       	sbci	r19, 0xFF	; 255
    2598:	f9 01       	movw	r30, r18
    259a:	20 81       	ld	r18, Z
    259c:	31 81       	ldd	r19, Z+1	; 0x01
    259e:	fc 01       	movw	r30, r24
    25a0:	31 83       	std	Z+1, r19	; 0x01
    25a2:	20 83       	st	Z, r18
    25a4:	ce 01       	movw	r24, r28
    25a6:	8b 54       	subi	r24, 0x4B	; 75
    25a8:	9f 4f       	sbci	r25, 0xFF	; 255
    25aa:	fc 01       	movw	r30, r24
    25ac:	80 81       	ld	r24, Z
    25ae:	91 81       	ldd	r25, Z+1	; 0x01
    25b0:	01 97       	sbiw	r24, 0x01	; 1
    25b2:	f1 f7       	brne	.-4      	; 0x25b0 <__stack+0x14b1>
    25b4:	9e 01       	movw	r18, r28
    25b6:	2b 54       	subi	r18, 0x4B	; 75
    25b8:	3f 4f       	sbci	r19, 0xFF	; 255
    25ba:	f9 01       	movw	r30, r18
    25bc:	91 83       	std	Z+1, r25	; 0x01
    25be:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F660 T80\n");
    25c0:	8b e2       	ldi	r24, 0x2B	; 43
    25c2:	92 e0       	ldi	r25, 0x02	; 2
    25c4:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    25c8:	9e 01       	movw	r18, r28
    25ca:	23 5a       	subi	r18, 0xA3	; 163
    25cc:	3f 4f       	sbci	r19, 0xFF	; 255
    25ce:	80 e0       	ldi	r24, 0x00	; 0
    25d0:	90 e0       	ldi	r25, 0x00	; 0
    25d2:	a6 e1       	ldi	r26, 0x16	; 22
    25d4:	b3 e4       	ldi	r27, 0x43	; 67
    25d6:	f9 01       	movw	r30, r18
    25d8:	80 83       	st	Z, r24
    25da:	91 83       	std	Z+1, r25	; 0x01
    25dc:	a2 83       	std	Z+2, r26	; 0x02
    25de:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    25e0:	8e 01       	movw	r16, r28
    25e2:	0d 55       	subi	r16, 0x5D	; 93
    25e4:	1f 4f       	sbci	r17, 0xFF	; 255
    25e6:	ce 01       	movw	r24, r28
    25e8:	83 5a       	subi	r24, 0xA3	; 163
    25ea:	9f 4f       	sbci	r25, 0xFF	; 255
    25ec:	20 e0       	ldi	r18, 0x00	; 0
    25ee:	30 e0       	ldi	r19, 0x00	; 0
    25f0:	4a e7       	ldi	r20, 0x7A	; 122
    25f2:	55 e4       	ldi	r21, 0x45	; 69
    25f4:	fc 01       	movw	r30, r24
    25f6:	60 81       	ld	r22, Z
    25f8:	71 81       	ldd	r23, Z+1	; 0x01
    25fa:	82 81       	ldd	r24, Z+2	; 0x02
    25fc:	93 81       	ldd	r25, Z+3	; 0x03
    25fe:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    2602:	dc 01       	movw	r26, r24
    2604:	cb 01       	movw	r24, r22
    2606:	f8 01       	movw	r30, r16
    2608:	80 83       	st	Z, r24
    260a:	91 83       	std	Z+1, r25	; 0x01
    260c:	a2 83       	std	Z+2, r26	; 0x02
    260e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2610:	ce 01       	movw	r24, r28
    2612:	8d 55       	subi	r24, 0x5D	; 93
    2614:	9f 4f       	sbci	r25, 0xFF	; 255
    2616:	20 e0       	ldi	r18, 0x00	; 0
    2618:	30 e0       	ldi	r19, 0x00	; 0
    261a:	40 e8       	ldi	r20, 0x80	; 128
    261c:	5f e3       	ldi	r21, 0x3F	; 63
    261e:	fc 01       	movw	r30, r24
    2620:	60 81       	ld	r22, Z
    2622:	71 81       	ldd	r23, Z+1	; 0x01
    2624:	82 81       	ldd	r24, Z+2	; 0x02
    2626:	93 81       	ldd	r25, Z+3	; 0x03
    2628:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    262c:	88 23       	and	r24, r24
    262e:	4c f4       	brge	.+18     	; 0x2642 <__stack+0x1543>
		__ticks = 1;
    2630:	ce 01       	movw	r24, r28
    2632:	89 55       	subi	r24, 0x59	; 89
    2634:	9f 4f       	sbci	r25, 0xFF	; 255
    2636:	21 e0       	ldi	r18, 0x01	; 1
    2638:	30 e0       	ldi	r19, 0x00	; 0
    263a:	fc 01       	movw	r30, r24
    263c:	31 83       	std	Z+1, r19	; 0x01
    263e:	20 83       	st	Z, r18
    2640:	6d c0       	rjmp	.+218    	; 0x271c <__stack+0x161d>
	else if (__tmp > 65535)
    2642:	ce 01       	movw	r24, r28
    2644:	8d 55       	subi	r24, 0x5D	; 93
    2646:	9f 4f       	sbci	r25, 0xFF	; 255
    2648:	20 e0       	ldi	r18, 0x00	; 0
    264a:	3f ef       	ldi	r19, 0xFF	; 255
    264c:	4f e7       	ldi	r20, 0x7F	; 127
    264e:	57 e4       	ldi	r21, 0x47	; 71
    2650:	fc 01       	movw	r30, r24
    2652:	60 81       	ld	r22, Z
    2654:	71 81       	ldd	r23, Z+1	; 0x01
    2656:	82 81       	ldd	r24, Z+2	; 0x02
    2658:	93 81       	ldd	r25, Z+3	; 0x03
    265a:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    265e:	18 16       	cp	r1, r24
    2660:	0c f0       	brlt	.+2      	; 0x2664 <__stack+0x1565>
    2662:	4a c0       	rjmp	.+148    	; 0x26f8 <__stack+0x15f9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2664:	ce 01       	movw	r24, r28
    2666:	83 5a       	subi	r24, 0xA3	; 163
    2668:	9f 4f       	sbci	r25, 0xFF	; 255
    266a:	20 e0       	ldi	r18, 0x00	; 0
    266c:	30 e0       	ldi	r19, 0x00	; 0
    266e:	40 e2       	ldi	r20, 0x20	; 32
    2670:	51 e4       	ldi	r21, 0x41	; 65
    2672:	fc 01       	movw	r30, r24
    2674:	60 81       	ld	r22, Z
    2676:	71 81       	ldd	r23, Z+1	; 0x01
    2678:	82 81       	ldd	r24, Z+2	; 0x02
    267a:	93 81       	ldd	r25, Z+3	; 0x03
    267c:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    2680:	dc 01       	movw	r26, r24
    2682:	cb 01       	movw	r24, r22
    2684:	8e 01       	movw	r16, r28
    2686:	09 55       	subi	r16, 0x59	; 89
    2688:	1f 4f       	sbci	r17, 0xFF	; 255
    268a:	bc 01       	movw	r22, r24
    268c:	cd 01       	movw	r24, r26
    268e:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    2692:	dc 01       	movw	r26, r24
    2694:	cb 01       	movw	r24, r22
    2696:	f8 01       	movw	r30, r16
    2698:	91 83       	std	Z+1, r25	; 0x01
    269a:	80 83       	st	Z, r24
    269c:	24 c0       	rjmp	.+72     	; 0x26e6 <__stack+0x15e7>
    269e:	ce 01       	movw	r24, r28
    26a0:	87 55       	subi	r24, 0x57	; 87
    26a2:	9f 4f       	sbci	r25, 0xFF	; 255
    26a4:	20 e9       	ldi	r18, 0x90	; 144
    26a6:	31 e0       	ldi	r19, 0x01	; 1
    26a8:	fc 01       	movw	r30, r24
    26aa:	31 83       	std	Z+1, r19	; 0x01
    26ac:	20 83       	st	Z, r18
    26ae:	ce 01       	movw	r24, r28
    26b0:	87 55       	subi	r24, 0x57	; 87
    26b2:	9f 4f       	sbci	r25, 0xFF	; 255
    26b4:	fc 01       	movw	r30, r24
    26b6:	80 81       	ld	r24, Z
    26b8:	91 81       	ldd	r25, Z+1	; 0x01
    26ba:	01 97       	sbiw	r24, 0x01	; 1
    26bc:	f1 f7       	brne	.-4      	; 0x26ba <__stack+0x15bb>
    26be:	9e 01       	movw	r18, r28
    26c0:	27 55       	subi	r18, 0x57	; 87
    26c2:	3f 4f       	sbci	r19, 0xFF	; 255
    26c4:	f9 01       	movw	r30, r18
    26c6:	91 83       	std	Z+1, r25	; 0x01
    26c8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26ca:	ce 01       	movw	r24, r28
    26cc:	89 55       	subi	r24, 0x59	; 89
    26ce:	9f 4f       	sbci	r25, 0xFF	; 255
    26d0:	9e 01       	movw	r18, r28
    26d2:	29 55       	subi	r18, 0x59	; 89
    26d4:	3f 4f       	sbci	r19, 0xFF	; 255
    26d6:	f9 01       	movw	r30, r18
    26d8:	20 81       	ld	r18, Z
    26da:	31 81       	ldd	r19, Z+1	; 0x01
    26dc:	21 50       	subi	r18, 0x01	; 1
    26de:	31 09       	sbc	r19, r1
    26e0:	fc 01       	movw	r30, r24
    26e2:	31 83       	std	Z+1, r19	; 0x01
    26e4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26e6:	ce 01       	movw	r24, r28
    26e8:	89 55       	subi	r24, 0x59	; 89
    26ea:	9f 4f       	sbci	r25, 0xFF	; 255
    26ec:	fc 01       	movw	r30, r24
    26ee:	80 81       	ld	r24, Z
    26f0:	91 81       	ldd	r25, Z+1	; 0x01
    26f2:	89 2b       	or	r24, r25
    26f4:	a1 f6       	brne	.-88     	; 0x269e <__stack+0x159f>
    26f6:	2c c0       	rjmp	.+88     	; 0x2750 <__stack+0x1651>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26f8:	8e 01       	movw	r16, r28
    26fa:	09 55       	subi	r16, 0x59	; 89
    26fc:	1f 4f       	sbci	r17, 0xFF	; 255
    26fe:	ce 01       	movw	r24, r28
    2700:	8d 55       	subi	r24, 0x5D	; 93
    2702:	9f 4f       	sbci	r25, 0xFF	; 255
    2704:	fc 01       	movw	r30, r24
    2706:	60 81       	ld	r22, Z
    2708:	71 81       	ldd	r23, Z+1	; 0x01
    270a:	82 81       	ldd	r24, Z+2	; 0x02
    270c:	93 81       	ldd	r25, Z+3	; 0x03
    270e:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    2712:	dc 01       	movw	r26, r24
    2714:	cb 01       	movw	r24, r22
    2716:	f8 01       	movw	r30, r16
    2718:	91 83       	std	Z+1, r25	; 0x01
    271a:	80 83       	st	Z, r24
    271c:	ce 01       	movw	r24, r28
    271e:	85 55       	subi	r24, 0x55	; 85
    2720:	9f 4f       	sbci	r25, 0xFF	; 255
    2722:	9e 01       	movw	r18, r28
    2724:	29 55       	subi	r18, 0x59	; 89
    2726:	3f 4f       	sbci	r19, 0xFF	; 255
    2728:	f9 01       	movw	r30, r18
    272a:	20 81       	ld	r18, Z
    272c:	31 81       	ldd	r19, Z+1	; 0x01
    272e:	fc 01       	movw	r30, r24
    2730:	31 83       	std	Z+1, r19	; 0x01
    2732:	20 83       	st	Z, r18
    2734:	ce 01       	movw	r24, r28
    2736:	85 55       	subi	r24, 0x55	; 85
    2738:	9f 4f       	sbci	r25, 0xFF	; 255
    273a:	fc 01       	movw	r30, r24
    273c:	80 81       	ld	r24, Z
    273e:	91 81       	ldd	r25, Z+1	; 0x01
    2740:	01 97       	sbiw	r24, 0x01	; 1
    2742:	f1 f7       	brne	.-4      	; 0x2740 <__stack+0x1641>
    2744:	9e 01       	movw	r18, r28
    2746:	25 55       	subi	r18, 0x55	; 85
    2748:	3f 4f       	sbci	r19, 0xFF	; 255
    274a:	f9 01       	movw	r30, r18
    274c:	91 83       	std	Z+1, r25	; 0x01
    274e:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F520 T80\n");
    2750:	8c e6       	ldi	r24, 0x6C	; 108
    2752:	92 e0       	ldi	r25, 0x02	; 2
    2754:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    2758:	9e 01       	movw	r18, r28
    275a:	2f 59       	subi	r18, 0x9F	; 159
    275c:	3f 4f       	sbci	r19, 0xFF	; 255
    275e:	80 e0       	ldi	r24, 0x00	; 0
    2760:	90 e0       	ldi	r25, 0x00	; 0
    2762:	a6 e1       	ldi	r26, 0x16	; 22
    2764:	b3 e4       	ldi	r27, 0x43	; 67
    2766:	f9 01       	movw	r30, r18
    2768:	80 83       	st	Z, r24
    276a:	91 83       	std	Z+1, r25	; 0x01
    276c:	a2 83       	std	Z+2, r26	; 0x02
    276e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2770:	8e 01       	movw	r16, r28
    2772:	07 56       	subi	r16, 0x67	; 103
    2774:	1f 4f       	sbci	r17, 0xFF	; 255
    2776:	ce 01       	movw	r24, r28
    2778:	8f 59       	subi	r24, 0x9F	; 159
    277a:	9f 4f       	sbci	r25, 0xFF	; 255
    277c:	20 e0       	ldi	r18, 0x00	; 0
    277e:	30 e0       	ldi	r19, 0x00	; 0
    2780:	4a e7       	ldi	r20, 0x7A	; 122
    2782:	55 e4       	ldi	r21, 0x45	; 69
    2784:	fc 01       	movw	r30, r24
    2786:	60 81       	ld	r22, Z
    2788:	71 81       	ldd	r23, Z+1	; 0x01
    278a:	82 81       	ldd	r24, Z+2	; 0x02
    278c:	93 81       	ldd	r25, Z+3	; 0x03
    278e:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    2792:	dc 01       	movw	r26, r24
    2794:	cb 01       	movw	r24, r22
    2796:	f8 01       	movw	r30, r16
    2798:	80 83       	st	Z, r24
    279a:	91 83       	std	Z+1, r25	; 0x01
    279c:	a2 83       	std	Z+2, r26	; 0x02
    279e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    27a0:	ce 01       	movw	r24, r28
    27a2:	87 56       	subi	r24, 0x67	; 103
    27a4:	9f 4f       	sbci	r25, 0xFF	; 255
    27a6:	20 e0       	ldi	r18, 0x00	; 0
    27a8:	30 e0       	ldi	r19, 0x00	; 0
    27aa:	40 e8       	ldi	r20, 0x80	; 128
    27ac:	5f e3       	ldi	r21, 0x3F	; 63
    27ae:	fc 01       	movw	r30, r24
    27b0:	60 81       	ld	r22, Z
    27b2:	71 81       	ldd	r23, Z+1	; 0x01
    27b4:	82 81       	ldd	r24, Z+2	; 0x02
    27b6:	93 81       	ldd	r25, Z+3	; 0x03
    27b8:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    27bc:	88 23       	and	r24, r24
    27be:	4c f4       	brge	.+18     	; 0x27d2 <__stack+0x16d3>
		__ticks = 1;
    27c0:	ce 01       	movw	r24, r28
    27c2:	83 56       	subi	r24, 0x63	; 99
    27c4:	9f 4f       	sbci	r25, 0xFF	; 255
    27c6:	21 e0       	ldi	r18, 0x01	; 1
    27c8:	30 e0       	ldi	r19, 0x00	; 0
    27ca:	fc 01       	movw	r30, r24
    27cc:	31 83       	std	Z+1, r19	; 0x01
    27ce:	20 83       	st	Z, r18
    27d0:	6d c0       	rjmp	.+218    	; 0x28ac <__stack+0x17ad>
	else if (__tmp > 65535)
    27d2:	ce 01       	movw	r24, r28
    27d4:	87 56       	subi	r24, 0x67	; 103
    27d6:	9f 4f       	sbci	r25, 0xFF	; 255
    27d8:	20 e0       	ldi	r18, 0x00	; 0
    27da:	3f ef       	ldi	r19, 0xFF	; 255
    27dc:	4f e7       	ldi	r20, 0x7F	; 127
    27de:	57 e4       	ldi	r21, 0x47	; 71
    27e0:	fc 01       	movw	r30, r24
    27e2:	60 81       	ld	r22, Z
    27e4:	71 81       	ldd	r23, Z+1	; 0x01
    27e6:	82 81       	ldd	r24, Z+2	; 0x02
    27e8:	93 81       	ldd	r25, Z+3	; 0x03
    27ea:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    27ee:	18 16       	cp	r1, r24
    27f0:	0c f0       	brlt	.+2      	; 0x27f4 <__stack+0x16f5>
    27f2:	4a c0       	rjmp	.+148    	; 0x2888 <__stack+0x1789>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27f4:	ce 01       	movw	r24, r28
    27f6:	8f 59       	subi	r24, 0x9F	; 159
    27f8:	9f 4f       	sbci	r25, 0xFF	; 255
    27fa:	20 e0       	ldi	r18, 0x00	; 0
    27fc:	30 e0       	ldi	r19, 0x00	; 0
    27fe:	40 e2       	ldi	r20, 0x20	; 32
    2800:	51 e4       	ldi	r21, 0x41	; 65
    2802:	fc 01       	movw	r30, r24
    2804:	60 81       	ld	r22, Z
    2806:	71 81       	ldd	r23, Z+1	; 0x01
    2808:	82 81       	ldd	r24, Z+2	; 0x02
    280a:	93 81       	ldd	r25, Z+3	; 0x03
    280c:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    2810:	dc 01       	movw	r26, r24
    2812:	cb 01       	movw	r24, r22
    2814:	8e 01       	movw	r16, r28
    2816:	03 56       	subi	r16, 0x63	; 99
    2818:	1f 4f       	sbci	r17, 0xFF	; 255
    281a:	bc 01       	movw	r22, r24
    281c:	cd 01       	movw	r24, r26
    281e:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    2822:	dc 01       	movw	r26, r24
    2824:	cb 01       	movw	r24, r22
    2826:	f8 01       	movw	r30, r16
    2828:	91 83       	std	Z+1, r25	; 0x01
    282a:	80 83       	st	Z, r24
    282c:	24 c0       	rjmp	.+72     	; 0x2876 <__stack+0x1777>
    282e:	ce 01       	movw	r24, r28
    2830:	81 56       	subi	r24, 0x61	; 97
    2832:	9f 4f       	sbci	r25, 0xFF	; 255
    2834:	20 e9       	ldi	r18, 0x90	; 144
    2836:	31 e0       	ldi	r19, 0x01	; 1
    2838:	fc 01       	movw	r30, r24
    283a:	31 83       	std	Z+1, r19	; 0x01
    283c:	20 83       	st	Z, r18
    283e:	ce 01       	movw	r24, r28
    2840:	81 56       	subi	r24, 0x61	; 97
    2842:	9f 4f       	sbci	r25, 0xFF	; 255
    2844:	fc 01       	movw	r30, r24
    2846:	80 81       	ld	r24, Z
    2848:	91 81       	ldd	r25, Z+1	; 0x01
    284a:	01 97       	sbiw	r24, 0x01	; 1
    284c:	f1 f7       	brne	.-4      	; 0x284a <__stack+0x174b>
    284e:	9e 01       	movw	r18, r28
    2850:	21 56       	subi	r18, 0x61	; 97
    2852:	3f 4f       	sbci	r19, 0xFF	; 255
    2854:	f9 01       	movw	r30, r18
    2856:	91 83       	std	Z+1, r25	; 0x01
    2858:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    285a:	ce 01       	movw	r24, r28
    285c:	83 56       	subi	r24, 0x63	; 99
    285e:	9f 4f       	sbci	r25, 0xFF	; 255
    2860:	9e 01       	movw	r18, r28
    2862:	23 56       	subi	r18, 0x63	; 99
    2864:	3f 4f       	sbci	r19, 0xFF	; 255
    2866:	f9 01       	movw	r30, r18
    2868:	20 81       	ld	r18, Z
    286a:	31 81       	ldd	r19, Z+1	; 0x01
    286c:	21 50       	subi	r18, 0x01	; 1
    286e:	31 09       	sbc	r19, r1
    2870:	fc 01       	movw	r30, r24
    2872:	31 83       	std	Z+1, r19	; 0x01
    2874:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2876:	ce 01       	movw	r24, r28
    2878:	83 56       	subi	r24, 0x63	; 99
    287a:	9f 4f       	sbci	r25, 0xFF	; 255
    287c:	fc 01       	movw	r30, r24
    287e:	80 81       	ld	r24, Z
    2880:	91 81       	ldd	r25, Z+1	; 0x01
    2882:	89 2b       	or	r24, r25
    2884:	a1 f6       	brne	.-88     	; 0x282e <__stack+0x172f>
    2886:	2c c0       	rjmp	.+88     	; 0x28e0 <__stack+0x17e1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2888:	8e 01       	movw	r16, r28
    288a:	03 56       	subi	r16, 0x63	; 99
    288c:	1f 4f       	sbci	r17, 0xFF	; 255
    288e:	ce 01       	movw	r24, r28
    2890:	87 56       	subi	r24, 0x67	; 103
    2892:	9f 4f       	sbci	r25, 0xFF	; 255
    2894:	fc 01       	movw	r30, r24
    2896:	60 81       	ld	r22, Z
    2898:	71 81       	ldd	r23, Z+1	; 0x01
    289a:	82 81       	ldd	r24, Z+2	; 0x02
    289c:	93 81       	ldd	r25, Z+3	; 0x03
    289e:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    28a2:	dc 01       	movw	r26, r24
    28a4:	cb 01       	movw	r24, r22
    28a6:	f8 01       	movw	r30, r16
    28a8:	91 83       	std	Z+1, r25	; 0x01
    28aa:	80 83       	st	Z, r24
    28ac:	ce 01       	movw	r24, r28
    28ae:	8f 55       	subi	r24, 0x5F	; 95
    28b0:	9f 4f       	sbci	r25, 0xFF	; 255
    28b2:	9e 01       	movw	r18, r28
    28b4:	23 56       	subi	r18, 0x63	; 99
    28b6:	3f 4f       	sbci	r19, 0xFF	; 255
    28b8:	f9 01       	movw	r30, r18
    28ba:	20 81       	ld	r18, Z
    28bc:	31 81       	ldd	r19, Z+1	; 0x01
    28be:	fc 01       	movw	r30, r24
    28c0:	31 83       	std	Z+1, r19	; 0x01
    28c2:	20 83       	st	Z, r18
    28c4:	ce 01       	movw	r24, r28
    28c6:	8f 55       	subi	r24, 0x5F	; 95
    28c8:	9f 4f       	sbci	r25, 0xFF	; 255
    28ca:	fc 01       	movw	r30, r24
    28cc:	80 81       	ld	r24, Z
    28ce:	91 81       	ldd	r25, Z+1	; 0x01
    28d0:	01 97       	sbiw	r24, 0x01	; 1
    28d2:	f1 f7       	brne	.-4      	; 0x28d0 <__stack+0x17d1>
    28d4:	9e 01       	movw	r18, r28
    28d6:	2f 55       	subi	r18, 0x5F	; 95
    28d8:	3f 4f       	sbci	r19, 0xFF	; 255
    28da:	f9 01       	movw	r30, r18
    28dc:	91 83       	std	Z+1, r25	; 0x01
    28de:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F580 T80\n");
    28e0:	8c e7       	ldi	r24, 0x7C	; 124
    28e2:	92 e0       	ldi	r25, 0x02	; 2
    28e4:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    28e8:	9e 01       	movw	r18, r28
    28ea:	2b 59       	subi	r18, 0x9B	; 155
    28ec:	3f 4f       	sbci	r19, 0xFF	; 255
    28ee:	80 e0       	ldi	r24, 0x00	; 0
    28f0:	90 e0       	ldi	r25, 0x00	; 0
    28f2:	a6 e1       	ldi	r26, 0x16	; 22
    28f4:	b3 e4       	ldi	r27, 0x43	; 67
    28f6:	f9 01       	movw	r30, r18
    28f8:	80 83       	st	Z, r24
    28fa:	91 83       	std	Z+1, r25	; 0x01
    28fc:	a2 83       	std	Z+2, r26	; 0x02
    28fe:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2900:	8e 01       	movw	r16, r28
    2902:	01 57       	subi	r16, 0x71	; 113
    2904:	1f 4f       	sbci	r17, 0xFF	; 255
    2906:	ce 01       	movw	r24, r28
    2908:	8b 59       	subi	r24, 0x9B	; 155
    290a:	9f 4f       	sbci	r25, 0xFF	; 255
    290c:	20 e0       	ldi	r18, 0x00	; 0
    290e:	30 e0       	ldi	r19, 0x00	; 0
    2910:	4a e7       	ldi	r20, 0x7A	; 122
    2912:	55 e4       	ldi	r21, 0x45	; 69
    2914:	fc 01       	movw	r30, r24
    2916:	60 81       	ld	r22, Z
    2918:	71 81       	ldd	r23, Z+1	; 0x01
    291a:	82 81       	ldd	r24, Z+2	; 0x02
    291c:	93 81       	ldd	r25, Z+3	; 0x03
    291e:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    2922:	dc 01       	movw	r26, r24
    2924:	cb 01       	movw	r24, r22
    2926:	f8 01       	movw	r30, r16
    2928:	80 83       	st	Z, r24
    292a:	91 83       	std	Z+1, r25	; 0x01
    292c:	a2 83       	std	Z+2, r26	; 0x02
    292e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2930:	ce 01       	movw	r24, r28
    2932:	81 57       	subi	r24, 0x71	; 113
    2934:	9f 4f       	sbci	r25, 0xFF	; 255
    2936:	20 e0       	ldi	r18, 0x00	; 0
    2938:	30 e0       	ldi	r19, 0x00	; 0
    293a:	40 e8       	ldi	r20, 0x80	; 128
    293c:	5f e3       	ldi	r21, 0x3F	; 63
    293e:	fc 01       	movw	r30, r24
    2940:	60 81       	ld	r22, Z
    2942:	71 81       	ldd	r23, Z+1	; 0x01
    2944:	82 81       	ldd	r24, Z+2	; 0x02
    2946:	93 81       	ldd	r25, Z+3	; 0x03
    2948:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    294c:	88 23       	and	r24, r24
    294e:	4c f4       	brge	.+18     	; 0x2962 <__stack+0x1863>
		__ticks = 1;
    2950:	ce 01       	movw	r24, r28
    2952:	8d 56       	subi	r24, 0x6D	; 109
    2954:	9f 4f       	sbci	r25, 0xFF	; 255
    2956:	21 e0       	ldi	r18, 0x01	; 1
    2958:	30 e0       	ldi	r19, 0x00	; 0
    295a:	fc 01       	movw	r30, r24
    295c:	31 83       	std	Z+1, r19	; 0x01
    295e:	20 83       	st	Z, r18
    2960:	6d c0       	rjmp	.+218    	; 0x2a3c <__stack+0x193d>
	else if (__tmp > 65535)
    2962:	ce 01       	movw	r24, r28
    2964:	81 57       	subi	r24, 0x71	; 113
    2966:	9f 4f       	sbci	r25, 0xFF	; 255
    2968:	20 e0       	ldi	r18, 0x00	; 0
    296a:	3f ef       	ldi	r19, 0xFF	; 255
    296c:	4f e7       	ldi	r20, 0x7F	; 127
    296e:	57 e4       	ldi	r21, 0x47	; 71
    2970:	fc 01       	movw	r30, r24
    2972:	60 81       	ld	r22, Z
    2974:	71 81       	ldd	r23, Z+1	; 0x01
    2976:	82 81       	ldd	r24, Z+2	; 0x02
    2978:	93 81       	ldd	r25, Z+3	; 0x03
    297a:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    297e:	18 16       	cp	r1, r24
    2980:	0c f0       	brlt	.+2      	; 0x2984 <__stack+0x1885>
    2982:	4a c0       	rjmp	.+148    	; 0x2a18 <__stack+0x1919>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2984:	ce 01       	movw	r24, r28
    2986:	8b 59       	subi	r24, 0x9B	; 155
    2988:	9f 4f       	sbci	r25, 0xFF	; 255
    298a:	20 e0       	ldi	r18, 0x00	; 0
    298c:	30 e0       	ldi	r19, 0x00	; 0
    298e:	40 e2       	ldi	r20, 0x20	; 32
    2990:	51 e4       	ldi	r21, 0x41	; 65
    2992:	fc 01       	movw	r30, r24
    2994:	60 81       	ld	r22, Z
    2996:	71 81       	ldd	r23, Z+1	; 0x01
    2998:	82 81       	ldd	r24, Z+2	; 0x02
    299a:	93 81       	ldd	r25, Z+3	; 0x03
    299c:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    29a0:	dc 01       	movw	r26, r24
    29a2:	cb 01       	movw	r24, r22
    29a4:	8e 01       	movw	r16, r28
    29a6:	0d 56       	subi	r16, 0x6D	; 109
    29a8:	1f 4f       	sbci	r17, 0xFF	; 255
    29aa:	bc 01       	movw	r22, r24
    29ac:	cd 01       	movw	r24, r26
    29ae:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    29b2:	dc 01       	movw	r26, r24
    29b4:	cb 01       	movw	r24, r22
    29b6:	f8 01       	movw	r30, r16
    29b8:	91 83       	std	Z+1, r25	; 0x01
    29ba:	80 83       	st	Z, r24
    29bc:	24 c0       	rjmp	.+72     	; 0x2a06 <__stack+0x1907>
    29be:	ce 01       	movw	r24, r28
    29c0:	8b 56       	subi	r24, 0x6B	; 107
    29c2:	9f 4f       	sbci	r25, 0xFF	; 255
    29c4:	20 e9       	ldi	r18, 0x90	; 144
    29c6:	31 e0       	ldi	r19, 0x01	; 1
    29c8:	fc 01       	movw	r30, r24
    29ca:	31 83       	std	Z+1, r19	; 0x01
    29cc:	20 83       	st	Z, r18
    29ce:	ce 01       	movw	r24, r28
    29d0:	8b 56       	subi	r24, 0x6B	; 107
    29d2:	9f 4f       	sbci	r25, 0xFF	; 255
    29d4:	fc 01       	movw	r30, r24
    29d6:	80 81       	ld	r24, Z
    29d8:	91 81       	ldd	r25, Z+1	; 0x01
    29da:	01 97       	sbiw	r24, 0x01	; 1
    29dc:	f1 f7       	brne	.-4      	; 0x29da <__stack+0x18db>
    29de:	9e 01       	movw	r18, r28
    29e0:	2b 56       	subi	r18, 0x6B	; 107
    29e2:	3f 4f       	sbci	r19, 0xFF	; 255
    29e4:	f9 01       	movw	r30, r18
    29e6:	91 83       	std	Z+1, r25	; 0x01
    29e8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29ea:	ce 01       	movw	r24, r28
    29ec:	8d 56       	subi	r24, 0x6D	; 109
    29ee:	9f 4f       	sbci	r25, 0xFF	; 255
    29f0:	9e 01       	movw	r18, r28
    29f2:	2d 56       	subi	r18, 0x6D	; 109
    29f4:	3f 4f       	sbci	r19, 0xFF	; 255
    29f6:	f9 01       	movw	r30, r18
    29f8:	20 81       	ld	r18, Z
    29fa:	31 81       	ldd	r19, Z+1	; 0x01
    29fc:	21 50       	subi	r18, 0x01	; 1
    29fe:	31 09       	sbc	r19, r1
    2a00:	fc 01       	movw	r30, r24
    2a02:	31 83       	std	Z+1, r19	; 0x01
    2a04:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a06:	ce 01       	movw	r24, r28
    2a08:	8d 56       	subi	r24, 0x6D	; 109
    2a0a:	9f 4f       	sbci	r25, 0xFF	; 255
    2a0c:	fc 01       	movw	r30, r24
    2a0e:	80 81       	ld	r24, Z
    2a10:	91 81       	ldd	r25, Z+1	; 0x01
    2a12:	89 2b       	or	r24, r25
    2a14:	a1 f6       	brne	.-88     	; 0x29be <__stack+0x18bf>
    2a16:	2c c0       	rjmp	.+88     	; 0x2a70 <__stack+0x1971>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a18:	8e 01       	movw	r16, r28
    2a1a:	0d 56       	subi	r16, 0x6D	; 109
    2a1c:	1f 4f       	sbci	r17, 0xFF	; 255
    2a1e:	ce 01       	movw	r24, r28
    2a20:	81 57       	subi	r24, 0x71	; 113
    2a22:	9f 4f       	sbci	r25, 0xFF	; 255
    2a24:	fc 01       	movw	r30, r24
    2a26:	60 81       	ld	r22, Z
    2a28:	71 81       	ldd	r23, Z+1	; 0x01
    2a2a:	82 81       	ldd	r24, Z+2	; 0x02
    2a2c:	93 81       	ldd	r25, Z+3	; 0x03
    2a2e:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    2a32:	dc 01       	movw	r26, r24
    2a34:	cb 01       	movw	r24, r22
    2a36:	f8 01       	movw	r30, r16
    2a38:	91 83       	std	Z+1, r25	; 0x01
    2a3a:	80 83       	st	Z, r24
    2a3c:	ce 01       	movw	r24, r28
    2a3e:	89 56       	subi	r24, 0x69	; 105
    2a40:	9f 4f       	sbci	r25, 0xFF	; 255
    2a42:	9e 01       	movw	r18, r28
    2a44:	2d 56       	subi	r18, 0x6D	; 109
    2a46:	3f 4f       	sbci	r19, 0xFF	; 255
    2a48:	f9 01       	movw	r30, r18
    2a4a:	20 81       	ld	r18, Z
    2a4c:	31 81       	ldd	r19, Z+1	; 0x01
    2a4e:	fc 01       	movw	r30, r24
    2a50:	31 83       	std	Z+1, r19	; 0x01
    2a52:	20 83       	st	Z, r18
    2a54:	ce 01       	movw	r24, r28
    2a56:	89 56       	subi	r24, 0x69	; 105
    2a58:	9f 4f       	sbci	r25, 0xFF	; 255
    2a5a:	fc 01       	movw	r30, r24
    2a5c:	80 81       	ld	r24, Z
    2a5e:	91 81       	ldd	r25, Z+1	; 0x01
    2a60:	01 97       	sbiw	r24, 0x01	; 1
    2a62:	f1 f7       	brne	.-4      	; 0x2a60 <__stack+0x1961>
    2a64:	9e 01       	movw	r18, r28
    2a66:	29 56       	subi	r18, 0x69	; 105
    2a68:	3f 4f       	sbci	r19, 0xFF	; 255
    2a6a:	f9 01       	movw	r30, r18
    2a6c:	91 83       	std	Z+1, r25	; 0x01
    2a6e:	80 83       	st	Z, r24
			_delay_ms(150);
			to_uARM("M2210 F480 T80\n");
    2a70:	89 ef       	ldi	r24, 0xF9	; 249
    2a72:	91 e0       	ldi	r25, 0x01	; 1
    2a74:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    2a78:	9e 01       	movw	r18, r28
    2a7a:	2f 57       	subi	r18, 0x7F	; 127
    2a7c:	3f 4f       	sbci	r19, 0xFF	; 255
    2a7e:	80 e0       	ldi	r24, 0x00	; 0
    2a80:	90 e0       	ldi	r25, 0x00	; 0
    2a82:	a6 e1       	ldi	r26, 0x16	; 22
    2a84:	b3 e4       	ldi	r27, 0x43	; 67
    2a86:	f9 01       	movw	r30, r18
    2a88:	80 83       	st	Z, r24
    2a8a:	91 83       	std	Z+1, r25	; 0x01
    2a8c:	a2 83       	std	Z+2, r26	; 0x02
    2a8e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2a90:	8e 01       	movw	r16, r28
    2a92:	0b 57       	subi	r16, 0x7B	; 123
    2a94:	1f 4f       	sbci	r17, 0xFF	; 255
    2a96:	ce 01       	movw	r24, r28
    2a98:	8f 57       	subi	r24, 0x7F	; 127
    2a9a:	9f 4f       	sbci	r25, 0xFF	; 255
    2a9c:	20 e0       	ldi	r18, 0x00	; 0
    2a9e:	30 e0       	ldi	r19, 0x00	; 0
    2aa0:	4a e7       	ldi	r20, 0x7A	; 122
    2aa2:	55 e4       	ldi	r21, 0x45	; 69
    2aa4:	fc 01       	movw	r30, r24
    2aa6:	60 81       	ld	r22, Z
    2aa8:	71 81       	ldd	r23, Z+1	; 0x01
    2aaa:	82 81       	ldd	r24, Z+2	; 0x02
    2aac:	93 81       	ldd	r25, Z+3	; 0x03
    2aae:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    2ab2:	dc 01       	movw	r26, r24
    2ab4:	cb 01       	movw	r24, r22
    2ab6:	f8 01       	movw	r30, r16
    2ab8:	80 83       	st	Z, r24
    2aba:	91 83       	std	Z+1, r25	; 0x01
    2abc:	a2 83       	std	Z+2, r26	; 0x02
    2abe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2ac0:	ce 01       	movw	r24, r28
    2ac2:	8b 57       	subi	r24, 0x7B	; 123
    2ac4:	9f 4f       	sbci	r25, 0xFF	; 255
    2ac6:	20 e0       	ldi	r18, 0x00	; 0
    2ac8:	30 e0       	ldi	r19, 0x00	; 0
    2aca:	40 e8       	ldi	r20, 0x80	; 128
    2acc:	5f e3       	ldi	r21, 0x3F	; 63
    2ace:	fc 01       	movw	r30, r24
    2ad0:	60 81       	ld	r22, Z
    2ad2:	71 81       	ldd	r23, Z+1	; 0x01
    2ad4:	82 81       	ldd	r24, Z+2	; 0x02
    2ad6:	93 81       	ldd	r25, Z+3	; 0x03
    2ad8:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    2adc:	88 23       	and	r24, r24
    2ade:	4c f4       	brge	.+18     	; 0x2af2 <__stack+0x19f3>
		__ticks = 1;
    2ae0:	ce 01       	movw	r24, r28
    2ae2:	87 57       	subi	r24, 0x77	; 119
    2ae4:	9f 4f       	sbci	r25, 0xFF	; 255
    2ae6:	21 e0       	ldi	r18, 0x01	; 1
    2ae8:	30 e0       	ldi	r19, 0x00	; 0
    2aea:	fc 01       	movw	r30, r24
    2aec:	31 83       	std	Z+1, r19	; 0x01
    2aee:	20 83       	st	Z, r18
    2af0:	6d c0       	rjmp	.+218    	; 0x2bcc <__stack+0x1acd>
	else if (__tmp > 65535)
    2af2:	ce 01       	movw	r24, r28
    2af4:	8b 57       	subi	r24, 0x7B	; 123
    2af6:	9f 4f       	sbci	r25, 0xFF	; 255
    2af8:	20 e0       	ldi	r18, 0x00	; 0
    2afa:	3f ef       	ldi	r19, 0xFF	; 255
    2afc:	4f e7       	ldi	r20, 0x7F	; 127
    2afe:	57 e4       	ldi	r21, 0x47	; 71
    2b00:	fc 01       	movw	r30, r24
    2b02:	60 81       	ld	r22, Z
    2b04:	71 81       	ldd	r23, Z+1	; 0x01
    2b06:	82 81       	ldd	r24, Z+2	; 0x02
    2b08:	93 81       	ldd	r25, Z+3	; 0x03
    2b0a:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    2b0e:	18 16       	cp	r1, r24
    2b10:	0c f0       	brlt	.+2      	; 0x2b14 <__stack+0x1a15>
    2b12:	4a c0       	rjmp	.+148    	; 0x2ba8 <__stack+0x1aa9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b14:	ce 01       	movw	r24, r28
    2b16:	8f 57       	subi	r24, 0x7F	; 127
    2b18:	9f 4f       	sbci	r25, 0xFF	; 255
    2b1a:	20 e0       	ldi	r18, 0x00	; 0
    2b1c:	30 e0       	ldi	r19, 0x00	; 0
    2b1e:	40 e2       	ldi	r20, 0x20	; 32
    2b20:	51 e4       	ldi	r21, 0x41	; 65
    2b22:	fc 01       	movw	r30, r24
    2b24:	60 81       	ld	r22, Z
    2b26:	71 81       	ldd	r23, Z+1	; 0x01
    2b28:	82 81       	ldd	r24, Z+2	; 0x02
    2b2a:	93 81       	ldd	r25, Z+3	; 0x03
    2b2c:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    2b30:	dc 01       	movw	r26, r24
    2b32:	cb 01       	movw	r24, r22
    2b34:	8e 01       	movw	r16, r28
    2b36:	07 57       	subi	r16, 0x77	; 119
    2b38:	1f 4f       	sbci	r17, 0xFF	; 255
    2b3a:	bc 01       	movw	r22, r24
    2b3c:	cd 01       	movw	r24, r26
    2b3e:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    2b42:	dc 01       	movw	r26, r24
    2b44:	cb 01       	movw	r24, r22
    2b46:	f8 01       	movw	r30, r16
    2b48:	91 83       	std	Z+1, r25	; 0x01
    2b4a:	80 83       	st	Z, r24
    2b4c:	24 c0       	rjmp	.+72     	; 0x2b96 <__stack+0x1a97>
    2b4e:	ce 01       	movw	r24, r28
    2b50:	85 57       	subi	r24, 0x75	; 117
    2b52:	9f 4f       	sbci	r25, 0xFF	; 255
    2b54:	20 e9       	ldi	r18, 0x90	; 144
    2b56:	31 e0       	ldi	r19, 0x01	; 1
    2b58:	fc 01       	movw	r30, r24
    2b5a:	31 83       	std	Z+1, r19	; 0x01
    2b5c:	20 83       	st	Z, r18
    2b5e:	ce 01       	movw	r24, r28
    2b60:	85 57       	subi	r24, 0x75	; 117
    2b62:	9f 4f       	sbci	r25, 0xFF	; 255
    2b64:	fc 01       	movw	r30, r24
    2b66:	80 81       	ld	r24, Z
    2b68:	91 81       	ldd	r25, Z+1	; 0x01
    2b6a:	01 97       	sbiw	r24, 0x01	; 1
    2b6c:	f1 f7       	brne	.-4      	; 0x2b6a <__stack+0x1a6b>
    2b6e:	9e 01       	movw	r18, r28
    2b70:	25 57       	subi	r18, 0x75	; 117
    2b72:	3f 4f       	sbci	r19, 0xFF	; 255
    2b74:	f9 01       	movw	r30, r18
    2b76:	91 83       	std	Z+1, r25	; 0x01
    2b78:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b7a:	ce 01       	movw	r24, r28
    2b7c:	87 57       	subi	r24, 0x77	; 119
    2b7e:	9f 4f       	sbci	r25, 0xFF	; 255
    2b80:	9e 01       	movw	r18, r28
    2b82:	27 57       	subi	r18, 0x77	; 119
    2b84:	3f 4f       	sbci	r19, 0xFF	; 255
    2b86:	f9 01       	movw	r30, r18
    2b88:	20 81       	ld	r18, Z
    2b8a:	31 81       	ldd	r19, Z+1	; 0x01
    2b8c:	21 50       	subi	r18, 0x01	; 1
    2b8e:	31 09       	sbc	r19, r1
    2b90:	fc 01       	movw	r30, r24
    2b92:	31 83       	std	Z+1, r19	; 0x01
    2b94:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b96:	ce 01       	movw	r24, r28
    2b98:	87 57       	subi	r24, 0x77	; 119
    2b9a:	9f 4f       	sbci	r25, 0xFF	; 255
    2b9c:	fc 01       	movw	r30, r24
    2b9e:	80 81       	ld	r24, Z
    2ba0:	91 81       	ldd	r25, Z+1	; 0x01
    2ba2:	89 2b       	or	r24, r25
    2ba4:	a1 f6       	brne	.-88     	; 0x2b4e <__stack+0x1a4f>
    2ba6:	2c c0       	rjmp	.+88     	; 0x2c00 <__stack+0x1b01>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ba8:	8e 01       	movw	r16, r28
    2baa:	07 57       	subi	r16, 0x77	; 119
    2bac:	1f 4f       	sbci	r17, 0xFF	; 255
    2bae:	ce 01       	movw	r24, r28
    2bb0:	8b 57       	subi	r24, 0x7B	; 123
    2bb2:	9f 4f       	sbci	r25, 0xFF	; 255
    2bb4:	fc 01       	movw	r30, r24
    2bb6:	60 81       	ld	r22, Z
    2bb8:	71 81       	ldd	r23, Z+1	; 0x01
    2bba:	82 81       	ldd	r24, Z+2	; 0x02
    2bbc:	93 81       	ldd	r25, Z+3	; 0x03
    2bbe:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    2bc2:	dc 01       	movw	r26, r24
    2bc4:	cb 01       	movw	r24, r22
    2bc6:	f8 01       	movw	r30, r16
    2bc8:	91 83       	std	Z+1, r25	; 0x01
    2bca:	80 83       	st	Z, r24
    2bcc:	ce 01       	movw	r24, r28
    2bce:	83 57       	subi	r24, 0x73	; 115
    2bd0:	9f 4f       	sbci	r25, 0xFF	; 255
    2bd2:	9e 01       	movw	r18, r28
    2bd4:	27 57       	subi	r18, 0x77	; 119
    2bd6:	3f 4f       	sbci	r19, 0xFF	; 255
    2bd8:	f9 01       	movw	r30, r18
    2bda:	20 81       	ld	r18, Z
    2bdc:	31 81       	ldd	r19, Z+1	; 0x01
    2bde:	fc 01       	movw	r30, r24
    2be0:	31 83       	std	Z+1, r19	; 0x01
    2be2:	20 83       	st	Z, r18
    2be4:	ce 01       	movw	r24, r28
    2be6:	83 57       	subi	r24, 0x73	; 115
    2be8:	9f 4f       	sbci	r25, 0xFF	; 255
    2bea:	fc 01       	movw	r30, r24
    2bec:	80 81       	ld	r24, Z
    2bee:	91 81       	ldd	r25, Z+1	; 0x01
    2bf0:	01 97       	sbiw	r24, 0x01	; 1
    2bf2:	f1 f7       	brne	.-4      	; 0x2bf0 <__stack+0x1af1>
    2bf4:	9e 01       	movw	r18, r28
    2bf6:	23 57       	subi	r18, 0x73	; 115
    2bf8:	3f 4f       	sbci	r19, 0xFF	; 255
    2bfa:	f9 01       	movw	r30, r18
    2bfc:	91 83       	std	Z+1, r25	; 0x01
    2bfe:	80 83       	st	Z, r24
			_delay_ms(150);
			
			
		}
		
		if (taster&0x08)
    2c00:	88 85       	ldd	r24, Y+8	; 0x08
    2c02:	88 2f       	mov	r24, r24
    2c04:	90 e0       	ldi	r25, 0x00	; 0
    2c06:	88 70       	andi	r24, 0x08	; 8
    2c08:	99 27       	eor	r25, r25
    2c0a:	89 2b       	or	r24, r25
    2c0c:	09 f4       	brne	.+2      	; 0x2c10 <__stack+0x1b11>
    2c0e:	9e c1       	rjmp	.+828    	; 0x2f4c <__stack+0x1e4d>
		{
			send_to_uArm("G0 X200 Y0 Z150 F1000\n");			//ausgansgpkt	(200 0 150)
    2c10:	8c e8       	ldi	r24, 0x8C	; 140
    2c12:	92 e0       	ldi	r25, 0x02	; 2
    2c14:	0e 94 ad 01 	call	0x35a	; 0x35a <send_to_uArm>
			while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    2c18:	04 c0       	rjmp	.+8      	; 0x2c22 <__stack+0x1b23>
			{
				to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
    2c1a:	80 e0       	ldi	r24, 0x00	; 0
    2c1c:	91 e0       	ldi	r25, 0x01	; 1
    2c1e:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
		}
		
		if (taster&0x08)
		{
			send_to_uArm("G0 X200 Y0 Z150 F1000\n");			//ausgansgpkt	(200 0 150)
			while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    2c22:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <uart_string1+0x4>
    2c26:	81 33       	cpi	r24, 0x31	; 49
    2c28:	c1 f3       	breq	.-16     	; 0x2c1a <__stack+0x1b1b>
			{
				to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
			}
			//to_uARM("M2210 F2000 T200\n");
			if (DIP_Switch&0x01)
    2c2a:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <__data_end>
    2c2e:	88 2f       	mov	r24, r24
    2c30:	90 e0       	ldi	r25, 0x00	; 0
    2c32:	81 70       	andi	r24, 0x01	; 1
    2c34:	99 27       	eor	r25, r25
    2c36:	89 2b       	or	r24, r25
    2c38:	09 f4       	brne	.+2      	; 0x2c3c <__stack+0x1b3d>
    2c3a:	88 c1       	rjmp	.+784    	; 0x2f4c <__stack+0x1e4d>
			{
				to_uARM("M2210 F500 T200\n");
    2c3c:	8e e5       	ldi	r24, 0x5E	; 94
    2c3e:	91 e0       	ldi	r25, 0x01	; 1
    2c40:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    2c44:	9e 01       	movw	r18, r28
    2c46:	23 58       	subi	r18, 0x83	; 131
    2c48:	3f 4f       	sbci	r19, 0xFF	; 255
    2c4a:	80 e0       	ldi	r24, 0x00	; 0
    2c4c:	90 e0       	ldi	r25, 0x00	; 0
    2c4e:	a8 e4       	ldi	r26, 0x48	; 72
    2c50:	b3 e4       	ldi	r27, 0x43	; 67
    2c52:	f9 01       	movw	r30, r18
    2c54:	80 83       	st	Z, r24
    2c56:	91 83       	std	Z+1, r25	; 0x01
    2c58:	a2 83       	std	Z+2, r26	; 0x02
    2c5a:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2c5c:	8e 01       	movw	r16, r28
    2c5e:	01 58       	subi	r16, 0x81	; 129
    2c60:	1e 4f       	sbci	r17, 0xFE	; 254
    2c62:	ce 01       	movw	r24, r28
    2c64:	83 58       	subi	r24, 0x83	; 131
    2c66:	9f 4f       	sbci	r25, 0xFF	; 255
    2c68:	20 e0       	ldi	r18, 0x00	; 0
    2c6a:	30 e0       	ldi	r19, 0x00	; 0
    2c6c:	4a e7       	ldi	r20, 0x7A	; 122
    2c6e:	55 e4       	ldi	r21, 0x45	; 69
    2c70:	fc 01       	movw	r30, r24
    2c72:	60 81       	ld	r22, Z
    2c74:	71 81       	ldd	r23, Z+1	; 0x01
    2c76:	82 81       	ldd	r24, Z+2	; 0x02
    2c78:	93 81       	ldd	r25, Z+3	; 0x03
    2c7a:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    2c7e:	dc 01       	movw	r26, r24
    2c80:	cb 01       	movw	r24, r22
    2c82:	f8 01       	movw	r30, r16
    2c84:	80 83       	st	Z, r24
    2c86:	91 83       	std	Z+1, r25	; 0x01
    2c88:	a2 83       	std	Z+2, r26	; 0x02
    2c8a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2c8c:	ce 01       	movw	r24, r28
    2c8e:	81 58       	subi	r24, 0x81	; 129
    2c90:	9e 4f       	sbci	r25, 0xFE	; 254
    2c92:	20 e0       	ldi	r18, 0x00	; 0
    2c94:	30 e0       	ldi	r19, 0x00	; 0
    2c96:	40 e8       	ldi	r20, 0x80	; 128
    2c98:	5f e3       	ldi	r21, 0x3F	; 63
    2c9a:	fc 01       	movw	r30, r24
    2c9c:	60 81       	ld	r22, Z
    2c9e:	71 81       	ldd	r23, Z+1	; 0x01
    2ca0:	82 81       	ldd	r24, Z+2	; 0x02
    2ca2:	93 81       	ldd	r25, Z+3	; 0x03
    2ca4:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    2ca8:	88 23       	and	r24, r24
    2caa:	4c f4       	brge	.+18     	; 0x2cbe <__stack+0x1bbf>
		__ticks = 1;
    2cac:	ce 01       	movw	r24, r28
    2cae:	8d 57       	subi	r24, 0x7D	; 125
    2cb0:	9e 4f       	sbci	r25, 0xFE	; 254
    2cb2:	21 e0       	ldi	r18, 0x01	; 1
    2cb4:	30 e0       	ldi	r19, 0x00	; 0
    2cb6:	fc 01       	movw	r30, r24
    2cb8:	31 83       	std	Z+1, r19	; 0x01
    2cba:	20 83       	st	Z, r18
    2cbc:	6d c0       	rjmp	.+218    	; 0x2d98 <__stack+0x1c99>
	else if (__tmp > 65535)
    2cbe:	ce 01       	movw	r24, r28
    2cc0:	81 58       	subi	r24, 0x81	; 129
    2cc2:	9e 4f       	sbci	r25, 0xFE	; 254
    2cc4:	20 e0       	ldi	r18, 0x00	; 0
    2cc6:	3f ef       	ldi	r19, 0xFF	; 255
    2cc8:	4f e7       	ldi	r20, 0x7F	; 127
    2cca:	57 e4       	ldi	r21, 0x47	; 71
    2ccc:	fc 01       	movw	r30, r24
    2cce:	60 81       	ld	r22, Z
    2cd0:	71 81       	ldd	r23, Z+1	; 0x01
    2cd2:	82 81       	ldd	r24, Z+2	; 0x02
    2cd4:	93 81       	ldd	r25, Z+3	; 0x03
    2cd6:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    2cda:	18 16       	cp	r1, r24
    2cdc:	0c f0       	brlt	.+2      	; 0x2ce0 <__stack+0x1be1>
    2cde:	4a c0       	rjmp	.+148    	; 0x2d74 <__stack+0x1c75>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ce0:	ce 01       	movw	r24, r28
    2ce2:	83 58       	subi	r24, 0x83	; 131
    2ce4:	9f 4f       	sbci	r25, 0xFF	; 255
    2ce6:	20 e0       	ldi	r18, 0x00	; 0
    2ce8:	30 e0       	ldi	r19, 0x00	; 0
    2cea:	40 e2       	ldi	r20, 0x20	; 32
    2cec:	51 e4       	ldi	r21, 0x41	; 65
    2cee:	fc 01       	movw	r30, r24
    2cf0:	60 81       	ld	r22, Z
    2cf2:	71 81       	ldd	r23, Z+1	; 0x01
    2cf4:	82 81       	ldd	r24, Z+2	; 0x02
    2cf6:	93 81       	ldd	r25, Z+3	; 0x03
    2cf8:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    2cfc:	dc 01       	movw	r26, r24
    2cfe:	cb 01       	movw	r24, r22
    2d00:	8e 01       	movw	r16, r28
    2d02:	0d 57       	subi	r16, 0x7D	; 125
    2d04:	1e 4f       	sbci	r17, 0xFE	; 254
    2d06:	bc 01       	movw	r22, r24
    2d08:	cd 01       	movw	r24, r26
    2d0a:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    2d0e:	dc 01       	movw	r26, r24
    2d10:	cb 01       	movw	r24, r22
    2d12:	f8 01       	movw	r30, r16
    2d14:	91 83       	std	Z+1, r25	; 0x01
    2d16:	80 83       	st	Z, r24
    2d18:	24 c0       	rjmp	.+72     	; 0x2d62 <__stack+0x1c63>
    2d1a:	ce 01       	movw	r24, r28
    2d1c:	8b 57       	subi	r24, 0x7B	; 123
    2d1e:	9e 4f       	sbci	r25, 0xFE	; 254
    2d20:	20 e9       	ldi	r18, 0x90	; 144
    2d22:	31 e0       	ldi	r19, 0x01	; 1
    2d24:	fc 01       	movw	r30, r24
    2d26:	31 83       	std	Z+1, r19	; 0x01
    2d28:	20 83       	st	Z, r18
    2d2a:	ce 01       	movw	r24, r28
    2d2c:	8b 57       	subi	r24, 0x7B	; 123
    2d2e:	9e 4f       	sbci	r25, 0xFE	; 254
    2d30:	fc 01       	movw	r30, r24
    2d32:	80 81       	ld	r24, Z
    2d34:	91 81       	ldd	r25, Z+1	; 0x01
    2d36:	01 97       	sbiw	r24, 0x01	; 1
    2d38:	f1 f7       	brne	.-4      	; 0x2d36 <__stack+0x1c37>
    2d3a:	9e 01       	movw	r18, r28
    2d3c:	2b 57       	subi	r18, 0x7B	; 123
    2d3e:	3e 4f       	sbci	r19, 0xFE	; 254
    2d40:	f9 01       	movw	r30, r18
    2d42:	91 83       	std	Z+1, r25	; 0x01
    2d44:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d46:	ce 01       	movw	r24, r28
    2d48:	8d 57       	subi	r24, 0x7D	; 125
    2d4a:	9e 4f       	sbci	r25, 0xFE	; 254
    2d4c:	9e 01       	movw	r18, r28
    2d4e:	2d 57       	subi	r18, 0x7D	; 125
    2d50:	3e 4f       	sbci	r19, 0xFE	; 254
    2d52:	f9 01       	movw	r30, r18
    2d54:	20 81       	ld	r18, Z
    2d56:	31 81       	ldd	r19, Z+1	; 0x01
    2d58:	21 50       	subi	r18, 0x01	; 1
    2d5a:	31 09       	sbc	r19, r1
    2d5c:	fc 01       	movw	r30, r24
    2d5e:	31 83       	std	Z+1, r19	; 0x01
    2d60:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d62:	ce 01       	movw	r24, r28
    2d64:	8d 57       	subi	r24, 0x7D	; 125
    2d66:	9e 4f       	sbci	r25, 0xFE	; 254
    2d68:	fc 01       	movw	r30, r24
    2d6a:	80 81       	ld	r24, Z
    2d6c:	91 81       	ldd	r25, Z+1	; 0x01
    2d6e:	89 2b       	or	r24, r25
    2d70:	a1 f6       	brne	.-88     	; 0x2d1a <__stack+0x1c1b>
    2d72:	2c c0       	rjmp	.+88     	; 0x2dcc <__stack+0x1ccd>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d74:	8e 01       	movw	r16, r28
    2d76:	0d 57       	subi	r16, 0x7D	; 125
    2d78:	1e 4f       	sbci	r17, 0xFE	; 254
    2d7a:	ce 01       	movw	r24, r28
    2d7c:	81 58       	subi	r24, 0x81	; 129
    2d7e:	9e 4f       	sbci	r25, 0xFE	; 254
    2d80:	fc 01       	movw	r30, r24
    2d82:	60 81       	ld	r22, Z
    2d84:	71 81       	ldd	r23, Z+1	; 0x01
    2d86:	82 81       	ldd	r24, Z+2	; 0x02
    2d88:	93 81       	ldd	r25, Z+3	; 0x03
    2d8a:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    2d8e:	dc 01       	movw	r26, r24
    2d90:	cb 01       	movw	r24, r22
    2d92:	f8 01       	movw	r30, r16
    2d94:	91 83       	std	Z+1, r25	; 0x01
    2d96:	80 83       	st	Z, r24
    2d98:	ce 01       	movw	r24, r28
    2d9a:	89 57       	subi	r24, 0x79	; 121
    2d9c:	9e 4f       	sbci	r25, 0xFE	; 254
    2d9e:	9e 01       	movw	r18, r28
    2da0:	2d 57       	subi	r18, 0x7D	; 125
    2da2:	3e 4f       	sbci	r19, 0xFE	; 254
    2da4:	f9 01       	movw	r30, r18
    2da6:	20 81       	ld	r18, Z
    2da8:	31 81       	ldd	r19, Z+1	; 0x01
    2daa:	fc 01       	movw	r30, r24
    2dac:	31 83       	std	Z+1, r19	; 0x01
    2dae:	20 83       	st	Z, r18
    2db0:	ce 01       	movw	r24, r28
    2db2:	89 57       	subi	r24, 0x79	; 121
    2db4:	9e 4f       	sbci	r25, 0xFE	; 254
    2db6:	fc 01       	movw	r30, r24
    2db8:	80 81       	ld	r24, Z
    2dba:	91 81       	ldd	r25, Z+1	; 0x01
    2dbc:	01 97       	sbiw	r24, 0x01	; 1
    2dbe:	f1 f7       	brne	.-4      	; 0x2dbc <__stack+0x1cbd>
    2dc0:	9e 01       	movw	r18, r28
    2dc2:	29 57       	subi	r18, 0x79	; 121
    2dc4:	3e 4f       	sbci	r19, 0xFE	; 254
    2dc6:	f9 01       	movw	r30, r18
    2dc8:	91 83       	std	Z+1, r25	; 0x01
    2dca:	80 83       	st	Z, r24
				_delay_ms(200);
				to_uARM("M2210 F1000 T500\n");
    2dcc:	8f e6       	ldi	r24, 0x6F	; 111
    2dce:	91 e0       	ldi	r25, 0x01	; 1
    2dd0:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    2dd4:	80 e0       	ldi	r24, 0x00	; 0
    2dd6:	90 e0       	ldi	r25, 0x00	; 0
    2dd8:	aa ef       	ldi	r26, 0xFA	; 250
    2dda:	b3 e4       	ldi	r27, 0x43	; 67
    2ddc:	89 87       	std	Y+9, r24	; 0x09
    2dde:	9a 87       	std	Y+10, r25	; 0x0a
    2de0:	ab 87       	std	Y+11, r26	; 0x0b
    2de2:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2de4:	8e 01       	movw	r16, r28
    2de6:	0b 58       	subi	r16, 0x8B	; 139
    2de8:	1e 4f       	sbci	r17, 0xFE	; 254
    2dea:	20 e0       	ldi	r18, 0x00	; 0
    2dec:	30 e0       	ldi	r19, 0x00	; 0
    2dee:	4a e7       	ldi	r20, 0x7A	; 122
    2df0:	55 e4       	ldi	r21, 0x45	; 69
    2df2:	69 85       	ldd	r22, Y+9	; 0x09
    2df4:	7a 85       	ldd	r23, Y+10	; 0x0a
    2df6:	8b 85       	ldd	r24, Y+11	; 0x0b
    2df8:	9c 85       	ldd	r25, Y+12	; 0x0c
    2dfa:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    2dfe:	dc 01       	movw	r26, r24
    2e00:	cb 01       	movw	r24, r22
    2e02:	f8 01       	movw	r30, r16
    2e04:	80 83       	st	Z, r24
    2e06:	91 83       	std	Z+1, r25	; 0x01
    2e08:	a2 83       	std	Z+2, r26	; 0x02
    2e0a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2e0c:	ce 01       	movw	r24, r28
    2e0e:	8b 58       	subi	r24, 0x8B	; 139
    2e10:	9e 4f       	sbci	r25, 0xFE	; 254
    2e12:	20 e0       	ldi	r18, 0x00	; 0
    2e14:	30 e0       	ldi	r19, 0x00	; 0
    2e16:	40 e8       	ldi	r20, 0x80	; 128
    2e18:	5f e3       	ldi	r21, 0x3F	; 63
    2e1a:	fc 01       	movw	r30, r24
    2e1c:	60 81       	ld	r22, Z
    2e1e:	71 81       	ldd	r23, Z+1	; 0x01
    2e20:	82 81       	ldd	r24, Z+2	; 0x02
    2e22:	93 81       	ldd	r25, Z+3	; 0x03
    2e24:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    2e28:	88 23       	and	r24, r24
    2e2a:	4c f4       	brge	.+18     	; 0x2e3e <__stack+0x1d3f>
		__ticks = 1;
    2e2c:	ce 01       	movw	r24, r28
    2e2e:	87 58       	subi	r24, 0x87	; 135
    2e30:	9e 4f       	sbci	r25, 0xFE	; 254
    2e32:	21 e0       	ldi	r18, 0x01	; 1
    2e34:	30 e0       	ldi	r19, 0x00	; 0
    2e36:	fc 01       	movw	r30, r24
    2e38:	31 83       	std	Z+1, r19	; 0x01
    2e3a:	20 83       	st	Z, r18
    2e3c:	69 c0       	rjmp	.+210    	; 0x2f10 <__stack+0x1e11>
	else if (__tmp > 65535)
    2e3e:	ce 01       	movw	r24, r28
    2e40:	8b 58       	subi	r24, 0x8B	; 139
    2e42:	9e 4f       	sbci	r25, 0xFE	; 254
    2e44:	20 e0       	ldi	r18, 0x00	; 0
    2e46:	3f ef       	ldi	r19, 0xFF	; 255
    2e48:	4f e7       	ldi	r20, 0x7F	; 127
    2e4a:	57 e4       	ldi	r21, 0x47	; 71
    2e4c:	fc 01       	movw	r30, r24
    2e4e:	60 81       	ld	r22, Z
    2e50:	71 81       	ldd	r23, Z+1	; 0x01
    2e52:	82 81       	ldd	r24, Z+2	; 0x02
    2e54:	93 81       	ldd	r25, Z+3	; 0x03
    2e56:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    2e5a:	18 16       	cp	r1, r24
    2e5c:	0c f0       	brlt	.+2      	; 0x2e60 <__stack+0x1d61>
    2e5e:	46 c0       	rjmp	.+140    	; 0x2eec <__stack+0x1ded>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e60:	20 e0       	ldi	r18, 0x00	; 0
    2e62:	30 e0       	ldi	r19, 0x00	; 0
    2e64:	40 e2       	ldi	r20, 0x20	; 32
    2e66:	51 e4       	ldi	r21, 0x41	; 65
    2e68:	69 85       	ldd	r22, Y+9	; 0x09
    2e6a:	7a 85       	ldd	r23, Y+10	; 0x0a
    2e6c:	8b 85       	ldd	r24, Y+11	; 0x0b
    2e6e:	9c 85       	ldd	r25, Y+12	; 0x0c
    2e70:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    2e74:	dc 01       	movw	r26, r24
    2e76:	cb 01       	movw	r24, r22
    2e78:	8e 01       	movw	r16, r28
    2e7a:	07 58       	subi	r16, 0x87	; 135
    2e7c:	1e 4f       	sbci	r17, 0xFE	; 254
    2e7e:	bc 01       	movw	r22, r24
    2e80:	cd 01       	movw	r24, r26
    2e82:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    2e86:	dc 01       	movw	r26, r24
    2e88:	cb 01       	movw	r24, r22
    2e8a:	f8 01       	movw	r30, r16
    2e8c:	91 83       	std	Z+1, r25	; 0x01
    2e8e:	80 83       	st	Z, r24
    2e90:	24 c0       	rjmp	.+72     	; 0x2eda <__stack+0x1ddb>
    2e92:	ce 01       	movw	r24, r28
    2e94:	85 58       	subi	r24, 0x85	; 133
    2e96:	9e 4f       	sbci	r25, 0xFE	; 254
    2e98:	20 e9       	ldi	r18, 0x90	; 144
    2e9a:	31 e0       	ldi	r19, 0x01	; 1
    2e9c:	fc 01       	movw	r30, r24
    2e9e:	31 83       	std	Z+1, r19	; 0x01
    2ea0:	20 83       	st	Z, r18
    2ea2:	ce 01       	movw	r24, r28
    2ea4:	85 58       	subi	r24, 0x85	; 133
    2ea6:	9e 4f       	sbci	r25, 0xFE	; 254
    2ea8:	fc 01       	movw	r30, r24
    2eaa:	80 81       	ld	r24, Z
    2eac:	91 81       	ldd	r25, Z+1	; 0x01
    2eae:	01 97       	sbiw	r24, 0x01	; 1
    2eb0:	f1 f7       	brne	.-4      	; 0x2eae <__stack+0x1daf>
    2eb2:	9e 01       	movw	r18, r28
    2eb4:	25 58       	subi	r18, 0x85	; 133
    2eb6:	3e 4f       	sbci	r19, 0xFE	; 254
    2eb8:	f9 01       	movw	r30, r18
    2eba:	91 83       	std	Z+1, r25	; 0x01
    2ebc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ebe:	ce 01       	movw	r24, r28
    2ec0:	87 58       	subi	r24, 0x87	; 135
    2ec2:	9e 4f       	sbci	r25, 0xFE	; 254
    2ec4:	9e 01       	movw	r18, r28
    2ec6:	27 58       	subi	r18, 0x87	; 135
    2ec8:	3e 4f       	sbci	r19, 0xFE	; 254
    2eca:	f9 01       	movw	r30, r18
    2ecc:	20 81       	ld	r18, Z
    2ece:	31 81       	ldd	r19, Z+1	; 0x01
    2ed0:	21 50       	subi	r18, 0x01	; 1
    2ed2:	31 09       	sbc	r19, r1
    2ed4:	fc 01       	movw	r30, r24
    2ed6:	31 83       	std	Z+1, r19	; 0x01
    2ed8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2eda:	ce 01       	movw	r24, r28
    2edc:	87 58       	subi	r24, 0x87	; 135
    2ede:	9e 4f       	sbci	r25, 0xFE	; 254
    2ee0:	fc 01       	movw	r30, r24
    2ee2:	80 81       	ld	r24, Z
    2ee4:	91 81       	ldd	r25, Z+1	; 0x01
    2ee6:	89 2b       	or	r24, r25
    2ee8:	a1 f6       	brne	.-88     	; 0x2e92 <__stack+0x1d93>
    2eea:	2c c0       	rjmp	.+88     	; 0x2f44 <__stack+0x1e45>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2eec:	8e 01       	movw	r16, r28
    2eee:	07 58       	subi	r16, 0x87	; 135
    2ef0:	1e 4f       	sbci	r17, 0xFE	; 254
    2ef2:	ce 01       	movw	r24, r28
    2ef4:	8b 58       	subi	r24, 0x8B	; 139
    2ef6:	9e 4f       	sbci	r25, 0xFE	; 254
    2ef8:	fc 01       	movw	r30, r24
    2efa:	60 81       	ld	r22, Z
    2efc:	71 81       	ldd	r23, Z+1	; 0x01
    2efe:	82 81       	ldd	r24, Z+2	; 0x02
    2f00:	93 81       	ldd	r25, Z+3	; 0x03
    2f02:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    2f06:	dc 01       	movw	r26, r24
    2f08:	cb 01       	movw	r24, r22
    2f0a:	f8 01       	movw	r30, r16
    2f0c:	91 83       	std	Z+1, r25	; 0x01
    2f0e:	80 83       	st	Z, r24
    2f10:	ce 01       	movw	r24, r28
    2f12:	83 58       	subi	r24, 0x83	; 131
    2f14:	9e 4f       	sbci	r25, 0xFE	; 254
    2f16:	9e 01       	movw	r18, r28
    2f18:	27 58       	subi	r18, 0x87	; 135
    2f1a:	3e 4f       	sbci	r19, 0xFE	; 254
    2f1c:	f9 01       	movw	r30, r18
    2f1e:	20 81       	ld	r18, Z
    2f20:	31 81       	ldd	r19, Z+1	; 0x01
    2f22:	fc 01       	movw	r30, r24
    2f24:	31 83       	std	Z+1, r19	; 0x01
    2f26:	20 83       	st	Z, r18
    2f28:	ce 01       	movw	r24, r28
    2f2a:	83 58       	subi	r24, 0x83	; 131
    2f2c:	9e 4f       	sbci	r25, 0xFE	; 254
    2f2e:	fc 01       	movw	r30, r24
    2f30:	80 81       	ld	r24, Z
    2f32:	91 81       	ldd	r25, Z+1	; 0x01
    2f34:	01 97       	sbiw	r24, 0x01	; 1
    2f36:	f1 f7       	brne	.-4      	; 0x2f34 <__stack+0x1e35>
    2f38:	9e 01       	movw	r18, r28
    2f3a:	23 58       	subi	r18, 0x83	; 131
    2f3c:	3e 4f       	sbci	r19, 0xFE	; 254
    2f3e:	f9 01       	movw	r30, r18
    2f40:	91 83       	std	Z+1, r25	; 0x01
    2f42:	80 83       	st	Z, r24
				_delay_ms(500);
				to_uARM("M2210 F2000 T500\n");
    2f44:	81 e8       	ldi	r24, 0x81	; 129
    2f46:	91 e0       	ldi	r25, 0x01	; 1
    2f48:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
			}
		}
		if (uart_str_complete!=0)
    2f4c:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <uart_str_complete>
    2f50:	88 23       	and	r24, r24
    2f52:	11 f4       	brne	.+4      	; 0x2f58 <__stack+0x1e59>
    2f54:	0c 94 b8 03 	jmp	0x770	; 0x770 <main+0x54>
		{
			routine_done=0;
    2f58:	1f 82       	std	Y+7, r1	; 0x07
			PORTB|=0x01;
    2f5a:	85 e2       	ldi	r24, 0x25	; 37
    2f5c:	90 e0       	ldi	r25, 0x00	; 0
    2f5e:	25 e2       	ldi	r18, 0x25	; 37
    2f60:	30 e0       	ldi	r19, 0x00	; 0
    2f62:	f9 01       	movw	r30, r18
    2f64:	20 81       	ld	r18, Z
    2f66:	21 60       	ori	r18, 0x01	; 1
    2f68:	fc 01       	movw	r30, r24
    2f6a:	20 83       	st	Z, r18
			uart_str_complete=0;
    2f6c:	10 92 19 03 	sts	0x0319, r1	; 0x800319 <uart_str_complete>
			send_Byte_0('1');
    2f70:	81 e3       	ldi	r24, 0x31	; 49
    2f72:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
    2f76:	9e 01       	movw	r18, r28
    2f78:	27 58       	subi	r18, 0x87	; 135
    2f7a:	3f 4f       	sbci	r19, 0xFF	; 255
    2f7c:	80 e0       	ldi	r24, 0x00	; 0
    2f7e:	90 e0       	ldi	r25, 0x00	; 0
    2f80:	a8 ec       	ldi	r26, 0xC8	; 200
    2f82:	b2 e4       	ldi	r27, 0x42	; 66
    2f84:	f9 01       	movw	r30, r18
    2f86:	80 83       	st	Z, r24
    2f88:	91 83       	std	Z+1, r25	; 0x01
    2f8a:	a2 83       	std	Z+2, r26	; 0x02
    2f8c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2f8e:	8e 01       	movw	r16, r28
    2f90:	07 57       	subi	r16, 0x77	; 119
    2f92:	1e 4f       	sbci	r17, 0xFE	; 254
    2f94:	ce 01       	movw	r24, r28
    2f96:	87 58       	subi	r24, 0x87	; 135
    2f98:	9f 4f       	sbci	r25, 0xFF	; 255
    2f9a:	20 e0       	ldi	r18, 0x00	; 0
    2f9c:	30 e0       	ldi	r19, 0x00	; 0
    2f9e:	4a e7       	ldi	r20, 0x7A	; 122
    2fa0:	55 e4       	ldi	r21, 0x45	; 69
    2fa2:	fc 01       	movw	r30, r24
    2fa4:	60 81       	ld	r22, Z
    2fa6:	71 81       	ldd	r23, Z+1	; 0x01
    2fa8:	82 81       	ldd	r24, Z+2	; 0x02
    2faa:	93 81       	ldd	r25, Z+3	; 0x03
    2fac:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    2fb0:	dc 01       	movw	r26, r24
    2fb2:	cb 01       	movw	r24, r22
    2fb4:	f8 01       	movw	r30, r16
    2fb6:	80 83       	st	Z, r24
    2fb8:	91 83       	std	Z+1, r25	; 0x01
    2fba:	a2 83       	std	Z+2, r26	; 0x02
    2fbc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2fbe:	ce 01       	movw	r24, r28
    2fc0:	87 57       	subi	r24, 0x77	; 119
    2fc2:	9e 4f       	sbci	r25, 0xFE	; 254
    2fc4:	20 e0       	ldi	r18, 0x00	; 0
    2fc6:	30 e0       	ldi	r19, 0x00	; 0
    2fc8:	40 e8       	ldi	r20, 0x80	; 128
    2fca:	5f e3       	ldi	r21, 0x3F	; 63
    2fcc:	fc 01       	movw	r30, r24
    2fce:	60 81       	ld	r22, Z
    2fd0:	71 81       	ldd	r23, Z+1	; 0x01
    2fd2:	82 81       	ldd	r24, Z+2	; 0x02
    2fd4:	93 81       	ldd	r25, Z+3	; 0x03
    2fd6:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    2fda:	88 23       	and	r24, r24
    2fdc:	4c f4       	brge	.+18     	; 0x2ff0 <__stack+0x1ef1>
		__ticks = 1;
    2fde:	ce 01       	movw	r24, r28
    2fe0:	83 57       	subi	r24, 0x73	; 115
    2fe2:	9e 4f       	sbci	r25, 0xFE	; 254
    2fe4:	21 e0       	ldi	r18, 0x01	; 1
    2fe6:	30 e0       	ldi	r19, 0x00	; 0
    2fe8:	fc 01       	movw	r30, r24
    2fea:	31 83       	std	Z+1, r19	; 0x01
    2fec:	20 83       	st	Z, r18
    2fee:	6d c0       	rjmp	.+218    	; 0x30ca <__stack+0x1fcb>
	else if (__tmp > 65535)
    2ff0:	ce 01       	movw	r24, r28
    2ff2:	87 57       	subi	r24, 0x77	; 119
    2ff4:	9e 4f       	sbci	r25, 0xFE	; 254
    2ff6:	20 e0       	ldi	r18, 0x00	; 0
    2ff8:	3f ef       	ldi	r19, 0xFF	; 255
    2ffa:	4f e7       	ldi	r20, 0x7F	; 127
    2ffc:	57 e4       	ldi	r21, 0x47	; 71
    2ffe:	fc 01       	movw	r30, r24
    3000:	60 81       	ld	r22, Z
    3002:	71 81       	ldd	r23, Z+1	; 0x01
    3004:	82 81       	ldd	r24, Z+2	; 0x02
    3006:	93 81       	ldd	r25, Z+3	; 0x03
    3008:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    300c:	18 16       	cp	r1, r24
    300e:	0c f0       	brlt	.+2      	; 0x3012 <__stack+0x1f13>
    3010:	4a c0       	rjmp	.+148    	; 0x30a6 <__stack+0x1fa7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3012:	ce 01       	movw	r24, r28
    3014:	87 58       	subi	r24, 0x87	; 135
    3016:	9f 4f       	sbci	r25, 0xFF	; 255
    3018:	20 e0       	ldi	r18, 0x00	; 0
    301a:	30 e0       	ldi	r19, 0x00	; 0
    301c:	40 e2       	ldi	r20, 0x20	; 32
    301e:	51 e4       	ldi	r21, 0x41	; 65
    3020:	fc 01       	movw	r30, r24
    3022:	60 81       	ld	r22, Z
    3024:	71 81       	ldd	r23, Z+1	; 0x01
    3026:	82 81       	ldd	r24, Z+2	; 0x02
    3028:	93 81       	ldd	r25, Z+3	; 0x03
    302a:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    302e:	dc 01       	movw	r26, r24
    3030:	cb 01       	movw	r24, r22
    3032:	8e 01       	movw	r16, r28
    3034:	03 57       	subi	r16, 0x73	; 115
    3036:	1e 4f       	sbci	r17, 0xFE	; 254
    3038:	bc 01       	movw	r22, r24
    303a:	cd 01       	movw	r24, r26
    303c:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    3040:	dc 01       	movw	r26, r24
    3042:	cb 01       	movw	r24, r22
    3044:	f8 01       	movw	r30, r16
    3046:	91 83       	std	Z+1, r25	; 0x01
    3048:	80 83       	st	Z, r24
    304a:	24 c0       	rjmp	.+72     	; 0x3094 <__stack+0x1f95>
    304c:	ce 01       	movw	r24, r28
    304e:	81 57       	subi	r24, 0x71	; 113
    3050:	9e 4f       	sbci	r25, 0xFE	; 254
    3052:	20 e9       	ldi	r18, 0x90	; 144
    3054:	31 e0       	ldi	r19, 0x01	; 1
    3056:	fc 01       	movw	r30, r24
    3058:	31 83       	std	Z+1, r19	; 0x01
    305a:	20 83       	st	Z, r18
    305c:	ce 01       	movw	r24, r28
    305e:	81 57       	subi	r24, 0x71	; 113
    3060:	9e 4f       	sbci	r25, 0xFE	; 254
    3062:	fc 01       	movw	r30, r24
    3064:	80 81       	ld	r24, Z
    3066:	91 81       	ldd	r25, Z+1	; 0x01
    3068:	01 97       	sbiw	r24, 0x01	; 1
    306a:	f1 f7       	brne	.-4      	; 0x3068 <__stack+0x1f69>
    306c:	9e 01       	movw	r18, r28
    306e:	21 57       	subi	r18, 0x71	; 113
    3070:	3e 4f       	sbci	r19, 0xFE	; 254
    3072:	f9 01       	movw	r30, r18
    3074:	91 83       	std	Z+1, r25	; 0x01
    3076:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3078:	ce 01       	movw	r24, r28
    307a:	83 57       	subi	r24, 0x73	; 115
    307c:	9e 4f       	sbci	r25, 0xFE	; 254
    307e:	9e 01       	movw	r18, r28
    3080:	23 57       	subi	r18, 0x73	; 115
    3082:	3e 4f       	sbci	r19, 0xFE	; 254
    3084:	f9 01       	movw	r30, r18
    3086:	20 81       	ld	r18, Z
    3088:	31 81       	ldd	r19, Z+1	; 0x01
    308a:	21 50       	subi	r18, 0x01	; 1
    308c:	31 09       	sbc	r19, r1
    308e:	fc 01       	movw	r30, r24
    3090:	31 83       	std	Z+1, r19	; 0x01
    3092:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3094:	ce 01       	movw	r24, r28
    3096:	83 57       	subi	r24, 0x73	; 115
    3098:	9e 4f       	sbci	r25, 0xFE	; 254
    309a:	fc 01       	movw	r30, r24
    309c:	80 81       	ld	r24, Z
    309e:	91 81       	ldd	r25, Z+1	; 0x01
    30a0:	89 2b       	or	r24, r25
    30a2:	a1 f6       	brne	.-88     	; 0x304c <__stack+0x1f4d>
    30a4:	2c c0       	rjmp	.+88     	; 0x30fe <__stack+0x1fff>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    30a6:	8e 01       	movw	r16, r28
    30a8:	03 57       	subi	r16, 0x73	; 115
    30aa:	1e 4f       	sbci	r17, 0xFE	; 254
    30ac:	ce 01       	movw	r24, r28
    30ae:	87 57       	subi	r24, 0x77	; 119
    30b0:	9e 4f       	sbci	r25, 0xFE	; 254
    30b2:	fc 01       	movw	r30, r24
    30b4:	60 81       	ld	r22, Z
    30b6:	71 81       	ldd	r23, Z+1	; 0x01
    30b8:	82 81       	ldd	r24, Z+2	; 0x02
    30ba:	93 81       	ldd	r25, Z+3	; 0x03
    30bc:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    30c0:	dc 01       	movw	r26, r24
    30c2:	cb 01       	movw	r24, r22
    30c4:	f8 01       	movw	r30, r16
    30c6:	91 83       	std	Z+1, r25	; 0x01
    30c8:	80 83       	st	Z, r24
    30ca:	ce 01       	movw	r24, r28
    30cc:	8f 56       	subi	r24, 0x6F	; 111
    30ce:	9e 4f       	sbci	r25, 0xFE	; 254
    30d0:	9e 01       	movw	r18, r28
    30d2:	23 57       	subi	r18, 0x73	; 115
    30d4:	3e 4f       	sbci	r19, 0xFE	; 254
    30d6:	f9 01       	movw	r30, r18
    30d8:	20 81       	ld	r18, Z
    30da:	31 81       	ldd	r19, Z+1	; 0x01
    30dc:	fc 01       	movw	r30, r24
    30de:	31 83       	std	Z+1, r19	; 0x01
    30e0:	20 83       	st	Z, r18
    30e2:	ce 01       	movw	r24, r28
    30e4:	8f 56       	subi	r24, 0x6F	; 111
    30e6:	9e 4f       	sbci	r25, 0xFE	; 254
    30e8:	fc 01       	movw	r30, r24
    30ea:	80 81       	ld	r24, Z
    30ec:	91 81       	ldd	r25, Z+1	; 0x01
    30ee:	01 97       	sbiw	r24, 0x01	; 1
    30f0:	f1 f7       	brne	.-4      	; 0x30ee <__stack+0x1fef>
    30f2:	9e 01       	movw	r18, r28
    30f4:	2f 56       	subi	r18, 0x6F	; 111
    30f6:	3e 4f       	sbci	r19, 0xFE	; 254
    30f8:	f9 01       	movw	r30, r18
    30fa:	91 83       	std	Z+1, r25	; 0x01
    30fc:	80 83       	st	Z, r24
			_delay_ms(100);	
			for (counter=0;counter<=data_bytes_recieved;counter++)
    30fe:	1e 82       	std	Y+6, r1	; 0x06
    3100:	53 c2       	rjmp	.+1190   	; 0x35a8 <__stack+0x24a9>
			{
				switch (final_data[counter])//final data decoding
    3102:	8e 81       	ldd	r24, Y+6	; 0x06
    3104:	88 2f       	mov	r24, r24
    3106:	90 e0       	ldi	r25, 0x00	; 0
    3108:	82 55       	subi	r24, 0x52	; 82
    310a:	9c 4f       	sbci	r25, 0xFC	; 252
    310c:	fc 01       	movw	r30, r24
    310e:	80 81       	ld	r24, Z
    3110:	88 2f       	mov	r24, r24
    3112:	90 e0       	ldi	r25, 0x00	; 0
    3114:	88 35       	cpi	r24, 0x58	; 88
    3116:	91 05       	cpc	r25, r1
    3118:	49 f0       	breq	.+18     	; 0x312c <__stack+0x202d>
    311a:	89 35       	cpi	r24, 0x59	; 89
    311c:	91 05       	cpc	r25, r1
    311e:	09 f4       	brne	.+2      	; 0x3122 <__stack+0x2023>
    3120:	20 c1       	rjmp	.+576    	; 0x3362 <__stack+0x2263>
    3122:	8f 34       	cpi	r24, 0x4F	; 79
    3124:	91 05       	cpc	r25, r1
    3126:	09 f4       	brne	.+2      	; 0x312a <__stack+0x202b>
    3128:	37 c2       	rjmp	.+1134   	; 0x3598 <__stack+0x2499>
    312a:	3b c2       	rjmp	.+1142   	; 0x35a2 <__stack+0x24a3>
				{
					case 'X':
						recieved_Y=(final_data[counter+1]-48)*1000+(final_data[counter+2]-48)*100+(final_data[counter+3]-48)*10+final_data[counter+4]-48;
    312c:	8e 81       	ldd	r24, Y+6	; 0x06
    312e:	88 2f       	mov	r24, r24
    3130:	90 e0       	ldi	r25, 0x00	; 0
    3132:	01 96       	adiw	r24, 0x01	; 1
    3134:	82 55       	subi	r24, 0x52	; 82
    3136:	9c 4f       	sbci	r25, 0xFC	; 252
    3138:	fc 01       	movw	r30, r24
    313a:	80 81       	ld	r24, Z
    313c:	88 2f       	mov	r24, r24
    313e:	90 e0       	ldi	r25, 0x00	; 0
    3140:	ac 01       	movw	r20, r24
    3142:	40 53       	subi	r20, 0x30	; 48
    3144:	51 09       	sbc	r21, r1
    3146:	88 ee       	ldi	r24, 0xE8	; 232
    3148:	93 e0       	ldi	r25, 0x03	; 3
    314a:	48 9f       	mul	r20, r24
    314c:	90 01       	movw	r18, r0
    314e:	49 9f       	mul	r20, r25
    3150:	30 0d       	add	r19, r0
    3152:	58 9f       	mul	r21, r24
    3154:	30 0d       	add	r19, r0
    3156:	11 24       	eor	r1, r1
    3158:	8e 81       	ldd	r24, Y+6	; 0x06
    315a:	88 2f       	mov	r24, r24
    315c:	90 e0       	ldi	r25, 0x00	; 0
    315e:	02 96       	adiw	r24, 0x02	; 2
    3160:	82 55       	subi	r24, 0x52	; 82
    3162:	9c 4f       	sbci	r25, 0xFC	; 252
    3164:	fc 01       	movw	r30, r24
    3166:	80 81       	ld	r24, Z
    3168:	88 2f       	mov	r24, r24
    316a:	90 e0       	ldi	r25, 0x00	; 0
    316c:	ac 01       	movw	r20, r24
    316e:	40 53       	subi	r20, 0x30	; 48
    3170:	51 09       	sbc	r21, r1
    3172:	64 e6       	ldi	r22, 0x64	; 100
    3174:	64 9f       	mul	r22, r20
    3176:	c0 01       	movw	r24, r0
    3178:	65 9f       	mul	r22, r21
    317a:	90 0d       	add	r25, r0
    317c:	11 24       	eor	r1, r1
    317e:	28 0f       	add	r18, r24
    3180:	39 1f       	adc	r19, r25
    3182:	8e 81       	ldd	r24, Y+6	; 0x06
    3184:	88 2f       	mov	r24, r24
    3186:	90 e0       	ldi	r25, 0x00	; 0
    3188:	03 96       	adiw	r24, 0x03	; 3
    318a:	82 55       	subi	r24, 0x52	; 82
    318c:	9c 4f       	sbci	r25, 0xFC	; 252
    318e:	fc 01       	movw	r30, r24
    3190:	80 81       	ld	r24, Z
    3192:	88 2f       	mov	r24, r24
    3194:	90 e0       	ldi	r25, 0x00	; 0
    3196:	c0 97       	sbiw	r24, 0x30	; 48
    3198:	88 0f       	add	r24, r24
    319a:	99 1f       	adc	r25, r25
    319c:	ac 01       	movw	r20, r24
    319e:	44 0f       	add	r20, r20
    31a0:	55 1f       	adc	r21, r21
    31a2:	44 0f       	add	r20, r20
    31a4:	55 1f       	adc	r21, r21
    31a6:	84 0f       	add	r24, r20
    31a8:	95 1f       	adc	r25, r21
    31aa:	28 0f       	add	r18, r24
    31ac:	39 1f       	adc	r19, r25
    31ae:	8e 81       	ldd	r24, Y+6	; 0x06
    31b0:	88 2f       	mov	r24, r24
    31b2:	90 e0       	ldi	r25, 0x00	; 0
    31b4:	04 96       	adiw	r24, 0x04	; 4
    31b6:	82 55       	subi	r24, 0x52	; 82
    31b8:	9c 4f       	sbci	r25, 0xFC	; 252
    31ba:	fc 01       	movw	r30, r24
    31bc:	80 81       	ld	r24, Z
    31be:	88 2f       	mov	r24, r24
    31c0:	90 e0       	ldi	r25, 0x00	; 0
    31c2:	82 0f       	add	r24, r18
    31c4:	93 1f       	adc	r25, r19
    31c6:	c0 97       	sbiw	r24, 0x30	; 48
    31c8:	9c 83       	std	Y+4, r25	; 0x04
    31ca:	8b 83       	std	Y+3, r24	; 0x03
						send_Byte_0('1');
    31cc:	81 e3       	ldi	r24, 0x31	; 49
    31ce:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
    31d2:	9e 01       	movw	r18, r28
    31d4:	27 59       	subi	r18, 0x97	; 151
    31d6:	3f 4f       	sbci	r19, 0xFF	; 255
    31d8:	80 e0       	ldi	r24, 0x00	; 0
    31da:	90 e0       	ldi	r25, 0x00	; 0
    31dc:	a8 ec       	ldi	r26, 0xC8	; 200
    31de:	b2 e4       	ldi	r27, 0x42	; 66
    31e0:	f9 01       	movw	r30, r18
    31e2:	80 83       	st	Z, r24
    31e4:	91 83       	std	Z+1, r25	; 0x01
    31e6:	a2 83       	std	Z+2, r26	; 0x02
    31e8:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    31ea:	8e 01       	movw	r16, r28
    31ec:	0d 56       	subi	r16, 0x6D	; 109
    31ee:	1e 4f       	sbci	r17, 0xFE	; 254
    31f0:	ce 01       	movw	r24, r28
    31f2:	87 59       	subi	r24, 0x97	; 151
    31f4:	9f 4f       	sbci	r25, 0xFF	; 255
    31f6:	20 e0       	ldi	r18, 0x00	; 0
    31f8:	30 e0       	ldi	r19, 0x00	; 0
    31fa:	4a e7       	ldi	r20, 0x7A	; 122
    31fc:	55 e4       	ldi	r21, 0x45	; 69
    31fe:	fc 01       	movw	r30, r24
    3200:	60 81       	ld	r22, Z
    3202:	71 81       	ldd	r23, Z+1	; 0x01
    3204:	82 81       	ldd	r24, Z+2	; 0x02
    3206:	93 81       	ldd	r25, Z+3	; 0x03
    3208:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    320c:	dc 01       	movw	r26, r24
    320e:	cb 01       	movw	r24, r22
    3210:	f8 01       	movw	r30, r16
    3212:	80 83       	st	Z, r24
    3214:	91 83       	std	Z+1, r25	; 0x01
    3216:	a2 83       	std	Z+2, r26	; 0x02
    3218:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    321a:	ce 01       	movw	r24, r28
    321c:	8d 56       	subi	r24, 0x6D	; 109
    321e:	9e 4f       	sbci	r25, 0xFE	; 254
    3220:	20 e0       	ldi	r18, 0x00	; 0
    3222:	30 e0       	ldi	r19, 0x00	; 0
    3224:	40 e8       	ldi	r20, 0x80	; 128
    3226:	5f e3       	ldi	r21, 0x3F	; 63
    3228:	fc 01       	movw	r30, r24
    322a:	60 81       	ld	r22, Z
    322c:	71 81       	ldd	r23, Z+1	; 0x01
    322e:	82 81       	ldd	r24, Z+2	; 0x02
    3230:	93 81       	ldd	r25, Z+3	; 0x03
    3232:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    3236:	88 23       	and	r24, r24
    3238:	4c f4       	brge	.+18     	; 0x324c <__stack+0x214d>
		__ticks = 1;
    323a:	ce 01       	movw	r24, r28
    323c:	89 56       	subi	r24, 0x69	; 105
    323e:	9e 4f       	sbci	r25, 0xFE	; 254
    3240:	21 e0       	ldi	r18, 0x01	; 1
    3242:	30 e0       	ldi	r19, 0x00	; 0
    3244:	fc 01       	movw	r30, r24
    3246:	31 83       	std	Z+1, r19	; 0x01
    3248:	20 83       	st	Z, r18
    324a:	6d c0       	rjmp	.+218    	; 0x3326 <__stack+0x2227>
	else if (__tmp > 65535)
    324c:	ce 01       	movw	r24, r28
    324e:	8d 56       	subi	r24, 0x6D	; 109
    3250:	9e 4f       	sbci	r25, 0xFE	; 254
    3252:	20 e0       	ldi	r18, 0x00	; 0
    3254:	3f ef       	ldi	r19, 0xFF	; 255
    3256:	4f e7       	ldi	r20, 0x7F	; 127
    3258:	57 e4       	ldi	r21, 0x47	; 71
    325a:	fc 01       	movw	r30, r24
    325c:	60 81       	ld	r22, Z
    325e:	71 81       	ldd	r23, Z+1	; 0x01
    3260:	82 81       	ldd	r24, Z+2	; 0x02
    3262:	93 81       	ldd	r25, Z+3	; 0x03
    3264:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    3268:	18 16       	cp	r1, r24
    326a:	0c f0       	brlt	.+2      	; 0x326e <__stack+0x216f>
    326c:	4a c0       	rjmp	.+148    	; 0x3302 <__stack+0x2203>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    326e:	ce 01       	movw	r24, r28
    3270:	87 59       	subi	r24, 0x97	; 151
    3272:	9f 4f       	sbci	r25, 0xFF	; 255
    3274:	20 e0       	ldi	r18, 0x00	; 0
    3276:	30 e0       	ldi	r19, 0x00	; 0
    3278:	40 e2       	ldi	r20, 0x20	; 32
    327a:	51 e4       	ldi	r21, 0x41	; 65
    327c:	fc 01       	movw	r30, r24
    327e:	60 81       	ld	r22, Z
    3280:	71 81       	ldd	r23, Z+1	; 0x01
    3282:	82 81       	ldd	r24, Z+2	; 0x02
    3284:	93 81       	ldd	r25, Z+3	; 0x03
    3286:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    328a:	dc 01       	movw	r26, r24
    328c:	cb 01       	movw	r24, r22
    328e:	8e 01       	movw	r16, r28
    3290:	09 56       	subi	r16, 0x69	; 105
    3292:	1e 4f       	sbci	r17, 0xFE	; 254
    3294:	bc 01       	movw	r22, r24
    3296:	cd 01       	movw	r24, r26
    3298:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    329c:	dc 01       	movw	r26, r24
    329e:	cb 01       	movw	r24, r22
    32a0:	f8 01       	movw	r30, r16
    32a2:	91 83       	std	Z+1, r25	; 0x01
    32a4:	80 83       	st	Z, r24
    32a6:	24 c0       	rjmp	.+72     	; 0x32f0 <__stack+0x21f1>
    32a8:	ce 01       	movw	r24, r28
    32aa:	87 56       	subi	r24, 0x67	; 103
    32ac:	9e 4f       	sbci	r25, 0xFE	; 254
    32ae:	20 e9       	ldi	r18, 0x90	; 144
    32b0:	31 e0       	ldi	r19, 0x01	; 1
    32b2:	fc 01       	movw	r30, r24
    32b4:	31 83       	std	Z+1, r19	; 0x01
    32b6:	20 83       	st	Z, r18
    32b8:	ce 01       	movw	r24, r28
    32ba:	87 56       	subi	r24, 0x67	; 103
    32bc:	9e 4f       	sbci	r25, 0xFE	; 254
    32be:	fc 01       	movw	r30, r24
    32c0:	80 81       	ld	r24, Z
    32c2:	91 81       	ldd	r25, Z+1	; 0x01
    32c4:	01 97       	sbiw	r24, 0x01	; 1
    32c6:	f1 f7       	brne	.-4      	; 0x32c4 <__stack+0x21c5>
    32c8:	9e 01       	movw	r18, r28
    32ca:	27 56       	subi	r18, 0x67	; 103
    32cc:	3e 4f       	sbci	r19, 0xFE	; 254
    32ce:	f9 01       	movw	r30, r18
    32d0:	91 83       	std	Z+1, r25	; 0x01
    32d2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    32d4:	ce 01       	movw	r24, r28
    32d6:	89 56       	subi	r24, 0x69	; 105
    32d8:	9e 4f       	sbci	r25, 0xFE	; 254
    32da:	9e 01       	movw	r18, r28
    32dc:	29 56       	subi	r18, 0x69	; 105
    32de:	3e 4f       	sbci	r19, 0xFE	; 254
    32e0:	f9 01       	movw	r30, r18
    32e2:	20 81       	ld	r18, Z
    32e4:	31 81       	ldd	r19, Z+1	; 0x01
    32e6:	21 50       	subi	r18, 0x01	; 1
    32e8:	31 09       	sbc	r19, r1
    32ea:	fc 01       	movw	r30, r24
    32ec:	31 83       	std	Z+1, r19	; 0x01
    32ee:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    32f0:	ce 01       	movw	r24, r28
    32f2:	89 56       	subi	r24, 0x69	; 105
    32f4:	9e 4f       	sbci	r25, 0xFE	; 254
    32f6:	fc 01       	movw	r30, r24
    32f8:	80 81       	ld	r24, Z
    32fa:	91 81       	ldd	r25, Z+1	; 0x01
    32fc:	89 2b       	or	r24, r25
    32fe:	a1 f6       	brne	.-88     	; 0x32a8 <__stack+0x21a9>
    3300:	2c c0       	rjmp	.+88     	; 0x335a <__stack+0x225b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3302:	8e 01       	movw	r16, r28
    3304:	09 56       	subi	r16, 0x69	; 105
    3306:	1e 4f       	sbci	r17, 0xFE	; 254
    3308:	ce 01       	movw	r24, r28
    330a:	8d 56       	subi	r24, 0x6D	; 109
    330c:	9e 4f       	sbci	r25, 0xFE	; 254
    330e:	fc 01       	movw	r30, r24
    3310:	60 81       	ld	r22, Z
    3312:	71 81       	ldd	r23, Z+1	; 0x01
    3314:	82 81       	ldd	r24, Z+2	; 0x02
    3316:	93 81       	ldd	r25, Z+3	; 0x03
    3318:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    331c:	dc 01       	movw	r26, r24
    331e:	cb 01       	movw	r24, r22
    3320:	f8 01       	movw	r30, r16
    3322:	91 83       	std	Z+1, r25	; 0x01
    3324:	80 83       	st	Z, r24
    3326:	ce 01       	movw	r24, r28
    3328:	85 56       	subi	r24, 0x65	; 101
    332a:	9e 4f       	sbci	r25, 0xFE	; 254
    332c:	9e 01       	movw	r18, r28
    332e:	29 56       	subi	r18, 0x69	; 105
    3330:	3e 4f       	sbci	r19, 0xFE	; 254
    3332:	f9 01       	movw	r30, r18
    3334:	20 81       	ld	r18, Z
    3336:	31 81       	ldd	r19, Z+1	; 0x01
    3338:	fc 01       	movw	r30, r24
    333a:	31 83       	std	Z+1, r19	; 0x01
    333c:	20 83       	st	Z, r18
    333e:	ce 01       	movw	r24, r28
    3340:	85 56       	subi	r24, 0x65	; 101
    3342:	9e 4f       	sbci	r25, 0xFE	; 254
    3344:	fc 01       	movw	r30, r24
    3346:	80 81       	ld	r24, Z
    3348:	91 81       	ldd	r25, Z+1	; 0x01
    334a:	01 97       	sbiw	r24, 0x01	; 1
    334c:	f1 f7       	brne	.-4      	; 0x334a <__stack+0x224b>
    334e:	9e 01       	movw	r18, r28
    3350:	25 56       	subi	r18, 0x65	; 101
    3352:	3e 4f       	sbci	r19, 0xFE	; 254
    3354:	f9 01       	movw	r30, r18
    3356:	91 83       	std	Z+1, r25	; 0x01
    3358:	80 83       	st	Z, r24
						_delay_ms(100);
						check++;
    335a:	8d 81       	ldd	r24, Y+5	; 0x05
    335c:	8f 5f       	subi	r24, 0xFF	; 255
    335e:	8d 83       	std	Y+5, r24	; 0x05
					break;
    3360:	20 c1       	rjmp	.+576    	; 0x35a2 <__stack+0x24a3>
				
					case 'Y':
						recieved_X=(final_data[counter+1]-48)*1000+(final_data[counter+2]-48)*100+(final_data[counter+3]-48)*10+final_data[counter+4]-48;
    3362:	8e 81       	ldd	r24, Y+6	; 0x06
    3364:	88 2f       	mov	r24, r24
    3366:	90 e0       	ldi	r25, 0x00	; 0
    3368:	01 96       	adiw	r24, 0x01	; 1
    336a:	82 55       	subi	r24, 0x52	; 82
    336c:	9c 4f       	sbci	r25, 0xFC	; 252
    336e:	fc 01       	movw	r30, r24
    3370:	80 81       	ld	r24, Z
    3372:	88 2f       	mov	r24, r24
    3374:	90 e0       	ldi	r25, 0x00	; 0
    3376:	ac 01       	movw	r20, r24
    3378:	40 53       	subi	r20, 0x30	; 48
    337a:	51 09       	sbc	r21, r1
    337c:	88 ee       	ldi	r24, 0xE8	; 232
    337e:	93 e0       	ldi	r25, 0x03	; 3
    3380:	48 9f       	mul	r20, r24
    3382:	90 01       	movw	r18, r0
    3384:	49 9f       	mul	r20, r25
    3386:	30 0d       	add	r19, r0
    3388:	58 9f       	mul	r21, r24
    338a:	30 0d       	add	r19, r0
    338c:	11 24       	eor	r1, r1
    338e:	8e 81       	ldd	r24, Y+6	; 0x06
    3390:	88 2f       	mov	r24, r24
    3392:	90 e0       	ldi	r25, 0x00	; 0
    3394:	02 96       	adiw	r24, 0x02	; 2
    3396:	82 55       	subi	r24, 0x52	; 82
    3398:	9c 4f       	sbci	r25, 0xFC	; 252
    339a:	fc 01       	movw	r30, r24
    339c:	80 81       	ld	r24, Z
    339e:	88 2f       	mov	r24, r24
    33a0:	90 e0       	ldi	r25, 0x00	; 0
    33a2:	ac 01       	movw	r20, r24
    33a4:	40 53       	subi	r20, 0x30	; 48
    33a6:	51 09       	sbc	r21, r1
    33a8:	64 e6       	ldi	r22, 0x64	; 100
    33aa:	64 9f       	mul	r22, r20
    33ac:	c0 01       	movw	r24, r0
    33ae:	65 9f       	mul	r22, r21
    33b0:	90 0d       	add	r25, r0
    33b2:	11 24       	eor	r1, r1
    33b4:	28 0f       	add	r18, r24
    33b6:	39 1f       	adc	r19, r25
    33b8:	8e 81       	ldd	r24, Y+6	; 0x06
    33ba:	88 2f       	mov	r24, r24
    33bc:	90 e0       	ldi	r25, 0x00	; 0
    33be:	03 96       	adiw	r24, 0x03	; 3
    33c0:	82 55       	subi	r24, 0x52	; 82
    33c2:	9c 4f       	sbci	r25, 0xFC	; 252
    33c4:	fc 01       	movw	r30, r24
    33c6:	80 81       	ld	r24, Z
    33c8:	88 2f       	mov	r24, r24
    33ca:	90 e0       	ldi	r25, 0x00	; 0
    33cc:	c0 97       	sbiw	r24, 0x30	; 48
    33ce:	88 0f       	add	r24, r24
    33d0:	99 1f       	adc	r25, r25
    33d2:	ac 01       	movw	r20, r24
    33d4:	44 0f       	add	r20, r20
    33d6:	55 1f       	adc	r21, r21
    33d8:	44 0f       	add	r20, r20
    33da:	55 1f       	adc	r21, r21
    33dc:	84 0f       	add	r24, r20
    33de:	95 1f       	adc	r25, r21
    33e0:	28 0f       	add	r18, r24
    33e2:	39 1f       	adc	r19, r25
    33e4:	8e 81       	ldd	r24, Y+6	; 0x06
    33e6:	88 2f       	mov	r24, r24
    33e8:	90 e0       	ldi	r25, 0x00	; 0
    33ea:	04 96       	adiw	r24, 0x04	; 4
    33ec:	82 55       	subi	r24, 0x52	; 82
    33ee:	9c 4f       	sbci	r25, 0xFC	; 252
    33f0:	fc 01       	movw	r30, r24
    33f2:	80 81       	ld	r24, Z
    33f4:	88 2f       	mov	r24, r24
    33f6:	90 e0       	ldi	r25, 0x00	; 0
    33f8:	82 0f       	add	r24, r18
    33fa:	93 1f       	adc	r25, r19
    33fc:	c0 97       	sbiw	r24, 0x30	; 48
    33fe:	9a 83       	std	Y+2, r25	; 0x02
    3400:	89 83       	std	Y+1, r24	; 0x01
						send_Byte_0('1');
    3402:	81 e3       	ldi	r24, 0x31	; 49
    3404:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
    3408:	9e 01       	movw	r18, r28
    340a:	23 59       	subi	r18, 0x93	; 147
    340c:	3f 4f       	sbci	r19, 0xFF	; 255
    340e:	80 e0       	ldi	r24, 0x00	; 0
    3410:	90 e0       	ldi	r25, 0x00	; 0
    3412:	a8 ec       	ldi	r26, 0xC8	; 200
    3414:	b2 e4       	ldi	r27, 0x42	; 66
    3416:	f9 01       	movw	r30, r18
    3418:	80 83       	st	Z, r24
    341a:	91 83       	std	Z+1, r25	; 0x01
    341c:	a2 83       	std	Z+2, r26	; 0x02
    341e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3420:	8e 01       	movw	r16, r28
    3422:	03 56       	subi	r16, 0x63	; 99
    3424:	1e 4f       	sbci	r17, 0xFE	; 254
    3426:	ce 01       	movw	r24, r28
    3428:	83 59       	subi	r24, 0x93	; 147
    342a:	9f 4f       	sbci	r25, 0xFF	; 255
    342c:	20 e0       	ldi	r18, 0x00	; 0
    342e:	30 e0       	ldi	r19, 0x00	; 0
    3430:	4a e7       	ldi	r20, 0x7A	; 122
    3432:	55 e4       	ldi	r21, 0x45	; 69
    3434:	fc 01       	movw	r30, r24
    3436:	60 81       	ld	r22, Z
    3438:	71 81       	ldd	r23, Z+1	; 0x01
    343a:	82 81       	ldd	r24, Z+2	; 0x02
    343c:	93 81       	ldd	r25, Z+3	; 0x03
    343e:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    3442:	dc 01       	movw	r26, r24
    3444:	cb 01       	movw	r24, r22
    3446:	f8 01       	movw	r30, r16
    3448:	80 83       	st	Z, r24
    344a:	91 83       	std	Z+1, r25	; 0x01
    344c:	a2 83       	std	Z+2, r26	; 0x02
    344e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3450:	ce 01       	movw	r24, r28
    3452:	83 56       	subi	r24, 0x63	; 99
    3454:	9e 4f       	sbci	r25, 0xFE	; 254
    3456:	20 e0       	ldi	r18, 0x00	; 0
    3458:	30 e0       	ldi	r19, 0x00	; 0
    345a:	40 e8       	ldi	r20, 0x80	; 128
    345c:	5f e3       	ldi	r21, 0x3F	; 63
    345e:	fc 01       	movw	r30, r24
    3460:	60 81       	ld	r22, Z
    3462:	71 81       	ldd	r23, Z+1	; 0x01
    3464:	82 81       	ldd	r24, Z+2	; 0x02
    3466:	93 81       	ldd	r25, Z+3	; 0x03
    3468:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    346c:	88 23       	and	r24, r24
    346e:	4c f4       	brge	.+18     	; 0x3482 <__stack+0x2383>
		__ticks = 1;
    3470:	ce 01       	movw	r24, r28
    3472:	8f 55       	subi	r24, 0x5F	; 95
    3474:	9e 4f       	sbci	r25, 0xFE	; 254
    3476:	21 e0       	ldi	r18, 0x01	; 1
    3478:	30 e0       	ldi	r19, 0x00	; 0
    347a:	fc 01       	movw	r30, r24
    347c:	31 83       	std	Z+1, r19	; 0x01
    347e:	20 83       	st	Z, r18
    3480:	6d c0       	rjmp	.+218    	; 0x355c <__stack+0x245d>
	else if (__tmp > 65535)
    3482:	ce 01       	movw	r24, r28
    3484:	83 56       	subi	r24, 0x63	; 99
    3486:	9e 4f       	sbci	r25, 0xFE	; 254
    3488:	20 e0       	ldi	r18, 0x00	; 0
    348a:	3f ef       	ldi	r19, 0xFF	; 255
    348c:	4f e7       	ldi	r20, 0x7F	; 127
    348e:	57 e4       	ldi	r21, 0x47	; 71
    3490:	fc 01       	movw	r30, r24
    3492:	60 81       	ld	r22, Z
    3494:	71 81       	ldd	r23, Z+1	; 0x01
    3496:	82 81       	ldd	r24, Z+2	; 0x02
    3498:	93 81       	ldd	r25, Z+3	; 0x03
    349a:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    349e:	18 16       	cp	r1, r24
    34a0:	0c f0       	brlt	.+2      	; 0x34a4 <__stack+0x23a5>
    34a2:	4a c0       	rjmp	.+148    	; 0x3538 <__stack+0x2439>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34a4:	ce 01       	movw	r24, r28
    34a6:	83 59       	subi	r24, 0x93	; 147
    34a8:	9f 4f       	sbci	r25, 0xFF	; 255
    34aa:	20 e0       	ldi	r18, 0x00	; 0
    34ac:	30 e0       	ldi	r19, 0x00	; 0
    34ae:	40 e2       	ldi	r20, 0x20	; 32
    34b0:	51 e4       	ldi	r21, 0x41	; 65
    34b2:	fc 01       	movw	r30, r24
    34b4:	60 81       	ld	r22, Z
    34b6:	71 81       	ldd	r23, Z+1	; 0x01
    34b8:	82 81       	ldd	r24, Z+2	; 0x02
    34ba:	93 81       	ldd	r25, Z+3	; 0x03
    34bc:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    34c0:	dc 01       	movw	r26, r24
    34c2:	cb 01       	movw	r24, r22
    34c4:	8e 01       	movw	r16, r28
    34c6:	0f 55       	subi	r16, 0x5F	; 95
    34c8:	1e 4f       	sbci	r17, 0xFE	; 254
    34ca:	bc 01       	movw	r22, r24
    34cc:	cd 01       	movw	r24, r26
    34ce:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    34d2:	dc 01       	movw	r26, r24
    34d4:	cb 01       	movw	r24, r22
    34d6:	f8 01       	movw	r30, r16
    34d8:	91 83       	std	Z+1, r25	; 0x01
    34da:	80 83       	st	Z, r24
    34dc:	24 c0       	rjmp	.+72     	; 0x3526 <__stack+0x2427>
    34de:	ce 01       	movw	r24, r28
    34e0:	8d 55       	subi	r24, 0x5D	; 93
    34e2:	9e 4f       	sbci	r25, 0xFE	; 254
    34e4:	20 e9       	ldi	r18, 0x90	; 144
    34e6:	31 e0       	ldi	r19, 0x01	; 1
    34e8:	fc 01       	movw	r30, r24
    34ea:	31 83       	std	Z+1, r19	; 0x01
    34ec:	20 83       	st	Z, r18
    34ee:	ce 01       	movw	r24, r28
    34f0:	8d 55       	subi	r24, 0x5D	; 93
    34f2:	9e 4f       	sbci	r25, 0xFE	; 254
    34f4:	fc 01       	movw	r30, r24
    34f6:	80 81       	ld	r24, Z
    34f8:	91 81       	ldd	r25, Z+1	; 0x01
    34fa:	01 97       	sbiw	r24, 0x01	; 1
    34fc:	f1 f7       	brne	.-4      	; 0x34fa <__stack+0x23fb>
    34fe:	9e 01       	movw	r18, r28
    3500:	2d 55       	subi	r18, 0x5D	; 93
    3502:	3e 4f       	sbci	r19, 0xFE	; 254
    3504:	f9 01       	movw	r30, r18
    3506:	91 83       	std	Z+1, r25	; 0x01
    3508:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    350a:	ce 01       	movw	r24, r28
    350c:	8f 55       	subi	r24, 0x5F	; 95
    350e:	9e 4f       	sbci	r25, 0xFE	; 254
    3510:	9e 01       	movw	r18, r28
    3512:	2f 55       	subi	r18, 0x5F	; 95
    3514:	3e 4f       	sbci	r19, 0xFE	; 254
    3516:	f9 01       	movw	r30, r18
    3518:	20 81       	ld	r18, Z
    351a:	31 81       	ldd	r19, Z+1	; 0x01
    351c:	21 50       	subi	r18, 0x01	; 1
    351e:	31 09       	sbc	r19, r1
    3520:	fc 01       	movw	r30, r24
    3522:	31 83       	std	Z+1, r19	; 0x01
    3524:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3526:	ce 01       	movw	r24, r28
    3528:	8f 55       	subi	r24, 0x5F	; 95
    352a:	9e 4f       	sbci	r25, 0xFE	; 254
    352c:	fc 01       	movw	r30, r24
    352e:	80 81       	ld	r24, Z
    3530:	91 81       	ldd	r25, Z+1	; 0x01
    3532:	89 2b       	or	r24, r25
    3534:	a1 f6       	brne	.-88     	; 0x34de <__stack+0x23df>
    3536:	2c c0       	rjmp	.+88     	; 0x3590 <__stack+0x2491>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3538:	8e 01       	movw	r16, r28
    353a:	0f 55       	subi	r16, 0x5F	; 95
    353c:	1e 4f       	sbci	r17, 0xFE	; 254
    353e:	ce 01       	movw	r24, r28
    3540:	83 56       	subi	r24, 0x63	; 99
    3542:	9e 4f       	sbci	r25, 0xFE	; 254
    3544:	fc 01       	movw	r30, r24
    3546:	60 81       	ld	r22, Z
    3548:	71 81       	ldd	r23, Z+1	; 0x01
    354a:	82 81       	ldd	r24, Z+2	; 0x02
    354c:	93 81       	ldd	r25, Z+3	; 0x03
    354e:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    3552:	dc 01       	movw	r26, r24
    3554:	cb 01       	movw	r24, r22
    3556:	f8 01       	movw	r30, r16
    3558:	91 83       	std	Z+1, r25	; 0x01
    355a:	80 83       	st	Z, r24
    355c:	ce 01       	movw	r24, r28
    355e:	8b 55       	subi	r24, 0x5B	; 91
    3560:	9e 4f       	sbci	r25, 0xFE	; 254
    3562:	9e 01       	movw	r18, r28
    3564:	2f 55       	subi	r18, 0x5F	; 95
    3566:	3e 4f       	sbci	r19, 0xFE	; 254
    3568:	f9 01       	movw	r30, r18
    356a:	20 81       	ld	r18, Z
    356c:	31 81       	ldd	r19, Z+1	; 0x01
    356e:	fc 01       	movw	r30, r24
    3570:	31 83       	std	Z+1, r19	; 0x01
    3572:	20 83       	st	Z, r18
    3574:	ce 01       	movw	r24, r28
    3576:	8b 55       	subi	r24, 0x5B	; 91
    3578:	9e 4f       	sbci	r25, 0xFE	; 254
    357a:	fc 01       	movw	r30, r24
    357c:	80 81       	ld	r24, Z
    357e:	91 81       	ldd	r25, Z+1	; 0x01
    3580:	01 97       	sbiw	r24, 0x01	; 1
    3582:	f1 f7       	brne	.-4      	; 0x3580 <__stack+0x2481>
    3584:	9e 01       	movw	r18, r28
    3586:	2b 55       	subi	r18, 0x5B	; 91
    3588:	3e 4f       	sbci	r19, 0xFE	; 254
    358a:	f9 01       	movw	r30, r18
    358c:	91 83       	std	Z+1, r25	; 0x01
    358e:	80 83       	st	Z, r24
						_delay_ms(100);
						check++;
    3590:	8d 81       	ldd	r24, Y+5	; 0x05
    3592:	8f 5f       	subi	r24, 0xFF	; 255
    3594:	8d 83       	std	Y+5, r24	; 0x05
					break;
    3596:	05 c0       	rjmp	.+10     	; 0x35a2 <__stack+0x24a3>
						
					case 'O':
					routine_done=1;
    3598:	81 e0       	ldi	r24, 0x01	; 1
    359a:	8f 83       	std	Y+7, r24	; 0x07
					check++;	
    359c:	8d 81       	ldd	r24, Y+5	; 0x05
    359e:	8f 5f       	subi	r24, 0xFF	; 255
    35a0:	8d 83       	std	Y+5, r24	; 0x05
			routine_done=0;
			PORTB|=0x01;
			uart_str_complete=0;
			send_Byte_0('1');
			_delay_ms(100);	
			for (counter=0;counter<=data_bytes_recieved;counter++)
    35a2:	8e 81       	ldd	r24, Y+6	; 0x06
    35a4:	8f 5f       	subi	r24, 0xFF	; 255
    35a6:	8e 83       	std	Y+6, r24	; 0x06
    35a8:	80 91 1b 03 	lds	r24, 0x031B	; 0x80031b <data_bytes_recieved>
    35ac:	9e 81       	ldd	r25, Y+6	; 0x06
    35ae:	89 17       	cp	r24, r25
    35b0:	08 f0       	brcs	.+2      	; 0x35b4 <__stack+0x24b5>
    35b2:	a7 cd       	rjmp	.-1202   	; 0x3102 <__stack+0x2003>
					case 'O':
					routine_done=1;
					check++;	
				}
			}
			data_bytes_recieved=0;
    35b4:	10 92 1b 03 	sts	0x031B, r1	; 0x80031b <data_bytes_recieved>
			if ((check==0)||(check>2))
    35b8:	8d 81       	ldd	r24, Y+5	; 0x05
    35ba:	88 23       	and	r24, r24
    35bc:	19 f0       	breq	.+6      	; 0x35c4 <__stack+0x24c5>
    35be:	8d 81       	ldd	r24, Y+5	; 0x05
    35c0:	83 30       	cpi	r24, 0x03	; 3
    35c2:	20 f0       	brcs	.+8      	; 0x35cc <__stack+0x24cd>
			{
				send_Byte_0('0');
    35c4:	80 e3       	ldi	r24, 0x30	; 48
    35c6:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
    35ca:	01 c0       	rjmp	.+2      	; 0x35ce <__stack+0x24cf>
			}
			else
			{
				check=0;
    35cc:	1d 82       	std	Y+5, r1	; 0x05
			}
			if (routine_done>=1)
    35ce:	8f 81       	ldd	r24, Y+7	; 0x07
    35d0:	88 23       	and	r24, r24
    35d2:	09 f4       	brne	.+2      	; 0x35d6 <__stack+0x24d7>
    35d4:	b6 c1       	rjmp	.+876    	; 0x3942 <__stack+0x2843>
			{
				send_to_uArm("G0 X200 Y0 Z150 F1000\n");
    35d6:	8c e8       	ldi	r24, 0x8C	; 140
    35d8:	92 e0       	ldi	r25, 0x02	; 2
    35da:	0e 94 ad 01 	call	0x35a	; 0x35a <send_to_uArm>
				routine_done=0;
    35de:	1f 82       	std	Y+7, r1	; 0x07
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    35e0:	04 c0       	rjmp	.+8      	; 0x35ea <__stack+0x24eb>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
    35e2:	80 e0       	ldi	r24, 0x00	; 0
    35e4:	91 e0       	ldi	r25, 0x01	; 1
    35e6:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
			}
			if (routine_done>=1)
			{
				send_to_uArm("G0 X200 Y0 Z150 F1000\n");
				routine_done=0;
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    35ea:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <uart_string1+0x4>
    35ee:	81 33       	cpi	r24, 0x31	; 49
    35f0:	c1 f3       	breq	.-16     	; 0x35e2 <__stack+0x24e3>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
				}
				if (DIP_Switch&0x01)
    35f2:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <__data_end>
    35f6:	88 2f       	mov	r24, r24
    35f8:	90 e0       	ldi	r25, 0x00	; 0
    35fa:	81 70       	andi	r24, 0x01	; 1
    35fc:	99 27       	eor	r25, r25
    35fe:	89 2b       	or	r24, r25
    3600:	09 f4       	brne	.+2      	; 0x3604 <__stack+0x2505>
    3602:	94 c1       	rjmp	.+808    	; 0x392c <__stack+0x282d>
				{
					to_uARM("M2210 F500 T200\n");
    3604:	8e e5       	ldi	r24, 0x5E	; 94
    3606:	91 e0       	ldi	r25, 0x01	; 1
    3608:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    360c:	9e 01       	movw	r18, r28
    360e:	2b 58       	subi	r18, 0x8B	; 139
    3610:	3f 4f       	sbci	r19, 0xFF	; 255
    3612:	80 e0       	ldi	r24, 0x00	; 0
    3614:	90 e0       	ldi	r25, 0x00	; 0
    3616:	a8 e4       	ldi	r26, 0x48	; 72
    3618:	b3 e4       	ldi	r27, 0x43	; 67
    361a:	f9 01       	movw	r30, r18
    361c:	80 83       	st	Z, r24
    361e:	91 83       	std	Z+1, r25	; 0x01
    3620:	a2 83       	std	Z+2, r26	; 0x02
    3622:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    3624:	8e 01       	movw	r16, r28
    3626:	0f 54       	subi	r16, 0x4F	; 79
    3628:	1e 4f       	sbci	r17, 0xFE	; 254
    362a:	ce 01       	movw	r24, r28
    362c:	8b 58       	subi	r24, 0x8B	; 139
    362e:	9f 4f       	sbci	r25, 0xFF	; 255
    3630:	20 e0       	ldi	r18, 0x00	; 0
    3632:	30 e0       	ldi	r19, 0x00	; 0
    3634:	4a e7       	ldi	r20, 0x7A	; 122
    3636:	55 e4       	ldi	r21, 0x45	; 69
    3638:	fc 01       	movw	r30, r24
    363a:	60 81       	ld	r22, Z
    363c:	71 81       	ldd	r23, Z+1	; 0x01
    363e:	82 81       	ldd	r24, Z+2	; 0x02
    3640:	93 81       	ldd	r25, Z+3	; 0x03
    3642:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    3646:	dc 01       	movw	r26, r24
    3648:	cb 01       	movw	r24, r22
    364a:	f8 01       	movw	r30, r16
    364c:	80 83       	st	Z, r24
    364e:	91 83       	std	Z+1, r25	; 0x01
    3650:	a2 83       	std	Z+2, r26	; 0x02
    3652:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3654:	ce 01       	movw	r24, r28
    3656:	8f 54       	subi	r24, 0x4F	; 79
    3658:	9e 4f       	sbci	r25, 0xFE	; 254
    365a:	20 e0       	ldi	r18, 0x00	; 0
    365c:	30 e0       	ldi	r19, 0x00	; 0
    365e:	40 e8       	ldi	r20, 0x80	; 128
    3660:	5f e3       	ldi	r21, 0x3F	; 63
    3662:	fc 01       	movw	r30, r24
    3664:	60 81       	ld	r22, Z
    3666:	71 81       	ldd	r23, Z+1	; 0x01
    3668:	82 81       	ldd	r24, Z+2	; 0x02
    366a:	93 81       	ldd	r25, Z+3	; 0x03
    366c:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    3670:	88 23       	and	r24, r24
    3672:	4c f4       	brge	.+18     	; 0x3686 <__stack+0x2587>
		__ticks = 1;
    3674:	ce 01       	movw	r24, r28
    3676:	8b 54       	subi	r24, 0x4B	; 75
    3678:	9e 4f       	sbci	r25, 0xFE	; 254
    367a:	21 e0       	ldi	r18, 0x01	; 1
    367c:	30 e0       	ldi	r19, 0x00	; 0
    367e:	fc 01       	movw	r30, r24
    3680:	31 83       	std	Z+1, r19	; 0x01
    3682:	20 83       	st	Z, r18
    3684:	6d c0       	rjmp	.+218    	; 0x3760 <__stack+0x2661>
	else if (__tmp > 65535)
    3686:	ce 01       	movw	r24, r28
    3688:	8f 54       	subi	r24, 0x4F	; 79
    368a:	9e 4f       	sbci	r25, 0xFE	; 254
    368c:	20 e0       	ldi	r18, 0x00	; 0
    368e:	3f ef       	ldi	r19, 0xFF	; 255
    3690:	4f e7       	ldi	r20, 0x7F	; 127
    3692:	57 e4       	ldi	r21, 0x47	; 71
    3694:	fc 01       	movw	r30, r24
    3696:	60 81       	ld	r22, Z
    3698:	71 81       	ldd	r23, Z+1	; 0x01
    369a:	82 81       	ldd	r24, Z+2	; 0x02
    369c:	93 81       	ldd	r25, Z+3	; 0x03
    369e:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    36a2:	18 16       	cp	r1, r24
    36a4:	0c f0       	brlt	.+2      	; 0x36a8 <__stack+0x25a9>
    36a6:	4a c0       	rjmp	.+148    	; 0x373c <__stack+0x263d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    36a8:	ce 01       	movw	r24, r28
    36aa:	8b 58       	subi	r24, 0x8B	; 139
    36ac:	9f 4f       	sbci	r25, 0xFF	; 255
    36ae:	20 e0       	ldi	r18, 0x00	; 0
    36b0:	30 e0       	ldi	r19, 0x00	; 0
    36b2:	40 e2       	ldi	r20, 0x20	; 32
    36b4:	51 e4       	ldi	r21, 0x41	; 65
    36b6:	fc 01       	movw	r30, r24
    36b8:	60 81       	ld	r22, Z
    36ba:	71 81       	ldd	r23, Z+1	; 0x01
    36bc:	82 81       	ldd	r24, Z+2	; 0x02
    36be:	93 81       	ldd	r25, Z+3	; 0x03
    36c0:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    36c4:	dc 01       	movw	r26, r24
    36c6:	cb 01       	movw	r24, r22
    36c8:	8e 01       	movw	r16, r28
    36ca:	0b 54       	subi	r16, 0x4B	; 75
    36cc:	1e 4f       	sbci	r17, 0xFE	; 254
    36ce:	bc 01       	movw	r22, r24
    36d0:	cd 01       	movw	r24, r26
    36d2:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    36d6:	dc 01       	movw	r26, r24
    36d8:	cb 01       	movw	r24, r22
    36da:	f8 01       	movw	r30, r16
    36dc:	91 83       	std	Z+1, r25	; 0x01
    36de:	80 83       	st	Z, r24
    36e0:	24 c0       	rjmp	.+72     	; 0x372a <__stack+0x262b>
    36e2:	ce 01       	movw	r24, r28
    36e4:	89 54       	subi	r24, 0x49	; 73
    36e6:	9e 4f       	sbci	r25, 0xFE	; 254
    36e8:	20 e9       	ldi	r18, 0x90	; 144
    36ea:	31 e0       	ldi	r19, 0x01	; 1
    36ec:	fc 01       	movw	r30, r24
    36ee:	31 83       	std	Z+1, r19	; 0x01
    36f0:	20 83       	st	Z, r18
    36f2:	ce 01       	movw	r24, r28
    36f4:	89 54       	subi	r24, 0x49	; 73
    36f6:	9e 4f       	sbci	r25, 0xFE	; 254
    36f8:	fc 01       	movw	r30, r24
    36fa:	80 81       	ld	r24, Z
    36fc:	91 81       	ldd	r25, Z+1	; 0x01
    36fe:	01 97       	sbiw	r24, 0x01	; 1
    3700:	f1 f7       	brne	.-4      	; 0x36fe <__stack+0x25ff>
    3702:	9e 01       	movw	r18, r28
    3704:	29 54       	subi	r18, 0x49	; 73
    3706:	3e 4f       	sbci	r19, 0xFE	; 254
    3708:	f9 01       	movw	r30, r18
    370a:	91 83       	std	Z+1, r25	; 0x01
    370c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    370e:	ce 01       	movw	r24, r28
    3710:	8b 54       	subi	r24, 0x4B	; 75
    3712:	9e 4f       	sbci	r25, 0xFE	; 254
    3714:	9e 01       	movw	r18, r28
    3716:	2b 54       	subi	r18, 0x4B	; 75
    3718:	3e 4f       	sbci	r19, 0xFE	; 254
    371a:	f9 01       	movw	r30, r18
    371c:	20 81       	ld	r18, Z
    371e:	31 81       	ldd	r19, Z+1	; 0x01
    3720:	21 50       	subi	r18, 0x01	; 1
    3722:	31 09       	sbc	r19, r1
    3724:	fc 01       	movw	r30, r24
    3726:	31 83       	std	Z+1, r19	; 0x01
    3728:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    372a:	ce 01       	movw	r24, r28
    372c:	8b 54       	subi	r24, 0x4B	; 75
    372e:	9e 4f       	sbci	r25, 0xFE	; 254
    3730:	fc 01       	movw	r30, r24
    3732:	80 81       	ld	r24, Z
    3734:	91 81       	ldd	r25, Z+1	; 0x01
    3736:	89 2b       	or	r24, r25
    3738:	a1 f6       	brne	.-88     	; 0x36e2 <__stack+0x25e3>
    373a:	2c c0       	rjmp	.+88     	; 0x3794 <__stack+0x2695>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    373c:	8e 01       	movw	r16, r28
    373e:	0b 54       	subi	r16, 0x4B	; 75
    3740:	1e 4f       	sbci	r17, 0xFE	; 254
    3742:	ce 01       	movw	r24, r28
    3744:	8f 54       	subi	r24, 0x4F	; 79
    3746:	9e 4f       	sbci	r25, 0xFE	; 254
    3748:	fc 01       	movw	r30, r24
    374a:	60 81       	ld	r22, Z
    374c:	71 81       	ldd	r23, Z+1	; 0x01
    374e:	82 81       	ldd	r24, Z+2	; 0x02
    3750:	93 81       	ldd	r25, Z+3	; 0x03
    3752:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    3756:	dc 01       	movw	r26, r24
    3758:	cb 01       	movw	r24, r22
    375a:	f8 01       	movw	r30, r16
    375c:	91 83       	std	Z+1, r25	; 0x01
    375e:	80 83       	st	Z, r24
    3760:	ce 01       	movw	r24, r28
    3762:	87 54       	subi	r24, 0x47	; 71
    3764:	9e 4f       	sbci	r25, 0xFE	; 254
    3766:	9e 01       	movw	r18, r28
    3768:	2b 54       	subi	r18, 0x4B	; 75
    376a:	3e 4f       	sbci	r19, 0xFE	; 254
    376c:	f9 01       	movw	r30, r18
    376e:	20 81       	ld	r18, Z
    3770:	31 81       	ldd	r19, Z+1	; 0x01
    3772:	fc 01       	movw	r30, r24
    3774:	31 83       	std	Z+1, r19	; 0x01
    3776:	20 83       	st	Z, r18
    3778:	ce 01       	movw	r24, r28
    377a:	87 54       	subi	r24, 0x47	; 71
    377c:	9e 4f       	sbci	r25, 0xFE	; 254
    377e:	fc 01       	movw	r30, r24
    3780:	80 81       	ld	r24, Z
    3782:	91 81       	ldd	r25, Z+1	; 0x01
    3784:	01 97       	sbiw	r24, 0x01	; 1
    3786:	f1 f7       	brne	.-4      	; 0x3784 <__stack+0x2685>
    3788:	9e 01       	movw	r18, r28
    378a:	27 54       	subi	r18, 0x47	; 71
    378c:	3e 4f       	sbci	r19, 0xFE	; 254
    378e:	f9 01       	movw	r30, r18
    3790:	91 83       	std	Z+1, r25	; 0x01
    3792:	80 83       	st	Z, r24
					_delay_ms(200);
					to_uARM("M2210 F1000 T500\n");
    3794:	8f e6       	ldi	r24, 0x6F	; 111
    3796:	91 e0       	ldi	r25, 0x01	; 1
    3798:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
    379c:	9e 01       	movw	r18, r28
    379e:	2f 58       	subi	r18, 0x8F	; 143
    37a0:	3f 4f       	sbci	r19, 0xFF	; 255
    37a2:	80 e0       	ldi	r24, 0x00	; 0
    37a4:	90 e0       	ldi	r25, 0x00	; 0
    37a6:	aa ef       	ldi	r26, 0xFA	; 250
    37a8:	b3 e4       	ldi	r27, 0x43	; 67
    37aa:	f9 01       	movw	r30, r18
    37ac:	80 83       	st	Z, r24
    37ae:	91 83       	std	Z+1, r25	; 0x01
    37b0:	a2 83       	std	Z+2, r26	; 0x02
    37b2:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    37b4:	8e 01       	movw	r16, r28
    37b6:	09 55       	subi	r16, 0x59	; 89
    37b8:	1e 4f       	sbci	r17, 0xFE	; 254
    37ba:	ce 01       	movw	r24, r28
    37bc:	8f 58       	subi	r24, 0x8F	; 143
    37be:	9f 4f       	sbci	r25, 0xFF	; 255
    37c0:	20 e0       	ldi	r18, 0x00	; 0
    37c2:	30 e0       	ldi	r19, 0x00	; 0
    37c4:	4a e7       	ldi	r20, 0x7A	; 122
    37c6:	55 e4       	ldi	r21, 0x45	; 69
    37c8:	fc 01       	movw	r30, r24
    37ca:	60 81       	ld	r22, Z
    37cc:	71 81       	ldd	r23, Z+1	; 0x01
    37ce:	82 81       	ldd	r24, Z+2	; 0x02
    37d0:	93 81       	ldd	r25, Z+3	; 0x03
    37d2:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    37d6:	dc 01       	movw	r26, r24
    37d8:	cb 01       	movw	r24, r22
    37da:	f8 01       	movw	r30, r16
    37dc:	80 83       	st	Z, r24
    37de:	91 83       	std	Z+1, r25	; 0x01
    37e0:	a2 83       	std	Z+2, r26	; 0x02
    37e2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    37e4:	ce 01       	movw	r24, r28
    37e6:	89 55       	subi	r24, 0x59	; 89
    37e8:	9e 4f       	sbci	r25, 0xFE	; 254
    37ea:	20 e0       	ldi	r18, 0x00	; 0
    37ec:	30 e0       	ldi	r19, 0x00	; 0
    37ee:	40 e8       	ldi	r20, 0x80	; 128
    37f0:	5f e3       	ldi	r21, 0x3F	; 63
    37f2:	fc 01       	movw	r30, r24
    37f4:	60 81       	ld	r22, Z
    37f6:	71 81       	ldd	r23, Z+1	; 0x01
    37f8:	82 81       	ldd	r24, Z+2	; 0x02
    37fa:	93 81       	ldd	r25, Z+3	; 0x03
    37fc:	0e 94 9a 20 	call	0x4134	; 0x4134 <__cmpsf2>
    3800:	88 23       	and	r24, r24
    3802:	4c f4       	brge	.+18     	; 0x3816 <__stack+0x2717>
		__ticks = 1;
    3804:	ce 01       	movw	r24, r28
    3806:	85 55       	subi	r24, 0x55	; 85
    3808:	9e 4f       	sbci	r25, 0xFE	; 254
    380a:	21 e0       	ldi	r18, 0x01	; 1
    380c:	30 e0       	ldi	r19, 0x00	; 0
    380e:	fc 01       	movw	r30, r24
    3810:	31 83       	std	Z+1, r19	; 0x01
    3812:	20 83       	st	Z, r18
    3814:	6d c0       	rjmp	.+218    	; 0x38f0 <__stack+0x27f1>
	else if (__tmp > 65535)
    3816:	ce 01       	movw	r24, r28
    3818:	89 55       	subi	r24, 0x59	; 89
    381a:	9e 4f       	sbci	r25, 0xFE	; 254
    381c:	20 e0       	ldi	r18, 0x00	; 0
    381e:	3f ef       	ldi	r19, 0xFF	; 255
    3820:	4f e7       	ldi	r20, 0x7F	; 127
    3822:	57 e4       	ldi	r21, 0x47	; 71
    3824:	fc 01       	movw	r30, r24
    3826:	60 81       	ld	r22, Z
    3828:	71 81       	ldd	r23, Z+1	; 0x01
    382a:	82 81       	ldd	r24, Z+2	; 0x02
    382c:	93 81       	ldd	r25, Z+3	; 0x03
    382e:	0e 94 1b 21 	call	0x4236	; 0x4236 <__gesf2>
    3832:	18 16       	cp	r1, r24
    3834:	0c f0       	brlt	.+2      	; 0x3838 <__stack+0x2739>
    3836:	4a c0       	rjmp	.+148    	; 0x38cc <__stack+0x27cd>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3838:	ce 01       	movw	r24, r28
    383a:	8f 58       	subi	r24, 0x8F	; 143
    383c:	9f 4f       	sbci	r25, 0xFF	; 255
    383e:	20 e0       	ldi	r18, 0x00	; 0
    3840:	30 e0       	ldi	r19, 0x00	; 0
    3842:	40 e2       	ldi	r20, 0x20	; 32
    3844:	51 e4       	ldi	r21, 0x41	; 65
    3846:	fc 01       	movw	r30, r24
    3848:	60 81       	ld	r22, Z
    384a:	71 81       	ldd	r23, Z+1	; 0x01
    384c:	82 81       	ldd	r24, Z+2	; 0x02
    384e:	93 81       	ldd	r25, Z+3	; 0x03
    3850:	0e 94 20 21 	call	0x4240	; 0x4240 <__mulsf3>
    3854:	dc 01       	movw	r26, r24
    3856:	cb 01       	movw	r24, r22
    3858:	8e 01       	movw	r16, r28
    385a:	05 55       	subi	r16, 0x55	; 85
    385c:	1e 4f       	sbci	r17, 0xFE	; 254
    385e:	bc 01       	movw	r22, r24
    3860:	cd 01       	movw	r24, r26
    3862:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    3866:	dc 01       	movw	r26, r24
    3868:	cb 01       	movw	r24, r22
    386a:	f8 01       	movw	r30, r16
    386c:	91 83       	std	Z+1, r25	; 0x01
    386e:	80 83       	st	Z, r24
    3870:	24 c0       	rjmp	.+72     	; 0x38ba <__stack+0x27bb>
    3872:	ce 01       	movw	r24, r28
    3874:	83 55       	subi	r24, 0x53	; 83
    3876:	9e 4f       	sbci	r25, 0xFE	; 254
    3878:	20 e9       	ldi	r18, 0x90	; 144
    387a:	31 e0       	ldi	r19, 0x01	; 1
    387c:	fc 01       	movw	r30, r24
    387e:	31 83       	std	Z+1, r19	; 0x01
    3880:	20 83       	st	Z, r18
    3882:	ce 01       	movw	r24, r28
    3884:	83 55       	subi	r24, 0x53	; 83
    3886:	9e 4f       	sbci	r25, 0xFE	; 254
    3888:	fc 01       	movw	r30, r24
    388a:	80 81       	ld	r24, Z
    388c:	91 81       	ldd	r25, Z+1	; 0x01
    388e:	01 97       	sbiw	r24, 0x01	; 1
    3890:	f1 f7       	brne	.-4      	; 0x388e <__stack+0x278f>
    3892:	9e 01       	movw	r18, r28
    3894:	23 55       	subi	r18, 0x53	; 83
    3896:	3e 4f       	sbci	r19, 0xFE	; 254
    3898:	f9 01       	movw	r30, r18
    389a:	91 83       	std	Z+1, r25	; 0x01
    389c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    389e:	ce 01       	movw	r24, r28
    38a0:	85 55       	subi	r24, 0x55	; 85
    38a2:	9e 4f       	sbci	r25, 0xFE	; 254
    38a4:	9e 01       	movw	r18, r28
    38a6:	25 55       	subi	r18, 0x55	; 85
    38a8:	3e 4f       	sbci	r19, 0xFE	; 254
    38aa:	f9 01       	movw	r30, r18
    38ac:	20 81       	ld	r18, Z
    38ae:	31 81       	ldd	r19, Z+1	; 0x01
    38b0:	21 50       	subi	r18, 0x01	; 1
    38b2:	31 09       	sbc	r19, r1
    38b4:	fc 01       	movw	r30, r24
    38b6:	31 83       	std	Z+1, r19	; 0x01
    38b8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    38ba:	ce 01       	movw	r24, r28
    38bc:	85 55       	subi	r24, 0x55	; 85
    38be:	9e 4f       	sbci	r25, 0xFE	; 254
    38c0:	fc 01       	movw	r30, r24
    38c2:	80 81       	ld	r24, Z
    38c4:	91 81       	ldd	r25, Z+1	; 0x01
    38c6:	89 2b       	or	r24, r25
    38c8:	a1 f6       	brne	.-88     	; 0x3872 <__stack+0x2773>
    38ca:	2c c0       	rjmp	.+88     	; 0x3924 <__stack+0x2825>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    38cc:	8e 01       	movw	r16, r28
    38ce:	05 55       	subi	r16, 0x55	; 85
    38d0:	1e 4f       	sbci	r17, 0xFE	; 254
    38d2:	ce 01       	movw	r24, r28
    38d4:	89 55       	subi	r24, 0x59	; 89
    38d6:	9e 4f       	sbci	r25, 0xFE	; 254
    38d8:	fc 01       	movw	r30, r24
    38da:	60 81       	ld	r22, Z
    38dc:	71 81       	ldd	r23, Z+1	; 0x01
    38de:	82 81       	ldd	r24, Z+2	; 0x02
    38e0:	93 81       	ldd	r25, Z+3	; 0x03
    38e2:	0e 94 9f 20 	call	0x413e	; 0x413e <__fixunssfsi>
    38e6:	dc 01       	movw	r26, r24
    38e8:	cb 01       	movw	r24, r22
    38ea:	f8 01       	movw	r30, r16
    38ec:	91 83       	std	Z+1, r25	; 0x01
    38ee:	80 83       	st	Z, r24
    38f0:	ce 01       	movw	r24, r28
    38f2:	81 55       	subi	r24, 0x51	; 81
    38f4:	9e 4f       	sbci	r25, 0xFE	; 254
    38f6:	9e 01       	movw	r18, r28
    38f8:	25 55       	subi	r18, 0x55	; 85
    38fa:	3e 4f       	sbci	r19, 0xFE	; 254
    38fc:	f9 01       	movw	r30, r18
    38fe:	20 81       	ld	r18, Z
    3900:	31 81       	ldd	r19, Z+1	; 0x01
    3902:	fc 01       	movw	r30, r24
    3904:	31 83       	std	Z+1, r19	; 0x01
    3906:	20 83       	st	Z, r18
    3908:	ce 01       	movw	r24, r28
    390a:	81 55       	subi	r24, 0x51	; 81
    390c:	9e 4f       	sbci	r25, 0xFE	; 254
    390e:	fc 01       	movw	r30, r24
    3910:	80 81       	ld	r24, Z
    3912:	91 81       	ldd	r25, Z+1	; 0x01
    3914:	01 97       	sbiw	r24, 0x01	; 1
    3916:	f1 f7       	brne	.-4      	; 0x3914 <__stack+0x2815>
    3918:	9e 01       	movw	r18, r28
    391a:	21 55       	subi	r18, 0x51	; 81
    391c:	3e 4f       	sbci	r19, 0xFE	; 254
    391e:	f9 01       	movw	r30, r18
    3920:	91 83       	std	Z+1, r25	; 0x01
    3922:	80 83       	st	Z, r24
					_delay_ms(500);
					to_uARM("M2210 F2000 T500\n");
    3924:	81 e8       	ldi	r24, 0x81	; 129
    3926:	91 e0       	ldi	r25, 0x01	; 1
    3928:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
				}
				PORTB&=~0x01;
    392c:	85 e2       	ldi	r24, 0x25	; 37
    392e:	90 e0       	ldi	r25, 0x00	; 0
    3930:	25 e2       	ldi	r18, 0x25	; 37
    3932:	30 e0       	ldi	r19, 0x00	; 0
    3934:	f9 01       	movw	r30, r18
    3936:	20 81       	ld	r18, Z
    3938:	2e 7f       	andi	r18, 0xFE	; 254
    393a:	fc 01       	movw	r30, r24
    393c:	20 83       	st	Z, r18
    393e:	0c 94 b8 03 	jmp	0x770	; 0x770 <main+0x54>
			}
			else
			{
				if (DIP_Switch&0x80)
    3942:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <__data_end>
    3946:	88 23       	and	r24, r24
    3948:	f4 f4       	brge	.+60     	; 0x3986 <__stack+0x2887>
				{
					write_zahl(2,10,recieved_X,4,0,0);
    394a:	89 81       	ldd	r24, Y+1	; 0x01
    394c:	9a 81       	ldd	r25, Y+2	; 0x02
    394e:	09 2e       	mov	r0, r25
    3950:	00 0c       	add	r0, r0
    3952:	aa 0b       	sbc	r26, r26
    3954:	bb 0b       	sbc	r27, r27
    3956:	c1 2c       	mov	r12, r1
    3958:	e1 2c       	mov	r14, r1
    395a:	04 e0       	ldi	r16, 0x04	; 4
    395c:	9c 01       	movw	r18, r24
    395e:	ad 01       	movw	r20, r26
    3960:	6a e0       	ldi	r22, 0x0A	; 10
    3962:	82 e0       	ldi	r24, 0x02	; 2
    3964:	0e 94 dc 1e 	call	0x3db8	; 0x3db8 <write_zahl>
					write_zahl(3,10,recieved_Y,4,0,0);
    3968:	8b 81       	ldd	r24, Y+3	; 0x03
    396a:	9c 81       	ldd	r25, Y+4	; 0x04
    396c:	09 2e       	mov	r0, r25
    396e:	00 0c       	add	r0, r0
    3970:	aa 0b       	sbc	r26, r26
    3972:	bb 0b       	sbc	r27, r27
    3974:	c1 2c       	mov	r12, r1
    3976:	e1 2c       	mov	r14, r1
    3978:	04 e0       	ldi	r16, 0x04	; 4
    397a:	9c 01       	movw	r18, r24
    397c:	ad 01       	movw	r20, r26
    397e:	6a e0       	ldi	r22, 0x0A	; 10
    3980:	83 e0       	ldi	r24, 0x03	; 3
    3982:	0e 94 dc 1e 	call	0x3db8	; 0x3db8 <write_zahl>
				}	
				recieved_X-=384;
    3986:	89 81       	ldd	r24, Y+1	; 0x01
    3988:	9a 81       	ldd	r25, Y+2	; 0x02
    398a:	80 58       	subi	r24, 0x80	; 128
    398c:	91 40       	sbci	r25, 0x01	; 1
    398e:	9a 83       	std	Y+2, r25	; 0x02
    3990:	89 83       	std	Y+1, r24	; 0x01
				recieved_Y-=512;				
    3992:	8b 81       	ldd	r24, Y+3	; 0x03
    3994:	9c 81       	ldd	r25, Y+4	; 0x04
    3996:	92 50       	subi	r25, 0x02	; 2
    3998:	9c 83       	std	Y+4, r25	; 0x04
    399a:	8b 83       	std	Y+3, r24	; 0x03
				recieved_X=((recieved_X/5)*-1)+200;
    399c:	89 81       	ldd	r24, Y+1	; 0x01
    399e:	9a 81       	ldd	r25, Y+2	; 0x02
    39a0:	25 e0       	ldi	r18, 0x05	; 5
    39a2:	30 e0       	ldi	r19, 0x00	; 0
    39a4:	b9 01       	movw	r22, r18
    39a6:	0e 94 b5 21 	call	0x436a	; 0x436a <__divmodhi4>
    39aa:	cb 01       	movw	r24, r22
    39ac:	9c 01       	movw	r18, r24
    39ae:	88 ec       	ldi	r24, 0xC8	; 200
    39b0:	90 e0       	ldi	r25, 0x00	; 0
    39b2:	82 1b       	sub	r24, r18
    39b4:	93 0b       	sbc	r25, r19
    39b6:	9a 83       	std	Y+2, r25	; 0x02
    39b8:	89 83       	std	Y+1, r24	; 0x01
				recieved_Y=(recieved_Y/5)*-1;				
    39ba:	8b 81       	ldd	r24, Y+3	; 0x03
    39bc:	9c 81       	ldd	r25, Y+4	; 0x04
    39be:	25 e0       	ldi	r18, 0x05	; 5
    39c0:	30 e0       	ldi	r19, 0x00	; 0
    39c2:	b9 01       	movw	r22, r18
    39c4:	0e 94 b5 21 	call	0x436a	; 0x436a <__divmodhi4>
    39c8:	cb 01       	movw	r24, r22
    39ca:	91 95       	neg	r25
    39cc:	81 95       	neg	r24
    39ce:	91 09       	sbc	r25, r1
    39d0:	9c 83       	std	Y+4, r25	; 0x04
    39d2:	8b 83       	std	Y+3, r24	; 0x03
				snprintf(buffer,30,"G0 X%d Y%d Z0 F6000\n",recieved_X,recieved_Y);
    39d4:	8c 81       	ldd	r24, Y+4	; 0x04
    39d6:	8f 93       	push	r24
    39d8:	8b 81       	ldd	r24, Y+3	; 0x03
    39da:	8f 93       	push	r24
    39dc:	8a 81       	ldd	r24, Y+2	; 0x02
    39de:	8f 93       	push	r24
    39e0:	89 81       	ldd	r24, Y+1	; 0x01
    39e2:	8f 93       	push	r24
    39e4:	83 ea       	ldi	r24, 0xA3	; 163
    39e6:	92 e0       	ldi	r25, 0x02	; 2
    39e8:	89 2f       	mov	r24, r25
    39ea:	8f 93       	push	r24
    39ec:	83 ea       	ldi	r24, 0xA3	; 163
    39ee:	92 e0       	ldi	r25, 0x02	; 2
    39f0:	8f 93       	push	r24
    39f2:	1f 92       	push	r1
    39f4:	8e e1       	ldi	r24, 0x1E	; 30
    39f6:	8f 93       	push	r24
    39f8:	ce 01       	movw	r24, r28
    39fa:	85 54       	subi	r24, 0x45	; 69
    39fc:	9e 4f       	sbci	r25, 0xFE	; 254
    39fe:	29 2f       	mov	r18, r25
    3a00:	2f 93       	push	r18
    3a02:	8f 93       	push	r24
    3a04:	0e 94 ff 21 	call	0x43fe	; 0x43fe <snprintf>
    3a08:	8d b7       	in	r24, 0x3d	; 61
    3a0a:	9e b7       	in	r25, 0x3e	; 62
    3a0c:	0a 96       	adiw	r24, 0x0a	; 10
    3a0e:	0f b6       	in	r0, 0x3f	; 63
    3a10:	f8 94       	cli
    3a12:	de bf       	out	0x3e, r29	; 62
    3a14:	0f be       	out	0x3f, r0	; 63
    3a16:	cd bf       	out	0x3d, r28	; 61
				if (DIP_Switch&0x80)
    3a18:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <__data_end>
    3a1c:	88 23       	and	r24, r24
    3a1e:	f4 f4       	brge	.+60     	; 0x3a5c <__stack+0x295d>
				{
					write_zahl(2,0,recieved_X,4,0,0);
    3a20:	89 81       	ldd	r24, Y+1	; 0x01
    3a22:	9a 81       	ldd	r25, Y+2	; 0x02
    3a24:	09 2e       	mov	r0, r25
    3a26:	00 0c       	add	r0, r0
    3a28:	aa 0b       	sbc	r26, r26
    3a2a:	bb 0b       	sbc	r27, r27
    3a2c:	c1 2c       	mov	r12, r1
    3a2e:	e1 2c       	mov	r14, r1
    3a30:	04 e0       	ldi	r16, 0x04	; 4
    3a32:	9c 01       	movw	r18, r24
    3a34:	ad 01       	movw	r20, r26
    3a36:	60 e0       	ldi	r22, 0x00	; 0
    3a38:	82 e0       	ldi	r24, 0x02	; 2
    3a3a:	0e 94 dc 1e 	call	0x3db8	; 0x3db8 <write_zahl>
					write_zahl(3,0,recieved_Y,4,0,0);
    3a3e:	8b 81       	ldd	r24, Y+3	; 0x03
    3a40:	9c 81       	ldd	r25, Y+4	; 0x04
    3a42:	09 2e       	mov	r0, r25
    3a44:	00 0c       	add	r0, r0
    3a46:	aa 0b       	sbc	r26, r26
    3a48:	bb 0b       	sbc	r27, r27
    3a4a:	c1 2c       	mov	r12, r1
    3a4c:	e1 2c       	mov	r14, r1
    3a4e:	04 e0       	ldi	r16, 0x04	; 4
    3a50:	9c 01       	movw	r18, r24
    3a52:	ad 01       	movw	r20, r26
    3a54:	60 e0       	ldi	r22, 0x00	; 0
    3a56:	83 e0       	ldi	r24, 0x03	; 3
    3a58:	0e 94 dc 1e 	call	0x3db8	; 0x3db8 <write_zahl>
				}
				send_to_uArm(buffer);
    3a5c:	ce 01       	movw	r24, r28
    3a5e:	85 54       	subi	r24, 0x45	; 69
    3a60:	9e 4f       	sbci	r25, 0xFE	; 254
    3a62:	0e 94 ad 01 	call	0x35a	; 0x35a <send_to_uArm>
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    3a66:	13 c0       	rjmp	.+38     	; 0x3a8e <__stack+0x298f>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
    3a68:	80 e0       	ldi	r24, 0x00	; 0
    3a6a:	91 e0       	ldi	r25, 0x01	; 1
    3a6c:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
					write_zahl(0,10,uart_string[4],4,0,0);
    3a70:	80 91 21 03 	lds	r24, 0x0321	; 0x800321 <uart_string+0x4>
    3a74:	88 2f       	mov	r24, r24
    3a76:	90 e0       	ldi	r25, 0x00	; 0
    3a78:	a0 e0       	ldi	r26, 0x00	; 0
    3a7a:	b0 e0       	ldi	r27, 0x00	; 0
    3a7c:	c1 2c       	mov	r12, r1
    3a7e:	e1 2c       	mov	r14, r1
    3a80:	04 e0       	ldi	r16, 0x04	; 4
    3a82:	9c 01       	movw	r18, r24
    3a84:	ad 01       	movw	r20, r26
    3a86:	6a e0       	ldi	r22, 0x0A	; 10
    3a88:	80 e0       	ldi	r24, 0x00	; 0
    3a8a:	0e 94 dc 1e 	call	0x3db8	; 0x3db8 <write_zahl>
				{
					write_zahl(2,0,recieved_X,4,0,0);
					write_zahl(3,0,recieved_Y,4,0,0);
				}
				send_to_uArm(buffer);
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
    3a8e:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <uart_string1+0x4>
    3a92:	81 33       	cpi	r24, 0x31	; 49
    3a94:	49 f3       	breq	.-46     	; 0x3a68 <__stack+0x2969>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
					write_zahl(0,10,uart_string[4],4,0,0);
				}
				if (DIP_Switch&0x01)
    3a96:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <__data_end>
    3a9a:	88 2f       	mov	r24, r24
    3a9c:	90 e0       	ldi	r25, 0x00	; 0
    3a9e:	81 70       	andi	r24, 0x01	; 1
    3aa0:	99 27       	eor	r25, r25
    3aa2:	89 2b       	or	r24, r25
    3aa4:	21 f0       	breq	.+8      	; 0x3aae <__stack+0x29af>
				{
					to_uARM("M2210 F2000 T200\n");
    3aa6:	88 eb       	ldi	r24, 0xB8	; 184
    3aa8:	92 e0       	ldi	r25, 0x02	; 2
    3aaa:	0e 94 87 01 	call	0x30e	; 0x30e <to_uARM>
				}
				send_Byte_0('1');
    3aae:	81 e3       	ldi	r24, 0x31	; 49
    3ab0:	0e 94 51 01 	call	0x2a2	; 0x2a2 <send_Byte_0>
				PORTB&=~0x01;
    3ab4:	85 e2       	ldi	r24, 0x25	; 37
    3ab6:	90 e0       	ldi	r25, 0x00	; 0
    3ab8:	25 e2       	ldi	r18, 0x25	; 37
    3aba:	30 e0       	ldi	r19, 0x00	; 0
    3abc:	f9 01       	movw	r30, r18
    3abe:	20 81       	ld	r18, Z
    3ac0:	2e 7f       	andi	r18, 0xFE	; 254
    3ac2:	fc 01       	movw	r30, r24
    3ac4:	20 83       	st	Z, r18
			}	
		}
	} //end while(1)
    3ac6:	0c 94 b8 03 	jmp	0x770	; 0x770 <main+0x54>

00003aca <init_Timer0_1ms_int>:
    3aca:	cf 93       	push	r28
    3acc:	df 93       	push	r29
    3ace:	cd b7       	in	r28, 0x3d	; 61
    3ad0:	de b7       	in	r29, 0x3e	; 62
    3ad2:	84 e4       	ldi	r24, 0x44	; 68
    3ad4:	90 e0       	ldi	r25, 0x00	; 0
    3ad6:	24 e4       	ldi	r18, 0x44	; 68
    3ad8:	30 e0       	ldi	r19, 0x00	; 0
    3ada:	f9 01       	movw	r30, r18
    3adc:	20 81       	ld	r18, Z
    3ade:	22 60       	ori	r18, 0x02	; 2
    3ae0:	fc 01       	movw	r30, r24
    3ae2:	20 83       	st	Z, r18
    3ae4:	85 e4       	ldi	r24, 0x45	; 69
    3ae6:	90 e0       	ldi	r25, 0x00	; 0
    3ae8:	25 e4       	ldi	r18, 0x45	; 69
    3aea:	30 e0       	ldi	r19, 0x00	; 0
    3aec:	f9 01       	movw	r30, r18
    3aee:	20 81       	ld	r18, Z
    3af0:	23 60       	ori	r18, 0x03	; 3
    3af2:	fc 01       	movw	r30, r24
    3af4:	20 83       	st	Z, r18
    3af6:	87 e4       	ldi	r24, 0x47	; 71
    3af8:	90 e0       	ldi	r25, 0x00	; 0
    3afa:	29 ef       	ldi	r18, 0xF9	; 249
    3afc:	fc 01       	movw	r30, r24
    3afe:	20 83       	st	Z, r18
    3b00:	8e e6       	ldi	r24, 0x6E	; 110
    3b02:	90 e0       	ldi	r25, 0x00	; 0
    3b04:	2e e6       	ldi	r18, 0x6E	; 110
    3b06:	30 e0       	ldi	r19, 0x00	; 0
    3b08:	f9 01       	movw	r30, r18
    3b0a:	20 81       	ld	r18, Z
    3b0c:	22 60       	ori	r18, 0x02	; 2
    3b0e:	fc 01       	movw	r30, r24
    3b10:	20 83       	st	Z, r18
    3b12:	00 00       	nop
    3b14:	df 91       	pop	r29
    3b16:	cf 91       	pop	r28
    3b18:	08 95       	ret

00003b1a <__vector_16>:
    3b1a:	1f 92       	push	r1
    3b1c:	0f 92       	push	r0
    3b1e:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    3b22:	0f 92       	push	r0
    3b24:	11 24       	eor	r1, r1
    3b26:	2f 93       	push	r18
    3b28:	3f 93       	push	r19
    3b2a:	4f 93       	push	r20
    3b2c:	5f 93       	push	r21
    3b2e:	6f 93       	push	r22
    3b30:	7f 93       	push	r23
    3b32:	8f 93       	push	r24
    3b34:	9f 93       	push	r25
    3b36:	af 93       	push	r26
    3b38:	bf 93       	push	r27
    3b3a:	ef 93       	push	r30
    3b3c:	ff 93       	push	r31
    3b3e:	cf 93       	push	r28
    3b40:	df 93       	push	r29
    3b42:	cd b7       	in	r28, 0x3d	; 61
    3b44:	de b7       	in	r29, 0x3e	; 62
    3b46:	80 91 87 03 	lds	r24, 0x0387	; 0x800387 <tick_1ms>
    3b4a:	90 91 88 03 	lds	r25, 0x0388	; 0x800388 <tick_1ms+0x1>
    3b4e:	a0 91 89 03 	lds	r26, 0x0389	; 0x800389 <tick_1ms+0x2>
    3b52:	b0 91 8a 03 	lds	r27, 0x038A	; 0x80038a <tick_1ms+0x3>
    3b56:	01 96       	adiw	r24, 0x01	; 1
    3b58:	a1 1d       	adc	r26, r1
    3b5a:	b1 1d       	adc	r27, r1
    3b5c:	80 93 87 03 	sts	0x0387, r24	; 0x800387 <tick_1ms>
    3b60:	90 93 88 03 	sts	0x0388, r25	; 0x800388 <tick_1ms+0x1>
    3b64:	a0 93 89 03 	sts	0x0389, r26	; 0x800389 <tick_1ms+0x2>
    3b68:	b0 93 8a 03 	sts	0x038A, r27	; 0x80038a <tick_1ms+0x3>
    3b6c:	80 91 87 03 	lds	r24, 0x0387	; 0x800387 <tick_1ms>
    3b70:	90 91 88 03 	lds	r25, 0x0388	; 0x800388 <tick_1ms+0x1>
    3b74:	a0 91 89 03 	lds	r26, 0x0389	; 0x800389 <tick_1ms+0x2>
    3b78:	b0 91 8a 03 	lds	r27, 0x038A	; 0x80038a <tick_1ms+0x3>
    3b7c:	28 ee       	ldi	r18, 0xE8	; 232
    3b7e:	33 e0       	ldi	r19, 0x03	; 3
    3b80:	40 e0       	ldi	r20, 0x00	; 0
    3b82:	50 e0       	ldi	r21, 0x00	; 0
    3b84:	bc 01       	movw	r22, r24
    3b86:	cd 01       	movw	r24, r26
    3b88:	0e 94 c9 21 	call	0x4392	; 0x4392 <__udivmodsi4>
    3b8c:	dc 01       	movw	r26, r24
    3b8e:	cb 01       	movw	r24, r22
    3b90:	89 2b       	or	r24, r25
    3b92:	8a 2b       	or	r24, r26
    3b94:	8b 2b       	or	r24, r27
    3b96:	99 f4       	brne	.+38     	; 0x3bbe <__vector_16+0xa4>
    3b98:	80 91 8b 03 	lds	r24, 0x038B	; 0x80038b <tick_1s>
    3b9c:	90 91 8c 03 	lds	r25, 0x038C	; 0x80038c <tick_1s+0x1>
    3ba0:	a0 91 8d 03 	lds	r26, 0x038D	; 0x80038d <tick_1s+0x2>
    3ba4:	b0 91 8e 03 	lds	r27, 0x038E	; 0x80038e <tick_1s+0x3>
    3ba8:	01 96       	adiw	r24, 0x01	; 1
    3baa:	a1 1d       	adc	r26, r1
    3bac:	b1 1d       	adc	r27, r1
    3bae:	80 93 8b 03 	sts	0x038B, r24	; 0x80038b <tick_1s>
    3bb2:	90 93 8c 03 	sts	0x038C, r25	; 0x80038c <tick_1s+0x1>
    3bb6:	a0 93 8d 03 	sts	0x038D, r26	; 0x80038d <tick_1s+0x2>
    3bba:	b0 93 8e 03 	sts	0x038E, r27	; 0x80038e <tick_1s+0x3>
    3bbe:	80 91 83 03 	lds	r24, 0x0383	; 0x800383 <tick_1ms_cnt>
    3bc2:	90 91 84 03 	lds	r25, 0x0384	; 0x800384 <tick_1ms_cnt+0x1>
    3bc6:	a0 91 85 03 	lds	r26, 0x0385	; 0x800385 <tick_1ms_cnt+0x2>
    3bca:	b0 91 86 03 	lds	r27, 0x0386	; 0x800386 <tick_1ms_cnt+0x3>
    3bce:	89 2b       	or	r24, r25
    3bd0:	8a 2b       	or	r24, r26
    3bd2:	8b 2b       	or	r24, r27
    3bd4:	99 f0       	breq	.+38     	; 0x3bfc <__vector_16+0xe2>
    3bd6:	80 91 83 03 	lds	r24, 0x0383	; 0x800383 <tick_1ms_cnt>
    3bda:	90 91 84 03 	lds	r25, 0x0384	; 0x800384 <tick_1ms_cnt+0x1>
    3bde:	a0 91 85 03 	lds	r26, 0x0385	; 0x800385 <tick_1ms_cnt+0x2>
    3be2:	b0 91 86 03 	lds	r27, 0x0386	; 0x800386 <tick_1ms_cnt+0x3>
    3be6:	01 97       	sbiw	r24, 0x01	; 1
    3be8:	a1 09       	sbc	r26, r1
    3bea:	b1 09       	sbc	r27, r1
    3bec:	80 93 83 03 	sts	0x0383, r24	; 0x800383 <tick_1ms_cnt>
    3bf0:	90 93 84 03 	sts	0x0384, r25	; 0x800384 <tick_1ms_cnt+0x1>
    3bf4:	a0 93 85 03 	sts	0x0385, r26	; 0x800385 <tick_1ms_cnt+0x2>
    3bf8:	b0 93 86 03 	sts	0x0386, r27	; 0x800386 <tick_1ms_cnt+0x3>
    3bfc:	00 00       	nop
    3bfe:	df 91       	pop	r29
    3c00:	cf 91       	pop	r28
    3c02:	ff 91       	pop	r31
    3c04:	ef 91       	pop	r30
    3c06:	bf 91       	pop	r27
    3c08:	af 91       	pop	r26
    3c0a:	9f 91       	pop	r25
    3c0c:	8f 91       	pop	r24
    3c0e:	7f 91       	pop	r23
    3c10:	6f 91       	pop	r22
    3c12:	5f 91       	pop	r21
    3c14:	4f 91       	pop	r20
    3c16:	3f 91       	pop	r19
    3c18:	2f 91       	pop	r18
    3c1a:	0f 90       	pop	r0
    3c1c:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    3c20:	0f 90       	pop	r0
    3c22:	1f 90       	pop	r1
    3c24:	18 95       	reti

00003c26 <wait_1ms>:
    3c26:	cf 93       	push	r28
    3c28:	df 93       	push	r29
    3c2a:	00 d0       	rcall	.+0      	; 0x3c2c <wait_1ms+0x6>
    3c2c:	00 d0       	rcall	.+0      	; 0x3c2e <wait_1ms+0x8>
    3c2e:	cd b7       	in	r28, 0x3d	; 61
    3c30:	de b7       	in	r29, 0x3e	; 62
    3c32:	69 83       	std	Y+1, r22	; 0x01
    3c34:	7a 83       	std	Y+2, r23	; 0x02
    3c36:	8b 83       	std	Y+3, r24	; 0x03
    3c38:	9c 83       	std	Y+4, r25	; 0x04
    3c3a:	89 81       	ldd	r24, Y+1	; 0x01
    3c3c:	9a 81       	ldd	r25, Y+2	; 0x02
    3c3e:	ab 81       	ldd	r26, Y+3	; 0x03
    3c40:	bc 81       	ldd	r27, Y+4	; 0x04
    3c42:	89 2b       	or	r24, r25
    3c44:	8a 2b       	or	r24, r26
    3c46:	8b 2b       	or	r24, r27
    3c48:	69 f0       	breq	.+26     	; 0x3c64 <wait_1ms+0x3e>
    3c4a:	89 81       	ldd	r24, Y+1	; 0x01
    3c4c:	9a 81       	ldd	r25, Y+2	; 0x02
    3c4e:	ab 81       	ldd	r26, Y+3	; 0x03
    3c50:	bc 81       	ldd	r27, Y+4	; 0x04
    3c52:	80 93 83 03 	sts	0x0383, r24	; 0x800383 <tick_1ms_cnt>
    3c56:	90 93 84 03 	sts	0x0384, r25	; 0x800384 <tick_1ms_cnt+0x1>
    3c5a:	a0 93 85 03 	sts	0x0385, r26	; 0x800385 <tick_1ms_cnt+0x2>
    3c5e:	b0 93 86 03 	sts	0x0386, r27	; 0x800386 <tick_1ms_cnt+0x3>
    3c62:	0c c0       	rjmp	.+24     	; 0x3c7c <wait_1ms+0x56>
    3c64:	81 e0       	ldi	r24, 0x01	; 1
    3c66:	90 e0       	ldi	r25, 0x00	; 0
    3c68:	a0 e0       	ldi	r26, 0x00	; 0
    3c6a:	b0 e0       	ldi	r27, 0x00	; 0
    3c6c:	80 93 83 03 	sts	0x0383, r24	; 0x800383 <tick_1ms_cnt>
    3c70:	90 93 84 03 	sts	0x0384, r25	; 0x800384 <tick_1ms_cnt+0x1>
    3c74:	a0 93 85 03 	sts	0x0385, r26	; 0x800385 <tick_1ms_cnt+0x2>
    3c78:	b0 93 86 03 	sts	0x0386, r27	; 0x800386 <tick_1ms_cnt+0x3>
    3c7c:	00 00       	nop
    3c7e:	80 91 83 03 	lds	r24, 0x0383	; 0x800383 <tick_1ms_cnt>
    3c82:	90 91 84 03 	lds	r25, 0x0384	; 0x800384 <tick_1ms_cnt+0x1>
    3c86:	a0 91 85 03 	lds	r26, 0x0385	; 0x800385 <tick_1ms_cnt+0x2>
    3c8a:	b0 91 86 03 	lds	r27, 0x0386	; 0x800386 <tick_1ms_cnt+0x3>
    3c8e:	89 2b       	or	r24, r25
    3c90:	8a 2b       	or	r24, r26
    3c92:	8b 2b       	or	r24, r27
    3c94:	a1 f7       	brne	.-24     	; 0x3c7e <wait_1ms+0x58>
    3c96:	00 00       	nop
    3c98:	0f 90       	pop	r0
    3c9a:	0f 90       	pop	r0
    3c9c:	0f 90       	pop	r0
    3c9e:	0f 90       	pop	r0
    3ca0:	df 91       	pop	r29
    3ca2:	cf 91       	pop	r28
    3ca4:	08 95       	ret

00003ca6 <delay_nop>:
    3ca6:	cf 93       	push	r28
    3ca8:	df 93       	push	r29
    3caa:	00 d0       	rcall	.+0      	; 0x3cac <delay_nop+0x6>
    3cac:	cd b7       	in	r28, 0x3d	; 61
    3cae:	de b7       	in	r29, 0x3e	; 62
    3cb0:	8a 83       	std	Y+2, r24	; 0x02
    3cb2:	19 82       	std	Y+1, r1	; 0x01
    3cb4:	04 c0       	rjmp	.+8      	; 0x3cbe <delay_nop+0x18>
    3cb6:	00 00       	nop
    3cb8:	89 81       	ldd	r24, Y+1	; 0x01
    3cba:	8f 5f       	subi	r24, 0xFF	; 255
    3cbc:	89 83       	std	Y+1, r24	; 0x01
    3cbe:	99 81       	ldd	r25, Y+1	; 0x01
    3cc0:	8a 81       	ldd	r24, Y+2	; 0x02
    3cc2:	98 17       	cp	r25, r24
    3cc4:	c0 f3       	brcs	.-16     	; 0x3cb6 <delay_nop+0x10>
    3cc6:	00 00       	nop
    3cc8:	0f 90       	pop	r0
    3cca:	0f 90       	pop	r0
    3ccc:	df 91       	pop	r29
    3cce:	cf 91       	pop	r28
    3cd0:	08 95       	ret

00003cd2 <write_lcd_f>:
    3cd2:	91 e0       	ldi	r25, 0x01	; 1
    3cd4:	90 93 8f 03 	sts	0x038F, r25	; 0x80038f <write_RGB_LCD_activ>
    3cd8:	40 9a       	sbi	0x08, 0	; 8
    3cda:	41 98       	cbi	0x08, 1	; 8
    3cdc:	41 98       	cbi	0x08, 1	; 8
    3cde:	41 9a       	sbi	0x08, 1	; 8
    3ce0:	41 9a       	sbi	0x08, 1	; 8
    3ce2:	41 98       	cbi	0x08, 1	; 8
    3ce4:	41 98       	cbi	0x08, 1	; 8
    3ce6:	41 9a       	sbi	0x08, 1	; 8
    3ce8:	41 9a       	sbi	0x08, 1	; 8
    3cea:	41 98       	cbi	0x08, 1	; 8
    3cec:	41 98       	cbi	0x08, 1	; 8
    3cee:	41 9a       	sbi	0x08, 1	; 8
    3cf0:	41 9a       	sbi	0x08, 1	; 8
    3cf2:	41 98       	cbi	0x08, 1	; 8
    3cf4:	41 98       	cbi	0x08, 1	; 8
    3cf6:	41 9a       	sbi	0x08, 1	; 8
    3cf8:	41 9a       	sbi	0x08, 1	; 8
    3cfa:	41 98       	cbi	0x08, 1	; 8
    3cfc:	41 98       	cbi	0x08, 1	; 8
    3cfe:	41 9a       	sbi	0x08, 1	; 8
    3d00:	40 98       	cbi	0x08, 0	; 8
    3d02:	41 98       	cbi	0x08, 1	; 8
    3d04:	41 98       	cbi	0x08, 1	; 8
    3d06:	41 9a       	sbi	0x08, 1	; 8
    3d08:	83 34       	cpi	r24, 0x43	; 67
    3d0a:	a9 f1       	breq	.+106    	; 0x3d76 <write_lcd_f+0xa4>
    3d0c:	40 9a       	sbi	0x08, 0	; 8
    3d0e:	41 98       	cbi	0x08, 1	; 8
    3d10:	41 98       	cbi	0x08, 1	; 8
    3d12:	41 9a       	sbi	0x08, 1	; 8
    3d14:	40 98       	cbi	0x08, 0	; 8
    3d16:	41 98       	cbi	0x08, 1	; 8
    3d18:	41 98       	cbi	0x08, 1	; 8
    3d1a:	41 9a       	sbi	0x08, 1	; 8
    3d1c:	84 e0       	ldi	r24, 0x04	; 4
    3d1e:	41 98       	cbi	0x08, 1	; 8
    3d20:	60 ff       	sbrs	r22, 0
    3d22:	27 c0       	rjmp	.+78     	; 0x3d72 <write_lcd_f+0xa0>
    3d24:	40 9a       	sbi	0x08, 0	; 8
    3d26:	66 95       	lsr	r22
    3d28:	41 98       	cbi	0x08, 1	; 8
    3d2a:	41 9a       	sbi	0x08, 1	; 8
    3d2c:	81 50       	subi	r24, 0x01	; 1
    3d2e:	b9 f7       	brne	.-18     	; 0x3d1e <write_lcd_f+0x4c>
    3d30:	40 98       	cbi	0x08, 0	; 8
    3d32:	84 e0       	ldi	r24, 0x04	; 4
    3d34:	41 98       	cbi	0x08, 1	; 8
    3d36:	41 98       	cbi	0x08, 1	; 8
    3d38:	41 9a       	sbi	0x08, 1	; 8
    3d3a:	81 50       	subi	r24, 0x01	; 1
    3d3c:	d9 f7       	brne	.-10     	; 0x3d34 <write_lcd_f+0x62>
    3d3e:	84 e0       	ldi	r24, 0x04	; 4
    3d40:	41 98       	cbi	0x08, 1	; 8
    3d42:	60 ff       	sbrs	r22, 0
    3d44:	14 c0       	rjmp	.+40     	; 0x3d6e <write_lcd_f+0x9c>
    3d46:	40 9a       	sbi	0x08, 0	; 8
    3d48:	66 95       	lsr	r22
    3d4a:	41 98       	cbi	0x08, 1	; 8
    3d4c:	41 9a       	sbi	0x08, 1	; 8
    3d4e:	81 50       	subi	r24, 0x01	; 1
    3d50:	b9 f7       	brne	.-18     	; 0x3d40 <write_lcd_f+0x6e>
    3d52:	40 98       	cbi	0x08, 0	; 8
    3d54:	84 e0       	ldi	r24, 0x04	; 4
    3d56:	41 98       	cbi	0x08, 1	; 8
    3d58:	41 98       	cbi	0x08, 1	; 8
    3d5a:	41 9a       	sbi	0x08, 1	; 8
    3d5c:	81 50       	subi	r24, 0x01	; 1
    3d5e:	d9 f7       	brne	.-10     	; 0x3d56 <write_lcd_f+0x84>
    3d60:	84 e1       	ldi	r24, 0x14	; 20
    3d62:	40 9a       	sbi	0x08, 0	; 8
    3d64:	81 50       	subi	r24, 0x01	; 1
    3d66:	e9 f7       	brne	.-6      	; 0x3d62 <write_lcd_f+0x90>
    3d68:	10 92 8f 03 	sts	0x038F, r1	; 0x80038f <write_RGB_LCD_activ>
    3d6c:	08 95       	ret
    3d6e:	40 98       	cbi	0x08, 0	; 8
    3d70:	eb cf       	rjmp	.-42     	; 0x3d48 <write_lcd_f+0x76>
    3d72:	40 98       	cbi	0x08, 0	; 8
    3d74:	d8 cf       	rjmp	.-80     	; 0x3d26 <write_lcd_f+0x54>
    3d76:	40 98       	cbi	0x08, 0	; 8
    3d78:	ca cf       	rjmp	.-108    	; 0x3d0e <write_lcd_f+0x3c>

00003d7a <write_text_ram>:
    3d7a:	0f 93       	push	r16
    3d7c:	1f 93       	push	r17
    3d7e:	df 93       	push	r29
    3d80:	8a 01       	movw	r16, r20
    3d82:	90 e2       	ldi	r25, 0x20	; 32
    3d84:	89 9f       	mul	r24, r25
    3d86:	60 0d       	add	r22, r0
    3d88:	11 24       	eor	r1, r1
    3d8a:	60 68       	ori	r22, 0x80	; 128
    3d8c:	83 e4       	ldi	r24, 0x43	; 67
    3d8e:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <write_lcd_f>
    3d92:	f8 01       	movw	r30, r16
    3d94:	60 81       	ld	r22, Z
    3d96:	66 23       	and	r22, r22
    3d98:	59 f0       	breq	.+22     	; 0x3db0 <write_text_ram+0x36>
    3d9a:	d0 e0       	ldi	r29, 0x00	; 0
    3d9c:	df 5f       	subi	r29, 0xFF	; 255
    3d9e:	84 e4       	ldi	r24, 0x44	; 68
    3da0:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <write_lcd_f>
    3da4:	f8 01       	movw	r30, r16
    3da6:	ed 0f       	add	r30, r29
    3da8:	f1 1d       	adc	r31, r1
    3daa:	60 81       	ld	r22, Z
    3dac:	61 11       	cpse	r22, r1
    3dae:	f6 cf       	rjmp	.-20     	; 0x3d9c <write_text_ram+0x22>
    3db0:	df 91       	pop	r29
    3db2:	1f 91       	pop	r17
    3db4:	0f 91       	pop	r16
    3db6:	08 95       	ret

00003db8 <write_zahl>:
    3db8:	2f 92       	push	r2
    3dba:	3f 92       	push	r3
    3dbc:	4f 92       	push	r4
    3dbe:	5f 92       	push	r5
    3dc0:	6f 92       	push	r6
    3dc2:	7f 92       	push	r7
    3dc4:	8f 92       	push	r8
    3dc6:	9f 92       	push	r9
    3dc8:	af 92       	push	r10
    3dca:	bf 92       	push	r11
    3dcc:	cf 92       	push	r12
    3dce:	df 92       	push	r13
    3dd0:	ef 92       	push	r14
    3dd2:	ff 92       	push	r15
    3dd4:	0f 93       	push	r16
    3dd6:	1f 93       	push	r17
    3dd8:	cf 93       	push	r28
    3dda:	df 93       	push	r29
    3ddc:	cd b7       	in	r28, 0x3d	; 61
    3dde:	de b7       	in	r29, 0x3e	; 62
    3de0:	63 97       	sbiw	r28, 0x13	; 19
    3de2:	0f b6       	in	r0, 0x3f	; 63
    3de4:	f8 94       	cli
    3de6:	de bf       	out	0x3e, r29	; 62
    3de8:	0f be       	out	0x3f, r0	; 63
    3dea:	cd bf       	out	0x3d, r28	; 61
    3dec:	8a 8b       	std	Y+18, r24	; 0x12
    3dee:	6b 8b       	std	Y+19, r22	; 0x13
    3df0:	29 01       	movw	r4, r18
    3df2:	3a 01       	movw	r6, r20
    3df4:	c8 8a       	std	Y+16, r12	; 0x10
    3df6:	04 36       	cpi	r16, 0x64	; 100
    3df8:	08 f4       	brcc	.+2      	; 0x3dfc <write_zahl+0x44>
    3dfa:	bd c0       	rjmp	.+378    	; 0x3f76 <write_zahl+0x1be>
    3dfc:	04 56       	subi	r16, 0x64	; 100
    3dfe:	19 8a       	std	Y+17, r1	; 0x11
    3e00:	0b 30       	cpi	r16, 0x0B	; 11
    3e02:	08 f0       	brcs	.+2      	; 0x3e06 <write_zahl+0x4e>
    3e04:	0a e0       	ldi	r16, 0x0A	; 10
    3e06:	ef 86       	std	Y+15, r14	; 0x0f
    3e08:	88 89       	ldd	r24, Y+16	; 0x10
    3e0a:	8e 15       	cp	r24, r14
    3e0c:	08 f4       	brcc	.+2      	; 0x3e10 <write_zahl+0x58>
    3e0e:	8f 87       	std	Y+15, r24	; 0x0f
    3e10:	20 2e       	mov	r2, r16
    3e12:	31 2c       	mov	r3, r1
    3e14:	c1 01       	movw	r24, r2
    3e16:	ef 85       	ldd	r30, Y+15	; 0x0f
    3e18:	8e 0f       	add	r24, r30
    3e1a:	91 1d       	adc	r25, r1
    3e1c:	0b 97       	sbiw	r24, 0x0b	; 11
    3e1e:	1c f0       	brlt	.+6      	; 0x3e26 <write_zahl+0x6e>
    3e20:	8a e0       	ldi	r24, 0x0A	; 10
    3e22:	80 1b       	sub	r24, r16
    3e24:	8f 87       	std	Y+15, r24	; 0x0f
    3e26:	c3 01       	movw	r24, r6
    3e28:	b2 01       	movw	r22, r4
    3e2a:	2a e0       	ldi	r18, 0x0A	; 10
    3e2c:	30 e0       	ldi	r19, 0x00	; 0
    3e2e:	40 e0       	ldi	r20, 0x00	; 0
    3e30:	50 e0       	ldi	r21, 0x00	; 0
    3e32:	0e 94 c9 21 	call	0x4392	; 0x4392 <__udivmodsi4>
    3e36:	60 5d       	subi	r22, 0xD0	; 208
    3e38:	6c 87       	std	Y+12, r22	; 0x0c
    3e3a:	1a e0       	ldi	r17, 0x0A	; 10
    3e3c:	3a e0       	ldi	r19, 0x0A	; 10
    3e3e:	c3 2e       	mov	r12, r19
    3e40:	d1 2c       	mov	r13, r1
    3e42:	e1 2c       	mov	r14, r1
    3e44:	f1 2c       	mov	r15, r1
    3e46:	4a e0       	ldi	r20, 0x0A	; 10
    3e48:	84 2e       	mov	r8, r20
    3e4a:	91 2c       	mov	r9, r1
    3e4c:	a1 2c       	mov	r10, r1
    3e4e:	b1 2c       	mov	r11, r1
    3e50:	81 e0       	ldi	r24, 0x01	; 1
    3e52:	90 e0       	ldi	r25, 0x00	; 0
    3e54:	8c 0f       	add	r24, r28
    3e56:	9d 1f       	adc	r25, r29
    3e58:	81 0f       	add	r24, r17
    3e5a:	91 1d       	adc	r25, r1
    3e5c:	9e 87       	std	Y+14, r25	; 0x0e
    3e5e:	8d 87       	std	Y+13, r24	; 0x0d
    3e60:	c3 01       	movw	r24, r6
    3e62:	b2 01       	movw	r22, r4
    3e64:	a7 01       	movw	r20, r14
    3e66:	96 01       	movw	r18, r12
    3e68:	0e 94 c9 21 	call	0x4392	; 0x4392 <__udivmodsi4>
    3e6c:	ca 01       	movw	r24, r20
    3e6e:	b9 01       	movw	r22, r18
    3e70:	a5 01       	movw	r20, r10
    3e72:	94 01       	movw	r18, r8
    3e74:	0e 94 c9 21 	call	0x4392	; 0x4392 <__udivmodsi4>
    3e78:	60 5d       	subi	r22, 0xD0	; 208
    3e7a:	ed 85       	ldd	r30, Y+13	; 0x0d
    3e7c:	fe 85       	ldd	r31, Y+14	; 0x0e
    3e7e:	60 83       	st	Z, r22
    3e80:	cc 0c       	add	r12, r12
    3e82:	dd 1c       	adc	r13, r13
    3e84:	ee 1c       	adc	r14, r14
    3e86:	ff 1c       	adc	r15, r15
    3e88:	d7 01       	movw	r26, r14
    3e8a:	c6 01       	movw	r24, r12
    3e8c:	88 0f       	add	r24, r24
    3e8e:	99 1f       	adc	r25, r25
    3e90:	aa 1f       	adc	r26, r26
    3e92:	bb 1f       	adc	r27, r27
    3e94:	88 0f       	add	r24, r24
    3e96:	99 1f       	adc	r25, r25
    3e98:	aa 1f       	adc	r26, r26
    3e9a:	bb 1f       	adc	r27, r27
    3e9c:	c8 0e       	add	r12, r24
    3e9e:	d9 1e       	adc	r13, r25
    3ea0:	ea 1e       	adc	r14, r26
    3ea2:	fb 1e       	adc	r15, r27
    3ea4:	11 50       	subi	r17, 0x01	; 1
    3ea6:	a0 f6       	brcc	.-88     	; 0x3e50 <write_zahl+0x98>
    3ea8:	2c e0       	ldi	r18, 0x0C	; 12
    3eaa:	f8 89       	ldd	r31, Y+16	; 0x10
    3eac:	2f 1b       	sub	r18, r31
    3eae:	82 2f       	mov	r24, r18
    3eb0:	80 1b       	sub	r24, r16
    3eb2:	00 23       	and	r16, r16
    3eb4:	09 f4       	brne	.+2      	; 0x3eb8 <write_zahl+0x100>
    3eb6:	85 c0       	rjmp	.+266    	; 0x3fc2 <write_zahl+0x20a>
    3eb8:	fe 01       	movw	r30, r28
    3eba:	31 96       	adiw	r30, 0x01	; 1
    3ebc:	a1 e0       	ldi	r26, 0x01	; 1
    3ebe:	b0 e0       	ldi	r27, 0x00	; 0
    3ec0:	ac 0f       	add	r26, r28
    3ec2:	bd 1f       	adc	r27, r29
    3ec4:	a8 0f       	add	r26, r24
    3ec6:	b1 1d       	adc	r27, r1
    3ec8:	9c 91       	ld	r25, X
    3eca:	91 93       	st	Z+, r25
    3ecc:	8f 5f       	subi	r24, 0xFF	; 255
    3ece:	28 13       	cpse	r18, r24
    3ed0:	f5 cf       	rjmp	.-22     	; 0x3ebc <write_zahl+0x104>
    3ed2:	8f 85       	ldd	r24, Y+15	; 0x0f
    3ed4:	81 11       	cpse	r24, r1
    3ed6:	52 c0       	rjmp	.+164    	; 0x3f7c <write_zahl+0x1c4>
    3ed8:	f1 01       	movw	r30, r2
    3eda:	81 e0       	ldi	r24, 0x01	; 1
    3edc:	90 e0       	ldi	r25, 0x00	; 0
    3ede:	8c 0f       	add	r24, r28
    3ee0:	9d 1f       	adc	r25, r29
    3ee2:	e8 0f       	add	r30, r24
    3ee4:	f9 1f       	adc	r31, r25
    3ee6:	10 82       	st	Z, r1
    3ee8:	99 89       	ldd	r25, Y+17	; 0x11
    3eea:	99 23       	and	r25, r25
    3eec:	21 f1       	breq	.+72     	; 0x3f36 <write_zahl+0x17e>
    3eee:	89 81       	ldd	r24, Y+1	; 0x01
    3ef0:	80 33       	cpi	r24, 0x30	; 48
    3ef2:	09 f5       	brne	.+66     	; 0x3f36 <write_zahl+0x17e>
    3ef4:	a1 01       	movw	r20, r2
    3ef6:	41 50       	subi	r20, 0x01	; 1
    3ef8:	51 09       	sbc	r21, r1
    3efa:	14 16       	cp	r1, r20
    3efc:	15 06       	cpc	r1, r21
    3efe:	dc f4       	brge	.+54     	; 0x3f36 <write_zahl+0x17e>
    3f00:	80 e0       	ldi	r24, 0x00	; 0
    3f02:	90 e0       	ldi	r25, 0x00	; 0
    3f04:	20 e0       	ldi	r18, 0x00	; 0
    3f06:	60 e2       	ldi	r22, 0x20	; 32
    3f08:	03 c0       	rjmp	.+6      	; 0x3f10 <write_zahl+0x158>
    3f0a:	84 17       	cp	r24, r20
    3f0c:	95 07       	cpc	r25, r21
    3f0e:	9c f4       	brge	.+38     	; 0x3f36 <write_zahl+0x17e>
    3f10:	2f 5f       	subi	r18, 0xFF	; 255
    3f12:	e1 e0       	ldi	r30, 0x01	; 1
    3f14:	f0 e0       	ldi	r31, 0x00	; 0
    3f16:	ec 0f       	add	r30, r28
    3f18:	fd 1f       	adc	r31, r29
    3f1a:	e8 0f       	add	r30, r24
    3f1c:	f9 1f       	adc	r31, r25
    3f1e:	60 83       	st	Z, r22
    3f20:	82 2f       	mov	r24, r18
    3f22:	90 e0       	ldi	r25, 0x00	; 0
    3f24:	e1 e0       	ldi	r30, 0x01	; 1
    3f26:	f0 e0       	ldi	r31, 0x00	; 0
    3f28:	ec 0f       	add	r30, r28
    3f2a:	fd 1f       	adc	r31, r29
    3f2c:	e8 0f       	add	r30, r24
    3f2e:	f9 1f       	adc	r31, r25
    3f30:	30 81       	ld	r19, Z
    3f32:	30 33       	cpi	r19, 0x30	; 48
    3f34:	51 f3       	breq	.-44     	; 0x3f0a <write_zahl+0x152>
    3f36:	ae 01       	movw	r20, r28
    3f38:	4f 5f       	subi	r20, 0xFF	; 255
    3f3a:	5f 4f       	sbci	r21, 0xFF	; 255
    3f3c:	6b 89       	ldd	r22, Y+19	; 0x13
    3f3e:	8a 89       	ldd	r24, Y+18	; 0x12
    3f40:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <write_text_ram>
    3f44:	63 96       	adiw	r28, 0x13	; 19
    3f46:	0f b6       	in	r0, 0x3f	; 63
    3f48:	f8 94       	cli
    3f4a:	de bf       	out	0x3e, r29	; 62
    3f4c:	0f be       	out	0x3f, r0	; 63
    3f4e:	cd bf       	out	0x3d, r28	; 61
    3f50:	df 91       	pop	r29
    3f52:	cf 91       	pop	r28
    3f54:	1f 91       	pop	r17
    3f56:	0f 91       	pop	r16
    3f58:	ff 90       	pop	r15
    3f5a:	ef 90       	pop	r14
    3f5c:	df 90       	pop	r13
    3f5e:	cf 90       	pop	r12
    3f60:	bf 90       	pop	r11
    3f62:	af 90       	pop	r10
    3f64:	9f 90       	pop	r9
    3f66:	8f 90       	pop	r8
    3f68:	7f 90       	pop	r7
    3f6a:	6f 90       	pop	r6
    3f6c:	5f 90       	pop	r5
    3f6e:	4f 90       	pop	r4
    3f70:	3f 90       	pop	r3
    3f72:	2f 90       	pop	r2
    3f74:	08 95       	ret
    3f76:	21 e0       	ldi	r18, 0x01	; 1
    3f78:	29 8b       	std	Y+17, r18	; 0x11
    3f7a:	42 cf       	rjmp	.-380    	; 0x3e00 <write_zahl+0x48>
    3f7c:	0f 5f       	subi	r16, 0xFF	; 255
    3f7e:	8e e2       	ldi	r24, 0x2E	; 46
    3f80:	e1 e0       	ldi	r30, 0x01	; 1
    3f82:	f0 e0       	ldi	r31, 0x00	; 0
    3f84:	ec 0f       	add	r30, r28
    3f86:	fd 1f       	adc	r31, r29
    3f88:	e2 0d       	add	r30, r2
    3f8a:	f3 1d       	adc	r31, r3
    3f8c:	80 83       	st	Z, r24
    3f8e:	e0 2f       	mov	r30, r16
    3f90:	20 1b       	sub	r18, r16
    3f92:	82 2f       	mov	r24, r18
    3f94:	8e 0f       	add	r24, r30
    3f96:	a1 e0       	ldi	r26, 0x01	; 1
    3f98:	b0 e0       	ldi	r27, 0x00	; 0
    3f9a:	ac 0f       	add	r26, r28
    3f9c:	bd 1f       	adc	r27, r29
    3f9e:	a8 0f       	add	r26, r24
    3fa0:	b1 1d       	adc	r27, r1
    3fa2:	8c 91       	ld	r24, X
    3fa4:	a1 e0       	ldi	r26, 0x01	; 1
    3fa6:	b0 e0       	ldi	r27, 0x00	; 0
    3fa8:	ac 0f       	add	r26, r28
    3faa:	bd 1f       	adc	r27, r29
    3fac:	ae 0f       	add	r26, r30
    3fae:	b1 1d       	adc	r27, r1
    3fb0:	8c 93       	st	X, r24
    3fb2:	ef 5f       	subi	r30, 0xFF	; 255
    3fb4:	8e 2f       	mov	r24, r30
    3fb6:	80 1b       	sub	r24, r16
    3fb8:	9f 85       	ldd	r25, Y+15	; 0x0f
    3fba:	89 17       	cp	r24, r25
    3fbc:	50 f3       	brcs	.-44     	; 0x3f92 <write_zahl+0x1da>
    3fbe:	f0 e0       	ldi	r31, 0x00	; 0
    3fc0:	8c cf       	rjmp	.-232    	; 0x3eda <write_zahl+0x122>
    3fc2:	ef 85       	ldd	r30, Y+15	; 0x0f
    3fc4:	ee 23       	and	r30, r30
    3fc6:	21 f0       	breq	.+8      	; 0x3fd0 <write_zahl+0x218>
    3fc8:	8e e2       	ldi	r24, 0x2E	; 46
    3fca:	89 83       	std	Y+1, r24	; 0x01
    3fcc:	01 e0       	ldi	r16, 0x01	; 1
    3fce:	df cf       	rjmp	.-66     	; 0x3f8e <write_zahl+0x1d6>
    3fd0:	e0 e0       	ldi	r30, 0x00	; 0
    3fd2:	f0 e0       	ldi	r31, 0x00	; 0
    3fd4:	82 cf       	rjmp	.-252    	; 0x3eda <write_zahl+0x122>

00003fd6 <lcd_init>:
    3fd6:	df 93       	push	r29
    3fd8:	38 9a       	sbi	0x07, 0	; 7
    3fda:	39 9a       	sbi	0x07, 1	; 7
    3fdc:	d2 e3       	ldi	r29, 0x32	; 50
    3fde:	88 e7       	ldi	r24, 0x78	; 120
    3fe0:	0e 94 53 1e 	call	0x3ca6	; 0x3ca6 <delay_nop>
    3fe4:	d1 50       	subi	r29, 0x01	; 1
    3fe6:	d9 f7       	brne	.-10     	; 0x3fde <lcd_init+0x8>
    3fe8:	64 e3       	ldi	r22, 0x34	; 52
    3fea:	83 e4       	ldi	r24, 0x43	; 67
    3fec:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <write_lcd_f>
    3ff0:	64 e3       	ldi	r22, 0x34	; 52
    3ff2:	83 e4       	ldi	r24, 0x43	; 67
    3ff4:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <write_lcd_f>
    3ff8:	69 e0       	ldi	r22, 0x09	; 9
    3ffa:	83 e4       	ldi	r24, 0x43	; 67
    3ffc:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <write_lcd_f>
    4000:	60 e3       	ldi	r22, 0x30	; 48
    4002:	83 e4       	ldi	r24, 0x43	; 67
    4004:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <write_lcd_f>
    4008:	6c e0       	ldi	r22, 0x0C	; 12
    400a:	83 e4       	ldi	r24, 0x43	; 67
    400c:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <write_lcd_f>
    4010:	61 e0       	ldi	r22, 0x01	; 1
    4012:	83 e4       	ldi	r24, 0x43	; 67
    4014:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <write_lcd_f>
    4018:	d8 e0       	ldi	r29, 0x08	; 8
    401a:	88 e7       	ldi	r24, 0x78	; 120
    401c:	0e 94 53 1e 	call	0x3ca6	; 0x3ca6 <delay_nop>
    4020:	d1 50       	subi	r29, 0x01	; 1
    4022:	d9 f7       	brne	.-10     	; 0x401a <lcd_init+0x44>
    4024:	67 e0       	ldi	r22, 0x07	; 7
    4026:	83 e4       	ldi	r24, 0x43	; 67
    4028:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <write_lcd_f>
    402c:	df 91       	pop	r29
    402e:	0c 94 65 1d 	jmp	0x3aca	; 0x3aca <init_Timer0_1ms_int>

00004032 <clear_lcd>:
    4032:	df 93       	push	r29
    4034:	61 e0       	ldi	r22, 0x01	; 1
    4036:	83 e4       	ldi	r24, 0x43	; 67
    4038:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <write_lcd_f>
    403c:	d8 e0       	ldi	r29, 0x08	; 8
    403e:	88 e7       	ldi	r24, 0x78	; 120
    4040:	0e 94 53 1e 	call	0x3ca6	; 0x3ca6 <delay_nop>
    4044:	d1 50       	subi	r29, 0x01	; 1
    4046:	d9 f7       	brne	.-10     	; 0x403e <clear_lcd+0xc>
    4048:	df 91       	pop	r29
    404a:	08 95       	ret

0000404c <LED_Show>:
    404c:	cf 93       	push	r28
    404e:	df 93       	push	r29
    4050:	1f 92       	push	r1
    4052:	cd b7       	in	r28, 0x3d	; 61
    4054:	de b7       	in	r29, 0x3e	; 62
    4056:	85 e2       	ldi	r24, 0x25	; 37
    4058:	90 e0       	ldi	r25, 0x00	; 0
    405a:	21 e0       	ldi	r18, 0x01	; 1
    405c:	fc 01       	movw	r30, r24
    405e:	20 83       	st	Z, r18
    4060:	19 82       	std	Y+1, r1	; 0x01
    4062:	17 c0       	rjmp	.+46     	; 0x4092 <LED_Show+0x46>
    4064:	62 e3       	ldi	r22, 0x32	; 50
    4066:	70 e0       	ldi	r23, 0x00	; 0
    4068:	80 e0       	ldi	r24, 0x00	; 0
    406a:	90 e0       	ldi	r25, 0x00	; 0
    406c:	0e 94 13 1e 	call	0x3c26	; 0x3c26 <wait_1ms>
    4070:	85 e2       	ldi	r24, 0x25	; 37
    4072:	90 e0       	ldi	r25, 0x00	; 0
    4074:	29 81       	ldd	r18, Y+1	; 0x01
    4076:	42 2f       	mov	r20, r18
    4078:	50 e0       	ldi	r21, 0x00	; 0
    407a:	21 e0       	ldi	r18, 0x01	; 1
    407c:	30 e0       	ldi	r19, 0x00	; 0
    407e:	02 c0       	rjmp	.+4      	; 0x4084 <LED_Show+0x38>
    4080:	22 0f       	add	r18, r18
    4082:	33 1f       	adc	r19, r19
    4084:	4a 95       	dec	r20
    4086:	e2 f7       	brpl	.-8      	; 0x4080 <LED_Show+0x34>
    4088:	fc 01       	movw	r30, r24
    408a:	20 83       	st	Z, r18
    408c:	89 81       	ldd	r24, Y+1	; 0x01
    408e:	8f 5f       	subi	r24, 0xFF	; 255
    4090:	89 83       	std	Y+1, r24	; 0x01
    4092:	89 81       	ldd	r24, Y+1	; 0x01
    4094:	88 30       	cpi	r24, 0x08	; 8
    4096:	30 f3       	brcs	.-52     	; 0x4064 <LED_Show+0x18>
    4098:	85 e2       	ldi	r24, 0x25	; 37
    409a:	90 e0       	ldi	r25, 0x00	; 0
    409c:	20 e8       	ldi	r18, 0x80	; 128
    409e:	fc 01       	movw	r30, r24
    40a0:	20 83       	st	Z, r18
    40a2:	19 82       	std	Y+1, r1	; 0x01
    40a4:	17 c0       	rjmp	.+46     	; 0x40d4 <LED_Show+0x88>
    40a6:	62 e3       	ldi	r22, 0x32	; 50
    40a8:	70 e0       	ldi	r23, 0x00	; 0
    40aa:	80 e0       	ldi	r24, 0x00	; 0
    40ac:	90 e0       	ldi	r25, 0x00	; 0
    40ae:	0e 94 13 1e 	call	0x3c26	; 0x3c26 <wait_1ms>
    40b2:	85 e2       	ldi	r24, 0x25	; 37
    40b4:	90 e0       	ldi	r25, 0x00	; 0
    40b6:	29 81       	ldd	r18, Y+1	; 0x01
    40b8:	42 2f       	mov	r20, r18
    40ba:	50 e0       	ldi	r21, 0x00	; 0
    40bc:	20 e8       	ldi	r18, 0x80	; 128
    40be:	30 e0       	ldi	r19, 0x00	; 0
    40c0:	02 c0       	rjmp	.+4      	; 0x40c6 <LED_Show+0x7a>
    40c2:	35 95       	asr	r19
    40c4:	27 95       	ror	r18
    40c6:	4a 95       	dec	r20
    40c8:	e2 f7       	brpl	.-8      	; 0x40c2 <LED_Show+0x76>
    40ca:	fc 01       	movw	r30, r24
    40cc:	20 83       	st	Z, r18
    40ce:	89 81       	ldd	r24, Y+1	; 0x01
    40d0:	8f 5f       	subi	r24, 0xFF	; 255
    40d2:	89 83       	std	Y+1, r24	; 0x01
    40d4:	89 81       	ldd	r24, Y+1	; 0x01
    40d6:	88 30       	cpi	r24, 0x08	; 8
    40d8:	30 f3       	brcs	.-52     	; 0x40a6 <LED_Show+0x5a>
    40da:	64 e6       	ldi	r22, 0x64	; 100
    40dc:	70 e0       	ldi	r23, 0x00	; 0
    40de:	80 e0       	ldi	r24, 0x00	; 0
    40e0:	90 e0       	ldi	r25, 0x00	; 0
    40e2:	0e 94 13 1e 	call	0x3c26	; 0x3c26 <wait_1ms>
    40e6:	85 e2       	ldi	r24, 0x25	; 37
    40e8:	90 e0       	ldi	r25, 0x00	; 0
    40ea:	fc 01       	movw	r30, r24
    40ec:	10 82       	st	Z, r1
    40ee:	00 00       	nop
    40f0:	0f 90       	pop	r0
    40f2:	df 91       	pop	r29
    40f4:	cf 91       	pop	r28
    40f6:	08 95       	ret

000040f8 <init_BT_CAR_V2_0>:
    40f8:	cf 93       	push	r28
    40fa:	df 93       	push	r29
    40fc:	cd b7       	in	r28, 0x3d	; 61
    40fe:	de b7       	in	r29, 0x3e	; 62
    4100:	81 e2       	ldi	r24, 0x21	; 33
    4102:	90 e0       	ldi	r25, 0x00	; 0
    4104:	20 e6       	ldi	r18, 0x60	; 96
    4106:	fc 01       	movw	r30, r24
    4108:	20 83       	st	Z, r18
    410a:	84 e2       	ldi	r24, 0x24	; 36
    410c:	90 e0       	ldi	r25, 0x00	; 0
    410e:	2f ef       	ldi	r18, 0xFF	; 255
    4110:	fc 01       	movw	r30, r24
    4112:	20 83       	st	Z, r18
    4114:	8a e2       	ldi	r24, 0x2A	; 42
    4116:	90 e0       	ldi	r25, 0x00	; 0
    4118:	2c ef       	ldi	r18, 0xFC	; 252
    411a:	fc 01       	movw	r30, r24
    411c:	20 83       	st	Z, r18
    411e:	78 94       	sei
    4120:	0e 94 eb 1f 	call	0x3fd6	; 0x3fd6 <lcd_init>
    4124:	0e 94 19 20 	call	0x4032	; 0x4032 <clear_lcd>
    4128:	0e 94 26 20 	call	0x404c	; 0x404c <LED_Show>
    412c:	00 00       	nop
    412e:	df 91       	pop	r29
    4130:	cf 91       	pop	r28
    4132:	08 95       	ret

00004134 <__cmpsf2>:
    4134:	0e 94 ce 20 	call	0x419c	; 0x419c <__fp_cmp>
    4138:	08 f4       	brcc	.+2      	; 0x413c <__cmpsf2+0x8>
    413a:	81 e0       	ldi	r24, 0x01	; 1
    413c:	08 95       	ret

0000413e <__fixunssfsi>:
    413e:	0e 94 fa 20 	call	0x41f4	; 0x41f4 <__fp_splitA>
    4142:	88 f0       	brcs	.+34     	; 0x4166 <__fixunssfsi+0x28>
    4144:	9f 57       	subi	r25, 0x7F	; 127
    4146:	98 f0       	brcs	.+38     	; 0x416e <__fixunssfsi+0x30>
    4148:	b9 2f       	mov	r27, r25
    414a:	99 27       	eor	r25, r25
    414c:	b7 51       	subi	r27, 0x17	; 23
    414e:	b0 f0       	brcs	.+44     	; 0x417c <__fixunssfsi+0x3e>
    4150:	e1 f0       	breq	.+56     	; 0x418a <__fixunssfsi+0x4c>
    4152:	66 0f       	add	r22, r22
    4154:	77 1f       	adc	r23, r23
    4156:	88 1f       	adc	r24, r24
    4158:	99 1f       	adc	r25, r25
    415a:	1a f0       	brmi	.+6      	; 0x4162 <__fixunssfsi+0x24>
    415c:	ba 95       	dec	r27
    415e:	c9 f7       	brne	.-14     	; 0x4152 <__fixunssfsi+0x14>
    4160:	14 c0       	rjmp	.+40     	; 0x418a <__fixunssfsi+0x4c>
    4162:	b1 30       	cpi	r27, 0x01	; 1
    4164:	91 f0       	breq	.+36     	; 0x418a <__fixunssfsi+0x4c>
    4166:	0e 94 14 21 	call	0x4228	; 0x4228 <__fp_zero>
    416a:	b1 e0       	ldi	r27, 0x01	; 1
    416c:	08 95       	ret
    416e:	0c 94 14 21 	jmp	0x4228	; 0x4228 <__fp_zero>
    4172:	67 2f       	mov	r22, r23
    4174:	78 2f       	mov	r23, r24
    4176:	88 27       	eor	r24, r24
    4178:	b8 5f       	subi	r27, 0xF8	; 248
    417a:	39 f0       	breq	.+14     	; 0x418a <__fixunssfsi+0x4c>
    417c:	b9 3f       	cpi	r27, 0xF9	; 249
    417e:	cc f3       	brlt	.-14     	; 0x4172 <__fixunssfsi+0x34>
    4180:	86 95       	lsr	r24
    4182:	77 95       	ror	r23
    4184:	67 95       	ror	r22
    4186:	b3 95       	inc	r27
    4188:	d9 f7       	brne	.-10     	; 0x4180 <__fixunssfsi+0x42>
    418a:	3e f4       	brtc	.+14     	; 0x419a <__fixunssfsi+0x5c>
    418c:	90 95       	com	r25
    418e:	80 95       	com	r24
    4190:	70 95       	com	r23
    4192:	61 95       	neg	r22
    4194:	7f 4f       	sbci	r23, 0xFF	; 255
    4196:	8f 4f       	sbci	r24, 0xFF	; 255
    4198:	9f 4f       	sbci	r25, 0xFF	; 255
    419a:	08 95       	ret

0000419c <__fp_cmp>:
    419c:	99 0f       	add	r25, r25
    419e:	00 08       	sbc	r0, r0
    41a0:	55 0f       	add	r21, r21
    41a2:	aa 0b       	sbc	r26, r26
    41a4:	e0 e8       	ldi	r30, 0x80	; 128
    41a6:	fe ef       	ldi	r31, 0xFE	; 254
    41a8:	16 16       	cp	r1, r22
    41aa:	17 06       	cpc	r1, r23
    41ac:	e8 07       	cpc	r30, r24
    41ae:	f9 07       	cpc	r31, r25
    41b0:	c0 f0       	brcs	.+48     	; 0x41e2 <__fp_cmp+0x46>
    41b2:	12 16       	cp	r1, r18
    41b4:	13 06       	cpc	r1, r19
    41b6:	e4 07       	cpc	r30, r20
    41b8:	f5 07       	cpc	r31, r21
    41ba:	98 f0       	brcs	.+38     	; 0x41e2 <__fp_cmp+0x46>
    41bc:	62 1b       	sub	r22, r18
    41be:	73 0b       	sbc	r23, r19
    41c0:	84 0b       	sbc	r24, r20
    41c2:	95 0b       	sbc	r25, r21
    41c4:	39 f4       	brne	.+14     	; 0x41d4 <__fp_cmp+0x38>
    41c6:	0a 26       	eor	r0, r26
    41c8:	61 f0       	breq	.+24     	; 0x41e2 <__fp_cmp+0x46>
    41ca:	23 2b       	or	r18, r19
    41cc:	24 2b       	or	r18, r20
    41ce:	25 2b       	or	r18, r21
    41d0:	21 f4       	brne	.+8      	; 0x41da <__fp_cmp+0x3e>
    41d2:	08 95       	ret
    41d4:	0a 26       	eor	r0, r26
    41d6:	09 f4       	brne	.+2      	; 0x41da <__fp_cmp+0x3e>
    41d8:	a1 40       	sbci	r26, 0x01	; 1
    41da:	a6 95       	lsr	r26
    41dc:	8f ef       	ldi	r24, 0xFF	; 255
    41de:	81 1d       	adc	r24, r1
    41e0:	81 1d       	adc	r24, r1
    41e2:	08 95       	ret

000041e4 <__fp_split3>:
    41e4:	57 fd       	sbrc	r21, 7
    41e6:	90 58       	subi	r25, 0x80	; 128
    41e8:	44 0f       	add	r20, r20
    41ea:	55 1f       	adc	r21, r21
    41ec:	59 f0       	breq	.+22     	; 0x4204 <__fp_splitA+0x10>
    41ee:	5f 3f       	cpi	r21, 0xFF	; 255
    41f0:	71 f0       	breq	.+28     	; 0x420e <__fp_splitA+0x1a>
    41f2:	47 95       	ror	r20

000041f4 <__fp_splitA>:
    41f4:	88 0f       	add	r24, r24
    41f6:	97 fb       	bst	r25, 7
    41f8:	99 1f       	adc	r25, r25
    41fa:	61 f0       	breq	.+24     	; 0x4214 <__fp_splitA+0x20>
    41fc:	9f 3f       	cpi	r25, 0xFF	; 255
    41fe:	79 f0       	breq	.+30     	; 0x421e <__fp_splitA+0x2a>
    4200:	87 95       	ror	r24
    4202:	08 95       	ret
    4204:	12 16       	cp	r1, r18
    4206:	13 06       	cpc	r1, r19
    4208:	14 06       	cpc	r1, r20
    420a:	55 1f       	adc	r21, r21
    420c:	f2 cf       	rjmp	.-28     	; 0x41f2 <__fp_split3+0xe>
    420e:	46 95       	lsr	r20
    4210:	f1 df       	rcall	.-30     	; 0x41f4 <__fp_splitA>
    4212:	08 c0       	rjmp	.+16     	; 0x4224 <__fp_splitA+0x30>
    4214:	16 16       	cp	r1, r22
    4216:	17 06       	cpc	r1, r23
    4218:	18 06       	cpc	r1, r24
    421a:	99 1f       	adc	r25, r25
    421c:	f1 cf       	rjmp	.-30     	; 0x4200 <__fp_splitA+0xc>
    421e:	86 95       	lsr	r24
    4220:	71 05       	cpc	r23, r1
    4222:	61 05       	cpc	r22, r1
    4224:	08 94       	sec
    4226:	08 95       	ret

00004228 <__fp_zero>:
    4228:	e8 94       	clt

0000422a <__fp_szero>:
    422a:	bb 27       	eor	r27, r27
    422c:	66 27       	eor	r22, r22
    422e:	77 27       	eor	r23, r23
    4230:	cb 01       	movw	r24, r22
    4232:	97 f9       	bld	r25, 7
    4234:	08 95       	ret

00004236 <__gesf2>:
    4236:	0e 94 ce 20 	call	0x419c	; 0x419c <__fp_cmp>
    423a:	08 f4       	brcc	.+2      	; 0x423e <__gesf2+0x8>
    423c:	8f ef       	ldi	r24, 0xFF	; 255
    423e:	08 95       	ret

00004240 <__mulsf3>:
    4240:	0e 94 33 21 	call	0x4266	; 0x4266 <__mulsf3x>
    4244:	0c 94 a4 21 	jmp	0x4348	; 0x4348 <__fp_round>
    4248:	0e 94 96 21 	call	0x432c	; 0x432c <__fp_pscA>
    424c:	38 f0       	brcs	.+14     	; 0x425c <__mulsf3+0x1c>
    424e:	0e 94 9d 21 	call	0x433a	; 0x433a <__fp_pscB>
    4252:	20 f0       	brcs	.+8      	; 0x425c <__mulsf3+0x1c>
    4254:	95 23       	and	r25, r21
    4256:	11 f0       	breq	.+4      	; 0x425c <__mulsf3+0x1c>
    4258:	0c 94 8d 21 	jmp	0x431a	; 0x431a <__fp_inf>
    425c:	0c 94 93 21 	jmp	0x4326	; 0x4326 <__fp_nan>
    4260:	11 24       	eor	r1, r1
    4262:	0c 94 15 21 	jmp	0x422a	; 0x422a <__fp_szero>

00004266 <__mulsf3x>:
    4266:	0e 94 f2 20 	call	0x41e4	; 0x41e4 <__fp_split3>
    426a:	70 f3       	brcs	.-36     	; 0x4248 <__mulsf3+0x8>

0000426c <__mulsf3_pse>:
    426c:	95 9f       	mul	r25, r21
    426e:	c1 f3       	breq	.-16     	; 0x4260 <__mulsf3+0x20>
    4270:	95 0f       	add	r25, r21
    4272:	50 e0       	ldi	r21, 0x00	; 0
    4274:	55 1f       	adc	r21, r21
    4276:	62 9f       	mul	r22, r18
    4278:	f0 01       	movw	r30, r0
    427a:	72 9f       	mul	r23, r18
    427c:	bb 27       	eor	r27, r27
    427e:	f0 0d       	add	r31, r0
    4280:	b1 1d       	adc	r27, r1
    4282:	63 9f       	mul	r22, r19
    4284:	aa 27       	eor	r26, r26
    4286:	f0 0d       	add	r31, r0
    4288:	b1 1d       	adc	r27, r1
    428a:	aa 1f       	adc	r26, r26
    428c:	64 9f       	mul	r22, r20
    428e:	66 27       	eor	r22, r22
    4290:	b0 0d       	add	r27, r0
    4292:	a1 1d       	adc	r26, r1
    4294:	66 1f       	adc	r22, r22
    4296:	82 9f       	mul	r24, r18
    4298:	22 27       	eor	r18, r18
    429a:	b0 0d       	add	r27, r0
    429c:	a1 1d       	adc	r26, r1
    429e:	62 1f       	adc	r22, r18
    42a0:	73 9f       	mul	r23, r19
    42a2:	b0 0d       	add	r27, r0
    42a4:	a1 1d       	adc	r26, r1
    42a6:	62 1f       	adc	r22, r18
    42a8:	83 9f       	mul	r24, r19
    42aa:	a0 0d       	add	r26, r0
    42ac:	61 1d       	adc	r22, r1
    42ae:	22 1f       	adc	r18, r18
    42b0:	74 9f       	mul	r23, r20
    42b2:	33 27       	eor	r19, r19
    42b4:	a0 0d       	add	r26, r0
    42b6:	61 1d       	adc	r22, r1
    42b8:	23 1f       	adc	r18, r19
    42ba:	84 9f       	mul	r24, r20
    42bc:	60 0d       	add	r22, r0
    42be:	21 1d       	adc	r18, r1
    42c0:	82 2f       	mov	r24, r18
    42c2:	76 2f       	mov	r23, r22
    42c4:	6a 2f       	mov	r22, r26
    42c6:	11 24       	eor	r1, r1
    42c8:	9f 57       	subi	r25, 0x7F	; 127
    42ca:	50 40       	sbci	r21, 0x00	; 0
    42cc:	9a f0       	brmi	.+38     	; 0x42f4 <__mulsf3_pse+0x88>
    42ce:	f1 f0       	breq	.+60     	; 0x430c <__mulsf3_pse+0xa0>
    42d0:	88 23       	and	r24, r24
    42d2:	4a f0       	brmi	.+18     	; 0x42e6 <__mulsf3_pse+0x7a>
    42d4:	ee 0f       	add	r30, r30
    42d6:	ff 1f       	adc	r31, r31
    42d8:	bb 1f       	adc	r27, r27
    42da:	66 1f       	adc	r22, r22
    42dc:	77 1f       	adc	r23, r23
    42de:	88 1f       	adc	r24, r24
    42e0:	91 50       	subi	r25, 0x01	; 1
    42e2:	50 40       	sbci	r21, 0x00	; 0
    42e4:	a9 f7       	brne	.-22     	; 0x42d0 <__mulsf3_pse+0x64>
    42e6:	9e 3f       	cpi	r25, 0xFE	; 254
    42e8:	51 05       	cpc	r21, r1
    42ea:	80 f0       	brcs	.+32     	; 0x430c <__mulsf3_pse+0xa0>
    42ec:	0c 94 8d 21 	jmp	0x431a	; 0x431a <__fp_inf>
    42f0:	0c 94 15 21 	jmp	0x422a	; 0x422a <__fp_szero>
    42f4:	5f 3f       	cpi	r21, 0xFF	; 255
    42f6:	e4 f3       	brlt	.-8      	; 0x42f0 <__mulsf3_pse+0x84>
    42f8:	98 3e       	cpi	r25, 0xE8	; 232
    42fa:	d4 f3       	brlt	.-12     	; 0x42f0 <__mulsf3_pse+0x84>
    42fc:	86 95       	lsr	r24
    42fe:	77 95       	ror	r23
    4300:	67 95       	ror	r22
    4302:	b7 95       	ror	r27
    4304:	f7 95       	ror	r31
    4306:	e7 95       	ror	r30
    4308:	9f 5f       	subi	r25, 0xFF	; 255
    430a:	c1 f7       	brne	.-16     	; 0x42fc <__mulsf3_pse+0x90>
    430c:	fe 2b       	or	r31, r30
    430e:	88 0f       	add	r24, r24
    4310:	91 1d       	adc	r25, r1
    4312:	96 95       	lsr	r25
    4314:	87 95       	ror	r24
    4316:	97 f9       	bld	r25, 7
    4318:	08 95       	ret

0000431a <__fp_inf>:
    431a:	97 f9       	bld	r25, 7
    431c:	9f 67       	ori	r25, 0x7F	; 127
    431e:	80 e8       	ldi	r24, 0x80	; 128
    4320:	70 e0       	ldi	r23, 0x00	; 0
    4322:	60 e0       	ldi	r22, 0x00	; 0
    4324:	08 95       	ret

00004326 <__fp_nan>:
    4326:	9f ef       	ldi	r25, 0xFF	; 255
    4328:	80 ec       	ldi	r24, 0xC0	; 192
    432a:	08 95       	ret

0000432c <__fp_pscA>:
    432c:	00 24       	eor	r0, r0
    432e:	0a 94       	dec	r0
    4330:	16 16       	cp	r1, r22
    4332:	17 06       	cpc	r1, r23
    4334:	18 06       	cpc	r1, r24
    4336:	09 06       	cpc	r0, r25
    4338:	08 95       	ret

0000433a <__fp_pscB>:
    433a:	00 24       	eor	r0, r0
    433c:	0a 94       	dec	r0
    433e:	12 16       	cp	r1, r18
    4340:	13 06       	cpc	r1, r19
    4342:	14 06       	cpc	r1, r20
    4344:	05 06       	cpc	r0, r21
    4346:	08 95       	ret

00004348 <__fp_round>:
    4348:	09 2e       	mov	r0, r25
    434a:	03 94       	inc	r0
    434c:	00 0c       	add	r0, r0
    434e:	11 f4       	brne	.+4      	; 0x4354 <__fp_round+0xc>
    4350:	88 23       	and	r24, r24
    4352:	52 f0       	brmi	.+20     	; 0x4368 <__fp_round+0x20>
    4354:	bb 0f       	add	r27, r27
    4356:	40 f4       	brcc	.+16     	; 0x4368 <__fp_round+0x20>
    4358:	bf 2b       	or	r27, r31
    435a:	11 f4       	brne	.+4      	; 0x4360 <__fp_round+0x18>
    435c:	60 ff       	sbrs	r22, 0
    435e:	04 c0       	rjmp	.+8      	; 0x4368 <__fp_round+0x20>
    4360:	6f 5f       	subi	r22, 0xFF	; 255
    4362:	7f 4f       	sbci	r23, 0xFF	; 255
    4364:	8f 4f       	sbci	r24, 0xFF	; 255
    4366:	9f 4f       	sbci	r25, 0xFF	; 255
    4368:	08 95       	ret

0000436a <__divmodhi4>:
    436a:	97 fb       	bst	r25, 7
    436c:	07 2e       	mov	r0, r23
    436e:	16 f4       	brtc	.+4      	; 0x4374 <__divmodhi4+0xa>
    4370:	00 94       	com	r0
    4372:	07 d0       	rcall	.+14     	; 0x4382 <__divmodhi4_neg1>
    4374:	77 fd       	sbrc	r23, 7
    4376:	09 d0       	rcall	.+18     	; 0x438a <__divmodhi4_neg2>
    4378:	0e 94 eb 21 	call	0x43d6	; 0x43d6 <__udivmodhi4>
    437c:	07 fc       	sbrc	r0, 7
    437e:	05 d0       	rcall	.+10     	; 0x438a <__divmodhi4_neg2>
    4380:	3e f4       	brtc	.+14     	; 0x4390 <__divmodhi4_exit>

00004382 <__divmodhi4_neg1>:
    4382:	90 95       	com	r25
    4384:	81 95       	neg	r24
    4386:	9f 4f       	sbci	r25, 0xFF	; 255
    4388:	08 95       	ret

0000438a <__divmodhi4_neg2>:
    438a:	70 95       	com	r23
    438c:	61 95       	neg	r22
    438e:	7f 4f       	sbci	r23, 0xFF	; 255

00004390 <__divmodhi4_exit>:
    4390:	08 95       	ret

00004392 <__udivmodsi4>:
    4392:	a1 e2       	ldi	r26, 0x21	; 33
    4394:	1a 2e       	mov	r1, r26
    4396:	aa 1b       	sub	r26, r26
    4398:	bb 1b       	sub	r27, r27
    439a:	fd 01       	movw	r30, r26
    439c:	0d c0       	rjmp	.+26     	; 0x43b8 <__udivmodsi4_ep>

0000439e <__udivmodsi4_loop>:
    439e:	aa 1f       	adc	r26, r26
    43a0:	bb 1f       	adc	r27, r27
    43a2:	ee 1f       	adc	r30, r30
    43a4:	ff 1f       	adc	r31, r31
    43a6:	a2 17       	cp	r26, r18
    43a8:	b3 07       	cpc	r27, r19
    43aa:	e4 07       	cpc	r30, r20
    43ac:	f5 07       	cpc	r31, r21
    43ae:	20 f0       	brcs	.+8      	; 0x43b8 <__udivmodsi4_ep>
    43b0:	a2 1b       	sub	r26, r18
    43b2:	b3 0b       	sbc	r27, r19
    43b4:	e4 0b       	sbc	r30, r20
    43b6:	f5 0b       	sbc	r31, r21

000043b8 <__udivmodsi4_ep>:
    43b8:	66 1f       	adc	r22, r22
    43ba:	77 1f       	adc	r23, r23
    43bc:	88 1f       	adc	r24, r24
    43be:	99 1f       	adc	r25, r25
    43c0:	1a 94       	dec	r1
    43c2:	69 f7       	brne	.-38     	; 0x439e <__udivmodsi4_loop>
    43c4:	60 95       	com	r22
    43c6:	70 95       	com	r23
    43c8:	80 95       	com	r24
    43ca:	90 95       	com	r25
    43cc:	9b 01       	movw	r18, r22
    43ce:	ac 01       	movw	r20, r24
    43d0:	bd 01       	movw	r22, r26
    43d2:	cf 01       	movw	r24, r30
    43d4:	08 95       	ret

000043d6 <__udivmodhi4>:
    43d6:	aa 1b       	sub	r26, r26
    43d8:	bb 1b       	sub	r27, r27
    43da:	51 e1       	ldi	r21, 0x11	; 17
    43dc:	07 c0       	rjmp	.+14     	; 0x43ec <__udivmodhi4_ep>

000043de <__udivmodhi4_loop>:
    43de:	aa 1f       	adc	r26, r26
    43e0:	bb 1f       	adc	r27, r27
    43e2:	a6 17       	cp	r26, r22
    43e4:	b7 07       	cpc	r27, r23
    43e6:	10 f0       	brcs	.+4      	; 0x43ec <__udivmodhi4_ep>
    43e8:	a6 1b       	sub	r26, r22
    43ea:	b7 0b       	sbc	r27, r23

000043ec <__udivmodhi4_ep>:
    43ec:	88 1f       	adc	r24, r24
    43ee:	99 1f       	adc	r25, r25
    43f0:	5a 95       	dec	r21
    43f2:	a9 f7       	brne	.-22     	; 0x43de <__udivmodhi4_loop>
    43f4:	80 95       	com	r24
    43f6:	90 95       	com	r25
    43f8:	bc 01       	movw	r22, r24
    43fa:	cd 01       	movw	r24, r26
    43fc:	08 95       	ret

000043fe <snprintf>:
    43fe:	ae e0       	ldi	r26, 0x0E	; 14
    4400:	b0 e0       	ldi	r27, 0x00	; 0
    4402:	e5 e0       	ldi	r30, 0x05	; 5
    4404:	f2 e2       	ldi	r31, 0x22	; 34
    4406:	0c 94 ce 24 	jmp	0x499c	; 0x499c <__prologue_saves__+0x1c>
    440a:	0d 89       	ldd	r16, Y+21	; 0x15
    440c:	1e 89       	ldd	r17, Y+22	; 0x16
    440e:	8f 89       	ldd	r24, Y+23	; 0x17
    4410:	98 8d       	ldd	r25, Y+24	; 0x18
    4412:	26 e0       	ldi	r18, 0x06	; 6
    4414:	2c 83       	std	Y+4, r18	; 0x04
    4416:	1a 83       	std	Y+2, r17	; 0x02
    4418:	09 83       	std	Y+1, r16	; 0x01
    441a:	97 ff       	sbrs	r25, 7
    441c:	02 c0       	rjmp	.+4      	; 0x4422 <snprintf+0x24>
    441e:	80 e0       	ldi	r24, 0x00	; 0
    4420:	90 e8       	ldi	r25, 0x80	; 128
    4422:	01 97       	sbiw	r24, 0x01	; 1
    4424:	9e 83       	std	Y+6, r25	; 0x06
    4426:	8d 83       	std	Y+5, r24	; 0x05
    4428:	ae 01       	movw	r20, r28
    442a:	45 5e       	subi	r20, 0xE5	; 229
    442c:	5f 4f       	sbci	r21, 0xFF	; 255
    442e:	69 8d       	ldd	r22, Y+25	; 0x19
    4430:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4432:	ce 01       	movw	r24, r28
    4434:	01 96       	adiw	r24, 0x01	; 1
    4436:	0e 94 2f 22 	call	0x445e	; 0x445e <vfprintf>
    443a:	4d 81       	ldd	r20, Y+5	; 0x05
    443c:	5e 81       	ldd	r21, Y+6	; 0x06
    443e:	57 fd       	sbrc	r21, 7
    4440:	0a c0       	rjmp	.+20     	; 0x4456 <snprintf+0x58>
    4442:	2f 81       	ldd	r18, Y+7	; 0x07
    4444:	38 85       	ldd	r19, Y+8	; 0x08
    4446:	42 17       	cp	r20, r18
    4448:	53 07       	cpc	r21, r19
    444a:	0c f4       	brge	.+2      	; 0x444e <snprintf+0x50>
    444c:	9a 01       	movw	r18, r20
    444e:	f8 01       	movw	r30, r16
    4450:	e2 0f       	add	r30, r18
    4452:	f3 1f       	adc	r31, r19
    4454:	10 82       	st	Z, r1
    4456:	2e 96       	adiw	r28, 0x0e	; 14
    4458:	e4 e0       	ldi	r30, 0x04	; 4
    445a:	0c 94 ea 24 	jmp	0x49d4	; 0x49d4 <__epilogue_restores__+0x1c>

0000445e <vfprintf>:
    445e:	ab e0       	ldi	r26, 0x0B	; 11
    4460:	b0 e0       	ldi	r27, 0x00	; 0
    4462:	e5 e3       	ldi	r30, 0x35	; 53
    4464:	f2 e2       	ldi	r31, 0x22	; 34
    4466:	0c 94 c0 24 	jmp	0x4980	; 0x4980 <__prologue_saves__>
    446a:	6c 01       	movw	r12, r24
    446c:	7b 01       	movw	r14, r22
    446e:	8a 01       	movw	r16, r20
    4470:	fc 01       	movw	r30, r24
    4472:	17 82       	std	Z+7, r1	; 0x07
    4474:	16 82       	std	Z+6, r1	; 0x06
    4476:	83 81       	ldd	r24, Z+3	; 0x03
    4478:	81 ff       	sbrs	r24, 1
    447a:	cc c1       	rjmp	.+920    	; 0x4814 <vfprintf+0x3b6>
    447c:	ce 01       	movw	r24, r28
    447e:	01 96       	adiw	r24, 0x01	; 1
    4480:	3c 01       	movw	r6, r24
    4482:	f6 01       	movw	r30, r12
    4484:	93 81       	ldd	r25, Z+3	; 0x03
    4486:	f7 01       	movw	r30, r14
    4488:	93 fd       	sbrc	r25, 3
    448a:	85 91       	lpm	r24, Z+
    448c:	93 ff       	sbrs	r25, 3
    448e:	81 91       	ld	r24, Z+
    4490:	7f 01       	movw	r14, r30
    4492:	88 23       	and	r24, r24
    4494:	09 f4       	brne	.+2      	; 0x4498 <vfprintf+0x3a>
    4496:	ba c1       	rjmp	.+884    	; 0x480c <vfprintf+0x3ae>
    4498:	85 32       	cpi	r24, 0x25	; 37
    449a:	39 f4       	brne	.+14     	; 0x44aa <vfprintf+0x4c>
    449c:	93 fd       	sbrc	r25, 3
    449e:	85 91       	lpm	r24, Z+
    44a0:	93 ff       	sbrs	r25, 3
    44a2:	81 91       	ld	r24, Z+
    44a4:	7f 01       	movw	r14, r30
    44a6:	85 32       	cpi	r24, 0x25	; 37
    44a8:	29 f4       	brne	.+10     	; 0x44b4 <vfprintf+0x56>
    44aa:	b6 01       	movw	r22, r12
    44ac:	90 e0       	ldi	r25, 0x00	; 0
    44ae:	0e 94 26 24 	call	0x484c	; 0x484c <fputc>
    44b2:	e7 cf       	rjmp	.-50     	; 0x4482 <vfprintf+0x24>
    44b4:	91 2c       	mov	r9, r1
    44b6:	21 2c       	mov	r2, r1
    44b8:	31 2c       	mov	r3, r1
    44ba:	ff e1       	ldi	r31, 0x1F	; 31
    44bc:	f3 15       	cp	r31, r3
    44be:	d8 f0       	brcs	.+54     	; 0x44f6 <vfprintf+0x98>
    44c0:	8b 32       	cpi	r24, 0x2B	; 43
    44c2:	79 f0       	breq	.+30     	; 0x44e2 <vfprintf+0x84>
    44c4:	38 f4       	brcc	.+14     	; 0x44d4 <vfprintf+0x76>
    44c6:	80 32       	cpi	r24, 0x20	; 32
    44c8:	79 f0       	breq	.+30     	; 0x44e8 <vfprintf+0x8a>
    44ca:	83 32       	cpi	r24, 0x23	; 35
    44cc:	a1 f4       	brne	.+40     	; 0x44f6 <vfprintf+0x98>
    44ce:	23 2d       	mov	r18, r3
    44d0:	20 61       	ori	r18, 0x10	; 16
    44d2:	1d c0       	rjmp	.+58     	; 0x450e <vfprintf+0xb0>
    44d4:	8d 32       	cpi	r24, 0x2D	; 45
    44d6:	61 f0       	breq	.+24     	; 0x44f0 <vfprintf+0x92>
    44d8:	80 33       	cpi	r24, 0x30	; 48
    44da:	69 f4       	brne	.+26     	; 0x44f6 <vfprintf+0x98>
    44dc:	23 2d       	mov	r18, r3
    44de:	21 60       	ori	r18, 0x01	; 1
    44e0:	16 c0       	rjmp	.+44     	; 0x450e <vfprintf+0xb0>
    44e2:	83 2d       	mov	r24, r3
    44e4:	82 60       	ori	r24, 0x02	; 2
    44e6:	38 2e       	mov	r3, r24
    44e8:	e3 2d       	mov	r30, r3
    44ea:	e4 60       	ori	r30, 0x04	; 4
    44ec:	3e 2e       	mov	r3, r30
    44ee:	2a c0       	rjmp	.+84     	; 0x4544 <vfprintf+0xe6>
    44f0:	f3 2d       	mov	r31, r3
    44f2:	f8 60       	ori	r31, 0x08	; 8
    44f4:	1d c0       	rjmp	.+58     	; 0x4530 <vfprintf+0xd2>
    44f6:	37 fc       	sbrc	r3, 7
    44f8:	2d c0       	rjmp	.+90     	; 0x4554 <vfprintf+0xf6>
    44fa:	20 ed       	ldi	r18, 0xD0	; 208
    44fc:	28 0f       	add	r18, r24
    44fe:	2a 30       	cpi	r18, 0x0A	; 10
    4500:	40 f0       	brcs	.+16     	; 0x4512 <vfprintf+0xb4>
    4502:	8e 32       	cpi	r24, 0x2E	; 46
    4504:	b9 f4       	brne	.+46     	; 0x4534 <vfprintf+0xd6>
    4506:	36 fc       	sbrc	r3, 6
    4508:	81 c1       	rjmp	.+770    	; 0x480c <vfprintf+0x3ae>
    450a:	23 2d       	mov	r18, r3
    450c:	20 64       	ori	r18, 0x40	; 64
    450e:	32 2e       	mov	r3, r18
    4510:	19 c0       	rjmp	.+50     	; 0x4544 <vfprintf+0xe6>
    4512:	36 fe       	sbrs	r3, 6
    4514:	06 c0       	rjmp	.+12     	; 0x4522 <vfprintf+0xc4>
    4516:	8a e0       	ldi	r24, 0x0A	; 10
    4518:	98 9e       	mul	r9, r24
    451a:	20 0d       	add	r18, r0
    451c:	11 24       	eor	r1, r1
    451e:	92 2e       	mov	r9, r18
    4520:	11 c0       	rjmp	.+34     	; 0x4544 <vfprintf+0xe6>
    4522:	ea e0       	ldi	r30, 0x0A	; 10
    4524:	2e 9e       	mul	r2, r30
    4526:	20 0d       	add	r18, r0
    4528:	11 24       	eor	r1, r1
    452a:	22 2e       	mov	r2, r18
    452c:	f3 2d       	mov	r31, r3
    452e:	f0 62       	ori	r31, 0x20	; 32
    4530:	3f 2e       	mov	r3, r31
    4532:	08 c0       	rjmp	.+16     	; 0x4544 <vfprintf+0xe6>
    4534:	8c 36       	cpi	r24, 0x6C	; 108
    4536:	21 f4       	brne	.+8      	; 0x4540 <vfprintf+0xe2>
    4538:	83 2d       	mov	r24, r3
    453a:	80 68       	ori	r24, 0x80	; 128
    453c:	38 2e       	mov	r3, r24
    453e:	02 c0       	rjmp	.+4      	; 0x4544 <vfprintf+0xe6>
    4540:	88 36       	cpi	r24, 0x68	; 104
    4542:	41 f4       	brne	.+16     	; 0x4554 <vfprintf+0xf6>
    4544:	f7 01       	movw	r30, r14
    4546:	93 fd       	sbrc	r25, 3
    4548:	85 91       	lpm	r24, Z+
    454a:	93 ff       	sbrs	r25, 3
    454c:	81 91       	ld	r24, Z+
    454e:	7f 01       	movw	r14, r30
    4550:	81 11       	cpse	r24, r1
    4552:	b3 cf       	rjmp	.-154    	; 0x44ba <vfprintf+0x5c>
    4554:	98 2f       	mov	r25, r24
    4556:	9f 7d       	andi	r25, 0xDF	; 223
    4558:	95 54       	subi	r25, 0x45	; 69
    455a:	93 30       	cpi	r25, 0x03	; 3
    455c:	28 f4       	brcc	.+10     	; 0x4568 <vfprintf+0x10a>
    455e:	0c 5f       	subi	r16, 0xFC	; 252
    4560:	1f 4f       	sbci	r17, 0xFF	; 255
    4562:	9f e3       	ldi	r25, 0x3F	; 63
    4564:	99 83       	std	Y+1, r25	; 0x01
    4566:	0d c0       	rjmp	.+26     	; 0x4582 <vfprintf+0x124>
    4568:	83 36       	cpi	r24, 0x63	; 99
    456a:	31 f0       	breq	.+12     	; 0x4578 <vfprintf+0x11a>
    456c:	83 37       	cpi	r24, 0x73	; 115
    456e:	71 f0       	breq	.+28     	; 0x458c <vfprintf+0x12e>
    4570:	83 35       	cpi	r24, 0x53	; 83
    4572:	09 f0       	breq	.+2      	; 0x4576 <vfprintf+0x118>
    4574:	59 c0       	rjmp	.+178    	; 0x4628 <vfprintf+0x1ca>
    4576:	21 c0       	rjmp	.+66     	; 0x45ba <vfprintf+0x15c>
    4578:	f8 01       	movw	r30, r16
    457a:	80 81       	ld	r24, Z
    457c:	89 83       	std	Y+1, r24	; 0x01
    457e:	0e 5f       	subi	r16, 0xFE	; 254
    4580:	1f 4f       	sbci	r17, 0xFF	; 255
    4582:	88 24       	eor	r8, r8
    4584:	83 94       	inc	r8
    4586:	91 2c       	mov	r9, r1
    4588:	53 01       	movw	r10, r6
    458a:	13 c0       	rjmp	.+38     	; 0x45b2 <vfprintf+0x154>
    458c:	28 01       	movw	r4, r16
    458e:	f2 e0       	ldi	r31, 0x02	; 2
    4590:	4f 0e       	add	r4, r31
    4592:	51 1c       	adc	r5, r1
    4594:	f8 01       	movw	r30, r16
    4596:	a0 80       	ld	r10, Z
    4598:	b1 80       	ldd	r11, Z+1	; 0x01
    459a:	36 fe       	sbrs	r3, 6
    459c:	03 c0       	rjmp	.+6      	; 0x45a4 <vfprintf+0x146>
    459e:	69 2d       	mov	r22, r9
    45a0:	70 e0       	ldi	r23, 0x00	; 0
    45a2:	02 c0       	rjmp	.+4      	; 0x45a8 <vfprintf+0x14a>
    45a4:	6f ef       	ldi	r22, 0xFF	; 255
    45a6:	7f ef       	ldi	r23, 0xFF	; 255
    45a8:	c5 01       	movw	r24, r10
    45aa:	0e 94 1b 24 	call	0x4836	; 0x4836 <strnlen>
    45ae:	4c 01       	movw	r8, r24
    45b0:	82 01       	movw	r16, r4
    45b2:	f3 2d       	mov	r31, r3
    45b4:	ff 77       	andi	r31, 0x7F	; 127
    45b6:	3f 2e       	mov	r3, r31
    45b8:	16 c0       	rjmp	.+44     	; 0x45e6 <vfprintf+0x188>
    45ba:	28 01       	movw	r4, r16
    45bc:	22 e0       	ldi	r18, 0x02	; 2
    45be:	42 0e       	add	r4, r18
    45c0:	51 1c       	adc	r5, r1
    45c2:	f8 01       	movw	r30, r16
    45c4:	a0 80       	ld	r10, Z
    45c6:	b1 80       	ldd	r11, Z+1	; 0x01
    45c8:	36 fe       	sbrs	r3, 6
    45ca:	03 c0       	rjmp	.+6      	; 0x45d2 <vfprintf+0x174>
    45cc:	69 2d       	mov	r22, r9
    45ce:	70 e0       	ldi	r23, 0x00	; 0
    45d0:	02 c0       	rjmp	.+4      	; 0x45d6 <vfprintf+0x178>
    45d2:	6f ef       	ldi	r22, 0xFF	; 255
    45d4:	7f ef       	ldi	r23, 0xFF	; 255
    45d6:	c5 01       	movw	r24, r10
    45d8:	0e 94 10 24 	call	0x4820	; 0x4820 <strnlen_P>
    45dc:	4c 01       	movw	r8, r24
    45de:	f3 2d       	mov	r31, r3
    45e0:	f0 68       	ori	r31, 0x80	; 128
    45e2:	3f 2e       	mov	r3, r31
    45e4:	82 01       	movw	r16, r4
    45e6:	33 fc       	sbrc	r3, 3
    45e8:	1b c0       	rjmp	.+54     	; 0x4620 <vfprintf+0x1c2>
    45ea:	82 2d       	mov	r24, r2
    45ec:	90 e0       	ldi	r25, 0x00	; 0
    45ee:	88 16       	cp	r8, r24
    45f0:	99 06       	cpc	r9, r25
    45f2:	b0 f4       	brcc	.+44     	; 0x4620 <vfprintf+0x1c2>
    45f4:	b6 01       	movw	r22, r12
    45f6:	80 e2       	ldi	r24, 0x20	; 32
    45f8:	90 e0       	ldi	r25, 0x00	; 0
    45fa:	0e 94 26 24 	call	0x484c	; 0x484c <fputc>
    45fe:	2a 94       	dec	r2
    4600:	f4 cf       	rjmp	.-24     	; 0x45ea <vfprintf+0x18c>
    4602:	f5 01       	movw	r30, r10
    4604:	37 fc       	sbrc	r3, 7
    4606:	85 91       	lpm	r24, Z+
    4608:	37 fe       	sbrs	r3, 7
    460a:	81 91       	ld	r24, Z+
    460c:	5f 01       	movw	r10, r30
    460e:	b6 01       	movw	r22, r12
    4610:	90 e0       	ldi	r25, 0x00	; 0
    4612:	0e 94 26 24 	call	0x484c	; 0x484c <fputc>
    4616:	21 10       	cpse	r2, r1
    4618:	2a 94       	dec	r2
    461a:	21 e0       	ldi	r18, 0x01	; 1
    461c:	82 1a       	sub	r8, r18
    461e:	91 08       	sbc	r9, r1
    4620:	81 14       	cp	r8, r1
    4622:	91 04       	cpc	r9, r1
    4624:	71 f7       	brne	.-36     	; 0x4602 <vfprintf+0x1a4>
    4626:	e8 c0       	rjmp	.+464    	; 0x47f8 <vfprintf+0x39a>
    4628:	84 36       	cpi	r24, 0x64	; 100
    462a:	11 f0       	breq	.+4      	; 0x4630 <vfprintf+0x1d2>
    462c:	89 36       	cpi	r24, 0x69	; 105
    462e:	41 f5       	brne	.+80     	; 0x4680 <vfprintf+0x222>
    4630:	f8 01       	movw	r30, r16
    4632:	37 fe       	sbrs	r3, 7
    4634:	07 c0       	rjmp	.+14     	; 0x4644 <vfprintf+0x1e6>
    4636:	60 81       	ld	r22, Z
    4638:	71 81       	ldd	r23, Z+1	; 0x01
    463a:	82 81       	ldd	r24, Z+2	; 0x02
    463c:	93 81       	ldd	r25, Z+3	; 0x03
    463e:	0c 5f       	subi	r16, 0xFC	; 252
    4640:	1f 4f       	sbci	r17, 0xFF	; 255
    4642:	08 c0       	rjmp	.+16     	; 0x4654 <vfprintf+0x1f6>
    4644:	60 81       	ld	r22, Z
    4646:	71 81       	ldd	r23, Z+1	; 0x01
    4648:	07 2e       	mov	r0, r23
    464a:	00 0c       	add	r0, r0
    464c:	88 0b       	sbc	r24, r24
    464e:	99 0b       	sbc	r25, r25
    4650:	0e 5f       	subi	r16, 0xFE	; 254
    4652:	1f 4f       	sbci	r17, 0xFF	; 255
    4654:	f3 2d       	mov	r31, r3
    4656:	ff 76       	andi	r31, 0x6F	; 111
    4658:	3f 2e       	mov	r3, r31
    465a:	97 ff       	sbrs	r25, 7
    465c:	09 c0       	rjmp	.+18     	; 0x4670 <vfprintf+0x212>
    465e:	90 95       	com	r25
    4660:	80 95       	com	r24
    4662:	70 95       	com	r23
    4664:	61 95       	neg	r22
    4666:	7f 4f       	sbci	r23, 0xFF	; 255
    4668:	8f 4f       	sbci	r24, 0xFF	; 255
    466a:	9f 4f       	sbci	r25, 0xFF	; 255
    466c:	f0 68       	ori	r31, 0x80	; 128
    466e:	3f 2e       	mov	r3, r31
    4670:	2a e0       	ldi	r18, 0x0A	; 10
    4672:	30 e0       	ldi	r19, 0x00	; 0
    4674:	a3 01       	movw	r20, r6
    4676:	0e 94 62 24 	call	0x48c4	; 0x48c4 <__ultoa_invert>
    467a:	88 2e       	mov	r8, r24
    467c:	86 18       	sub	r8, r6
    467e:	45 c0       	rjmp	.+138    	; 0x470a <vfprintf+0x2ac>
    4680:	85 37       	cpi	r24, 0x75	; 117
    4682:	31 f4       	brne	.+12     	; 0x4690 <vfprintf+0x232>
    4684:	23 2d       	mov	r18, r3
    4686:	2f 7e       	andi	r18, 0xEF	; 239
    4688:	b2 2e       	mov	r11, r18
    468a:	2a e0       	ldi	r18, 0x0A	; 10
    468c:	30 e0       	ldi	r19, 0x00	; 0
    468e:	25 c0       	rjmp	.+74     	; 0x46da <vfprintf+0x27c>
    4690:	93 2d       	mov	r25, r3
    4692:	99 7f       	andi	r25, 0xF9	; 249
    4694:	b9 2e       	mov	r11, r25
    4696:	8f 36       	cpi	r24, 0x6F	; 111
    4698:	c1 f0       	breq	.+48     	; 0x46ca <vfprintf+0x26c>
    469a:	18 f4       	brcc	.+6      	; 0x46a2 <vfprintf+0x244>
    469c:	88 35       	cpi	r24, 0x58	; 88
    469e:	79 f0       	breq	.+30     	; 0x46be <vfprintf+0x260>
    46a0:	b5 c0       	rjmp	.+362    	; 0x480c <vfprintf+0x3ae>
    46a2:	80 37       	cpi	r24, 0x70	; 112
    46a4:	19 f0       	breq	.+6      	; 0x46ac <vfprintf+0x24e>
    46a6:	88 37       	cpi	r24, 0x78	; 120
    46a8:	21 f0       	breq	.+8      	; 0x46b2 <vfprintf+0x254>
    46aa:	b0 c0       	rjmp	.+352    	; 0x480c <vfprintf+0x3ae>
    46ac:	e9 2f       	mov	r30, r25
    46ae:	e0 61       	ori	r30, 0x10	; 16
    46b0:	be 2e       	mov	r11, r30
    46b2:	b4 fe       	sbrs	r11, 4
    46b4:	0d c0       	rjmp	.+26     	; 0x46d0 <vfprintf+0x272>
    46b6:	fb 2d       	mov	r31, r11
    46b8:	f4 60       	ori	r31, 0x04	; 4
    46ba:	bf 2e       	mov	r11, r31
    46bc:	09 c0       	rjmp	.+18     	; 0x46d0 <vfprintf+0x272>
    46be:	34 fe       	sbrs	r3, 4
    46c0:	0a c0       	rjmp	.+20     	; 0x46d6 <vfprintf+0x278>
    46c2:	29 2f       	mov	r18, r25
    46c4:	26 60       	ori	r18, 0x06	; 6
    46c6:	b2 2e       	mov	r11, r18
    46c8:	06 c0       	rjmp	.+12     	; 0x46d6 <vfprintf+0x278>
    46ca:	28 e0       	ldi	r18, 0x08	; 8
    46cc:	30 e0       	ldi	r19, 0x00	; 0
    46ce:	05 c0       	rjmp	.+10     	; 0x46da <vfprintf+0x27c>
    46d0:	20 e1       	ldi	r18, 0x10	; 16
    46d2:	30 e0       	ldi	r19, 0x00	; 0
    46d4:	02 c0       	rjmp	.+4      	; 0x46da <vfprintf+0x27c>
    46d6:	20 e1       	ldi	r18, 0x10	; 16
    46d8:	32 e0       	ldi	r19, 0x02	; 2
    46da:	f8 01       	movw	r30, r16
    46dc:	b7 fe       	sbrs	r11, 7
    46de:	07 c0       	rjmp	.+14     	; 0x46ee <vfprintf+0x290>
    46e0:	60 81       	ld	r22, Z
    46e2:	71 81       	ldd	r23, Z+1	; 0x01
    46e4:	82 81       	ldd	r24, Z+2	; 0x02
    46e6:	93 81       	ldd	r25, Z+3	; 0x03
    46e8:	0c 5f       	subi	r16, 0xFC	; 252
    46ea:	1f 4f       	sbci	r17, 0xFF	; 255
    46ec:	06 c0       	rjmp	.+12     	; 0x46fa <vfprintf+0x29c>
    46ee:	60 81       	ld	r22, Z
    46f0:	71 81       	ldd	r23, Z+1	; 0x01
    46f2:	80 e0       	ldi	r24, 0x00	; 0
    46f4:	90 e0       	ldi	r25, 0x00	; 0
    46f6:	0e 5f       	subi	r16, 0xFE	; 254
    46f8:	1f 4f       	sbci	r17, 0xFF	; 255
    46fa:	a3 01       	movw	r20, r6
    46fc:	0e 94 62 24 	call	0x48c4	; 0x48c4 <__ultoa_invert>
    4700:	88 2e       	mov	r8, r24
    4702:	86 18       	sub	r8, r6
    4704:	fb 2d       	mov	r31, r11
    4706:	ff 77       	andi	r31, 0x7F	; 127
    4708:	3f 2e       	mov	r3, r31
    470a:	36 fe       	sbrs	r3, 6
    470c:	0d c0       	rjmp	.+26     	; 0x4728 <vfprintf+0x2ca>
    470e:	23 2d       	mov	r18, r3
    4710:	2e 7f       	andi	r18, 0xFE	; 254
    4712:	a2 2e       	mov	r10, r18
    4714:	89 14       	cp	r8, r9
    4716:	58 f4       	brcc	.+22     	; 0x472e <vfprintf+0x2d0>
    4718:	34 fe       	sbrs	r3, 4
    471a:	0b c0       	rjmp	.+22     	; 0x4732 <vfprintf+0x2d4>
    471c:	32 fc       	sbrc	r3, 2
    471e:	09 c0       	rjmp	.+18     	; 0x4732 <vfprintf+0x2d4>
    4720:	83 2d       	mov	r24, r3
    4722:	8e 7e       	andi	r24, 0xEE	; 238
    4724:	a8 2e       	mov	r10, r24
    4726:	05 c0       	rjmp	.+10     	; 0x4732 <vfprintf+0x2d4>
    4728:	b8 2c       	mov	r11, r8
    472a:	a3 2c       	mov	r10, r3
    472c:	03 c0       	rjmp	.+6      	; 0x4734 <vfprintf+0x2d6>
    472e:	b8 2c       	mov	r11, r8
    4730:	01 c0       	rjmp	.+2      	; 0x4734 <vfprintf+0x2d6>
    4732:	b9 2c       	mov	r11, r9
    4734:	a4 fe       	sbrs	r10, 4
    4736:	0f c0       	rjmp	.+30     	; 0x4756 <vfprintf+0x2f8>
    4738:	fe 01       	movw	r30, r28
    473a:	e8 0d       	add	r30, r8
    473c:	f1 1d       	adc	r31, r1
    473e:	80 81       	ld	r24, Z
    4740:	80 33       	cpi	r24, 0x30	; 48
    4742:	21 f4       	brne	.+8      	; 0x474c <vfprintf+0x2ee>
    4744:	9a 2d       	mov	r25, r10
    4746:	99 7e       	andi	r25, 0xE9	; 233
    4748:	a9 2e       	mov	r10, r25
    474a:	09 c0       	rjmp	.+18     	; 0x475e <vfprintf+0x300>
    474c:	a2 fe       	sbrs	r10, 2
    474e:	06 c0       	rjmp	.+12     	; 0x475c <vfprintf+0x2fe>
    4750:	b3 94       	inc	r11
    4752:	b3 94       	inc	r11
    4754:	04 c0       	rjmp	.+8      	; 0x475e <vfprintf+0x300>
    4756:	8a 2d       	mov	r24, r10
    4758:	86 78       	andi	r24, 0x86	; 134
    475a:	09 f0       	breq	.+2      	; 0x475e <vfprintf+0x300>
    475c:	b3 94       	inc	r11
    475e:	a3 fc       	sbrc	r10, 3
    4760:	11 c0       	rjmp	.+34     	; 0x4784 <vfprintf+0x326>
    4762:	a0 fe       	sbrs	r10, 0
    4764:	06 c0       	rjmp	.+12     	; 0x4772 <vfprintf+0x314>
    4766:	b2 14       	cp	r11, r2
    4768:	88 f4       	brcc	.+34     	; 0x478c <vfprintf+0x32e>
    476a:	28 0c       	add	r2, r8
    476c:	92 2c       	mov	r9, r2
    476e:	9b 18       	sub	r9, r11
    4770:	0e c0       	rjmp	.+28     	; 0x478e <vfprintf+0x330>
    4772:	b2 14       	cp	r11, r2
    4774:	60 f4       	brcc	.+24     	; 0x478e <vfprintf+0x330>
    4776:	b6 01       	movw	r22, r12
    4778:	80 e2       	ldi	r24, 0x20	; 32
    477a:	90 e0       	ldi	r25, 0x00	; 0
    477c:	0e 94 26 24 	call	0x484c	; 0x484c <fputc>
    4780:	b3 94       	inc	r11
    4782:	f7 cf       	rjmp	.-18     	; 0x4772 <vfprintf+0x314>
    4784:	b2 14       	cp	r11, r2
    4786:	18 f4       	brcc	.+6      	; 0x478e <vfprintf+0x330>
    4788:	2b 18       	sub	r2, r11
    478a:	02 c0       	rjmp	.+4      	; 0x4790 <vfprintf+0x332>
    478c:	98 2c       	mov	r9, r8
    478e:	21 2c       	mov	r2, r1
    4790:	a4 fe       	sbrs	r10, 4
    4792:	10 c0       	rjmp	.+32     	; 0x47b4 <vfprintf+0x356>
    4794:	b6 01       	movw	r22, r12
    4796:	80 e3       	ldi	r24, 0x30	; 48
    4798:	90 e0       	ldi	r25, 0x00	; 0
    479a:	0e 94 26 24 	call	0x484c	; 0x484c <fputc>
    479e:	a2 fe       	sbrs	r10, 2
    47a0:	17 c0       	rjmp	.+46     	; 0x47d0 <vfprintf+0x372>
    47a2:	a1 fc       	sbrc	r10, 1
    47a4:	03 c0       	rjmp	.+6      	; 0x47ac <vfprintf+0x34e>
    47a6:	88 e7       	ldi	r24, 0x78	; 120
    47a8:	90 e0       	ldi	r25, 0x00	; 0
    47aa:	02 c0       	rjmp	.+4      	; 0x47b0 <vfprintf+0x352>
    47ac:	88 e5       	ldi	r24, 0x58	; 88
    47ae:	90 e0       	ldi	r25, 0x00	; 0
    47b0:	b6 01       	movw	r22, r12
    47b2:	0c c0       	rjmp	.+24     	; 0x47cc <vfprintf+0x36e>
    47b4:	8a 2d       	mov	r24, r10
    47b6:	86 78       	andi	r24, 0x86	; 134
    47b8:	59 f0       	breq	.+22     	; 0x47d0 <vfprintf+0x372>
    47ba:	a1 fe       	sbrs	r10, 1
    47bc:	02 c0       	rjmp	.+4      	; 0x47c2 <vfprintf+0x364>
    47be:	8b e2       	ldi	r24, 0x2B	; 43
    47c0:	01 c0       	rjmp	.+2      	; 0x47c4 <vfprintf+0x366>
    47c2:	80 e2       	ldi	r24, 0x20	; 32
    47c4:	a7 fc       	sbrc	r10, 7
    47c6:	8d e2       	ldi	r24, 0x2D	; 45
    47c8:	b6 01       	movw	r22, r12
    47ca:	90 e0       	ldi	r25, 0x00	; 0
    47cc:	0e 94 26 24 	call	0x484c	; 0x484c <fputc>
    47d0:	89 14       	cp	r8, r9
    47d2:	38 f4       	brcc	.+14     	; 0x47e2 <vfprintf+0x384>
    47d4:	b6 01       	movw	r22, r12
    47d6:	80 e3       	ldi	r24, 0x30	; 48
    47d8:	90 e0       	ldi	r25, 0x00	; 0
    47da:	0e 94 26 24 	call	0x484c	; 0x484c <fputc>
    47de:	9a 94       	dec	r9
    47e0:	f7 cf       	rjmp	.-18     	; 0x47d0 <vfprintf+0x372>
    47e2:	8a 94       	dec	r8
    47e4:	f3 01       	movw	r30, r6
    47e6:	e8 0d       	add	r30, r8
    47e8:	f1 1d       	adc	r31, r1
    47ea:	80 81       	ld	r24, Z
    47ec:	b6 01       	movw	r22, r12
    47ee:	90 e0       	ldi	r25, 0x00	; 0
    47f0:	0e 94 26 24 	call	0x484c	; 0x484c <fputc>
    47f4:	81 10       	cpse	r8, r1
    47f6:	f5 cf       	rjmp	.-22     	; 0x47e2 <vfprintf+0x384>
    47f8:	22 20       	and	r2, r2
    47fa:	09 f4       	brne	.+2      	; 0x47fe <vfprintf+0x3a0>
    47fc:	42 ce       	rjmp	.-892    	; 0x4482 <vfprintf+0x24>
    47fe:	b6 01       	movw	r22, r12
    4800:	80 e2       	ldi	r24, 0x20	; 32
    4802:	90 e0       	ldi	r25, 0x00	; 0
    4804:	0e 94 26 24 	call	0x484c	; 0x484c <fputc>
    4808:	2a 94       	dec	r2
    480a:	f6 cf       	rjmp	.-20     	; 0x47f8 <vfprintf+0x39a>
    480c:	f6 01       	movw	r30, r12
    480e:	86 81       	ldd	r24, Z+6	; 0x06
    4810:	97 81       	ldd	r25, Z+7	; 0x07
    4812:	02 c0       	rjmp	.+4      	; 0x4818 <vfprintf+0x3ba>
    4814:	8f ef       	ldi	r24, 0xFF	; 255
    4816:	9f ef       	ldi	r25, 0xFF	; 255
    4818:	2b 96       	adiw	r28, 0x0b	; 11
    481a:	e2 e1       	ldi	r30, 0x12	; 18
    481c:	0c 94 dc 24 	jmp	0x49b8	; 0x49b8 <__epilogue_restores__>

00004820 <strnlen_P>:
    4820:	fc 01       	movw	r30, r24
    4822:	05 90       	lpm	r0, Z+
    4824:	61 50       	subi	r22, 0x01	; 1
    4826:	70 40       	sbci	r23, 0x00	; 0
    4828:	01 10       	cpse	r0, r1
    482a:	d8 f7       	brcc	.-10     	; 0x4822 <strnlen_P+0x2>
    482c:	80 95       	com	r24
    482e:	90 95       	com	r25
    4830:	8e 0f       	add	r24, r30
    4832:	9f 1f       	adc	r25, r31
    4834:	08 95       	ret

00004836 <strnlen>:
    4836:	fc 01       	movw	r30, r24
    4838:	61 50       	subi	r22, 0x01	; 1
    483a:	70 40       	sbci	r23, 0x00	; 0
    483c:	01 90       	ld	r0, Z+
    483e:	01 10       	cpse	r0, r1
    4840:	d8 f7       	brcc	.-10     	; 0x4838 <strnlen+0x2>
    4842:	80 95       	com	r24
    4844:	90 95       	com	r25
    4846:	8e 0f       	add	r24, r30
    4848:	9f 1f       	adc	r25, r31
    484a:	08 95       	ret

0000484c <fputc>:
    484c:	0f 93       	push	r16
    484e:	1f 93       	push	r17
    4850:	cf 93       	push	r28
    4852:	df 93       	push	r29
    4854:	fb 01       	movw	r30, r22
    4856:	23 81       	ldd	r18, Z+3	; 0x03
    4858:	21 fd       	sbrc	r18, 1
    485a:	03 c0       	rjmp	.+6      	; 0x4862 <fputc+0x16>
    485c:	8f ef       	ldi	r24, 0xFF	; 255
    485e:	9f ef       	ldi	r25, 0xFF	; 255
    4860:	2c c0       	rjmp	.+88     	; 0x48ba <fputc+0x6e>
    4862:	22 ff       	sbrs	r18, 2
    4864:	16 c0       	rjmp	.+44     	; 0x4892 <fputc+0x46>
    4866:	46 81       	ldd	r20, Z+6	; 0x06
    4868:	57 81       	ldd	r21, Z+7	; 0x07
    486a:	24 81       	ldd	r18, Z+4	; 0x04
    486c:	35 81       	ldd	r19, Z+5	; 0x05
    486e:	42 17       	cp	r20, r18
    4870:	53 07       	cpc	r21, r19
    4872:	44 f4       	brge	.+16     	; 0x4884 <fputc+0x38>
    4874:	a0 81       	ld	r26, Z
    4876:	b1 81       	ldd	r27, Z+1	; 0x01
    4878:	9d 01       	movw	r18, r26
    487a:	2f 5f       	subi	r18, 0xFF	; 255
    487c:	3f 4f       	sbci	r19, 0xFF	; 255
    487e:	31 83       	std	Z+1, r19	; 0x01
    4880:	20 83       	st	Z, r18
    4882:	8c 93       	st	X, r24
    4884:	26 81       	ldd	r18, Z+6	; 0x06
    4886:	37 81       	ldd	r19, Z+7	; 0x07
    4888:	2f 5f       	subi	r18, 0xFF	; 255
    488a:	3f 4f       	sbci	r19, 0xFF	; 255
    488c:	37 83       	std	Z+7, r19	; 0x07
    488e:	26 83       	std	Z+6, r18	; 0x06
    4890:	14 c0       	rjmp	.+40     	; 0x48ba <fputc+0x6e>
    4892:	8b 01       	movw	r16, r22
    4894:	ec 01       	movw	r28, r24
    4896:	fb 01       	movw	r30, r22
    4898:	00 84       	ldd	r0, Z+8	; 0x08
    489a:	f1 85       	ldd	r31, Z+9	; 0x09
    489c:	e0 2d       	mov	r30, r0
    489e:	09 95       	icall
    48a0:	89 2b       	or	r24, r25
    48a2:	e1 f6       	brne	.-72     	; 0x485c <fputc+0x10>
    48a4:	d8 01       	movw	r26, r16
    48a6:	16 96       	adiw	r26, 0x06	; 6
    48a8:	8d 91       	ld	r24, X+
    48aa:	9c 91       	ld	r25, X
    48ac:	17 97       	sbiw	r26, 0x07	; 7
    48ae:	01 96       	adiw	r24, 0x01	; 1
    48b0:	17 96       	adiw	r26, 0x07	; 7
    48b2:	9c 93       	st	X, r25
    48b4:	8e 93       	st	-X, r24
    48b6:	16 97       	sbiw	r26, 0x06	; 6
    48b8:	ce 01       	movw	r24, r28
    48ba:	df 91       	pop	r29
    48bc:	cf 91       	pop	r28
    48be:	1f 91       	pop	r17
    48c0:	0f 91       	pop	r16
    48c2:	08 95       	ret

000048c4 <__ultoa_invert>:
    48c4:	fa 01       	movw	r30, r20
    48c6:	aa 27       	eor	r26, r26
    48c8:	28 30       	cpi	r18, 0x08	; 8
    48ca:	51 f1       	breq	.+84     	; 0x4920 <__ultoa_invert+0x5c>
    48cc:	20 31       	cpi	r18, 0x10	; 16
    48ce:	81 f1       	breq	.+96     	; 0x4930 <__ultoa_invert+0x6c>
    48d0:	e8 94       	clt
    48d2:	6f 93       	push	r22
    48d4:	6e 7f       	andi	r22, 0xFE	; 254
    48d6:	6e 5f       	subi	r22, 0xFE	; 254
    48d8:	7f 4f       	sbci	r23, 0xFF	; 255
    48da:	8f 4f       	sbci	r24, 0xFF	; 255
    48dc:	9f 4f       	sbci	r25, 0xFF	; 255
    48de:	af 4f       	sbci	r26, 0xFF	; 255
    48e0:	b1 e0       	ldi	r27, 0x01	; 1
    48e2:	3e d0       	rcall	.+124    	; 0x4960 <__ultoa_invert+0x9c>
    48e4:	b4 e0       	ldi	r27, 0x04	; 4
    48e6:	3c d0       	rcall	.+120    	; 0x4960 <__ultoa_invert+0x9c>
    48e8:	67 0f       	add	r22, r23
    48ea:	78 1f       	adc	r23, r24
    48ec:	89 1f       	adc	r24, r25
    48ee:	9a 1f       	adc	r25, r26
    48f0:	a1 1d       	adc	r26, r1
    48f2:	68 0f       	add	r22, r24
    48f4:	79 1f       	adc	r23, r25
    48f6:	8a 1f       	adc	r24, r26
    48f8:	91 1d       	adc	r25, r1
    48fa:	a1 1d       	adc	r26, r1
    48fc:	6a 0f       	add	r22, r26
    48fe:	71 1d       	adc	r23, r1
    4900:	81 1d       	adc	r24, r1
    4902:	91 1d       	adc	r25, r1
    4904:	a1 1d       	adc	r26, r1
    4906:	20 d0       	rcall	.+64     	; 0x4948 <__ultoa_invert+0x84>
    4908:	09 f4       	brne	.+2      	; 0x490c <__ultoa_invert+0x48>
    490a:	68 94       	set
    490c:	3f 91       	pop	r19
    490e:	2a e0       	ldi	r18, 0x0A	; 10
    4910:	26 9f       	mul	r18, r22
    4912:	11 24       	eor	r1, r1
    4914:	30 19       	sub	r19, r0
    4916:	30 5d       	subi	r19, 0xD0	; 208
    4918:	31 93       	st	Z+, r19
    491a:	de f6       	brtc	.-74     	; 0x48d2 <__ultoa_invert+0xe>
    491c:	cf 01       	movw	r24, r30
    491e:	08 95       	ret
    4920:	46 2f       	mov	r20, r22
    4922:	47 70       	andi	r20, 0x07	; 7
    4924:	40 5d       	subi	r20, 0xD0	; 208
    4926:	41 93       	st	Z+, r20
    4928:	b3 e0       	ldi	r27, 0x03	; 3
    492a:	0f d0       	rcall	.+30     	; 0x494a <__ultoa_invert+0x86>
    492c:	c9 f7       	brne	.-14     	; 0x4920 <__ultoa_invert+0x5c>
    492e:	f6 cf       	rjmp	.-20     	; 0x491c <__ultoa_invert+0x58>
    4930:	46 2f       	mov	r20, r22
    4932:	4f 70       	andi	r20, 0x0F	; 15
    4934:	40 5d       	subi	r20, 0xD0	; 208
    4936:	4a 33       	cpi	r20, 0x3A	; 58
    4938:	18 f0       	brcs	.+6      	; 0x4940 <__ultoa_invert+0x7c>
    493a:	49 5d       	subi	r20, 0xD9	; 217
    493c:	31 fd       	sbrc	r19, 1
    493e:	40 52       	subi	r20, 0x20	; 32
    4940:	41 93       	st	Z+, r20
    4942:	02 d0       	rcall	.+4      	; 0x4948 <__ultoa_invert+0x84>
    4944:	a9 f7       	brne	.-22     	; 0x4930 <__ultoa_invert+0x6c>
    4946:	ea cf       	rjmp	.-44     	; 0x491c <__ultoa_invert+0x58>
    4948:	b4 e0       	ldi	r27, 0x04	; 4
    494a:	a6 95       	lsr	r26
    494c:	97 95       	ror	r25
    494e:	87 95       	ror	r24
    4950:	77 95       	ror	r23
    4952:	67 95       	ror	r22
    4954:	ba 95       	dec	r27
    4956:	c9 f7       	brne	.-14     	; 0x494a <__ultoa_invert+0x86>
    4958:	00 97       	sbiw	r24, 0x00	; 0
    495a:	61 05       	cpc	r22, r1
    495c:	71 05       	cpc	r23, r1
    495e:	08 95       	ret
    4960:	9b 01       	movw	r18, r22
    4962:	ac 01       	movw	r20, r24
    4964:	0a 2e       	mov	r0, r26
    4966:	06 94       	lsr	r0
    4968:	57 95       	ror	r21
    496a:	47 95       	ror	r20
    496c:	37 95       	ror	r19
    496e:	27 95       	ror	r18
    4970:	ba 95       	dec	r27
    4972:	c9 f7       	brne	.-14     	; 0x4966 <__ultoa_invert+0xa2>
    4974:	62 0f       	add	r22, r18
    4976:	73 1f       	adc	r23, r19
    4978:	84 1f       	adc	r24, r20
    497a:	95 1f       	adc	r25, r21
    497c:	a0 1d       	adc	r26, r0
    497e:	08 95       	ret

00004980 <__prologue_saves__>:
    4980:	2f 92       	push	r2
    4982:	3f 92       	push	r3
    4984:	4f 92       	push	r4
    4986:	5f 92       	push	r5
    4988:	6f 92       	push	r6
    498a:	7f 92       	push	r7
    498c:	8f 92       	push	r8
    498e:	9f 92       	push	r9
    4990:	af 92       	push	r10
    4992:	bf 92       	push	r11
    4994:	cf 92       	push	r12
    4996:	df 92       	push	r13
    4998:	ef 92       	push	r14
    499a:	ff 92       	push	r15
    499c:	0f 93       	push	r16
    499e:	1f 93       	push	r17
    49a0:	cf 93       	push	r28
    49a2:	df 93       	push	r29
    49a4:	cd b7       	in	r28, 0x3d	; 61
    49a6:	de b7       	in	r29, 0x3e	; 62
    49a8:	ca 1b       	sub	r28, r26
    49aa:	db 0b       	sbc	r29, r27
    49ac:	0f b6       	in	r0, 0x3f	; 63
    49ae:	f8 94       	cli
    49b0:	de bf       	out	0x3e, r29	; 62
    49b2:	0f be       	out	0x3f, r0	; 63
    49b4:	cd bf       	out	0x3d, r28	; 61
    49b6:	09 94       	ijmp

000049b8 <__epilogue_restores__>:
    49b8:	2a 88       	ldd	r2, Y+18	; 0x12
    49ba:	39 88       	ldd	r3, Y+17	; 0x11
    49bc:	48 88       	ldd	r4, Y+16	; 0x10
    49be:	5f 84       	ldd	r5, Y+15	; 0x0f
    49c0:	6e 84       	ldd	r6, Y+14	; 0x0e
    49c2:	7d 84       	ldd	r7, Y+13	; 0x0d
    49c4:	8c 84       	ldd	r8, Y+12	; 0x0c
    49c6:	9b 84       	ldd	r9, Y+11	; 0x0b
    49c8:	aa 84       	ldd	r10, Y+10	; 0x0a
    49ca:	b9 84       	ldd	r11, Y+9	; 0x09
    49cc:	c8 84       	ldd	r12, Y+8	; 0x08
    49ce:	df 80       	ldd	r13, Y+7	; 0x07
    49d0:	ee 80       	ldd	r14, Y+6	; 0x06
    49d2:	fd 80       	ldd	r15, Y+5	; 0x05
    49d4:	0c 81       	ldd	r16, Y+4	; 0x04
    49d6:	1b 81       	ldd	r17, Y+3	; 0x03
    49d8:	aa 81       	ldd	r26, Y+2	; 0x02
    49da:	b9 81       	ldd	r27, Y+1	; 0x01
    49dc:	ce 0f       	add	r28, r30
    49de:	d1 1d       	adc	r29, r1
    49e0:	0f b6       	in	r0, 0x3f	; 63
    49e2:	f8 94       	cli
    49e4:	de bf       	out	0x3e, r29	; 62
    49e6:	0f be       	out	0x3f, r0	; 63
    49e8:	cd bf       	out	0x3d, r28	; 61
    49ea:	ed 01       	movw	r28, r26
    49ec:	08 95       	ret

000049ee <_exit>:
    49ee:	f8 94       	cli

000049f0 <__stop_program>:
    49f0:	ff cf       	rjmp	.-2      	; 0x49f0 <__stop_program>
