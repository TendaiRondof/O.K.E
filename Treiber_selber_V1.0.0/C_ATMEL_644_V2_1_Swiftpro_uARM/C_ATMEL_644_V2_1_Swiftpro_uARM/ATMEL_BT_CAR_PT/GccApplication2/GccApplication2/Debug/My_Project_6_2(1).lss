
My_Project_6_2(1).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000d8  00800100  00001bc6  00001c5a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001bc6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000070  008001d8  008001d8  00001d32  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001d32  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d90  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  00001dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000156a  00000000  00000000  00001f30  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b22  00000000  00000000  0000349a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001219  00000000  00000000  00003fbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000578  00000000  00000000  000051d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000971  00000000  00000000  00005750  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b4b  00000000  00000000  000060c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  00006c0c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 f0 05 	jmp	0xbe0	; 0xbe0 <__vector_16>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 69 01 	jmp	0x2d2	; 0x2d2 <__vector_20>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      70:	0c 94 c4 01 	jmp	0x388	; 0x388 <__vector_28>
      74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d0 e1       	ldi	r29, 0x10	; 16
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	11 e0       	ldi	r17, 0x01	; 1
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	e6 ec       	ldi	r30, 0xC6	; 198
      90:	fb e1       	ldi	r31, 0x1B	; 27
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	a8 3d       	cpi	r26, 0xD8	; 216
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	22 e0       	ldi	r18, 0x02	; 2
      a0:	a8 ed       	ldi	r26, 0xD8	; 216
      a2:	b1 e0       	ldi	r27, 0x01	; 1
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	a8 34       	cpi	r26, 0x48	; 72
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 12 02 	call	0x424	; 0x424 <main>
      b2:	0c 94 e1 0d 	jmp	0x1bc2	; 0x1bc2 <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <get_LCD_Taster>:
{
	while (final_data[0]!='D')
	{
		to_pc('R');
	}
}
      ba:	cf 93       	push	r28
      bc:	df 93       	push	r29
      be:	1f 92       	push	r1
      c0:	cd b7       	in	r28, 0x3d	; 61
      c2:	de b7       	in	r29, 0x3e	; 62
      c4:	85 e2       	ldi	r24, 0x25	; 37
      c6:	90 e0       	ldi	r25, 0x00	; 0
      c8:	25 e2       	ldi	r18, 0x25	; 37
      ca:	30 e0       	ldi	r19, 0x00	; 0
      cc:	f9 01       	movw	r30, r18
      ce:	20 81       	ld	r18, Z
      d0:	20 7f       	andi	r18, 0xF0	; 240
      d2:	fc 01       	movw	r30, r24
      d4:	20 83       	st	Z, r18
      d6:	84 e2       	ldi	r24, 0x24	; 36
      d8:	90 e0       	ldi	r25, 0x00	; 0
      da:	20 ef       	ldi	r18, 0xF0	; 240
      dc:	fc 01       	movw	r30, r24
      de:	20 83       	st	Z, r18
	...
      f4:	83 e2       	ldi	r24, 0x23	; 35
      f6:	90 e0       	ldi	r25, 0x00	; 0
      f8:	fc 01       	movw	r30, r24
      fa:	80 81       	ld	r24, Z
      fc:	8f 70       	andi	r24, 0x0F	; 15
      fe:	89 83       	std	Y+1, r24	; 0x01
     100:	84 e2       	ldi	r24, 0x24	; 36
     102:	90 e0       	ldi	r25, 0x00	; 0
     104:	2f ef       	ldi	r18, 0xFF	; 255
     106:	fc 01       	movw	r30, r24
     108:	20 83       	st	Z, r18
     10a:	89 81       	ldd	r24, Y+1	; 0x01
     10c:	0f 90       	pop	r0
     10e:	df 91       	pop	r29
     110:	cf 91       	pop	r28
     112:	08 95       	ret

00000114 <init_ADC>:
     114:	cf 93       	push	r28
     116:	df 93       	push	r29
     118:	cd b7       	in	r28, 0x3d	; 61
     11a:	de b7       	in	r29, 0x3e	; 62
     11c:	8a e7       	ldi	r24, 0x7A	; 122
     11e:	90 e0       	ldi	r25, 0x00	; 0
     120:	2a e7       	ldi	r18, 0x7A	; 122
     122:	30 e0       	ldi	r19, 0x00	; 0
     124:	f9 01       	movw	r30, r18
     126:	20 81       	ld	r18, Z
     128:	20 68       	ori	r18, 0x80	; 128
     12a:	fc 01       	movw	r30, r24
     12c:	20 83       	st	Z, r18
     12e:	8c e7       	ldi	r24, 0x7C	; 124
     130:	90 e0       	ldi	r25, 0x00	; 0
     132:	2c e7       	ldi	r18, 0x7C	; 124
     134:	30 e0       	ldi	r19, 0x00	; 0
     136:	f9 01       	movw	r30, r18
     138:	20 81       	ld	r18, Z
     13a:	20 64       	ori	r18, 0x40	; 64
     13c:	fc 01       	movw	r30, r24
     13e:	20 83       	st	Z, r18
     140:	8a e7       	ldi	r24, 0x7A	; 122
     142:	90 e0       	ldi	r25, 0x00	; 0
     144:	2a e7       	ldi	r18, 0x7A	; 122
     146:	30 e0       	ldi	r19, 0x00	; 0
     148:	f9 01       	movw	r30, r18
     14a:	20 81       	ld	r18, Z
     14c:	27 60       	ori	r18, 0x07	; 7
     14e:	fc 01       	movw	r30, r24
     150:	20 83       	st	Z, r18
     152:	00 00       	nop
     154:	df 91       	pop	r29
     156:	cf 91       	pop	r28
     158:	08 95       	ret

0000015a <init_UART0>:
     15a:	cf 93       	push	r28
     15c:	df 93       	push	r29
     15e:	cd b7       	in	r28, 0x3d	; 61
     160:	de b7       	in	r29, 0x3e	; 62
     162:	84 ec       	ldi	r24, 0xC4	; 196
     164:	90 e0       	ldi	r25, 0x00	; 0
     166:	20 e1       	ldi	r18, 0x10	; 16
     168:	30 e0       	ldi	r19, 0x00	; 0
     16a:	fc 01       	movw	r30, r24
     16c:	31 83       	std	Z+1, r19	; 0x01
     16e:	20 83       	st	Z, r18
     170:	80 ec       	ldi	r24, 0xC0	; 192
     172:	90 e0       	ldi	r25, 0x00	; 0
     174:	20 ec       	ldi	r18, 0xC0	; 192
     176:	30 e0       	ldi	r19, 0x00	; 0
     178:	f9 01       	movw	r30, r18
     17a:	20 81       	ld	r18, Z
     17c:	22 60       	ori	r18, 0x02	; 2
     17e:	fc 01       	movw	r30, r24
     180:	20 83       	st	Z, r18
     182:	81 ec       	ldi	r24, 0xC1	; 193
     184:	90 e0       	ldi	r25, 0x00	; 0
     186:	21 ec       	ldi	r18, 0xC1	; 193
     188:	30 e0       	ldi	r19, 0x00	; 0
     18a:	f9 01       	movw	r30, r18
     18c:	20 81       	ld	r18, Z
     18e:	28 69       	ori	r18, 0x98	; 152
     190:	fc 01       	movw	r30, r24
     192:	20 83       	st	Z, r18
     194:	00 00       	nop
     196:	df 91       	pop	r29
     198:	cf 91       	pop	r28
     19a:	08 95       	ret

0000019c <init_UART1>:
     19c:	cf 93       	push	r28
     19e:	df 93       	push	r29
     1a0:	cd b7       	in	r28, 0x3d	; 61
     1a2:	de b7       	in	r29, 0x3e	; 62
     1a4:	8c ec       	ldi	r24, 0xCC	; 204
     1a6:	90 e0       	ldi	r25, 0x00	; 0
     1a8:	20 e1       	ldi	r18, 0x10	; 16
     1aa:	30 e0       	ldi	r19, 0x00	; 0
     1ac:	fc 01       	movw	r30, r24
     1ae:	31 83       	std	Z+1, r19	; 0x01
     1b0:	20 83       	st	Z, r18
     1b2:	88 ec       	ldi	r24, 0xC8	; 200
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	28 ec       	ldi	r18, 0xC8	; 200
     1b8:	30 e0       	ldi	r19, 0x00	; 0
     1ba:	f9 01       	movw	r30, r18
     1bc:	20 81       	ld	r18, Z
     1be:	22 60       	ori	r18, 0x02	; 2
     1c0:	fc 01       	movw	r30, r24
     1c2:	20 83       	st	Z, r18
     1c4:	89 ec       	ldi	r24, 0xC9	; 201
     1c6:	90 e0       	ldi	r25, 0x00	; 0
     1c8:	29 ec       	ldi	r18, 0xC9	; 201
     1ca:	30 e0       	ldi	r19, 0x00	; 0
     1cc:	f9 01       	movw	r30, r18
     1ce:	20 81       	ld	r18, Z
     1d0:	28 69       	ori	r18, 0x98	; 152
     1d2:	fc 01       	movw	r30, r24
     1d4:	20 83       	st	Z, r18
     1d6:	00 00       	nop
     1d8:	df 91       	pop	r29
     1da:	cf 91       	pop	r28
     1dc:	08 95       	ret

000001de <send_Byte_0>:
     1de:	cf 93       	push	r28
     1e0:	df 93       	push	r29
     1e2:	1f 92       	push	r1
     1e4:	cd b7       	in	r28, 0x3d	; 61
     1e6:	de b7       	in	r29, 0x3e	; 62
     1e8:	89 83       	std	Y+1, r24	; 0x01
     1ea:	00 00       	nop
     1ec:	80 ec       	ldi	r24, 0xC0	; 192
     1ee:	90 e0       	ldi	r25, 0x00	; 0
     1f0:	fc 01       	movw	r30, r24
     1f2:	80 81       	ld	r24, Z
     1f4:	88 2f       	mov	r24, r24
     1f6:	90 e0       	ldi	r25, 0x00	; 0
     1f8:	80 72       	andi	r24, 0x20	; 32
     1fa:	99 27       	eor	r25, r25
     1fc:	89 2b       	or	r24, r25
     1fe:	b1 f3       	breq	.-20     	; 0x1ec <send_Byte_0+0xe>
     200:	86 ec       	ldi	r24, 0xC6	; 198
     202:	90 e0       	ldi	r25, 0x00	; 0
     204:	29 81       	ldd	r18, Y+1	; 0x01
     206:	fc 01       	movw	r30, r24
     208:	20 83       	st	Z, r18
     20a:	00 00       	nop
     20c:	0f 90       	pop	r0
     20e:	df 91       	pop	r29
     210:	cf 91       	pop	r28
     212:	08 95       	ret

00000214 <send_Byte_1>:
     214:	cf 93       	push	r28
     216:	df 93       	push	r29
     218:	1f 92       	push	r1
     21a:	cd b7       	in	r28, 0x3d	; 61
     21c:	de b7       	in	r29, 0x3e	; 62
     21e:	89 83       	std	Y+1, r24	; 0x01
     220:	00 00       	nop
     222:	88 ec       	ldi	r24, 0xC8	; 200
     224:	90 e0       	ldi	r25, 0x00	; 0
     226:	fc 01       	movw	r30, r24
     228:	80 81       	ld	r24, Z
     22a:	88 2f       	mov	r24, r24
     22c:	90 e0       	ldi	r25, 0x00	; 0
     22e:	80 72       	andi	r24, 0x20	; 32
     230:	99 27       	eor	r25, r25
     232:	89 2b       	or	r24, r25
     234:	b1 f3       	breq	.-20     	; 0x222 <send_Byte_1+0xe>
     236:	8e ec       	ldi	r24, 0xCE	; 206
     238:	90 e0       	ldi	r25, 0x00	; 0
     23a:	29 81       	ldd	r18, Y+1	; 0x01
     23c:	fc 01       	movw	r30, r24
     23e:	20 83       	st	Z, r18
     240:	00 00       	nop
     242:	0f 90       	pop	r0
     244:	df 91       	pop	r29
     246:	cf 91       	pop	r28
     248:	08 95       	ret

0000024a <to_uARM>:
     24a:	cf 93       	push	r28
     24c:	df 93       	push	r29
     24e:	00 d0       	rcall	.+0      	; 0x250 <to_uARM+0x6>
     250:	cd b7       	in	r28, 0x3d	; 61
     252:	de b7       	in	r29, 0x3e	; 62
     254:	9a 83       	std	Y+2, r25	; 0x02
     256:	89 83       	std	Y+1, r24	; 0x01
     258:	0b c0       	rjmp	.+22     	; 0x270 <to_uARM+0x26>
     25a:	89 81       	ldd	r24, Y+1	; 0x01
     25c:	9a 81       	ldd	r25, Y+2	; 0x02
     25e:	fc 01       	movw	r30, r24
     260:	80 81       	ld	r24, Z
     262:	0e 94 0a 01 	call	0x214	; 0x214 <send_Byte_1>
     266:	89 81       	ldd	r24, Y+1	; 0x01
     268:	9a 81       	ldd	r25, Y+2	; 0x02
     26a:	01 96       	adiw	r24, 0x01	; 1
     26c:	9a 83       	std	Y+2, r25	; 0x02
     26e:	89 83       	std	Y+1, r24	; 0x01
     270:	89 81       	ldd	r24, Y+1	; 0x01
     272:	9a 81       	ldd	r25, Y+2	; 0x02
     274:	fc 01       	movw	r30, r24
     276:	80 81       	ld	r24, Z
     278:	88 23       	and	r24, r24
     27a:	79 f7       	brne	.-34     	; 0x25a <to_uARM+0x10>
     27c:	10 92 d9 01 	sts	0x01D9, r1	; 0x8001d9 <uart_str_complete1>
     280:	00 00       	nop
     282:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <uart_str_complete1>
     286:	88 23       	and	r24, r24
     288:	e1 f3       	breq	.-8      	; 0x282 <to_uARM+0x38>
     28a:	00 00       	nop
     28c:	0f 90       	pop	r0
     28e:	0f 90       	pop	r0
     290:	df 91       	pop	r29
     292:	cf 91       	pop	r28
     294:	08 95       	ret

00000296 <send_to_uArm>:
     296:	cf 93       	push	r28
     298:	df 93       	push	r29
     29a:	00 d0       	rcall	.+0      	; 0x29c <send_to_uArm+0x6>
     29c:	cd b7       	in	r28, 0x3d	; 61
     29e:	de b7       	in	r29, 0x3e	; 62
     2a0:	9a 83       	std	Y+2, r25	; 0x02
     2a2:	89 83       	std	Y+1, r24	; 0x01
     2a4:	89 81       	ldd	r24, Y+1	; 0x01
     2a6:	9a 81       	ldd	r25, Y+2	; 0x02
     2a8:	0e 94 25 01 	call	0x24a	; 0x24a <to_uARM>
     2ac:	80 e0       	ldi	r24, 0x00	; 0
     2ae:	91 e0       	ldi	r25, 0x01	; 1
     2b0:	0e 94 25 01 	call	0x24a	; 0x24a <to_uARM>
     2b4:	04 c0       	rjmp	.+8      	; 0x2be <send_to_uArm+0x28>
     2b6:	80 e0       	ldi	r24, 0x00	; 0
     2b8:	91 e0       	ldi	r25, 0x01	; 1
     2ba:	0e 94 25 01 	call	0x24a	; 0x24a <to_uARM>
     2be:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <uart_string1+0x4>
     2c2:	81 33       	cpi	r24, 0x31	; 49
     2c4:	c1 f3       	breq	.-16     	; 0x2b6 <send_to_uArm+0x20>
     2c6:	00 00       	nop
     2c8:	0f 90       	pop	r0
     2ca:	0f 90       	pop	r0
     2cc:	df 91       	pop	r29
     2ce:	cf 91       	pop	r28
     2d0:	08 95       	ret

000002d2 <__vector_20>:
     2d2:	1f 92       	push	r1
     2d4:	0f 92       	push	r0
     2d6:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     2da:	0f 92       	push	r0
     2dc:	11 24       	eor	r1, r1
     2de:	2f 93       	push	r18
     2e0:	3f 93       	push	r19
     2e2:	8f 93       	push	r24
     2e4:	9f 93       	push	r25
     2e6:	ef 93       	push	r30
     2e8:	ff 93       	push	r31
     2ea:	cf 93       	push	r28
     2ec:	df 93       	push	r29
     2ee:	00 d0       	rcall	.+0      	; 0x2f0 <__vector_20+0x1e>
     2f0:	1f 92       	push	r1
     2f2:	cd b7       	in	r28, 0x3d	; 61
     2f4:	de b7       	in	r29, 0x3e	; 62
     2f6:	1a 82       	std	Y+2, r1	; 0x02
     2f8:	86 ec       	ldi	r24, 0xC6	; 198
     2fa:	90 e0       	ldi	r25, 0x00	; 0
     2fc:	fc 01       	movw	r30, r24
     2fe:	80 81       	ld	r24, Z
     300:	8b 83       	std	Y+3, r24	; 0x03
     302:	8b 81       	ldd	r24, Y+3	; 0x03
     304:	8a 30       	cpi	r24, 0x0A	; 10
     306:	99 f0       	breq	.+38     	; 0x32e <__vector_20+0x5c>
     308:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <uart_str_count1>
     30c:	82 33       	cpi	r24, 0x32	; 50
     30e:	78 f4       	brcc	.+30     	; 0x32e <__vector_20+0x5c>
     310:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <data_bytes_recieved>
     314:	88 2f       	mov	r24, r24
     316:	90 e0       	ldi	r25, 0x00	; 0
     318:	84 5d       	subi	r24, 0xD4	; 212
     31a:	9d 4f       	sbci	r25, 0xFD	; 253
     31c:	2b 81       	ldd	r18, Y+3	; 0x03
     31e:	fc 01       	movw	r30, r24
     320:	20 83       	st	Z, r18
     322:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <data_bytes_recieved>
     326:	8f 5f       	subi	r24, 0xFF	; 255
     328:	80 93 da 01 	sts	0x01DA, r24	; 0x8001da <data_bytes_recieved>
     32c:	1b c0       	rjmp	.+54     	; 0x364 <__vector_20+0x92>
     32e:	19 82       	std	Y+1, r1	; 0x01
     330:	11 c0       	rjmp	.+34     	; 0x354 <__vector_20+0x82>
     332:	89 81       	ldd	r24, Y+1	; 0x01
     334:	88 2f       	mov	r24, r24
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	29 81       	ldd	r18, Y+1	; 0x01
     33a:	22 2f       	mov	r18, r18
     33c:	30 e0       	ldi	r19, 0x00	; 0
     33e:	24 5d       	subi	r18, 0xD4	; 212
     340:	3d 4f       	sbci	r19, 0xFD	; 253
     342:	f9 01       	movw	r30, r18
     344:	20 81       	ld	r18, Z
     346:	86 5c       	subi	r24, 0xC6	; 198
     348:	9d 4f       	sbci	r25, 0xFD	; 253
     34a:	fc 01       	movw	r30, r24
     34c:	20 83       	st	Z, r18
     34e:	89 81       	ldd	r24, Y+1	; 0x01
     350:	8f 5f       	subi	r24, 0xFF	; 255
     352:	89 83       	std	Y+1, r24	; 0x01
     354:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <data_bytes_recieved>
     358:	99 81       	ldd	r25, Y+1	; 0x01
     35a:	89 17       	cp	r24, r25
     35c:	50 f7       	brcc	.-44     	; 0x332 <__vector_20+0x60>
     35e:	81 e0       	ldi	r24, 0x01	; 1
     360:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <__data_end>
     364:	00 00       	nop
     366:	0f 90       	pop	r0
     368:	0f 90       	pop	r0
     36a:	0f 90       	pop	r0
     36c:	df 91       	pop	r29
     36e:	cf 91       	pop	r28
     370:	ff 91       	pop	r31
     372:	ef 91       	pop	r30
     374:	9f 91       	pop	r25
     376:	8f 91       	pop	r24
     378:	3f 91       	pop	r19
     37a:	2f 91       	pop	r18
     37c:	0f 90       	pop	r0
     37e:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     382:	0f 90       	pop	r0
     384:	1f 90       	pop	r1
     386:	18 95       	reti

00000388 <__vector_28>:
     388:	1f 92       	push	r1
     38a:	0f 92       	push	r0
     38c:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     390:	0f 92       	push	r0
     392:	11 24       	eor	r1, r1
     394:	2f 93       	push	r18
     396:	8f 93       	push	r24
     398:	9f 93       	push	r25
     39a:	ef 93       	push	r30
     39c:	ff 93       	push	r31
     39e:	cf 93       	push	r28
     3a0:	df 93       	push	r29
     3a2:	1f 92       	push	r1
     3a4:	cd b7       	in	r28, 0x3d	; 61
     3a6:	de b7       	in	r29, 0x3e	; 62
     3a8:	8e ec       	ldi	r24, 0xCE	; 206
     3aa:	90 e0       	ldi	r25, 0x00	; 0
     3ac:	fc 01       	movw	r30, r24
     3ae:	80 81       	ld	r24, Z
     3b0:	89 83       	std	Y+1, r24	; 0x01
     3b2:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <uart_str_complete1>
     3b6:	88 23       	and	r24, r24
     3b8:	31 f5       	brne	.+76     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     3ba:	89 81       	ldd	r24, Y+1	; 0x01
     3bc:	8a 30       	cpi	r24, 0x0A	; 10
     3be:	b1 f0       	breq	.+44     	; 0x3ec <__vector_28+0x64>
     3c0:	89 81       	ldd	r24, Y+1	; 0x01
     3c2:	8d 30       	cpi	r24, 0x0D	; 13
     3c4:	99 f0       	breq	.+38     	; 0x3ec <__vector_28+0x64>
     3c6:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <uart_str_count1>
     3ca:	82 33       	cpi	r24, 0x32	; 50
     3cc:	78 f4       	brcc	.+30     	; 0x3ec <__vector_28+0x64>
     3ce:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <uart_str_count1>
     3d2:	88 2f       	mov	r24, r24
     3d4:	90 e0       	ldi	r25, 0x00	; 0
     3d6:	84 52       	subi	r24, 0x24	; 36
     3d8:	9e 4f       	sbci	r25, 0xFE	; 254
     3da:	29 81       	ldd	r18, Y+1	; 0x01
     3dc:	fc 01       	movw	r30, r24
     3de:	20 83       	st	Z, r18
     3e0:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <uart_str_count1>
     3e4:	8f 5f       	subi	r24, 0xFF	; 255
     3e6:	80 93 db 01 	sts	0x01DB, r24	; 0x8001db <uart_str_count1>
     3ea:	0d c0       	rjmp	.+26     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     3ec:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <uart_str_count1>
     3f0:	88 2f       	mov	r24, r24
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	84 52       	subi	r24, 0x24	; 36
     3f6:	9e 4f       	sbci	r25, 0xFE	; 254
     3f8:	fc 01       	movw	r30, r24
     3fa:	10 82       	st	Z, r1
     3fc:	10 92 db 01 	sts	0x01DB, r1	; 0x8001db <uart_str_count1>
     400:	81 e0       	ldi	r24, 0x01	; 1
     402:	80 93 d9 01 	sts	0x01D9, r24	; 0x8001d9 <uart_str_complete1>
     406:	00 00       	nop
     408:	0f 90       	pop	r0
     40a:	df 91       	pop	r29
     40c:	cf 91       	pop	r28
     40e:	ff 91       	pop	r31
     410:	ef 91       	pop	r30
     412:	9f 91       	pop	r25
     414:	8f 91       	pop	r24
     416:	2f 91       	pop	r18
     418:	0f 90       	pop	r0
     41a:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     41e:	0f 90       	pop	r0
     420:	1f 90       	pop	r1
     422:	18 95       	reti

00000424 <main>:


int main (void)
{
     424:	cf 92       	push	r12
     426:	df 92       	push	r13
     428:	ef 92       	push	r14
     42a:	ff 92       	push	r15
     42c:	0f 93       	push	r16
     42e:	cf 93       	push	r28
     430:	df 93       	push	r29
     432:	cd b7       	in	r28, 0x3d	; 61
     434:	de b7       	in	r29, 0x3e	; 62
     436:	cf 55       	subi	r28, 0x5F	; 95
     438:	d1 09       	sbc	r29, r1
     43a:	0f b6       	in	r0, 0x3f	; 63
     43c:	f8 94       	cli
     43e:	de bf       	out	0x3e, r29	; 62
     440:	0f be       	out	0x3f, r0	; 63
     442:	cd bf       	out	0x3d, r28	; 61
	init_BT_CAR_V2_0();			// Das Board wird hier initialisiert	
     444:	0e 94 df 08 	call	0x11be	; 0x11be <init_BT_CAR_V2_0>
	wait_1ms(1000);	
     448:	68 ee       	ldi	r22, 0xE8	; 232
     44a:	73 e0       	ldi	r23, 0x03	; 3
     44c:	80 e0       	ldi	r24, 0x00	; 0
     44e:	90 e0       	ldi	r25, 0x00	; 0
     450:	0e 94 76 06 	call	0xcec	; 0xcec <wait_1ms>
	clear_lcd();				// LCD clear
     454:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <clear_lcd>
	init_ADC();
     458:	0e 94 8a 00 	call	0x114	; 0x114 <init_ADC>
	init_UART0();
     45c:	0e 94 ad 00 	call	0x15a	; 0x15a <init_UART0>
	init_UART1();
     460:	0e 94 ce 00 	call	0x19c	; 0x19c <init_UART1>
	unsigned char data_2;
	unsigned char data_3;
	unsigned char x1;
	unsigned char y1;
	unsigned char z1;
	unsigned char alt=0;
     464:	1f 82       	std	Y+7, r1	; 0x07
	unsigned char neu=0;
     466:	18 86       	std	Y+8, r1	; 0x08
	unsigned int recieved_X;
	unsigned int recieved_Y;
	unsigned int recieved_Z;
	unsigned char buffer [30];
	unsigned char check=0;
     468:	1d 82       	std	Y+5, r1	; 0x05
	unsigned char counter=0;
     46a:	1e 82       	std	Y+6, r1	; 0x06
	
	clear_lcd();
     46c:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <clear_lcd>
	while(1)
	{
	//	direction=get_direction();
		taster = get_LCD_Taster();
     470:	0e 94 5d 00 	call	0xba	; 0xba <get_LCD_Taster>
     474:	89 87       	std	Y+9, r24	; 0x09
		if (taster&0x08)
     476:	89 85       	ldd	r24, Y+9	; 0x09
     478:	88 2f       	mov	r24, r24
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	88 70       	andi	r24, 0x08	; 8
     47e:	99 27       	eor	r25, r25
     480:	89 2b       	or	r24, r25
     482:	21 f0       	breq	.+8      	; 0x48c <main+0x68>
		{
			send_to_uArm("G0 X170 Y0 Z160 F1000\n");			//ausgansgpkt
     484:	89 ea       	ldi	r24, 0xA9	; 169
     486:	91 e0       	ldi	r25, 0x01	; 1
     488:	0e 94 4b 01 	call	0x296	; 0x296 <send_to_uArm>
		}
		write_zahl(0,0,taster,3,0,0);
     48c:	89 85       	ldd	r24, Y+9	; 0x09
     48e:	88 2f       	mov	r24, r24
     490:	90 e0       	ldi	r25, 0x00	; 0
     492:	a0 e0       	ldi	r26, 0x00	; 0
     494:	b0 e0       	ldi	r27, 0x00	; 0
     496:	c1 2c       	mov	r12, r1
     498:	e1 2c       	mov	r14, r1
     49a:	03 e0       	ldi	r16, 0x03	; 3
     49c:	9c 01       	movw	r18, r24
     49e:	ad 01       	movw	r20, r26
     4a0:	60 e0       	ldi	r22, 0x00	; 0
     4a2:	80 e0       	ldi	r24, 0x00	; 0
     4a4:	0e 94 3f 07 	call	0xe7e	; 0xe7e <write_zahl>
		write_zahl(1,0,check,3,0,0);
     4a8:	8d 81       	ldd	r24, Y+5	; 0x05
     4aa:	88 2f       	mov	r24, r24
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	a0 e0       	ldi	r26, 0x00	; 0
     4b0:	b0 e0       	ldi	r27, 0x00	; 0
     4b2:	c1 2c       	mov	r12, r1
     4b4:	e1 2c       	mov	r14, r1
     4b6:	03 e0       	ldi	r16, 0x03	; 3
     4b8:	9c 01       	movw	r18, r24
     4ba:	ad 01       	movw	r20, r26
     4bc:	60 e0       	ldi	r22, 0x00	; 0
     4be:	81 e0       	ldi	r24, 0x01	; 1
     4c0:	0e 94 3f 07 	call	0xe7e	; 0xe7e <write_zahl>
			if (uart_str_complete!=0)
     4c4:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <__data_end>
     4c8:	88 23       	and	r24, r24
     4ca:	09 f4       	brne	.+2      	; 0x4ce <main+0xaa>
     4cc:	5e c3       	rjmp	.+1724   	; 0xb8a <main+0x766>
			{
				uart_str_complete=0;
     4ce:	10 92 d8 01 	sts	0x01D8, r1	; 0x8001d8 <__data_end>
				send_Byte_0('1');
     4d2:	81 e3       	ldi	r24, 0x31	; 49
     4d4:	0e 94 ef 00 	call	0x1de	; 0x1de <send_Byte_0>
     4d8:	80 e0       	ldi	r24, 0x00	; 0
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	a8 ec       	ldi	r26, 0xC8	; 200
     4de:	b2 e4       	ldi	r27, 0x42	; 66
     4e0:	8e 8b       	std	Y+22, r24	; 0x16
     4e2:	9f 8b       	std	Y+23, r25	; 0x17
     4e4:	a8 8f       	std	Y+24, r26	; 0x18
     4e6:	b9 8f       	std	Y+25, r27	; 0x19

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     4e8:	20 e0       	ldi	r18, 0x00	; 0
     4ea:	30 e0       	ldi	r19, 0x00	; 0
     4ec:	4a e7       	ldi	r20, 0x7A	; 122
     4ee:	53 e4       	ldi	r21, 0x43	; 67
     4f0:	6e 89       	ldd	r22, Y+22	; 0x16
     4f2:	7f 89       	ldd	r23, Y+23	; 0x17
     4f4:	88 8d       	ldd	r24, Y+24	; 0x18
     4f6:	99 8d       	ldd	r25, Y+25	; 0x19
     4f8:	0e 94 5a 0a 	call	0x14b4	; 0x14b4 <__mulsf3>
     4fc:	dc 01       	movw	r26, r24
     4fe:	cb 01       	movw	r24, r22
     500:	8a 8f       	std	Y+26, r24	; 0x1a
     502:	9b 8f       	std	Y+27, r25	; 0x1b
     504:	ac 8f       	std	Y+28, r26	; 0x1c
     506:	bd 8f       	std	Y+29, r27	; 0x1d
	if (__tmp < 1.0)
     508:	20 e0       	ldi	r18, 0x00	; 0
     50a:	30 e0       	ldi	r19, 0x00	; 0
     50c:	40 e8       	ldi	r20, 0x80	; 128
     50e:	5f e3       	ldi	r21, 0x3F	; 63
     510:	6a 8d       	ldd	r22, Y+26	; 0x1a
     512:	7b 8d       	ldd	r23, Y+27	; 0x1b
     514:	8c 8d       	ldd	r24, Y+28	; 0x1c
     516:	9d 8d       	ldd	r25, Y+29	; 0x1d
     518:	0e 94 fd 08 	call	0x11fa	; 0x11fa <__cmpsf2>
     51c:	88 23       	and	r24, r24
     51e:	2c f4       	brge	.+10     	; 0x52a <main+0x106>
		__ticks = 1;
     520:	81 e0       	ldi	r24, 0x01	; 1
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	9f 8f       	std	Y+31, r25	; 0x1f
     526:	8e 8f       	std	Y+30, r24	; 0x1e
     528:	3f c0       	rjmp	.+126    	; 0x5a8 <main+0x184>
	else if (__tmp > 65535)
     52a:	20 e0       	ldi	r18, 0x00	; 0
     52c:	3f ef       	ldi	r19, 0xFF	; 255
     52e:	4f e7       	ldi	r20, 0x7F	; 127
     530:	57 e4       	ldi	r21, 0x47	; 71
     532:	6a 8d       	ldd	r22, Y+26	; 0x1a
     534:	7b 8d       	ldd	r23, Y+27	; 0x1b
     536:	8c 8d       	ldd	r24, Y+28	; 0x1c
     538:	9d 8d       	ldd	r25, Y+29	; 0x1d
     53a:	0e 94 55 0a 	call	0x14aa	; 0x14aa <__gesf2>
     53e:	18 16       	cp	r1, r24
     540:	4c f5       	brge	.+82     	; 0x594 <main+0x170>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     542:	20 e0       	ldi	r18, 0x00	; 0
     544:	30 e0       	ldi	r19, 0x00	; 0
     546:	40 e2       	ldi	r20, 0x20	; 32
     548:	51 e4       	ldi	r21, 0x41	; 65
     54a:	6e 89       	ldd	r22, Y+22	; 0x16
     54c:	7f 89       	ldd	r23, Y+23	; 0x17
     54e:	88 8d       	ldd	r24, Y+24	; 0x18
     550:	99 8d       	ldd	r25, Y+25	; 0x19
     552:	0e 94 5a 0a 	call	0x14b4	; 0x14b4 <__mulsf3>
     556:	dc 01       	movw	r26, r24
     558:	cb 01       	movw	r24, r22
     55a:	bc 01       	movw	r22, r24
     55c:	cd 01       	movw	r24, r26
     55e:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__fixunssfsi>
     562:	dc 01       	movw	r26, r24
     564:	cb 01       	movw	r24, r22
     566:	9f 8f       	std	Y+31, r25	; 0x1f
     568:	8e 8f       	std	Y+30, r24	; 0x1e
     56a:	0f c0       	rjmp	.+30     	; 0x58a <main+0x166>
     56c:	89 e1       	ldi	r24, 0x19	; 25
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	99 a3       	std	Y+33, r25	; 0x21
     572:	88 a3       	std	Y+32, r24	; 0x20
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     574:	88 a1       	ldd	r24, Y+32	; 0x20
     576:	99 a1       	ldd	r25, Y+33	; 0x21
     578:	01 97       	sbiw	r24, 0x01	; 1
     57a:	f1 f7       	brne	.-4      	; 0x578 <main+0x154>
     57c:	99 a3       	std	Y+33, r25	; 0x21
     57e:	88 a3       	std	Y+32, r24	; 0x20
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     580:	8e 8d       	ldd	r24, Y+30	; 0x1e
     582:	9f 8d       	ldd	r25, Y+31	; 0x1f
     584:	01 97       	sbiw	r24, 0x01	; 1
     586:	9f 8f       	std	Y+31, r25	; 0x1f
     588:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     58a:	8e 8d       	ldd	r24, Y+30	; 0x1e
     58c:	9f 8d       	ldd	r25, Y+31	; 0x1f
     58e:	89 2b       	or	r24, r25
     590:	69 f7       	brne	.-38     	; 0x56c <main+0x148>
     592:	14 c0       	rjmp	.+40     	; 0x5bc <main+0x198>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     594:	6a 8d       	ldd	r22, Y+26	; 0x1a
     596:	7b 8d       	ldd	r23, Y+27	; 0x1b
     598:	8c 8d       	ldd	r24, Y+28	; 0x1c
     59a:	9d 8d       	ldd	r25, Y+29	; 0x1d
     59c:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__fixunssfsi>
     5a0:	dc 01       	movw	r26, r24
     5a2:	cb 01       	movw	r24, r22
     5a4:	9f 8f       	std	Y+31, r25	; 0x1f
     5a6:	8e 8f       	std	Y+30, r24	; 0x1e
     5a8:	8e 8d       	ldd	r24, Y+30	; 0x1e
     5aa:	9f 8d       	ldd	r25, Y+31	; 0x1f
     5ac:	9b a3       	std	Y+35, r25	; 0x23
     5ae:	8a a3       	std	Y+34, r24	; 0x22
     5b0:	8a a1       	ldd	r24, Y+34	; 0x22
     5b2:	9b a1       	ldd	r25, Y+35	; 0x23
     5b4:	01 97       	sbiw	r24, 0x01	; 1
     5b6:	f1 f7       	brne	.-4      	; 0x5b4 <main+0x190>
     5b8:	9b a3       	std	Y+35, r25	; 0x23
     5ba:	8a a3       	std	Y+34, r24	; 0x22
				_delay_ms(100);
				
				for (counter=0;counter<=data_bytes_recieved;counter++)
     5bc:	1e 82       	std	Y+6, r1	; 0x06
     5be:	a6 c1       	rjmp	.+844    	; 0x90c <main+0x4e8>
				{
					switch (final_data[counter])//final data decoding
     5c0:	8e 81       	ldd	r24, Y+6	; 0x06
     5c2:	88 2f       	mov	r24, r24
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	86 5c       	subi	r24, 0xC6	; 198
     5c8:	9d 4f       	sbci	r25, 0xFD	; 253
     5ca:	fc 01       	movw	r30, r24
     5cc:	80 81       	ld	r24, Z
     5ce:	88 2f       	mov	r24, r24
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	88 35       	cpi	r24, 0x58	; 88
     5d4:	91 05       	cpc	r25, r1
     5d6:	29 f0       	breq	.+10     	; 0x5e2 <main+0x1be>
     5d8:	89 35       	cpi	r24, 0x59	; 89
     5da:	91 05       	cpc	r25, r1
     5dc:	09 f4       	brne	.+2      	; 0x5e0 <main+0x1bc>
     5de:	ca c0       	rjmp	.+404    	; 0x774 <main+0x350>
     5e0:	92 c1       	rjmp	.+804    	; 0x906 <main+0x4e2>
					{
						case 'X':
							recieved_X=(final_data[counter+1]-48)*1000+(final_data[counter+2]-48)*100+(final_data[counter+3]-48)*10+final_data[counter+4]-48;
     5e2:	8e 81       	ldd	r24, Y+6	; 0x06
     5e4:	88 2f       	mov	r24, r24
     5e6:	90 e0       	ldi	r25, 0x00	; 0
     5e8:	01 96       	adiw	r24, 0x01	; 1
     5ea:	86 5c       	subi	r24, 0xC6	; 198
     5ec:	9d 4f       	sbci	r25, 0xFD	; 253
     5ee:	fc 01       	movw	r30, r24
     5f0:	80 81       	ld	r24, Z
     5f2:	88 2f       	mov	r24, r24
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	ac 01       	movw	r20, r24
     5f8:	40 53       	subi	r20, 0x30	; 48
     5fa:	51 09       	sbc	r21, r1
     5fc:	88 ee       	ldi	r24, 0xE8	; 232
     5fe:	93 e0       	ldi	r25, 0x03	; 3
     600:	48 9f       	mul	r20, r24
     602:	90 01       	movw	r18, r0
     604:	49 9f       	mul	r20, r25
     606:	30 0d       	add	r19, r0
     608:	58 9f       	mul	r21, r24
     60a:	30 0d       	add	r19, r0
     60c:	11 24       	eor	r1, r1
     60e:	8e 81       	ldd	r24, Y+6	; 0x06
     610:	88 2f       	mov	r24, r24
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	02 96       	adiw	r24, 0x02	; 2
     616:	86 5c       	subi	r24, 0xC6	; 198
     618:	9d 4f       	sbci	r25, 0xFD	; 253
     61a:	fc 01       	movw	r30, r24
     61c:	80 81       	ld	r24, Z
     61e:	88 2f       	mov	r24, r24
     620:	90 e0       	ldi	r25, 0x00	; 0
     622:	ac 01       	movw	r20, r24
     624:	40 53       	subi	r20, 0x30	; 48
     626:	51 09       	sbc	r21, r1
     628:	64 e6       	ldi	r22, 0x64	; 100
     62a:	64 9f       	mul	r22, r20
     62c:	c0 01       	movw	r24, r0
     62e:	65 9f       	mul	r22, r21
     630:	90 0d       	add	r25, r0
     632:	11 24       	eor	r1, r1
     634:	28 0f       	add	r18, r24
     636:	39 1f       	adc	r19, r25
     638:	8e 81       	ldd	r24, Y+6	; 0x06
     63a:	88 2f       	mov	r24, r24
     63c:	90 e0       	ldi	r25, 0x00	; 0
     63e:	03 96       	adiw	r24, 0x03	; 3
     640:	86 5c       	subi	r24, 0xC6	; 198
     642:	9d 4f       	sbci	r25, 0xFD	; 253
     644:	fc 01       	movw	r30, r24
     646:	80 81       	ld	r24, Z
     648:	88 2f       	mov	r24, r24
     64a:	90 e0       	ldi	r25, 0x00	; 0
     64c:	c0 97       	sbiw	r24, 0x30	; 48
     64e:	88 0f       	add	r24, r24
     650:	99 1f       	adc	r25, r25
     652:	ac 01       	movw	r20, r24
     654:	44 0f       	add	r20, r20
     656:	55 1f       	adc	r21, r21
     658:	44 0f       	add	r20, r20
     65a:	55 1f       	adc	r21, r21
     65c:	84 0f       	add	r24, r20
     65e:	95 1f       	adc	r25, r21
     660:	28 0f       	add	r18, r24
     662:	39 1f       	adc	r19, r25
     664:	8e 81       	ldd	r24, Y+6	; 0x06
     666:	88 2f       	mov	r24, r24
     668:	90 e0       	ldi	r25, 0x00	; 0
     66a:	04 96       	adiw	r24, 0x04	; 4
     66c:	86 5c       	subi	r24, 0xC6	; 198
     66e:	9d 4f       	sbci	r25, 0xFD	; 253
     670:	fc 01       	movw	r30, r24
     672:	80 81       	ld	r24, Z
     674:	88 2f       	mov	r24, r24
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	82 0f       	add	r24, r18
     67a:	93 1f       	adc	r25, r19
     67c:	c0 97       	sbiw	r24, 0x30	; 48
     67e:	9a 83       	std	Y+2, r25	; 0x02
     680:	89 83       	std	Y+1, r24	; 0x01
							send_Byte_0('1');
     682:	81 e3       	ldi	r24, 0x31	; 49
     684:	0e 94 ef 00 	call	0x1de	; 0x1de <send_Byte_0>
     688:	80 e0       	ldi	r24, 0x00	; 0
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	a8 ec       	ldi	r26, 0xC8	; 200
     68e:	b2 e4       	ldi	r27, 0x42	; 66
     690:	8a 87       	std	Y+10, r24	; 0x0a
     692:	9b 87       	std	Y+11, r25	; 0x0b
     694:	ac 87       	std	Y+12, r26	; 0x0c
     696:	bd 87       	std	Y+13, r27	; 0x0d

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     698:	20 e0       	ldi	r18, 0x00	; 0
     69a:	30 e0       	ldi	r19, 0x00	; 0
     69c:	4a e7       	ldi	r20, 0x7A	; 122
     69e:	53 e4       	ldi	r21, 0x43	; 67
     6a0:	6a 85       	ldd	r22, Y+10	; 0x0a
     6a2:	7b 85       	ldd	r23, Y+11	; 0x0b
     6a4:	8c 85       	ldd	r24, Y+12	; 0x0c
     6a6:	9d 85       	ldd	r25, Y+13	; 0x0d
     6a8:	0e 94 5a 0a 	call	0x14b4	; 0x14b4 <__mulsf3>
     6ac:	dc 01       	movw	r26, r24
     6ae:	cb 01       	movw	r24, r22
     6b0:	8c a3       	std	Y+36, r24	; 0x24
     6b2:	9d a3       	std	Y+37, r25	; 0x25
     6b4:	ae a3       	std	Y+38, r26	; 0x26
     6b6:	bf a3       	std	Y+39, r27	; 0x27
	if (__tmp < 1.0)
     6b8:	20 e0       	ldi	r18, 0x00	; 0
     6ba:	30 e0       	ldi	r19, 0x00	; 0
     6bc:	40 e8       	ldi	r20, 0x80	; 128
     6be:	5f e3       	ldi	r21, 0x3F	; 63
     6c0:	6c a1       	ldd	r22, Y+36	; 0x24
     6c2:	7d a1       	ldd	r23, Y+37	; 0x25
     6c4:	8e a1       	ldd	r24, Y+38	; 0x26
     6c6:	9f a1       	ldd	r25, Y+39	; 0x27
     6c8:	0e 94 fd 08 	call	0x11fa	; 0x11fa <__cmpsf2>
     6cc:	88 23       	and	r24, r24
     6ce:	2c f4       	brge	.+10     	; 0x6da <main+0x2b6>
		__ticks = 1;
     6d0:	81 e0       	ldi	r24, 0x01	; 1
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	99 a7       	std	Y+41, r25	; 0x29
     6d6:	88 a7       	std	Y+40, r24	; 0x28
     6d8:	3f c0       	rjmp	.+126    	; 0x758 <main+0x334>
	else if (__tmp > 65535)
     6da:	20 e0       	ldi	r18, 0x00	; 0
     6dc:	3f ef       	ldi	r19, 0xFF	; 255
     6de:	4f e7       	ldi	r20, 0x7F	; 127
     6e0:	57 e4       	ldi	r21, 0x47	; 71
     6e2:	6c a1       	ldd	r22, Y+36	; 0x24
     6e4:	7d a1       	ldd	r23, Y+37	; 0x25
     6e6:	8e a1       	ldd	r24, Y+38	; 0x26
     6e8:	9f a1       	ldd	r25, Y+39	; 0x27
     6ea:	0e 94 55 0a 	call	0x14aa	; 0x14aa <__gesf2>
     6ee:	18 16       	cp	r1, r24
     6f0:	4c f5       	brge	.+82     	; 0x744 <main+0x320>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     6f2:	20 e0       	ldi	r18, 0x00	; 0
     6f4:	30 e0       	ldi	r19, 0x00	; 0
     6f6:	40 e2       	ldi	r20, 0x20	; 32
     6f8:	51 e4       	ldi	r21, 0x41	; 65
     6fa:	6a 85       	ldd	r22, Y+10	; 0x0a
     6fc:	7b 85       	ldd	r23, Y+11	; 0x0b
     6fe:	8c 85       	ldd	r24, Y+12	; 0x0c
     700:	9d 85       	ldd	r25, Y+13	; 0x0d
     702:	0e 94 5a 0a 	call	0x14b4	; 0x14b4 <__mulsf3>
     706:	dc 01       	movw	r26, r24
     708:	cb 01       	movw	r24, r22
     70a:	bc 01       	movw	r22, r24
     70c:	cd 01       	movw	r24, r26
     70e:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__fixunssfsi>
     712:	dc 01       	movw	r26, r24
     714:	cb 01       	movw	r24, r22
     716:	99 a7       	std	Y+41, r25	; 0x29
     718:	88 a7       	std	Y+40, r24	; 0x28
     71a:	0f c0       	rjmp	.+30     	; 0x73a <main+0x316>
     71c:	89 e1       	ldi	r24, 0x19	; 25
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	9b a7       	std	Y+43, r25	; 0x2b
     722:	8a a7       	std	Y+42, r24	; 0x2a
     724:	8a a5       	ldd	r24, Y+42	; 0x2a
     726:	9b a5       	ldd	r25, Y+43	; 0x2b
     728:	01 97       	sbiw	r24, 0x01	; 1
     72a:	f1 f7       	brne	.-4      	; 0x728 <main+0x304>
     72c:	9b a7       	std	Y+43, r25	; 0x2b
     72e:	8a a7       	std	Y+42, r24	; 0x2a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     730:	88 a5       	ldd	r24, Y+40	; 0x28
     732:	99 a5       	ldd	r25, Y+41	; 0x29
     734:	01 97       	sbiw	r24, 0x01	; 1
     736:	99 a7       	std	Y+41, r25	; 0x29
     738:	88 a7       	std	Y+40, r24	; 0x28
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     73a:	88 a5       	ldd	r24, Y+40	; 0x28
     73c:	99 a5       	ldd	r25, Y+41	; 0x29
     73e:	89 2b       	or	r24, r25
     740:	69 f7       	brne	.-38     	; 0x71c <main+0x2f8>
     742:	14 c0       	rjmp	.+40     	; 0x76c <main+0x348>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     744:	6c a1       	ldd	r22, Y+36	; 0x24
     746:	7d a1       	ldd	r23, Y+37	; 0x25
     748:	8e a1       	ldd	r24, Y+38	; 0x26
     74a:	9f a1       	ldd	r25, Y+39	; 0x27
     74c:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__fixunssfsi>
     750:	dc 01       	movw	r26, r24
     752:	cb 01       	movw	r24, r22
     754:	99 a7       	std	Y+41, r25	; 0x29
     756:	88 a7       	std	Y+40, r24	; 0x28
     758:	88 a5       	ldd	r24, Y+40	; 0x28
     75a:	99 a5       	ldd	r25, Y+41	; 0x29
     75c:	9d a7       	std	Y+45, r25	; 0x2d
     75e:	8c a7       	std	Y+44, r24	; 0x2c
     760:	8c a5       	ldd	r24, Y+44	; 0x2c
     762:	9d a5       	ldd	r25, Y+45	; 0x2d
     764:	01 97       	sbiw	r24, 0x01	; 1
     766:	f1 f7       	brne	.-4      	; 0x764 <main+0x340>
     768:	9d a7       	std	Y+45, r25	; 0x2d
     76a:	8c a7       	std	Y+44, r24	; 0x2c
							_delay_ms(100);
							check++;
     76c:	8d 81       	ldd	r24, Y+5	; 0x05
     76e:	8f 5f       	subi	r24, 0xFF	; 255
     770:	8d 83       	std	Y+5, r24	; 0x05
						break;
     772:	c9 c0       	rjmp	.+402    	; 0x906 <main+0x4e2>
				
						case 'Y':
							recieved_Y=(final_data[counter+1]-48)*1000+(final_data[counter+2]-48)*100+(final_data[counter+3]-48)*10+final_data[counter+4]-48;
     774:	8e 81       	ldd	r24, Y+6	; 0x06
     776:	88 2f       	mov	r24, r24
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	01 96       	adiw	r24, 0x01	; 1
     77c:	86 5c       	subi	r24, 0xC6	; 198
     77e:	9d 4f       	sbci	r25, 0xFD	; 253
     780:	fc 01       	movw	r30, r24
     782:	80 81       	ld	r24, Z
     784:	88 2f       	mov	r24, r24
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	ac 01       	movw	r20, r24
     78a:	40 53       	subi	r20, 0x30	; 48
     78c:	51 09       	sbc	r21, r1
     78e:	88 ee       	ldi	r24, 0xE8	; 232
     790:	93 e0       	ldi	r25, 0x03	; 3
     792:	48 9f       	mul	r20, r24
     794:	90 01       	movw	r18, r0
     796:	49 9f       	mul	r20, r25
     798:	30 0d       	add	r19, r0
     79a:	58 9f       	mul	r21, r24
     79c:	30 0d       	add	r19, r0
     79e:	11 24       	eor	r1, r1
     7a0:	8e 81       	ldd	r24, Y+6	; 0x06
     7a2:	88 2f       	mov	r24, r24
     7a4:	90 e0       	ldi	r25, 0x00	; 0
     7a6:	02 96       	adiw	r24, 0x02	; 2
     7a8:	86 5c       	subi	r24, 0xC6	; 198
     7aa:	9d 4f       	sbci	r25, 0xFD	; 253
     7ac:	fc 01       	movw	r30, r24
     7ae:	80 81       	ld	r24, Z
     7b0:	88 2f       	mov	r24, r24
     7b2:	90 e0       	ldi	r25, 0x00	; 0
     7b4:	ac 01       	movw	r20, r24
     7b6:	40 53       	subi	r20, 0x30	; 48
     7b8:	51 09       	sbc	r21, r1
     7ba:	64 e6       	ldi	r22, 0x64	; 100
     7bc:	64 9f       	mul	r22, r20
     7be:	c0 01       	movw	r24, r0
     7c0:	65 9f       	mul	r22, r21
     7c2:	90 0d       	add	r25, r0
     7c4:	11 24       	eor	r1, r1
     7c6:	28 0f       	add	r18, r24
     7c8:	39 1f       	adc	r19, r25
     7ca:	8e 81       	ldd	r24, Y+6	; 0x06
     7cc:	88 2f       	mov	r24, r24
     7ce:	90 e0       	ldi	r25, 0x00	; 0
     7d0:	03 96       	adiw	r24, 0x03	; 3
     7d2:	86 5c       	subi	r24, 0xC6	; 198
     7d4:	9d 4f       	sbci	r25, 0xFD	; 253
     7d6:	fc 01       	movw	r30, r24
     7d8:	80 81       	ld	r24, Z
     7da:	88 2f       	mov	r24, r24
     7dc:	90 e0       	ldi	r25, 0x00	; 0
     7de:	c0 97       	sbiw	r24, 0x30	; 48
     7e0:	88 0f       	add	r24, r24
     7e2:	99 1f       	adc	r25, r25
     7e4:	ac 01       	movw	r20, r24
     7e6:	44 0f       	add	r20, r20
     7e8:	55 1f       	adc	r21, r21
     7ea:	44 0f       	add	r20, r20
     7ec:	55 1f       	adc	r21, r21
     7ee:	84 0f       	add	r24, r20
     7f0:	95 1f       	adc	r25, r21
     7f2:	28 0f       	add	r18, r24
     7f4:	39 1f       	adc	r19, r25
     7f6:	8e 81       	ldd	r24, Y+6	; 0x06
     7f8:	88 2f       	mov	r24, r24
     7fa:	90 e0       	ldi	r25, 0x00	; 0
     7fc:	04 96       	adiw	r24, 0x04	; 4
     7fe:	86 5c       	subi	r24, 0xC6	; 198
     800:	9d 4f       	sbci	r25, 0xFD	; 253
     802:	fc 01       	movw	r30, r24
     804:	80 81       	ld	r24, Z
     806:	88 2f       	mov	r24, r24
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	82 0f       	add	r24, r18
     80c:	93 1f       	adc	r25, r19
     80e:	c0 97       	sbiw	r24, 0x30	; 48
     810:	9c 83       	std	Y+4, r25	; 0x04
     812:	8b 83       	std	Y+3, r24	; 0x03
							send_Byte_0('1');
     814:	81 e3       	ldi	r24, 0x31	; 49
     816:	0e 94 ef 00 	call	0x1de	; 0x1de <send_Byte_0>
     81a:	80 e0       	ldi	r24, 0x00	; 0
     81c:	90 e0       	ldi	r25, 0x00	; 0
     81e:	a8 ec       	ldi	r26, 0xC8	; 200
     820:	b2 e4       	ldi	r27, 0x42	; 66
     822:	8e 87       	std	Y+14, r24	; 0x0e
     824:	9f 87       	std	Y+15, r25	; 0x0f
     826:	a8 8b       	std	Y+16, r26	; 0x10
     828:	b9 8b       	std	Y+17, r27	; 0x11

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     82a:	20 e0       	ldi	r18, 0x00	; 0
     82c:	30 e0       	ldi	r19, 0x00	; 0
     82e:	4a e7       	ldi	r20, 0x7A	; 122
     830:	53 e4       	ldi	r21, 0x43	; 67
     832:	6e 85       	ldd	r22, Y+14	; 0x0e
     834:	7f 85       	ldd	r23, Y+15	; 0x0f
     836:	88 89       	ldd	r24, Y+16	; 0x10
     838:	99 89       	ldd	r25, Y+17	; 0x11
     83a:	0e 94 5a 0a 	call	0x14b4	; 0x14b4 <__mulsf3>
     83e:	dc 01       	movw	r26, r24
     840:	cb 01       	movw	r24, r22
     842:	8e a7       	std	Y+46, r24	; 0x2e
     844:	9f a7       	std	Y+47, r25	; 0x2f
     846:	a8 ab       	std	Y+48, r26	; 0x30
     848:	b9 ab       	std	Y+49, r27	; 0x31
	if (__tmp < 1.0)
     84a:	20 e0       	ldi	r18, 0x00	; 0
     84c:	30 e0       	ldi	r19, 0x00	; 0
     84e:	40 e8       	ldi	r20, 0x80	; 128
     850:	5f e3       	ldi	r21, 0x3F	; 63
     852:	6e a5       	ldd	r22, Y+46	; 0x2e
     854:	7f a5       	ldd	r23, Y+47	; 0x2f
     856:	88 a9       	ldd	r24, Y+48	; 0x30
     858:	99 a9       	ldd	r25, Y+49	; 0x31
     85a:	0e 94 fd 08 	call	0x11fa	; 0x11fa <__cmpsf2>
     85e:	88 23       	and	r24, r24
     860:	2c f4       	brge	.+10     	; 0x86c <main+0x448>
		__ticks = 1;
     862:	81 e0       	ldi	r24, 0x01	; 1
     864:	90 e0       	ldi	r25, 0x00	; 0
     866:	9b ab       	std	Y+51, r25	; 0x33
     868:	8a ab       	std	Y+50, r24	; 0x32
     86a:	3f c0       	rjmp	.+126    	; 0x8ea <main+0x4c6>
	else if (__tmp > 65535)
     86c:	20 e0       	ldi	r18, 0x00	; 0
     86e:	3f ef       	ldi	r19, 0xFF	; 255
     870:	4f e7       	ldi	r20, 0x7F	; 127
     872:	57 e4       	ldi	r21, 0x47	; 71
     874:	6e a5       	ldd	r22, Y+46	; 0x2e
     876:	7f a5       	ldd	r23, Y+47	; 0x2f
     878:	88 a9       	ldd	r24, Y+48	; 0x30
     87a:	99 a9       	ldd	r25, Y+49	; 0x31
     87c:	0e 94 55 0a 	call	0x14aa	; 0x14aa <__gesf2>
     880:	18 16       	cp	r1, r24
     882:	4c f5       	brge	.+82     	; 0x8d6 <main+0x4b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     884:	20 e0       	ldi	r18, 0x00	; 0
     886:	30 e0       	ldi	r19, 0x00	; 0
     888:	40 e2       	ldi	r20, 0x20	; 32
     88a:	51 e4       	ldi	r21, 0x41	; 65
     88c:	6e 85       	ldd	r22, Y+14	; 0x0e
     88e:	7f 85       	ldd	r23, Y+15	; 0x0f
     890:	88 89       	ldd	r24, Y+16	; 0x10
     892:	99 89       	ldd	r25, Y+17	; 0x11
     894:	0e 94 5a 0a 	call	0x14b4	; 0x14b4 <__mulsf3>
     898:	dc 01       	movw	r26, r24
     89a:	cb 01       	movw	r24, r22
     89c:	bc 01       	movw	r22, r24
     89e:	cd 01       	movw	r24, r26
     8a0:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__fixunssfsi>
     8a4:	dc 01       	movw	r26, r24
     8a6:	cb 01       	movw	r24, r22
     8a8:	9b ab       	std	Y+51, r25	; 0x33
     8aa:	8a ab       	std	Y+50, r24	; 0x32
     8ac:	0f c0       	rjmp	.+30     	; 0x8cc <main+0x4a8>
     8ae:	89 e1       	ldi	r24, 0x19	; 25
     8b0:	90 e0       	ldi	r25, 0x00	; 0
     8b2:	9d ab       	std	Y+53, r25	; 0x35
     8b4:	8c ab       	std	Y+52, r24	; 0x34
     8b6:	8c a9       	ldd	r24, Y+52	; 0x34
     8b8:	9d a9       	ldd	r25, Y+53	; 0x35
     8ba:	01 97       	sbiw	r24, 0x01	; 1
     8bc:	f1 f7       	brne	.-4      	; 0x8ba <main+0x496>
     8be:	9d ab       	std	Y+53, r25	; 0x35
     8c0:	8c ab       	std	Y+52, r24	; 0x34
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8c2:	8a a9       	ldd	r24, Y+50	; 0x32
     8c4:	9b a9       	ldd	r25, Y+51	; 0x33
     8c6:	01 97       	sbiw	r24, 0x01	; 1
     8c8:	9b ab       	std	Y+51, r25	; 0x33
     8ca:	8a ab       	std	Y+50, r24	; 0x32
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8cc:	8a a9       	ldd	r24, Y+50	; 0x32
     8ce:	9b a9       	ldd	r25, Y+51	; 0x33
     8d0:	89 2b       	or	r24, r25
     8d2:	69 f7       	brne	.-38     	; 0x8ae <main+0x48a>
     8d4:	14 c0       	rjmp	.+40     	; 0x8fe <main+0x4da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     8d6:	6e a5       	ldd	r22, Y+46	; 0x2e
     8d8:	7f a5       	ldd	r23, Y+47	; 0x2f
     8da:	88 a9       	ldd	r24, Y+48	; 0x30
     8dc:	99 a9       	ldd	r25, Y+49	; 0x31
     8de:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__fixunssfsi>
     8e2:	dc 01       	movw	r26, r24
     8e4:	cb 01       	movw	r24, r22
     8e6:	9b ab       	std	Y+51, r25	; 0x33
     8e8:	8a ab       	std	Y+50, r24	; 0x32
     8ea:	8a a9       	ldd	r24, Y+50	; 0x32
     8ec:	9b a9       	ldd	r25, Y+51	; 0x33
     8ee:	9f ab       	std	Y+55, r25	; 0x37
     8f0:	8e ab       	std	Y+54, r24	; 0x36
     8f2:	8e a9       	ldd	r24, Y+54	; 0x36
     8f4:	9f a9       	ldd	r25, Y+55	; 0x37
     8f6:	01 97       	sbiw	r24, 0x01	; 1
     8f8:	f1 f7       	brne	.-4      	; 0x8f6 <main+0x4d2>
     8fa:	9f ab       	std	Y+55, r25	; 0x37
     8fc:	8e ab       	std	Y+54, r24	; 0x36
							_delay_ms(100);
							check++;
     8fe:	8d 81       	ldd	r24, Y+5	; 0x05
     900:	8f 5f       	subi	r24, 0xFF	; 255
     902:	8d 83       	std	Y+5, r24	; 0x05
						break;
     904:	00 00       	nop
			{
				uart_str_complete=0;
				send_Byte_0('1');
				_delay_ms(100);
				
				for (counter=0;counter<=data_bytes_recieved;counter++)
     906:	8e 81       	ldd	r24, Y+6	; 0x06
     908:	8f 5f       	subi	r24, 0xFF	; 255
     90a:	8e 83       	std	Y+6, r24	; 0x06
     90c:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <data_bytes_recieved>
     910:	9e 81       	ldd	r25, Y+6	; 0x06
     912:	89 17       	cp	r24, r25
     914:	08 f0       	brcs	.+2      	; 0x918 <main+0x4f4>
     916:	54 ce       	rjmp	.-856    	; 0x5c0 <main+0x19c>
							_delay_ms(100);
							check++;
						break;
					}
				}
				data_bytes_recieved=0;
     918:	10 92 da 01 	sts	0x01DA, r1	; 0x8001da <data_bytes_recieved>
				if ((check==0)||(check>2))
     91c:	8d 81       	ldd	r24, Y+5	; 0x05
     91e:	88 23       	and	r24, r24
     920:	19 f0       	breq	.+6      	; 0x928 <main+0x504>
     922:	8d 81       	ldd	r24, Y+5	; 0x05
     924:	83 30       	cpi	r24, 0x03	; 3
     926:	20 f0       	brcs	.+8      	; 0x930 <main+0x50c>
				{
					send_Byte_0('0');
     928:	80 e3       	ldi	r24, 0x30	; 48
     92a:	0e 94 ef 00 	call	0x1de	; 0x1de <send_Byte_0>
     92e:	01 c0       	rjmp	.+2      	; 0x932 <main+0x50e>
				}
				else
				{
					check=0;
     930:	1d 82       	std	Y+5, r1	; 0x05
				}
				snprintf(buffer,30,"G0 X%d Y%d Z150 F1000\n",recieved_X/3.3,recieved_Y/2.47);
     932:	8b 81       	ldd	r24, Y+3	; 0x03
     934:	9c 81       	ldd	r25, Y+4	; 0x04
     936:	cc 01       	movw	r24, r24
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	bc 01       	movw	r22, r24
     93e:	cd 01       	movw	r24, r26
     940:	0e 94 a3 09 	call	0x1346	; 0x1346 <__floatunsisf>
     944:	dc 01       	movw	r26, r24
     946:	cb 01       	movw	r24, r22
     948:	2b e7       	ldi	r18, 0x7B	; 123
     94a:	34 e1       	ldi	r19, 0x14	; 20
     94c:	4e e1       	ldi	r20, 0x1E	; 30
     94e:	50 e4       	ldi	r21, 0x40	; 64
     950:	bc 01       	movw	r22, r24
     952:	cd 01       	movw	r24, r26
     954:	0e 94 02 09 	call	0x1204	; 0x1204 <__divsf3>
     958:	dc 01       	movw	r26, r24
     95a:	cb 01       	movw	r24, r22
     95c:	6c 01       	movw	r12, r24
     95e:	7d 01       	movw	r14, r26
     960:	89 81       	ldd	r24, Y+1	; 0x01
     962:	9a 81       	ldd	r25, Y+2	; 0x02
     964:	cc 01       	movw	r24, r24
     966:	a0 e0       	ldi	r26, 0x00	; 0
     968:	b0 e0       	ldi	r27, 0x00	; 0
     96a:	bc 01       	movw	r22, r24
     96c:	cd 01       	movw	r24, r26
     96e:	0e 94 a3 09 	call	0x1346	; 0x1346 <__floatunsisf>
     972:	dc 01       	movw	r26, r24
     974:	cb 01       	movw	r24, r22
     976:	23 e3       	ldi	r18, 0x33	; 51
     978:	33 e3       	ldi	r19, 0x33	; 51
     97a:	43 e5       	ldi	r20, 0x53	; 83
     97c:	50 e4       	ldi	r21, 0x40	; 64
     97e:	bc 01       	movw	r22, r24
     980:	cd 01       	movw	r24, r26
     982:	0e 94 02 09 	call	0x1204	; 0x1204 <__divsf3>
     986:	dc 01       	movw	r26, r24
     988:	cb 01       	movw	r24, r22
     98a:	2f 2d       	mov	r18, r15
     98c:	2f 93       	push	r18
     98e:	2e 2d       	mov	r18, r14
     990:	2f 93       	push	r18
     992:	2d 2d       	mov	r18, r13
     994:	2f 93       	push	r18
     996:	2c 2d       	mov	r18, r12
     998:	2f 93       	push	r18
     99a:	2b 2f       	mov	r18, r27
     99c:	2f 93       	push	r18
     99e:	2a 2f       	mov	r18, r26
     9a0:	2f 93       	push	r18
     9a2:	29 2f       	mov	r18, r25
     9a4:	2f 93       	push	r18
     9a6:	8f 93       	push	r24
     9a8:	80 ec       	ldi	r24, 0xC0	; 192
     9aa:	91 e0       	ldi	r25, 0x01	; 1
     9ac:	89 2f       	mov	r24, r25
     9ae:	8f 93       	push	r24
     9b0:	80 ec       	ldi	r24, 0xC0	; 192
     9b2:	91 e0       	ldi	r25, 0x01	; 1
     9b4:	8f 93       	push	r24
     9b6:	1f 92       	push	r1
     9b8:	8e e1       	ldi	r24, 0x1E	; 30
     9ba:	8f 93       	push	r24
     9bc:	ce 01       	movw	r24, r28
     9be:	8e 5b       	subi	r24, 0xBE	; 190
     9c0:	9f 4f       	sbci	r25, 0xFF	; 255
     9c2:	29 2f       	mov	r18, r25
     9c4:	2f 93       	push	r18
     9c6:	8f 93       	push	r24
     9c8:	0e 94 e9 0a 	call	0x15d2	; 0x15d2 <snprintf>
     9cc:	8d b7       	in	r24, 0x3d	; 61
     9ce:	9e b7       	in	r25, 0x3e	; 62
     9d0:	0e 96       	adiw	r24, 0x0e	; 14
     9d2:	0f b6       	in	r0, 0x3f	; 63
     9d4:	f8 94       	cli
     9d6:	de bf       	out	0x3e, r29	; 62
     9d8:	0f be       	out	0x3f, r0	; 63
     9da:	cd bf       	out	0x3d, r28	; 61
     9dc:	80 e0       	ldi	r24, 0x00	; 0
     9de:	90 e0       	ldi	r25, 0x00	; 0
     9e0:	aa ef       	ldi	r26, 0xFA	; 250
     9e2:	b4 e4       	ldi	r27, 0x44	; 68
     9e4:	8a 8b       	std	Y+18, r24	; 0x12
     9e6:	9b 8b       	std	Y+19, r25	; 0x13
     9e8:	ac 8b       	std	Y+20, r26	; 0x14
     9ea:	bd 8b       	std	Y+21, r27	; 0x15

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     9ec:	20 e0       	ldi	r18, 0x00	; 0
     9ee:	30 e0       	ldi	r19, 0x00	; 0
     9f0:	4a e7       	ldi	r20, 0x7A	; 122
     9f2:	53 e4       	ldi	r21, 0x43	; 67
     9f4:	6a 89       	ldd	r22, Y+18	; 0x12
     9f6:	7b 89       	ldd	r23, Y+19	; 0x13
     9f8:	8c 89       	ldd	r24, Y+20	; 0x14
     9fa:	9d 89       	ldd	r25, Y+21	; 0x15
     9fc:	0e 94 5a 0a 	call	0x14b4	; 0x14b4 <__mulsf3>
     a00:	dc 01       	movw	r26, r24
     a02:	cb 01       	movw	r24, r22
     a04:	88 af       	std	Y+56, r24	; 0x38
     a06:	99 af       	std	Y+57, r25	; 0x39
     a08:	aa af       	std	Y+58, r26	; 0x3a
     a0a:	bb af       	std	Y+59, r27	; 0x3b
	if (__tmp < 1.0)
     a0c:	20 e0       	ldi	r18, 0x00	; 0
     a0e:	30 e0       	ldi	r19, 0x00	; 0
     a10:	40 e8       	ldi	r20, 0x80	; 128
     a12:	5f e3       	ldi	r21, 0x3F	; 63
     a14:	68 ad       	ldd	r22, Y+56	; 0x38
     a16:	79 ad       	ldd	r23, Y+57	; 0x39
     a18:	8a ad       	ldd	r24, Y+58	; 0x3a
     a1a:	9b ad       	ldd	r25, Y+59	; 0x3b
     a1c:	0e 94 fd 08 	call	0x11fa	; 0x11fa <__cmpsf2>
     a20:	88 23       	and	r24, r24
     a22:	2c f4       	brge	.+10     	; 0xa2e <main+0x60a>
		__ticks = 1;
     a24:	81 e0       	ldi	r24, 0x01	; 1
     a26:	90 e0       	ldi	r25, 0x00	; 0
     a28:	9d af       	std	Y+61, r25	; 0x3d
     a2a:	8c af       	std	Y+60, r24	; 0x3c
     a2c:	3f c0       	rjmp	.+126    	; 0xaac <main+0x688>
	else if (__tmp > 65535)
     a2e:	20 e0       	ldi	r18, 0x00	; 0
     a30:	3f ef       	ldi	r19, 0xFF	; 255
     a32:	4f e7       	ldi	r20, 0x7F	; 127
     a34:	57 e4       	ldi	r21, 0x47	; 71
     a36:	68 ad       	ldd	r22, Y+56	; 0x38
     a38:	79 ad       	ldd	r23, Y+57	; 0x39
     a3a:	8a ad       	ldd	r24, Y+58	; 0x3a
     a3c:	9b ad       	ldd	r25, Y+59	; 0x3b
     a3e:	0e 94 55 0a 	call	0x14aa	; 0x14aa <__gesf2>
     a42:	18 16       	cp	r1, r24
     a44:	4c f5       	brge	.+82     	; 0xa98 <main+0x674>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a46:	20 e0       	ldi	r18, 0x00	; 0
     a48:	30 e0       	ldi	r19, 0x00	; 0
     a4a:	40 e2       	ldi	r20, 0x20	; 32
     a4c:	51 e4       	ldi	r21, 0x41	; 65
     a4e:	6a 89       	ldd	r22, Y+18	; 0x12
     a50:	7b 89       	ldd	r23, Y+19	; 0x13
     a52:	8c 89       	ldd	r24, Y+20	; 0x14
     a54:	9d 89       	ldd	r25, Y+21	; 0x15
     a56:	0e 94 5a 0a 	call	0x14b4	; 0x14b4 <__mulsf3>
     a5a:	dc 01       	movw	r26, r24
     a5c:	cb 01       	movw	r24, r22
     a5e:	bc 01       	movw	r22, r24
     a60:	cd 01       	movw	r24, r26
     a62:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__fixunssfsi>
     a66:	dc 01       	movw	r26, r24
     a68:	cb 01       	movw	r24, r22
     a6a:	9d af       	std	Y+61, r25	; 0x3d
     a6c:	8c af       	std	Y+60, r24	; 0x3c
     a6e:	0f c0       	rjmp	.+30     	; 0xa8e <main+0x66a>
     a70:	89 e1       	ldi	r24, 0x19	; 25
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	9f af       	std	Y+63, r25	; 0x3f
     a76:	8e af       	std	Y+62, r24	; 0x3e
     a78:	8e ad       	ldd	r24, Y+62	; 0x3e
     a7a:	9f ad       	ldd	r25, Y+63	; 0x3f
     a7c:	01 97       	sbiw	r24, 0x01	; 1
     a7e:	f1 f7       	brne	.-4      	; 0xa7c <main+0x658>
     a80:	9f af       	std	Y+63, r25	; 0x3f
     a82:	8e af       	std	Y+62, r24	; 0x3e
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a84:	8c ad       	ldd	r24, Y+60	; 0x3c
     a86:	9d ad       	ldd	r25, Y+61	; 0x3d
     a88:	01 97       	sbiw	r24, 0x01	; 1
     a8a:	9d af       	std	Y+61, r25	; 0x3d
     a8c:	8c af       	std	Y+60, r24	; 0x3c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a8e:	8c ad       	ldd	r24, Y+60	; 0x3c
     a90:	9d ad       	ldd	r25, Y+61	; 0x3d
     a92:	89 2b       	or	r24, r25
     a94:	69 f7       	brne	.-38     	; 0xa70 <main+0x64c>
     a96:	20 c0       	rjmp	.+64     	; 0xad8 <main+0x6b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a98:	68 ad       	ldd	r22, Y+56	; 0x38
     a9a:	79 ad       	ldd	r23, Y+57	; 0x39
     a9c:	8a ad       	ldd	r24, Y+58	; 0x3a
     a9e:	9b ad       	ldd	r25, Y+59	; 0x3b
     aa0:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__fixunssfsi>
     aa4:	dc 01       	movw	r26, r24
     aa6:	cb 01       	movw	r24, r22
     aa8:	9d af       	std	Y+61, r25	; 0x3d
     aaa:	8c af       	std	Y+60, r24	; 0x3c
     aac:	ce 01       	movw	r24, r28
     aae:	80 5c       	subi	r24, 0xC0	; 192
     ab0:	9f 4f       	sbci	r25, 0xFF	; 255
     ab2:	2c ad       	ldd	r18, Y+60	; 0x3c
     ab4:	3d ad       	ldd	r19, Y+61	; 0x3d
     ab6:	fc 01       	movw	r30, r24
     ab8:	31 83       	std	Z+1, r19	; 0x01
     aba:	20 83       	st	Z, r18
     abc:	ce 01       	movw	r24, r28
     abe:	80 5c       	subi	r24, 0xC0	; 192
     ac0:	9f 4f       	sbci	r25, 0xFF	; 255
     ac2:	fc 01       	movw	r30, r24
     ac4:	80 81       	ld	r24, Z
     ac6:	91 81       	ldd	r25, Z+1	; 0x01
     ac8:	01 97       	sbiw	r24, 0x01	; 1
     aca:	f1 f7       	brne	.-4      	; 0xac8 <main+0x6a4>
     acc:	9e 01       	movw	r18, r28
     ace:	20 5c       	subi	r18, 0xC0	; 192
     ad0:	3f 4f       	sbci	r19, 0xFF	; 255
     ad2:	f9 01       	movw	r30, r18
     ad4:	91 83       	std	Z+1, r25	; 0x01
     ad6:	80 83       	st	Z, r24
				_delay_ms(2000);
				write_zahl(2,0,recieved_X/3.3,4,0,0);
     ad8:	89 81       	ldd	r24, Y+1	; 0x01
     ada:	9a 81       	ldd	r25, Y+2	; 0x02
     adc:	cc 01       	movw	r24, r24
     ade:	a0 e0       	ldi	r26, 0x00	; 0
     ae0:	b0 e0       	ldi	r27, 0x00	; 0
     ae2:	bc 01       	movw	r22, r24
     ae4:	cd 01       	movw	r24, r26
     ae6:	0e 94 a3 09 	call	0x1346	; 0x1346 <__floatunsisf>
     aea:	dc 01       	movw	r26, r24
     aec:	cb 01       	movw	r24, r22
     aee:	23 e3       	ldi	r18, 0x33	; 51
     af0:	33 e3       	ldi	r19, 0x33	; 51
     af2:	43 e5       	ldi	r20, 0x53	; 83
     af4:	50 e4       	ldi	r21, 0x40	; 64
     af6:	bc 01       	movw	r22, r24
     af8:	cd 01       	movw	r24, r26
     afa:	0e 94 02 09 	call	0x1204	; 0x1204 <__divsf3>
     afe:	dc 01       	movw	r26, r24
     b00:	cb 01       	movw	r24, r22
     b02:	bc 01       	movw	r22, r24
     b04:	cd 01       	movw	r24, r26
     b06:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__fixunssfsi>
     b0a:	dc 01       	movw	r26, r24
     b0c:	cb 01       	movw	r24, r22
     b0e:	c1 2c       	mov	r12, r1
     b10:	e1 2c       	mov	r14, r1
     b12:	04 e0       	ldi	r16, 0x04	; 4
     b14:	9c 01       	movw	r18, r24
     b16:	ad 01       	movw	r20, r26
     b18:	60 e0       	ldi	r22, 0x00	; 0
     b1a:	82 e0       	ldi	r24, 0x02	; 2
     b1c:	0e 94 3f 07 	call	0xe7e	; 0xe7e <write_zahl>
				write_zahl(3,0,recieved_Y/2.47,4,0,0);
     b20:	8b 81       	ldd	r24, Y+3	; 0x03
     b22:	9c 81       	ldd	r25, Y+4	; 0x04
     b24:	cc 01       	movw	r24, r24
     b26:	a0 e0       	ldi	r26, 0x00	; 0
     b28:	b0 e0       	ldi	r27, 0x00	; 0
     b2a:	bc 01       	movw	r22, r24
     b2c:	cd 01       	movw	r24, r26
     b2e:	0e 94 a3 09 	call	0x1346	; 0x1346 <__floatunsisf>
     b32:	dc 01       	movw	r26, r24
     b34:	cb 01       	movw	r24, r22
     b36:	2b e7       	ldi	r18, 0x7B	; 123
     b38:	34 e1       	ldi	r19, 0x14	; 20
     b3a:	4e e1       	ldi	r20, 0x1E	; 30
     b3c:	50 e4       	ldi	r21, 0x40	; 64
     b3e:	bc 01       	movw	r22, r24
     b40:	cd 01       	movw	r24, r26
     b42:	0e 94 02 09 	call	0x1204	; 0x1204 <__divsf3>
     b46:	dc 01       	movw	r26, r24
     b48:	cb 01       	movw	r24, r22
     b4a:	bc 01       	movw	r22, r24
     b4c:	cd 01       	movw	r24, r26
     b4e:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__fixunssfsi>
     b52:	dc 01       	movw	r26, r24
     b54:	cb 01       	movw	r24, r22
     b56:	c1 2c       	mov	r12, r1
     b58:	e1 2c       	mov	r14, r1
     b5a:	04 e0       	ldi	r16, 0x04	; 4
     b5c:	9c 01       	movw	r18, r24
     b5e:	ad 01       	movw	r20, r26
     b60:	60 e0       	ldi	r22, 0x00	; 0
     b62:	83 e0       	ldi	r24, 0x03	; 3
     b64:	0e 94 3f 07 	call	0xe7e	; 0xe7e <write_zahl>
				send_to_uArm(buffer);
     b68:	ce 01       	movw	r24, r28
     b6a:	8e 5b       	subi	r24, 0xBE	; 190
     b6c:	9f 4f       	sbci	r25, 0xFF	; 255
     b6e:	0e 94 4b 01 	call	0x296	; 0x296 <send_to_uArm>
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     b72:	04 c0       	rjmp	.+8      	; 0xb7c <main+0x758>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
     b74:	80 e0       	ldi	r24, 0x00	; 0
     b76:	91 e0       	ldi	r25, 0x01	; 1
     b78:	0e 94 25 01 	call	0x24a	; 0x24a <to_uARM>
				snprintf(buffer,30,"G0 X%d Y%d Z150 F1000\n",recieved_X/3.3,recieved_Y/2.47);
				_delay_ms(2000);
				write_zahl(2,0,recieved_X/3.3,4,0,0);
				write_zahl(3,0,recieved_Y/2.47,4,0,0);
				send_to_uArm(buffer);
				while(uart_string1[4] == 0x31) //ASCII '1' --> moving
     b7c:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <uart_string1+0x4>
     b80:	81 33       	cpi	r24, 0x31	; 49
     b82:	c1 f3       	breq	.-16     	; 0xb74 <main+0x750>
				{
					to_uARM("M2200\n"); //uARM in moving? 1 Yes / 0 N0
				}
				send_Byte_0('1');
     b84:	81 e3       	ldi	r24, 0x31	; 49
     b86:	0e 94 ef 00 	call	0x1de	; 0x1de <send_Byte_0>
			}
		
		
		alt=neu;
     b8a:	88 85       	ldd	r24, Y+8	; 0x08
     b8c:	8f 83       	std	Y+7, r24	; 0x07
	} //end while(1)
     b8e:	70 cc       	rjmp	.-1824   	; 0x470 <main+0x4c>

00000b90 <init_Timer0_1ms_int>:
     b90:	cf 93       	push	r28
     b92:	df 93       	push	r29
     b94:	cd b7       	in	r28, 0x3d	; 61
     b96:	de b7       	in	r29, 0x3e	; 62
     b98:	84 e4       	ldi	r24, 0x44	; 68
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	24 e4       	ldi	r18, 0x44	; 68
     b9e:	30 e0       	ldi	r19, 0x00	; 0
     ba0:	f9 01       	movw	r30, r18
     ba2:	20 81       	ld	r18, Z
     ba4:	22 60       	ori	r18, 0x02	; 2
     ba6:	fc 01       	movw	r30, r24
     ba8:	20 83       	st	Z, r18
     baa:	85 e4       	ldi	r24, 0x45	; 69
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	25 e4       	ldi	r18, 0x45	; 69
     bb0:	30 e0       	ldi	r19, 0x00	; 0
     bb2:	f9 01       	movw	r30, r18
     bb4:	20 81       	ld	r18, Z
     bb6:	23 60       	ori	r18, 0x03	; 3
     bb8:	fc 01       	movw	r30, r24
     bba:	20 83       	st	Z, r18
     bbc:	87 e4       	ldi	r24, 0x47	; 71
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	29 ef       	ldi	r18, 0xF9	; 249
     bc2:	fc 01       	movw	r30, r24
     bc4:	20 83       	st	Z, r18
     bc6:	8e e6       	ldi	r24, 0x6E	; 110
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	2e e6       	ldi	r18, 0x6E	; 110
     bcc:	30 e0       	ldi	r19, 0x00	; 0
     bce:	f9 01       	movw	r30, r18
     bd0:	20 81       	ld	r18, Z
     bd2:	22 60       	ori	r18, 0x02	; 2
     bd4:	fc 01       	movw	r30, r24
     bd6:	20 83       	st	Z, r18
     bd8:	00 00       	nop
     bda:	df 91       	pop	r29
     bdc:	cf 91       	pop	r28
     bde:	08 95       	ret

00000be0 <__vector_16>:
     be0:	1f 92       	push	r1
     be2:	0f 92       	push	r0
     be4:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     be8:	0f 92       	push	r0
     bea:	11 24       	eor	r1, r1
     bec:	2f 93       	push	r18
     bee:	3f 93       	push	r19
     bf0:	4f 93       	push	r20
     bf2:	5f 93       	push	r21
     bf4:	6f 93       	push	r22
     bf6:	7f 93       	push	r23
     bf8:	8f 93       	push	r24
     bfa:	9f 93       	push	r25
     bfc:	af 93       	push	r26
     bfe:	bf 93       	push	r27
     c00:	ef 93       	push	r30
     c02:	ff 93       	push	r31
     c04:	cf 93       	push	r28
     c06:	df 93       	push	r29
     c08:	cd b7       	in	r28, 0x3d	; 61
     c0a:	de b7       	in	r29, 0x3e	; 62
     c0c:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <tick_1ms>
     c10:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <tick_1ms+0x1>
     c14:	a0 91 15 02 	lds	r26, 0x0215	; 0x800215 <tick_1ms+0x2>
     c18:	b0 91 16 02 	lds	r27, 0x0216	; 0x800216 <tick_1ms+0x3>
     c1c:	01 96       	adiw	r24, 0x01	; 1
     c1e:	a1 1d       	adc	r26, r1
     c20:	b1 1d       	adc	r27, r1
     c22:	80 93 13 02 	sts	0x0213, r24	; 0x800213 <tick_1ms>
     c26:	90 93 14 02 	sts	0x0214, r25	; 0x800214 <tick_1ms+0x1>
     c2a:	a0 93 15 02 	sts	0x0215, r26	; 0x800215 <tick_1ms+0x2>
     c2e:	b0 93 16 02 	sts	0x0216, r27	; 0x800216 <tick_1ms+0x3>
     c32:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <tick_1ms>
     c36:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <tick_1ms+0x1>
     c3a:	a0 91 15 02 	lds	r26, 0x0215	; 0x800215 <tick_1ms+0x2>
     c3e:	b0 91 16 02 	lds	r27, 0x0216	; 0x800216 <tick_1ms+0x3>
     c42:	28 ee       	ldi	r18, 0xE8	; 232
     c44:	33 e0       	ldi	r19, 0x03	; 3
     c46:	40 e0       	ldi	r20, 0x00	; 0
     c48:	50 e0       	ldi	r21, 0x00	; 0
     c4a:	bc 01       	movw	r22, r24
     c4c:	cd 01       	movw	r24, r26
     c4e:	0e 94 c7 0a 	call	0x158e	; 0x158e <__udivmodsi4>
     c52:	dc 01       	movw	r26, r24
     c54:	cb 01       	movw	r24, r22
     c56:	89 2b       	or	r24, r25
     c58:	8a 2b       	or	r24, r26
     c5a:	8b 2b       	or	r24, r27
     c5c:	99 f4       	brne	.+38     	; 0xc84 <__vector_16+0xa4>
     c5e:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <tick_1s>
     c62:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <tick_1s+0x1>
     c66:	a0 91 19 02 	lds	r26, 0x0219	; 0x800219 <tick_1s+0x2>
     c6a:	b0 91 1a 02 	lds	r27, 0x021A	; 0x80021a <tick_1s+0x3>
     c6e:	01 96       	adiw	r24, 0x01	; 1
     c70:	a1 1d       	adc	r26, r1
     c72:	b1 1d       	adc	r27, r1
     c74:	80 93 17 02 	sts	0x0217, r24	; 0x800217 <tick_1s>
     c78:	90 93 18 02 	sts	0x0218, r25	; 0x800218 <tick_1s+0x1>
     c7c:	a0 93 19 02 	sts	0x0219, r26	; 0x800219 <tick_1s+0x2>
     c80:	b0 93 1a 02 	sts	0x021A, r27	; 0x80021a <tick_1s+0x3>
     c84:	80 91 0f 02 	lds	r24, 0x020F	; 0x80020f <tick_1ms_cnt>
     c88:	90 91 10 02 	lds	r25, 0x0210	; 0x800210 <tick_1ms_cnt+0x1>
     c8c:	a0 91 11 02 	lds	r26, 0x0211	; 0x800211 <tick_1ms_cnt+0x2>
     c90:	b0 91 12 02 	lds	r27, 0x0212	; 0x800212 <tick_1ms_cnt+0x3>
     c94:	89 2b       	or	r24, r25
     c96:	8a 2b       	or	r24, r26
     c98:	8b 2b       	or	r24, r27
     c9a:	99 f0       	breq	.+38     	; 0xcc2 <__vector_16+0xe2>
     c9c:	80 91 0f 02 	lds	r24, 0x020F	; 0x80020f <tick_1ms_cnt>
     ca0:	90 91 10 02 	lds	r25, 0x0210	; 0x800210 <tick_1ms_cnt+0x1>
     ca4:	a0 91 11 02 	lds	r26, 0x0211	; 0x800211 <tick_1ms_cnt+0x2>
     ca8:	b0 91 12 02 	lds	r27, 0x0212	; 0x800212 <tick_1ms_cnt+0x3>
     cac:	01 97       	sbiw	r24, 0x01	; 1
     cae:	a1 09       	sbc	r26, r1
     cb0:	b1 09       	sbc	r27, r1
     cb2:	80 93 0f 02 	sts	0x020F, r24	; 0x80020f <tick_1ms_cnt>
     cb6:	90 93 10 02 	sts	0x0210, r25	; 0x800210 <tick_1ms_cnt+0x1>
     cba:	a0 93 11 02 	sts	0x0211, r26	; 0x800211 <tick_1ms_cnt+0x2>
     cbe:	b0 93 12 02 	sts	0x0212, r27	; 0x800212 <tick_1ms_cnt+0x3>
     cc2:	00 00       	nop
     cc4:	df 91       	pop	r29
     cc6:	cf 91       	pop	r28
     cc8:	ff 91       	pop	r31
     cca:	ef 91       	pop	r30
     ccc:	bf 91       	pop	r27
     cce:	af 91       	pop	r26
     cd0:	9f 91       	pop	r25
     cd2:	8f 91       	pop	r24
     cd4:	7f 91       	pop	r23
     cd6:	6f 91       	pop	r22
     cd8:	5f 91       	pop	r21
     cda:	4f 91       	pop	r20
     cdc:	3f 91       	pop	r19
     cde:	2f 91       	pop	r18
     ce0:	0f 90       	pop	r0
     ce2:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     ce6:	0f 90       	pop	r0
     ce8:	1f 90       	pop	r1
     cea:	18 95       	reti

00000cec <wait_1ms>:
     cec:	cf 93       	push	r28
     cee:	df 93       	push	r29
     cf0:	00 d0       	rcall	.+0      	; 0xcf2 <wait_1ms+0x6>
     cf2:	00 d0       	rcall	.+0      	; 0xcf4 <wait_1ms+0x8>
     cf4:	cd b7       	in	r28, 0x3d	; 61
     cf6:	de b7       	in	r29, 0x3e	; 62
     cf8:	69 83       	std	Y+1, r22	; 0x01
     cfa:	7a 83       	std	Y+2, r23	; 0x02
     cfc:	8b 83       	std	Y+3, r24	; 0x03
     cfe:	9c 83       	std	Y+4, r25	; 0x04
     d00:	89 81       	ldd	r24, Y+1	; 0x01
     d02:	9a 81       	ldd	r25, Y+2	; 0x02
     d04:	ab 81       	ldd	r26, Y+3	; 0x03
     d06:	bc 81       	ldd	r27, Y+4	; 0x04
     d08:	89 2b       	or	r24, r25
     d0a:	8a 2b       	or	r24, r26
     d0c:	8b 2b       	or	r24, r27
     d0e:	69 f0       	breq	.+26     	; 0xd2a <wait_1ms+0x3e>
     d10:	89 81       	ldd	r24, Y+1	; 0x01
     d12:	9a 81       	ldd	r25, Y+2	; 0x02
     d14:	ab 81       	ldd	r26, Y+3	; 0x03
     d16:	bc 81       	ldd	r27, Y+4	; 0x04
     d18:	80 93 0f 02 	sts	0x020F, r24	; 0x80020f <tick_1ms_cnt>
     d1c:	90 93 10 02 	sts	0x0210, r25	; 0x800210 <tick_1ms_cnt+0x1>
     d20:	a0 93 11 02 	sts	0x0211, r26	; 0x800211 <tick_1ms_cnt+0x2>
     d24:	b0 93 12 02 	sts	0x0212, r27	; 0x800212 <tick_1ms_cnt+0x3>
     d28:	0c c0       	rjmp	.+24     	; 0xd42 <wait_1ms+0x56>
     d2a:	81 e0       	ldi	r24, 0x01	; 1
     d2c:	90 e0       	ldi	r25, 0x00	; 0
     d2e:	a0 e0       	ldi	r26, 0x00	; 0
     d30:	b0 e0       	ldi	r27, 0x00	; 0
     d32:	80 93 0f 02 	sts	0x020F, r24	; 0x80020f <tick_1ms_cnt>
     d36:	90 93 10 02 	sts	0x0210, r25	; 0x800210 <tick_1ms_cnt+0x1>
     d3a:	a0 93 11 02 	sts	0x0211, r26	; 0x800211 <tick_1ms_cnt+0x2>
     d3e:	b0 93 12 02 	sts	0x0212, r27	; 0x800212 <tick_1ms_cnt+0x3>
     d42:	00 00       	nop
     d44:	80 91 0f 02 	lds	r24, 0x020F	; 0x80020f <tick_1ms_cnt>
     d48:	90 91 10 02 	lds	r25, 0x0210	; 0x800210 <tick_1ms_cnt+0x1>
     d4c:	a0 91 11 02 	lds	r26, 0x0211	; 0x800211 <tick_1ms_cnt+0x2>
     d50:	b0 91 12 02 	lds	r27, 0x0212	; 0x800212 <tick_1ms_cnt+0x3>
     d54:	89 2b       	or	r24, r25
     d56:	8a 2b       	or	r24, r26
     d58:	8b 2b       	or	r24, r27
     d5a:	a1 f7       	brne	.-24     	; 0xd44 <wait_1ms+0x58>
     d5c:	00 00       	nop
     d5e:	0f 90       	pop	r0
     d60:	0f 90       	pop	r0
     d62:	0f 90       	pop	r0
     d64:	0f 90       	pop	r0
     d66:	df 91       	pop	r29
     d68:	cf 91       	pop	r28
     d6a:	08 95       	ret

00000d6c <delay_nop>:
     d6c:	cf 93       	push	r28
     d6e:	df 93       	push	r29
     d70:	00 d0       	rcall	.+0      	; 0xd72 <delay_nop+0x6>
     d72:	cd b7       	in	r28, 0x3d	; 61
     d74:	de b7       	in	r29, 0x3e	; 62
     d76:	8a 83       	std	Y+2, r24	; 0x02
     d78:	19 82       	std	Y+1, r1	; 0x01
     d7a:	04 c0       	rjmp	.+8      	; 0xd84 <delay_nop+0x18>
     d7c:	00 00       	nop
     d7e:	89 81       	ldd	r24, Y+1	; 0x01
     d80:	8f 5f       	subi	r24, 0xFF	; 255
     d82:	89 83       	std	Y+1, r24	; 0x01
     d84:	99 81       	ldd	r25, Y+1	; 0x01
     d86:	8a 81       	ldd	r24, Y+2	; 0x02
     d88:	98 17       	cp	r25, r24
     d8a:	c0 f3       	brcs	.-16     	; 0xd7c <delay_nop+0x10>
     d8c:	00 00       	nop
     d8e:	0f 90       	pop	r0
     d90:	0f 90       	pop	r0
     d92:	df 91       	pop	r29
     d94:	cf 91       	pop	r28
     d96:	08 95       	ret

00000d98 <write_lcd_f>:
     d98:	91 e0       	ldi	r25, 0x01	; 1
     d9a:	90 93 1b 02 	sts	0x021B, r25	; 0x80021b <write_RGB_LCD_activ>
     d9e:	40 9a       	sbi	0x08, 0	; 8
     da0:	41 98       	cbi	0x08, 1	; 8
     da2:	41 98       	cbi	0x08, 1	; 8
     da4:	41 9a       	sbi	0x08, 1	; 8
     da6:	41 9a       	sbi	0x08, 1	; 8
     da8:	41 98       	cbi	0x08, 1	; 8
     daa:	41 98       	cbi	0x08, 1	; 8
     dac:	41 9a       	sbi	0x08, 1	; 8
     dae:	41 9a       	sbi	0x08, 1	; 8
     db0:	41 98       	cbi	0x08, 1	; 8
     db2:	41 98       	cbi	0x08, 1	; 8
     db4:	41 9a       	sbi	0x08, 1	; 8
     db6:	41 9a       	sbi	0x08, 1	; 8
     db8:	41 98       	cbi	0x08, 1	; 8
     dba:	41 98       	cbi	0x08, 1	; 8
     dbc:	41 9a       	sbi	0x08, 1	; 8
     dbe:	41 9a       	sbi	0x08, 1	; 8
     dc0:	41 98       	cbi	0x08, 1	; 8
     dc2:	41 98       	cbi	0x08, 1	; 8
     dc4:	41 9a       	sbi	0x08, 1	; 8
     dc6:	40 98       	cbi	0x08, 0	; 8
     dc8:	41 98       	cbi	0x08, 1	; 8
     dca:	41 98       	cbi	0x08, 1	; 8
     dcc:	41 9a       	sbi	0x08, 1	; 8
     dce:	83 34       	cpi	r24, 0x43	; 67
     dd0:	a9 f1       	breq	.+106    	; 0xe3c <write_lcd_f+0xa4>
     dd2:	40 9a       	sbi	0x08, 0	; 8
     dd4:	41 98       	cbi	0x08, 1	; 8
     dd6:	41 98       	cbi	0x08, 1	; 8
     dd8:	41 9a       	sbi	0x08, 1	; 8
     dda:	40 98       	cbi	0x08, 0	; 8
     ddc:	41 98       	cbi	0x08, 1	; 8
     dde:	41 98       	cbi	0x08, 1	; 8
     de0:	41 9a       	sbi	0x08, 1	; 8
     de2:	84 e0       	ldi	r24, 0x04	; 4
     de4:	41 98       	cbi	0x08, 1	; 8
     de6:	60 ff       	sbrs	r22, 0
     de8:	27 c0       	rjmp	.+78     	; 0xe38 <write_lcd_f+0xa0>
     dea:	40 9a       	sbi	0x08, 0	; 8
     dec:	66 95       	lsr	r22
     dee:	41 98       	cbi	0x08, 1	; 8
     df0:	41 9a       	sbi	0x08, 1	; 8
     df2:	81 50       	subi	r24, 0x01	; 1
     df4:	b9 f7       	brne	.-18     	; 0xde4 <write_lcd_f+0x4c>
     df6:	40 98       	cbi	0x08, 0	; 8
     df8:	84 e0       	ldi	r24, 0x04	; 4
     dfa:	41 98       	cbi	0x08, 1	; 8
     dfc:	41 98       	cbi	0x08, 1	; 8
     dfe:	41 9a       	sbi	0x08, 1	; 8
     e00:	81 50       	subi	r24, 0x01	; 1
     e02:	d9 f7       	brne	.-10     	; 0xdfa <write_lcd_f+0x62>
     e04:	84 e0       	ldi	r24, 0x04	; 4
     e06:	41 98       	cbi	0x08, 1	; 8
     e08:	60 ff       	sbrs	r22, 0
     e0a:	14 c0       	rjmp	.+40     	; 0xe34 <write_lcd_f+0x9c>
     e0c:	40 9a       	sbi	0x08, 0	; 8
     e0e:	66 95       	lsr	r22
     e10:	41 98       	cbi	0x08, 1	; 8
     e12:	41 9a       	sbi	0x08, 1	; 8
     e14:	81 50       	subi	r24, 0x01	; 1
     e16:	b9 f7       	brne	.-18     	; 0xe06 <write_lcd_f+0x6e>
     e18:	40 98       	cbi	0x08, 0	; 8
     e1a:	84 e0       	ldi	r24, 0x04	; 4
     e1c:	41 98       	cbi	0x08, 1	; 8
     e1e:	41 98       	cbi	0x08, 1	; 8
     e20:	41 9a       	sbi	0x08, 1	; 8
     e22:	81 50       	subi	r24, 0x01	; 1
     e24:	d9 f7       	brne	.-10     	; 0xe1c <write_lcd_f+0x84>
     e26:	84 e1       	ldi	r24, 0x14	; 20
     e28:	40 9a       	sbi	0x08, 0	; 8
     e2a:	81 50       	subi	r24, 0x01	; 1
     e2c:	e9 f7       	brne	.-6      	; 0xe28 <write_lcd_f+0x90>
     e2e:	10 92 1b 02 	sts	0x021B, r1	; 0x80021b <write_RGB_LCD_activ>
     e32:	08 95       	ret
     e34:	40 98       	cbi	0x08, 0	; 8
     e36:	eb cf       	rjmp	.-42     	; 0xe0e <write_lcd_f+0x76>
     e38:	40 98       	cbi	0x08, 0	; 8
     e3a:	d8 cf       	rjmp	.-80     	; 0xdec <write_lcd_f+0x54>
     e3c:	40 98       	cbi	0x08, 0	; 8
     e3e:	ca cf       	rjmp	.-108    	; 0xdd4 <write_lcd_f+0x3c>

00000e40 <write_text_ram>:
     e40:	0f 93       	push	r16
     e42:	1f 93       	push	r17
     e44:	df 93       	push	r29
     e46:	8a 01       	movw	r16, r20
     e48:	90 e2       	ldi	r25, 0x20	; 32
     e4a:	89 9f       	mul	r24, r25
     e4c:	60 0d       	add	r22, r0
     e4e:	11 24       	eor	r1, r1
     e50:	60 68       	ori	r22, 0x80	; 128
     e52:	83 e4       	ldi	r24, 0x43	; 67
     e54:	0e 94 cc 06 	call	0xd98	; 0xd98 <write_lcd_f>
     e58:	f8 01       	movw	r30, r16
     e5a:	60 81       	ld	r22, Z
     e5c:	66 23       	and	r22, r22
     e5e:	59 f0       	breq	.+22     	; 0xe76 <write_text_ram+0x36>
     e60:	d0 e0       	ldi	r29, 0x00	; 0
     e62:	df 5f       	subi	r29, 0xFF	; 255
     e64:	84 e4       	ldi	r24, 0x44	; 68
     e66:	0e 94 cc 06 	call	0xd98	; 0xd98 <write_lcd_f>
     e6a:	f8 01       	movw	r30, r16
     e6c:	ed 0f       	add	r30, r29
     e6e:	f1 1d       	adc	r31, r1
     e70:	60 81       	ld	r22, Z
     e72:	61 11       	cpse	r22, r1
     e74:	f6 cf       	rjmp	.-20     	; 0xe62 <write_text_ram+0x22>
     e76:	df 91       	pop	r29
     e78:	1f 91       	pop	r17
     e7a:	0f 91       	pop	r16
     e7c:	08 95       	ret

00000e7e <write_zahl>:
     e7e:	2f 92       	push	r2
     e80:	3f 92       	push	r3
     e82:	4f 92       	push	r4
     e84:	5f 92       	push	r5
     e86:	6f 92       	push	r6
     e88:	7f 92       	push	r7
     e8a:	8f 92       	push	r8
     e8c:	9f 92       	push	r9
     e8e:	af 92       	push	r10
     e90:	bf 92       	push	r11
     e92:	cf 92       	push	r12
     e94:	df 92       	push	r13
     e96:	ef 92       	push	r14
     e98:	ff 92       	push	r15
     e9a:	0f 93       	push	r16
     e9c:	1f 93       	push	r17
     e9e:	cf 93       	push	r28
     ea0:	df 93       	push	r29
     ea2:	cd b7       	in	r28, 0x3d	; 61
     ea4:	de b7       	in	r29, 0x3e	; 62
     ea6:	63 97       	sbiw	r28, 0x13	; 19
     ea8:	0f b6       	in	r0, 0x3f	; 63
     eaa:	f8 94       	cli
     eac:	de bf       	out	0x3e, r29	; 62
     eae:	0f be       	out	0x3f, r0	; 63
     eb0:	cd bf       	out	0x3d, r28	; 61
     eb2:	8a 8b       	std	Y+18, r24	; 0x12
     eb4:	6b 8b       	std	Y+19, r22	; 0x13
     eb6:	29 01       	movw	r4, r18
     eb8:	3a 01       	movw	r6, r20
     eba:	c8 8a       	std	Y+16, r12	; 0x10
     ebc:	04 36       	cpi	r16, 0x64	; 100
     ebe:	08 f4       	brcc	.+2      	; 0xec2 <write_zahl+0x44>
     ec0:	bd c0       	rjmp	.+378    	; 0x103c <write_zahl+0x1be>
     ec2:	04 56       	subi	r16, 0x64	; 100
     ec4:	19 8a       	std	Y+17, r1	; 0x11
     ec6:	0b 30       	cpi	r16, 0x0B	; 11
     ec8:	08 f0       	brcs	.+2      	; 0xecc <write_zahl+0x4e>
     eca:	0a e0       	ldi	r16, 0x0A	; 10
     ecc:	ef 86       	std	Y+15, r14	; 0x0f
     ece:	88 89       	ldd	r24, Y+16	; 0x10
     ed0:	8e 15       	cp	r24, r14
     ed2:	08 f4       	brcc	.+2      	; 0xed6 <write_zahl+0x58>
     ed4:	8f 87       	std	Y+15, r24	; 0x0f
     ed6:	20 2e       	mov	r2, r16
     ed8:	31 2c       	mov	r3, r1
     eda:	c1 01       	movw	r24, r2
     edc:	ef 85       	ldd	r30, Y+15	; 0x0f
     ede:	8e 0f       	add	r24, r30
     ee0:	91 1d       	adc	r25, r1
     ee2:	0b 97       	sbiw	r24, 0x0b	; 11
     ee4:	1c f0       	brlt	.+6      	; 0xeec <write_zahl+0x6e>
     ee6:	8a e0       	ldi	r24, 0x0A	; 10
     ee8:	80 1b       	sub	r24, r16
     eea:	8f 87       	std	Y+15, r24	; 0x0f
     eec:	c3 01       	movw	r24, r6
     eee:	b2 01       	movw	r22, r4
     ef0:	2a e0       	ldi	r18, 0x0A	; 10
     ef2:	30 e0       	ldi	r19, 0x00	; 0
     ef4:	40 e0       	ldi	r20, 0x00	; 0
     ef6:	50 e0       	ldi	r21, 0x00	; 0
     ef8:	0e 94 c7 0a 	call	0x158e	; 0x158e <__udivmodsi4>
     efc:	60 5d       	subi	r22, 0xD0	; 208
     efe:	6c 87       	std	Y+12, r22	; 0x0c
     f00:	1a e0       	ldi	r17, 0x0A	; 10
     f02:	3a e0       	ldi	r19, 0x0A	; 10
     f04:	c3 2e       	mov	r12, r19
     f06:	d1 2c       	mov	r13, r1
     f08:	e1 2c       	mov	r14, r1
     f0a:	f1 2c       	mov	r15, r1
     f0c:	4a e0       	ldi	r20, 0x0A	; 10
     f0e:	84 2e       	mov	r8, r20
     f10:	91 2c       	mov	r9, r1
     f12:	a1 2c       	mov	r10, r1
     f14:	b1 2c       	mov	r11, r1
     f16:	81 e0       	ldi	r24, 0x01	; 1
     f18:	90 e0       	ldi	r25, 0x00	; 0
     f1a:	8c 0f       	add	r24, r28
     f1c:	9d 1f       	adc	r25, r29
     f1e:	81 0f       	add	r24, r17
     f20:	91 1d       	adc	r25, r1
     f22:	9e 87       	std	Y+14, r25	; 0x0e
     f24:	8d 87       	std	Y+13, r24	; 0x0d
     f26:	c3 01       	movw	r24, r6
     f28:	b2 01       	movw	r22, r4
     f2a:	a7 01       	movw	r20, r14
     f2c:	96 01       	movw	r18, r12
     f2e:	0e 94 c7 0a 	call	0x158e	; 0x158e <__udivmodsi4>
     f32:	ca 01       	movw	r24, r20
     f34:	b9 01       	movw	r22, r18
     f36:	a5 01       	movw	r20, r10
     f38:	94 01       	movw	r18, r8
     f3a:	0e 94 c7 0a 	call	0x158e	; 0x158e <__udivmodsi4>
     f3e:	60 5d       	subi	r22, 0xD0	; 208
     f40:	ed 85       	ldd	r30, Y+13	; 0x0d
     f42:	fe 85       	ldd	r31, Y+14	; 0x0e
     f44:	60 83       	st	Z, r22
     f46:	cc 0c       	add	r12, r12
     f48:	dd 1c       	adc	r13, r13
     f4a:	ee 1c       	adc	r14, r14
     f4c:	ff 1c       	adc	r15, r15
     f4e:	d7 01       	movw	r26, r14
     f50:	c6 01       	movw	r24, r12
     f52:	88 0f       	add	r24, r24
     f54:	99 1f       	adc	r25, r25
     f56:	aa 1f       	adc	r26, r26
     f58:	bb 1f       	adc	r27, r27
     f5a:	88 0f       	add	r24, r24
     f5c:	99 1f       	adc	r25, r25
     f5e:	aa 1f       	adc	r26, r26
     f60:	bb 1f       	adc	r27, r27
     f62:	c8 0e       	add	r12, r24
     f64:	d9 1e       	adc	r13, r25
     f66:	ea 1e       	adc	r14, r26
     f68:	fb 1e       	adc	r15, r27
     f6a:	11 50       	subi	r17, 0x01	; 1
     f6c:	a0 f6       	brcc	.-88     	; 0xf16 <write_zahl+0x98>
     f6e:	2c e0       	ldi	r18, 0x0C	; 12
     f70:	f8 89       	ldd	r31, Y+16	; 0x10
     f72:	2f 1b       	sub	r18, r31
     f74:	82 2f       	mov	r24, r18
     f76:	80 1b       	sub	r24, r16
     f78:	00 23       	and	r16, r16
     f7a:	09 f4       	brne	.+2      	; 0xf7e <write_zahl+0x100>
     f7c:	85 c0       	rjmp	.+266    	; 0x1088 <write_zahl+0x20a>
     f7e:	fe 01       	movw	r30, r28
     f80:	31 96       	adiw	r30, 0x01	; 1
     f82:	a1 e0       	ldi	r26, 0x01	; 1
     f84:	b0 e0       	ldi	r27, 0x00	; 0
     f86:	ac 0f       	add	r26, r28
     f88:	bd 1f       	adc	r27, r29
     f8a:	a8 0f       	add	r26, r24
     f8c:	b1 1d       	adc	r27, r1
     f8e:	9c 91       	ld	r25, X
     f90:	91 93       	st	Z+, r25
     f92:	8f 5f       	subi	r24, 0xFF	; 255
     f94:	28 13       	cpse	r18, r24
     f96:	f5 cf       	rjmp	.-22     	; 0xf82 <write_zahl+0x104>
     f98:	8f 85       	ldd	r24, Y+15	; 0x0f
     f9a:	81 11       	cpse	r24, r1
     f9c:	52 c0       	rjmp	.+164    	; 0x1042 <write_zahl+0x1c4>
     f9e:	f1 01       	movw	r30, r2
     fa0:	81 e0       	ldi	r24, 0x01	; 1
     fa2:	90 e0       	ldi	r25, 0x00	; 0
     fa4:	8c 0f       	add	r24, r28
     fa6:	9d 1f       	adc	r25, r29
     fa8:	e8 0f       	add	r30, r24
     faa:	f9 1f       	adc	r31, r25
     fac:	10 82       	st	Z, r1
     fae:	99 89       	ldd	r25, Y+17	; 0x11
     fb0:	99 23       	and	r25, r25
     fb2:	21 f1       	breq	.+72     	; 0xffc <write_zahl+0x17e>
     fb4:	89 81       	ldd	r24, Y+1	; 0x01
     fb6:	80 33       	cpi	r24, 0x30	; 48
     fb8:	09 f5       	brne	.+66     	; 0xffc <write_zahl+0x17e>
     fba:	a1 01       	movw	r20, r2
     fbc:	41 50       	subi	r20, 0x01	; 1
     fbe:	51 09       	sbc	r21, r1
     fc0:	14 16       	cp	r1, r20
     fc2:	15 06       	cpc	r1, r21
     fc4:	dc f4       	brge	.+54     	; 0xffc <write_zahl+0x17e>
     fc6:	80 e0       	ldi	r24, 0x00	; 0
     fc8:	90 e0       	ldi	r25, 0x00	; 0
     fca:	20 e0       	ldi	r18, 0x00	; 0
     fcc:	60 e2       	ldi	r22, 0x20	; 32
     fce:	03 c0       	rjmp	.+6      	; 0xfd6 <write_zahl+0x158>
     fd0:	84 17       	cp	r24, r20
     fd2:	95 07       	cpc	r25, r21
     fd4:	9c f4       	brge	.+38     	; 0xffc <write_zahl+0x17e>
     fd6:	2f 5f       	subi	r18, 0xFF	; 255
     fd8:	e1 e0       	ldi	r30, 0x01	; 1
     fda:	f0 e0       	ldi	r31, 0x00	; 0
     fdc:	ec 0f       	add	r30, r28
     fde:	fd 1f       	adc	r31, r29
     fe0:	e8 0f       	add	r30, r24
     fe2:	f9 1f       	adc	r31, r25
     fe4:	60 83       	st	Z, r22
     fe6:	82 2f       	mov	r24, r18
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	e1 e0       	ldi	r30, 0x01	; 1
     fec:	f0 e0       	ldi	r31, 0x00	; 0
     fee:	ec 0f       	add	r30, r28
     ff0:	fd 1f       	adc	r31, r29
     ff2:	e8 0f       	add	r30, r24
     ff4:	f9 1f       	adc	r31, r25
     ff6:	30 81       	ld	r19, Z
     ff8:	30 33       	cpi	r19, 0x30	; 48
     ffa:	51 f3       	breq	.-44     	; 0xfd0 <write_zahl+0x152>
     ffc:	ae 01       	movw	r20, r28
     ffe:	4f 5f       	subi	r20, 0xFF	; 255
    1000:	5f 4f       	sbci	r21, 0xFF	; 255
    1002:	6b 89       	ldd	r22, Y+19	; 0x13
    1004:	8a 89       	ldd	r24, Y+18	; 0x12
    1006:	0e 94 20 07 	call	0xe40	; 0xe40 <write_text_ram>
    100a:	63 96       	adiw	r28, 0x13	; 19
    100c:	0f b6       	in	r0, 0x3f	; 63
    100e:	f8 94       	cli
    1010:	de bf       	out	0x3e, r29	; 62
    1012:	0f be       	out	0x3f, r0	; 63
    1014:	cd bf       	out	0x3d, r28	; 61
    1016:	df 91       	pop	r29
    1018:	cf 91       	pop	r28
    101a:	1f 91       	pop	r17
    101c:	0f 91       	pop	r16
    101e:	ff 90       	pop	r15
    1020:	ef 90       	pop	r14
    1022:	df 90       	pop	r13
    1024:	cf 90       	pop	r12
    1026:	bf 90       	pop	r11
    1028:	af 90       	pop	r10
    102a:	9f 90       	pop	r9
    102c:	8f 90       	pop	r8
    102e:	7f 90       	pop	r7
    1030:	6f 90       	pop	r6
    1032:	5f 90       	pop	r5
    1034:	4f 90       	pop	r4
    1036:	3f 90       	pop	r3
    1038:	2f 90       	pop	r2
    103a:	08 95       	ret
    103c:	21 e0       	ldi	r18, 0x01	; 1
    103e:	29 8b       	std	Y+17, r18	; 0x11
    1040:	42 cf       	rjmp	.-380    	; 0xec6 <write_zahl+0x48>
    1042:	0f 5f       	subi	r16, 0xFF	; 255
    1044:	8e e2       	ldi	r24, 0x2E	; 46
    1046:	e1 e0       	ldi	r30, 0x01	; 1
    1048:	f0 e0       	ldi	r31, 0x00	; 0
    104a:	ec 0f       	add	r30, r28
    104c:	fd 1f       	adc	r31, r29
    104e:	e2 0d       	add	r30, r2
    1050:	f3 1d       	adc	r31, r3
    1052:	80 83       	st	Z, r24
    1054:	e0 2f       	mov	r30, r16
    1056:	20 1b       	sub	r18, r16
    1058:	82 2f       	mov	r24, r18
    105a:	8e 0f       	add	r24, r30
    105c:	a1 e0       	ldi	r26, 0x01	; 1
    105e:	b0 e0       	ldi	r27, 0x00	; 0
    1060:	ac 0f       	add	r26, r28
    1062:	bd 1f       	adc	r27, r29
    1064:	a8 0f       	add	r26, r24
    1066:	b1 1d       	adc	r27, r1
    1068:	8c 91       	ld	r24, X
    106a:	a1 e0       	ldi	r26, 0x01	; 1
    106c:	b0 e0       	ldi	r27, 0x00	; 0
    106e:	ac 0f       	add	r26, r28
    1070:	bd 1f       	adc	r27, r29
    1072:	ae 0f       	add	r26, r30
    1074:	b1 1d       	adc	r27, r1
    1076:	8c 93       	st	X, r24
    1078:	ef 5f       	subi	r30, 0xFF	; 255
    107a:	8e 2f       	mov	r24, r30
    107c:	80 1b       	sub	r24, r16
    107e:	9f 85       	ldd	r25, Y+15	; 0x0f
    1080:	89 17       	cp	r24, r25
    1082:	50 f3       	brcs	.-44     	; 0x1058 <write_zahl+0x1da>
    1084:	f0 e0       	ldi	r31, 0x00	; 0
    1086:	8c cf       	rjmp	.-232    	; 0xfa0 <write_zahl+0x122>
    1088:	ef 85       	ldd	r30, Y+15	; 0x0f
    108a:	ee 23       	and	r30, r30
    108c:	21 f0       	breq	.+8      	; 0x1096 <write_zahl+0x218>
    108e:	8e e2       	ldi	r24, 0x2E	; 46
    1090:	89 83       	std	Y+1, r24	; 0x01
    1092:	01 e0       	ldi	r16, 0x01	; 1
    1094:	df cf       	rjmp	.-66     	; 0x1054 <write_zahl+0x1d6>
    1096:	e0 e0       	ldi	r30, 0x00	; 0
    1098:	f0 e0       	ldi	r31, 0x00	; 0
    109a:	82 cf       	rjmp	.-252    	; 0xfa0 <write_zahl+0x122>

0000109c <lcd_init>:
    109c:	df 93       	push	r29
    109e:	38 9a       	sbi	0x07, 0	; 7
    10a0:	39 9a       	sbi	0x07, 1	; 7
    10a2:	d2 e3       	ldi	r29, 0x32	; 50
    10a4:	88 e7       	ldi	r24, 0x78	; 120
    10a6:	0e 94 b6 06 	call	0xd6c	; 0xd6c <delay_nop>
    10aa:	d1 50       	subi	r29, 0x01	; 1
    10ac:	d9 f7       	brne	.-10     	; 0x10a4 <lcd_init+0x8>
    10ae:	64 e3       	ldi	r22, 0x34	; 52
    10b0:	83 e4       	ldi	r24, 0x43	; 67
    10b2:	0e 94 cc 06 	call	0xd98	; 0xd98 <write_lcd_f>
    10b6:	64 e3       	ldi	r22, 0x34	; 52
    10b8:	83 e4       	ldi	r24, 0x43	; 67
    10ba:	0e 94 cc 06 	call	0xd98	; 0xd98 <write_lcd_f>
    10be:	69 e0       	ldi	r22, 0x09	; 9
    10c0:	83 e4       	ldi	r24, 0x43	; 67
    10c2:	0e 94 cc 06 	call	0xd98	; 0xd98 <write_lcd_f>
    10c6:	60 e3       	ldi	r22, 0x30	; 48
    10c8:	83 e4       	ldi	r24, 0x43	; 67
    10ca:	0e 94 cc 06 	call	0xd98	; 0xd98 <write_lcd_f>
    10ce:	6c e0       	ldi	r22, 0x0C	; 12
    10d0:	83 e4       	ldi	r24, 0x43	; 67
    10d2:	0e 94 cc 06 	call	0xd98	; 0xd98 <write_lcd_f>
    10d6:	61 e0       	ldi	r22, 0x01	; 1
    10d8:	83 e4       	ldi	r24, 0x43	; 67
    10da:	0e 94 cc 06 	call	0xd98	; 0xd98 <write_lcd_f>
    10de:	d8 e0       	ldi	r29, 0x08	; 8
    10e0:	88 e7       	ldi	r24, 0x78	; 120
    10e2:	0e 94 b6 06 	call	0xd6c	; 0xd6c <delay_nop>
    10e6:	d1 50       	subi	r29, 0x01	; 1
    10e8:	d9 f7       	brne	.-10     	; 0x10e0 <lcd_init+0x44>
    10ea:	67 e0       	ldi	r22, 0x07	; 7
    10ec:	83 e4       	ldi	r24, 0x43	; 67
    10ee:	0e 94 cc 06 	call	0xd98	; 0xd98 <write_lcd_f>
    10f2:	df 91       	pop	r29
    10f4:	0c 94 c8 05 	jmp	0xb90	; 0xb90 <init_Timer0_1ms_int>

000010f8 <clear_lcd>:
    10f8:	df 93       	push	r29
    10fa:	61 e0       	ldi	r22, 0x01	; 1
    10fc:	83 e4       	ldi	r24, 0x43	; 67
    10fe:	0e 94 cc 06 	call	0xd98	; 0xd98 <write_lcd_f>
    1102:	d8 e0       	ldi	r29, 0x08	; 8
    1104:	88 e7       	ldi	r24, 0x78	; 120
    1106:	0e 94 b6 06 	call	0xd6c	; 0xd6c <delay_nop>
    110a:	d1 50       	subi	r29, 0x01	; 1
    110c:	d9 f7       	brne	.-10     	; 0x1104 <__stack+0x5>
    110e:	df 91       	pop	r29
    1110:	08 95       	ret

00001112 <LED_Show>:
    1112:	cf 93       	push	r28
    1114:	df 93       	push	r29
    1116:	1f 92       	push	r1
    1118:	cd b7       	in	r28, 0x3d	; 61
    111a:	de b7       	in	r29, 0x3e	; 62
    111c:	85 e2       	ldi	r24, 0x25	; 37
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	21 e0       	ldi	r18, 0x01	; 1
    1122:	fc 01       	movw	r30, r24
    1124:	20 83       	st	Z, r18
    1126:	19 82       	std	Y+1, r1	; 0x01
    1128:	17 c0       	rjmp	.+46     	; 0x1158 <LED_Show+0x46>
    112a:	62 e3       	ldi	r22, 0x32	; 50
    112c:	70 e0       	ldi	r23, 0x00	; 0
    112e:	80 e0       	ldi	r24, 0x00	; 0
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	0e 94 76 06 	call	0xcec	; 0xcec <wait_1ms>
    1136:	85 e2       	ldi	r24, 0x25	; 37
    1138:	90 e0       	ldi	r25, 0x00	; 0
    113a:	29 81       	ldd	r18, Y+1	; 0x01
    113c:	42 2f       	mov	r20, r18
    113e:	50 e0       	ldi	r21, 0x00	; 0
    1140:	21 e0       	ldi	r18, 0x01	; 1
    1142:	30 e0       	ldi	r19, 0x00	; 0
    1144:	02 c0       	rjmp	.+4      	; 0x114a <LED_Show+0x38>
    1146:	22 0f       	add	r18, r18
    1148:	33 1f       	adc	r19, r19
    114a:	4a 95       	dec	r20
    114c:	e2 f7       	brpl	.-8      	; 0x1146 <LED_Show+0x34>
    114e:	fc 01       	movw	r30, r24
    1150:	20 83       	st	Z, r18
    1152:	89 81       	ldd	r24, Y+1	; 0x01
    1154:	8f 5f       	subi	r24, 0xFF	; 255
    1156:	89 83       	std	Y+1, r24	; 0x01
    1158:	89 81       	ldd	r24, Y+1	; 0x01
    115a:	88 30       	cpi	r24, 0x08	; 8
    115c:	30 f3       	brcs	.-52     	; 0x112a <LED_Show+0x18>
    115e:	85 e2       	ldi	r24, 0x25	; 37
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	20 e8       	ldi	r18, 0x80	; 128
    1164:	fc 01       	movw	r30, r24
    1166:	20 83       	st	Z, r18
    1168:	19 82       	std	Y+1, r1	; 0x01
    116a:	17 c0       	rjmp	.+46     	; 0x119a <LED_Show+0x88>
    116c:	62 e3       	ldi	r22, 0x32	; 50
    116e:	70 e0       	ldi	r23, 0x00	; 0
    1170:	80 e0       	ldi	r24, 0x00	; 0
    1172:	90 e0       	ldi	r25, 0x00	; 0
    1174:	0e 94 76 06 	call	0xcec	; 0xcec <wait_1ms>
    1178:	85 e2       	ldi	r24, 0x25	; 37
    117a:	90 e0       	ldi	r25, 0x00	; 0
    117c:	29 81       	ldd	r18, Y+1	; 0x01
    117e:	42 2f       	mov	r20, r18
    1180:	50 e0       	ldi	r21, 0x00	; 0
    1182:	20 e8       	ldi	r18, 0x80	; 128
    1184:	30 e0       	ldi	r19, 0x00	; 0
    1186:	02 c0       	rjmp	.+4      	; 0x118c <LED_Show+0x7a>
    1188:	35 95       	asr	r19
    118a:	27 95       	ror	r18
    118c:	4a 95       	dec	r20
    118e:	e2 f7       	brpl	.-8      	; 0x1188 <LED_Show+0x76>
    1190:	fc 01       	movw	r30, r24
    1192:	20 83       	st	Z, r18
    1194:	89 81       	ldd	r24, Y+1	; 0x01
    1196:	8f 5f       	subi	r24, 0xFF	; 255
    1198:	89 83       	std	Y+1, r24	; 0x01
    119a:	89 81       	ldd	r24, Y+1	; 0x01
    119c:	88 30       	cpi	r24, 0x08	; 8
    119e:	30 f3       	brcs	.-52     	; 0x116c <LED_Show+0x5a>
    11a0:	64 e6       	ldi	r22, 0x64	; 100
    11a2:	70 e0       	ldi	r23, 0x00	; 0
    11a4:	80 e0       	ldi	r24, 0x00	; 0
    11a6:	90 e0       	ldi	r25, 0x00	; 0
    11a8:	0e 94 76 06 	call	0xcec	; 0xcec <wait_1ms>
    11ac:	85 e2       	ldi	r24, 0x25	; 37
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	fc 01       	movw	r30, r24
    11b2:	10 82       	st	Z, r1
    11b4:	00 00       	nop
    11b6:	0f 90       	pop	r0
    11b8:	df 91       	pop	r29
    11ba:	cf 91       	pop	r28
    11bc:	08 95       	ret

000011be <init_BT_CAR_V2_0>:
    11be:	cf 93       	push	r28
    11c0:	df 93       	push	r29
    11c2:	cd b7       	in	r28, 0x3d	; 61
    11c4:	de b7       	in	r29, 0x3e	; 62
    11c6:	81 e2       	ldi	r24, 0x21	; 33
    11c8:	90 e0       	ldi	r25, 0x00	; 0
    11ca:	20 e6       	ldi	r18, 0x60	; 96
    11cc:	fc 01       	movw	r30, r24
    11ce:	20 83       	st	Z, r18
    11d0:	84 e2       	ldi	r24, 0x24	; 36
    11d2:	90 e0       	ldi	r25, 0x00	; 0
    11d4:	2f ef       	ldi	r18, 0xFF	; 255
    11d6:	fc 01       	movw	r30, r24
    11d8:	20 83       	st	Z, r18
    11da:	8a e2       	ldi	r24, 0x2A	; 42
    11dc:	90 e0       	ldi	r25, 0x00	; 0
    11de:	2c ef       	ldi	r18, 0xFC	; 252
    11e0:	fc 01       	movw	r30, r24
    11e2:	20 83       	st	Z, r18
    11e4:	78 94       	sei
    11e6:	0e 94 4e 08 	call	0x109c	; 0x109c <lcd_init>
    11ea:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <clear_lcd>
    11ee:	0e 94 89 08 	call	0x1112	; 0x1112 <LED_Show>
    11f2:	00 00       	nop
    11f4:	df 91       	pop	r29
    11f6:	cf 91       	pop	r28
    11f8:	08 95       	ret

000011fa <__cmpsf2>:
    11fa:	0e 94 e0 09 	call	0x13c0	; 0x13c0 <__fp_cmp>
    11fe:	08 f4       	brcc	.+2      	; 0x1202 <__cmpsf2+0x8>
    1200:	81 e0       	ldi	r24, 0x01	; 1
    1202:	08 95       	ret

00001204 <__divsf3>:
    1204:	0e 94 16 09 	call	0x122c	; 0x122c <__divsf3x>
    1208:	0c 94 1b 0a 	jmp	0x1436	; 0x1436 <__fp_round>
    120c:	0e 94 14 0a 	call	0x1428	; 0x1428 <__fp_pscB>
    1210:	58 f0       	brcs	.+22     	; 0x1228 <__divsf3+0x24>
    1212:	0e 94 0d 0a 	call	0x141a	; 0x141a <__fp_pscA>
    1216:	40 f0       	brcs	.+16     	; 0x1228 <__divsf3+0x24>
    1218:	29 f4       	brne	.+10     	; 0x1224 <__divsf3+0x20>
    121a:	5f 3f       	cpi	r21, 0xFF	; 255
    121c:	29 f0       	breq	.+10     	; 0x1228 <__divsf3+0x24>
    121e:	0c 94 04 0a 	jmp	0x1408	; 0x1408 <__fp_inf>
    1222:	51 11       	cpse	r21, r1
    1224:	0c 94 4f 0a 	jmp	0x149e	; 0x149e <__fp_szero>
    1228:	0c 94 0a 0a 	jmp	0x1414	; 0x1414 <__fp_nan>

0000122c <__divsf3x>:
    122c:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__fp_split3>
    1230:	68 f3       	brcs	.-38     	; 0x120c <__divsf3+0x8>

00001232 <__divsf3_pse>:
    1232:	99 23       	and	r25, r25
    1234:	b1 f3       	breq	.-20     	; 0x1222 <__divsf3+0x1e>
    1236:	55 23       	and	r21, r21
    1238:	91 f3       	breq	.-28     	; 0x121e <__divsf3+0x1a>
    123a:	95 1b       	sub	r25, r21
    123c:	55 0b       	sbc	r21, r21
    123e:	bb 27       	eor	r27, r27
    1240:	aa 27       	eor	r26, r26
    1242:	62 17       	cp	r22, r18
    1244:	73 07       	cpc	r23, r19
    1246:	84 07       	cpc	r24, r20
    1248:	38 f0       	brcs	.+14     	; 0x1258 <__divsf3_pse+0x26>
    124a:	9f 5f       	subi	r25, 0xFF	; 255
    124c:	5f 4f       	sbci	r21, 0xFF	; 255
    124e:	22 0f       	add	r18, r18
    1250:	33 1f       	adc	r19, r19
    1252:	44 1f       	adc	r20, r20
    1254:	aa 1f       	adc	r26, r26
    1256:	a9 f3       	breq	.-22     	; 0x1242 <__divsf3_pse+0x10>
    1258:	35 d0       	rcall	.+106    	; 0x12c4 <__divsf3_pse+0x92>
    125a:	0e 2e       	mov	r0, r30
    125c:	3a f0       	brmi	.+14     	; 0x126c <__divsf3_pse+0x3a>
    125e:	e0 e8       	ldi	r30, 0x80	; 128
    1260:	32 d0       	rcall	.+100    	; 0x12c6 <__divsf3_pse+0x94>
    1262:	91 50       	subi	r25, 0x01	; 1
    1264:	50 40       	sbci	r21, 0x00	; 0
    1266:	e6 95       	lsr	r30
    1268:	00 1c       	adc	r0, r0
    126a:	ca f7       	brpl	.-14     	; 0x125e <__divsf3_pse+0x2c>
    126c:	2b d0       	rcall	.+86     	; 0x12c4 <__divsf3_pse+0x92>
    126e:	fe 2f       	mov	r31, r30
    1270:	29 d0       	rcall	.+82     	; 0x12c4 <__divsf3_pse+0x92>
    1272:	66 0f       	add	r22, r22
    1274:	77 1f       	adc	r23, r23
    1276:	88 1f       	adc	r24, r24
    1278:	bb 1f       	adc	r27, r27
    127a:	26 17       	cp	r18, r22
    127c:	37 07       	cpc	r19, r23
    127e:	48 07       	cpc	r20, r24
    1280:	ab 07       	cpc	r26, r27
    1282:	b0 e8       	ldi	r27, 0x80	; 128
    1284:	09 f0       	breq	.+2      	; 0x1288 <__divsf3_pse+0x56>
    1286:	bb 0b       	sbc	r27, r27
    1288:	80 2d       	mov	r24, r0
    128a:	bf 01       	movw	r22, r30
    128c:	ff 27       	eor	r31, r31
    128e:	93 58       	subi	r25, 0x83	; 131
    1290:	5f 4f       	sbci	r21, 0xFF	; 255
    1292:	3a f0       	brmi	.+14     	; 0x12a2 <__divsf3_pse+0x70>
    1294:	9e 3f       	cpi	r25, 0xFE	; 254
    1296:	51 05       	cpc	r21, r1
    1298:	78 f0       	brcs	.+30     	; 0x12b8 <__divsf3_pse+0x86>
    129a:	0c 94 04 0a 	jmp	0x1408	; 0x1408 <__fp_inf>
    129e:	0c 94 4f 0a 	jmp	0x149e	; 0x149e <__fp_szero>
    12a2:	5f 3f       	cpi	r21, 0xFF	; 255
    12a4:	e4 f3       	brlt	.-8      	; 0x129e <__divsf3_pse+0x6c>
    12a6:	98 3e       	cpi	r25, 0xE8	; 232
    12a8:	d4 f3       	brlt	.-12     	; 0x129e <__divsf3_pse+0x6c>
    12aa:	86 95       	lsr	r24
    12ac:	77 95       	ror	r23
    12ae:	67 95       	ror	r22
    12b0:	b7 95       	ror	r27
    12b2:	f7 95       	ror	r31
    12b4:	9f 5f       	subi	r25, 0xFF	; 255
    12b6:	c9 f7       	brne	.-14     	; 0x12aa <__divsf3_pse+0x78>
    12b8:	88 0f       	add	r24, r24
    12ba:	91 1d       	adc	r25, r1
    12bc:	96 95       	lsr	r25
    12be:	87 95       	ror	r24
    12c0:	97 f9       	bld	r25, 7
    12c2:	08 95       	ret
    12c4:	e1 e0       	ldi	r30, 0x01	; 1
    12c6:	66 0f       	add	r22, r22
    12c8:	77 1f       	adc	r23, r23
    12ca:	88 1f       	adc	r24, r24
    12cc:	bb 1f       	adc	r27, r27
    12ce:	62 17       	cp	r22, r18
    12d0:	73 07       	cpc	r23, r19
    12d2:	84 07       	cpc	r24, r20
    12d4:	ba 07       	cpc	r27, r26
    12d6:	20 f0       	brcs	.+8      	; 0x12e0 <__divsf3_pse+0xae>
    12d8:	62 1b       	sub	r22, r18
    12da:	73 0b       	sbc	r23, r19
    12dc:	84 0b       	sbc	r24, r20
    12de:	ba 0b       	sbc	r27, r26
    12e0:	ee 1f       	adc	r30, r30
    12e2:	88 f7       	brcc	.-30     	; 0x12c6 <__divsf3_pse+0x94>
    12e4:	e0 95       	com	r30
    12e6:	08 95       	ret

000012e8 <__fixunssfsi>:
    12e8:	0e 94 34 0a 	call	0x1468	; 0x1468 <__fp_splitA>
    12ec:	88 f0       	brcs	.+34     	; 0x1310 <__fixunssfsi+0x28>
    12ee:	9f 57       	subi	r25, 0x7F	; 127
    12f0:	98 f0       	brcs	.+38     	; 0x1318 <__fixunssfsi+0x30>
    12f2:	b9 2f       	mov	r27, r25
    12f4:	99 27       	eor	r25, r25
    12f6:	b7 51       	subi	r27, 0x17	; 23
    12f8:	b0 f0       	brcs	.+44     	; 0x1326 <__fixunssfsi+0x3e>
    12fa:	e1 f0       	breq	.+56     	; 0x1334 <__fixunssfsi+0x4c>
    12fc:	66 0f       	add	r22, r22
    12fe:	77 1f       	adc	r23, r23
    1300:	88 1f       	adc	r24, r24
    1302:	99 1f       	adc	r25, r25
    1304:	1a f0       	brmi	.+6      	; 0x130c <__fixunssfsi+0x24>
    1306:	ba 95       	dec	r27
    1308:	c9 f7       	brne	.-14     	; 0x12fc <__fixunssfsi+0x14>
    130a:	14 c0       	rjmp	.+40     	; 0x1334 <__fixunssfsi+0x4c>
    130c:	b1 30       	cpi	r27, 0x01	; 1
    130e:	91 f0       	breq	.+36     	; 0x1334 <__fixunssfsi+0x4c>
    1310:	0e 94 4e 0a 	call	0x149c	; 0x149c <__fp_zero>
    1314:	b1 e0       	ldi	r27, 0x01	; 1
    1316:	08 95       	ret
    1318:	0c 94 4e 0a 	jmp	0x149c	; 0x149c <__fp_zero>
    131c:	67 2f       	mov	r22, r23
    131e:	78 2f       	mov	r23, r24
    1320:	88 27       	eor	r24, r24
    1322:	b8 5f       	subi	r27, 0xF8	; 248
    1324:	39 f0       	breq	.+14     	; 0x1334 <__fixunssfsi+0x4c>
    1326:	b9 3f       	cpi	r27, 0xF9	; 249
    1328:	cc f3       	brlt	.-14     	; 0x131c <__fixunssfsi+0x34>
    132a:	86 95       	lsr	r24
    132c:	77 95       	ror	r23
    132e:	67 95       	ror	r22
    1330:	b3 95       	inc	r27
    1332:	d9 f7       	brne	.-10     	; 0x132a <__fixunssfsi+0x42>
    1334:	3e f4       	brtc	.+14     	; 0x1344 <__fixunssfsi+0x5c>
    1336:	90 95       	com	r25
    1338:	80 95       	com	r24
    133a:	70 95       	com	r23
    133c:	61 95       	neg	r22
    133e:	7f 4f       	sbci	r23, 0xFF	; 255
    1340:	8f 4f       	sbci	r24, 0xFF	; 255
    1342:	9f 4f       	sbci	r25, 0xFF	; 255
    1344:	08 95       	ret

00001346 <__floatunsisf>:
    1346:	e8 94       	clt
    1348:	09 c0       	rjmp	.+18     	; 0x135c <__floatsisf+0x12>

0000134a <__floatsisf>:
    134a:	97 fb       	bst	r25, 7
    134c:	3e f4       	brtc	.+14     	; 0x135c <__floatsisf+0x12>
    134e:	90 95       	com	r25
    1350:	80 95       	com	r24
    1352:	70 95       	com	r23
    1354:	61 95       	neg	r22
    1356:	7f 4f       	sbci	r23, 0xFF	; 255
    1358:	8f 4f       	sbci	r24, 0xFF	; 255
    135a:	9f 4f       	sbci	r25, 0xFF	; 255
    135c:	99 23       	and	r25, r25
    135e:	a9 f0       	breq	.+42     	; 0x138a <__floatsisf+0x40>
    1360:	f9 2f       	mov	r31, r25
    1362:	96 e9       	ldi	r25, 0x96	; 150
    1364:	bb 27       	eor	r27, r27
    1366:	93 95       	inc	r25
    1368:	f6 95       	lsr	r31
    136a:	87 95       	ror	r24
    136c:	77 95       	ror	r23
    136e:	67 95       	ror	r22
    1370:	b7 95       	ror	r27
    1372:	f1 11       	cpse	r31, r1
    1374:	f8 cf       	rjmp	.-16     	; 0x1366 <__floatsisf+0x1c>
    1376:	fa f4       	brpl	.+62     	; 0x13b6 <__floatsisf+0x6c>
    1378:	bb 0f       	add	r27, r27
    137a:	11 f4       	brne	.+4      	; 0x1380 <__floatsisf+0x36>
    137c:	60 ff       	sbrs	r22, 0
    137e:	1b c0       	rjmp	.+54     	; 0x13b6 <__floatsisf+0x6c>
    1380:	6f 5f       	subi	r22, 0xFF	; 255
    1382:	7f 4f       	sbci	r23, 0xFF	; 255
    1384:	8f 4f       	sbci	r24, 0xFF	; 255
    1386:	9f 4f       	sbci	r25, 0xFF	; 255
    1388:	16 c0       	rjmp	.+44     	; 0x13b6 <__floatsisf+0x6c>
    138a:	88 23       	and	r24, r24
    138c:	11 f0       	breq	.+4      	; 0x1392 <__floatsisf+0x48>
    138e:	96 e9       	ldi	r25, 0x96	; 150
    1390:	11 c0       	rjmp	.+34     	; 0x13b4 <__floatsisf+0x6a>
    1392:	77 23       	and	r23, r23
    1394:	21 f0       	breq	.+8      	; 0x139e <__floatsisf+0x54>
    1396:	9e e8       	ldi	r25, 0x8E	; 142
    1398:	87 2f       	mov	r24, r23
    139a:	76 2f       	mov	r23, r22
    139c:	05 c0       	rjmp	.+10     	; 0x13a8 <__floatsisf+0x5e>
    139e:	66 23       	and	r22, r22
    13a0:	71 f0       	breq	.+28     	; 0x13be <__floatsisf+0x74>
    13a2:	96 e8       	ldi	r25, 0x86	; 134
    13a4:	86 2f       	mov	r24, r22
    13a6:	70 e0       	ldi	r23, 0x00	; 0
    13a8:	60 e0       	ldi	r22, 0x00	; 0
    13aa:	2a f0       	brmi	.+10     	; 0x13b6 <__floatsisf+0x6c>
    13ac:	9a 95       	dec	r25
    13ae:	66 0f       	add	r22, r22
    13b0:	77 1f       	adc	r23, r23
    13b2:	88 1f       	adc	r24, r24
    13b4:	da f7       	brpl	.-10     	; 0x13ac <__floatsisf+0x62>
    13b6:	88 0f       	add	r24, r24
    13b8:	96 95       	lsr	r25
    13ba:	87 95       	ror	r24
    13bc:	97 f9       	bld	r25, 7
    13be:	08 95       	ret

000013c0 <__fp_cmp>:
    13c0:	99 0f       	add	r25, r25
    13c2:	00 08       	sbc	r0, r0
    13c4:	55 0f       	add	r21, r21
    13c6:	aa 0b       	sbc	r26, r26
    13c8:	e0 e8       	ldi	r30, 0x80	; 128
    13ca:	fe ef       	ldi	r31, 0xFE	; 254
    13cc:	16 16       	cp	r1, r22
    13ce:	17 06       	cpc	r1, r23
    13d0:	e8 07       	cpc	r30, r24
    13d2:	f9 07       	cpc	r31, r25
    13d4:	c0 f0       	brcs	.+48     	; 0x1406 <__fp_cmp+0x46>
    13d6:	12 16       	cp	r1, r18
    13d8:	13 06       	cpc	r1, r19
    13da:	e4 07       	cpc	r30, r20
    13dc:	f5 07       	cpc	r31, r21
    13de:	98 f0       	brcs	.+38     	; 0x1406 <__fp_cmp+0x46>
    13e0:	62 1b       	sub	r22, r18
    13e2:	73 0b       	sbc	r23, r19
    13e4:	84 0b       	sbc	r24, r20
    13e6:	95 0b       	sbc	r25, r21
    13e8:	39 f4       	brne	.+14     	; 0x13f8 <__fp_cmp+0x38>
    13ea:	0a 26       	eor	r0, r26
    13ec:	61 f0       	breq	.+24     	; 0x1406 <__fp_cmp+0x46>
    13ee:	23 2b       	or	r18, r19
    13f0:	24 2b       	or	r18, r20
    13f2:	25 2b       	or	r18, r21
    13f4:	21 f4       	brne	.+8      	; 0x13fe <__fp_cmp+0x3e>
    13f6:	08 95       	ret
    13f8:	0a 26       	eor	r0, r26
    13fa:	09 f4       	brne	.+2      	; 0x13fe <__fp_cmp+0x3e>
    13fc:	a1 40       	sbci	r26, 0x01	; 1
    13fe:	a6 95       	lsr	r26
    1400:	8f ef       	ldi	r24, 0xFF	; 255
    1402:	81 1d       	adc	r24, r1
    1404:	81 1d       	adc	r24, r1
    1406:	08 95       	ret

00001408 <__fp_inf>:
    1408:	97 f9       	bld	r25, 7
    140a:	9f 67       	ori	r25, 0x7F	; 127
    140c:	80 e8       	ldi	r24, 0x80	; 128
    140e:	70 e0       	ldi	r23, 0x00	; 0
    1410:	60 e0       	ldi	r22, 0x00	; 0
    1412:	08 95       	ret

00001414 <__fp_nan>:
    1414:	9f ef       	ldi	r25, 0xFF	; 255
    1416:	80 ec       	ldi	r24, 0xC0	; 192
    1418:	08 95       	ret

0000141a <__fp_pscA>:
    141a:	00 24       	eor	r0, r0
    141c:	0a 94       	dec	r0
    141e:	16 16       	cp	r1, r22
    1420:	17 06       	cpc	r1, r23
    1422:	18 06       	cpc	r1, r24
    1424:	09 06       	cpc	r0, r25
    1426:	08 95       	ret

00001428 <__fp_pscB>:
    1428:	00 24       	eor	r0, r0
    142a:	0a 94       	dec	r0
    142c:	12 16       	cp	r1, r18
    142e:	13 06       	cpc	r1, r19
    1430:	14 06       	cpc	r1, r20
    1432:	05 06       	cpc	r0, r21
    1434:	08 95       	ret

00001436 <__fp_round>:
    1436:	09 2e       	mov	r0, r25
    1438:	03 94       	inc	r0
    143a:	00 0c       	add	r0, r0
    143c:	11 f4       	brne	.+4      	; 0x1442 <__fp_round+0xc>
    143e:	88 23       	and	r24, r24
    1440:	52 f0       	brmi	.+20     	; 0x1456 <__fp_round+0x20>
    1442:	bb 0f       	add	r27, r27
    1444:	40 f4       	brcc	.+16     	; 0x1456 <__fp_round+0x20>
    1446:	bf 2b       	or	r27, r31
    1448:	11 f4       	brne	.+4      	; 0x144e <__fp_round+0x18>
    144a:	60 ff       	sbrs	r22, 0
    144c:	04 c0       	rjmp	.+8      	; 0x1456 <__fp_round+0x20>
    144e:	6f 5f       	subi	r22, 0xFF	; 255
    1450:	7f 4f       	sbci	r23, 0xFF	; 255
    1452:	8f 4f       	sbci	r24, 0xFF	; 255
    1454:	9f 4f       	sbci	r25, 0xFF	; 255
    1456:	08 95       	ret

00001458 <__fp_split3>:
    1458:	57 fd       	sbrc	r21, 7
    145a:	90 58       	subi	r25, 0x80	; 128
    145c:	44 0f       	add	r20, r20
    145e:	55 1f       	adc	r21, r21
    1460:	59 f0       	breq	.+22     	; 0x1478 <__fp_splitA+0x10>
    1462:	5f 3f       	cpi	r21, 0xFF	; 255
    1464:	71 f0       	breq	.+28     	; 0x1482 <__fp_splitA+0x1a>
    1466:	47 95       	ror	r20

00001468 <__fp_splitA>:
    1468:	88 0f       	add	r24, r24
    146a:	97 fb       	bst	r25, 7
    146c:	99 1f       	adc	r25, r25
    146e:	61 f0       	breq	.+24     	; 0x1488 <__fp_splitA+0x20>
    1470:	9f 3f       	cpi	r25, 0xFF	; 255
    1472:	79 f0       	breq	.+30     	; 0x1492 <__fp_splitA+0x2a>
    1474:	87 95       	ror	r24
    1476:	08 95       	ret
    1478:	12 16       	cp	r1, r18
    147a:	13 06       	cpc	r1, r19
    147c:	14 06       	cpc	r1, r20
    147e:	55 1f       	adc	r21, r21
    1480:	f2 cf       	rjmp	.-28     	; 0x1466 <__fp_split3+0xe>
    1482:	46 95       	lsr	r20
    1484:	f1 df       	rcall	.-30     	; 0x1468 <__fp_splitA>
    1486:	08 c0       	rjmp	.+16     	; 0x1498 <__fp_splitA+0x30>
    1488:	16 16       	cp	r1, r22
    148a:	17 06       	cpc	r1, r23
    148c:	18 06       	cpc	r1, r24
    148e:	99 1f       	adc	r25, r25
    1490:	f1 cf       	rjmp	.-30     	; 0x1474 <__fp_splitA+0xc>
    1492:	86 95       	lsr	r24
    1494:	71 05       	cpc	r23, r1
    1496:	61 05       	cpc	r22, r1
    1498:	08 94       	sec
    149a:	08 95       	ret

0000149c <__fp_zero>:
    149c:	e8 94       	clt

0000149e <__fp_szero>:
    149e:	bb 27       	eor	r27, r27
    14a0:	66 27       	eor	r22, r22
    14a2:	77 27       	eor	r23, r23
    14a4:	cb 01       	movw	r24, r22
    14a6:	97 f9       	bld	r25, 7
    14a8:	08 95       	ret

000014aa <__gesf2>:
    14aa:	0e 94 e0 09 	call	0x13c0	; 0x13c0 <__fp_cmp>
    14ae:	08 f4       	brcc	.+2      	; 0x14b2 <__gesf2+0x8>
    14b0:	8f ef       	ldi	r24, 0xFF	; 255
    14b2:	08 95       	ret

000014b4 <__mulsf3>:
    14b4:	0e 94 6d 0a 	call	0x14da	; 0x14da <__mulsf3x>
    14b8:	0c 94 1b 0a 	jmp	0x1436	; 0x1436 <__fp_round>
    14bc:	0e 94 0d 0a 	call	0x141a	; 0x141a <__fp_pscA>
    14c0:	38 f0       	brcs	.+14     	; 0x14d0 <__mulsf3+0x1c>
    14c2:	0e 94 14 0a 	call	0x1428	; 0x1428 <__fp_pscB>
    14c6:	20 f0       	brcs	.+8      	; 0x14d0 <__mulsf3+0x1c>
    14c8:	95 23       	and	r25, r21
    14ca:	11 f0       	breq	.+4      	; 0x14d0 <__mulsf3+0x1c>
    14cc:	0c 94 04 0a 	jmp	0x1408	; 0x1408 <__fp_inf>
    14d0:	0c 94 0a 0a 	jmp	0x1414	; 0x1414 <__fp_nan>
    14d4:	11 24       	eor	r1, r1
    14d6:	0c 94 4f 0a 	jmp	0x149e	; 0x149e <__fp_szero>

000014da <__mulsf3x>:
    14da:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__fp_split3>
    14de:	70 f3       	brcs	.-36     	; 0x14bc <__mulsf3+0x8>

000014e0 <__mulsf3_pse>:
    14e0:	95 9f       	mul	r25, r21
    14e2:	c1 f3       	breq	.-16     	; 0x14d4 <__mulsf3+0x20>
    14e4:	95 0f       	add	r25, r21
    14e6:	50 e0       	ldi	r21, 0x00	; 0
    14e8:	55 1f       	adc	r21, r21
    14ea:	62 9f       	mul	r22, r18
    14ec:	f0 01       	movw	r30, r0
    14ee:	72 9f       	mul	r23, r18
    14f0:	bb 27       	eor	r27, r27
    14f2:	f0 0d       	add	r31, r0
    14f4:	b1 1d       	adc	r27, r1
    14f6:	63 9f       	mul	r22, r19
    14f8:	aa 27       	eor	r26, r26
    14fa:	f0 0d       	add	r31, r0
    14fc:	b1 1d       	adc	r27, r1
    14fe:	aa 1f       	adc	r26, r26
    1500:	64 9f       	mul	r22, r20
    1502:	66 27       	eor	r22, r22
    1504:	b0 0d       	add	r27, r0
    1506:	a1 1d       	adc	r26, r1
    1508:	66 1f       	adc	r22, r22
    150a:	82 9f       	mul	r24, r18
    150c:	22 27       	eor	r18, r18
    150e:	b0 0d       	add	r27, r0
    1510:	a1 1d       	adc	r26, r1
    1512:	62 1f       	adc	r22, r18
    1514:	73 9f       	mul	r23, r19
    1516:	b0 0d       	add	r27, r0
    1518:	a1 1d       	adc	r26, r1
    151a:	62 1f       	adc	r22, r18
    151c:	83 9f       	mul	r24, r19
    151e:	a0 0d       	add	r26, r0
    1520:	61 1d       	adc	r22, r1
    1522:	22 1f       	adc	r18, r18
    1524:	74 9f       	mul	r23, r20
    1526:	33 27       	eor	r19, r19
    1528:	a0 0d       	add	r26, r0
    152a:	61 1d       	adc	r22, r1
    152c:	23 1f       	adc	r18, r19
    152e:	84 9f       	mul	r24, r20
    1530:	60 0d       	add	r22, r0
    1532:	21 1d       	adc	r18, r1
    1534:	82 2f       	mov	r24, r18
    1536:	76 2f       	mov	r23, r22
    1538:	6a 2f       	mov	r22, r26
    153a:	11 24       	eor	r1, r1
    153c:	9f 57       	subi	r25, 0x7F	; 127
    153e:	50 40       	sbci	r21, 0x00	; 0
    1540:	9a f0       	brmi	.+38     	; 0x1568 <__mulsf3_pse+0x88>
    1542:	f1 f0       	breq	.+60     	; 0x1580 <__mulsf3_pse+0xa0>
    1544:	88 23       	and	r24, r24
    1546:	4a f0       	brmi	.+18     	; 0x155a <__mulsf3_pse+0x7a>
    1548:	ee 0f       	add	r30, r30
    154a:	ff 1f       	adc	r31, r31
    154c:	bb 1f       	adc	r27, r27
    154e:	66 1f       	adc	r22, r22
    1550:	77 1f       	adc	r23, r23
    1552:	88 1f       	adc	r24, r24
    1554:	91 50       	subi	r25, 0x01	; 1
    1556:	50 40       	sbci	r21, 0x00	; 0
    1558:	a9 f7       	brne	.-22     	; 0x1544 <__mulsf3_pse+0x64>
    155a:	9e 3f       	cpi	r25, 0xFE	; 254
    155c:	51 05       	cpc	r21, r1
    155e:	80 f0       	brcs	.+32     	; 0x1580 <__mulsf3_pse+0xa0>
    1560:	0c 94 04 0a 	jmp	0x1408	; 0x1408 <__fp_inf>
    1564:	0c 94 4f 0a 	jmp	0x149e	; 0x149e <__fp_szero>
    1568:	5f 3f       	cpi	r21, 0xFF	; 255
    156a:	e4 f3       	brlt	.-8      	; 0x1564 <__mulsf3_pse+0x84>
    156c:	98 3e       	cpi	r25, 0xE8	; 232
    156e:	d4 f3       	brlt	.-12     	; 0x1564 <__mulsf3_pse+0x84>
    1570:	86 95       	lsr	r24
    1572:	77 95       	ror	r23
    1574:	67 95       	ror	r22
    1576:	b7 95       	ror	r27
    1578:	f7 95       	ror	r31
    157a:	e7 95       	ror	r30
    157c:	9f 5f       	subi	r25, 0xFF	; 255
    157e:	c1 f7       	brne	.-16     	; 0x1570 <__mulsf3_pse+0x90>
    1580:	fe 2b       	or	r31, r30
    1582:	88 0f       	add	r24, r24
    1584:	91 1d       	adc	r25, r1
    1586:	96 95       	lsr	r25
    1588:	87 95       	ror	r24
    158a:	97 f9       	bld	r25, 7
    158c:	08 95       	ret

0000158e <__udivmodsi4>:
    158e:	a1 e2       	ldi	r26, 0x21	; 33
    1590:	1a 2e       	mov	r1, r26
    1592:	aa 1b       	sub	r26, r26
    1594:	bb 1b       	sub	r27, r27
    1596:	fd 01       	movw	r30, r26
    1598:	0d c0       	rjmp	.+26     	; 0x15b4 <__udivmodsi4_ep>

0000159a <__udivmodsi4_loop>:
    159a:	aa 1f       	adc	r26, r26
    159c:	bb 1f       	adc	r27, r27
    159e:	ee 1f       	adc	r30, r30
    15a0:	ff 1f       	adc	r31, r31
    15a2:	a2 17       	cp	r26, r18
    15a4:	b3 07       	cpc	r27, r19
    15a6:	e4 07       	cpc	r30, r20
    15a8:	f5 07       	cpc	r31, r21
    15aa:	20 f0       	brcs	.+8      	; 0x15b4 <__udivmodsi4_ep>
    15ac:	a2 1b       	sub	r26, r18
    15ae:	b3 0b       	sbc	r27, r19
    15b0:	e4 0b       	sbc	r30, r20
    15b2:	f5 0b       	sbc	r31, r21

000015b4 <__udivmodsi4_ep>:
    15b4:	66 1f       	adc	r22, r22
    15b6:	77 1f       	adc	r23, r23
    15b8:	88 1f       	adc	r24, r24
    15ba:	99 1f       	adc	r25, r25
    15bc:	1a 94       	dec	r1
    15be:	69 f7       	brne	.-38     	; 0x159a <__udivmodsi4_loop>
    15c0:	60 95       	com	r22
    15c2:	70 95       	com	r23
    15c4:	80 95       	com	r24
    15c6:	90 95       	com	r25
    15c8:	9b 01       	movw	r18, r22
    15ca:	ac 01       	movw	r20, r24
    15cc:	bd 01       	movw	r22, r26
    15ce:	cf 01       	movw	r24, r30
    15d0:	08 95       	ret

000015d2 <snprintf>:
    15d2:	ae e0       	ldi	r26, 0x0E	; 14
    15d4:	b0 e0       	ldi	r27, 0x00	; 0
    15d6:	ef ee       	ldi	r30, 0xEF	; 239
    15d8:	fa e0       	ldi	r31, 0x0A	; 10
    15da:	0c 94 b8 0d 	jmp	0x1b70	; 0x1b70 <__prologue_saves__+0x1c>
    15de:	0d 89       	ldd	r16, Y+21	; 0x15
    15e0:	1e 89       	ldd	r17, Y+22	; 0x16
    15e2:	8f 89       	ldd	r24, Y+23	; 0x17
    15e4:	98 8d       	ldd	r25, Y+24	; 0x18
    15e6:	26 e0       	ldi	r18, 0x06	; 6
    15e8:	2c 83       	std	Y+4, r18	; 0x04
    15ea:	1a 83       	std	Y+2, r17	; 0x02
    15ec:	09 83       	std	Y+1, r16	; 0x01
    15ee:	97 ff       	sbrs	r25, 7
    15f0:	02 c0       	rjmp	.+4      	; 0x15f6 <snprintf+0x24>
    15f2:	80 e0       	ldi	r24, 0x00	; 0
    15f4:	90 e8       	ldi	r25, 0x80	; 128
    15f6:	01 97       	sbiw	r24, 0x01	; 1
    15f8:	9e 83       	std	Y+6, r25	; 0x06
    15fa:	8d 83       	std	Y+5, r24	; 0x05
    15fc:	ae 01       	movw	r20, r28
    15fe:	45 5e       	subi	r20, 0xE5	; 229
    1600:	5f 4f       	sbci	r21, 0xFF	; 255
    1602:	69 8d       	ldd	r22, Y+25	; 0x19
    1604:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1606:	ce 01       	movw	r24, r28
    1608:	01 96       	adiw	r24, 0x01	; 1
    160a:	0e 94 19 0b 	call	0x1632	; 0x1632 <vfprintf>
    160e:	4d 81       	ldd	r20, Y+5	; 0x05
    1610:	5e 81       	ldd	r21, Y+6	; 0x06
    1612:	57 fd       	sbrc	r21, 7
    1614:	0a c0       	rjmp	.+20     	; 0x162a <snprintf+0x58>
    1616:	2f 81       	ldd	r18, Y+7	; 0x07
    1618:	38 85       	ldd	r19, Y+8	; 0x08
    161a:	42 17       	cp	r20, r18
    161c:	53 07       	cpc	r21, r19
    161e:	0c f4       	brge	.+2      	; 0x1622 <snprintf+0x50>
    1620:	9a 01       	movw	r18, r20
    1622:	f8 01       	movw	r30, r16
    1624:	e2 0f       	add	r30, r18
    1626:	f3 1f       	adc	r31, r19
    1628:	10 82       	st	Z, r1
    162a:	2e 96       	adiw	r28, 0x0e	; 14
    162c:	e4 e0       	ldi	r30, 0x04	; 4
    162e:	0c 94 d4 0d 	jmp	0x1ba8	; 0x1ba8 <__epilogue_restores__+0x1c>

00001632 <vfprintf>:
    1632:	ab e0       	ldi	r26, 0x0B	; 11
    1634:	b0 e0       	ldi	r27, 0x00	; 0
    1636:	ef e1       	ldi	r30, 0x1F	; 31
    1638:	fb e0       	ldi	r31, 0x0B	; 11
    163a:	0c 94 aa 0d 	jmp	0x1b54	; 0x1b54 <__prologue_saves__>
    163e:	6c 01       	movw	r12, r24
    1640:	7b 01       	movw	r14, r22
    1642:	8a 01       	movw	r16, r20
    1644:	fc 01       	movw	r30, r24
    1646:	17 82       	std	Z+7, r1	; 0x07
    1648:	16 82       	std	Z+6, r1	; 0x06
    164a:	83 81       	ldd	r24, Z+3	; 0x03
    164c:	81 ff       	sbrs	r24, 1
    164e:	cc c1       	rjmp	.+920    	; 0x19e8 <vfprintf+0x3b6>
    1650:	ce 01       	movw	r24, r28
    1652:	01 96       	adiw	r24, 0x01	; 1
    1654:	3c 01       	movw	r6, r24
    1656:	f6 01       	movw	r30, r12
    1658:	93 81       	ldd	r25, Z+3	; 0x03
    165a:	f7 01       	movw	r30, r14
    165c:	93 fd       	sbrc	r25, 3
    165e:	85 91       	lpm	r24, Z+
    1660:	93 ff       	sbrs	r25, 3
    1662:	81 91       	ld	r24, Z+
    1664:	7f 01       	movw	r14, r30
    1666:	88 23       	and	r24, r24
    1668:	09 f4       	brne	.+2      	; 0x166c <vfprintf+0x3a>
    166a:	ba c1       	rjmp	.+884    	; 0x19e0 <vfprintf+0x3ae>
    166c:	85 32       	cpi	r24, 0x25	; 37
    166e:	39 f4       	brne	.+14     	; 0x167e <vfprintf+0x4c>
    1670:	93 fd       	sbrc	r25, 3
    1672:	85 91       	lpm	r24, Z+
    1674:	93 ff       	sbrs	r25, 3
    1676:	81 91       	ld	r24, Z+
    1678:	7f 01       	movw	r14, r30
    167a:	85 32       	cpi	r24, 0x25	; 37
    167c:	29 f4       	brne	.+10     	; 0x1688 <vfprintf+0x56>
    167e:	b6 01       	movw	r22, r12
    1680:	90 e0       	ldi	r25, 0x00	; 0
    1682:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <fputc>
    1686:	e7 cf       	rjmp	.-50     	; 0x1656 <vfprintf+0x24>
    1688:	91 2c       	mov	r9, r1
    168a:	21 2c       	mov	r2, r1
    168c:	31 2c       	mov	r3, r1
    168e:	ff e1       	ldi	r31, 0x1F	; 31
    1690:	f3 15       	cp	r31, r3
    1692:	d8 f0       	brcs	.+54     	; 0x16ca <vfprintf+0x98>
    1694:	8b 32       	cpi	r24, 0x2B	; 43
    1696:	79 f0       	breq	.+30     	; 0x16b6 <vfprintf+0x84>
    1698:	38 f4       	brcc	.+14     	; 0x16a8 <vfprintf+0x76>
    169a:	80 32       	cpi	r24, 0x20	; 32
    169c:	79 f0       	breq	.+30     	; 0x16bc <vfprintf+0x8a>
    169e:	83 32       	cpi	r24, 0x23	; 35
    16a0:	a1 f4       	brne	.+40     	; 0x16ca <vfprintf+0x98>
    16a2:	23 2d       	mov	r18, r3
    16a4:	20 61       	ori	r18, 0x10	; 16
    16a6:	1d c0       	rjmp	.+58     	; 0x16e2 <vfprintf+0xb0>
    16a8:	8d 32       	cpi	r24, 0x2D	; 45
    16aa:	61 f0       	breq	.+24     	; 0x16c4 <vfprintf+0x92>
    16ac:	80 33       	cpi	r24, 0x30	; 48
    16ae:	69 f4       	brne	.+26     	; 0x16ca <vfprintf+0x98>
    16b0:	23 2d       	mov	r18, r3
    16b2:	21 60       	ori	r18, 0x01	; 1
    16b4:	16 c0       	rjmp	.+44     	; 0x16e2 <vfprintf+0xb0>
    16b6:	83 2d       	mov	r24, r3
    16b8:	82 60       	ori	r24, 0x02	; 2
    16ba:	38 2e       	mov	r3, r24
    16bc:	e3 2d       	mov	r30, r3
    16be:	e4 60       	ori	r30, 0x04	; 4
    16c0:	3e 2e       	mov	r3, r30
    16c2:	2a c0       	rjmp	.+84     	; 0x1718 <vfprintf+0xe6>
    16c4:	f3 2d       	mov	r31, r3
    16c6:	f8 60       	ori	r31, 0x08	; 8
    16c8:	1d c0       	rjmp	.+58     	; 0x1704 <vfprintf+0xd2>
    16ca:	37 fc       	sbrc	r3, 7
    16cc:	2d c0       	rjmp	.+90     	; 0x1728 <vfprintf+0xf6>
    16ce:	20 ed       	ldi	r18, 0xD0	; 208
    16d0:	28 0f       	add	r18, r24
    16d2:	2a 30       	cpi	r18, 0x0A	; 10
    16d4:	40 f0       	brcs	.+16     	; 0x16e6 <vfprintf+0xb4>
    16d6:	8e 32       	cpi	r24, 0x2E	; 46
    16d8:	b9 f4       	brne	.+46     	; 0x1708 <vfprintf+0xd6>
    16da:	36 fc       	sbrc	r3, 6
    16dc:	81 c1       	rjmp	.+770    	; 0x19e0 <vfprintf+0x3ae>
    16de:	23 2d       	mov	r18, r3
    16e0:	20 64       	ori	r18, 0x40	; 64
    16e2:	32 2e       	mov	r3, r18
    16e4:	19 c0       	rjmp	.+50     	; 0x1718 <vfprintf+0xe6>
    16e6:	36 fe       	sbrs	r3, 6
    16e8:	06 c0       	rjmp	.+12     	; 0x16f6 <vfprintf+0xc4>
    16ea:	8a e0       	ldi	r24, 0x0A	; 10
    16ec:	98 9e       	mul	r9, r24
    16ee:	20 0d       	add	r18, r0
    16f0:	11 24       	eor	r1, r1
    16f2:	92 2e       	mov	r9, r18
    16f4:	11 c0       	rjmp	.+34     	; 0x1718 <vfprintf+0xe6>
    16f6:	ea e0       	ldi	r30, 0x0A	; 10
    16f8:	2e 9e       	mul	r2, r30
    16fa:	20 0d       	add	r18, r0
    16fc:	11 24       	eor	r1, r1
    16fe:	22 2e       	mov	r2, r18
    1700:	f3 2d       	mov	r31, r3
    1702:	f0 62       	ori	r31, 0x20	; 32
    1704:	3f 2e       	mov	r3, r31
    1706:	08 c0       	rjmp	.+16     	; 0x1718 <vfprintf+0xe6>
    1708:	8c 36       	cpi	r24, 0x6C	; 108
    170a:	21 f4       	brne	.+8      	; 0x1714 <vfprintf+0xe2>
    170c:	83 2d       	mov	r24, r3
    170e:	80 68       	ori	r24, 0x80	; 128
    1710:	38 2e       	mov	r3, r24
    1712:	02 c0       	rjmp	.+4      	; 0x1718 <vfprintf+0xe6>
    1714:	88 36       	cpi	r24, 0x68	; 104
    1716:	41 f4       	brne	.+16     	; 0x1728 <vfprintf+0xf6>
    1718:	f7 01       	movw	r30, r14
    171a:	93 fd       	sbrc	r25, 3
    171c:	85 91       	lpm	r24, Z+
    171e:	93 ff       	sbrs	r25, 3
    1720:	81 91       	ld	r24, Z+
    1722:	7f 01       	movw	r14, r30
    1724:	81 11       	cpse	r24, r1
    1726:	b3 cf       	rjmp	.-154    	; 0x168e <vfprintf+0x5c>
    1728:	98 2f       	mov	r25, r24
    172a:	9f 7d       	andi	r25, 0xDF	; 223
    172c:	95 54       	subi	r25, 0x45	; 69
    172e:	93 30       	cpi	r25, 0x03	; 3
    1730:	28 f4       	brcc	.+10     	; 0x173c <vfprintf+0x10a>
    1732:	0c 5f       	subi	r16, 0xFC	; 252
    1734:	1f 4f       	sbci	r17, 0xFF	; 255
    1736:	9f e3       	ldi	r25, 0x3F	; 63
    1738:	99 83       	std	Y+1, r25	; 0x01
    173a:	0d c0       	rjmp	.+26     	; 0x1756 <vfprintf+0x124>
    173c:	83 36       	cpi	r24, 0x63	; 99
    173e:	31 f0       	breq	.+12     	; 0x174c <vfprintf+0x11a>
    1740:	83 37       	cpi	r24, 0x73	; 115
    1742:	71 f0       	breq	.+28     	; 0x1760 <vfprintf+0x12e>
    1744:	83 35       	cpi	r24, 0x53	; 83
    1746:	09 f0       	breq	.+2      	; 0x174a <vfprintf+0x118>
    1748:	59 c0       	rjmp	.+178    	; 0x17fc <vfprintf+0x1ca>
    174a:	21 c0       	rjmp	.+66     	; 0x178e <vfprintf+0x15c>
    174c:	f8 01       	movw	r30, r16
    174e:	80 81       	ld	r24, Z
    1750:	89 83       	std	Y+1, r24	; 0x01
    1752:	0e 5f       	subi	r16, 0xFE	; 254
    1754:	1f 4f       	sbci	r17, 0xFF	; 255
    1756:	88 24       	eor	r8, r8
    1758:	83 94       	inc	r8
    175a:	91 2c       	mov	r9, r1
    175c:	53 01       	movw	r10, r6
    175e:	13 c0       	rjmp	.+38     	; 0x1786 <vfprintf+0x154>
    1760:	28 01       	movw	r4, r16
    1762:	f2 e0       	ldi	r31, 0x02	; 2
    1764:	4f 0e       	add	r4, r31
    1766:	51 1c       	adc	r5, r1
    1768:	f8 01       	movw	r30, r16
    176a:	a0 80       	ld	r10, Z
    176c:	b1 80       	ldd	r11, Z+1	; 0x01
    176e:	36 fe       	sbrs	r3, 6
    1770:	03 c0       	rjmp	.+6      	; 0x1778 <vfprintf+0x146>
    1772:	69 2d       	mov	r22, r9
    1774:	70 e0       	ldi	r23, 0x00	; 0
    1776:	02 c0       	rjmp	.+4      	; 0x177c <vfprintf+0x14a>
    1778:	6f ef       	ldi	r22, 0xFF	; 255
    177a:	7f ef       	ldi	r23, 0xFF	; 255
    177c:	c5 01       	movw	r24, r10
    177e:	0e 94 05 0d 	call	0x1a0a	; 0x1a0a <strnlen>
    1782:	4c 01       	movw	r8, r24
    1784:	82 01       	movw	r16, r4
    1786:	f3 2d       	mov	r31, r3
    1788:	ff 77       	andi	r31, 0x7F	; 127
    178a:	3f 2e       	mov	r3, r31
    178c:	16 c0       	rjmp	.+44     	; 0x17ba <vfprintf+0x188>
    178e:	28 01       	movw	r4, r16
    1790:	22 e0       	ldi	r18, 0x02	; 2
    1792:	42 0e       	add	r4, r18
    1794:	51 1c       	adc	r5, r1
    1796:	f8 01       	movw	r30, r16
    1798:	a0 80       	ld	r10, Z
    179a:	b1 80       	ldd	r11, Z+1	; 0x01
    179c:	36 fe       	sbrs	r3, 6
    179e:	03 c0       	rjmp	.+6      	; 0x17a6 <vfprintf+0x174>
    17a0:	69 2d       	mov	r22, r9
    17a2:	70 e0       	ldi	r23, 0x00	; 0
    17a4:	02 c0       	rjmp	.+4      	; 0x17aa <vfprintf+0x178>
    17a6:	6f ef       	ldi	r22, 0xFF	; 255
    17a8:	7f ef       	ldi	r23, 0xFF	; 255
    17aa:	c5 01       	movw	r24, r10
    17ac:	0e 94 fa 0c 	call	0x19f4	; 0x19f4 <strnlen_P>
    17b0:	4c 01       	movw	r8, r24
    17b2:	f3 2d       	mov	r31, r3
    17b4:	f0 68       	ori	r31, 0x80	; 128
    17b6:	3f 2e       	mov	r3, r31
    17b8:	82 01       	movw	r16, r4
    17ba:	33 fc       	sbrc	r3, 3
    17bc:	1b c0       	rjmp	.+54     	; 0x17f4 <vfprintf+0x1c2>
    17be:	82 2d       	mov	r24, r2
    17c0:	90 e0       	ldi	r25, 0x00	; 0
    17c2:	88 16       	cp	r8, r24
    17c4:	99 06       	cpc	r9, r25
    17c6:	b0 f4       	brcc	.+44     	; 0x17f4 <vfprintf+0x1c2>
    17c8:	b6 01       	movw	r22, r12
    17ca:	80 e2       	ldi	r24, 0x20	; 32
    17cc:	90 e0       	ldi	r25, 0x00	; 0
    17ce:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <fputc>
    17d2:	2a 94       	dec	r2
    17d4:	f4 cf       	rjmp	.-24     	; 0x17be <vfprintf+0x18c>
    17d6:	f5 01       	movw	r30, r10
    17d8:	37 fc       	sbrc	r3, 7
    17da:	85 91       	lpm	r24, Z+
    17dc:	37 fe       	sbrs	r3, 7
    17de:	81 91       	ld	r24, Z+
    17e0:	5f 01       	movw	r10, r30
    17e2:	b6 01       	movw	r22, r12
    17e4:	90 e0       	ldi	r25, 0x00	; 0
    17e6:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <fputc>
    17ea:	21 10       	cpse	r2, r1
    17ec:	2a 94       	dec	r2
    17ee:	21 e0       	ldi	r18, 0x01	; 1
    17f0:	82 1a       	sub	r8, r18
    17f2:	91 08       	sbc	r9, r1
    17f4:	81 14       	cp	r8, r1
    17f6:	91 04       	cpc	r9, r1
    17f8:	71 f7       	brne	.-36     	; 0x17d6 <vfprintf+0x1a4>
    17fa:	e8 c0       	rjmp	.+464    	; 0x19cc <vfprintf+0x39a>
    17fc:	84 36       	cpi	r24, 0x64	; 100
    17fe:	11 f0       	breq	.+4      	; 0x1804 <vfprintf+0x1d2>
    1800:	89 36       	cpi	r24, 0x69	; 105
    1802:	41 f5       	brne	.+80     	; 0x1854 <vfprintf+0x222>
    1804:	f8 01       	movw	r30, r16
    1806:	37 fe       	sbrs	r3, 7
    1808:	07 c0       	rjmp	.+14     	; 0x1818 <vfprintf+0x1e6>
    180a:	60 81       	ld	r22, Z
    180c:	71 81       	ldd	r23, Z+1	; 0x01
    180e:	82 81       	ldd	r24, Z+2	; 0x02
    1810:	93 81       	ldd	r25, Z+3	; 0x03
    1812:	0c 5f       	subi	r16, 0xFC	; 252
    1814:	1f 4f       	sbci	r17, 0xFF	; 255
    1816:	08 c0       	rjmp	.+16     	; 0x1828 <vfprintf+0x1f6>
    1818:	60 81       	ld	r22, Z
    181a:	71 81       	ldd	r23, Z+1	; 0x01
    181c:	07 2e       	mov	r0, r23
    181e:	00 0c       	add	r0, r0
    1820:	88 0b       	sbc	r24, r24
    1822:	99 0b       	sbc	r25, r25
    1824:	0e 5f       	subi	r16, 0xFE	; 254
    1826:	1f 4f       	sbci	r17, 0xFF	; 255
    1828:	f3 2d       	mov	r31, r3
    182a:	ff 76       	andi	r31, 0x6F	; 111
    182c:	3f 2e       	mov	r3, r31
    182e:	97 ff       	sbrs	r25, 7
    1830:	09 c0       	rjmp	.+18     	; 0x1844 <vfprintf+0x212>
    1832:	90 95       	com	r25
    1834:	80 95       	com	r24
    1836:	70 95       	com	r23
    1838:	61 95       	neg	r22
    183a:	7f 4f       	sbci	r23, 0xFF	; 255
    183c:	8f 4f       	sbci	r24, 0xFF	; 255
    183e:	9f 4f       	sbci	r25, 0xFF	; 255
    1840:	f0 68       	ori	r31, 0x80	; 128
    1842:	3f 2e       	mov	r3, r31
    1844:	2a e0       	ldi	r18, 0x0A	; 10
    1846:	30 e0       	ldi	r19, 0x00	; 0
    1848:	a3 01       	movw	r20, r6
    184a:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <__ultoa_invert>
    184e:	88 2e       	mov	r8, r24
    1850:	86 18       	sub	r8, r6
    1852:	45 c0       	rjmp	.+138    	; 0x18de <vfprintf+0x2ac>
    1854:	85 37       	cpi	r24, 0x75	; 117
    1856:	31 f4       	brne	.+12     	; 0x1864 <vfprintf+0x232>
    1858:	23 2d       	mov	r18, r3
    185a:	2f 7e       	andi	r18, 0xEF	; 239
    185c:	b2 2e       	mov	r11, r18
    185e:	2a e0       	ldi	r18, 0x0A	; 10
    1860:	30 e0       	ldi	r19, 0x00	; 0
    1862:	25 c0       	rjmp	.+74     	; 0x18ae <vfprintf+0x27c>
    1864:	93 2d       	mov	r25, r3
    1866:	99 7f       	andi	r25, 0xF9	; 249
    1868:	b9 2e       	mov	r11, r25
    186a:	8f 36       	cpi	r24, 0x6F	; 111
    186c:	c1 f0       	breq	.+48     	; 0x189e <vfprintf+0x26c>
    186e:	18 f4       	brcc	.+6      	; 0x1876 <vfprintf+0x244>
    1870:	88 35       	cpi	r24, 0x58	; 88
    1872:	79 f0       	breq	.+30     	; 0x1892 <vfprintf+0x260>
    1874:	b5 c0       	rjmp	.+362    	; 0x19e0 <vfprintf+0x3ae>
    1876:	80 37       	cpi	r24, 0x70	; 112
    1878:	19 f0       	breq	.+6      	; 0x1880 <vfprintf+0x24e>
    187a:	88 37       	cpi	r24, 0x78	; 120
    187c:	21 f0       	breq	.+8      	; 0x1886 <vfprintf+0x254>
    187e:	b0 c0       	rjmp	.+352    	; 0x19e0 <vfprintf+0x3ae>
    1880:	e9 2f       	mov	r30, r25
    1882:	e0 61       	ori	r30, 0x10	; 16
    1884:	be 2e       	mov	r11, r30
    1886:	b4 fe       	sbrs	r11, 4
    1888:	0d c0       	rjmp	.+26     	; 0x18a4 <vfprintf+0x272>
    188a:	fb 2d       	mov	r31, r11
    188c:	f4 60       	ori	r31, 0x04	; 4
    188e:	bf 2e       	mov	r11, r31
    1890:	09 c0       	rjmp	.+18     	; 0x18a4 <vfprintf+0x272>
    1892:	34 fe       	sbrs	r3, 4
    1894:	0a c0       	rjmp	.+20     	; 0x18aa <vfprintf+0x278>
    1896:	29 2f       	mov	r18, r25
    1898:	26 60       	ori	r18, 0x06	; 6
    189a:	b2 2e       	mov	r11, r18
    189c:	06 c0       	rjmp	.+12     	; 0x18aa <vfprintf+0x278>
    189e:	28 e0       	ldi	r18, 0x08	; 8
    18a0:	30 e0       	ldi	r19, 0x00	; 0
    18a2:	05 c0       	rjmp	.+10     	; 0x18ae <vfprintf+0x27c>
    18a4:	20 e1       	ldi	r18, 0x10	; 16
    18a6:	30 e0       	ldi	r19, 0x00	; 0
    18a8:	02 c0       	rjmp	.+4      	; 0x18ae <vfprintf+0x27c>
    18aa:	20 e1       	ldi	r18, 0x10	; 16
    18ac:	32 e0       	ldi	r19, 0x02	; 2
    18ae:	f8 01       	movw	r30, r16
    18b0:	b7 fe       	sbrs	r11, 7
    18b2:	07 c0       	rjmp	.+14     	; 0x18c2 <vfprintf+0x290>
    18b4:	60 81       	ld	r22, Z
    18b6:	71 81       	ldd	r23, Z+1	; 0x01
    18b8:	82 81       	ldd	r24, Z+2	; 0x02
    18ba:	93 81       	ldd	r25, Z+3	; 0x03
    18bc:	0c 5f       	subi	r16, 0xFC	; 252
    18be:	1f 4f       	sbci	r17, 0xFF	; 255
    18c0:	06 c0       	rjmp	.+12     	; 0x18ce <vfprintf+0x29c>
    18c2:	60 81       	ld	r22, Z
    18c4:	71 81       	ldd	r23, Z+1	; 0x01
    18c6:	80 e0       	ldi	r24, 0x00	; 0
    18c8:	90 e0       	ldi	r25, 0x00	; 0
    18ca:	0e 5f       	subi	r16, 0xFE	; 254
    18cc:	1f 4f       	sbci	r17, 0xFF	; 255
    18ce:	a3 01       	movw	r20, r6
    18d0:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <__ultoa_invert>
    18d4:	88 2e       	mov	r8, r24
    18d6:	86 18       	sub	r8, r6
    18d8:	fb 2d       	mov	r31, r11
    18da:	ff 77       	andi	r31, 0x7F	; 127
    18dc:	3f 2e       	mov	r3, r31
    18de:	36 fe       	sbrs	r3, 6
    18e0:	0d c0       	rjmp	.+26     	; 0x18fc <vfprintf+0x2ca>
    18e2:	23 2d       	mov	r18, r3
    18e4:	2e 7f       	andi	r18, 0xFE	; 254
    18e6:	a2 2e       	mov	r10, r18
    18e8:	89 14       	cp	r8, r9
    18ea:	58 f4       	brcc	.+22     	; 0x1902 <vfprintf+0x2d0>
    18ec:	34 fe       	sbrs	r3, 4
    18ee:	0b c0       	rjmp	.+22     	; 0x1906 <vfprintf+0x2d4>
    18f0:	32 fc       	sbrc	r3, 2
    18f2:	09 c0       	rjmp	.+18     	; 0x1906 <vfprintf+0x2d4>
    18f4:	83 2d       	mov	r24, r3
    18f6:	8e 7e       	andi	r24, 0xEE	; 238
    18f8:	a8 2e       	mov	r10, r24
    18fa:	05 c0       	rjmp	.+10     	; 0x1906 <vfprintf+0x2d4>
    18fc:	b8 2c       	mov	r11, r8
    18fe:	a3 2c       	mov	r10, r3
    1900:	03 c0       	rjmp	.+6      	; 0x1908 <vfprintf+0x2d6>
    1902:	b8 2c       	mov	r11, r8
    1904:	01 c0       	rjmp	.+2      	; 0x1908 <vfprintf+0x2d6>
    1906:	b9 2c       	mov	r11, r9
    1908:	a4 fe       	sbrs	r10, 4
    190a:	0f c0       	rjmp	.+30     	; 0x192a <vfprintf+0x2f8>
    190c:	fe 01       	movw	r30, r28
    190e:	e8 0d       	add	r30, r8
    1910:	f1 1d       	adc	r31, r1
    1912:	80 81       	ld	r24, Z
    1914:	80 33       	cpi	r24, 0x30	; 48
    1916:	21 f4       	brne	.+8      	; 0x1920 <vfprintf+0x2ee>
    1918:	9a 2d       	mov	r25, r10
    191a:	99 7e       	andi	r25, 0xE9	; 233
    191c:	a9 2e       	mov	r10, r25
    191e:	09 c0       	rjmp	.+18     	; 0x1932 <vfprintf+0x300>
    1920:	a2 fe       	sbrs	r10, 2
    1922:	06 c0       	rjmp	.+12     	; 0x1930 <vfprintf+0x2fe>
    1924:	b3 94       	inc	r11
    1926:	b3 94       	inc	r11
    1928:	04 c0       	rjmp	.+8      	; 0x1932 <vfprintf+0x300>
    192a:	8a 2d       	mov	r24, r10
    192c:	86 78       	andi	r24, 0x86	; 134
    192e:	09 f0       	breq	.+2      	; 0x1932 <vfprintf+0x300>
    1930:	b3 94       	inc	r11
    1932:	a3 fc       	sbrc	r10, 3
    1934:	11 c0       	rjmp	.+34     	; 0x1958 <vfprintf+0x326>
    1936:	a0 fe       	sbrs	r10, 0
    1938:	06 c0       	rjmp	.+12     	; 0x1946 <vfprintf+0x314>
    193a:	b2 14       	cp	r11, r2
    193c:	88 f4       	brcc	.+34     	; 0x1960 <vfprintf+0x32e>
    193e:	28 0c       	add	r2, r8
    1940:	92 2c       	mov	r9, r2
    1942:	9b 18       	sub	r9, r11
    1944:	0e c0       	rjmp	.+28     	; 0x1962 <vfprintf+0x330>
    1946:	b2 14       	cp	r11, r2
    1948:	60 f4       	brcc	.+24     	; 0x1962 <vfprintf+0x330>
    194a:	b6 01       	movw	r22, r12
    194c:	80 e2       	ldi	r24, 0x20	; 32
    194e:	90 e0       	ldi	r25, 0x00	; 0
    1950:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <fputc>
    1954:	b3 94       	inc	r11
    1956:	f7 cf       	rjmp	.-18     	; 0x1946 <vfprintf+0x314>
    1958:	b2 14       	cp	r11, r2
    195a:	18 f4       	brcc	.+6      	; 0x1962 <vfprintf+0x330>
    195c:	2b 18       	sub	r2, r11
    195e:	02 c0       	rjmp	.+4      	; 0x1964 <vfprintf+0x332>
    1960:	98 2c       	mov	r9, r8
    1962:	21 2c       	mov	r2, r1
    1964:	a4 fe       	sbrs	r10, 4
    1966:	10 c0       	rjmp	.+32     	; 0x1988 <vfprintf+0x356>
    1968:	b6 01       	movw	r22, r12
    196a:	80 e3       	ldi	r24, 0x30	; 48
    196c:	90 e0       	ldi	r25, 0x00	; 0
    196e:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <fputc>
    1972:	a2 fe       	sbrs	r10, 2
    1974:	17 c0       	rjmp	.+46     	; 0x19a4 <vfprintf+0x372>
    1976:	a1 fc       	sbrc	r10, 1
    1978:	03 c0       	rjmp	.+6      	; 0x1980 <vfprintf+0x34e>
    197a:	88 e7       	ldi	r24, 0x78	; 120
    197c:	90 e0       	ldi	r25, 0x00	; 0
    197e:	02 c0       	rjmp	.+4      	; 0x1984 <vfprintf+0x352>
    1980:	88 e5       	ldi	r24, 0x58	; 88
    1982:	90 e0       	ldi	r25, 0x00	; 0
    1984:	b6 01       	movw	r22, r12
    1986:	0c c0       	rjmp	.+24     	; 0x19a0 <vfprintf+0x36e>
    1988:	8a 2d       	mov	r24, r10
    198a:	86 78       	andi	r24, 0x86	; 134
    198c:	59 f0       	breq	.+22     	; 0x19a4 <vfprintf+0x372>
    198e:	a1 fe       	sbrs	r10, 1
    1990:	02 c0       	rjmp	.+4      	; 0x1996 <vfprintf+0x364>
    1992:	8b e2       	ldi	r24, 0x2B	; 43
    1994:	01 c0       	rjmp	.+2      	; 0x1998 <vfprintf+0x366>
    1996:	80 e2       	ldi	r24, 0x20	; 32
    1998:	a7 fc       	sbrc	r10, 7
    199a:	8d e2       	ldi	r24, 0x2D	; 45
    199c:	b6 01       	movw	r22, r12
    199e:	90 e0       	ldi	r25, 0x00	; 0
    19a0:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <fputc>
    19a4:	89 14       	cp	r8, r9
    19a6:	38 f4       	brcc	.+14     	; 0x19b6 <vfprintf+0x384>
    19a8:	b6 01       	movw	r22, r12
    19aa:	80 e3       	ldi	r24, 0x30	; 48
    19ac:	90 e0       	ldi	r25, 0x00	; 0
    19ae:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <fputc>
    19b2:	9a 94       	dec	r9
    19b4:	f7 cf       	rjmp	.-18     	; 0x19a4 <vfprintf+0x372>
    19b6:	8a 94       	dec	r8
    19b8:	f3 01       	movw	r30, r6
    19ba:	e8 0d       	add	r30, r8
    19bc:	f1 1d       	adc	r31, r1
    19be:	80 81       	ld	r24, Z
    19c0:	b6 01       	movw	r22, r12
    19c2:	90 e0       	ldi	r25, 0x00	; 0
    19c4:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <fputc>
    19c8:	81 10       	cpse	r8, r1
    19ca:	f5 cf       	rjmp	.-22     	; 0x19b6 <vfprintf+0x384>
    19cc:	22 20       	and	r2, r2
    19ce:	09 f4       	brne	.+2      	; 0x19d2 <vfprintf+0x3a0>
    19d0:	42 ce       	rjmp	.-892    	; 0x1656 <vfprintf+0x24>
    19d2:	b6 01       	movw	r22, r12
    19d4:	80 e2       	ldi	r24, 0x20	; 32
    19d6:	90 e0       	ldi	r25, 0x00	; 0
    19d8:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <fputc>
    19dc:	2a 94       	dec	r2
    19de:	f6 cf       	rjmp	.-20     	; 0x19cc <vfprintf+0x39a>
    19e0:	f6 01       	movw	r30, r12
    19e2:	86 81       	ldd	r24, Z+6	; 0x06
    19e4:	97 81       	ldd	r25, Z+7	; 0x07
    19e6:	02 c0       	rjmp	.+4      	; 0x19ec <vfprintf+0x3ba>
    19e8:	8f ef       	ldi	r24, 0xFF	; 255
    19ea:	9f ef       	ldi	r25, 0xFF	; 255
    19ec:	2b 96       	adiw	r28, 0x0b	; 11
    19ee:	e2 e1       	ldi	r30, 0x12	; 18
    19f0:	0c 94 c6 0d 	jmp	0x1b8c	; 0x1b8c <__epilogue_restores__>

000019f4 <strnlen_P>:
    19f4:	fc 01       	movw	r30, r24
    19f6:	05 90       	lpm	r0, Z+
    19f8:	61 50       	subi	r22, 0x01	; 1
    19fa:	70 40       	sbci	r23, 0x00	; 0
    19fc:	01 10       	cpse	r0, r1
    19fe:	d8 f7       	brcc	.-10     	; 0x19f6 <strnlen_P+0x2>
    1a00:	80 95       	com	r24
    1a02:	90 95       	com	r25
    1a04:	8e 0f       	add	r24, r30
    1a06:	9f 1f       	adc	r25, r31
    1a08:	08 95       	ret

00001a0a <strnlen>:
    1a0a:	fc 01       	movw	r30, r24
    1a0c:	61 50       	subi	r22, 0x01	; 1
    1a0e:	70 40       	sbci	r23, 0x00	; 0
    1a10:	01 90       	ld	r0, Z+
    1a12:	01 10       	cpse	r0, r1
    1a14:	d8 f7       	brcc	.-10     	; 0x1a0c <strnlen+0x2>
    1a16:	80 95       	com	r24
    1a18:	90 95       	com	r25
    1a1a:	8e 0f       	add	r24, r30
    1a1c:	9f 1f       	adc	r25, r31
    1a1e:	08 95       	ret

00001a20 <fputc>:
    1a20:	0f 93       	push	r16
    1a22:	1f 93       	push	r17
    1a24:	cf 93       	push	r28
    1a26:	df 93       	push	r29
    1a28:	fb 01       	movw	r30, r22
    1a2a:	23 81       	ldd	r18, Z+3	; 0x03
    1a2c:	21 fd       	sbrc	r18, 1
    1a2e:	03 c0       	rjmp	.+6      	; 0x1a36 <fputc+0x16>
    1a30:	8f ef       	ldi	r24, 0xFF	; 255
    1a32:	9f ef       	ldi	r25, 0xFF	; 255
    1a34:	2c c0       	rjmp	.+88     	; 0x1a8e <fputc+0x6e>
    1a36:	22 ff       	sbrs	r18, 2
    1a38:	16 c0       	rjmp	.+44     	; 0x1a66 <fputc+0x46>
    1a3a:	46 81       	ldd	r20, Z+6	; 0x06
    1a3c:	57 81       	ldd	r21, Z+7	; 0x07
    1a3e:	24 81       	ldd	r18, Z+4	; 0x04
    1a40:	35 81       	ldd	r19, Z+5	; 0x05
    1a42:	42 17       	cp	r20, r18
    1a44:	53 07       	cpc	r21, r19
    1a46:	44 f4       	brge	.+16     	; 0x1a58 <fputc+0x38>
    1a48:	a0 81       	ld	r26, Z
    1a4a:	b1 81       	ldd	r27, Z+1	; 0x01
    1a4c:	9d 01       	movw	r18, r26
    1a4e:	2f 5f       	subi	r18, 0xFF	; 255
    1a50:	3f 4f       	sbci	r19, 0xFF	; 255
    1a52:	31 83       	std	Z+1, r19	; 0x01
    1a54:	20 83       	st	Z, r18
    1a56:	8c 93       	st	X, r24
    1a58:	26 81       	ldd	r18, Z+6	; 0x06
    1a5a:	37 81       	ldd	r19, Z+7	; 0x07
    1a5c:	2f 5f       	subi	r18, 0xFF	; 255
    1a5e:	3f 4f       	sbci	r19, 0xFF	; 255
    1a60:	37 83       	std	Z+7, r19	; 0x07
    1a62:	26 83       	std	Z+6, r18	; 0x06
    1a64:	14 c0       	rjmp	.+40     	; 0x1a8e <fputc+0x6e>
    1a66:	8b 01       	movw	r16, r22
    1a68:	ec 01       	movw	r28, r24
    1a6a:	fb 01       	movw	r30, r22
    1a6c:	00 84       	ldd	r0, Z+8	; 0x08
    1a6e:	f1 85       	ldd	r31, Z+9	; 0x09
    1a70:	e0 2d       	mov	r30, r0
    1a72:	09 95       	icall
    1a74:	89 2b       	or	r24, r25
    1a76:	e1 f6       	brne	.-72     	; 0x1a30 <fputc+0x10>
    1a78:	d8 01       	movw	r26, r16
    1a7a:	16 96       	adiw	r26, 0x06	; 6
    1a7c:	8d 91       	ld	r24, X+
    1a7e:	9c 91       	ld	r25, X
    1a80:	17 97       	sbiw	r26, 0x07	; 7
    1a82:	01 96       	adiw	r24, 0x01	; 1
    1a84:	17 96       	adiw	r26, 0x07	; 7
    1a86:	9c 93       	st	X, r25
    1a88:	8e 93       	st	-X, r24
    1a8a:	16 97       	sbiw	r26, 0x06	; 6
    1a8c:	ce 01       	movw	r24, r28
    1a8e:	df 91       	pop	r29
    1a90:	cf 91       	pop	r28
    1a92:	1f 91       	pop	r17
    1a94:	0f 91       	pop	r16
    1a96:	08 95       	ret

00001a98 <__ultoa_invert>:
    1a98:	fa 01       	movw	r30, r20
    1a9a:	aa 27       	eor	r26, r26
    1a9c:	28 30       	cpi	r18, 0x08	; 8
    1a9e:	51 f1       	breq	.+84     	; 0x1af4 <__ultoa_invert+0x5c>
    1aa0:	20 31       	cpi	r18, 0x10	; 16
    1aa2:	81 f1       	breq	.+96     	; 0x1b04 <__ultoa_invert+0x6c>
    1aa4:	e8 94       	clt
    1aa6:	6f 93       	push	r22
    1aa8:	6e 7f       	andi	r22, 0xFE	; 254
    1aaa:	6e 5f       	subi	r22, 0xFE	; 254
    1aac:	7f 4f       	sbci	r23, 0xFF	; 255
    1aae:	8f 4f       	sbci	r24, 0xFF	; 255
    1ab0:	9f 4f       	sbci	r25, 0xFF	; 255
    1ab2:	af 4f       	sbci	r26, 0xFF	; 255
    1ab4:	b1 e0       	ldi	r27, 0x01	; 1
    1ab6:	3e d0       	rcall	.+124    	; 0x1b34 <__ultoa_invert+0x9c>
    1ab8:	b4 e0       	ldi	r27, 0x04	; 4
    1aba:	3c d0       	rcall	.+120    	; 0x1b34 <__ultoa_invert+0x9c>
    1abc:	67 0f       	add	r22, r23
    1abe:	78 1f       	adc	r23, r24
    1ac0:	89 1f       	adc	r24, r25
    1ac2:	9a 1f       	adc	r25, r26
    1ac4:	a1 1d       	adc	r26, r1
    1ac6:	68 0f       	add	r22, r24
    1ac8:	79 1f       	adc	r23, r25
    1aca:	8a 1f       	adc	r24, r26
    1acc:	91 1d       	adc	r25, r1
    1ace:	a1 1d       	adc	r26, r1
    1ad0:	6a 0f       	add	r22, r26
    1ad2:	71 1d       	adc	r23, r1
    1ad4:	81 1d       	adc	r24, r1
    1ad6:	91 1d       	adc	r25, r1
    1ad8:	a1 1d       	adc	r26, r1
    1ada:	20 d0       	rcall	.+64     	; 0x1b1c <__ultoa_invert+0x84>
    1adc:	09 f4       	brne	.+2      	; 0x1ae0 <__ultoa_invert+0x48>
    1ade:	68 94       	set
    1ae0:	3f 91       	pop	r19
    1ae2:	2a e0       	ldi	r18, 0x0A	; 10
    1ae4:	26 9f       	mul	r18, r22
    1ae6:	11 24       	eor	r1, r1
    1ae8:	30 19       	sub	r19, r0
    1aea:	30 5d       	subi	r19, 0xD0	; 208
    1aec:	31 93       	st	Z+, r19
    1aee:	de f6       	brtc	.-74     	; 0x1aa6 <__ultoa_invert+0xe>
    1af0:	cf 01       	movw	r24, r30
    1af2:	08 95       	ret
    1af4:	46 2f       	mov	r20, r22
    1af6:	47 70       	andi	r20, 0x07	; 7
    1af8:	40 5d       	subi	r20, 0xD0	; 208
    1afa:	41 93       	st	Z+, r20
    1afc:	b3 e0       	ldi	r27, 0x03	; 3
    1afe:	0f d0       	rcall	.+30     	; 0x1b1e <__ultoa_invert+0x86>
    1b00:	c9 f7       	brne	.-14     	; 0x1af4 <__ultoa_invert+0x5c>
    1b02:	f6 cf       	rjmp	.-20     	; 0x1af0 <__ultoa_invert+0x58>
    1b04:	46 2f       	mov	r20, r22
    1b06:	4f 70       	andi	r20, 0x0F	; 15
    1b08:	40 5d       	subi	r20, 0xD0	; 208
    1b0a:	4a 33       	cpi	r20, 0x3A	; 58
    1b0c:	18 f0       	brcs	.+6      	; 0x1b14 <__ultoa_invert+0x7c>
    1b0e:	49 5d       	subi	r20, 0xD9	; 217
    1b10:	31 fd       	sbrc	r19, 1
    1b12:	40 52       	subi	r20, 0x20	; 32
    1b14:	41 93       	st	Z+, r20
    1b16:	02 d0       	rcall	.+4      	; 0x1b1c <__ultoa_invert+0x84>
    1b18:	a9 f7       	brne	.-22     	; 0x1b04 <__ultoa_invert+0x6c>
    1b1a:	ea cf       	rjmp	.-44     	; 0x1af0 <__ultoa_invert+0x58>
    1b1c:	b4 e0       	ldi	r27, 0x04	; 4
    1b1e:	a6 95       	lsr	r26
    1b20:	97 95       	ror	r25
    1b22:	87 95       	ror	r24
    1b24:	77 95       	ror	r23
    1b26:	67 95       	ror	r22
    1b28:	ba 95       	dec	r27
    1b2a:	c9 f7       	brne	.-14     	; 0x1b1e <__ultoa_invert+0x86>
    1b2c:	00 97       	sbiw	r24, 0x00	; 0
    1b2e:	61 05       	cpc	r22, r1
    1b30:	71 05       	cpc	r23, r1
    1b32:	08 95       	ret
    1b34:	9b 01       	movw	r18, r22
    1b36:	ac 01       	movw	r20, r24
    1b38:	0a 2e       	mov	r0, r26
    1b3a:	06 94       	lsr	r0
    1b3c:	57 95       	ror	r21
    1b3e:	47 95       	ror	r20
    1b40:	37 95       	ror	r19
    1b42:	27 95       	ror	r18
    1b44:	ba 95       	dec	r27
    1b46:	c9 f7       	brne	.-14     	; 0x1b3a <__ultoa_invert+0xa2>
    1b48:	62 0f       	add	r22, r18
    1b4a:	73 1f       	adc	r23, r19
    1b4c:	84 1f       	adc	r24, r20
    1b4e:	95 1f       	adc	r25, r21
    1b50:	a0 1d       	adc	r26, r0
    1b52:	08 95       	ret

00001b54 <__prologue_saves__>:
    1b54:	2f 92       	push	r2
    1b56:	3f 92       	push	r3
    1b58:	4f 92       	push	r4
    1b5a:	5f 92       	push	r5
    1b5c:	6f 92       	push	r6
    1b5e:	7f 92       	push	r7
    1b60:	8f 92       	push	r8
    1b62:	9f 92       	push	r9
    1b64:	af 92       	push	r10
    1b66:	bf 92       	push	r11
    1b68:	cf 92       	push	r12
    1b6a:	df 92       	push	r13
    1b6c:	ef 92       	push	r14
    1b6e:	ff 92       	push	r15
    1b70:	0f 93       	push	r16
    1b72:	1f 93       	push	r17
    1b74:	cf 93       	push	r28
    1b76:	df 93       	push	r29
    1b78:	cd b7       	in	r28, 0x3d	; 61
    1b7a:	de b7       	in	r29, 0x3e	; 62
    1b7c:	ca 1b       	sub	r28, r26
    1b7e:	db 0b       	sbc	r29, r27
    1b80:	0f b6       	in	r0, 0x3f	; 63
    1b82:	f8 94       	cli
    1b84:	de bf       	out	0x3e, r29	; 62
    1b86:	0f be       	out	0x3f, r0	; 63
    1b88:	cd bf       	out	0x3d, r28	; 61
    1b8a:	09 94       	ijmp

00001b8c <__epilogue_restores__>:
    1b8c:	2a 88       	ldd	r2, Y+18	; 0x12
    1b8e:	39 88       	ldd	r3, Y+17	; 0x11
    1b90:	48 88       	ldd	r4, Y+16	; 0x10
    1b92:	5f 84       	ldd	r5, Y+15	; 0x0f
    1b94:	6e 84       	ldd	r6, Y+14	; 0x0e
    1b96:	7d 84       	ldd	r7, Y+13	; 0x0d
    1b98:	8c 84       	ldd	r8, Y+12	; 0x0c
    1b9a:	9b 84       	ldd	r9, Y+11	; 0x0b
    1b9c:	aa 84       	ldd	r10, Y+10	; 0x0a
    1b9e:	b9 84       	ldd	r11, Y+9	; 0x09
    1ba0:	c8 84       	ldd	r12, Y+8	; 0x08
    1ba2:	df 80       	ldd	r13, Y+7	; 0x07
    1ba4:	ee 80       	ldd	r14, Y+6	; 0x06
    1ba6:	fd 80       	ldd	r15, Y+5	; 0x05
    1ba8:	0c 81       	ldd	r16, Y+4	; 0x04
    1baa:	1b 81       	ldd	r17, Y+3	; 0x03
    1bac:	aa 81       	ldd	r26, Y+2	; 0x02
    1bae:	b9 81       	ldd	r27, Y+1	; 0x01
    1bb0:	ce 0f       	add	r28, r30
    1bb2:	d1 1d       	adc	r29, r1
    1bb4:	0f b6       	in	r0, 0x3f	; 63
    1bb6:	f8 94       	cli
    1bb8:	de bf       	out	0x3e, r29	; 62
    1bba:	0f be       	out	0x3f, r0	; 63
    1bbc:	cd bf       	out	0x3d, r28	; 61
    1bbe:	ed 01       	movw	r28, r26
    1bc0:	08 95       	ret

00001bc2 <_exit>:
    1bc2:	f8 94       	cli

00001bc4 <__stop_program>:
    1bc4:	ff cf       	rjmp	.-2      	; 0x1bc4 <__stop_program>
